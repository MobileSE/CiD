<android.test.ActivityUnitTestCase: int getFinishedActivityRequest()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.media.MediaSyncEvent: android.media.MediaSyncEvent setAudioSessionId(int)>:<public>:<android.media.MediaSyncEvent>
<android.text.style.SuggestionSpan: void <init>(java.util.Locale,java.lang.String[],int)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.midi.MidiReceiver: void flush()>:<public>:<android.media.midi.MidiReceiver>
<android.text.StaticLayout: int getEllipsizedWidth()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(android.view.Surface)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.renderscript.Allocation: void copyFrom(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.animation.PropertyValuesHolder: void setIntValues(int[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPages(java.util.List)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.content.res.AssetManager.AssetInputStream: int read(byte[],int,int)>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.AppOpsManager: void stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)>:<public>:<android.app.AppOpsManager>
<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onClosed(android.hardware.camera2.CameraCaptureSession)>:<public>:<android.hardware.camera2.CameraCaptureSession.StateCallback>
<android.content.RestrictionsManager: void notifyPermissionResponse(java.lang.String,android.os.PersistableBundle)>:<public>:<android.content.RestrictionsManager>
<org.xmlpull.v1.XmlSerializer: void ignorableWhitespace(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.TextureView:android.view.View>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewStructure: void setClassName(java.lang.String)>:<public abstract>:<android.view.ViewStructure>
<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.media.MediaRouter.SimpleCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.HorizontalScrollView: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.transition.TransitionInflater: android.transition.TransitionInflater 'from'(android.content.Context)>:<public static>:<android.transition.TransitionInflater>
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.widget.LinearLayout: int getShowDividers()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedSqlLiteObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.view.View: int getVerticalScrollbarPosition()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.usb.UsbConstants: void <init>()>:<public>:<android.hardware.usb.UsbConstants>
<android.graphics.RectF: void <init>(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.location.Address: void setSubThoroughfare(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.opengl.GLES20: int glGetError()>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodSubtype: void <clinit>()>:<static>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>:<public>:<android.media.AudioManager>
<android.view.MotionEvent: float getAxisValue(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>:<public static>:<android.text.TextUtils>
<android.appwidget.AppWidgetHost: void deleteHost()>:<public>:<android.appwidget.AppWidgetHost>
<android.app.ActivityManager: java.util.List getRunningServices(int)>:<public>:<android.app.ActivityManager>
<android.bluetooth.BluetoothDevice: int getType()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.os.PowerManager.WakeLock: boolean isHeld()>:<public>:<android.os.PowerManager.WakeLock>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.hardware.usb.UsbAccessory: boolean equals(java.lang.Object)>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.animation.IntArrayEvaluator: void <init>()>:<public>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.content.pm.LauncherActivityInfo: java.lang.CharSequence getLabel()>:<public>:<android.content.pm.LauncherActivityInfo>
<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>:<public>:<android.view.accessibility.CaptioningManager>
<android.view.ViewParent: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public abstract>:<android.view.ViewParent>
<org.json.JSONArray: java.lang.String getString(int)>:<public>:<org.json.JSONArray>
<android.opengl.GLES31: void glProgramUniform4i(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.provider.DocumentsProvider: android.net.Uri canonicalize(android.net.Uri)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.test.ActivityInstrumentationTestCase2: void runTest()>:<protected>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ZoomControls: void hide()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>:<public final>:<android.os.Parcel>
<android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.app.Notification.WearableExtender: java.util.List getActions()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newUpdateOperation(android.net.Uri,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.preference.RingtonePreference: void <init>(android.content.Context)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.text.format.Time: void switchTimezone(java.lang.String)>:<public>:<android.text.format.Time>
<android.content.ContextWrapper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.session.MediaController: java.lang.CharSequence getQueueTitle()>:<public>:<android.media.session.MediaController>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setNumOfMatches(int)>:<public>:<android.bluetooth.le.ScanSettings.Builder>
<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>:<protected>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.preference.EditTextPreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.VideoView: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.app.usage.ConfigurationStats: long getTotalTimeActive()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.app.Notification.Action.Extender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>:<public abstract>:<android.app.Notification.Action.Extender>
<android.graphics.Canvas: void drawOval(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setIntegerPart(java.lang.String)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.telecom.Call: int getState()>:<public>:<android.telecom.Call>
<android.view.WindowId: void unregisterFocusObserver(android.view.WindowId.FocusObserver)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.widget.Gallery.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.text.method.BaseMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>:<public>:<android.telephony.TelephonyManager>
<android.view.View: void setPivotY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.RectEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.gesture.Gesture: float getLength()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup)>:<public static>:<android.transition.TransitionManager>
<android.app.FragmentManager: void popBackStack(java.lang.String,int)>:<public abstract>:<android.app.FragmentManager>
<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.view.View: void dispatchWindowVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.LocalSocketAddress.Namespace: void <clinit>()>:<static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.session.PlaybackState: java.util.List getCustomActions()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.ActionMode: int getType()>:<public>:<android.view.ActionMode>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setDeviceAddress(java.lang.String)>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.app.ActivityGroup: void onStop()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.pdf.PrintedPdfDocument: int getPageWidth()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.preference.EditTextPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.ImageView: android.graphics.PorterDuff.Mode getImageTintMode()>:<public>:<android.widget.ImageView:android.view.View>
<android.app.Fragment: boolean isResumed()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>:<public>:<android.graphics.Paint>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.accessibility.AccessibilityRecord: void setScrollX(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.test.mock.MockDialogInterface: void dismiss()>:<public>:<android.test.mock.MockDialogInterface:android.content.DialogInterface>
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>:<public static final>:<android.webkit.URLUtil>
<android.widget.Adapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.Adapter>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.widget.TextView: void cancelLongPress()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.nfc.tech.NfcV: byte getDsfId()>:<public>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.provider.MediaStore.Audio.Genres: void <init>()>:<public>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setBufferedPosition(long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>:<public final>:<android.content.res.Resources>
<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.net.http.HttpResponseCache: long size()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.animation.ValueAnimator: void setCurrentFraction(float)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>:<public static>:<android.graphics.Typeface>
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()>:<public static>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.text.method.DateKeyListener: int getInputType()>:<public>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.telephony.SmsMessage.MessageClass: void <clinit>()>:<static>:<android.telephony.SmsMessage.MessageClass:java.lang.Enum>
<android.location.Location: java.lang.String convert(double,int)>:<public static>:<android.location.Location:android.os.Parcelable>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.DTDHandler getDTDHandler()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.opengl.ETC1Util.ETC1Texture: void <init>(int,int,java.nio.ByteBuffer)>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setDescription(java.lang.CharSequence)>:<public>:<android.media.MediaDescription.Builder>
<android.location.Criteria: int getAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.RectF: void set(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.system.Os: java.lang.String if_indextoname(int)>:<public static>:<android.system.Os>
<android.view.ViewConfiguration: int getScaledOverscrollDistance()>:<public>:<android.view.ViewConfiguration>
<android.view.MotionEvent: float getHistoricalTouchMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.transition.Fade: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.service.wallpaper.WallpaperService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothGattCallback: void <init>()>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.app.MediaRouteButton: void setRouteTypes(int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.net.wifi.p2p.WifiP2pDeviceList: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager.OnDismissListener)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>:<public>:<android.content.ContentProviderClient>
<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>:<public abstract>:<android.view.SurfaceHolder>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.util.Base64InputStream: boolean markSupported()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.media.audiofx.AudioEffect: boolean getEnabled()>:<public>:<android.media.audiofx.AudioEffect>
<android.printservice.PrintJob: boolean isStarted()>:<public>:<android.printservice.PrintJob>
<android.widget.GridView: void setVerticalSpacing(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.app.backup.BackupDataInput: void skipEntityData()>:<public>:<android.app.backup.BackupDataInput>
<android.net.rtp.AudioGroup: void finalize()>:<protected>:<android.net.rtp.AudioGroup>
<android.widget.ImageView: boolean getCropToPadding()>:<public>:<android.widget.ImageView:android.view.View>
<android.view.Window: void setExitTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.widget.SpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.SpinnerAdapter:android.widget.Adapter>
<android.media.SoundPool: void setVolume(int,float,float)>:<public final>:<android.media.SoundPool>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setQuantity(java.lang.String)>:<public>:<android.text.style.TtsSpan.MoneyBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.Fragment.SavedState: void <clinit>()>:<static>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.MediaDrm.OnEventListener: void onEvent(android.media.MediaDrm,byte[],int,int,byte[])>:<public abstract>:<android.media.MediaDrm.OnEventListener>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>:<public>:<android.graphics.Paint>
<android.view.ViewGroup: boolean hasTransientState()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReference(java.lang.String,int)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.os.MemoryFile: void finalize()>:<protected>:<android.os.MemoryFile>
<android.view.ViewGroup: void removeViewsInLayout(int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.webkit.WebSettings: boolean supportMultipleWindows()>:<public abstract>:<android.webkit.WebSettings>
<android.location.Location: int describeContents()>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.TextView: void setText(char[],int,int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.drm.DrmManagerClient: void finalize()>:<protected>:<android.drm.DrmManagerClient>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.content.pm.PackageInstaller.SessionCallback: void onActiveChanged(int,boolean)>:<public abstract>:<android.content.pm.PackageInstaller.SessionCallback>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.opengl.GLES31: void glBindImageTexture(int,int,int,boolean,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>:<public>:<android.graphics.Interpolator>
<android.text.style.BulletSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.TouchUtils: void scrollToTop(android.test.InstrumentationTestCase,android.app.Activity,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<android.hardware.camera2.DngCreator: void close()>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.content.RestrictionsManager: java.util.List getManifestRestrictions(java.lang.String)>:<public>:<android.content.RestrictionsManager>
<android.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.FragmentController>
<android.hardware.camera2.params.MeteringRectangle: int getX()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>:<public>:<android.app.ActivityManager>
<android.renderscript.Script.LaunchOptions: int getXStart()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.transition.TransitionSet: android.transition.Transition removeTarget(int)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.service.dreams.DreamService: void finish()>:<public final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.app.job.JobInfo: void <init>()>:<>:<android.app.job.JobInfo:android.os.Parcelable>
<android.widget.PopupWindow: void setClippingEnabled(boolean)>:<public>:<android.widget.PopupWindow>
<android.telephony.PhoneNumberUtils: boolean isDialable(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.graphics.Rect: boolean contains(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.database.sqlite.SQLiteDoneException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.ScriptIntrinsicBLAS: void DSPMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.AbsListView: int getChoiceMode()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification.Action.Builder>
<android.preference.PreferenceFragment: void addPreferencesFromIntent(android.content.Intent)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>:<public final>:<android.os.Parcel>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.os.Message: void <init>()>:<public>:<android.os.Message:android.os.Parcelable>
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.service.voice.VoiceInteractionSession: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onCreate()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setBackground(android.graphics.Bitmap)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.service.notification.NotificationListenerService.RankingMap: int describeContents()>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.net.wifi.WifiConfiguration.GroupCipher: void <init>()>:<>:<android.net.wifi.WifiConfiguration.GroupCipher>
<android.graphics.PointF: void set(android.graphics.PointF)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.mtp.MtpStorageInfo: long getFreeSpace()>:<public final>:<android.mtp.MtpStorageInfo>
<android.app.Notification.CarExtender: void <init>()>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.pm.PackageManager: int getApplicationEnabledSetting(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.bluetooth.BluetoothSocket: int getMaxReceivePacketSize()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.view.inputmethod.CursorAnchorInfo: int getComposingTextStart()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.system.Os: void connect(java.io.FileDescriptor,java.net.InetAddress,int)>:<public static>:<android.system.Os>
<android.widget.SearchView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor.AutoCloseOutputStream:java.io.FileOutputStream,java.io.OutputStream>
<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.TextView: void debug(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>:<public>:<android.graphics.Paint>
<android.view.SurfaceHolder: void setFormat(int)>:<public abstract>:<android.view.SurfaceHolder>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.Menu: void removeGroup(int)>:<public abstract>:<android.view.Menu>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnSpan()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.view.View: void drawableHotspotChanged(float,float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Space: void draw(android.graphics.Canvas)>:<public>:<android.widget.Space:android.view.View>
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>:<public final>:<android.os.Parcel>
<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>:<public>:<android.view.TouchDelegate>
<android.animation.FloatEvaluator: void <init>()>:<public>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.view.LayoutInflater: android.content.Context getContext()>:<public>:<android.view.LayoutInflater>
<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>:<public>:<android.webkit.WebChromeClient>
<android.util.ArrayMap: void <init>()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.view.View: void setTransitionName(java.lang.String)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setY(int)>:<public>:<android.renderscript.Type.Builder>
<android.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.opengl.GLES31: void glProgramUniform2f(int,int,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setCountryCode(java.lang.String)>:<public>:<android.text.style.TtsSpan.TelephoneBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.ProgressBar: void onMeasure(int,int)>:<protected synchronized>:<android.widget.ProgressBar:android.view.View>
<android.app.backup.BackupManager: void dataChanged()>:<public>:<android.app.backup.BackupManager>
<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.Activity: android.app.VoiceInteractor getVoiceInteractor()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>:<public>:<android.hardware.display.DisplayManager>
<android.bluetooth.BluetoothGatt: void <init>()>:<>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.os.Debug: void startMethodTracing()>:<public static>:<android.os.Debug>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackStream(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.app.ActionBar: void setCustomView(android.view.View,android.app.ActionBar.LayoutParams)>:<public abstract>:<android.app.ActionBar>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.EditText: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setExtras(android.os.Bundle)>:<public>:<android.media.session.PlaybackState.Builder>
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode.Callback,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.telecom.PhoneAccountHandle: void <init>(android.content.ComponentName,java.lang.String)>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.media.MediaCodecInfo.EncoderCapabilities: android.util.Range getComplexityRange()>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int hashCode()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.net.wifi.WifiManager.WifiLock: void <init>(android.net.wifi.WifiManager)>:<>:<android.net.wifi.WifiManager.WifiLock>
<android.media.midi.MidiDeviceInfo: int getInputPortCount()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.text.style.ReplacementSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>:<public abstract>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.widget.AdapterView: android.view.View getSelectedView()>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.ArrayAdapter: void addAll(java.lang.Object[])>:<public transient>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.accounts.AccountsException: void <init>(java.lang.String)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.widget.ListPopupWindow: void setHeight(int)>:<public>:<android.widget.ListPopupWindow>
<android.os.ParcelFormatException: void <init>(java.lang.String)>:<public>:<android.os.ParcelFormatException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>:<public abstract>:<android.view.MenuItem>
<android.view.Window: boolean hasFeature(int)>:<public>:<android.view.Window>
<android.widget.Switch: int getThumbTextPadding()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.PaintDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<protected>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromPrivateFile(android.content.Context,java.lang.String)>:<public static>:<android.gesture.GestureLibraries>
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>:<public>:<android.telephony.TelephonyManager>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: int getMaxFrequency()>:<public>:<android.hardware.ConsumerIrManager.CarrierFrequencyRange>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.inputmethodservice.Keyboard.Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>:<public>:<android.inputmethodservice.Keyboard.Row>
<android.content.EntityIterator: void reset()>:<public abstract>:<android.content.EntityIterator:java.util.Iterator>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.telephony.IccOpenLogicalChannelResponse: int describeContents()>:<public>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.media.FaceDetector.Face: float confidence()>:<public>:<android.media.FaceDetector.Face>
<android.app.assist.AssistStructure.WindowNode: int getTop()>:<public>:<android.app.assist.AssistStructure.WindowNode>
<android.bluetooth.BluetoothDevice: boolean fetchUuidsWithSdp()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.renderscript.FieldPacker: android.renderscript.Float2 subFloat2()>:<public>:<android.renderscript.FieldPacker>
<android.net.TrafficStats: long getTotalTxBytes()>:<public static>:<android.net.TrafficStats>
<android.media.tv.TvInputService: android.media.tv.TvInputService.Session onCreateSession(java.lang.String)>:<public abstract>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.SurfaceHolder: void setFixedSize(int,int)>:<public abstract>:<android.view.SurfaceHolder>
<android.provider.DocumentsContract: java.lang.String getSearchDocumentsQuery(android.net.Uri)>:<public static>:<android.provider.DocumentsContract>
<android.app.FragmentContainer: boolean onHasView()>:<public abstract>:<android.app.FragmentContainer>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMin()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.graphics.BitmapRegionDecoder: int getHeight()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.bluetooth.BluetoothHealthAppConfiguration: int hashCode()>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.webkit.WebView: boolean onHoverEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.ActivityManager: int getLauncherLargeIconSize()>:<public>:<android.app.ActivityManager>
<android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.content.Intent: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.Notification.CarExtender.UnreadConversation: android.app.PendingIntent getReadPendingIntent()>:<public>:<android.app.Notification.CarExtender.UnreadConversation>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.media.AudioTrack: android.media.AudioFormat getFormat()>:<public>:<android.media.AudioTrack>
<android.animation.ObjectAnimator: void setFloatValues(float[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int,long)>:<public>:<android.media.AudioTrack>
<android.app.admin.DevicePolicyManager: void setPermissionPolicy(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.printservice.PrintJob: boolean isBlocked()>:<public>:<android.printservice.PrintJob>
<android.printservice.PrintJob: boolean equals(java.lang.Object)>:<public>:<android.printservice.PrintJob>
<android.telecom.Conference: android.telecom.StatusHints getStatusHints()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.widget.Toolbar: boolean showOverflowMenu()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.widget.TextView.SavedState: void <clinit>()>:<static>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.RemoteViews: java.lang.Object clone()>:<public volatile>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.AbsListView: int pointToPosition(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.ConnectivityManager.OnNetworkActiveListener: void onNetworkActive()>:<public abstract>:<android.net.ConnectivityManager.OnNetworkActiveListener>
<android.opengl.GLUtils: void <init>()>:<>:<android.opengl.GLUtils>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreferredPreviewSizeForVideo()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.Drawable>
<junit.runner.BaseTestRunner: void <init>()>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface)>:<public>:<android.hardware.camera2.CameraCaptureSession.StateCallback>
<android.widget.Switch: android.content.res.ColorStateList getTrackTintList()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.view.TextureView: boolean isAvailable()>:<public>:<android.view.TextureView:android.view.View>
<android.gesture.GesturePoint: void <init>(float,float,long)>:<public>:<android.gesture.GesturePoint>
<org.json.JSONTokener: char next(char)>:<public>:<org.json.JSONTokener>
<android.util.ArrayMap: void <init>(android.util.ArrayMap)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getViewTypeCount()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.os.Build: void <clinit>()>:<static>:<android.os.Build>
<android.hardware.camera2.params.RggbChannelVector: int hashCode()>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.graphics.drawable.AnimatedVectorDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setSupportedUriSchemes(java.util.List)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.preference.PreferenceActivity: void onHeaderClick(android.preference.PreferenceActivity.Header,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.hardware.camera2.CaptureFailure: int getSequenceId()>:<public>:<android.hardware.camera2.CaptureFailure>
<android.view.Surface.OutOfResourcesException: void <init>(java.lang.String)>:<public>:<android.view.Surface.OutOfResourcesException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.session.MediaController.Callback: void onSessionEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.Callback>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>:<public abstract>:<android.content.Context>
<android.content.AbstractThreadedSyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.media.RemoteControlClient: void setTransportControlFlags(int)>:<public>:<android.media.RemoteControlClient>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskWrites()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.text.style.TypefaceSpan: int describeContents()>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.AnalogClock: void onMeasure(int,int)>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.renderscript.Int3: void <init>(int,int,int)>:<public>:<android.renderscript.Int3>
<android.content.res.AssetFileDescriptor: void close()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.text.Layout: int getLineTop(int)>:<public abstract>:<android.text.Layout>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>:<public>:<android.app.job.JobInfo.Builder>
<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.accounts.Account: java.lang.String toString()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.content.pm.LauncherApps: android.content.pm.LauncherActivityInfo resolveActivity(android.content.Intent,android.os.UserHandle)>:<public>:<android.content.pm.LauncherApps>
<android.provider.ContactsContract.Contacts.Photo: void <init>()>:<>:<android.provider.ContactsContract.Contacts.Photo:android.provider.BaseColumns,android.provider.ContactsContract.DataColumnsWithJoins>
<android.graphics.Color: int argb(int,int,int,int)>:<public static>:<android.graphics.Color>
<android.telephony.CellInfoWcdma: void <init>()>:<>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.util.MonthDisplayHelper: boolean isWithinCurrentMonth(int,int)>:<public>:<android.util.MonthDisplayHelper>
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.app.Fragment: android.transition.Transition getExitTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.ActionBar: void setTitle(int)>:<public abstract>:<android.app.ActionBar>
<android.widget.PopupWindow: void setEnterTransition(android.transition.Transition)>:<public>:<android.widget.PopupWindow>
<android.view.KeyEvent: int getDeviceId()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.media.MediaRouter.RouteInfo: int getVolumeHandling()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.text.format.Time: void set(int,int,int)>:<public>:<android.text.format.Time>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setTitle(java.lang.CharSequence)>:<public>:<android.app.DownloadManager.Request>
<android.service.carrier.MessagePdu: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.carrier.MessagePdu:android.os.Parcelable>
<android.view.View: void setHorizontalScrollBarEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONArray: void <init>(java.util.Collection)>:<public>:<org.json.JSONArray>
<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumWidth()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>:<public abstract>:<android.webkit.WebSettings>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>:<public final>:<android.os.Parcel>
<android.os.Bundle: void <init>(android.os.PersistableBundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.webkit.WebView: boolean shouldDelayChildPressedState()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringInternal>
<android.telecom.PhoneAccount: boolean hasCapabilities(int)>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>:<public final>:<android.content.BroadcastReceiver>
<android.net.LocalSocket: int getSoTimeout()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: void <init>(int)>:<public>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.telecom.RemoteConference: void setCallAudioState(android.telecom.CallAudioState)>:<public>:<android.telecom.RemoteConference>
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>:<public static>:<android.content.ContentResolver>
<android.content.ClipDescription: void <clinit>()>:<static>:<android.content.ClipDescription:android.os.Parcelable>
<android.telecom.RemoteConnection.Callback: void onDestroyed(android.telecom.RemoteConnection)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.app.Activity: void onPanelClosed(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>:<public>:<android.renderscript.FieldPacker>
<android.view.WindowInsets: boolean hasInsets()>:<public>:<android.view.WindowInsets>
<android.widget.ImageView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.ImageView:android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.hardware.camera2.CaptureRequest: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.telecom.Connection: void setRingbackRequested(boolean)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.widget.RemoteViews: void showNext(int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.Intent: java.lang.String getType()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.sip.SipErrorCode: void <init>()>:<>:<android.net.sip.SipErrorCode>
<android.text.style.ForegroundColorSpan: int describeContents()>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.content.ComponentName: java.lang.String flattenToString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.res.Resources.Theme: int getChangingConfigurations()>:<public>:<android.content.res.Resources.Theme>
<android.graphics.Path: void finalize()>:<protected>:<android.graphics.Path>
<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)>:<public synchronized>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.graphics.Paint: void setHinting(int)>:<public native>:<android.graphics.Paint>
<android.graphics.Path.Op: void <clinit>()>:<static>:<android.graphics.Path.Op:java.lang.Enum>
<android.widget.Switch: int getCompoundPaddingLeft()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.net.ProxyInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.rtp.AudioStream: void setCodec(android.net.rtp.AudioCodec)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>:<public>:<android.media.AudioManager>
<android.graphics.MaskFilter: void finalize()>:<protected>:<android.graphics.MaskFilter>
<android.net.wifi.SupplicantState: boolean isValidState(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.webkit.WebStorage: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>:<public>:<android.app.NotificationManager>
<android.widget.SearchView: void setOnSuggestionListener(android.widget.SearchView.OnSuggestionListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.telecom.Call: void swapConference()>:<public>:<android.telecom.Call>
<android.content.pm.PackageInstaller.SessionParams: void <init>(int)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable,int)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedNetworkTypes(int)>:<public>:<android.app.DownloadManager.Request>
<android.view.View: void onAnimationStart()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.LocalSocket: void setReceiveBufferSize(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.media.session.PlaybackState: long getActions()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.util.Base64: byte[] decode(java.lang.String,int)>:<public static>:<android.util.Base64>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeights()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.View: int getPaddingBottom()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.LayoutTransition: void addTransitionListener(android.animation.LayoutTransition.TransitionListener)>:<public>:<android.animation.LayoutTransition>
<android.print.PrintAttributes.Resolution: int hashCode()>:<public>:<android.print.PrintAttributes.Resolution>
<android.service.voice.VoiceInteractionSession.Request: void <init>()>:<>:<android.service.voice.VoiceInteractionSession.Request>
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioManager: void setRouting(int,int,int)>:<public>:<android.media.AudioManager>
<android.widget.TableRow.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.TabWidget: int getChildDrawingOrder(int,int)>:<protected>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.ExpandableListView: void setSelectedGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.json.JSONTokener: void <init>(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.util.Base64OutputStream: void write(byte[],int,int)>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.widget.GridLayout: void setRowOrderPreserved(boolean)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.View: void drawableStateChanged()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.drm.DrmManagerClient: int removeRights(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.test.mock.MockCursor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.graphics.Bitmap: int getWidth()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.content.SyncContext: void <init>()>:<>:<android.content.SyncContext>
<android.view.ViewDebug: void stopHierarchyTracing()>:<public static>:<android.view.ViewDebug>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.app.Notification.CarExtender.UnreadConversation: android.app.RemoteInput getRemoteInput()>:<public>:<android.app.Notification.CarExtender.UnreadConversation>
<android.view.animation.GridLayoutAnimationController: void setDirection(int)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.media.Rating: android.media.Rating newUnratedRating(int)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.telephony.CellIdentityCdma: java.lang.String toString()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.text.style.TypefaceSpan: java.lang.String getFamily()>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.telecom.Call: void splitFromConference()>:<public>:<android.telecom.Call>
<android.hardware.Camera.Parameters: int getJpegQuality()>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util.ETC1Texture,java.io.OutputStream)>:<public static>:<android.opengl.ETC1Util>
<android.drm.DrmSupportInfo: boolean equals(java.lang.Object)>:<public>:<android.drm.DrmSupportInfo>
<android.telecom.RemoteConference.Callback: void onConnectionRemoved(android.telecom.RemoteConference,android.telecom.RemoteConnection)>:<public>:<android.telecom.RemoteConference.Callback>
<android.widget.QuickContactBadge: void setOverlay(android.graphics.drawable.Drawable)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.View: void setTag(int,java.lang.Object)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.Toolbar: void setContentInsetsAbsolute(int,int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.graphics.Paint.Join: void <clinit>()>:<static>:<android.graphics.Paint.Join:java.lang.Enum>
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>:<public>:<android.telephony.SmsMessage>
<android.content.res.Configuration: int compareTo(java.lang.Object)>:<public volatile>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.os.Parcel: double[] createDoubleArray()>:<public final>:<android.os.Parcel>
<android.graphics.drawable.LayerDrawable: int getLayerInsetStart(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.Animation: void setRepeatCount(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.test.MoreAsserts: void assertNotMatchesRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.app.FragmentManager: void popBackStack()>:<public abstract>:<android.app.FragmentManager>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>:<protected>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>:<public abstract>:<android.os.Parcelable>
<android.text.format.Time: void <init>()>:<public>:<android.text.format.Time>
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>:<public>:<android.media.MediaRecorder>
<android.webkit.WebStorage.Origin: void <init>()>:<>:<android.webkit.WebStorage.Origin>
<android.gesture.GestureOverlayView: void clear(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.sip.SipProfile: java.lang.String getUriString()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.view.ActionMode: void setTag(java.lang.Object)>:<public>:<android.view.ActionMode>
<android.widget.Switch: android.content.res.ColorStateList getThumbTintList()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.view.Window.Callback: boolean onSearchRequested(android.view.SearchEvent)>:<public abstract>:<android.view.Window.Callback>
<android.net.SSLCertificateSocketFactory: void <init>(int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.media.session.MediaSession.QueueItem: android.media.MediaDescription getDescription()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.view.MotionEvent.PointerProperties: void clear()>:<public>:<android.view.MotionEvent.PointerProperties>
<android.app.Notification.WearableExtender: int getContentAction()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<android.text.style.TypefaceSpan: void <init>(java.lang.String)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State[] values()>:<public static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>:<public abstract>:<android.util.AttributeSet>
<android.widget.TabHost: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.camera2.params.RggbChannelVector: float getRed()>:<public final>:<android.hardware.camera2.params.RggbChannelVector>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)>:<public>:<android.view.textservice.SpellCheckerSession>
<android.media.browse.MediaBrowser.MediaItem: int getFlags()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.widget.ToggleButton: void drawableStateChanged()>:<protected>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.test.TouchUtils: void dragViewToBottom(android.test.InstrumentationTestCase,android.app.Activity,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<android.os.Debug: void resetAllCounts()>:<public static>:<android.os.Debug>
<android.telecom.InCallService.VideoCall.Callback: void onCameraCapabilitiesChanged(android.telecom.VideoProfile.CameraCapabilities)>:<public abstract>:<android.telecom.InCallService.VideoCall.Callback>
<android.widget.Checkable: void setChecked(boolean)>:<public abstract>:<android.widget.Checkable>
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.Notification.CarExtender.UnreadConversation: java.lang.String getParticipant()>:<public>:<android.app.Notification.CarExtender.UnreadConversation>
<android.net.Uri: java.lang.String getAuthority()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.service.wallpaper.WallpaperService: void <init>()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.midi.MidiDevice: void close()>:<public>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.nfc.tech.MifareClassic: void <clinit>()>:<static>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.content.ClipboardManager: void setText(java.lang.CharSequence)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.animation.AnimatorSet: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.telecom.RemoteConference: java.util.List getConnections()>:<public final>:<android.telecom.RemoteConference>
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.widget.CursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>:<public>:<android.hardware.usb.UsbRequest>
<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.Uri: boolean isOpaque()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>:<public static>:<android.text.Layout>
<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.content.res.Resources.Theme: void dump(int,java.lang.String,java.lang.String)>:<public>:<android.content.res.Resources.Theme>
<android.net.sip.SipProfile: boolean getAutoRegistration()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.view.View: boolean performContextClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ContentProvider: java.lang.String getReadPermission()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.net.wifi.WifiConfiguration.Protocol: void <init>()>:<>:<android.net.wifi.WifiConfiguration.Protocol>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>:<public>:<android.graphics.Paint>
<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.IntentSender: int getCreatorUid()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.telecom.Call.Details: android.telecom.StatusHints getStatusHints()>:<public>:<android.telecom.Call.Details>
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>:<public>:<android.content.res.TypedArray>
<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>:<public>:<android.graphics.SurfaceTexture>
<android.view.VelocityTracker: void finalize()>:<protected>:<android.view.VelocityTracker>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.hardware.Camera.Parameters: void setAutoWhiteBalanceLock(boolean)>:<public>:<android.hardware.Camera.Parameters>
<android.view.inputmethod.EditorInfo: void makeCompatible(int)>:<public final>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.util.Range: boolean contains(java.lang.Comparable)>:<public>:<android.util.Range>
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.pm.PackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.NumberPicker: boolean performClick()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec build()>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.test.mock.MockCursor: java.lang.String getColumnName(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<junit.framework.TestResult: void startTest(junit.framework.Test)>:<public>:<junit.framework.TestResult>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIconAttribute(int)>:<public>:<android.app.AlertDialog.Builder>
<android.os.Bundle: void putCharArray(java.lang.String,char[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setIntegerPart(long)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Fragment: void setUserVisibleHint(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.View: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.ComponentInfo: int getLogoResource()>:<public final>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.provider.MediaStore.Audio.Artists.Albums: void <init>()>:<public>:<android.provider.MediaStore.Audio.Artists.Albums:android.provider.MediaStore.Audio.AlbumColumns>
<android.opengl.GLES31Ext: void glTexBufferRangeEXT(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>:<public>:<android.content.pm.PackageManager>
<android.hardware.camera2.params.MeteringRectangle: void <init>(android.graphics.Point,android.util.Size,int)>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.widget.ScrollView: boolean fullScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Window: void setLogo(int)>:<public>:<android.view.Window>
<org.xmlpull.v1.sax2.Driver: java.lang.String getLocalName(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.net.CaptivePortal: void ignoreNetwork()>:<public>:<android.net.CaptivePortal:android.os.Parcelable>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl[] values()>:<public static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.media.MediaRouter: int getCategoryCount()>:<public>:<android.media.MediaRouter>
<android.database.AbstractCursor: int getType(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.test.mock.MockContext: java.io.File getFilesDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.style.TtsSpan.CardinalBuilder: void <init>(long)>:<public>:<android.text.style.TtsSpan.CardinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.TextView: int getBottomPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaDrm.KeyStatus: void <init>()>:<>:<android.media.MediaDrm.KeyStatus>
<android.app.AppOpsManager: void <init>()>:<>:<android.app.AppOpsManager>
<android.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.os.Looper: void prepare()>:<public static>:<android.os.Looper>
<android.telephony.ServiceState: int describeContents()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind[] values()>:<public static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.net.nsd.NsdServiceInfo: void <clinit>()>:<static>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.hardware.Camera.Parameters: void setPictureFormat(int)>:<public>:<android.hardware.Camera.Parameters>
<android.app.Notification.Style: void internalSetSummaryText(java.lang.CharSequence)>:<protected>:<android.app.Notification.Style>
<android.net.sip.SipRegistrationListener: void onRegistering(java.lang.String)>:<public abstract>:<android.net.sip.SipRegistrationListener>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.bluetooth.BluetoothHealth: boolean registerSinkAppConfiguration(java.lang.String,int,android.bluetooth.BluetoothHealthCallback)>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.widget.ZoomButton: void setEnabled(boolean)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.provider.CalendarContract.SyncState: void <init>()>:<>:<android.provider.CalendarContract.SyncState:android.provider.SyncStateContract.Columns>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.SyncParams: android.media.SyncParams setFrameRate(float)>:<public>:<android.media.SyncParams>
<android.app.RemoteInput: java.lang.CharSequence getLabel()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>:<public>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintHideIcon(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.security.KeyPairGeneratorSpec.Builder: void <init>(android.content.Context)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.widget.PopupWindow: int getWidth()>:<public>:<android.widget.PopupWindow>
<android.widget.TextView: boolean onPreDraw()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)>:<public>:<android.speech.tts.TextToSpeech>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.net.http.SslCertificate.DName: java.lang.String getCName()>:<public>:<android.net.http.SslCertificate.DName>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.BaseAdapter: int getViewTypeCount()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService.Insets)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.util.ArrayMap: int size()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.graphics.Bitmap: int getScaledWidth(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.AbsListView: void setScrollBarStyle(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.AbsListView: int getLeftPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.notification.NotificationListenerService: void requestInterruptionFilter(int)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.Matrix: float length(float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>:<protected>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMediaSize(android.print.PrintAttributes.MediaSize)>:<public>:<android.print.PrintAttributes.Builder>
<android.media.AsyncPlayer: void <init>(java.lang.String)>:<public>:<android.media.AsyncPlayer>
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.InputDevice: int getId()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.os.Parcel: void setDataPosition(int)>:<public final>:<android.os.Parcel>
<android.view.View.AccessibilityDelegate: void <init>()>:<public>:<android.view.View.AccessibilityDelegate>
<android.net.wifi.WpsInfo: void <init>(android.net.wifi.WpsInfo)>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.provider.Telephony.Mms.Inbox: void <init>()>:<>:<android.provider.Telephony.Mms.Inbox:android.provider.Telephony.BaseMmsColumns>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)>:<public static>:<android.gesture.GestureUtils>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setMatchMode(int)>:<public>:<android.bluetooth.le.ScanSettings.Builder>
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.database.AbstractCursor.SelfContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.test.mock.MockPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.service.media.MediaBrowserService.Result: void detach()>:<public>:<android.service.media.MediaBrowserService.Result>
<android.media.audiofx.PresetReverb: short getPreset()>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.KeyCharacterMap: int getModifierBehavior()>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>:<public>:<org.json.JSONObject>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>:<public static>:<android.graphics.Typeface>
<android.net.sip.SipProfile: void <clinit>()>:<static>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.print.PrintAttributes.MediaSize: int hashCode()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.view.HapticFeedbackConstants: void <init>()>:<>:<android.view.HapticFeedbackConstants>
<android.telephony.gsm.SmsMessage: int getStatus()>:<public>:<android.telephony.gsm.SmsMessage>
<android.system.Os: int getppid()>:<public static>:<android.system.Os>
<android.widget.TimePicker: void setHour(int)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowSpan()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.media.MediaCodecInfo.VideoCapabilities: boolean isSizeSupported(int,int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.print.PrintDocumentInfo: int getPageCount()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.View: boolean dispatchNestedPrePerformAccessibilityAction(int,android.os.Bundle)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.GradientDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.net.http.SslCertificate.DName: java.lang.String getUName()>:<public>:<android.net.http.SslCertificate.DName>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setOutboundProxy(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.database.MergeCursor: byte[] getBlob(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode.Callback,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.app.Service: android.os.IBinder onBind(android.content.Intent)>:<public abstract>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.os.CountDownTimer: void onFinish()>:<public abstract>:<android.os.CountDownTimer>
<android.nfc.NdefMessage: void <clinit>()>:<static>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.net.wifi.WpsInfo: java.lang.String toString()>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputMethodInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.text.BoringLayout: int getBottomPadding()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.app.Instrumentation: void <init>()>:<public>:<android.app.Instrumentation>
<android.renderscript.ScriptIntrinsicBLAS: void CSYR2K(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.CursorWindow: void setStartPosition(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.provider.ContactsContract.SyncState: void <clinit>()>:<static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.pdf.PdfRenderer.Page: void <init>(android.graphics.pdf.PdfRenderer)>:<>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.test.mock.MockPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.AudioDeviceInfo: int getId()>:<public>:<android.media.AudioDeviceInfo>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Files>
<android.printservice.PrinterDiscoverySession: java.util.List getPrinters()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.renderscript.Allocation: void copyTo(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.app.backup.BackupDataInputStream: int read(byte[])>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.app.AppOpsManager: int checkOpNoThrow(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled(java.lang.Thread)>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.text.method.ScrollingMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.renderscript.AllocationAdapter: void setLOD(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<junit.framework.Assert: void assertEquals(boolean,boolean)>:<public static>:<junit.framework.Assert>
<android.content.res.ColorStateList: int getDefaultColor()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.transition.TransitionPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>:<public abstract>:<android.transition.TransitionPropagation>
<android.telephony.CellSignalStrengthCdma: int getDbm()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<junit.framework.ComparisonFailure:junit.framework.AssertionFailedError,java.lang.AssertionError,java.lang.Error,java.lang.Throwable>
<android.media.session.PlaybackState.CustomAction.Builder: void <init>(java.lang.String,java.lang.CharSequence,int)>:<public>:<android.media.session.PlaybackState.CustomAction.Builder>
<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.ClientCertRequest: java.lang.String[] getKeyTypes()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.location.SettingInjectorService: void onStart(android.content.Intent,int)>:<public final>:<android.location.SettingInjectorService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>:<public abstract>:<android.content.Context>
<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>:<public>:<android.media.MediaPlayer>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoHeight(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.net.wifi.WifiManager.WpsCallback: void <init>()>:<public>:<android.net.wifi.WifiManager.WpsCallback>
<android.opengl.GLSurfaceView: int getDebugFlags()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.renderscript.Script.FieldBase: android.renderscript.Allocation getAllocation()>:<public>:<android.renderscript.Script.FieldBase>
<android.webkit.WebView.FindListener: void onFindResultReceived(int,int,boolean)>:<public abstract>:<android.webkit.WebView.FindListener>
<android.app.ActionBar.Tab: java.lang.CharSequence getContentDescription()>:<public abstract>:<android.app.ActionBar.Tab>
<android.preference.ListPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.net.Uri.Builder: android.net.Uri.Builder encodedQuery(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.database.DataSetObservable: void notifyInvalidated()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.text.method.NumberKeyListener: boolean ok(char[],char)>:<protected static>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.app.Notification.Builder: android.app.Notification build()>:<public>:<android.app.Notification.Builder>
<android.media.AudioManager: void dispatchMediaKeyEvent(android.view.KeyEvent)>:<public>:<android.media.AudioManager>
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.Activity: void setResult(int,android.content.Intent)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.ApplicationTestCase: void tearDown()>:<protected>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.graphics.drawable.LayerDrawable: void setLayerInsetBottom(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.preference.PreferenceScreen: void <init>()>:<>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliablePipe()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>:<public final transient>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>:<public final>:<android.os.Handler>
<android.widget.ListPopupWindow: android.view.View getSelectedView()>:<public>:<android.widget.ListPopupWindow>
<android.opengl.GLES10: void glClearStencil(int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.Drawable: void clearColorFilter()>:<public>:<android.graphics.drawable.Drawable>
<android.media.session.MediaController.TransportControls: void <init>(android.media.session.MediaController)>:<>:<android.media.session.MediaController.TransportControls>
<android.R.id: void <init>()>:<public>:<android.R.id>
<android.media.PlaybackParams: float getSpeed()>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])>:<public>:<android.bluetooth.BluetoothAdapter>
<android.test.AndroidTestRunner: void setContext(android.content.Context)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.widget.ExpandableListAdapter: void onGroupCollapsed(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.content.ContentValues: void remove(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.text.Editable.Factory: android.text.Editable.Factory getInstance()>:<public static>:<android.text.Editable.Factory>
<android.app.Activity: void onProvideAssistContent(android.app.assist.AssistContent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.text.method.ScrollingMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.provider.CalendarContract.CalendarEntity: void <clinit>()>:<static>:<android.provider.CalendarContract.CalendarEntity:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.CalendarColumns>
<android.widget.GridView: void <init>(android.content.Context)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<org.xmlpull.v1.XmlSerializer: void processingInstruction(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.util.LongSparseArray: int size()>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.HeterogeneousExpandableList: int getChildType(int,int)>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.test.mock.MockContext: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.SurfaceHolder: void setType(int)>:<public abstract>:<android.view.SurfaceHolder>
<android.preference.MultiSelectListPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.telecom.Connection: void setAddress(android.net.Uri,int)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.net.rtp.AudioGroup: void sendDtmf(int)>:<public>:<android.net.rtp.AudioGroup>
<android.accounts.AccountManagerFuture: boolean isCancelled()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.hardware.camera2.CameraCharacteristics.Key: int hashCode()>:<public final>:<android.hardware.camera2.CameraCharacteristics.Key>
<android.view.animation.Animation: void cancel()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.webkit.WebView: void setWebContentsDebuggingEnabled(boolean)>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.MotionEvent: float getPressure(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebView: void onAttachedToWindow()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.BroadcastReceiver.PendingResult: void <init>()>:<>:<android.content.BroadcastReceiver.PendingResult>
<android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>:<public static>:<android.os.Environment>
<android.mtp.MtpObjectInfo: java.lang.String getName()>:<public final>:<android.mtp.MtpObjectInfo>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.text.method.BaseMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.media.audiofx.EnvironmentalReverb: void setReverbLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.graphics.Paint: void setElegantTextHeight(boolean)>:<public native>:<android.graphics.Paint>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>:<public>:<android.accounts.AccountManager>
<android.util.Rational: boolean equals(java.lang.Object)>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public abstract>:<android.content.Context>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.speech.RecognitionService.Callback: void <init>(android.speech.RecognitionService)>:<>:<android.speech.RecognitionService.Callback>
<android.service.notification.NotificationListenerService.RankingMap: void <init>()>:<>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.content.SearchRecentSuggestionsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.webkit.WebSettings: boolean getDisplayZoomControls()>:<public abstract>:<android.webkit.WebSettings>
<android.nfc.cardemulation.CardEmulation: int getSelectionModeForCategory(java.lang.String)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.text.method.BaseMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.print.PrinterCapabilitiesInfo: void <clinit>()>:<static>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.os.Bundle: void <init>(android.os.Bundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.text.StaticLayout: int getLineCount()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.NetworkRequest: void <init>()>:<>:<android.net.NetworkRequest:android.os.Parcelable>
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.util.SparseArray: void put(int,java.lang.Object)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.widget.CalendarView: void setWeekNumberColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telecom.InCallService.VideoCall: void setCamera(java.lang.String)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.animation.StateListAnimator: android.animation.StateListAnimator clone()>:<public>:<android.animation.StateListAnimator:java.lang.Cloneable>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<android.view.ActionProvider: void refreshVisibility()>:<public>:<android.view.ActionProvider>
<android.os.BaseBundle: void putLongArray(java.lang.String,long[])>:<public>:<android.os.BaseBundle>
<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.transition.TransitionSet: int getTransitionCount()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.telephony.CellInfo: long getTimeStamp()>:<public>:<android.telephony.CellInfo:android.os.Parcelable>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.widget.TimePicker: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.Data: void <init>()>:<>:<android.provider.ContactsContract.Data:android.provider.ContactsContract.DataColumnsWithJoins>
<android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.telecom.RemoteConnection.VideoProvider: void requestCameraCapabilities()>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>:<public>:<android.graphics.drawable.Drawable>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>:<public>:<android.media.MediaPlayer>
<android.os.Bundle: boolean hasFileDescriptors()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.media.tv.TvInputInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.hardware.camera2.DngCreator: void writeImage(java.io.OutputStream,android.media.Image)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.hardware.Camera: void lock()>:<public final native>:<android.hardware.Camera>
<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int)>:<public>:<android.media.AudioManager>
<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.ScaleGestureDetector: void setStylusScaleEnabled(boolean)>:<public>:<android.view.ScaleGestureDetector>
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.VoiceInteractor.PickOptionRequest.Option: android.app.VoiceInteractor.PickOptionRequest.Option addSynonym(java.lang.CharSequence)>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.system.Os: boolean isatty(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.app.Dialog: android.view.SearchEvent getSearchEvent()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebViewDatabase: boolean hasFormData()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.AdapterViewAnimator: void fyiWillBeAdvancedByHostKThx()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController.MediaPlayerControl)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptGroup.Closure: void <init>()>:<>:<android.renderscript.ScriptGroup.Closure:android.renderscript.BaseObj>
<android.view.VelocityTracker: float getXVelocity()>:<public>:<android.view.VelocityTracker>
<android.test.mock.MockContext: android.content.Context createDisplayContext(android.view.Display)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>:<public static>:<android.text.Html>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long4)>:<public>:<android.renderscript.FieldPacker>
<android.provider.ContactsContract: void <clinit>()>:<static>:<android.provider.ContactsContract>
<android.media.MediaRouter.RouteInfo: boolean isConnecting()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.app.FragmentManager: boolean executePendingTransactions()>:<public abstract>:<android.app.FragmentManager>
<android.content.Context: android.os.Looper getMainLooper()>:<public abstract>:<android.content.Context>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: boolean glIsShader(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.DialogPreference: void setNegativeButtonText(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>:<public>:<android.net.http.SslCertificate>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,boolean)>:<public abstract>:<android.app.ActionBar>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter.Builder stereoReset(boolean)>:<public>:<android.text.BidiFormatter.Builder>
<android.net.wifi.WifiConfiguration.PairwiseCipher: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.PairwiseCipher>
<android.telecom.GatewayInfo: boolean isEmpty()>:<public>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.graphics.SurfaceTexture: void attachToGLContext(int)>:<public>:<android.graphics.SurfaceTexture>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>:<public>:<android.widget.PopupWindow>
<org.json.JSONObject: java.lang.String toString()>:<public>:<org.json.JSONObject>
<android.media.MediaDrm.KeyStatus: byte[] getKeyId()>:<public>:<android.media.MediaDrm.KeyStatus>
<android.content.Intent: void readFromParcel(android.os.Parcel)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.MediaRouter: void removeUserRoute(android.media.MediaRouter.UserRouteInfo)>:<public>:<android.media.MediaRouter>
<android.widget.Spinner: void setPromptId(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.content.pm.PackageInstaller: void updateSessionAppIcon(int,android.graphics.Bitmap)>:<public>:<android.content.pm.PackageInstaller>
<android.view.KeyCharacterMap: char getNumber(int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.ComponentName: java.lang.Object clone()>:<public volatile>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.content.BroadcastReceiver: void setResultData(java.lang.String)>:<public final>:<android.content.BroadcastReceiver>
<android.graphics.EmbossMaskFilter: void <init>(float[],float,float,float)>:<public>:<android.graphics.EmbossMaskFilter:android.graphics.MaskFilter>
<android.provider.Settings.Secure: void <init>()>:<public>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.database.sqlite.SQLiteDatabase: int getVersion()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.net.InetAddress,int)>:<public>:<android.net.VpnService.Builder>
<android.app.Activity: void overridePendingTransition(int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.view.View: void getLocationInWindow(int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.LinkAddress: java.net.InetAddress getAddress()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFormatSupported(android.media.MediaFormat)>:<public final>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.media.AudioTrack: void flush()>:<public>:<android.media.AudioTrack>
<android.net.wifi.WifiConfiguration: void <init>()>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.print.PrintAttributes.Margins: void <clinit>()>:<static>:<android.print.PrintAttributes.Margins>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.app.Notification.Builder: void <init>(android.content.Context)>:<public>:<android.app.Notification.Builder>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.PopupWindow: void update(int,int,int,int)>:<public>:<android.widget.PopupWindow>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.service.dreams.DreamService: void setContentView(android.view.View)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.graphics.Matrix: boolean postSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.telephony.CellSignalStrengthGsm: void <init>()>:<>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.widget.ArrayAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: void setCid(int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>:<public>:<android.widget.PopupWindow>
<android.app.assist.AssistStructure.ViewNode: int getTextBackgroundColor()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.renderscript.Int3: void <init>()>:<public>:<android.renderscript.Int3>
<android.preference.MultiSelectListPreference: void setEntries(int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.midi.MidiDeviceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.content.IntentFilter: void <clinit>()>:<static>:<android.content.IntentFilter:android.os.Parcelable>
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.TextView: int getExtendedPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TabWidget: void dispatchDraw(android.graphics.Canvas)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.MediaTimestamp: long getAnchorSytemNanoTime()>:<public>:<android.media.MediaTimestamp>
<android.text.style.TtsSpan.FractionBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.test.IsolatedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.media.MediaCodec: android.view.Surface createInputSurface()>:<public final native>:<android.media.MediaCodec>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.telecom.Call: void reject(boolean,java.lang.String)>:<public>:<android.telecom.Call>
<android.os.PatternMatcher: java.lang.String getPath()>:<public final>:<android.os.PatternMatcher:android.os.Parcelable>
<android.graphics.Path.FillType: android.graphics.Path.FillType[] values()>:<public static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.util.SparseIntArray: void clear()>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.media.tv.TvView: void onMeasure(int,int)>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.app.usage.ConfigurationStats: int getActivationCount()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.widget.RemoteViews: void removeAllViews(int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.media.TimedMetaData: void <init>()>:<>:<android.media.TimedMetaData>
<android.provider.ContactsContract.ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>:<public static>:<android.provider.ContactsContract.ProfileSyncState:android.provider.SyncStateContract.Columns>
<android.drm.DrmRights: void <init>(android.drm.ProcessedData,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>:<public>:<android.bluetooth.le.BluetoothLeScanner>
<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal.OnCancelListener)>:<public>:<android.os.CancellationSignal>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStartTrackingTouch(android.widget.SeekBar)>:<public abstract>:<android.widget.SeekBar.OnSeekBarChangeListener>
<android.telecom.InCallService.VideoCall: void registerCallback(android.telecom.InCallService.VideoCall.Callback,android.os.Handler)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.view.InputDevice.MotionRange: float getFlat()>:<public>:<android.view.InputDevice.MotionRange>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<junit.framework.Assert: void assertEquals(double,double,double)>:<public static>:<junit.framework.Assert>
<android.media.audiofx.AudioEffect: void setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener)>:<public>:<android.media.audiofx.AudioEffect>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(java.lang.CharSequence)>:<public>:<android.app.AlertDialog.Builder>
<android.view.View: void setForegroundGravity(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.BassBoost.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.text.DynamicLayout: int getBottomPadding()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.opengl.GLES30: void glUniform3uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ViewSwitcher: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Notification.Extender: android.app.Notification.Builder extend(android.app.Notification.Builder)>:<public abstract>:<android.app.Notification.Extender>
<android.view.ViewGroup: android.view.View findFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable.Orientation: android.graphics.drawable.GradientDrawable.Orientation valueOf(java.lang.String)>:<public static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.provider.Telephony.MmsSms.PendingMessages: void <clinit>()>:<static>:<android.provider.Telephony.MmsSms.PendingMessages:android.provider.BaseColumns>
<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.view.InputQueue: void finalize()>:<protected>:<android.view.InputQueue>
<android.speech.tts.SynthesisRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>:<public>:<android.speech.tts.SynthesisRequest>
<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.graphics.drawable.shapes.Shape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.Exception)>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.CellSignalStrengthWcdma: void <init>()>:<>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.view.Gravity: boolean isVertical(int)>:<public static>:<android.view.Gravity>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName(android.content.Context)>:<public>:<android.media.MediaRouter.RouteCategory>
<android.text.TextUtils: void <clinit>()>:<static>:<android.text.TextUtils>
<android.renderscript.Allocation: void copyFromUnchecked(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.test.InstrumentationTestRunner: void onStart()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.net.MailTo: boolean isMailTo(java.lang.String)>:<public static>:<android.net.MailTo>
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)>:<public static>:<android.nfc.NdefRecord:android.os.Parcelable>
<junit.framework.TestResult: int failureCount()>:<public synchronized>:<junit.framework.TestResult>
<android.text.style.StrikethroughSpan: void <init>()>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.view.ActionMode: android.view.MenuInflater getMenuInflater()>:<public abstract>:<android.view.ActionMode>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>:<public>:<android.content.res.Resources>
<android.webkit.WebChromeClient: void onHideCustomView()>:<public>:<android.webkit.WebChromeClient>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer newSerializer()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)>:<public>:<android.net.ConnectivityManager>
<android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitCustomSlowCalls()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.text.format.Time: void clear(java.lang.String)>:<public>:<android.text.format.Time>
<android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo newInstance(java.lang.String,java.lang.String,java.util.Map)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>:<public>:<android.net.wifi.WifiManager>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int,int)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.app.Activity: void onDestroy()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.SparseArray: int indexOfKey(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.hardware.Camera.Parameters: java.util.List getSupportedSceneModes()>:<public>:<android.hardware.Camera.Parameters>
<android.content.SyncStats: void <clinit>()>:<static>:<android.content.SyncStats:android.os.Parcelable>
<android.widget.TableLayout.LayoutParams: void <init>()>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>:<public>:<android.test.mock.MockContentResolver:android.content.ContentResolver>
<android.opengl.GLES30: void glUniform4uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.textservice.SpellCheckerSubtype: int hashCode()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.inputmethod.InputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.opengl.GLES30: void glVertexAttribDivisor(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ImageView: int getMaxWidth()>:<public>:<android.widget.ImageView:android.view.View>
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.app.TimePickerDialog.OnTimeSetListener: void onTimeSet(android.widget.TimePicker,int,int)>:<public abstract>:<android.app.TimePickerDialog.OnTimeSetListener>
<android.renderscript.Script: android.renderscript.Script.InvokeID createInvokeID(int)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.webkit.WebSyncManager: void stopSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>:<public>:<android.telephony.TelephonyManager>
<android.service.dreams.DreamService: void onCreate()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.os.Debug.MemoryInfo: int describeContents()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.media.tv.TvView.TvInputCallback: void onTrackSelected(java.lang.String,int,java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>:<public>:<android.os.DropBoxManager>
<android.provider.ContactsContract.CommonDataKinds.Relation: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Relation:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void revokeSession(android.view.inputmethod.InputMethodSession)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<android.graphics.Typeface: boolean equals(java.lang.Object)>:<public>:<android.graphics.Typeface>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ListPopupWindow: android.view.View getAnchorView()>:<public>:<android.widget.ListPopupWindow>
<android.view.MenuItem: boolean collapseActionView()>:<public abstract>:<android.view.MenuItem>
<android.widget.LinearLayout: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.MenuItem: android.view.MenuItem setShowAsActionFlags(int)>:<public abstract>:<android.view.MenuItem>
<android.bluetooth.BluetoothAdapter: void stopLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>:<public>:<android.sax.Element>
<android.graphics.Matrix: boolean postTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.app.VoiceInteractor.Request: java.lang.String getName()>:<public>:<android.app.VoiceInteractor.Request>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.ScriptIntrinsicResize create(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.AudioRecord: int read(byte[],int,int,int)>:<public>:<android.media.AudioRecord>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.text.style.RelativeSizeSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.CursorTreeAdapter: boolean isChildSelectable(int,int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.os.BaseBundle: boolean containsKey(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.os.IBinder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>:<public abstract>:<android.os.IBinder>
<android.media.tv.TvView: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothClass.Service: void <init>()>:<public>:<android.bluetooth.BluetoothClass.Service>
<android.content.IntentFilter: android.content.IntentFilter.AuthorityEntry getDataAuthority(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[])>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<junit.runner.BaseTestRunner: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.text.LoginFilter.UsernameFilterGeneric: boolean isAllowed(char)>:<public>:<android.text.LoginFilter.UsernameFilterGeneric:android.text.LoginFilter>
<android.graphics.SurfaceTexture: void <init>(int)>:<public>:<android.graphics.SurfaceTexture>
<android.webkit.WebView: int computeHorizontalScrollOffset()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.ProgressBar: void setSecondaryProgress(int)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.os.ResultReceiver: void send(int,android.os.Bundle)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.opengl.GLES30: void glPauseTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.util.Range: java.lang.Comparable getLower()>:<public>:<android.util.Range>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.system.Os: long sendfile(java.io.FileDescriptor,java.io.FileDescriptor,android.util.MutableLong,long)>:<public static>:<android.system.Os>
<android.media.session.MediaController.TransportControls: void fastForward()>:<public>:<android.media.session.MediaController.TransportControls>
<android.mtp.MtpObjectInfo: int getThumbCompressedSize()>:<public final>:<android.mtp.MtpObjectInfo>
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>:<public>:<android.media.MediaPlayer>
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.app.Fragment: void setExitSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.backup.BackupDataInput: int getDataSize()>:<public>:<android.app.backup.BackupDataInput>
<android.media.Ringtone: android.media.AudioAttributes getAudioAttributes()>:<public>:<android.media.Ringtone>
<android.view.inputmethod.InputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.transition.Transition: java.util.List getTargetNames()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.media.MediaMetadata: java.lang.CharSequence getText(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element YUV(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.View: int getPaddingEnd()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.BassBoost: void setParameterListener(android.media.audiofx.BassBoost.OnParameterChangeListener)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.ActivityManager.RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.content.ContentProviderResult: void <init>(int)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.media.AudioManager: void setMicrophoneMute(boolean)>:<public>:<android.media.AudioManager>
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.SyncParams: void <init>()>:<public>:<android.media.SyncParams>
<android.text.style.ClickableSpan: void <init>()>:<public>:<android.text.style.ClickableSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.util.Rational: int compareTo(java.lang.Object)>:<public volatile>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewTreeObserver: void addOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>:<public>:<android.view.ViewTreeObserver>
<android.provider.ContactsContract.CommonDataKinds.Im: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.inputmethod.InputBinding: int getPid()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>:<public abstract>:<android.text.style.LeadingMarginSpan:android.text.style.ParagraphStyle>
<android.media.Ringtone: void play()>:<public>:<android.media.Ringtone>
<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.view.ContextMenu: android.view.ContextMenu setHeaderView(android.view.View)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.ScrollView: void onMeasure(int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGatt: void disconnect()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.app.ListFragment: void setListShownNoAnimation(boolean)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.content.ContentValues: java.lang.String toString()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.telecom.PhoneAccount: java.lang.CharSequence getShortDescription()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.telecom.InCallService: void onCallRemoved(android.telecom.Call)>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: int getChildDrawingOrder(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.renderscript.Element: android.renderscript.Element F64_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebView: boolean canZoomIn()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.RectF: void inset(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.media.ToneGenerator: int getAudioSessionId()>:<public final native>:<android.media.ToneGenerator>
<android.speech.RecognitionService: void onDestroy()>:<public>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.VideoView: void <init>(android.content.Context)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.widget.AdapterViewFlipper: void setFlipInterval(int)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.VelocityTracker: void computeCurrentVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.telecom.CallAudioState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: boolean isAutoMirrored()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.view.animation.TranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.telecom.DisconnectCause: void <init>(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.content.SyncResult: void <init>()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.opengl.ETC1: void <init>()>:<public>:<android.opengl.ETC1>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceRegistered(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.media.MediaSync: void setPlaybackParams(android.media.PlaybackParams)>:<public>:<android.media.MediaSync>
<android.app.Presentation: void onStop()>:<protected>:<android.app.Presentation:android.app.Dialog>
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.View: boolean performClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.mtp.MtpDevice: void finalize()>:<protected>:<android.mtp.MtpDevice>
<android.telephony.ServiceState: boolean equals(java.lang.Object)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.graphics.RectF: java.lang.String toShortString()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.Paint: float getStrokeMiter()>:<public native>:<android.graphics.Paint>
<android.telephony.CellInfoWcdma: void <clinit>()>:<static>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.ParcelFileDescriptor: java.lang.String toString()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.telephony.CellIdentityWcdma: int getMnc()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.AbsListView: void clearChoices()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Notification.MediaStyle: void <init>()>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.hardware.Camera: android.hardware.Camera open(int)>:<public static>:<android.hardware.Camera>
<android.graphics.drawable.BitmapDrawable: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.location.Location: boolean hasBearing()>:<public>:<android.location.Location:android.os.Parcelable>
<android.webkit.WebView: void setBackgroundColor(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.bluetooth.le.ScanFilter: int getManufacturerId()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.telecom.Connection: android.telecom.DisconnectCause getDisconnectCause()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.widget.RadioGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageInstaller.SessionCallback: void onBadgingChanged(int)>:<public abstract>:<android.content.pm.PackageInstaller.SessionCallback>
<android.app.SearchableInfo: java.lang.String getSuggestPath()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.content.Context: java.io.File[] getExternalCacheDirs()>:<public abstract>:<android.content.Context>
<android.widget.AdapterView: void <init>(android.content.Context)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.SyncContext: android.os.IBinder getSyncContextBinder()>:<public>:<android.content.SyncContext>
<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Transition)>:<public>:<android.transition.TransitionManager>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.LayerDrawable: void setLayerSize(int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaMetadataEditor: void removeEditableKeys()>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.net.UrlQuerySanitizer: void registerParameter(java.lang.String,android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.BitmapRegionDecoder: int getWidth()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.graphics.Outline: void setOval(android.graphics.Rect)>:<public>:<android.graphics.Outline>
<android.content.Loader: void onForceLoad()>:<protected>:<android.content.Loader>
<android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>:<public abstract>:<android.content.Context>
<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.telephony.SmsManager: void sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>:<public>:<android.telephony.SmsManager>
<android.view.View: void setVisibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setScrollBarFadeDuration(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.view.MotionEvent.PointerProperties: void copyFrom(android.view.MotionEvent.PointerProperties)>:<public>:<android.view.MotionEvent.PointerProperties>
<org.json.JSONArray: double optDouble(int,double)>:<public>:<org.json.JSONArray>
<android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>:<public>:<android.os.BaseBundle>
<android.media.audiofx.BassBoost.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.bluetooth.BluetoothClass.Device.Major: void <init>()>:<public>:<android.bluetooth.BluetoothClass.Device.Major>
<android.text.util.Rfc822Token: void setComment(java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.telecom.PhoneAccount: android.net.Uri getSubscriptionAddress()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.media.MediaMuxer: void finalize()>:<protected>:<android.media.MediaMuxer>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>:<public static>:<android.text.format.DateUtils>
<android.text.DynamicLayout: int getLineTop(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.telecom.InCallService.VideoCall: void setPreviewSurface(android.view.Surface)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.view.ViewTreeObserver.OnWindowFocusChangeListener: void onWindowFocusChanged(boolean)>:<public abstract>:<android.view.ViewTreeObserver.OnWindowFocusChangeListener>
<junit.runner.BaseTestRunner: void clearStatus()>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.view.textservice.SuggestionsInfo: void setCookieAndSequence(int,int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.app.Notification.Style: void setBuilder(android.app.Notification.Builder)>:<public>:<android.app.Notification.Style>
<android.widget.Toolbar: void setContentInsetsRelative(int,int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)>:<protected>:<android.net.UrlQuerySanitizer>
<android.view.View: boolean isSoundEffectsEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.Animator: boolean isPaused()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSErrorHandler getErrorHandler()>:<public>:<android.renderscript.RenderScript>
<android.app.usage.UsageStats: int describeContents()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.print.PrintJob: boolean isQueued()>:<public>:<android.print.PrintJob>
<android.provider.ContactsContract.DisplayPhoto: void <init>()>:<>:<android.provider.ContactsContract.DisplayPhoto>
<android.opengl.GLES20: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.content.OperationApplicationException: void <init>(java.lang.Throwable)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.app.Activity: android.view.SearchEvent getSearchEvent()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.view.MotionEvent: int getDeviceId()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.transition.Visibility: boolean isVisible(android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.hardware.Sensor: int getFifoReservedEventCount()>:<public>:<android.hardware.Sensor>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putBitmap(int,android.graphics.Bitmap)>:<public synchronized>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.telecom.Call.Details: int hashCode()>:<public>:<android.telecom.Call.Details>
<android.widget.TabHost: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()>:<public>:<android.media.effect.EffectContext>
<android.app.Activity: android.transition.TransitionManager getContentTransitionManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.ListPopupWindow: void setModal(boolean)>:<public>:<android.widget.ListPopupWindow>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.app.Activity: android.view.WindowManager getWindowManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telecom.Connection: int getConnectionCapabilities()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)>:<public abstract>:<android.hardware.camera2.CameraCaptureSession.StateCallback>
<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.Adapter>
<android.graphics.Canvas: int getDensity()>:<public>:<android.graphics.Canvas>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>:<public static>:<android.telephony.gsm.SmsMessage>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)>:<public>:<android.hardware.camera2.CameraCaptureSession.CaptureCallback>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.renderscript.ScriptIntrinsicBLAS: void ZTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Region: void <init>()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.Toolbar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.print.PrinterInfo: int describeContents()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.webkit.WebMessage: android.webkit.WebMessagePort[] getPorts()>:<public>:<android.webkit.WebMessage>
<android.content.Loader: void abandon()>:<public>:<android.content.Loader>
<android.media.session.MediaSession.Callback: void onStop()>:<public>:<android.media.session.MediaSession.Callback>
<android.media.MediaMuxer: void start()>:<public>:<android.media.MediaMuxer>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>:<public>:<android.content.res.Resources>
<android.media.FaceDetector.Face: float pose(int)>:<public>:<android.media.FaceDetector.Face>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.VpnService.Builder: android.net.VpnService.Builder setConfigureIntent(android.app.PendingIntent)>:<public>:<android.net.VpnService.Builder>
<android.view.View: int getPaddingStart()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.view.AbsSavedState: int describeContents()>:<public>:<android.view.AbsSavedState:android.os.Parcelable>
<android.webkit.PermissionRequest: void deny()>:<public abstract>:<android.webkit.PermissionRequest>
<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.os.Debug: java.lang.String getRuntimeStat(java.lang.String)>:<public static>:<android.os.Debug>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<org.json.JSONTokener: char next()>:<public>:<org.json.JSONTokener>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.graphics.PointF: void <init>(android.graphics.Point)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.telecom.RemoteConnection: android.os.Bundle getExtras()>:<public final>:<android.telecom.RemoteConnection>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setOverridesImplicitlyEnabledSubtype(boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.util.ArraySet: void <init>()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.MediaController: void setEnabled(boolean)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.transition.ArcMotion: void setMinimumHorizontalAngle(float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.opengl.GLES20: java.lang.String glGetShaderSource(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.bluetooth.le.AdvertiseData: void <clinit>()>:<static>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>:<public final>:<android.os.Handler>
<junit.runner.Version: void <init>()>:<>:<junit.runner.Version>
<android.media.audiofx.Virtualizer: boolean forceVirtualizationMode(int)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>:<public static final>:<android.text.util.Linkify>
<android.widget.GridView: int computeVerticalScrollOffset()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.webkit.WebView.PictureListener: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>:<public abstract>:<android.webkit.WebView.PictureListener>
<android.opengl.GLES30: void glClearBufferfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.location.Criteria: boolean isSpeedRequired()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.content.pm.PackageInstaller.SessionParams: void setOriginatingUri(android.net.Uri)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addInvoke(android.renderscript.Script.InvokeID,java.lang.Object[])>:<public transient>:<android.renderscript.ScriptGroup.Builder2>
<android.service.voice.VoiceInteractionService: void onReady()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.test.ViewAsserts: void assertGroupIntegrity(android.view.ViewGroup)>:<public static>:<android.test.ViewAsserts>
<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>:<public>:<android.media.session.MediaSession>
<android.content.pm.PackageInstaller: void updateSessionAppLabel(int,java.lang.CharSequence)>:<public>:<android.content.pm.PackageInstaller>
<android.animation.AnimatorListenerAdapter: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>:<public transient>:<android.nfc.NfcAdapter>
<android.net.Network: void bindSocket(java.net.Socket)>:<public>:<android.net.Network:android.os.Parcelable>
<android.renderscript.Element: int getSubElementOffsetBytes(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.NetworkInfo: int describeContents()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.test.suitebuilder.TestMethod: boolean equals(java.lang.Object)>:<public>:<android.test.suitebuilder.TestMethod>
<android.test.AndroidTestCase: void assertReadingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.net.sip.SipManager: boolean isVoipSupported(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.nfc.tech.MifareUltralight: void connect()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.widget.AbsListView: boolean isItemChecked(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.LinkProperties: boolean equals(java.lang.Object)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()>:<public>:<android.net.sip.SipAudioCall>
<android.test.suitebuilder.TestMethod: java.lang.String getName()>:<public>:<android.test.suitebuilder.TestMethod>
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.WebView: void setScrollBarStyle(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.assist.AssistStructure.ViewNode: android.graphics.Matrix getTransformation()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.provider.ContactsContract.CommonDataKinds.Im: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.media.MediaCodec: void setOutputSurface(android.view.Surface)>:<public>:<android.media.MediaCodec>
<android.speech.tts.SynthesisCallback: boolean hasFinished()>:<public abstract>:<android.speech.tts.SynthesisCallback>
<junit.framework.TestResult: void addListener(junit.framework.TestListener)>:<public synchronized>:<junit.framework.TestResult>
<android.widget.TextView: void drawableHotspotChanged(float,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>:<public>:<android.view.TextureView:android.view.View>
<android.app.admin.DevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.method.MetaKeyKeyListener: long handleKeyDown(long,int,android.view.KeyEvent)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.app.ActionBar: void setHideOffset(int)>:<public>:<android.app.ActionBar>
<android.database.sqlite.SQLiteOpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.View: void dispatchDisplayHint(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Application: void onTrimMemory(int)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.BitmapDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.accounts.AccountsException: void <init>()>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.nfc.NdefMessage: int getByteArrayLength()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.widget.ExpandableListView: boolean collapseGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.speech.tts.TextToSpeech.EngineInfo: void <init>()>:<public>:<android.speech.tts.TextToSpeech.EngineInfo>
<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.AudioTrack: void release()>:<public>:<android.media.AudioTrack>
<android.os.WorkSource: int describeContents()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.view.Menu: android.view.MenuItem add(int,int,int,int)>:<public abstract>:<android.view.Menu>
<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.view.Menu: void setGroupVisible(int,boolean)>:<public abstract>:<android.view.Menu>
<android.provider.MediaStore.Video.Media: void <clinit>()>:<static>:<android.provider.MediaStore.Video.Media:android.provider.MediaStore.Video.VideoColumns>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setBigContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.database.sqlite.SQLiteCursor: int getCount()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.tv.TvInputService.Session: void notifyVideoUnavailable(int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.view.ViewConfiguration: int getFadingEdgeLength()>:<public static>:<android.view.ViewConfiguration>
<android.hardware.Sensor: int getVersion()>:<public>:<android.hardware.Sensor>
<android.media.SoundPool: void setRate(int,float)>:<public final native>:<android.media.SoundPool>
<android.system.OsConstants: boolean S_ISSOCK(int)>:<public static>:<android.system.OsConstants>
<android.hardware.camera2.params.RggbChannelVector: float getComponent(int)>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.test.ViewAsserts: void assertLeftAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.KeyListener>
<android.widget.SlidingDrawer: void toggle()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.graphics.Rect: java.lang.String toShortString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.AbsListView: void onCancelPendingInputEvents()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.Camera: void startPreview()>:<public final native>:<android.hardware.Camera>
<android.widget.Spinner: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface.OnCancelListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telecom.Conference: void onStopDtmfTone()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyPairGeneratorSpec: int getKeySize()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.content.pm.FeatureGroupInfo: void <init>()>:<public>:<android.content.pm.FeatureGroupInfo:android.os.Parcelable>
<android.app.ActionBar: void show()>:<public abstract>:<android.app.ActionBar>
<android.graphics.drawable.ColorDrawable: int getColor()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.media.tv.TvContentRating: java.lang.String getRatingSystem()>:<public>:<android.media.tv.TvContentRating>
<android.transition.ChangeBounds: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.telephony.cdma.CdmaCellLocation: int hashCode()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.browse.MediaBrowser.SubscriptionCallback: void <init>()>:<public>:<android.media.browse.MediaBrowser.SubscriptionCallback>
<android.content.Context: void revokeUriPermission(android.net.Uri,int)>:<public abstract>:<android.content.Context>
<android.service.textservice.SpellCheckerService.Session: void onCreate()>:<public abstract>:<android.service.textservice.SpellCheckerService.Session>
<android.bluetooth.le.ScanCallback: void onScanFailed(int)>:<public>:<android.bluetooth.le.ScanCallback>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.LayerDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.hardware.usb.UsbEndpoint: int describeContents()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.text.method.BaseMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.telecom.RemoteConnection.Callback: void onConferenceChanged(android.telecom.RemoteConnection,android.telecom.RemoteConference)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.telephony.CellSignalStrength: int getLevel()>:<public abstract>:<android.telephony.CellSignalStrength>
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.ViewParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor.Request,java.lang.String)>:<public>:<android.app.VoiceInteractor>
<android.view.SubMenu: android.view.SubMenu setHeaderView(android.view.View)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.os.Parcel: void finalize()>:<protected>:<android.os.Parcel>
<android.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.inputmethodservice.InputMethodService: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.InputDevice.MotionRange: int getSource()>:<public>:<android.view.InputDevice.MotionRange>
<android.media.MediaRouter.RouteCategory: java.util.List getRoutes(java.util.List)>:<public>:<android.media.MediaRouter.RouteCategory>
<android.provider.Contacts.People: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setProfileName(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.hardware.usb.UsbDevice: int hashCode()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.text.SpannableStringInternal: int hashCode()>:<public>:<android.text.SpannableStringInternal>
<android.util.LongSparseArray: int indexOfValue(java.lang.Object)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setStatus(int)>:<public>:<android.print.PrinterInfo.Builder>
<android.net.LocalSocket: boolean isConnected()>:<public synchronized>:<android.net.LocalSocket:java.io.Closeable>
<org.json.JSONObject: double optDouble(java.lang.String,double)>:<public>:<org.json.JSONObject>
<android.os.Parcel: java.io.Serializable readSerializable()>:<public final>:<android.os.Parcel>
<android.util.Rational: short shortValue()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.media.MediaFormat: boolean getFeatureEnabled(java.lang.String)>:<public>:<android.media.MediaFormat>
<android.test.TouchUtils: void dragQuarterScreenUp(android.test.ActivityInstrumentationTestCase)>:<public static>:<android.test.TouchUtils>
<android.media.session.MediaController.TransportControls: void setRating(android.media.Rating)>:<public>:<android.media.session.MediaController.TransportControls>
<android.os.Parcel: long[] createLongArray()>:<public final>:<android.os.Parcel>
<android.app.Activity: boolean requestWindowFeature(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.database.sqlite.SQLiteFullException: void <init>()>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.media.tv.TvView.TvInputCallback: void onDisconnected(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.content.pm.ProviderInfo: void <clinit>()>:<static>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>:<public static>:<android.graphics.BitmapFactory>
<android.opengl.GLSurfaceView: void onAttachedToWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>:<public static>:<android.view.ViewConfiguration>
<android.app.Activity: void setDefaultKeyMode(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.IntentFilter: void addDataPath(java.lang.String,int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element MATRIX_3X3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.View.OnFocusChangeListener: void onFocusChange(android.view.View,boolean)>:<public abstract>:<android.view.View.OnFocusChangeListener>
<android.widget.ShareActionProvider: void setShareIntent(android.content.Intent)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.PopupWindow>
<android.provider.CalendarContract.Colors: void <clinit>()>:<static>:<android.provider.CalendarContract.Colors:android.provider.CalendarContract.ColorsColumns>
<android.app.backup.SharedPreferencesBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RectShape clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.app.usage.ConfigurationStats: void <clinit>()>:<static>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.preference.RingtonePreference: void onAttachedToHierarchy(android.preference.PreferenceManager)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.TextView: void setEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.MediaController: android.media.session.MediaController.TransportControls getTransportControls()>:<public>:<android.media.session.MediaController>
<android.telecom.VideoProfile: boolean isTransmissionEnabled(int)>:<public static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.service.dreams.DreamService: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.app.TabActivity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.FragmentManager: boolean popBackStackImmediate()>:<public abstract>:<android.app.FragmentManager>
<android.opengl.GLSurfaceView.Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.animation.RectEvaluator: android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)>:<public>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.net.Uri: void <clinit>()>:<static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.UnreadConversation build()>:<public>:<android.app.Notification.CarExtender.Builder>
<android.media.MediaPlayer: void setVolume(float,float)>:<public>:<android.media.MediaPlayer>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcAtop()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.admin.DevicePolicyManager: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.ViewGroup: void onStopNestedScroll(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.DialogFragment: void <init>()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.RectF: void offsetTo(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.widget.TextClock: void setTimeZone(java.lang.String)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>:<static>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.lang.String,int)>:<public>:<android.net.VpnService.Builder>
<android.test.mock.MockContext: android.content.Context getApplicationContext()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.inputmethod.BaseInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setIntegerPart(java.lang.String)>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.view.View: android.animation.StateListAnimator getStateListAnimator()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.wifi.p2p.WifiP2pGroup: boolean isGroupOwner()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.view.MotionEvent: java.lang.String axisToString(int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioManager: void adjustStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.telecom.RemoteConnection: void reject()>:<public>:<android.telecom.RemoteConnection>
<android.test.mock.MockResources: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.FragmentTransaction: boolean isEmpty()>:<public abstract>:<android.app.FragmentTransaction>
<android.graphics.drawable.VectorDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.provider.ContactsContract.SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.webkit.WebView: void flingScroll(int,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telecom.RemoteConference.Callback: void onDisconnected(android.telecom.RemoteConference,android.telecom.DisconnectCause)>:<public>:<android.telecom.RemoteConference.Callback>
<android.nfc.NdefRecord: android.nfc.NdefRecord createApplicationRecord(java.lang.String)>:<public static>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>:<public static>:<android.net.wifi.WifiManager>
<android.hardware.camera2.params.InputConfiguration: int getFormat()>:<public>:<android.hardware.camera2.params.InputConfiguration>
<android.app.FragmentController: android.app.FragmentManager getFragmentManager()>:<public>:<android.app.FragmentController>
<android.sax.Element: void setElementListener(android.sax.ElementListener)>:<public>:<android.sax.Element>
<android.inputmethodservice.KeyboardView: boolean handleBack()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.app.FragmentController: void restoreLoaderNonConfig(android.util.ArrayMap)>:<public>:<android.app.FragmentController>
<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDXor()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.TextView: void setImeOptions(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.inputmethodservice.ExtractEditText: boolean isInputMethodTarget()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.database.AbstractCursor: android.os.Bundle getExtras()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)>:<public>:<android.app.KeyguardManager>
<android.content.CursorLoader: void setProjection(java.lang.String[])>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.opengl.GLES30: void glVertexAttribI4iv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setEnterFadeDuration(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.util.AttributeSet: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>:<public abstract>:<android.util.AttributeSet>
<android.renderscript.BaseObj: boolean equals(java.lang.Object)>:<public>:<android.renderscript.BaseObj>
<android.media.session.MediaController.PlaybackInfo: int getPlaybackType()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.AndroidTestRunner: java.lang.String getTestClassName()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.graphics.SweepGradient: void <init>(float,float,int,int)>:<public>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.graphics.Bitmap.CompressFormat: void <clinit>()>:<static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>:<public>:<android.content.res.Resources>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.media.MediaMuxer: void writeSampleData(int,java.nio.ByteBuffer,android.media.MediaCodec.BufferInfo)>:<public>:<android.media.MediaMuxer>
<junit.framework.TestResult: void run(junit.framework.TestCase)>:<protected>:<junit.framework.TestResult>
<android.media.MediaMetadata: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.media.JetPlayer: boolean queueJetSegment(int,int,int,int,int,byte)>:<public>:<android.media.JetPlayer>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.telecom.Conference: android.telecom.PhoneAccountHandle getPhoneAccountHandle()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.widget.ListPopupWindow: void setVerticalOffset(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.content.ClipDescription: java.lang.String[] filterMimeTypes(java.lang.String)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.hardware.camera2.params.LensShadingMap: int getGainFactorCount()>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.system.OsConstants: boolean WIFEXITED(int)>:<public static>:<android.system.OsConstants>
<android.location.Address: void setPhone(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.database.Cursor: boolean isLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.provider.MediaStore.Audio.Playlists: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Playlists:android.provider.BaseColumns,android.provider.MediaStore.Audio.PlaylistsColumns>
<android.widget.TextView: int getLineCount()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.test.AndroidTestRunner: void runFailed(java.lang.String)>:<protected>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.view.Window.Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.Window.Callback>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.text.TextUtils.SimpleStringSplitter: boolean hasNext()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.view.View: void setPivotX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.NinePatch: java.lang.String getName()>:<public>:<android.graphics.NinePatch>
<android.graphics.Bitmap: boolean isPremultiplied()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.media.ImageWriter.OnImageReleasedListener: void onImageReleased(android.media.ImageWriter)>:<public abstract>:<android.media.ImageWriter.OnImageReleasedListener>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.animation.ValueAnimator: void setRepeatMode(int)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.hardware.usb.UsbDevice: int getDeviceProtocol()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor clear()>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.bluetooth.le.AdvertiseData: void <init>()>:<>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.hardware.camera2.CameraCaptureSession: void close()>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.media.JetPlayer: int getMaxTracks()>:<public static>:<android.media.JetPlayer>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>:<public static>:<android.view.FocusFinder>
<android.widget.SimpleAdapter.ViewBinder: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)>:<public abstract>:<android.widget.SimpleAdapter.ViewBinder>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getValueSanitizer(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.Bitmap: int describeContents()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.test.mock.MockContext: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setFaces(boolean)>:<public>:<android.renderscript.Type.Builder>
<android.view.ViewGroup: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setFractionalPart(java.lang.String)>:<public>:<android.text.style.TtsSpan.MoneyBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.net.wifi.WifiManager: boolean reconnect()>:<public>:<android.net.wifi.WifiManager>
<android.database.sqlite.SQLiteCursorDriver: void setBindArguments(java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.admin.DevicePolicyManager: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ActionBar: void setElevation(float)>:<public>:<android.app.ActionBar>
<android.location.LocationProvider: java.lang.String getName()>:<public>:<android.location.LocationProvider>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.widget.ActionMenuView.LayoutParams)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.method.DigitsKeyListener: void <init>(boolean,boolean)>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.DialerFilter: void onModeChange(int,int)>:<protected>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.app.Notification.WearableExtender: int getCustomSizePreset()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.Uri.Builder: android.net.Uri.Builder encodedFragment(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.media.AudioManager: void <init>()>:<>:<android.media.AudioManager>
<android.view.accessibility.AccessibilityRecord: void setRemovedCount(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.app.AlertDialog: void <init>(android.content.Context,int)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.transition.TransitionSet: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.view.WindowId.FocusObserver: void onFocusGained(android.view.WindowId)>:<public abstract>:<android.view.WindowId.FocusObserver>
<android.renderscript.Element: android.renderscript.Element getSubElement(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.util.MonthDisplayHelper: int getDayAt(int,int)>:<public>:<android.util.MonthDisplayHelper>
<android.bluetooth.BluetoothGattServerCallback: void <init>()>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONArray: org.json.JSONArray put(boolean)>:<public>:<org.json.JSONArray>
<android.app.LoaderManager: void <init>()>:<public>:<android.app.LoaderManager>
<android.graphics.RectF: void sort()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putString(int,java.lang.String)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.widget.ViewAnimator: void removeViewsInLayout(int,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.job.JobInfo: long getIntervalMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.graphics.Color: int rgb(int,int,int)>:<public static>:<android.graphics.Color>
<android.media.MediaDrm.OnKeyStatusChangeListener: void onKeyStatusChange(android.media.MediaDrm,byte[],java.util.List,boolean)>:<public abstract>:<android.media.MediaDrm.OnKeyStatusChangeListener>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int)>:<public>:<android.app.Notification.Builder>
<junit.framework.Test: int countTestCases()>:<public abstract>:<junit.framework.Test>
<android.text.style.BulletSpan: int describeContents()>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.telecom.Call: java.util.List getCannedTextResponses()>:<public>:<android.telecom.Call>
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>:<protected>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.OverScroller: int getCurrX()>:<public final>:<android.widget.OverScroller>
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.inputmethodservice.InputMethodService: void onBindInput()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onPeriodicNotification(android.media.AudioRecord)>:<public abstract>:<android.media.AudioRecord.OnRecordPositionUpdateListener>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback,int)>:<public>:<android.media.MediaRouter>
<android.webkit.WebResourceResponse: java.lang.String getEncoding()>:<public>:<android.webkit.WebResourceResponse>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.RingtonePreference: void setRingtoneType(int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>:<public static>:<android.app.ActivityManager>
<android.bluetooth.le.ScanRecord: byte[] getServiceData(android.os.ParcelUuid)>:<public>:<android.bluetooth.le.ScanRecord>
<android.media.MediaDescription: java.lang.CharSequence getDescription()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.service.dreams.DreamService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.View: void onAttachedToWindow()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.Window>
<android.animation.ValueAnimator: long getCurrentPlayTime()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int,android.media.AudioAttributes,int)>:<public static>:<android.media.MediaPlayer>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.telephony.NeighboringCellInfo: void <init>()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.view.View: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.BigTextStyle: void <init>()>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.preference.PreferenceActivity: boolean onIsHidingHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.speech.RecognitionListener: void onRmsChanged(float)>:<public abstract>:<android.speech.RecognitionListener>
<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)>:<public>:<android.media.session.MediaSession>
<android.net.Uri.Builder: android.net.Uri.Builder encodedOpaquePart(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>:<public>:<android.text.Layout>
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.content.ContentProviderResult: void <init>(android.net.Uri)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.media.tv.TvTrackInfo: int getAudioSampleRate()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.text.Layout: java.lang.CharSequence getText()>:<public final>:<android.text.Layout>
<android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.view.accessibility.AccessibilityEvent: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.Rating: android.media.Rating newStarRating(int,float)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEndDate(java.util.Date)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.widget.AbsListView: boolean isScrollingCacheEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.MotionEvent: float getHistoricalOrientation(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CalendarView: void setFirstDayOfWeek(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.LocalSocket: void <init>()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>:<protected abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.content.SyncRequest: void <clinit>()>:<static>:<android.content.SyncRequest:android.os.Parcelable>
<android.view.ActionMode: void <init>()>:<public>:<android.view.ActionMode>
<android.util.ArraySet: void addAll(android.util.ArraySet)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.net.sip.SipSession: void changeCall(java.lang.String,int)>:<public>:<android.net.sip.SipSession>
<android.database.sqlite.SQLiteTableLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.provider.SyncStateContract.Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.os.PowerManager: android.os.PowerManager.WakeLock newWakeLock(int,java.lang.String)>:<public>:<android.os.PowerManager>
<android.nfc.tech.Ndef: int getMaxSize()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.accounts.AuthenticatorException: void <init>(java.lang.String)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getAchievableFrameRatesFor(int,int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.bluetooth.BluetoothGattCharacteristic: int getPermissions()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.app.SearchableInfo: boolean autoUrlDetect()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.SearchView: java.lang.CharSequence getQuery()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.RemoteViews: void showPrevious(int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.webkit.WebView: void clearFormData()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telecom.RemoteConference.Callback: void onConnectionCapabilitiesChanged(android.telecom.RemoteConference,int)>:<public>:<android.telecom.RemoteConference.Callback>
<android.graphics.Region: android.graphics.Path getBoundaryPath()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.Toolbar: int getPopupTheme()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.app.Activity: boolean isChild()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.View: boolean requestFocus(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)>:<public static>:<android.text.format.Time>
<android.text.method.ScrollingMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.net.Uri.Builder: android.net.Uri.Builder appendEncodedPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.gesture.GestureOverlayView: void removeAllOnGesturePerformedListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.EGL14: boolean eglWaitClient()>:<public static native>:<android.opengl.EGL14>
<android.media.tv.TvInputService.Session: boolean onSelectTrack(int,java.lang.String)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.app.ActivityManager: boolean isRunningInTestHarness()>:<public static>:<android.app.ActivityManager>
<android.R.xml: void <init>()>:<public>:<android.R.xml>
<android.media.tv.TvView.OnUnhandledInputEventListener: boolean onUnhandledInputEvent(android.view.InputEvent)>:<public abstract>:<android.media.tv.TvView.OnUnhandledInputEventListener>
<android.renderscript.Element: android.renderscript.Element RGBA_5551(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.ListPopupWindow: int getHeight()>:<public>:<android.widget.ListPopupWindow>
<android.content.Context: java.lang.Object getSystemService(java.lang.String)>:<public abstract>:<android.content.Context>
<android.view.View: void createContextMenu(android.view.ContextMenu)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.inputmethodservice.InputMethodService.Insets: void <init>()>:<public>:<android.inputmethodservice.InputMethodService.Insets>
<junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>:<public static>:<junit.framework.TestSuite:junit.framework.Test>
<android.transition.Transition: android.graphics.Rect getEpicenter()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Notification.WearableExtender: android.app.PendingIntent getDisplayIntent()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.printservice.PrintJob: void <init>()>:<>:<android.printservice.PrintJob>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.view.KeyEvent: boolean isAltPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.ViewParent>
<android.bluetooth.BluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.bluetooth.BluetoothGatt: boolean discoverServices()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.widget.LinearLayout: void onRtlPropertiesChanged(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>:<public>:<android.webkit.WebViewClient>
<android.widget.Switch: void setTextOff(java.lang.CharSequence)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.res.ColorStateList: java.lang.String toString()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.bluetooth.BluetoothDevice: int describeContents()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.opengl.GLES20: void <init>()>:<public>:<android.opengl.GLES20>
<android.transition.Transition: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.media.session.MediaController: int getRatingType()>:<public>:<android.media.session.MediaController>
<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Notification.WearableExtender: int getGravity()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.view.inputmethod.CompletionInfo: long getId()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.os.Debug.InstructionCount: int globalTotal()>:<public>:<android.os.Debug.InstructionCount>
<android.graphics.Typeface: int hashCode()>:<public>:<android.graphics.Typeface>
<android.hardware.camera2.params.LensShadingMap: int getColumnCount()>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()>:<public>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.widget.MediaController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.CursorTreeAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.media.ImageWriter: void finalize()>:<protected>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.content.SyncStats: int describeContents()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<org.json.JSONStringer: void <init>()>:<public>:<org.json.JSONStringer>
<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.app.Activity: void startManagingCursor(android.database.Cursor)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.service.voice.VoiceInteractionSessionService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.service.dreams.DreamService: void setInteractive(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.accounts.AccountManager: java.lang.String getPreviousName(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.content.pm.LauncherActivityInfo: android.os.UserHandle getUser()>:<public>:<android.content.pm.LauncherActivityInfo>
<android.graphics.Bitmap: int getPixel(int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<org.xmlpull.v1.XmlSerializer: void flush()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>:<public>:<android.webkit.WebViewClient>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.telecom.RemoteConnection: android.net.Uri getAddress()>:<public>:<android.telecom.RemoteConnection>
<android.telecom.RemoteConnection.Callback: void <init>()>:<public>:<android.telecom.RemoteConnection.Callback>
<android.inputmethodservice.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.telephony.SubscriptionManager.OnSubscriptionsChangedListener: void onSubscriptionsChanged()>:<public>:<android.telephony.SubscriptionManager.OnSubscriptionsChangedListener>
<android.media.Rating: boolean hasHeart()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.media.session.MediaSession.Callback: void <init>()>:<public>:<android.media.session.MediaSession.Callback>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>:<public static native>:<android.opengl.ETC1>
<android.media.ImageWriter: void queueInputImage(android.media.Image)>:<public>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>:<public>:<android.drm.DrmManagerClient>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.View: int getScrollBarDefaultDelayBeforeFade()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.FrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.hardware.camera2.params.MeteringRectangle: java.lang.String toString()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Canvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.view.inputmethod.InputMethodSession: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.MediaDrm.MediaDrmStateException: void <init>()>:<>:<android.media.MediaDrm.MediaDrmStateException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.midi.MidiDevice.MidiConnection: void <init>(android.media.midi.MidiDevice)>:<>:<android.media.midi.MidiDevice.MidiConnection:java.io.Closeable>
<android.text.Layout: boolean isRtlCharAt(int)>:<public>:<android.text.Layout>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.IntentSender: int hashCode()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaRouter.Callback: void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.Callback>
<org.json.JSONArray: int length()>:<public>:<org.json.JSONArray>
<android.view.MotionEvent: float getSize()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvView.TvInputCallback: void onConnectionFailed(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.telephony.CellIdentityWcdma: int hashCode()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.media.tv.TvView: void setStreamVolume(float)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.test.mock.MockContext: android.os.Looper getMainLooper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.database.Cursor: boolean requery()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.ActionBar: void setDisplayShowHomeEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.CursorWindow: boolean isFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.ScrollView: void onNestedScroll(android.view.View,int,int,int,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.Image: int getFormat()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>:<public static>:<android.webkit.GeolocationPermissions>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.database.CursorWindow: void <clinit>()>:<static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.gesture.GestureOverlayView: void removeOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.ColorDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.Drawable>
<android.telecom.CallAudioState: boolean equals(java.lang.Object)>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.widget.Toolbar: void setSubtitle(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.app.ApplicationErrorReport.CrashInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.media.MediaRecorder: void setAudioChannels(int)>:<public>:<android.media.MediaRecorder>
<android.widget.TextView: int getMaxWidth()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Intent: byte getByteExtra(java.lang.String,byte)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.ConnectivityManager: android.net.Network getProcessDefaultNetwork()>:<public static>:<android.net.ConnectivityManager>
<android.graphics.Camera: void setLocation(float,float,float)>:<public native>:<android.graphics.Camera>
<android.widget.CalendarView: void setSelectedWeekBackgroundColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.R.drawable: void <init>()>:<public>:<android.R.drawable>
<android.view.accessibility.CaptioningManager: android.view.accessibility.CaptioningManager.CaptionStyle getUserStyle()>:<public>:<android.view.accessibility.CaptioningManager>
<android.renderscript.Sampler.Builder: void setMinification(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.media.MediaCodec: void finalize()>:<protected>:<android.media.MediaCodec>
<android.text.SpannedString: java.lang.CharSequence subSequence(int,int)>:<public>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.app.backup.BackupAgent: void onRestoreFinished()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.assist.AssistStructure.ViewNode: boolean isLongClickable()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.print.PrinterId: void <clinit>()>:<static>:<android.print.PrinterId:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: int getPsc()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.telephony.gsm.SmsMessage: boolean isReplace()>:<public>:<android.telephony.gsm.SmsMessage>
<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void <init>(android.inputmethodservice.AbstractInputMethodService)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<android.transition.Transition: android.transition.Transition.EpicenterCallback getEpicenterCallback()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.DialogFragment: void onCancel(android.content.DialogInterface)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.service.notification.StatusBarNotification: int describeContents()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.text.style.DynamicDrawableSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Instrumentation: android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor,long)>:<public>:<android.app.Instrumentation>
<android.net.IpPrefix: java.net.InetAddress getAddress()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>:<public>:<android.os.RemoteCallbackList>
<android.inputmethodservice.Keyboard.Row: void <init>(android.inputmethodservice.Keyboard)>:<public>:<android.inputmethodservice.Keyboard.Row>
<android.view.ViewGroup.MarginLayoutParams: boolean isMarginRelative()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.app.UiAutomation: boolean clearWindowContentFrameStats(int)>:<public>:<android.app.UiAutomation>
<android.content.pm.LauncherApps.Callback: void onPackageAdded(java.lang.String,android.os.UserHandle)>:<public abstract>:<android.content.pm.LauncherApps.Callback>
<android.graphics.drawable.AnimationDrawable: void addFrame(android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.content.ContextWrapper: java.io.File[] getObbDirs()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: void <init>(android.hardware.ConsumerIrManager,int,int)>:<public>:<android.hardware.ConsumerIrManager.CarrierFrequencyRange>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)>:<public>:<android.media.MediaPlayer>
<android.widget.AbsListView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.Toolbar: int getContentInsetLeft()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.hardware.camera2.CameraDevice: java.lang.String getId()>:<public abstract>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.app.ActionBar.Tab: int getPosition()>:<public abstract>:<android.app.ActionBar.Tab>
<android.opengl.GLES10: void glPushMatrix()>:<public static native>:<android.opengl.GLES10>
<android.content.res.AssetManager.AssetInputStream: void reset()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.text.method.DateTimeKeyListener: void <clinit>()>:<static>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.Window: android.view.View getCurrentFocus()>:<public abstract>:<android.view.Window>
<org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public final>:<org.apache.http.conn.ssl.StrictHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.graphics.drawable.NinePatchDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.provider.Telephony.Sms.Sent: void <clinit>()>:<static>:<android.provider.Telephony.Sms.Sent:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.nfc.tech.NfcF: void <init>()>:<>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.transition.TransitionValues: int hashCode()>:<public>:<android.transition.TransitionValues>
<android.transition.Transition: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.WifiEnterpriseConfig: void setPlmn(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: void <init>()>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.security.keystore.KeyGenParameterSpec: int getKeySize()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.hardware.camera2.params.BlackLevelPattern: java.lang.String toString()>:<public>:<android.hardware.camera2.params.BlackLevelPattern>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources.Theme)>:<public static>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.widget.VideoView: void seekTo(int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.res.Resources: int[] getIntArray(int)>:<public>:<android.content.res.Resources>
<android.opengl.GLES20: void glFrontFace(int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.PixelFormat: void getPixelFormatInfo(int,android.graphics.PixelFormat)>:<public static>:<android.graphics.PixelFormat>
<android.widget.TextView: android.text.Editable getEditableText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.pm.LauncherActivityInfo: void <init>()>:<>:<android.content.pm.LauncherActivityInfo>
<android.os.Debug: int getGlobalFreedCount()>:<public static>:<android.os.Debug>
<android.widget.TabHost.TabSpec: java.lang.String getTag()>:<public>:<android.widget.TabHost.TabSpec>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.Dialog: void show()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.Gallery: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.content.pm.ProviderInfo: int describeContents()>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.media.session.PlaybackState: java.lang.String toString()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.nfc.cardemulation.HostApduService: byte[] processCommandApdu(byte[],android.os.Bundle)>:<public abstract>:<android.nfc.cardemulation.HostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.util.Rational: java.lang.String toString()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.widget.Scroller: void abortAnimation()>:<public>:<android.widget.Scroller>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onKey(int,int[])>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.util.MonthDisplayHelper: int getRowOf(int)>:<public>:<android.util.MonthDisplayHelper>
<android.preference.EditTextPreference: java.lang.String getText()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.telephony.SmsManager: void injectSmsPdu(byte[],java.lang.String,android.app.PendingIntent)>:<public>:<android.telephony.SmsManager>
<android.app.backup.FileBackupHelperBase: void finalize()>:<protected>:<android.app.backup.FileBackupHelperBase>
<android.util.EventLogTags.Description: void <init>()>:<>:<android.util.EventLogTags.Description>
<android.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public abstract>:<android.app.FragmentManager>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onError()>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>:<public>:<android.text.StaticLayout.Builder>
<android.widget.ExpandableListView.OnGroupClickListener: boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long)>:<public abstract>:<android.widget.ExpandableListView.OnGroupClickListener>
<android.service.voice.VoiceInteractionSession.Request: android.os.Bundle getExtras()>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.net.UrlQuerySanitizer: void <init>(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.system.Os: int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)>:<public static>:<android.system.Os>
<android.test.mock.MockPackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.telecom.Conference: boolean addConnection(android.telecom.Connection)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.text.style.AlignmentSpan.Standard: void <init>(android.text.Layout.Alignment)>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.database.sqlite.SQLiteTransactionListener: void onBegin()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.graphics.Paint: android.graphics.Paint.Style getStyle()>:<public>:<android.graphics.Paint>
<android.widget.ExpandableListView.OnChildClickListener: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>:<public abstract>:<android.widget.ExpandableListView.OnChildClickListener>
<android.media.midi.MidiDeviceInfo.PortInfo: int getPortNumber()>:<public>:<android.media.midi.MidiDeviceInfo.PortInfo>
<android.provider.Telephony.Threads: long getOrCreateThreadId(android.content.Context,java.lang.String)>:<public static>:<android.provider.Telephony.Threads:android.provider.Telephony.ThreadsColumns>
<android.net.RouteInfo: java.lang.String toString()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.telecom.DisconnectCause: int describeContents()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onActive(android.hardware.camera2.CameraCaptureSession)>:<public>:<android.hardware.camera2.CameraCaptureSession.StateCallback>
<android.speech.tts.TextToSpeech: android.speech.tts.Voice getVoice()>:<public>:<android.speech.tts.TextToSpeech>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.TextSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: long getHistoricalEventTime(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvView: void draw(android.graphics.Canvas)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.app.Activity: void reportFullyDrawn()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>:<public>:<android.net.ConnectivityManager>
<android.view.ViewGroup.MarginLayoutParams: void <init>(int,int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.text.StaticLayout.Builder: void <init>()>:<>:<android.text.StaticLayout.Builder>
<android.preference.Preference: android.content.Context getContext()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.View: void requestLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.DialogInterface.OnKeyListener: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>:<public abstract>:<android.content.DialogInterface.OnKeyListener>
<android.test.InstrumentationTestSuite: void <init>(java.lang.Class,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMinMargins(android.print.PrintAttributes.Margins)>:<public>:<android.print.PrintAttributes.Builder>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String[] getAcceptTypes()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.database.Cursor: int getInt(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.pdf.PdfDocument: void close()>:<public>:<android.graphics.pdf.PdfDocument>
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>:<public>:<android.os.RemoteCallbackList>
<android.telecom.RemoteConference.Callback: void onConferenceableConnectionsChanged(android.telecom.RemoteConference,java.util.List)>:<public>:<android.telecom.RemoteConference.Callback>
<android.inputmethodservice.KeyboardView: boolean onHoverEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView.OnGroupCollapseListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.ActivityManager.MemoryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.webkit.CookieManager: void removeSessionCookies(android.webkit.ValueCallback)>:<public abstract>:<android.webkit.CookieManager>
<android.view.View: boolean dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.FieldPacker: android.renderscript.Int4 subInt4()>:<public>:<android.renderscript.FieldPacker>
<android.widget.ScrollView: void setFillViewport(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void onClick(android.view.View)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)>:<public static>:<android.content.ContentResolver>
<android.view.animation.Animation: void setRepeatMode(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<dalvik.system.BaseDexClassLoader: java.net.URL findResource(java.lang.String)>:<protected>:<dalvik.system.BaseDexClassLoader:java.lang.ClassLoader>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.ActionBar: boolean isHideOnContentScrollEnabled()>:<public>:<android.app.ActionBar>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)>:<public>:<android.media.JetPlayer>
<android.drm.DrmSupportInfo: void setDescription(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()>:<public final>:<android.media.MediaCodecInfo>
<android.media.AudioManager: int getStreamVolume(int)>:<public>:<android.media.AudioManager>
<android.telecom.Call.Details: boolean hasProperty(int,int)>:<public static>:<android.telecom.Call.Details>
<android.widget.AbsListView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.voice.VoiceInteractionService: void setDisabledShowContext(int)>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.VoiceInteractor: boolean[] supportsCommands(java.lang.String[])>:<public>:<android.app.VoiceInteractor>
<android.view.inputmethod.InputMethodManager: void <init>()>:<>:<android.view.inputmethod.InputMethodManager>
<android.content.SharedPreferences: boolean contains(java.lang.String)>:<public abstract>:<android.content.SharedPreferences>
<android.opengl.GLSurfaceView: void <init>(android.content.Context)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.inputmethod.InputMethodManager: boolean isAcceptingText()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.inputmethodservice.InputMethodService: void <init>()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewStub: int getInflatedId()>:<public>:<android.view.ViewStub:android.view.View>
<android.app.ActionBar: android.app.ActionBar.Tab newTab()>:<public abstract>:<android.app.ActionBar>
<android.app.VoiceInteractor.PickOptionRequest: void onPickOptionResult(boolean,android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>:<public>:<android.app.VoiceInteractor.PickOptionRequest:android.app.VoiceInteractor.Request>
<android.media.audiofx.PresetReverb: void setProperties(android.media.audiofx.PresetReverb.Settings)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>:<public final>:<android.telephony.gsm.SmsManager>
<android.content.res.Resources: int getDimensionPixelOffset(int)>:<public>:<android.content.res.Resources>
<android.telecom.Connection: void setAudioModeIsVoip(boolean)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContentProviderClient>
<android.opengl.GLES30: void glVertexAttribI4ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.BitmapDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.Messenger: android.os.IBinder getBinder()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.graphics.Region: boolean union(android.graphics.Rect)>:<public final>:<android.graphics.Region:android.os.Parcelable>
<android.util.StateSet: void <init>()>:<>:<android.util.StateSet>
<android.widget.CursorAdapter: void changeCursor(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)>:<public static>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>:<public static>:<android.graphics.BitmapFactory>
<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.view.ViewParent: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.media.audiofx.NoiseSuppressor: void <init>()>:<>:<android.media.audiofx.NoiseSuppressor:android.media.audiofx.AudioEffect>
<android.transition.ArcMotion: void setMinimumVerticalAngle(float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.app.job.JobParameters: void <init>()>:<>:<android.app.job.JobParameters:android.os.Parcelable>
<android.widget.Toolbar: void setSubtitleTextColor(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.widget.ThemedSpinnerAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>:<public abstract>:<android.widget.ThemedSpinnerAdapter:android.widget.SpinnerAdapter>
<android.view.MotionEvent: float getRawX()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.renderscript.Element: java.lang.String getSubElementName(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowDetached()>:<public abstract>:<android.view.ViewTreeObserver.OnWindowAttachListener>
<android.util.SparseBooleanArray: void <init>(int)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.telecom.RemoteConference.Callback: void <init>()>:<public>:<android.telecom.RemoteConference.Callback>
<android.widget.SlidingDrawer: void animateToggle()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.media.Rating: float getPercentRating()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.widget.AbsListView: void setFastScrollStyle(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.os.Message: java.lang.String toString()>:<public>:<android.os.Message:android.os.Parcelable>
<android.webkit.CookieManager: boolean acceptCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.text.AutoText: void <init>()>:<>:<android.text.AutoText>
<android.app.Fragment: boolean isVisible()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.opengl.EGLContext: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLContext:android.opengl.EGLObjectHandle>
<android.telephony.PhoneNumberFormattingTextWatcher: void <init>(java.lang.String)>:<public>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.widget.TextView: int getBaseline()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.EnvironmentalReverb: void setRoomLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.provider.Settings.Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>:<public static final>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.test.mock.MockPackageManager: void removePermission(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.AudioRecord.Builder: android.media.AudioRecord build()>:<public>:<android.media.AudioRecord.Builder>
<android.renderscript.ScriptIntrinsicBLAS: void ZHEMV(int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.MediaCrypto: boolean isCryptoSchemeSupported(java.util.UUID)>:<public static final>:<android.media.MediaCrypto>
<android.nfc.tech.IsoDep: byte[] transceive(byte[])>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.app.VoiceInteractor.AbortVoiceRequest: void <init>(android.app.VoiceInteractor.Prompt,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.AbortVoiceRequest:android.app.VoiceInteractor.Request>
<android.renderscript.ScriptIntrinsicBLAS: void DTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.text.BoringLayout: float getLineMax(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES31: void glProgramUniform2i(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.text.BoringLayout: int getEllipsisStart(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.test.TouchUtils: int dragViewToY(android.test.InstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: void destroyDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.bluetooth.le.ScanSettings: int getCallbackType()>:<public>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<android.view.inputmethod.InputMethodSession: void finishInput()>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.text.style.ClickableSpan: void onClick(android.view.View)>:<public abstract>:<android.text.style.ClickableSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.graphics.Path: android.graphics.Path.FillType getFillType()>:<public>:<android.graphics.Path>
<android.util.Base64: java.lang.String encodeToString(byte[],int,int,int)>:<public static>:<android.util.Base64>
<android.app.assist.AssistStructure.ViewNode: int getTextColor()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.telephony.SmsMessage: byte[] getPdu()>:<public>:<android.telephony.SmsMessage>
<android.content.RestrictionsManager: boolean hasRestrictionsProvider()>:<public>:<android.content.RestrictionsManager>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>:<public>:<android.hardware.fingerprint.FingerprintManager.CryptoObject>
<android.view.ViewGroup: int getLayoutMode()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.Preference: boolean shouldDisableDependents()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Window: void setAttributes(android.view.WindowManager.LayoutParams)>:<public>:<android.view.Window>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.ViewTreeObserver.OnPreDrawListener: boolean onPreDraw()>:<public abstract>:<android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style[] values()>:<public static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera.PreviewCallback)>:<public final>:<android.hardware.Camera>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.ScaleGestureDetector: long getEventTime()>:<public>:<android.view.ScaleGestureDetector>
<android.content.IntentFilter: java.util.Iterator actionsIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.ViewConfiguration: int getScaledOverflingDistance()>:<public>:<android.view.ViewConfiguration>
<android.media.AudioTrack: void stop()>:<public>:<android.media.AudioTrack>
<android.content.Loader: void onContentChanged()>:<public>:<android.content.Loader>
<android.graphics.Typeface: boolean isBold()>:<public final>:<android.graphics.Typeface>
<android.test.mock.MockContext: void setWallpaper(android.graphics.Bitmap)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.util.StateSet: boolean stateSetMatches(int[],int[])>:<public static>:<android.util.StateSet>
<android.util.MutableByte: void <init>(byte)>:<public>:<android.util.MutableByte>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationX(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.service.dreams.DreamService: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>:<public>:<android.net.wifi.WifiManager>
<android.media.MediaCodecInfo.EncoderCapabilities: boolean isBitrateModeSupported(int)>:<public>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Type: int getY()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.drawable.shapes.RoundRectShape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.json.JSONArray: org.json.JSONArray put(int,boolean)>:<public>:<org.json.JSONArray>
<android.renderscript.FieldPacker: void addI32(int)>:<public>:<android.renderscript.FieldPacker>
<android.test.AndroidTestRunner: void setTest(junit.framework.Test)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.telecom.Call.Callback: void onCannedTextResponsesLoaded(android.telecom.Call,java.util.List)>:<public>:<android.telecom.Call.Callback>
<android.media.MediaCodec.CodecException: java.lang.String getDiagnosticInfo()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: void setShadowLayer(float,float,float,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>:<public static>:<android.webkit.CookieManager>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>:<public>:<android.os.RemoteCallbackList>
<android.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.telecom.Conference: void onMerge()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.transition.Transition: boolean isTransitionRequired(android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.media.MediaRecorder: void setVideoSize(int,int)>:<public native>:<android.media.MediaRecorder>
<android.content.Context: void startActivity(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.media.AudioManager: boolean isSpeakerphoneOn()>:<public>:<android.media.AudioManager>
<android.view.inputmethod.InputMethodSession: void toggleSoftInput(int,int)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<org.json.JSONArray: boolean getBoolean(int)>:<public>:<org.json.JSONArray>
<android.app.RemoteInput: int describeContents()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.graphics.Matrix: void finalize()>:<protected>:<android.graphics.Matrix>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.util.Property: java.lang.String getName()>:<public>:<android.util.Property>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.Parcel: int dataAvail()>:<public final>:<android.os.Parcel>
<android.os.Debug: void resetThreadAllocSize()>:<public static>:<android.os.Debug>
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.dreams.DreamService: void onDreamingStopped()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.media.MediaPlayer.OnPreparedListener: void onPrepared(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnPreparedListener>
<android.test.ActivityUnitTestCase: void tearDown()>:<protected>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.hardware.camera2.CaptureFailure: boolean wasImageCaptured()>:<public>:<android.hardware.camera2.CaptureFailure>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setAudioFormat(android.media.AudioFormat)>:<public>:<android.media.AudioTrack.Builder>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: boolean equals(java.lang.Object)>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.content.res.Configuration: void readFromParcel(android.os.Parcel)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.speech.RecognitionListener: void onResults(android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<android.hardware.Camera.Parameters: boolean isVideoStabilizationSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.app.assist.AssistStructure: void <init>()>:<public>:<android.app.assist.AssistStructure:android.os.Parcelable>
<android.media.tv.TvView: void timeShiftPause()>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>:<public>:<android.content.res.Resources>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getAnonymousIdentity()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: float getPivotY()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.text.format.Formatter: void <init>()>:<public>:<android.text.format.Formatter>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value valueOf(java.lang.String)>:<public static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.media.browse.MediaBrowser: void disconnect()>:<public>:<android.media.browse.MediaBrowser>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.widget.Toolbar: int getContentInsetStart()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Color: int alpha(int)>:<public static>:<android.graphics.Color>
<android.provider.ContactsContract.Intents: void <init>()>:<public>:<android.provider.ContactsContract.Intents>
<android.webkit.WebView: void postVisualStateCallback(long,android.webkit.WebView.VisualStateCallback)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Paint: float getTextScaleX()>:<public native>:<android.graphics.Paint>
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>:<public>:<android.hardware.fingerprint.FingerprintManager>
<android.telephony.PhoneNumberUtils: void addTtsSpan(android.text.Spannable,int,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.content.Intent: int filterHashCode()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.NativeActivity: void surfaceRedrawNeeded(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.app.MediaRouteButton: int[] onCreateDrawableState(int)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.telecom.Connection.VideoProvider: void changeVideoQuality(int)>:<public>:<android.telecom.Connection.VideoProvider>
<android.telephony.CellSignalStrength: int getAsuLevel()>:<public abstract>:<android.telephony.CellSignalStrength>
<android.database.CursorWrapper: boolean moveToPrevious()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ProgressBar: void setVisibility(int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.os.BaseBundle: double getDouble(java.lang.String,double)>:<public>:<android.os.BaseBundle>
<android.app.ActivityManager.TaskDescription: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.content.Loader: void <init>(android.content.Context)>:<public>:<android.content.Loader>
<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>:<public static>:<android.graphics.Movie>
<android.util.SparseBooleanArray: boolean get(int,boolean)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.location.LocationProvider: boolean supportsBearing()>:<public>:<android.location.LocationProvider>
<android.graphics.Bitmap: android.graphics.Bitmap.Config getConfig()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.app.PendingIntent)>:<public>:<android.media.AudioManager>
<android.view.animation.Transformation: java.lang.String toString()>:<public>:<android.view.animation.Transformation>
<android.os.Debug: int getBinderSentTransactions()>:<public static native>:<android.os.Debug>
<android.system.Os: void <init>()>:<>:<android.system.Os>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>:<public static native>:<android.opengl.GLES11Ext>
<android.system.Os: void unsetenv(java.lang.String)>:<public static>:<android.system.Os>
<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager.DisplayListener,android.os.Handler)>:<public>:<android.hardware.display.DisplayManager>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.Uri.Builder: android.net.Uri.Builder opaquePart(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.nfc.TagLostException: void <init>()>:<public>:<android.nfc.TagLostException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: void setEllipsize(android.text.TextUtils.TruncateAt)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.PatternMatcher: int describeContents()>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.util.SparseArray: int size()>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public abstract>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.ViewGroup: void measureChildren(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.Animation: float getScaleFactor()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>:<public>:<android.net.ConnectivityManager>
<android.widget.LinearLayout: void setDividerPadding(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.os.BaseBundle: boolean getBoolean(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.view.Window: boolean hasChildren()>:<public final>:<android.view.Window>
<android.service.voice.VoiceInteractionSession.Insets: void <init>()>:<public>:<android.service.voice.VoiceInteractionSession.Insets>
<android.provider.ContactsContract.SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.widget.ZoomControls: void <init>(android.content.Context)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.telecom.Call.Details: android.telecom.GatewayInfo getGatewayInfo()>:<public>:<android.telecom.Call.Details>
<android.media.AudioTrack: boolean setPreferredDevice(android.media.AudioDeviceInfo)>:<public>:<android.media.AudioTrack>
<android.text.AutoText: int getSize(android.view.View)>:<public static>:<android.text.AutoText>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOver()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.AudioTrack: android.media.AudioDeviceInfo getPreferredDevice()>:<public>:<android.media.AudioTrack>
<android.hardware.camera2.params.LensShadingMap: java.lang.String toString()>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.bluetooth.BluetoothGattCallback: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.webkit.WebIconDatabase: void removeAllIcons()>:<public abstract>:<android.webkit.WebIconDatabase>
<android.view.ActionMode.Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public abstract>:<android.view.ActionMode.Callback>
<android.text.style.QuoteSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.RenamingDelegatingContext: java.lang.String[] fileList()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.system.Os: java.lang.String strerror(int)>:<public static>:<android.system.Os>
<android.util.JsonWriter: android.util.JsonWriter name(java.lang.String)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.content.pm.PackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: void getDrawingRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Loader: boolean isStarted()>:<public>:<android.content.Loader>
<android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener: void onDnsSdServiceAvailable(java.lang.String,java.lang.String,android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener>
<android.media.MediaRouter.RouteInfo: android.graphics.drawable.Drawable getIconDrawable()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.service.notification.NotificationListenerService: void onNotificationRankingUpdate(android.service.notification.NotificationListenerService.RankingMap)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.Layout: int getLineAscent(int)>:<public final>:<android.text.Layout>
<android.bluetooth.le.ScanFilter: int hashCode()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.telephony.CellIdentityCdma: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.view.View: void startAnimation(android.view.animation.Animation)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.xmlpull.v1.XmlSerializer: void cdsect(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.test.mock.MockCursor: int getCount()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.ContentResolver: void <init>(android.content.Context)>:<public>:<android.content.ContentResolver>
<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public abstract>:<android.text.method.MovementMethod>
<android.opengl.GLES31: void glProgramUniform4ui(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.bluetooth.le.ScanResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.view.View: int getLayoutDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipAudioCall: void attachCall(android.net.sip.SipSession,java.lang.String)>:<public>:<android.net.sip.SipAudioCall>
<android.view.Menu: void removeItem(int)>:<public abstract>:<android.view.Menu>
<android.test.mock.MockContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>:<protected>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.location.Address: java.lang.String getSubLocality()>:<public>:<android.location.Address:android.os.Parcelable>
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>:<public>:<android.speech.tts.TextToSpeech>
<android.view.View: void <clinit>()>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothClass: int getDeviceClass()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.view.View.AccessibilityDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.view.inputmethod.CompletionInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putRating(java.lang.String,android.media.Rating)>:<public>:<android.media.MediaMetadata.Builder>
<android.telephony.NeighboringCellInfo: int getLac()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String toString()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener,android.os.Handler)>:<public>:<android.view.GestureDetector>
<android.view.KeyEvent.DispatcherState: void reset(java.lang.Object)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.os.PowerManager.WakeLock: java.lang.String toString()>:<public>:<android.os.PowerManager.WakeLock>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattService getService()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.TextView: int getTotalPaddingRight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>:<public static>:<android.text.AutoText>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)>:<public>:<android.hardware.camera2.CameraCaptureSession.CaptureCallback>
<org.apache.http.conn.ConnectTimeoutException: void <init>()>:<public>:<org.apache.http.conn.ConnectTimeoutException:java.io.InterruptedIOException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.telecom.Call: java.util.List getChildren()>:<public>:<android.telecom.Call>
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.os.Bundle: void <init>(java.lang.ClassLoader)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.nfc.tech.NfcBarcode: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.widget.RatingBar: int getNumStars()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>:<public>:<android.hardware.fingerprint.FingerprintManager.AuthenticationResult>
<android.content.pm.PackageInfo: void <clinit>()>:<static>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.bluetooth.le.ScanFilter: void <clinit>()>:<static>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.media.RemoteController: boolean sendMediaKeyEvent(android.view.KeyEvent)>:<public>:<android.media.RemoteController>
<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.RestrictionEntry: void setChoiceValues(java.lang.String[])>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getJpegThumbnailSize()>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.text.style.TtsSpan.TimeBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.TimeBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.opengl.GLES20: void glClear(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.PopupWindow: void setWindowLayoutType(int)>:<public>:<android.widget.PopupWindow>
<android.widget.RadioButton: void toggle()>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.AlertDialog.Builder: android.app.AlertDialog show()>:<public>:<android.app.AlertDialog.Builder>
<android.app.NotificationManager: void cancel(java.lang.String,int)>:<public>:<android.app.NotificationManager>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted()>:<public>:<android.security.NetworkSecurityPolicy>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>:<public>:<android.hardware.SensorManager>
<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>:<public>:<android.os.BaseBundle>
<android.widget.TextView: int getImeActionId()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.TriggerEvent: void <init>()>:<>:<android.hardware.TriggerEvent>
<android.media.MediaSync: void <init>()>:<public>:<android.media.MediaSync>
<android.location.LocationListener: void onProviderEnabled(java.lang.String)>:<public abstract>:<android.location.LocationListener>
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.VpnService: boolean protect(int)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int)>:<public abstract>:<android.app.ActionBar>
<android.content.res.AssetManager.AssetInputStream: void <init>(android.content.res.AssetManager)>:<>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.system.OsConstants: boolean S_ISBLK(int)>:<public static>:<android.system.OsConstants>
<android.util.JsonReader: boolean isLenient()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.content.pm.PermissionGroupInfo: void <init>()>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.hardware.camera2.params.MeteringRectangle: int getWidth()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.app.admin.SystemUpdatePolicy: void <init>()>:<>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.os.StatFs: long getFreeBlocksLong()>:<public>:<android.os.StatFs>
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(android.net.Uri)>:<public static>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.widget.DatePicker: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>:<public>:<android.sax.Element>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener)>:<public>:<android.media.RemoteController>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void SGEMM(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.accessibility.AccessibilityNodeInfo: boolean canOpenPopup()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.Bitmap: boolean hasMipMap()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setExitFadeDuration(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES20: void glUniform2i(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.OrientationEventListener: void <init>(android.content.Context,int)>:<public>:<android.view.OrientationEventListener>
<android.widget.TextView.SavedState: void <init>()>:<>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.media.session.MediaController.TransportControls: void rewind()>:<public>:<android.media.session.MediaController.TransportControls>
<android.accessibilityservice.AccessibilityService: boolean onGesture(int)>:<protected>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.AssertionFailedError: void <init>()>:<public>:<android.test.AssertionFailedError:java.lang.Error,java.lang.Throwable>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.text.format.Time: int getWeekNumber()>:<public>:<android.text.format.Time>
<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.session.MediaController.TransportControls: void seekTo(long)>:<public>:<android.media.session.MediaController.TransportControls>
<android.hardware.Camera.Parameters: void setFocusAreas(java.util.List)>:<public>:<android.hardware.Camera.Parameters>
<android.widget.ToggleButton: void setChecked(boolean)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.BroadcastReceiver.PendingResult: android.os.Bundle getResultExtras(boolean)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.widget.DatePicker: void updateDate(int,int,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.io.File)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.ExpandableListAdapter: int getChildrenCount(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.view.inputmethod.CursorAnchorInfo: int getInsertionMarkerFlags()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.media.AudioTrack: void finalize()>:<protected>:<android.media.AudioTrack>
<org.xmlpull.v1.XmlPullParserFactory: void setFeature(java.lang.String,boolean)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.service.media.CameraPrewarmService: boolean onUnbind(android.content.Intent)>:<public>:<android.service.media.CameraPrewarmService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.InstrumentationTestRunner: void <init>()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.database.CursorWrapper: android.os.Bundle getExtras()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.drawable.StateListDrawable: void <init>()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.util.ArrayMap: boolean equals(java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.print.pdf.PrintedPdfDocument: void <init>(android.content.Context,android.print.PrintAttributes)>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void computeConstantSize()>:<protected>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Region: boolean quickReject(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.print.PrintJobInfo: int getState()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.service.dreams.DreamService: boolean isFullscreen()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.webkit.ClientCertRequest: void ignore()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.util.LogPrinter: void <init>(int,java.lang.String)>:<public>:<android.util.LogPrinter:android.util.Printer>
<android.graphics.Path.Direction: android.graphics.Path.Direction valueOf(java.lang.String)>:<public static>:<android.graphics.Path.Direction:java.lang.Enum>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.effect.Effect: void apply(int,int,int,int)>:<public abstract>:<android.media.effect.Effect>
<android.widget.ListPopupWindow: void <init>(android.content.Context)>:<public>:<android.widget.ListPopupWindow>
<android.app.MediaRouteButton: void onMeasure(int,int)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.TextView: boolean isPaddingOffsetRequired()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.media.MediaRouter.UserRouteInfo: void setVolumeCallback(android.media.MediaRouter.VolumeCallback)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.widget.ProgressBar: int getSecondaryProgress()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.animation.ValueAnimator: void resume()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(int,int)>:<public abstract>:<android.util.AttributeSet>
<junit.framework.TestListener: void addError(junit.framework.Test,java.lang.Throwable)>:<public abstract>:<junit.framework.TestListener>
<android.telephony.SubscriptionInfo: int describeContents()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.widget.GridLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float,android.graphics.Paint)>:<public>:<android.graphics.Movie>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path.Op)>:<public>:<android.graphics.Path>
<android.os.Environment: java.io.File getExternalStorageDirectory()>:<public static>:<android.os.Environment>
<android.view.View: boolean awakenScrollBars(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockCursor: boolean moveToPrevious()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.tv.TvInputInfo: java.lang.String getParentId()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.webkit.WebView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.tv.TvInputService.Session: void onSurfaceChanged(int,int,int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.net.wifi.WifiManager: void setTdlsEnabled(java.net.InetAddress,boolean)>:<public>:<android.net.wifi.WifiManager>
<android.app.Notification.CarExtender: void <init>(android.app.Notification)>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.widget.TabHost.TabContentFactory)>:<public>:<android.widget.TabHost.TabSpec>
<android.content.res.ObbInfo: void <clinit>()>:<static>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.webkit.WebHistoryItem: java.lang.String getTitle()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.renderscript.Sampler: float getAnisotropy()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.text.style.TtsSpan.CardinalBuilder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.CardinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.os.TokenWatcher: void release(android.os.IBinder)>:<public>:<android.os.TokenWatcher>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.bluetooth.le.ScanCallback: void <init>()>:<public>:<android.bluetooth.le.ScanCallback>
<android.service.wallpaper.WallpaperService.Engine: void onOffsetsChanged(float,float,float,float,int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.ExpandableListView.ExpandableListContextMenuInfo: void <init>(android.view.View,long,long)>:<public>:<android.widget.ExpandableListView.ExpandableListContextMenuInfo:android.view.ContextMenu.ContextMenuInfo>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.KeyEvent: java.lang.String keyCodeToString(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvInputService.Session: void onOverlayViewSizeChanged(int,int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.os.Message: void setAsynchronous(boolean)>:<public>:<android.os.Message:android.os.Parcelable>
<android.provider.ContactsContract.ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>:<public static>:<android.provider.ContactsContract.ProfileSyncState:android.provider.SyncStateContract.Columns>
<junit.runner.BaseTestRunner: void testEnded(java.lang.String)>:<public abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.util.JsonToken: android.util.JsonToken[] values()>:<public static>:<android.util.JsonToken:java.lang.Enum>
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>:<public>:<android.view.ViewConfiguration>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo.CodecCapabilities getCapabilitiesForType(java.lang.String)>:<public final>:<android.media.MediaCodecInfo>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.media.MediaSync: android.media.MediaTimestamp getTimestamp()>:<public>:<android.media.MediaSync>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>:<public abstract>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.preference.SwitchPreference: void onBindView(android.view.View)>:<protected>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.location.GpsSatellite: boolean usedInFix()>:<public>:<android.location.GpsSatellite>
<android.os.AsyncTask: void <clinit>()>:<static>:<android.os.AsyncTask>
<android.hardware.camera2.CameraCharacteristics: void <init>()>:<>:<android.hardware.camera2.CameraCharacteristics:android.hardware.camera2.CameraMetadata>
<android.opengl.EGL14: boolean eglQuerySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.app.FragmentController: android.app.FragmentController createController(android.app.FragmentHostCallback)>:<public static final>:<android.app.FragmentController>
<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnDismissListener(android.content.DialogInterface.OnDismissListener)>:<public>:<android.app.AlertDialog.Builder>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer.OnTimedMetaDataAvailableListener: void onTimedMetaDataAvailable(android.media.MediaPlayer,android.media.TimedMetaData)>:<public abstract>:<android.media.MediaPlayer.OnTimedMetaDataAvailableListener>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>:<public final>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.os.BaseBundle: void putLong(java.lang.String,long)>:<public>:<android.os.BaseBundle>
<android.graphics.Paint: float measureText(java.lang.String,int,int)>:<public>:<android.graphics.Paint>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri)>:<public final>:<android.database.ContentObserver>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter.Builder setEncryptionRequired(boolean)>:<public>:<android.security.KeyStoreParameter.Builder>
<android.telephony.CellInfoWcdma: java.lang.String toString()>:<public>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,android.os.Handler)>:<public>:<android.media.session.MediaSessionManager>
<android.drm.DrmInfoRequest: java.util.Iterator iterator()>:<public>:<android.drm.DrmInfoRequest>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.inputmethodservice.InputMethodService: void showStatusIcon(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.os.Binder:android.os.IBinder>
<android.view.View: void computeScroll()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onFailure(int)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ActionListener>
<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>:<public final>:<android.hardware.Camera>
<android.telephony.CellInfoCdma: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.hardware.Camera.Size: boolean equals(java.lang.Object)>:<public>:<android.hardware.Camera.Size>
<android.provider.Contacts.ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>:<public static final>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.text.style.LineBackgroundSpan: void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int)>:<public abstract>:<android.text.style.LineBackgroundSpan:android.text.style.ParagraphStyle>
<android.graphics.Paint.Join: android.graphics.Paint.Join valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Join:java.lang.Enum>
<android.widget.DigitalClock: void <init>(android.content.Context)>:<public>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.webkit.WebView.WebViewTransport: void setWebView(android.webkit.WebView)>:<public synchronized>:<android.webkit.WebView.WebViewTransport>
<android.media.MediaPlayer: void attachAuxEffect(int)>:<public native>:<android.media.MediaPlayer>
<android.nfc.NdefRecord: byte[] getType()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.opengl.GLES10: void glClientActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int)>:<public static>:<android.opengl.ETC1Util>
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.telephony.gsm.SmsMessage.MessageClass: void <clinit>()>:<static>:<android.telephony.gsm.SmsMessage.MessageClass:java.lang.Enum>
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.view.ViewStub:android.view.View>
<android.preference.MultiSelectListPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.text.style.RelativeSizeSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.test.mock.MockContext: int checkUriPermission(android.net.Uri,int,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.transition.PatternPathMotion: void <init>()>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.provider.Settings.NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>:<public static>:<android.provider.Settings.NameValueTable:android.provider.BaseColumns>
<android.renderscript.Matrix3f: void loadIdentity()>:<public>:<android.renderscript.Matrix3f>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.speech.tts.SynthesisCallback: void error()>:<public abstract>:<android.speech.tts.SynthesisCallback>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void setEnabled(boolean)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.telecom.Conference: void removeConnection(android.telecom.Connection)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.webkit.WebSyncManager: void <init>(android.content.Context,java.lang.String)>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.widget.RelativeLayout: void setIgnoreGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.content.pm.ActivityInfo: java.lang.String toString()>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.app.KeyguardManager: void <init>()>:<>:<android.app.KeyguardManager>
<android.app.job.JobScheduler: void cancel(int)>:<public abstract>:<android.app.job.JobScheduler>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setSelectionRange(int,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.view.Display: long getAppVsyncOffsetNanos()>:<public>:<android.view.Display>
<android.app.NativeActivity: void <init>()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.MotionEvent: float getX()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: int getLayerHeight(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.gesture.GestureOverlayView: long getFadeOffset()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.widget.AdapterView: void setFocusable(boolean)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaRecorder: void setOutputFormat(int)>:<public native>:<android.media.MediaRecorder>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Adapter: boolean isEmpty()>:<public abstract>:<android.widget.Adapter>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyLog()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.Instrumentation: android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TabHost: android.view.View getCurrentView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)>:<public static>:<android.graphics.Typeface>
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.telecom.RemoteConnection.VideoProvider: void <init>()>:<>:<android.telecom.RemoteConnection.VideoProvider>
<android.media.MediaCodec.CodecException: boolean isTransient()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebResourceResponse: void setStatusCodeAndReasonPhrase(int,java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.text.format.Time: void set(int,int,int,int,int,int)>:<public>:<android.text.format.Time>
<android.widget.AbsListView: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicYuvToRGB: void <init>()>:<>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.util.Rational: boolean isFinite()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.provider.Contacts.ContactMethods: java.lang.String encodeCustomImProtocol(java.lang.String)>:<public static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.location.Address: void setExtras(android.os.Bundle)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.KeyCharacterMap: void finalize()>:<protected>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.EditText: void setEllipsize(android.text.TextUtils.TruncateAt)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.app.Fragment: void setHasOptionsMenu(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.BlurMaskFilter.Blur: void <clinit>()>:<static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.preference.MultiSelectListPreference: void setValues(java.util.Set)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.animation.Keyframe: java.lang.Object getValue()>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.graphics.Canvas: int save()>:<public>:<android.graphics.Canvas>
<android.renderscript.Element: android.renderscript.Element U8_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.ActionMenuView.LayoutParams: void <init>(int,int)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.renderscript.ScriptIntrinsicBLAS: void ZGERU(android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.gesture.GestureLibrary: void removeEntry(java.lang.String)>:<public>:<android.gesture.GestureLibrary>
<android.media.SoundPool.OnLoadCompleteListener: void onLoadComplete(android.media.SoundPool,int,int)>:<public abstract>:<android.media.SoundPool.OnLoadCompleteListener>
<android.telephony.CellInfo: int hashCode()>:<public>:<android.telephony.CellInfo:android.os.Parcelable>
<android.telephony.TelephonyManager: boolean isHearingAidCompatibilitySupported()>:<public>:<android.telephony.TelephonyManager>
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.app.Dialog: boolean isShowing()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.ConsoleMessage: java.lang.String message()>:<public>:<android.webkit.ConsoleMessage>
<android.text.BidiFormatter.Builder: void <init>()>:<public>:<android.text.BidiFormatter.Builder>
<android.print.PrinterId: java.lang.String getLocalId()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.media.audiofx.Equalizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Equalizer,int,int,int,int)>:<public abstract>:<android.media.audiofx.Equalizer.OnParameterChangeListener>
<android.text.style.TtsSpan.TimeBuilder: android.text.style.TtsSpan.TimeBuilder setHours(int)>:<public>:<android.text.style.TtsSpan.TimeBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.view.View: void cancelLongPress()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>:<public>:<android.util.PrintWriterPrinter:android.util.Printer>
<android.test.PerformanceTestCase.Intermediates: void startTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.service.voice.VoiceInteractionService: void showSession(android.os.Bundle,int)>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.ComponentName: java.lang.String toShortString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.SimpleExpandableListAdapter: android.view.View newChildView(boolean,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapT()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.mtp.MtpObjectInfo: int getThumbFormat()>:<public final>:<android.mtp.MtpObjectInfo>
<android.telecom.Connection: void onReject()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.provider.Telephony.Sms.Inbox: void <clinit>()>:<static>:<android.provider.Telephony.Sms.Inbox:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.bluetooth.BluetoothAdapter: boolean disable()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.opengl.GLES31: void glDrawArraysIndirect(int,long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.bluetooth.le.ScanFilter: void <init>()>:<>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.FieldPacker: android.renderscript.Matrix2f subMatrix2f()>:<public>:<android.renderscript.FieldPacker>
<android.view.animation.LayoutAnimationController.AnimationParameters: void <init>()>:<public>:<android.view.animation.LayoutAnimationController.AnimationParameters>
<android.provider.ContactsContract.CommonDataKinds.Contactables: void <init>()>:<public>:<android.provider.ContactsContract.CommonDataKinds.Contactables:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.accessibility.AccessibilityWindowInfo: int hashCode()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.app.Notification.Builder: android.app.Notification.Builder setContentText(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.util.MonthDisplayHelper: void previousMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.view.KeyCharacterMap: char getDisplayLabel(int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.AdapterViewAnimator: void onMeasure(int,int)>:<protected>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.service.textservice.SpellCheckerService: android.service.textservice.SpellCheckerService.Session createSession()>:<public abstract>:<android.service.textservice.SpellCheckerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.telecom.VideoProfile: java.lang.String toString()>:<public>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled()>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.content.pm.FeatureInfo: void <init>(android.content.pm.FeatureInfo)>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.service.dreams.DreamService: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>:<public>:<android.app.backup.BackupDataInput>
<android.location.Location: android.os.Bundle getExtras()>:<public>:<android.location.Location:android.os.Parcelable>
<android.print.PrintJobInfo: android.print.PageRange[] getPages()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)>:<public static final>:<android.speech.RecognizerIntent>
<android.app.Notification.WearableExtender: java.lang.Object clone()>:<public volatile>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.widget.ImageView: void setImageIcon(android.graphics.drawable.Icon)>:<public>:<android.widget.ImageView:android.view.View>
<android.view.ViewParent: void requestTransparentRegion(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.graphics.pdf.PdfRenderer.Page: void render(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Matrix,int)>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.widget.TimePicker: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>:<public native>:<android.media.MediaDrm>
<android.widget.ZoomButtonsController.OnZoomListener: void onVisibilityChanged(boolean)>:<public abstract>:<android.widget.ZoomButtonsController.OnZoomListener>
<android.media.ImageReader.OnImageAvailableListener: void onImageAvailable(android.media.ImageReader)>:<public abstract>:<android.media.ImageReader.OnImageAvailableListener>
<android.media.Image: void setTimestamp(long)>:<public>:<android.media.Image:java.lang.AutoCloseable>
<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>:<public static>:<android.text.TextUtils>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.Window.Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public abstract>:<android.view.Window.Callback>
<android.app.Service: android.app.Application getApplication()>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)>:<public>:<android.text.StaticLayout.Builder>
<android.graphics.drawable.AnimatedVectorDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.graphics.Shader: void <init>()>:<public>:<android.graphics.Shader>
<android.database.Cursor: int getType(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.Activity: android.app.LoaderManager getLoaderManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.provider.SearchRecentSuggestions: void <init>(android.content.Context,java.lang.String,int)>:<public>:<android.provider.SearchRecentSuggestions>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>:<public>:<android.view.ViewPropertyAnimator>
<android.telecom.Conference: java.util.List getConnections()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.app.Fragment: void onViewStateRestored(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.speech.RecognitionService.Callback: void readyForSpeech(android.os.Bundle)>:<public>:<android.speech.RecognitionService.Callback>
<android.graphics.Movie: int width()>:<public native>:<android.graphics.Movie>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.VideoCapabilities getVideoCapabilities()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.mtp.MtpDeviceInfo: java.lang.String getVersion()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.database.sqlite.SQLiteDatabase: boolean isDatabaseIntegrityOk()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.ColorMatrix: void setRotate(int,float)>:<public>:<android.graphics.ColorMatrix>
<android.animation.Keyframe: java.lang.Class getType()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.Switch: void drawableStateChanged()>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrintDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>:<public abstract>:<android.print.PrintDocumentAdapter>
<android.renderscript.Allocation: android.renderscript.Element getElement()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.media.MediaMetadata: long getLong(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<junit.runner.BaseTestRunner: void setPreferences(java.util.Properties)>:<protected static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<junit.framework.Assert: void failNotEquals(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.graphics.Paint: android.graphics.Paint.Align getTextAlign()>:<public>:<android.graphics.Paint>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getSignaturePaddings()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.nfc.tech.NfcA: int getTimeout()>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.drawable.Drawable>
<android.widget.TextView: void setMaxWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.KeyEvent.Callback: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.media.AudioFormat.Builder: void <init>()>:<public>:<android.media.AudioFormat.Builder>
<android.graphics.drawable.DrawableContainer: int getOpacity()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewStructure: void setTransformation(android.graphics.Matrix)>:<public abstract>:<android.view.ViewStructure>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.transition.Transition: android.transition.Transition excludeChildren(int,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.location.SettingInjectorService: void <init>(java.lang.String)>:<public>:<android.location.SettingInjectorService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.service.dreams.DreamService: android.view.View findViewById(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityStart(java.util.Date)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.view.KeyEvent: long getDownTime()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.system.Os: void seteuid(int)>:<public static>:<android.system.Os>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeId(int)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.content.IntentSender: java.lang.String getTargetPackage()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.text.style.TtsSpan: void <init>(java.lang.String,android.os.PersistableBundle)>:<public>:<android.text.style.TtsSpan:android.text.ParcelableSpan>
<android.view.animation.ScaleAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.service.textservice.SpellCheckerService: void <init>()>:<public>:<android.service.textservice.SpellCheckerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.MemoryFile: int length()>:<public>:<android.os.MemoryFile>
<android.hardware.Camera: void cancelAutoFocus()>:<public final>:<android.hardware.Camera>
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy createAutomaticInstallPolicy()>:<public static>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.app.admin.DevicePolicyManager: java.lang.String getCertInstallerPackage(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.GridLayout: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.Window: void setSharedElementExitTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.text.method.TextKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.widget.HorizontalScrollView: void draw(android.graphics.Canvas)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.net.sip.SipAudioCall.Listener: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.service.voice.VoiceInteractionSession.Request: void cancel()>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.widget.Adapter: int getViewTypeCount()>:<public abstract>:<android.widget.Adapter>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.widget.GridView: int getGravity()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<dalvik.bytecode.OpcodeInfo: void <clinit>()>:<static>:<dalvik.bytecode.OpcodeInfo>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageNumber()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.database.AbstractCursor: void <init>()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.KeyEvent: boolean isCanceled()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvTrackInfo: int getAudioChannelCount()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>:<public>:<android.graphics.Paint>
<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.PackageItemInfo>
<android.widget.TimePicker: boolean is24HourView()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.SearchableInfo: int getInputType()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: void setRssi(int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.view.SurfaceView: void onDetachedFromWindow()>:<protected>:<android.view.SurfaceView:android.view.View>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<org.json.JSONArray: int hashCode()>:<public>:<org.json.JSONArray>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.ScriptIntrinsicBLAS: void DGER(double,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.PatternPathMotion: void setPatternPath(android.graphics.Path)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.view.animation.AnimationSet: void setFillBefore(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.telecom.GatewayInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.view.animation.BounceInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.BaseInterpolator>
<android.provider.DocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>:<public abstract>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.app.FragmentHostCallback: boolean onHasView()>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.widget.TextView: void setMarqueeRepeatLimit(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.MatrixCursor: java.lang.String getString(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: int getBottom()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputService: void <init>()>:<public>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.UserDictionary.Words: void <init>()>:<public>:<android.provider.UserDictionary.Words:android.provider.BaseColumns>
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.widget.Scroller: int getCurrY()>:<public final>:<android.widget.Scroller>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>:<public>:<android.app.SharedElementCallback>
<android.widget.StackView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.ViewPropertyAnimator animate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.Rational: boolean isInfinite()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.hardware.Camera.Parameters: boolean isVideoSnapshotSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.content.res.TypedArray: java.lang.String getString(int)>:<public>:<android.content.res.TypedArray>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateSelection(int,int,int,int,int,int)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.util.SparseLongArray: android.util.SparseLongArray clone()>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.widget.Toolbar: java.lang.CharSequence getLogoDescription()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.telephony.SubscriptionManager: void removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)>:<public>:<android.telephony.SubscriptionManager>
<android.service.voice.VoiceInteractionSession: void closeSystemDialogs()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>:<public static>:<android.view.ViewConfiguration>
<android.view.View: void setNextFocusUpId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothProfile: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public abstract>:<android.bluetooth.BluetoothProfile>
<android.app.Activity: android.view.View getCurrentFocus()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.StackView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.RectF: float centerX()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.drm.DrmSupportInfo: void <init>()>:<public>:<android.drm.DrmSupportInfo>
<android.view.SurfaceHolder.Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.view.View: int getNextFocusDownId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AbsListView: int getSolidColor()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.nsd.NsdServiceInfo: java.lang.String toString()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.ActionBar: int getNavigationItemCount()>:<public abstract>:<android.app.ActionBar>
<android.view.animation.LayoutAnimationController: int getOrder()>:<public>:<android.view.animation.LayoutAnimationController>
<android.telecom.ConnectionService: void conferenceRemoteConnections(android.telecom.RemoteConnection,android.telecom.RemoteConnection)>:<public final>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<junit.framework.TestCase: void runTest()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader.TileMode)>:<public>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.transition.TransitionValues: java.lang.String toString()>:<public>:<android.transition.TransitionValues>
<android.provider.MediaStore.Images.Thumbnails: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.os.Parcelable.Creator: java.lang.Object createFromParcel(android.os.Parcel)>:<public abstract>:<android.os.Parcelable.Creator>
<android.preference.PreferenceGroup: boolean isOrderingAsAdded()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.nfc.tech.MifareUltralight: int getType()>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.widget.PopupWindow: void <init>(android.view.View,int,int,boolean)>:<public>:<android.widget.PopupWindow>
<android.graphics.Paint: float getTextSkewX()>:<public native>:<android.graphics.Paint>
<android.content.Context: int getWallpaperDesiredMinimumHeight()>:<public abstract>:<android.content.Context>
<android.service.carrier.CarrierIdentifier: java.lang.String getGid1()>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.widget.PopupWindow: int getAnimationStyle()>:<public>:<android.widget.PopupWindow>
<android.service.notification.NotificationListenerService: void cancelAllNotifications()>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.shapes.Shape: void resize(float,float)>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAuxiliary(boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.media.SyncParams: int getSyncSource()>:<public>:<android.media.SyncParams>
<android.widget.PopupWindow: int getWindowLayoutType()>:<public>:<android.widget.PopupWindow>
<android.bluetooth.BluetoothGatt: java.util.List getConnectedDevices()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.mtp.MtpDeviceInfo: void <init>()>:<>:<android.mtp.MtpDeviceInfo>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizesFor(android.util.Range)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.mtp.MtpDevice: boolean deleteObject(int)>:<public>:<android.mtp.MtpDevice>
<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.AudioEffect.Descriptor: void <init>()>:<public>:<android.media.audiofx.AudioEffect.Descriptor>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState[] values()>:<public static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.app.assist.AssistContent: void setClipData(android.content.ClipData)>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.media.MediaPlayer: void prepareAsync()>:<public native>:<android.media.MediaPlayer>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View,int)>:<public>:<android.animation.LayoutTransition>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeDown()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.media.Image: int getWidth()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.widget.ListPopupWindow: int getWidth()>:<public>:<android.widget.ListPopupWindow>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri)>:<public>:<android.database.ContentObserver>
<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>:<public final>:<android.media.MediaCodec>
<android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.gesture.GesturePoint: java.lang.Object clone()>:<public>:<android.gesture.GesturePoint>
<android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>:<public>:<android.widget.OverScroller>
<android.test.TouchUtils: int dragViewBy(android.test.InstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.widget.PopupWindow: boolean isSplitTouchEnabled()>:<public>:<android.widget.PopupWindow>
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()>:<public>:<android.telephony.gsm.SmsMessage>
<android.app.admin.DeviceAdminReceiver: void onReadyForUserInitialization(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.renderscript.RenderScript: void destroy()>:<public>:<android.renderscript.RenderScript>
<android.media.audiofx.NoiseSuppressor: boolean isAvailable()>:<public static>:<android.media.audiofx.NoiseSuppressor:android.media.audiofx.AudioEffect>
<android.app.ActionBar: void setDisplayOptions(int,int)>:<public abstract>:<android.app.ActionBar>
<android.test.TouchUtils: void scrollToBottom(android.test.InstrumentationTestCase,android.app.Activity,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<android.app.usage.NetworkStats.Bucket: long getTxPackets()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.telecom.Connection: void onStateChanged(int)>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>:<protected>:<android.telephony.ServiceState:android.os.Parcelable>
<android.os.Process: int myPid()>:<public static final>:<android.os.Process>
<android.widget.Spinner: void onClick(android.content.DialogInterface,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.Notification.Builder: android.app.Notification.Builder setContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.content.res.Resources: android.content.res.Resources getSystem()>:<public static>:<android.content.res.Resources>
<android.nfc.tech.MifareClassic: void increment(int,int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.telephony.CarrierConfigManager: void <init>()>:<>:<android.telephony.CarrierConfigManager>
<android.content.IntentFilter: void addDataScheme(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>:<public final>:<android.os.Handler>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.GridView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Handler: android.os.Looper getLooper()>:<public final>:<android.os.Handler>
<android.accounts.AuthenticatorDescription: void <clinit>()>:<static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,java.net.Socket)>:<public>:<android.net.PskKeyManager>
<android.hardware.usb.UsbDeviceConnection: boolean claimInterface(android.hardware.usb.UsbInterface,boolean)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.opengl.GLES11: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.location.LocationProvider: void <init>()>:<>:<android.location.LocationProvider>
<android.transition.TransitionSet: android.transition.Transition removeTarget(java.lang.Class)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withExpectedCount(int)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.renderscript.Script.LaunchOptions: int getXEnd()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.database.CursorWindow: boolean putDouble(double,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.text.method.TextKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.widget.AbsSpinner: void setSelection(int)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>:<public>:<android.net.sip.SipManager>
<android.os.Parcel: void writeStringArray(java.lang.String[])>:<public final>:<android.os.Parcel>
<android.renderscript.Matrix3f: void loadRotate(float)>:<public>:<android.renderscript.Matrix3f>
<android.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.media.Image: void setCropRect(android.graphics.Rect)>:<public>:<android.media.Image:java.lang.AutoCloseable>
<android.net.ConnectivityManager.NetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.app.VoiceInteractor.Prompt: java.lang.CharSequence getVisualPrompt()>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.telephony.CellSignalStrength: int hashCode()>:<public abstract>:<android.telephony.CellSignalStrength>
<android.content.res.Resources: java.lang.CharSequence getText(int)>:<public>:<android.content.res.Resources>
<android.test.mock.MockContext: java.io.File getNoBackupFilesDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.media.session.PlaybackState: long getBufferedPosition()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.view.ViewOutlineProvider: void <init>()>:<public>:<android.view.ViewOutlineProvider>
<android.renderscript.ScriptGroup: void setInput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.provider.Telephony.Sms.Outbox: void <clinit>()>:<static>:<android.provider.Telephony.Sms.Outbox:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>:<public>:<android.net.UrlQuerySanitizer>
<android.app.Notification.Builder: android.app.Notification.Builder setLights(int,int,int)>:<public>:<android.app.Notification.Builder>
<android.app.Activity: void showLockTaskEscapeMessage()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.test.ActivityInstrumentationTestCase2: void setUp()>:<protected>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.provider.CalendarContract.Reminders: void <clinit>()>:<static>:<android.provider.CalendarContract.Reminders:android.provider.BaseColumns,android.provider.CalendarContract.RemindersColumns,android.provider.CalendarContract.EventsColumns>
<android.nfc.tech.Ndef: void <init>()>:<>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<org.xmlpull.v1.XmlPullParser: int getLineNumber()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.provider.ContactsContract.SyncState: void <init>()>:<>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.service.voice.VoiceInteractionSession: void onBackPressed()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.os.BaseBundle: void putAll(android.os.PersistableBundle)>:<public>:<android.os.BaseBundle>
<android.hardware.Camera.OnZoomChangeListener: void onZoomChange(int,boolean,android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.OnZoomChangeListener>
<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result[] values()>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.content.Intent.ShortcutIconResource: int describeContents()>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.media.audiofx.AudioEffect: void release()>:<public>:<android.media.audiofx.AudioEffect>
<android.database.CursorWindow: short getShort(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.telephony.TelephonyManager: java.lang.String getMmsUAProfUrl()>:<public>:<android.telephony.TelephonyManager>
<android.renderscript.Script: android.renderscript.Script.FieldID createFieldID(int,android.renderscript.Element)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.drawable.Animatable2.AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.Animatable2.AnimationCallback>
<android.view.View: android.graphics.Rect getClipBounds()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebSettings.PluginState: void <clinit>()>:<static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.content.ContentProvider: void setWritePermission(java.lang.String)>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.graphics.drawable.LayerDrawable: void setPaddingRelative(int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint,float,float)>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.widget.TableLayout: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentValues: void clear()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: boolean isFilterBitmap()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.audiofx.Visualizer: int getSamplingRate()>:<public>:<android.media.audiofx.Visualizer>
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>:<public>:<android.graphics.Path>
<android.hardware.camera2.CameraDevice.StateCallback: void <init>()>:<public>:<android.hardware.camera2.CameraDevice.StateCallback>
<android.util.NoSuchPropertyException: void <init>(java.lang.String)>:<public>:<android.util.NoSuchPropertyException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES30: void glGetQueryiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hardware.camera2.CameraDevice.StateCallback: void onOpened(android.hardware.camera2.CameraDevice)>:<public abstract>:<android.hardware.camera2.CameraDevice.StateCallback>
<android.view.View: boolean isHovered()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void setAudioSessionId(int)>:<public native>:<android.media.MediaPlayer>
<android.media.midi.MidiDeviceStatus: void <init>()>:<>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.TextureView: void unlockCanvasAndPost(android.graphics.Canvas)>:<public>:<android.view.TextureView:android.view.View>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: android.graphics.Shader resize(int,int)>:<public abstract>:<android.graphics.drawable.ShapeDrawable.ShaderFactory>
<android.transition.CircularPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.CircularPropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.widget.AdapterViewAnimator: int getDisplayedChild()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>:<public final>:<android.graphics.drawable.Drawable>
<android.widget.EditText: void setSelection(int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.app.ProgressDialog: int getMax()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.telephony.CellIdentityGsm: int getMnc()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.renderscript.Matrix2f: void <init>()>:<public>:<android.renderscript.Matrix2f>
<android.preference.Preference.OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>:<public abstract>:<android.preference.Preference.OnPreferenceChangeListener>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.Class)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.assist.AssistStructure.ViewNode: boolean isCheckable()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.test.TouchUtils: int dragViewBy(android.test.ActivityInstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.view.View: void dispatchSetSelected(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.transition.Transition: android.transition.Transition addTarget(android.view.View)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.DragEvent: void <clinit>()>:<static>:<android.view.DragEvent:android.os.Parcelable>
<android.app.AppOpsManager: void startWatchingMode(java.lang.String,java.lang.String,android.app.AppOpsManager.OnOpChangedListener)>:<public>:<android.app.AppOpsManager>
<android.view.KeyEvent: int getModifiers()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewStub.OnInflateListener: void onInflate(android.view.ViewStub,android.view.View)>:<public abstract>:<android.view.ViewStub.OnInflateListener>
<android.widget.Advanceable: void advance()>:<public abstract>:<android.widget.Advanceable>
<android.app.Notification.WearableExtender: void <init>(android.app.Notification)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.view.ViewOutlineProvider: void <clinit>()>:<static>:<android.view.ViewOutlineProvider>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.service.notification.StatusBarNotification: long getPostTime()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)>:<public static>:<android.opengl.ETC1Util>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.inputmethod.InputMethodSession: void updateCursor(android.graphics.Rect)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.bluetooth.BluetoothGattServer: void clearServices()>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.media.MediaDrm.CryptoSession: byte[] sign(byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.view.View: boolean isHapticFeedbackEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.system.Os: int geteuid()>:<public static>:<android.system.Os>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Notification.Builder: android.app.Notification.Builder setContentInfo(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeUp()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.view.inputmethod.CursorAnchorInfo: void <clinit>()>:<static>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>:<public>:<android.app.UiAutomation>
<android.security.KeyChainAliasCallback: void alias(java.lang.String)>:<public abstract>:<android.security.KeyChainAliasCallback>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeySize(int)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.os.BaseBundle: java.lang.String getString(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.telecom.ConnectionService: void onConference(android.telecom.Connection,android.telecom.Connection)>:<public>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMax()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.renderscript.ScriptIntrinsicBLAS: void CHEMV(int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.Transition.TransitionListener: void onTransitionStart(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.renderscript.Element: android.renderscript.Element U32_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()>:<public>:<android.drm.DrmSupportInfo>
<android.hardware.usb.UsbConfiguration: void <clinit>()>:<static>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.app.ListActivity: void setSelection(int)>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<junit.framework.TestCase: void setName(java.lang.String)>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.service.media.CameraPrewarmService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.media.CameraPrewarmService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.renderscript.Byte3: void <init>(byte,byte,byte)>:<public>:<android.renderscript.Byte3>
<android.view.ActionMode: void hide(long)>:<public>:<android.view.ActionMode>
<android.speech.tts.TextToSpeechService: java.lang.String[] onGetLanguage()>:<protected abstract>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.Network: void <clinit>()>:<static>:<android.net.Network:android.os.Parcelable>
<android.media.tv.TvInputService.Session: void notifyContentAllowed()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.net.sip.SipAudioCall: int getState()>:<public>:<android.net.sip.SipAudioCall>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.PopupWindow: void setSoftInputMode(int)>:<public>:<android.widget.PopupWindow>
<android.view.KeyEvent.DispatcherState: void <init>()>:<public>:<android.view.KeyEvent.DispatcherState>
<android.text.method.MultiTapKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.drm.DrmManagerClient: void <init>(android.content.Context)>:<public>:<android.drm.DrmManagerClient>
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.WindowContentFrameStats: long getFramePostedTimeNano(int)>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.drm.DrmInfo: void put(java.lang.String,java.lang.Object)>:<public>:<android.drm.DrmInfo>
<android.view.ScaleGestureDetector: long getTimeDelta()>:<public>:<android.view.ScaleGestureDetector>
<android.widget.Toolbar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.app.assist.AssistStructure.WindowNode: int getHeight()>:<public>:<android.app.assist.AssistStructure.WindowNode>
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.graphics.AvoidXfermode: void <init>(int,int,android.graphics.AvoidXfermode.Mode)>:<public>:<android.graphics.AvoidXfermode:android.graphics.Xfermode>
<android.app.assist.AssistStructure.ViewNode: boolean isFocused()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void finishInput()>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.os.BaseBundle: long getLong(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.text.Layout: int getOffsetToLeftOf(int)>:<public>:<android.text.Layout>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>:<public>:<android.graphics.Paint>
<android.preference.PreferenceActivity: void finishPreferencePanel(android.app.Fragment,int,android.content.Intent)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.test.RenamingDelegatingContext: void <init>(android.content.Context,java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageItemInfo>
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.widget.TextView: void onBeginBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.wifi.WifiManager: boolean isPreferredNetworkOffloadSupported()>:<public>:<android.net.wifi.WifiManager>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>:<public>:<android.net.http.SslError>
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.LinkAddress: int hashCode()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.content.IntentFilter: java.util.Iterator schemeSpecificPartsIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.net.nsd.NsdServiceInfo: void setHost(java.net.InetAddress)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.net.Uri.Builder: android.net.Uri.Builder encodedPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.provider.ContactsContract.ProfileSyncState: void <clinit>()>:<static>:<android.provider.ContactsContract.ProfileSyncState:android.provider.SyncStateContract.Columns>
<android.net.sip.SipManager: boolean isSipWifiOnly(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.graphics.Canvas: void rotate(float,float,float)>:<public final>:<android.graphics.Canvas>
<android.telephony.SubscriptionInfo: int getMcc()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.app.DownloadManager.Request: void <init>(android.net.Uri)>:<public>:<android.app.DownloadManager.Request>
<android.nfc.tech.NdefFormatable: void connect()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.print.PrintJob: boolean equals(java.lang.Object)>:<public>:<android.print.PrintJob>
<android.view.Display: int getHeight()>:<public>:<android.view.Display>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.widget.ActionMenuView: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSerialNumber(java.math.BigInteger)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.telecom.InCallService.VideoCall.Callback: void onVideoQualityChanged(int)>:<public abstract>:<android.telecom.InCallService.VideoCall.Callback>
<android.transition.Slide: void setSlideEdge(int)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.util.LruCache: void trimToSize(int)>:<public>:<android.util.LruCache>
<android.media.MediaRouter.UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.util.SparseIntArray: java.lang.Object clone()>:<public volatile>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.os.PowerManager.WakeLock: void setWorkSource(android.os.WorkSource)>:<public>:<android.os.PowerManager.WakeLock>
<android.view.accessibility.AccessibilityEvent: void setEventType(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.nfc.tech.BasicTagTechnology: void connect()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.view.WindowId: void registerFocusObserver(android.view.WindowId.FocusObserver)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.view.textservice.TextInfo: void <init>(java.lang.String)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>:<public>:<android.telephony.TelephonyManager>
<android.text.style.ScaleXSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>:<public>:<android.hardware.fingerprint.FingerprintManager>
<android.widget.Toolbar.LayoutParams: void <init>(int)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.net.sip.SipException: void <init>()>:<public>:<android.net.sip.SipException:java.lang.Exception,java.lang.Throwable>
<android.drm.DrmRights: void <init>(java.io.File,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.widget.Toast: float getHorizontalMargin()>:<public>:<android.widget.Toast>
<android.widget.TabHost: void <init>(android.content.Context)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>:<public>:<android.graphics.Paint>
<org.xmlpull.v1.XmlSerializer: void comment(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.renderscript.BaseObj: int hashCode()>:<public>:<android.renderscript.BaseObj>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int)>:<protected>:<android.renderscript.Script.FieldBase>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(android.view.View)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.view.ViewGroup: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.AbstractCursor: void deactivate()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.util.SparseArray: int keyAt(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.text.SpannableStringBuilder: java.lang.Appendable append(java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.opengl.GLES30: void glDeleteSamplers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.bluetooth.BluetoothGatt: boolean requestConnectionPriority(int)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.view.accessibility.AccessibilityWindowInfo: void <init>()>:<>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.animation.ValueAnimator: boolean isRunning()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<org.xmlpull.v1.sax2.Driver: java.lang.String getURI(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.test.TouchUtils: void dragViewToTop(android.test.InstrumentationTestCase,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<android.view.MotionEvent: float getX(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES20>
<android.widget.CheckedTextView: android.graphics.PorterDuff.Mode getCheckMarkTintMode()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.renderscript.FieldPacker: android.renderscript.Long2 subLong2()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>:<public>:<android.graphics.Path>
<dalvik.'annotation'.TestTarget: java.lang.String methodName()>:<public abstract>:<dalvik.annotation.TestTarget:java.lang.annotation.Annotation>
<android.transition.Scene: void setEnterAction(java.lang.Runnable)>:<public>:<android.transition.Scene>
<android.media.RemoteController: long getEstimatedMediaPosition()>:<public>:<android.media.RemoteController>
<android.view.accessibility.AccessibilityRecord: int getScrollY()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.webkit.WebSettings: boolean getAllowUniversalAccessFromFileURLs()>:<public abstract>:<android.webkit.WebSettings>
<android.hardware.usb.UsbInterface: java.lang.String toString()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>:<public static>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.media.AudioRecord: void finalize()>:<protected>:<android.media.AudioRecord>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>:<public>:<android.media.MediaPlayer>
<android.webkit.ClientCertRequest: java.security.Principal[] getPrincipals()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.view.View: void setAlpha(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Context: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.hardware.Camera.Parameters: void setGpsAltitude(double)>:<public>:<android.hardware.Camera.Parameters>
<android.net.TrafficStats: void <init>()>:<public>:<android.net.TrafficStats>
<android.media.VolumeProvider: void setCurrentVolume(int)>:<public final>:<android.media.VolumeProvider>
<android.view.WindowAnimationFrameStats: java.lang.String toString()>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.renderscript.Script.LaunchOptions: int getZEnd()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.graphics.drawable.RotateDrawable: float getToDegrees()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.app.FragmentController: void dispatchTrimMemory(int)>:<public>:<android.app.FragmentController>
<android.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.PathMeasure: float getLength()>:<public>:<android.graphics.PathMeasure>
<android.widget.CalendarView: void setDateTextAppearance(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setAllCaps(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.view.View.OnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public abstract>:<android.view.View.OnKeyListener>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.sip.SipProfile: java.lang.String getAuthUserName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.Activity: java.lang.String getLocalClassName()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.os.Bundle: java.lang.Object clone()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>:<public static final>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.hardware.Camera.Parameters: java.lang.String getAntibanding()>:<public>:<android.hardware.Camera.Parameters>
<android.text.SpannableStringBuilder: char charAt(int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.os.Parcel: int readInt()>:<public final>:<android.os.Parcel>
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.TestCase: void setUp()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>:<public final>:<android.content.ContentProviderClient>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.util.SparseIntArray: void put(int,int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public static>:<android.content.ContentResolver>
<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>:<public>:<android.print.PrintManager>
<android.os.StrictMode.ThreadPolicy.Builder: void <init>(android.os.StrictMode.ThreadPolicy)>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(android.view.View,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ActionBar: void setNavigationMode(int)>:<public abstract>:<android.app.ActionBar>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.net.sip.SipException: void <init>(java.lang.String)>:<public>:<android.net.sip.SipException:java.lang.Exception,java.lang.Throwable>
<android.widget.DialerFilter: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.database.Cursor: long getLong(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.hardware.Sensor: java.lang.String getVendor()>:<public>:<android.hardware.Sensor>
<android.content.Intent: java.lang.String getPackage()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.LocalSocket: boolean isClosed()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.app.FragmentController: android.app.Fragment findFragmentByWho(java.lang.String)>:<public>:<android.app.FragmentController>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.hardware.camera2.params.RggbChannelVector: float getGreenEven()>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.media.tv.TvView: boolean onUnhandledInputEvent(android.view.InputEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.app.Activity: int getTaskId()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.test.mock.MockContext: void sendBroadcast(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.method.TextKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.util.EventLog: void <init>()>:<>:<android.util.EventLog>
<android.app.FragmentManager.OnBackStackChangedListener: void onBackStackChanged()>:<public abstract>:<android.app.FragmentManager.OnBackStackChangedListener>
<android.telecom.InCallService: void onCallAdded(android.telecom.Call)>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.TrafficStats: long getMobileRxPackets()>:<public static>:<android.net.TrafficStats>
<android.net.SSLSessionCache: void <init>(android.content.Context)>:<public>:<android.net.SSLSessionCache>
<android.widget.SearchView: void <init>(android.content.Context)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.View: void dispatchSetActivated(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<public final>:<android.appwidget.AppWidgetHost>
<android.net.wifi.p2p.WifiP2pDevice: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.hardware.usb.UsbRequest: void <init>()>:<public>:<android.hardware.usb.UsbRequest>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>:<public abstract>:<android.content.pm.PackageManager>
<android.opengl.GLES11Ext: void <init>()>:<public>:<android.opengl.GLES11Ext>
<android.mtp.MtpDevice: int[] getStorageIds()>:<public>:<android.mtp.MtpDevice>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.test.SingleLaunchActivityTestCase: void setUp()>:<protected>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>:<public final>:<android.os.Parcel>
<android.text.method.PasswordTransformationMethod: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.BaseInterpolator>
<android.text.method.TextKeyListener: void release()>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.os.StatFs: void <init>(java.lang.String)>:<public>:<android.os.StatFs>
<android.opengl.GLES31: void glTexStorage2DMultisample(int,int,int,int,int,boolean)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ShareActionProvider: boolean hasSubMenu()>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.net.wifi.WifiManager.WifiLock: void acquire()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.provider.ContactsContract.RawContactsEntity: void <init>()>:<>:<android.provider.ContactsContract.RawContactsEntity:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns,android.provider.ContactsContract.RawContactsColumns>
<android.widget.CursorTreeAdapter: int getChildrenCount(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.net.Uri.Builder: android.net.Uri.Builder encodedAuthority(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.graphics.PorterDuff: void <init>()>:<public>:<android.graphics.PorterDuff>
<android.media.tv.TvInputService.Session: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.telecom.RemoteConference: void hold()>:<public>:<android.telecom.RemoteConference>
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.net.CaptivePortal: void <init>()>:<>:<android.net.CaptivePortal:android.os.Parcelable>
<org.json.JSONArray: int getInt(int)>:<public>:<org.json.JSONArray>
<android.provider.Settings.System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.transition.Transition: void setPropagation(android.transition.TransitionPropagation)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>:<public static native>:<android.opengl.EGL14>
<android.widget.TextView: void onProvideStructure(android.view.ViewStructure)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Window: void setContentView(android.view.View)>:<public abstract>:<android.view.Window>
<android.system.Os: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)>:<public static>:<android.system.Os>
<android.animation.IntArrayEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.widget.CompoundButton: int[] onCreateDrawableState(int)>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.AudioDeviceCallback: void onAudioDevicesAdded(android.media.AudioDeviceInfo[])>:<public>:<android.media.AudioDeviceCallback>
<android.test.mock.MockContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.net.LocalSocket: java.lang.String toString()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.telecom.VideoProfile.CameraCapabilities: int describeContents()>:<public>:<android.telecom.VideoProfile.CameraCapabilities:android.os.Parcelable>
<android.os.PersistableBundle: void <init>(int)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.wifi.WifiConfiguration.Protocol: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.Protocol>
<android.telephony.CellSignalStrengthWcdma: int getDbm()>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.speech.RecognitionListener: void onEndOfSpeech()>:<public abstract>:<android.speech.RecognitionListener>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler,java.lang.String)>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.media.MediaDrm: void setOnExpirationUpdateListener(android.media.MediaDrm.OnExpirationUpdateListener,android.os.Handler)>:<public>:<android.media.MediaDrm>
<android.content.ReceiverCallNotAllowedException: void <init>(java.lang.String)>:<public>:<android.content.ReceiverCallNotAllowedException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>:<public>:<android.media.ExifInterface>
<android.view.View: boolean canResolveTextAlignment()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>:<public>:<android.appwidget.AppWidgetHost>
<android.view.ViewGroup: void clearDisappearingChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.Class,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>:<public>:<android.widget.PopupWindow>
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.view.KeyEvent: int keyCodeFromString(java.lang.String)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>:<public static>:<android.preference.PreferenceManager>
<android.media.session.PlaybackState: int describeContents()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.pm.PackageManager: void addPackageToPreferred(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.hardware.camera2.params.TonemapCurve: android.graphics.PointF getPoint(int,int)>:<public>:<android.hardware.camera2.params.TonemapCurve>
<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec.BufferInfo,long)>:<public final>:<android.media.MediaCodec>
<android.media.MediaFormat: java.lang.String getString(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.hardware.Camera.Parameters: void unflatten(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.renderscript.ScriptIntrinsicResize: void <init>()>:<>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.transition.Scene: void setExitAction(java.lang.Runnable)>:<public>:<android.transition.Scene>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.TwoStatePreference: void setSummaryOff(int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.telephony.TelephonyManager: void <clinit>()>:<static>:<android.telephony.TelephonyManager>
<android.view.Window: android.view.View findViewById(int)>:<public>:<android.view.Window>
<android.security.keystore.KeyInfo: java.lang.String getKeystoreAlias()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.opengl.GLES30: void glFlushMappedBufferRange(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.telecom.ConnectionService: java.util.Collection getAllConnections()>:<public final>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.ContactsContract.DeletedContacts: void <clinit>()>:<static>:<android.provider.ContactsContract.DeletedContacts:android.provider.ContactsContract.DeletedContactsColumns>
<android.net.Uri: int getPort()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.hardware.Camera.Parameters: void setPreviewSize(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.LayerDrawable: int getLayerWidth(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.text.style.QuoteSpan: int getColor()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public abstract>:<android.content.Context>
<android.content.RestrictionEntry: void <clinit>()>:<static>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.MediaController: void hide()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES10>
<android.view.Choreographer: void postFrameCallbackDelayed(android.view.Choreographer.FrameCallback,long)>:<public>:<android.view.Choreographer>
<android.hardware.camera2.DngCreator: void writeByteBuffer(java.io.OutputStream,android.util.Size,java.nio.ByteBuffer,long)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.appwidget.AppWidgetProviderInfo: void <clinit>()>:<static>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.telecom.RemoteConnection.Callback: void onAddressChanged(android.telecom.RemoteConnection,android.net.Uri,int)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void reset()>:<public synchronized>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.database.CharArrayBuffer: void <init>(char[])>:<public>:<android.database.CharArrayBuffer>
<android.print.PrinterInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.app.WallpaperInfo: android.content.ComponentName getComponent()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.test.ViewAsserts: void assertGroupNotContains(android.view.ViewGroup,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.test.ProviderTestCase: android.content.ContentProvider getProvider()>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.ContentResolver: void takePersistableUriPermission(android.net.Uri,int)>:<public>:<android.content.ContentResolver>
<android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener: void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener>
<android.app.UiAutomation: void setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)>:<public>:<android.app.UiAutomation>
<android.util.AtomicFile: void <init>(java.io.File)>:<public>:<android.util.AtomicFile>
<android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>:<public static>:<android.text.method.Touch>
<android.widget.RelativeLayout.LayoutParams: int[] getRules()>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.StaleDataException: void <init>(java.lang.String)>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.accessibility.AccessibilityManager: void interrupt()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.view.View: boolean canResolveLayoutDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.StaticLayout.Builder: android.text.StaticLayout build()>:<public>:<android.text.StaticLayout.Builder>
<android.widget.AbsListView: void deferNotifyDataSetChanged()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.os.Handler: android.os.Message obtainMessage(int)>:<public final>:<android.os.Handler>
<android.opengl.GLES20: int glCreateProgram()>:<public static native>:<android.opengl.GLES20>
<android.net.MailTo: java.lang.String getSubject()>:<public>:<android.net.MailTo>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.os.PowerManager.WakeLock: void release(int)>:<public>:<android.os.PowerManager.WakeLock>
<android.view.ViewPropertyAnimator: void <init>()>:<>:<android.view.ViewPropertyAnimator>
<android.net.Uri: boolean isAbsolute()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.test.mock.MockContext: void revokeUriPermission(android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)>:<public>:<android.hardware.camera2.CameraCaptureSession.CaptureCallback>
<android.test.ViewAsserts: void assertTopAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.printservice.PrintJob: java.lang.String getAdvancedStringOption(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.media.tv.TvView.TvInputCallback: void onVideoAvailable(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage.QuotaUpdater)>:<public>:<android.webkit.WebChromeClient>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(android.net.wifi.p2p.WifiP2pDeviceList)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.nfc.tech.NfcA: void connect()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.widget.ImageView: void setMaxWidth(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.net.wifi.WifiEnterpriseConfig: int describeContents()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>:<public static>:<android.text.Layout>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.CalendarView: int getWeekDayTextAppearance()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.Entity: java.util.ArrayList getSubValues()>:<public>:<android.content.Entity>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.renderscript.Matrix4f: void <init>()>:<public>:<android.renderscript.Matrix4f>
<android.os.Parcel: android.os.Bundle readBundle()>:<public final>:<android.os.Parcel>
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>:<public>:<android.view.TextureView:android.view.View>
<android.text.style.StyleSpan: int getSpanTypeId()>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<junit.framework.Test: void run(junit.framework.TestResult)>:<public abstract>:<junit.framework.Test>
<android.renderscript.ScriptIntrinsicBLAS: void CHPR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>:<public static>:<android.webkit.WebIconDatabase>
<android.service.dreams.DreamService: android.view.WindowManager getWindowManager()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.NativeActivity: void onInputQueueCreated(android.view.InputQueue)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.res.Resources.Theme: void setTo(android.content.res.Resources.Theme)>:<public>:<android.content.res.Resources.Theme>
<junit.framework.TestCase: void tearDown()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.bluetooth.le.AdvertiseData: java.lang.String toString()>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.os.Debug: boolean waitingForDebugger()>:<public static>:<android.os.Debug>
<android.media.MediaPlayer.OnCompletionListener: void onCompletion(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnCompletionListener>
<android.widget.AutoCompleteTextView: void performCompletion()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.VideoView: void resume()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.backup.SharedPreferencesBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.animation.AnimatorListenerAdapter: void onAnimationStart(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.app.Activity: void onEnterAnimationComplete()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.View: void setMinimumWidth(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.ContactsContract.Contacts: boolean isEnterpriseContactId(long)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.net.sip.SipSession: void register(int)>:<public>:<android.net.sip.SipSession>
<android.graphics.drawable.Icon: void <init>()>:<>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.os.Debug: void stopNativeTracing()>:<public static>:<android.os.Debug>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebView: java.lang.String getOriginalUrl()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.IntentService: void onDestroy()>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>:<public>:<org.json.JSONObject>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvView.TimeShiftPositionCallback: void onTimeShiftCurrentPositionChanged(java.lang.String,long)>:<public>:<android.media.tv.TvView.TimeShiftPositionCallback>
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProviderClient>
<android.widget.ListView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>:<public>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.media.tv.TvInputManager: boolean isParentalControlsEnabled()>:<public>:<android.media.tv.TvInputManager>
<android.view.MenuItem: android.view.MenuItem setActionView(android.view.View)>:<public abstract>:<android.view.MenuItem>
<android.database.CursorWindow: long getLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.BaseInputConnection: boolean requestCursorUpdates(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.widget.AbsListView: boolean onNestedFling(android.view.View,float,float,boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],android.net.Uri,java.lang.String)>:<public static>:<android.security.KeyChain>
<android.renderscript.Double2: void <init>()>:<public>:<android.renderscript.Double2>
<android.database.MatrixCursor: void <init>(java.lang.String[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.opengl.EGL14: void <init>()>:<public>:<android.opengl.EGL14>
<android.app.LoaderManager: android.content.Loader getLoader(int)>:<public abstract>:<android.app.LoaderManager>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void <init>(android.inputmethodservice.InputMethodService)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle bigText(java.lang.CharSequence)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>:<public>:<android.net.wifi.WifiManager>
<android.os.Binder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>:<public>:<android.os.Binder:android.os.IBinder>
<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Instrumentation.ActivityMonitor: int getHits()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.view.MotionEvent: long getEventTime()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.transition.TransitionSet: android.transition.Transition clone()>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.view.View: int getMeasuredWidthAndState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.SurfaceView: void setSecure(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.os.Bundle: void putBinder(java.lang.String,android.os.IBinder)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFpsRange()>:<public>:<android.hardware.Camera.Parameters>
<android.app.ActionBar.OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>:<public abstract>:<android.app.ActionBar.OnMenuVisibilityListener>
<android.hardware.usb.UsbEndpoint: int getInterval()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.widget.Filter: void <init>()>:<public>:<android.widget.Filter>
<android.text.DynamicLayout: int getLineDescent(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.app.WallpaperManager: void setStream(java.io.InputStream)>:<public>:<android.app.WallpaperManager>
<android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.xmlpull.v1.sax2.Driver: void setDTDHandler(org.xml.sax.DTDHandler)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.opengl.GLES30: void glBindBufferBase(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.AccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.bluetooth.BluetoothGattCharacteristic: int getProperties()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.opengl.GLES31: void glProgramUniform1ui(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.Matrix4f: void rotate(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.media.MediaRouter.RouteGroup: android.media.MediaRouter.RouteInfo getRouteAt(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.database.CursorWrapper: android.net.Uri getNotificationUri()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.renderscript.Matrix4f: void loadPerspective(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.media.AudioDeviceCallback: void onAudioDevicesRemoved(android.media.AudioDeviceInfo[])>:<public>:<android.media.AudioDeviceCallback>
<android.content.ContentProvider: java.lang.String getCallingPackage()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.LocalActivityManager: void removeAllActivities()>:<public>:<android.app.LocalActivityManager>
<android.widget.ListView: void addFooterView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.PlaybackParams: int getAudioFallbackMode()>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.graphics.Interpolator: int getValueCount()>:<public final>:<android.graphics.Interpolator>
<android.content.pm.Signature: byte[] toByteArray()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.view.KeyEvent: int getFlags()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem.OnActionExpandListener)>:<public abstract>:<android.view.MenuItem>
<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.telecom.RemoteConference: void unregisterCallback(android.telecom.RemoteConference.Callback)>:<public final>:<android.telecom.RemoteConference>
<android.view.MotionEvent: float getTouchMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.accessibility.AccessibilityRecord: boolean isScrollable()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.content.pm.FeatureInfo: java.lang.String toString()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.IBinder.DeathRecipient: void binderDied()>:<public abstract>:<android.os.IBinder.DeathRecipient>
<android.view.KeyEvent: long getEventTime()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.telecom.CallAudioState: int getSupportedRouteMask()>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.content.CursorLoader: java.lang.String[] getSelectionArgs()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.printservice.PrintJob: java.lang.String getTag()>:<public>:<android.printservice.PrintJob>
<android.renderscript.RenderScript: void contextDump()>:<public>:<android.renderscript.RenderScript>
<android.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.drawable.AnimatedStateListDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.AsyncTask: void onPreExecute()>:<protected>:<android.os.AsyncTask>
<android.widget.AdapterView: void setSelection(int)>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.speech.tts.SynthesisRequest: java.lang.String getCountry()>:<public>:<android.speech.tts.SynthesisRequest>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.ContentProviderClient: void finalize()>:<protected>:<android.content.ContentProviderClient>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)>:<public static>:<android.animation.AnimatorInflater>
<android.transition.Fade: void <init>()>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.widget.PopupWindow: int getSoftInputMode()>:<public>:<android.widget.PopupWindow>
<android.test.PerformanceTestCase.Intermediates: void finishTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.inputmethodservice.KeyboardView: void swipeLeft()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.app.VoiceInteractor.Request: void onDetached()>:<public>:<android.app.VoiceInteractor.Request>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.Exception)>:<public>:<android.widget.RemoteViews.ActionException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewGroup: void detachAllViewsFromParent()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES10Ext: void <init>()>:<public>:<android.opengl.GLES10Ext>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.widget.GridLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.Settings.Global: long getLong(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.widget.TextView: int getMinHeight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.ActivityInstrumentationTestCase: void <init>(java.lang.String,java.lang.Class,boolean)>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.media.MediaCrypto: void <init>(java.util.UUID,byte[])>:<public>:<android.media.MediaCrypto>
<android.os.Debug: int getLoadedClassCount()>:<public static>:<android.os.Debug>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.BitmapRegionDecoder: boolean isRecycled()>:<public final>:<android.graphics.BitmapRegionDecoder>
<android.telecom.Connection: java.util.List getConferenceables()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.Assert: void assertEquals(char,char)>:<public static>:<junit.framework.Assert>
<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.graphics.drawable.RippleDrawable: void jumpToCurrentState()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.net.Network: java.lang.String toString()>:<public>:<android.net.Network:android.os.Parcelable>
<org.json.JSONObject: java.lang.String quote(java.lang.String)>:<public static>:<org.json.JSONObject>
<android.graphics.Rect: boolean contains(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValues(android.content.ContentValues)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.media.audiofx.EnvironmentalReverb: void <init>(int,int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>:<public>:<android.view.Display>
<android.telephony.CellIdentityCdma: void <clinit>()>:<static>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder create(android.content.Context)>:<public static>:<android.app.TaskStackBuilder>
<android.media.MediaRouter: void removeCallback(android.media.MediaRouter.Callback)>:<public>:<android.media.MediaRouter>
<android.preference.PreferenceFragment: void onActivityResult(int,int,android.content.Intent)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.Window.Callback: void onContentChanged()>:<public abstract>:<android.view.Window.Callback>
<android.text.method.TextKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.inputmethodservice.InputMethodService: void setBackDisposition(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Process: int myUid()>:<public static final>:<android.os.Process>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.media.TimedMetaData: long getTimestamp()>:<public>:<android.media.TimedMetaData>
<android.view.FrameStats: long getRefreshPeriodNano()>:<public final>:<android.view.FrameStats>
<android.app.Dialog: void setVolumeControlStream(int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.text.style.TtsSpan.CardinalBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.CardinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.usage.ConfigurationStats: long getLastTimeStamp()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.net.sip.SipAudioCall: void <init>(android.content.Context,android.net.sip.SipProfile)>:<public>:<android.net.sip.SipAudioCall>
<android.hardware.camera2.CameraDevice: void createCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>:<public abstract>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>:<public>:<android.graphics.Canvas>
<android.widget.DialerFilter: java.lang.CharSequence getDigits()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: float getHistoricalX(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.transition.Explode: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.view.ScaleGestureDetector: float getCurrentSpanY()>:<public>:<android.view.ScaleGestureDetector>
<android.renderscript.ScriptIntrinsicBLAS: void ZTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.sip.SipManager: android.net.sip.SipManager newInstance(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.animation.TypeEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public abstract>:<android.animation.TypeEvaluator>
<android.view.Window: android.transition.Transition getEnterTransition()>:<public>:<android.view.Window>
<android.content.pm.PackageStats: void <clinit>()>:<static>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.opengl.GLES31Ext: void glMinSampleShadingOES(float)>:<public static native>:<android.opengl.GLES31Ext>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>:<public static>:<android.appwidget.AppWidgetManager>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.webkit.WebView: void clearView()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getCurrent()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.media.session.MediaSession: void setSessionActivity(android.app.PendingIntent)>:<public>:<android.media.session.MediaSession>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeyType()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.content.ContentValues: void <init>(android.content.ContentValues)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.IntentFilter.AuthorityEntry: void <init>(java.lang.String,java.lang.String)>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.util.JsonReader: double nextDouble()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,java.util.HashMap)>:<public>:<android.speech.tts.TextToSpeech>
<android.provider.MediaStore.Audio.Genres: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<android.media.JetPlayer: void release()>:<public>:<android.media.JetPlayer>
<org.json.JSONObject: org.json.JSONArray names()>:<public>:<org.json.JSONObject>
<android.os.Debug: int getGlobalAllocCount()>:<public static>:<android.os.Debug>
<android.content.DialogInterface: void cancel()>:<public abstract>:<android.content.DialogInterface>
<android.media.tv.TvInputInfo: boolean isPassthroughInput()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.content.ClipData: java.lang.String toString()>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.content.pm.LauncherApps: void registerCallback(android.content.pm.LauncherApps.Callback)>:<public>:<android.content.pm.LauncherApps>
<android.webkit.WebSettings: android.webkit.WebSettings.ZoomDensity getDefaultZoom()>:<public abstract>:<android.webkit.WebSettings>
<android.net.TrafficStats: void clearThreadStatsTag()>:<public static>:<android.net.TrafficStats>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float)>:<protected>:<android.text.Layout>
<android.app.LoaderManager.LoaderCallbacks: void onLoaderReset(android.content.Loader)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.media.session.MediaController: android.media.MediaMetadata getMetadata()>:<public>:<android.media.session.MediaController>
<android.speech.RecognitionService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence)>:<public>:<android.content.ClipData.Item>
<android.net.MailTo: java.util.Map getHeaders()>:<public>:<android.net.MailTo>
<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.location.Location: long getElapsedRealtimeNanos()>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.Context: boolean stopService(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.text.SpannableString: int getSpanStart(java.lang.Object)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.graphics.drawable.DrawableContainer: void setDither(boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.bluetooth.BluetoothDevice: void <init>()>:<>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.FragmentHostCallback: void onRequestPermissionsFromFragment(android.app.Fragment,java.lang.String[],int)>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.Fragment: void setArguments(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.view.ViewTreeObserver: void removeOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.test.InstrumentationTestCase: void injectInstrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.os.storage.StorageManager: boolean unmountObb(java.lang.String,boolean,android.os.storage.OnObbStateChangeListener)>:<public>:<android.os.storage.StorageManager>
<android.hardware.camera2.CameraManager.TorchCallback: void onTorchModeChanged(java.lang.String,boolean)>:<public>:<android.hardware.camera2.CameraManager.TorchCallback>
<android.location.LocationManager: java.util.List getAllProviders()>:<public>:<android.location.LocationManager>
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>:<public>:<android.content.res.Resources>
<android.util.TypedValue: float complexToFloat(int)>:<public static>:<android.util.TypedValue>
<android.view.TextureView: android.view.TextureView.SurfaceTextureListener getSurfaceTextureListener()>:<public>:<android.view.TextureView:android.view.View>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.ScrollView: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void setPersistentDrawingCache(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.DialerFilter: java.lang.CharSequence getFilterText()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.net.sip.SipAudioCall: void sendDtmf(int)>:<public>:<android.net.sip.SipAudioCall>
<android.view.KeyCharacterMap: char getMatch(int,char[])>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.opengl.GLES30: void glDrawBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.Instrumentation.ActivityMonitor: android.app.Instrumentation.ActivityResult getResult()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.bluetooth.le.AdvertiseSettings: int getTxPowerLevel()>:<public>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskWrites()>:<public static>:<android.os.StrictMode>
<android.os.ParcelFileDescriptor: void checkError()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.text.InputFilter.LengthFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.InputFilter.LengthFilter:android.text.InputFilter>
<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.Layout: int getTopPadding()>:<public abstract>:<android.text.Layout>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(java.net.Socket)>:<public>:<android.net.PskKeyManager>
<android.telephony.CellIdentityGsm: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.content.Context: java.lang.CharSequence getText(int)>:<public final>:<android.content.Context>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.View: boolean isPaddingRelative()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AdapterViewAnimator: void showPrevious()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.RectF)>:<public>:<android.graphics.NinePatch>
<android.content.Intent.ShortcutIconResource: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.dreams.DreamService: android.view.View onCreatePanelView(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.app.Dialog: void onBackPressed()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.os.Parcel: void setDataSize(int)>:<public final>:<android.os.Parcel>
<android.print.PrinterInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.text.style.BackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ImageView:android.view.View>
<android.content.res.TypedArray: int getIndexCount()>:<public>:<android.content.res.TypedArray>
<android.content.Context: void removeStickyBroadcast(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,javax.net.ssl.SSLEngine)>:<public>:<android.net.PskKeyManager>
<android.hardware.Camera.Parameters: void setExposureCompensation(int)>:<public>:<android.hardware.Camera.Parameters>
<android.webkit.WebResourceResponse: void setResponseHeaders(java.util.Map)>:<public>:<android.webkit.WebResourceResponse>
<android.graphics.SurfaceTexture: void detachFromGLContext()>:<public>:<android.graphics.SurfaceTexture>
<android.service.notification.NotificationListenerService.RankingMap: void <clinit>()>:<static>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.FragmentController>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getIcon(int)>:<public>:<android.content.pm.LauncherActivityInfo>
<android.view.View: int getLayerType()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: android.transition.Transition getSharedElementExitTransition()>:<public>:<android.view.Window>
<android.os.TokenWatcher: void dump()>:<public>:<android.os.TokenWatcher>
<android.media.MediaScannerConnection.OnScanCompletedListener: void onScanCompleted(java.lang.String,android.net.Uri)>:<public abstract>:<android.media.MediaScannerConnection.OnScanCompletedListener>
<android.opengl.GLES10: void glAlphaFunc(int,float)>:<public static native>:<android.opengl.GLES10>
<android.media.browse.MediaBrowser.ItemCallback: void <init>()>:<public>:<android.media.browse.MediaBrowser.ItemCallback>
<android.system.StructUtsname: java.lang.String toString()>:<public>:<android.system.StructUtsname>
<android.preference.RingtonePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.nfc.NfcAdapter.CreateBeamUrisCallback: android.net.Uri[] createBeamUris(android.nfc.NfcEvent)>:<public abstract>:<android.nfc.NfcAdapter.CreateBeamUrisCallback>
<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.telephony.gsm.GsmCellLocation: int getPsc()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.os.Parcel: void writeArray(java.lang.Object[])>:<public final>:<android.os.Parcel>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.media.AudioTrack: int getAudioFormat()>:<public>:<android.media.AudioTrack>
<android.app.usage.UsageStats: long getFirstTimeStamp()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setFractionalPart(java.lang.String)>:<public>:<android.text.style.TtsSpan.DecimalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.VideoView: void onMeasure(int,int)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.bluetooth.BluetoothHealthCallback: void <init>()>:<public>:<android.bluetooth.BluetoothHealthCallback>
<android.text.method.BaseMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.RatingBar: void setIsIndicator(boolean)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.bluetooth.BluetoothGattService: int getType()>:<public>:<android.bluetooth.BluetoothGattService>
<android.opengl.GLES10: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setExpedited(boolean)>:<public>:<android.content.SyncRequest.Builder>
<android.webkit.WebView: void pauseTimers()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.nfc.NdefRecord: boolean equals(java.lang.Object)>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.accessibilityservice.AccessibilityServiceInfo: boolean equals(java.lang.Object)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public final>:<android.content.ContentResolver>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>:<public>:<org.json.JSONObject>
<android.gesture.GestureOverlayView: int getUncertainGestureColor()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Notification: android.app.Notification clone()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>:<public static>:<android.gesture.GestureUtils>
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<org.xmlpull.v1.XmlSerializer: java.lang.Object getProperty(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap.CompressFormat,int,java.io.OutputStream)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.media.audiofx.AudioEffect: int setEnabled(boolean)>:<public>:<android.media.audiofx.AudioEffect>
<android.app.assist.AssistContent: boolean isAppProvidedIntent()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.widget.TextView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>:<public>:<android.app.job.JobInfo.Builder>
<android.transition.PatternPathMotion: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.provider.Telephony: void <init>()>:<>:<android.provider.Telephony>
<android.hardware.Camera.Parameters: void setColorEffect(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.location.Address: java.lang.String getAddressLine(int)>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.LocalActivityManager: void dispatchResume()>:<public>:<android.app.LocalActivityManager>
<android.renderscript.Matrix4f: float[] getArray()>:<public>:<android.renderscript.Matrix4f>
<android.webkit.ClientCertRequest: void <init>()>:<public>:<android.webkit.ClientCertRequest>
<android.opengl.GLES10: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.rtp.AudioStream: void <init>(java.net.InetAddress)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.view.MenuItem: android.view.MenuItem setActionView(int)>:<public abstract>:<android.view.MenuItem>
<android.app.ActivityManager.RunningAppProcessInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<junit.runner.BaseTestRunner: void runFailed(java.lang.String)>:<protected abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.content.pm.PackageInstaller.SessionInfo: void <clinit>()>:<static>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>:<protected>:<android.view.LayoutInflater>
<android.media.session.MediaController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.MediaController>
<android.util.Patterns: void <init>()>:<>:<android.util.Patterns>
<android.widget.AbsListView: int getCheckedItemPosition()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.AudioManager: void registerAudioDeviceCallback(android.media.AudioDeviceCallback,android.os.Handler)>:<public>:<android.media.AudioManager>
<android.text.util.Rfc822Token: java.lang.String quoteComment(java.lang.String)>:<public static>:<android.text.util.Rfc822Token>
<android.renderscript.Element: android.renderscript.Element I8_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>:<public>:<android.net.ConnectivityManager>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromDatagramSocket(java.net.DatagramSocket)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.database.sqlite.SQLiteClosable: void <init>()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.text.method.MultiTapKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.app.Fragment: void onStop()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.provider.ContactsContract.Contacts.AggregationSuggestions: void <init>()>:<>:<android.provider.ContactsContract.Contacts.AggregationSuggestions:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.inputmethodservice.InputMethodService: void onViewClicked(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.LayerDrawable: void setPaddingMode(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollStarted()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerScrollListener>
<android.app.UiModeManager: void disableCarMode(int)>:<public>:<android.app.UiModeManager>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.SearchView: int getImeOptions()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory getCategoryAt(int)>:<public>:<android.media.MediaRouter>
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.textservice.SpellCheckerSubtype: boolean equals(java.lang.Object)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback,android.os.Handler)>:<public>:<android.media.session.MediaController>
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.app.AlarmManager.AlarmClockInfo: int describeContents()>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.app.Fragment: boolean getRetainInstance()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.View.DragShadowBuilder: android.view.View getView()>:<public final>:<android.view.View.DragShadowBuilder>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.gesture.GestureLibrary: void setSequenceType(int)>:<public>:<android.gesture.GestureLibrary>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value[] values()>:<public static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.telephony.CellIdentityGsm: int hashCode()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.hardware.camera2.params.LensShadingMap: void copyGainFactors(float[],int)>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.content.pm.FeatureInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.app.Dialog: android.content.Context getContext()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender setColor(int)>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.KernelID getKernelID_bicubic()>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.Network: long getNetworkHandle()>:<public>:<android.net.Network:android.os.Parcelable>
<android.telecom.TelecomManager: boolean handleMmi(java.lang.String)>:<public>:<android.telecom.TelecomManager>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: void <init>()>:<public>:<android.graphics.drawable.ShapeDrawable.ShaderFactory>
<android.telephony.SmsMessage: boolean isMWIClearMessage()>:<public>:<android.telephony.SmsMessage>
<android.widget.ProgressBar: void setProgress(int)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.view.inputmethod.CorrectionInfo: void <init>(int,java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.view.VelocityTracker: float getYVelocity()>:<public>:<android.view.VelocityTracker>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnIndex()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.appwidget.AppWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.widget.Gallery: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.ActivityManager: boolean isLowRamDevice()>:<public>:<android.app.ActivityManager>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.pm.LabeledIntent: void <clinit>()>:<static>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.media.JetPlayer: boolean play()>:<public>:<android.media.JetPlayer>
<android.view.View: float getY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.GridView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.EditTextPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.os.Handler: void <init>(android.os.Handler.Callback)>:<public>:<android.os.Handler>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>:<public final>:<android.util.LruCache>
<android.system.StructStat: java.lang.String toString()>:<public>:<android.system.StructStat>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUriForPath(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<android.graphics.Canvas: void setDensity(int)>:<public>:<android.graphics.Canvas>
<android.media.audiofx.EnvironmentalReverb: int getDecayTime()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.telecom.InCallService.VideoCall.Callback: void onSessionModifyResponseReceived(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>:<public abstract>:<android.telecom.InCallService.VideoCall.Callback>
<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>:<public>:<android.app.Instrumentation>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.app.assist.AssistStructure.WindowNode: int getLeft()>:<public>:<android.app.assist.AssistStructure.WindowNode>
<android.graphics.Point: void <init>(android.graphics.Point)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.MediaRecorder: void setVideoSource(int)>:<public native>:<android.media.MediaRecorder>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,android.renderscript.Allocation,int,int,int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.TextView: void setPadding(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Bitmap: void prepareToDraw()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.DatePicker: void setEnabled(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.nfc.tech.MifareUltralight: boolean isConnected()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.widget.Chronometer: void start()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.widget.PopupWindow: void setTouchable(boolean)>:<public>:<android.widget.PopupWindow>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()>:<public>:<android.hardware.usb.UsbManager>
<android.opengl.EGLConfig: void <init>()>:<>:<android.opengl.EGLConfig:android.opengl.EGLObjectHandle>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator zBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.content.ClipData: android.content.ClipData.Item getItemAt(int)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.os.Bundle: void <init>(int)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.View: boolean onDragEvent(android.view.DragEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ListPopupWindow: boolean isInputMethodNotNeeded()>:<public>:<android.widget.ListPopupWindow>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeType()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.nfc.tech.MifareUltralight: byte[] readPages(int)>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status valueOf(java.lang.String)>:<public static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder syncPeriodic(long,long)>:<public>:<android.content.SyncRequest.Builder>
<android.graphics.ComposePathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>:<public>:<android.graphics.ComposePathEffect:android.graphics.PathEffect>
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTabListener(android.app.ActionBar.TabListener)>:<public abstract>:<android.app.ActionBar.Tab>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Dialog: void onWindowFocusChanged(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.View: android.view.View findViewById(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.webkit.WebSettings: android.webkit.WebSettings.PluginState getPluginState()>:<public abstract>:<android.webkit.WebSettings>
<android.view.View: boolean getClipToOutline()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.net.sip.SipAudioCall.Listener: void onCallBusy(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.service.voice.VoiceInteractionSession: void onAssistStructureFailure(java.lang.Throwable)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.content.ClipDescription: java.lang.String toString()>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.media.tv.TvView: java.util.List getTracks(int)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.os.Bundle: byte getByte(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(android.media.session.PlaybackState.CustomAction)>:<public>:<android.media.session.PlaybackState.Builder>
<android.media.session.MediaController.TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.widget.HorizontalScrollView: void setOverScrollMode(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.admin.DevicePolicyManager: boolean resetPassword(java.lang.String,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putObject(int,java.lang.Object)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbShortTitleRes()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.widget.TabWidget: void setRightStripDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.wallpaper.WallpaperService.Engine: void setTouchEventsEnabled(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.text.DynamicLayout: int getTopPadding()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.provider.Telephony.Mms: void <init>()>:<>:<android.provider.Telephony.Mms:android.provider.Telephony.BaseMmsColumns>
<android.renderscript.Element: android.renderscript.Element I16_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.usage.NetworkStats.Bucket: void <init>()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.app.Dialog: boolean onSearchRequested(android.view.SearchEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewConfiguration: int getKeyRepeatTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.hardware.display.VirtualDisplay: void resize(int,int,int)>:<public>:<android.hardware.display.VirtualDisplay>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.Uri: boolean isRelative()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Activity: int getVolumeControlStream()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.Window: void setAllowEnterTransitionOverlap(boolean)>:<public>:<android.view.Window>
<android.util.Range: android.util.Range extend(java.lang.Comparable,java.lang.Comparable)>:<public>:<android.util.Range>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ImageView:android.view.View>
<android.content.Context: android.content.res.Resources.Theme getTheme()>:<public abstract>:<android.content.Context>
<android.provider.Telephony.Sms: void <clinit>()>:<static>:<android.provider.Telephony.Sms:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>:<public abstract>:<android.util.AttributeSet>
<android.widget.ArrayAdapter: android.content.Context getContext()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.text.style.StyleSpan: int describeContents()>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.content.pm.PackageManager: java.lang.String[] getSystemSharedLibraryNames()>:<public abstract>:<android.content.pm.PackageManager>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.text.method.ArrowKeyMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.drawable.BitmapDrawable: boolean hasAntiAlias()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.accounts.AccountManagerFuture: boolean cancel(boolean)>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.security.KeyStoreParameter: boolean isEncryptionRequired()>:<public>:<android.security.KeyStoreParameter:java.security.KeyStore.ProtectionParameter>
<android.webkit.WebResourceRequest: java.lang.String getMethod()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.WindowManager.LayoutParams: int describeContents()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.text.Layout: float getLineMax(int)>:<public>:<android.text.Layout>
<android.content.ContentResolver: boolean getMasterSyncAutomatically()>:<public static>:<android.content.ContentResolver>
<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.WindowId: void <init>()>:<>:<android.view.WindowId:android.os.Parcelable>
<android.os.Parcel: void writeStringList(java.util.List)>:<public final>:<android.os.Parcel>
<android.widget.NumberPicker: int computeVerticalScrollOffset()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.text.InputFilter.LengthFilter: void <init>(int)>:<public>:<android.text.InputFilter.LengthFilter:android.text.InputFilter>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getAltSubjectMatch()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES30: void glUniform3ui(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.AsyncTaskLoader: void setUpdateThrottle(long)>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.webkit.MimeTypeMap: boolean hasExtension(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.os.Debug: int getGlobalClassInitTime()>:<public static>:<android.os.Debug>
<android.net.NetworkRequest.Builder: void <init>()>:<public>:<android.net.NetworkRequest.Builder>
<android.view.View: android.graphics.PorterDuff.Mode getForegroundTintMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>:<public>:<android.os.TokenWatcher>
<android.widget.DialerFilter: void setMode(int)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.hardware.camera2.CameraAccessException: void <init>(int)>:<public>:<android.hardware.camera2.CameraAccessException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>:<public abstract>:<org.apache.http.conn.scheme.HostNameResolver>
<android.opengl.GLES30: java.lang.String glGetActiveUniformBlockName(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.os.Debug: java.util.Map getRuntimeStats()>:<public static>:<android.os.Debug>
<android.renderscript.Double4: void <init>(double,double,double,double)>:<public>:<android.renderscript.Double4>
<android.media.session.MediaController.Callback: void onMetadataChanged(android.media.MediaMetadata)>:<public>:<android.media.session.MediaController.Callback>
<android.app.Activity: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.os.PersistableBundle: java.lang.String toString()>:<public synchronized>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.preference.TwoStatePreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<org.xmlpull.v1.sax2.Driver: java.lang.String getPublicId()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.renderscript.Matrix2f: void load(android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.graphics.PathDashPathEffect: void <init>(android.graphics.Path,float,float,android.graphics.PathDashPathEffect.Style)>:<public>:<android.graphics.PathDashPathEffect:android.graphics.PathEffect>
<android.system.Os: int pwrite(java.io.FileDescriptor,byte[],int,int,long)>:<public static>:<android.system.Os>
<android.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>:<public abstract>:<android.app.FragmentTransaction>
<android.hardware.camera2.CameraDevice.StateCallback: void onError(android.hardware.camera2.CameraDevice,int)>:<public abstract>:<android.hardware.camera2.CameraDevice.StateCallback>
<android.media.tv.TvInputManager: boolean isRatingBlocked(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputManager>
<android.app.ActivityManager.TaskDescription: int describeContents()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.renderscript.Matrix3f: void loadTranslate(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(long,java.lang.String)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoPixelAspectRatio(float)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.renderscript.Element.Builder: android.renderscript.Element create()>:<public>:<android.renderscript.Element.Builder>
<android.view.MotionEvent: float getHistoricalOrientation(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.res.ColorStateList: void <init>(int[][],int[])>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.text.method.KeyListener: int getInputType()>:<public abstract>:<android.text.method.KeyListener>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.NinePatch>
<android.widget.Filter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>:<protected abstract>:<android.widget.Filter>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.hardware.Camera: void startSmoothZoom(int)>:<public final native>:<android.hardware.Camera>
<android.media.MediaCodecInfo: java.lang.String getName()>:<public final>:<android.media.MediaCodecInfo>
<android.renderscript.Element: android.renderscript.Element ELEMENT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.content.pm.PackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.KeyEvent: char getMatch(char[],int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.text.style.TtsSpan: int describeContents()>:<public>:<android.text.style.TtsSpan:android.text.ParcelableSpan>
<android.app.job.JobInfo: boolean isPersisted()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.media.tv.TvView: void setOnUnhandledInputEventListener(android.media.tv.TvView.OnUnhandledInputEventListener)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.util.EventLog: int getTagCode(java.lang.String)>:<public static>:<android.util.EventLog>
<android.webkit.CookieSyncManager: void resetSync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.os.StrictMode: android.os.StrictMode.VmPolicy getVmPolicy()>:<public static>:<android.os.StrictMode>
<android.preference.ListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.WindowInsets: boolean isRound()>:<public>:<android.view.WindowInsets>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.method.NumberKeyListener: char[] getAcceptedChars()>:<protected abstract>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile build()>:<public>:<android.net.sip.SipProfile.Builder>
<android.widget.LinearLayout: boolean isBaselineAligned()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.content.pm.PackageInstaller.Session: void commit(android.content.IntentSender)>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.telephony.SmsMessage: byte[] getUserData()>:<public>:<android.telephony.SmsMessage>
<android.opengl.EGLSurface: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLSurface:android.opengl.EGLObjectHandle>
<android.app.ActivityManager: void setWatchHeapLimit(long)>:<public>:<android.app.ActivityManager>
<android.telecom.RemoteConnection: boolean isVoipAudioMode()>:<public>:<android.telecom.RemoteConnection>
<android.app.LoaderManager: void destroyLoader(int)>:<public abstract>:<android.app.LoaderManager>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String)>:<public>:<android.drm.DrmErrorEvent:android.drm.DrmEvent>
<android.app.usage.ConfigurationStats: void <init>(android.app.usage.ConfigurationStats)>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()>:<public>:<android.hardware.usb.UsbRequest>
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.view.ViewTreeObserver: void addOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.app.Activity: java.lang.String getCallingPackage()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.webkit.WebView: void onSizeChanged(int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>:<public static>:<android.graphics.Rect:android.os.Parcelable>
<android.net.sip.SipSession: void <init>()>:<>:<android.net.sip.SipSession>
<android.app.MediaRouteActionProvider: boolean onPerformDefaultAction()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.os.ParcelFileDescriptor: boolean canDetectErrors()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.content.Context: java.lang.String getString(int)>:<public final>:<android.content.Context>
<android.view.GestureDetector: void setContextClickListener(android.view.GestureDetector.OnContextClickListener)>:<public>:<android.view.GestureDetector>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>:<public>:<android.graphics.Matrix>
<android.text.SpannedString: boolean equals(java.lang.Object)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.view.View: java.util.ArrayList getTouchables()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ActionMenuView.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.widget.ActionMenuView.OnMenuItemClickListener>
<org.xmlpull.v1.XmlPullParser: boolean isEmptyElementTag()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.util.LruCache: int missCount()>:<public final synchronized>:<android.util.LruCache>
<android.media.Rating: float getStarRating()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.telephony.CellIdentityWcdma: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.test.MoreAsserts: java.util.regex.MatchResult assertContainsRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.print.PrintAttributes.MediaSize: int getHeightMils()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.net.wifi.WpsInfo: void <clinit>()>:<static>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.opengl.GLES20: void glHint(int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.animation.AnimationSet: void <init>(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIcon(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.LocalSocket: int getReceiveBufferSize()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.test.mock.MockContext: boolean deleteFile(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.util.ArraySet: boolean remove(java.lang.Object)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler)>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.usage.UsageStats: void <clinit>()>:<static>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.widget.TextView: void setPaintFlags(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.CookieSyncManager: void <init>()>:<>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.view.animation.PathInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.BaseInterpolator>
<android.os.AsyncTask.Status: void <clinit>()>:<static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)>:<public static>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.AsyncTask: android.os.AsyncTask.Status getStatus()>:<public final>:<android.os.AsyncTask>
<android.app.Fragment: void setReturnTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.Activity: android.net.Uri onProvideReferrer()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<junit.framework.TestSuite: void run(junit.framework.TestResult)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.net.LocalSocket: void close()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.drm.DrmEvent: java.lang.String getMessage()>:<public>:<android.drm.DrmEvent>
<android.test.ActivityTestCase: void <init>()>:<public>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.animation.Animation: java.lang.Object clone()>:<protected volatile>:<android.view.animation.Animation:java.lang.Cloneable>
<android.drm.DrmUtils: void <init>()>:<public>:<android.drm.DrmUtils>
<android.os.Parcel: int dataCapacity()>:<public final>:<android.os.Parcel>
<android.text.util.Rfc822Token: java.lang.String getName()>:<public>:<android.text.util.Rfc822Token>
<android.media.RemoteController: boolean setArtworkConfiguration(int,int)>:<public>:<android.media.RemoteController>
<android.view.textservice.TextInfo: java.lang.String getText()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.widget.TableRow.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getDescription()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.provider.Telephony.Sms.Conversations: void <init>()>:<>:<android.provider.Telephony.Sms.Conversations:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.widget.ListAdapter: boolean isEnabled(int)>:<public abstract>:<android.widget.ListAdapter:android.widget.Adapter>
<android.widget.HorizontalScrollView: boolean arrowScroll(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.camera2.CameraManager: void <init>()>:<>:<android.hardware.camera2.CameraManager>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.telecom.Conference: android.telecom.Connection.VideoProvider getVideoProvider()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOut()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>:<public static>:<android.media.CamcorderProfile>
<android.opengl.GLES31: void glVertexBindingDivisor(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.admin.DevicePolicyManager: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>:<public>:<android.app.admin.DevicePolicyManager>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(int,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher.ViewFactory)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.SpannableStringBuilder: android.text.Editable insert(int,java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.ActionBar: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar>
<android.transition.Fade: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>:<public>:<android.view.GestureDetector>
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>:<public>:<android.telephony.PhoneStateListener>
<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.ProgressDialog: void setProgress(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.preference.PreferenceActivity: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.renderscript.Element: android.renderscript.Element createPixel(android.renderscript.RenderScript,android.renderscript.Element.DataType,android.renderscript.Element.DataKind)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.LayerDrawable: int getRightPadding()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Matrix: java.lang.String toString()>:<public>:<android.graphics.Matrix>
<android.gesture.GestureOverlayView: void removeOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.voice.VoiceInteractionSession: void setContentView(android.view.View)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>:<public>:<android.hardware.SensorManager>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long2)>:<public>:<android.renderscript.FieldPacker>
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.TransitionDrawable: void resetTransition()>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.mtp.MtpStorageInfo: long getMaxCapacity()>:<public final>:<android.mtp.MtpStorageInfo>
<android.view.Display: android.view.Display.Mode getMode()>:<public>:<android.view.Display>
<android.app.VoiceInteractor.Request: android.app.Activity getActivity()>:<public>:<android.app.VoiceInteractor.Request>
<android.renderscript.Element: android.renderscript.Element ALLOCATION(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Allocation: android.renderscript.Type getType()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.provider.Settings: void <init>()>:<public>:<android.provider.Settings>
<android.graphics.Paint: void setUnderlineText(boolean)>:<public native>:<android.graphics.Paint>
<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.util.LruCache: java.lang.String toString()>:<public final synchronized>:<android.util.LruCache>
<android.app.FragmentManager: boolean isDestroyed()>:<public abstract>:<android.app.FragmentManager>
<android.view.View: void onScreenStateChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebView: void loadUrl(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>:<public>:<android.graphics.Outline>
<org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.util.FloatMath: void <init>()>:<>:<android.util.FloatMath>
<org.xmlpull.v1.XmlPullParser: int getEventType()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.animation.TimeAnimator.TimeListener: void onTimeUpdate(android.animation.TimeAnimator,long,long)>:<public abstract>:<android.animation.TimeAnimator.TimeListener>
<android.telecom.RemoteConnection.Callback: void onPostDialChar(android.telecom.RemoteConnection,char)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.widget.TextView: void setFilters(android.text.InputFilter[])>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ActionMenuView: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.TextView: int getTotalPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.style.SuggestionSpan: int getFlags()>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean,android.os.Bundle)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.Contacts: void markAsContacted(android.content.ContentResolver,long)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.hardware.camera2.CameraCaptureSession: void stopRepeating()>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu.OnMenuItemClickListener)>:<public>:<android.widget.PopupMenu>
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.renderscript.Element: android.renderscript.Element I32_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.sip.SipProfile: boolean getSendKeepAlive()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.app.DialogFragment: void onDismiss(android.content.DialogInterface)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>:<public>:<android.graphics.Canvas>
<android.widget.TextView: void setRawInputType(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.provider.Telephony.Mms.Outbox: void <clinit>()>:<static>:<android.provider.Telephony.Mms.Outbox:android.provider.Telephony.BaseMmsColumns>
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.KeyguardManager: boolean isDeviceLocked()>:<public>:<android.app.KeyguardManager>
<android.app.ActivityManager.TaskDescription: java.lang.String getLabel()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.widget.TextClock: boolean is24HourModeEnabled()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.tv.TvView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.text.style.LineHeightSpan.WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt,android.text.TextPaint)>:<public abstract>:<android.text.style.LineHeightSpan.WithDensity:android.text.style.LineHeightSpan>
<android.inputmethodservice.InputMethodService: boolean enableHardwareAcceleration()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityNodeInfo: boolean equals(java.lang.Object)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public abstract>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.net.wifi.WifiManager: boolean removeNetwork(int)>:<public>:<android.net.wifi.WifiManager>
<android.util.LongSparseArray: java.lang.Object get(long)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.app.PendingIntent: java.lang.String getCreatorPackage()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.hardware.usb.UsbDevice: java.lang.String getManufacturerName()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.telecom.PhoneAccount: int getHighlightColor()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void setLayerInsetRight(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.PopupWindow: float getElevation()>:<public>:<android.widget.PopupWindow>
<android.app.ListFragment: void setSelection(int)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.drm.DrmManagerClient: int removeRights(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.location.LocationManager: void <init>()>:<>:<android.location.LocationManager>
<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.text.style.TtsSpan.OrdinalBuilder: android.text.style.TtsSpan.OrdinalBuilder setNumber(java.lang.String)>:<public>:<android.text.style.TtsSpan.OrdinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor)>:<public final>:<android.media.MediaExtractor>
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform1i(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.Fragment: void <init>()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.media.MediaSyncEvent: int getType()>:<public>:<android.media.MediaSyncEvent>
<android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)>:<public>:<android.bluetooth.le.BluetoothLeAdvertiser>
<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>:<public>:<android.media.MediaRecorder>
<android.media.session.MediaSession: void setActive(boolean)>:<public>:<android.media.session.MediaSession>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>:<public>:<android.app.job.JobInfo.Builder>
<android.accounts.AccountsException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<org.xmlpull.v1.sax2.Driver: java.lang.String getQName(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.backup.BackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public abstract>:<android.app.backup.BackupHelper>
<junit.framework.Assert: void assertEquals(java.lang.String,short,short)>:<public static>:<junit.framework.Assert>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaScannerConnection: void connect()>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.util.Range: java.lang.String toString()>:<public>:<android.util.Range>
<android.media.MediaPlayer.TrackInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>:<protected abstract>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.widget.StackView: void <init>(android.content.Context)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.Toast: float getVerticalMargin()>:<public>:<android.widget.Toast>
<android.view.ViewDebug.IntToString: int 'from'()>:<public abstract>:<android.view.ViewDebug.IntToString:java.lang.annotation.Annotation>
<android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>:<public>:<android.service.media.MediaBrowserService.Result>
<android.widget.AbsListView: void onGlobalLayout()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceFragment: void onCreate(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.printservice.PrinterDiscoverySession: void onStopPrinterDiscovery()>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.view.View: void setClipToOutline(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>:<public>:<android.text.Layout>
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>:<public final>:<android.graphics.NinePatch>
<android.hardware.camera2.params.RggbChannelVector: float getBlue()>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.widget.CompoundButton: boolean isChecked()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.net.nsd.NsdManager.ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.ResolveListener>
<android.renderscript.ScriptIntrinsic: void <init>()>:<>:<android.renderscript.ScriptIntrinsic:android.renderscript.Script,android.renderscript.BaseObj>
<android.telephony.TelephonyManager: boolean isWorldPhone()>:<public>:<android.telephony.TelephonyManager>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasWindowColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.widget.TextView: void setText(int,android.widget.TextView.BufferType)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.camera2.CameraCaptureSession: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.view.Window: void setMediaController(android.media.session.MediaController)>:<public>:<android.view.Window>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)>:<public static>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.RouteCategory: java.lang.String toString()>:<public>:<android.media.MediaRouter.RouteCategory>
<org.apache.http.params.HttpParams: long getLongParameter(java.lang.String,long)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.view.View: int getSystemUiVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putString(int,java.lang.String)>:<public synchronized>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.util.SparseArray: void removeAt(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.media.midi.MidiOutputPort: void onConnect(android.media.midi.MidiReceiver)>:<public>:<android.media.midi.MidiOutputPort:android.media.midi.MidiSender,java.io.Closeable>
<android.app.Notification.WearableExtender: android.graphics.Bitmap getBackground()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.text.style.BulletSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.hardware.Camera.PreviewCallback: void onPreviewFrame(byte[],android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.PreviewCallback>
<android.location.Location: boolean hasAltitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.renderscript.Script: void invoke(int,android.renderscript.FieldPacker)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.webkit.WebView: void setNetworkAvailable(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize[] values()>:<public static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.telecom.Call: android.telecom.Call getParent()>:<public>:<android.telecom.Call>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>:<public static>:<android.text.format.DateUtils>
<android.renderscript.Matrix2f: void loadScale(float,float)>:<public>:<android.renderscript.Matrix2f>
<android.graphics.Interpolator: void reset(int,int)>:<public>:<android.graphics.Interpolator>
<android.app.SearchManager: void onDismiss(android.content.DialogInterface)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.ActivityManager.AppTask: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>:<public>:<android.app.ActivityManager.AppTask>
<android.system.Os: void fdatasync(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.view.ViewGroup: void onLayout(boolean,int,int,int,int)>:<protected abstract>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.GridView: void setNumColumns(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.hardware.Camera.Parameters: int getMaxZoom()>:<public>:<android.hardware.Camera.Parameters>
<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>:<public abstract>:<android.view.MenuItem>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate,java.lang.String)>:<public>:<android.net.http.SslError>
<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()>:<public>:<android.net.rtp.RtpStream>
<android.widget.LinearLayout: void setBaselineAligned(boolean)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.media.session.MediaController.TransportControls: void skipToQueueItem(long)>:<public>:<android.media.session.MediaController.TransportControls>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.ImageView:android.view.View>
<android.content.pm.ApplicationInfo: java.lang.String toString()>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>:<public static>:<android.util.TimeUtils>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(int,float[])>:<public>:<android.graphics.Interpolator>
<android.nfc.tech.NdefFormatable: void close()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.widget.TableRow: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.assist.AssistStructure.ViewNode: int getTextSelectionEnd()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.Outline: void setOval(int,int,int,int)>:<public>:<android.graphics.Outline>
<android.net.nsd.NsdServiceInfo: void setPort(int)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,int,android.app.Notification,android.os.UserHandle,long)>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener: void onUpnpServiceAvailable(java.util.List,android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener>
<android.view.InputEvent: int getDeviceId()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.util.ArraySet: boolean containsAll(java.util.Collection)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectAll()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.graphics.Canvas: int getSaveCount()>:<public>:<android.graphics.Canvas>
<android.widget.StackView: void advance()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>:<protected>:<android.inputmethodservice.Keyboard>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.test.ActivityInstrumentationTestCase: android.app.Activity getActivity()>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.Fragment: void requestPermissions(java.lang.String[],int)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Debug.MemoryInfo: int getTotalPss()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.content.SharedPreferences.Editor: void apply()>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.app.DatePickerDialog.OnDateSetListener: void onDateSet(android.widget.DatePicker,int,int,int)>:<public abstract>:<android.app.DatePickerDialog.OnDateSetListener>
<android.renderscript.Script.FieldBase: void updateAllocation()>:<public>:<android.renderscript.Script.FieldBase>
<android.content.ContentProviderOperation: boolean isInsert()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<junit.framework.TestCase: void run(junit.framework.TestResult)>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.telephony.ServiceState: int hashCode()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.widget.AutoCompleteTextView: int getDropDownHeight()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.util.Rational: boolean isNaN()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.nfc.tech.MifareClassic: void close()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.inputmethodservice.ExtractEditText: boolean hasWindowFocus()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.text.style.QuoteSpan: void <init>()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.PerformanceTestCase: boolean isPerformanceOnly()>:<public abstract>:<android.test.PerformanceTestCase>
<android.telephony.gsm.SmsMessage: java.lang.String getEmailFrom()>:<public>:<android.telephony.gsm.SmsMessage>
<android.inputmethodservice.KeyboardView: void onSizeChanged(int,int,int,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.bluetooth.BluetoothGatt: void close()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.gesture.Gesture: long getID()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.content.pm.PackageInfo: void <init>()>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public abstract>:<android.content.Context>
<android.sax.RootElement: void <init>(java.lang.String,java.lang.String)>:<public>:<android.sax.RootElement:android.sax.Element>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>:<public>:<android.accounts.AccountManager>
<android.renderscript.Short4: void <init>(short,short,short,short)>:<public>:<android.renderscript.Short4>
<android.view.DragEvent: android.content.ClipData getClipData()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.graphics.Paint: void setColor(int)>:<public native>:<android.graphics.Paint>
<android.system.Os: void posix_fallocate(java.io.FileDescriptor,long,long)>:<public static>:<android.system.Os>
<android.widget.ViewFlipper: boolean isFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowManager.LayoutParams: void <clinit>()>:<static>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.appwidget.AppWidgetHostView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>:<public>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<android.app.Fragment: void setMenuVisibility(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Fragment: void onDestroy()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Debug.InstructionCount: void <init>()>:<public>:<android.os.Debug.InstructionCount>
<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer.OnChronometerTickListener)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getOutputFormats()>:<public final>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageWidth()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.webkit.WebSettings: boolean getSaveFormData()>:<public abstract>:<android.webkit.WebSettings>
<android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>:<public static>:<android.net.ConnectivityManager>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.nfc.tech.Ndef: boolean makeReadOnly()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.renderscript.Element: android.renderscript.Element MESH(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.MediaDescription: android.net.Uri getMediaUri()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>:<public final>:<android.accounts.AbstractAccountAuthenticator>
<android.widget.RadioGroup: void clearCheck()>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Matrix: void reset()>:<public>:<android.graphics.Matrix>
<android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.test.suitebuilder.TestSuiteBuilder: java.lang.String getSuiteName()>:<protected>:<android.test.suitebuilder.TestSuiteBuilder>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>:<public>:<android.graphics.Canvas>
<android.app.Dialog: android.view.View onCreatePanelView(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.FragmentBreadCrumbs: void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.telecom.StatusHints: int describeContents()>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.os.WorkSource: java.lang.String toString()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.UiModeManager: int getCurrentModeType()>:<public>:<android.app.UiModeManager>
<android.media.AudioTrack: int setPositionNotificationPeriod(int)>:<public>:<android.media.AudioTrack>
<android.app.ActionBar: void removeTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.location.Location: void distanceBetween(double,double,double,double,float[])>:<public static>:<android.location.Location:android.os.Parcelable>
<android.app.Notification.Action.Builder: void <init>(android.app.Notification.Action)>:<public>:<android.app.Notification.Action.Builder>
<android.telecom.ConnectionRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.telephony.CellIdentityWcdma: java.lang.String toString()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.media.RingtoneManager: boolean getStopPreviousRingtone()>:<public>:<android.media.RingtoneManager>
<android.opengl.GLES30: void glClearBufferiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.test.mock.MockContext: int checkCallingPermission(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter build()>:<public>:<android.security.KeyStoreParameter.Builder>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup create(java.lang.String,android.renderscript.ScriptGroup.Future[])>:<public transient>:<android.renderscript.ScriptGroup.Builder2>
<android.content.res.AssetManager: java.lang.String[] getLocales()>:<public final native>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.inputmethodservice.ExtractEditText: boolean hasFocus()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.app.admin.DevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.RouteInfo: void <clinit>()>:<static>:<android.net.RouteInfo:android.os.Parcelable>
<android.text.style.TtsSpan.VerbatimBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.VerbatimBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus.NmeaListener)>:<public>:<android.location.LocationManager>
<android.graphics.drawable.AnimatedVectorDrawable: int getOpacity()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.graphics.BitmapFactory: void <init>()>:<public>:<android.graphics.BitmapFactory>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint.FontMetricsInt)>:<public native>:<android.graphics.Paint>
<android.view.KeyEvent: char getDisplayLabel()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setX(int)>:<public>:<android.renderscript.Type.Builder>
<android.provider.CalendarContract.Attendees: void <clinit>()>:<static>:<android.provider.CalendarContract.Attendees:android.provider.BaseColumns,android.provider.CalendarContract.AttendeesColumns,android.provider.CalendarContract.EventsColumns>
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glBeginQuery(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AbsListView: boolean isTextFilterEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: boolean hasFocusable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.nfc.Tag: java.lang.String toString()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.widget.PopupWindow: void setInputMethodMode(int)>:<public>:<android.widget.PopupWindow>
<android.hardware.camera2.params.BlackLevelPattern: int hashCode()>:<public>:<android.hardware.camera2.params.BlackLevelPattern>
<android.telephony.TelephonyManager: boolean isTtyModeSupported()>:<public>:<android.telephony.TelephonyManager>
<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.test.suitebuilder.TestMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>:<public>:<android.test.suitebuilder.TestMethod>
<android.hardware.display.VirtualDisplay.Callback: void onResumed()>:<public>:<android.hardware.display.VirtualDisplay.Callback>
<android.content.ContentValues: int hashCode()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.net.wifi.WifiEnterpriseConfig: void <clinit>()>:<static>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createSocketPair()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.view.inputmethod.CorrectionInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void <init>()>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.os.BaseBundle: void putIntArray(java.lang.String,int[])>:<public>:<android.os.BaseBundle>
<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Application: void <init>()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.view.View: boolean getFilterTouchesWhenObscured()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TableLayout: void addView(android.view.View,int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitNetwork()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.InputDevice: android.view.InputDevice getDevice(int)>:<public static>:<android.view.InputDevice:android.os.Parcelable>
<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.view.View: boolean isScrollbarFadingEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.PopupMenu: android.view.View.OnTouchListener getDragToOpenListener()>:<public>:<android.widget.PopupMenu>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.widget.ExpandableListView: int getFlatListPosition(long)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.style.DynamicDrawableSpan: android.graphics.drawable.Drawable getDrawable()>:<public abstract>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.graphics.drawable.LayerDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telephony.CellSignalStrengthGsm: java.lang.String toString()>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.text.style.TtsSpan: android.os.PersistableBundle getArgs()>:<public>:<android.text.style.TtsSpan:android.text.ParcelableSpan>
<android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>:<public static>:<android.bluetooth.BluetoothAdapter>
<android.telecom.InCallService: android.telecom.CallAudioState getCallAudioState()>:<public final>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.PackageInstaller: java.util.List getAllSessions()>:<public>:<android.content.pm.PackageInstaller>
<android.text.util.Rfc822Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.net.ProxyInfo: int describeContents()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>:<public>:<android.media.MediaPlayer>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType)>:<public static>:<android.renderscript.RenderScript>
<android.media.UnsupportedSchemeException: void <init>(java.lang.String)>:<public>:<android.media.UnsupportedSchemeException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.telephony.CellIdentityLte: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.media.MediaSync: void release()>:<public final>:<android.media.MediaSync>
<android.app.FragmentTransaction: android.app.FragmentTransaction hide(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.text.Layout: float getPrimaryHorizontal(int)>:<public>:<android.text.Layout>
<android.opengl.GLES30: void glClearBufferfi(int,int,float,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowIndex()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.security.KeyStoreParameter.Builder: void <init>(android.content.Context)>:<public>:<android.security.KeyStoreParameter.Builder>
<android.hardware.Camera: void setFaceDetectionListener(android.hardware.Camera.FaceDetectionListener)>:<public final>:<android.hardware.Camera>
<android.widget.VideoView: void onDetachedFromWindow()>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.system.Os: void link(java.lang.String,java.lang.String)>:<public static>:<android.system.Os>
<android.content.Context: void setWallpaper(java.io.InputStream)>:<public abstract>:<android.content.Context>
<android.os.CancellationSignal.OnCancelListener: void onCancel()>:<public abstract>:<android.os.CancellationSignal.OnCancelListener>
<android.util.SparseArray: int indexOfValue(java.lang.Object)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.content.res.AssetFileDescriptor: long getDeclaredLength()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.graphics.Interpolator: int getKeyFrameCount()>:<public final>:<android.graphics.Interpolator>
<android.content.SyncRequest: int describeContents()>:<public>:<android.content.SyncRequest:android.os.Parcelable>
<android.bluetooth.BluetoothGattCharacteristic: java.util.UUID getUuid()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.webkit.CookieManager: void <init>()>:<public>:<android.webkit.CookieManager>
<android.opengl.Matrix: void transposeM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockContext: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.provider.Contacts.Intents.Insert: void <init>()>:<public>:<android.provider.Contacts.Intents.Insert>
<android.media.projection.MediaProjection: void unregisterCallback(android.media.projection.MediaProjection.Callback)>:<public>:<android.media.projection.MediaProjection>
<android.drm.DrmEvent: int getType()>:<public>:<android.drm.DrmEvent>
<android.transition.ChangeBounds: void setReparent(boolean)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.service.carrier.CarrierIdentifier: java.lang.String getSpn()>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.lang.String)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.text.format.Time: java.lang.String format3339(boolean)>:<public>:<android.text.format.Time>
<android.content.res.TypedArray: int getChangingConfigurations()>:<public>:<android.content.res.TypedArray>
<android.net.MailTo: java.lang.String getTo()>:<public>:<android.net.MailTo>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public abstract>:<android.content.Context>
<android.view.MenuItem: java.lang.CharSequence getTitle()>:<public abstract>:<android.view.MenuItem>
<org.json.JSONArray: long optLong(int,long)>:<public>:<org.json.JSONArray>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>:<public abstract>:<android.view.WindowManager:android.view.ViewManager>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRatesFor(int,int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.text.style.RelativeSizeSpan: float getSizeChange()>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Debug: void stopMethodTracing()>:<public static>:<android.os.Debug>
<android.widget.TableLayout: void setColumnCollapsed(int,boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.transition.Slide: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.renderscript.Element: android.renderscript.Element F16_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.animation.Animator: void setupEndValues()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.hardware.display.VirtualDisplay.Callback: void <init>()>:<public>:<android.hardware.display.VirtualDisplay.Callback>
<android.location.Location: float getSpeed()>:<public>:<android.location.Location:android.os.Parcelable>
<android.security.keystore.KeyProtection: java.lang.String[] getDigests()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.OverScroller: void startScroll(int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.Window: android.view.Window.Callback getCallback()>:<public final>:<android.view.Window>
<android.graphics.NinePatch: boolean hasAlpha()>:<public final>:<android.graphics.NinePatch>
<android.media.MediaPlayer: void setVideoScalingMode(int)>:<public>:<android.media.MediaPlayer>
<android.media.audiofx.EnvironmentalReverb: void setDecayTime(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.net.LinkProperties: java.lang.String getInterfaceName()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.Activity: void showDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.CalendarView: void setShowWeekNumber(boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: void fling(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Toolbar: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.content.pm.ActivityInfo: void <init>()>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.renderscript.FieldPacker: android.renderscript.Matrix4f subMatrix4f()>:<public>:<android.renderscript.FieldPacker>
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>:<public final>:<android.telephony.gsm.SmsManager>
<android.text.style.TtsSpan.FractionBuilder: void <init>(long,long,long)>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>:<public>:<android.widget.Scroller>
<android.graphics.Paint: void setFilterBitmap(boolean)>:<public native>:<android.graphics.Paint>
<org.apache.http.params.HttpParams: double getDoubleParameter(java.lang.String,double)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.telecom.TelecomManager: void registerPhoneAccount(android.telecom.PhoneAccount)>:<public>:<android.telecom.TelecomManager>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.preference.DialogPreference: void onDismiss(android.content.DialogInterface)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.test.mock.MockCursor: int getType(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.Context: java.lang.String[] databaseList()>:<public abstract>:<android.content.Context>
<android.test.InstrumentationTestCase: void tearDown()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.assist.AssistContent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.renderscript.Matrix4f: void transpose()>:<public>:<android.renderscript.Matrix4f>
<android.view.animation.ScaleAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.graphics.drawable.BitmapDrawable: void <init>(java.io.InputStream)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: java.lang.String getSystemServiceName(java.lang.Class)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.HorizontalScrollView: int getMaxScrollAmount()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.opengl.GLES30: void glUniform4uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: android.app.VoiceInteractor.PickOptionRequest.Option[] getOptions()>:<public>:<android.service.voice.VoiceInteractionSession.PickOptionRequest:android.service.voice.VoiceInteractionSession.Request>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int,int)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomSizePreset(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>:<public>:<android.media.ExifInterface>
<android.preference.Preference: void onClick()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.net.wifi.p2p.WifiP2pManager: void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.net.LinkProperties: void <clinit>()>:<static>:<android.net.LinkProperties:android.os.Parcelable>
<android.view.View: float getPivotX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.TvInputInfo: boolean equals(java.lang.Object)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.nfc.tech.MifareUltralight: int getMaxTransceiveLength()>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.test.mock.MockContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.service.textservice.SpellCheckerService.Session: void onClose()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeightsFor(int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.view.View: int getMinimumWidth()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodec.CryptoInfo: void <init>()>:<public>:<android.media.MediaCodec.CryptoInfo>
<android.security.KeyPairGeneratorSpec: java.util.Date getStartDate()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.renderscript.ScriptIntrinsicBLAS: void ZSYR2K(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long4)>:<public>:<android.renderscript.FieldPacker>
<android.nfc.tech.MifareClassic: void restore(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.app.Activity: void recreate()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.ViewGroup.MarginLayoutParams: void resolveLayoutDirection(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.view.InflateException: void <init>()>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener)>:<public>:<android.speech.tts.TextToSpeech>
<android.location.GpsStatus.NmeaListener: void onNmeaReceived(long,java.lang.String)>:<public abstract>:<android.location.GpsStatus.NmeaListener>
<junit.framework.Assert: void assertEquals(byte,byte)>:<public static>:<junit.framework.Assert>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.view.MotionEvent: float getToolMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.ObjectAnimator: void setAutoCancel(boolean)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.HeaderViewListAdapter: int getFootersCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.app.Notification: java.lang.Object clone()>:<public volatile>:<android.app.Notification:android.os.Parcelable>
<android.print.PrinterId: void <init>()>:<>:<android.print.PrinterId:android.os.Parcelable>
<android.opengl.GLES10: void glDisable(int)>:<public static native>:<android.opengl.GLES10>
<android.provider.DocumentsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.database.AbstractWindowedCursor: boolean isLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.Window>
<dalvik.system.DexFile: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.DexFile>
<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor.Request)>:<public>:<android.app.VoiceInteractor>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)>:<public abstract>:<android.view.MenuItem.OnActionExpandListener>
<android.media.midi.MidiDeviceInfo: boolean isPrivate()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.hardware.usb.UsbInterface: int getAlternateSetting()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.view.ViewStructure: void setClickable(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.net.sip.SipSession: void endCall()>:<public>:<android.net.sip.SipSession>
<android.text.Layout: boolean isSpanned()>:<protected final>:<android.text.Layout>
<android.app.DialogFragment: void onDestroyView()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.NotificationManager.Policy: java.lang.String toString()>:<public>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.telephony.CellSignalStrengthLte: void <clinit>()>:<static>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.graphics.Matrix: boolean preRotate(float)>:<public>:<android.graphics.Matrix>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>:<public>:<android.telephony.SmsManager>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode[] values()>:<public static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.app.admin.DevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.Context: void unbindService(android.content.ServiceConnection)>:<public abstract>:<android.content.Context>
<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WpsInfo: void <init>()>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.app.ListActivity: long getSelectedItemId()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.provider.ContactsContract.CommonDataKinds.Email: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.app.NativeActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.IntentFilter.AuthorityEntry: int getPort()>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.media.session.MediaSession.Callback: boolean onMediaButtonEvent(android.content.Intent)>:<public>:<android.media.session.MediaSession.Callback>
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>:<public>:<android.view.inputmethod.InputMethodManager>
<android.util.Patterns: java.lang.String digitsAndPlusOnly(java.util.regex.Matcher)>:<public static final>:<android.util.Patterns>
<android.view.View: int computeVerticalScrollRange()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.media.audiofx.Visualizer: void release()>:<public>:<android.media.audiofx.Visualizer>
<android.provider.Telephony.Threads: void <clinit>()>:<static>:<android.provider.Telephony.Threads:android.provider.Telephony.ThreadsColumns>
<android.graphics.drawable.RippleDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)>:<public>:<android.net.sip.SipAudioCall>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>:<public transient>:<android.content.res.Resources>
<android.os.NetworkOnMainThreadException: void <init>()>:<public>:<android.os.NetworkOnMainThreadException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.ScrollView: boolean onNestedFling(android.view.View,float,float,boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setCustomInsertionActionModeCallback(android.view.ActionMode.Callback)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.hardware.camera2.CameraCharacteristics: void <clinit>()>:<static>:<android.hardware.camera2.CameraCharacteristics:android.hardware.camera2.CameraMetadata>
<android.app.SearchableInfo: int getVoiceLanguageModeId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.view.MotionEvent: float getOrientation(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: android.content.res.ColorStateList getForegroundTintList()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.telecom.RemoteConference: void <init>()>:<>:<android.telecom.RemoteConference>
<android.media.session.PlaybackState.Builder: void <init>()>:<public>:<android.media.session.PlaybackState.Builder>
<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.media.RemoteController.MetadataEditor: void <init>(android.media.RemoteController)>:<>:<android.media.RemoteController.MetadataEditor:android.media.MediaMetadataEditor>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.AsyncQueryHandler: void startUpdate(int,java.lang.Object,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.util.SizeF: java.lang.String toString()>:<public>:<android.util.SizeF>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.ActivityManager.ProcessErrorStateInfo: void <init>()>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.animation.LayoutAnimationController: void setOrder(int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.content.ClipDescription: void <init>(java.lang.CharSequence,java.lang.String[])>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.view.Window: boolean getAllowReturnTransitionOverlap()>:<public>:<android.view.Window>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>:<public>:<android.app.job.JobInfo.Builder>
<android.location.LocationManager: void removeTestProvider(java.lang.String)>:<public>:<android.location.LocationManager>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String)>:<public>:<android.drm.DrmInfoEvent:android.drm.DrmEvent>
<android.text.TextUtils.TruncateAt: void <clinit>()>:<static>:<android.text.TextUtils.TruncateAt:java.lang.Enum>
<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telecom.RemoteConnection.VideoProvider: void setPreviewSurface(android.view.Surface)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.transition.VisibilityPropagation: java.lang.String[] getPropagationProperties()>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.database.Cursor: boolean isFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.hardware.camera2.DngCreator: void <init>(android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.CaptureResult)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.view.accessibility.AccessibilityNodeInfo: boolean refresh()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.audiofx.LoudnessEnhancer: float getTargetGain()>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.view.MotionEvent: float getXPrecision()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.transition.ChangeImageTransform: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.view.View: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>:<public>:<android.telephony.TelephonyManager>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int,int)>:<public>:<android.widget.PopupWindow>
<android.bluetooth.BluetoothAdapter: boolean isEnabled()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])>:<public static transient>:<android.app.ActivityOptions>
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.graphics.Paint.FontMetrics: void <init>()>:<public>:<android.graphics.Paint.FontMetrics>
<android.widget.GridView: int getRequestedHorizontalSpacing()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Camera: void rotateX(float)>:<public native>:<android.graphics.Camera>
<android.service.dreams.DreamService: void <init>()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.widget.TableLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.MatrixCursor.RowBuilder: void <init>(android.database.MatrixCursor)>:<>:<android.database.MatrixCursor.RowBuilder>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>:<public static>:<android.graphics.Typeface>
<android.opengl.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>:<public>:<android.view.ViewConfiguration>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>:<public>:<android.telephony.TelephonyManager>
<android.media.audiofx.Virtualizer: short getRoundedStrength()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.graphics.Region: android.graphics.Rect getBounds()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Fragment: void setExitTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.preference.Preference: boolean getShouldDisableView()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)>:<public>:<android.telephony.SubscriptionManager>
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.BaseInterpolator>
<android.telecom.Conference: long getConnectionTime()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.nfc.tech.NdefFormatable: void <init>()>:<>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.graphics.drawable.Drawable.ConstantState: int getChangingConfigurations()>:<public abstract>:<android.graphics.drawable.Drawable.ConstantState>
<android.net.http.HttpResponseCache: void close()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.text.SpannableStringBuilder: int length()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>:<public>:<android.animation.StateListAnimator:java.lang.Cloneable>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.MediaRouter.Callback: void <init>()>:<public>:<android.media.MediaRouter.Callback>
<android.text.LoginFilter: void onInvalidCharacter(char)>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.content.pm.PackageInstaller.Session: java.io.OutputStream openWrite(java.lang.String,long,long)>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.os.Debug: void resetThreadAllocCount()>:<public static>:<android.os.Debug>
<android.hardware.usb.UsbDevice: void <init>()>:<>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<org.xmlpull.v1.XmlPullParser: int next()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.renderscript.Script: android.renderscript.Script.KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.net.wifi.WifiManager: void cancelWps(android.net.wifi.WifiManager.WpsCallback)>:<public>:<android.net.wifi.WifiManager>
<android.provider.Telephony.Mms.Outbox: void <init>()>:<>:<android.provider.Telephony.Mms.Outbox:android.provider.Telephony.BaseMmsColumns>
<android.text.style.AbsoluteSizeSpan: int getSize()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.renderscript.ScriptIntrinsicBlend: void <init>()>:<>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.CalendarView: void setFocusedMonthDateColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintJob: void restart()>:<public>:<android.print.PrintJob>
<android.preference.Preference: boolean persistString(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.AlphabetIndexer: int getSectionForPosition(int)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.graphics.Paint.Style: void <clinit>()>:<static>:<android.graphics.Paint.Style:java.lang.Enum>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri)>:<public>:<android.app.Notification.Builder>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>:<public>:<android.content.res.Resources>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.text.LoginFilter.UsernameFilterGMail: boolean isAllowed(char)>:<public>:<android.text.LoginFilter.UsernameFilterGMail:android.text.LoginFilter>
<android.app.Activity: void onContextMenuClosed(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>:<public>:<android.telephony.SubscriptionManager>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES10: void glFinish()>:<public static native>:<android.opengl.GLES10>
<android.widget.Switch: boolean getSplitTrack()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.webkit.WebSettings.RenderPriority: void <clinit>()>:<static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.content.Intent: java.lang.String resolveType(android.content.Context)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.usb.UsbInterface: java.lang.String getName()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreviewSize()>:<public>:<android.hardware.Camera.Parameters>
<android.net.rtp.AudioGroup: void setMode(int)>:<public>:<android.net.rtp.AudioGroup>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicBLAS: void DSBMV(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: int getPaddingLeft()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<android.content.ContentProvider: android.net.Uri canonicalize(android.net.Uri)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.util.LongSparseArray: void <init>(int)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.transition.TransitionSet: void setPathMotion(android.transition.PathMotion)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.Activity: boolean onNavigateUp()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>:<public>:<android.view.ViewStub:android.view.View>
<android.view.animation.Animation: boolean getFillBefore()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.bluetooth.BluetoothGatt: boolean readRemoteRssi()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()>:<public>:<android.net.rtp.RtpStream>
<android.print.PrintJob: boolean isFailed()>:<public>:<android.print.PrintJob>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.HeaderViewListAdapter: void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.SearchView: void setOnSearchClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.app.SearchableInfo: java.lang.String getSuggestSelection()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>:<public>:<android.nfc.NfcAdapter>
<android.transition.Transition: void setMatchOrder(int[])>:<public transient>:<android.transition.Transition:java.lang.Cloneable>
<android.view.View: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<junit.framework.TestCase: junit.framework.TestResult run()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference.Callback,android.os.Handler)>:<public final>:<android.telecom.RemoteConference>
<android.preference.Preference: void setPersistent(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionEnd()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.opengl.GLES20: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioFormat: int getSampleRate()>:<public>:<android.media.AudioFormat>
<android.drm.DrmSupportInfo: int hashCode()>:<public>:<android.drm.DrmSupportInfo>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>:<public static>:<android.net.http.SslCertificate>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double3)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: void onScreenStateChanged(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>:<public>:<android.content.ContentResolver>
<android.service.voice.VoiceInteractionSession: android.view.View onCreateContentView()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.os.PowerManager.WakeLock: void <init>(android.os.PowerManager)>:<>:<android.os.PowerManager.WakeLock>
<android.renderscript.ScriptIntrinsicLUT: void <init>()>:<>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.test.mock.MockContext: java.lang.String[] fileList()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>:<public>:<android.app.WallpaperManager>
<android.accessibilityservice.AccessibilityService: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: int getHeight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.speech.RecognitionService: void <init>()>:<public>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.MenuItem: android.view.ActionProvider getActionProvider()>:<public abstract>:<android.view.MenuItem>
<android.widget.AutoCompleteTextView: boolean isPerformingCompletion()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.CalendarView: long getDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt)>:<public static>:<android.text.TextUtils>
<android.graphics.Region: boolean quickReject(android.graphics.Region)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.provider.DocumentsProvider: android.database.Cursor querySearchDocuments(java.lang.String,java.lang.String,java.lang.String[])>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.AudioManager: boolean isWiredHeadsetOn()>:<public>:<android.media.AudioManager>
<android.media.MediaMetadata.Builder: void <init>()>:<public>:<android.media.MediaMetadata.Builder>
<android.opengl.EGL14: android.opengl.EGLContext eglGetCurrentContext()>:<public static native>:<android.opengl.EGL14>
<android.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,java.net.Socket)>:<public>:<android.net.PskKeyManager>
<android.telephony.SmsMessage: boolean isCphsMwiMessage()>:<public>:<android.telephony.SmsMessage>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,java.lang.Object)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AnalogClock: void onAttachedToWindow()>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.drm.DrmConvertedStatus: void <init>(int,byte[],int)>:<public>:<android.drm.DrmConvertedStatus>
<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.util.Locale,java.lang.String[],int,java.lang.Class)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.Layout: android.text.Layout.Directions getLineDirections(int)>:<public abstract>:<android.text.Layout>
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.View: int getDrawingCacheBackgroundColor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.Paint>
<android.content.Loader: boolean cancelLoad()>:<public>:<android.content.Loader>
<android.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.widget.ListPopupWindow>
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.widget.ScrollView: void onDetachedFromWindow()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Button: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.net.wifi.WifiManager.MulticastLock: void setReferenceCounted(boolean)>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.LoaderManager.LoaderCallbacks: android.content.Loader onCreateLoader(int,android.os.Bundle)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.net.wifi.p2p.WifiP2pInfo: void <init>(android.net.wifi.p2p.WifiP2pInfo)>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.app.FragmentController: android.app.LoaderManager getLoaderManager()>:<public>:<android.app.FragmentController>
<android.app.LauncherActivity: void onSetContentView()>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: void setText(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.WindowManager.LayoutParams: java.lang.CharSequence getTitle()>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.net.RouteInfo: java.net.InetAddress getGateway()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<org.xmlpull.v1.sax2.Driver: int getLineNumber()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.provider.Settings.Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.app.admin.DevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.telecom.CallAudioState: java.lang.String audioRouteToString(int)>:<public static>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.preference.EditTextPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.DocumentsProvider: void <init>()>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.hardware.usb.UsbDevice: int getVendorId()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(int)>:<public>:<android.app.AlertDialog.Builder>
<android.graphics.Picture: void <init>(android.graphics.Picture)>:<public>:<android.graphics.Picture>
<android.os.ConditionVariable: boolean block(long)>:<public>:<android.os.ConditionVariable>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putLong(int,long)>:<public synchronized>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.sip.SipProfile.Builder: void <init>(android.net.sip.SipProfile)>:<public>:<android.net.sip.SipProfile.Builder>
<android.text.SpannableString: int getSpanEnd(java.lang.Object)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.security.keystore.KeyProtection: boolean isUserAuthenticationRequired()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.hardware.Camera.Parameters: void setRecordingHint(boolean)>:<public>:<android.hardware.Camera.Parameters>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES30: long glFenceSync(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.SearchView: void onDetachedFromWindow()>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.hardware.Camera.Parameters: void getFocusDistances(float[])>:<public>:<android.hardware.Camera.Parameters>
<android.media.SyncParams: android.media.SyncParams allowDefaults()>:<public>:<android.media.SyncParams>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode valueOf(java.lang.String)>:<public static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.renderscript.ScriptIntrinsicBLAS: void STBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.test.mock.MockContext: android.content.res.Resources getResources()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getTestSuite()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.media.MediaExtractor: int getSampleFlags()>:<public native>:<android.media.MediaExtractor>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceRedrawNeeded(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.app.Application.OnProvideAssistDataListener: void onProvideAssistData(android.app.Activity,android.os.Bundle)>:<public abstract>:<android.app.Application.OnProvideAssistDataListener>
<android.renderscript.FieldPacker: float subF32()>:<public>:<android.renderscript.FieldPacker>
<android.test.ViewAsserts: void assertBottomAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<android.media.MediaRouter.Callback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.text.LoginFilter.UsernameFilterGMail: void <init>(boolean)>:<public>:<android.text.LoginFilter.UsernameFilterGMail:android.text.LoginFilter>
<android.app.FragmentController: void dispatchCreate()>:<public>:<android.app.FragmentController>
<android.print.PrintAttributes.Resolution: java.lang.String toString()>:<public>:<android.print.PrintAttributes.Resolution>
<android.content.res.ColorStateList: void <clinit>()>:<static>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView.OnChildClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: void glDispatchComputeIndirect(long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.VectorDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.hardware.Camera.Parameters: java.lang.String getFocusMode()>:<public>:<android.hardware.Camera.Parameters>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)>:<public>:<android.webkit.WebViewClient>
<android.opengl.EGL14: java.lang.String eglQueryString(android.opengl.EGLDisplay,int)>:<public static native>:<android.opengl.EGL14>
<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.view.ViewGroup: void measureChild(android.view.View,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.graphics.Region: boolean quickContains(int,int,int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void prepareForReplace()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighResolutionOutputSizes(int)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.media.MediaPlayer: int getCurrentPosition()>:<public native>:<android.media.MediaPlayer>
<android.view.View: boolean isFocused()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.keystore.KeyGenParameterSpec: java.math.BigInteger getCertificateSerialNumber()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.graphics.Rect: void <init>(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>:<public static>:<android.telephony.SmsMessage>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long,long,long)>:<public static final>:<android.media.tv.TvContract>
<android.transition.ChangeTransform: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.media.audiofx.EnvironmentalReverb: short getDiffusion()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.EntityResolver getEntityResolver()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.graphics.drawable.NinePatchDrawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.provider.SyncStateContract.Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>:<public>:<android.app.Instrumentation>
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivity()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.os.StatFs: int getAvailableBlocks()>:<public>:<android.os.StatFs>
<android.view.ActionProvider: boolean onPerformDefaultAction()>:<public>:<android.view.ActionProvider>
<android.content.pm.ResolveInfo: void <init>(android.content.pm.ResolveInfo)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.LinkProperties: java.lang.String getDomains()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.os.Parcel: float[] createFloatArray()>:<public final>:<android.os.Parcel>
<android.renderscript.ScriptGroup.Binding: void <init>(android.renderscript.Script.FieldID,java.lang.Object)>:<public>:<android.renderscript.ScriptGroup.Binding>
<android.animation.TimeInterpolator: float getInterpolation(float)>:<public abstract>:<android.animation.TimeInterpolator>
<android.telephony.CellInfo: void <init>()>:<>:<android.telephony.CellInfo:android.os.Parcelable>
<android.content.IntentFilter: boolean hasCategory(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.TabHost.TabSpec: void <init>(android.widget.TabHost)>:<>:<android.widget.TabHost.TabSpec>
<android.provider.Contacts.People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,java.lang.String,byte[],byte[])>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.RemoteInput: java.lang.CharSequence[] getChoices()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setZ(int)>:<public>:<android.renderscript.Type.Builder>
<android.util.AtomicFile: java.io.File getBaseFile()>:<public>:<android.util.AtomicFile>
<android.widget.FrameLayout: boolean getMeasureAllChildren()>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothA2dp: void <init>()>:<>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.renderscript.ScriptIntrinsicBLAS: void DGEMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.app.Dialog: void setCancelable(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.View: void setId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.sax.Element: android.sax.Element requireChild(java.lang.String,java.lang.String)>:<public>:<android.sax.Element>
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.Point: java.lang.String toString()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>:<public>:<android.view.WindowInsets>
<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)>:<public abstract>:<android.view.ViewParent>
<android.media.Ringtone: void <init>()>:<>:<android.media.Ringtone>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.app.ActivityManager: int getLargeMemoryClass()>:<public>:<android.app.ActivityManager>
<android.content.Context: void setWallpaper(android.graphics.Bitmap)>:<public abstract>:<android.content.Context>
<android.telecom.PhoneAccountHandle: java.lang.String toString()>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.CheckedTextView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.database.Cursor: java.lang.String getString(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.ActionMode.Callback: void onDestroyActionMode(android.view.ActionMode)>:<public abstract>:<android.view.ActionMode.Callback>
<android.animation.LayoutTransition: void setStagger(int,long)>:<public>:<android.animation.LayoutTransition>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Paint: int getHinting()>:<public native>:<android.graphics.Paint>
<android.app.KeyguardManager: android.app.KeyguardManager.KeyguardLock newKeyguardLock(java.lang.String)>:<public>:<android.app.KeyguardManager>
<android.graphics.drawable.DrawableWrapper: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.BaseInputConnection: boolean clearMetaKeyStates(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.os.MessageQueue.OnFileDescriptorEventListener: int onFileDescriptorEvents(java.io.FileDescriptor,int)>:<public abstract>:<android.os.MessageQueue.OnFileDescriptorEventListener>
<android.widget.GridLayout: void setRowCount(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: int save(int)>:<public>:<android.graphics.Canvas>
<android.gesture.GestureOverlayView: void setFadeOffset(long)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.backup.RestoreObserver: void restoreStarting(int)>:<public>:<android.app.backup.RestoreObserver>
<android.util.EventLogTags: void <init>(java.io.BufferedReader)>:<public>:<android.util.EventLogTags>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>:<public final>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.view.View: boolean isInTouchMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>:<public static>:<android.text.format.DateFormat>
<android.widget.ScrollView: int computeVerticalScrollOffset()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setGender(java.lang.String)>:<public>:<android.text.style.TtsSpan.SemioticClassBuilder:android.text.style.TtsSpan.Builder>
<android.gesture.GestureOverlayView: void setGestureColor(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Path: boolean isConvex()>:<public>:<android.graphics.Path>
<android.net.rtp.RtpStream: boolean isBusy()>:<public>:<android.net.rtp.RtpStream>
<android.text.method.ScrollingMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.view.LayoutInflater: android.view.LayoutInflater.Filter getFilter()>:<public>:<android.view.LayoutInflater>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.util.regex.Pattern)>:<public static>:<android.text.TextUtils>
<android.view.inputmethod.CompletionInfo: int getPosition()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setNumerator(long)>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.location.LocationProvider: boolean hasMonetaryCost()>:<public>:<android.location.LocationProvider>
<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.Dialog: android.app.Activity getOwnerActivity()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins getMinMargins()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setIntegerPart(long)>:<public>:<android.text.style.TtsSpan.DecimalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.animation.Keyframe: void <init>()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.Window: void setLayout(int,int)>:<public>:<android.view.Window>
<android.bluetooth.le.AdvertiseSettings: java.lang.String toString()>:<public>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.media.SyncParams: float getTolerance()>:<public>:<android.media.SyncParams>
<android.provider.MediaStore.Audio.Albums: void <init>()>:<public>:<android.provider.MediaStore.Audio.Albums:android.provider.BaseColumns,android.provider.MediaStore.Audio.AlbumColumns>
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>:<public>:<android.widget.PopupWindow>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.app.Notification.Style: android.widget.RemoteViews getStandardView(int)>:<protected>:<android.app.Notification.Style>
<android.widget.GridLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.hardware.usb.UsbConfiguration: int getInterfaceCount()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>:<public>:<android.media.RingtoneManager>
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>:<public static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.widget.Gallery: int computeHorizontalScrollExtent()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.os.PatternMatcher: int getType()>:<public final>:<android.os.PatternMatcher:android.os.Parcelable>
<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)>:<public>:<android.animation.LayoutTransition>
<android.telephony.TelephonyManager: boolean isVoiceCapable()>:<public>:<android.telephony.TelephonyManager>
<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.graphics.Matrix: void setSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.security.keystore.KeyGenParameterSpec: javax.security.auth.x500.X500Principal getCertificateSubject()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.graphics.YuvImage: int getYuvFormat()>:<public>:<android.graphics.YuvImage>
<android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)>:<public static>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.graphics.pdf.PdfRenderer.Page: int getIndex()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.view.ViewParent: boolean isLayoutDirectionResolved()>:<public abstract>:<android.view.ViewParent>
<android.text.Layout: int getParagraphDirection(int)>:<public abstract>:<android.text.Layout>
<android.app.LocalActivityManager: java.lang.String getCurrentId()>:<public>:<android.app.LocalActivityManager>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.hardware.Camera.Parameters: int getMinExposureCompensation()>:<public>:<android.hardware.Camera.Parameters>
<android.telecom.Call.Details: boolean equals(java.lang.Object)>:<public>:<android.telecom.Call.Details>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setCoefficients(float[])>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.AsyncTaskLoader: boolean onCancelLoad()>:<protected>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.FlagToString[] flagMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.os.Parcel: void enforceInterface(java.lang.String)>:<public final>:<android.os.Parcel>
<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.os.Binder: int getCallingUid()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<org.xmlpull.v1.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.transition.TransitionInflater: android.transition.Transition inflateTransition(int)>:<public>:<android.transition.TransitionInflater>
<android.media.FaceDetector.Face: void getMidPoint(android.graphics.PointF)>:<public>:<android.media.FaceDetector.Face>
<android.printservice.PrinterDiscoverySession: void addPrinters(java.util.List)>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.widget.Toolbar.LayoutParams: void <init>(int,int,int)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.service.dreams.DreamService: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.content.pm.PackageInstaller.SessionCallback: void onFinished(int,boolean)>:<public abstract>:<android.content.pm.PackageInstaller.SessionCallback>
<android.os.MessageQueue: void finalize()>:<protected>:<android.os.MessageQueue>
<android.opengl.GLES31: int glGetProgramResourceIndex(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.sip.SipProfile: java.lang.String getPassword()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.webkit.WebBackForwardList: int getCurrentIndex()>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.app.VoiceInteractor.Prompt: void <init>(java.lang.CharSequence[],java.lang.CharSequence)>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.gesture.Gesture: void writeToParcel(android.os.Parcel,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>:<public>:<android.hardware.display.DisplayManager>
<android.widget.TextView: int getExtendedPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AutoCompleteTextView: boolean enoughToFilter()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.test.AndroidTestRunner: java.lang.Class loadSuiteClass(java.lang.String)>:<protected>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.os.StatFs: int getFreeBlocks()>:<public>:<android.os.StatFs>
<android.os.OperationCanceledException: void <init>(java.lang.String)>:<public>:<android.os.OperationCanceledException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.gesture.Gesture: void <clinit>()>:<static>:<android.gesture.Gesture:android.os.Parcelable>
<android.widget.SectionIndexer: int getSectionForPosition(int)>:<public abstract>:<android.widget.SectionIndexer>
<android.hardware.SensorManager: float getAltitude(float,float)>:<public static>:<android.hardware.SensorManager>
<android.app.assist.AssistStructure: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.assist.AssistStructure:android.os.Parcelable>
<android.app.PendingIntent: void <init>()>:<>:<android.app.PendingIntent:android.os.Parcelable>
<android.telecom.TelecomManager: void addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>:<public>:<android.telecom.TelecomManager>
<android.graphics.Bitmap: int getGenerationId()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.webkit.WebSyncManager: void startSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.net.sip.SipProfile: java.lang.String getSipDomain()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.text.format.Time: java.lang.String toString()>:<public>:<android.text.format.Time>
<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>:<public abstract>:<android.content.Context>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>:<public>:<android.view.animation.LayoutAnimationController>
<android.opengl.GLES30: void glUniformBlockBinding(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicBLAS: void ZTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintAttributes: int getColorMode()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.ViewGroup.MarginLayoutParams: void setLayoutDirection(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.webkit.WebSettings: void setOffscreenPreRaster(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaController.TransportControls: void skipToPrevious()>:<public>:<android.media.session.MediaController.TransportControls>
<android.net.sip.SipProfile: java.lang.String getProtocol()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setAddress(android.net.Uri)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.view.SurfaceView: void onMeasure(int,int)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.content.pm.LabeledIntent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.service.carrier.CarrierMessagingService.SendSmsResult: int getMessageRef()>:<public>:<android.service.carrier.CarrierMessagingService.SendSmsResult>
<android.print.PrintAttributes.Margins: int getLeftMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.media.session.MediaSession.Callback: void onSkipToQueueItem(long)>:<public>:<android.media.session.MediaSession.Callback>
<android.test.mock.MockContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.ApplicationErrorReport.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.os.WorkSource: void <clinit>()>:<static>:<android.os.WorkSource:android.os.Parcelable>
<android.telephony.SmsManager: void downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>:<public>:<android.telephony.SmsManager>
<android.location.Location: double convert(java.lang.String)>:<public static>:<android.location.Location:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.content.DialogInterface.OnMultiChoiceClickListener: void onClick(android.content.DialogInterface,int,boolean)>:<public abstract>:<android.content.DialogInterface.OnMultiChoiceClickListener>
<android.view.ViewStructure: int getTextSelectionEnd()>:<public abstract>:<android.view.ViewStructure>
<android.telecom.VideoProfile: int describeContents()>:<public>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.util.Rational: int intValue()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.media.tv.TvInputManager.TvInputCallback: void onInputRemoved(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.opengl.GLU: int gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.text.Layout: int getEllipsisCount(int)>:<public abstract>:<android.text.Layout>
<android.system.Os: long sysconf(int)>:<public static>:<android.system.Os>
<dalvik.system.BaseDexClassLoader: java.lang.Class findClass(java.lang.String)>:<protected>:<dalvik.system.BaseDexClassLoader:java.lang.ClassLoader>
<android.graphics.drawable.RippleDrawable: int getRadius()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.renderscript.Element: android.renderscript.Element TYPE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.webkit.WebView: void invokeZoomPicker()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaMetadata: void <clinit>()>:<static>:<android.media.MediaMetadata:android.os.Parcelable>
<android.webkit.HttpAuthHandler: void cancel()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>:<public abstract>:<org.apache.http.conn.scheme.SocketFactory>
<android.app.ActionBar: java.lang.CharSequence getSubtitle()>:<public abstract>:<android.app.ActionBar>
<android.util.Base64: byte[] encode(byte[],int)>:<public static>:<android.util.Base64>
<android.widget.ZoomControls: boolean hasFocus()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.telecom.InCallService: void <init>()>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.RotateDrawable: float getFromDegrees()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.widget.ZoomButtonsController: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>:<public abstract>:<android.content.SharedPreferences>
<android.hardware.usb.UsbAccessory: void <clinit>()>:<static>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceCreated(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.text.Layout: float getLineLeft(int)>:<public>:<android.text.Layout>
<android.widget.ToggleButton: void <init>(android.content.Context)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,java.lang.String)>:<public>:<android.print.PrintJobInfo.Builder>
<android.view.CollapsibleActionView: void onActionViewCollapsed()>:<public abstract>:<android.view.CollapsibleActionView>
<android.util.SparseBooleanArray: void clear()>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.os.StrictMode.ThreadPolicy: java.lang.String toString()>:<public>:<android.os.StrictMode.ThreadPolicy>
<android.media.browse.MediaBrowser: java.lang.String getRoot()>:<public>:<android.media.browse.MediaBrowser>
<android.R.dimen: void <init>()>:<public>:<android.R.dimen>
<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.PopupWindow: boolean isAboveAnchor()>:<public>:<android.widget.PopupWindow>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>:<public static final>:<android.text.util.Linkify>
<android.app.Notification.InboxStyle: void <init>()>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.graphics.drawable.DrawableContainer: void setAlpha(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.accessibility.AccessibilityNodeInfo: boolean isContentInvalid()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()>:<public static>:<android.provider.MediaStore>
<android.widget.CursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.Window: void takeSurface(android.view.SurfaceHolder.Callback2)>:<public abstract>:<android.view.Window>
<android.view.ViewStructure: void setDimens(int,int,int,int,int,int)>:<public abstract>:<android.view.ViewStructure>
<android.net.Uri: java.lang.String getPath()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.util.MutableShort: void <init>(short)>:<public>:<android.util.MutableShort>
<android.app.Fragment.SavedState: int describeContents()>:<public>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.util.ArraySet: boolean contains(java.lang.Object)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>:<protected>:<android.net.UrlQuerySanitizer>
<android.text.format.Time: boolean parse(java.lang.String)>:<public>:<android.text.format.Time>
<android.text.style.TtsSpan.DateBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.DateBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.content.pm.PathPermission: void <init>(android.os.Parcel)>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float,java.lang.Object)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.media.tv.TvInputService.Session: void <init>(android.content.Context)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.hardware.camera2.CameraDevice: android.hardware.camera2.CaptureRequest.Builder createReprocessCaptureRequest(android.hardware.camera2.TotalCaptureResult)>:<public abstract>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.media.MediaRouter.SimpleCallback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>:<public>:<android.app.KeyguardManager.KeyguardLock>
<android.mtp.MtpDevice: void close()>:<public>:<android.mtp.MtpDevice>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.printservice.PrintJob: android.printservice.PrintDocument getDocument()>:<public>:<android.printservice.PrintJob>
<android.app.Activity: java.lang.CharSequence getTitle()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.EventLog.Event: void <init>()>:<>:<android.util.EventLog.Event>
<android.renderscript.ScriptIntrinsicBLAS: void DTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ImageView: int getImageAlpha()>:<public>:<android.widget.ImageView:android.view.View>
<android.webkit.WebViewDatabase: void <init>()>:<public>:<android.webkit.WebViewDatabase>
<android.widget.DatePicker: int getDayOfMonth()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.test.mock.MockPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.AbsListView: void handleDataChanged()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.PackageStats: java.lang.String toString()>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Paint: void setDither(boolean)>:<public native>:<android.graphics.Paint>
<android.content.IntentFilter: void <init>(java.lang.String,java.lang.String)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView.OnItemLongClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.print.PrintDocumentInfo: int describeContents()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long2)>:<public>:<android.renderscript.FieldPacker>
<android.util.Size: int getHeight()>:<public>:<android.util.Size>
<android.view.View: boolean callOnClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CursorTreeAdapter: java.lang.String convertToString(android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.media.midi.MidiOutputPort: int getPortNumber()>:<public final>:<android.media.midi.MidiOutputPort:android.media.midi.MidiSender,java.io.Closeable>
<android.opengl.GLES10: void glMaterialx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.telecom.Conference: int getState()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.graphics.Paint.Style: android.graphics.Paint.Style[] values()>:<public static>:<android.graphics.Paint.Style:java.lang.Enum>
<android.preference.DialogPreference: void setPositiveButtonText(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.AutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewGroup: void dispatchSetPressed(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewParent: boolean canResolveTextDirection()>:<public abstract>:<android.view.ViewParent>
<android.util.Rational: double doubleValue()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>:<public static>:<android.view.ViewConfiguration>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollX(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.animation.Animator: java.util.ArrayList getListeners()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.webkit.WebView: boolean showFindDialog(java.lang.String,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowFamily(int)>:<public>:<android.net.VpnService.Builder>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.test.mock.MockPackageManager: java.lang.String[] getPackagesForUid(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.app.FragmentHostCallback: java.lang.Object onGetHost()>:<public abstract>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.IntentFilter: int describeContents()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.media.MediaPlayer: void selectTrack(int)>:<public>:<android.media.MediaPlayer>
<android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.BaseBundle: void clear()>:<public>:<android.os.BaseBundle>
<android.webkit.WebView: boolean canZoomOut()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.RingtoneManager: boolean getIncludeDrm()>:<public>:<android.media.RingtoneManager>
<android.animation.ArgbEvaluator: void <init>()>:<public>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.HorizontalScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.RenderScript: void setErrorHandler(android.renderscript.RenderScript.RSErrorHandler)>:<public>:<android.renderscript.RenderScript>
<android.widget.NumberPicker: void setEnabled(boolean)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.UiAutomation: boolean performGlobalAction(int)>:<public final>:<android.app.UiAutomation>
<android.system.Os: void tcdrain(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.os.Message: int describeContents()>:<public>:<android.os.Message:android.os.Parcelable>
<android.text.method.PasswordTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.app.ActionBar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.provider.Settings.SettingNotFoundException: void <init>(java.lang.String)>:<public>:<android.provider.Settings.SettingNotFoundException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.service.notification.NotificationListenerService: int getCurrentInterruptionFilter()>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.util.ArrayMap: java.lang.Object removeAt(int)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.widget.TextView: void setEditableFactory(android.text.Editable.Factory)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.MessageClass getMessageClass()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionClick(int)>:<public abstract>:<android.widget.SearchView.OnSuggestionListener>
<android.text.style.ForegroundColorSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.app.ListFragment: void <init>()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.widget.ProgressBar: void setIndeterminateTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(int)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.view.Window: android.content.res.TypedArray getWindowStyle()>:<public final>:<android.view.Window>
<android.telecom.Call.Details: int getCallerDisplayNamePresentation()>:<public>:<android.telecom.Call.Details>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>:<public>:<android.graphics.Canvas>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.transition.Slide: void <init>(int)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.view.View: float getZ()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.LauncherApps.Callback: void <init>()>:<public>:<android.content.pm.LauncherApps.Callback>
<android.webkit.PermissionRequest: java.lang.String[] getResources()>:<public abstract>:<android.webkit.PermissionRequest>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.transition.Transition: void captureStartValues(android.transition.TransitionValues)>:<public abstract>:<android.transition.Transition:java.lang.Cloneable>
<android.os.BaseBundle: long getLong(java.lang.String,long)>:<public>:<android.os.BaseBundle>
<android.test.mock.MockCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.bluetooth.le.ScanSettings: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>:<public final>:<android.os.Handler>
<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int hashCode()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.widget.SearchView: void setOnCloseListener(android.widget.SearchView.OnCloseListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.String,java.lang.Throwable)>:<public>:<android.hardware.camera2.CameraAccessException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.Notification.Style: void internalSetBigContentTitle(java.lang.CharSequence)>:<protected>:<android.app.Notification.Style>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.app.Activity)>:<public>:<android.app.TaskStackBuilder>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.animation.Animator.AnimatorListener: void onAnimationStart(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.os.Debug.MemoryInfo: int getTotalPrivateClean()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>:<protected static>:<android.text.method.MetaKeyKeyListener>
<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public>:<android.content.ContentProviderClient>
<android.os.Parcel: void readByteArray(byte[])>:<public final>:<android.os.Parcel>
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.TextView: int[] onCreateDrawableState(int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo getInfo()>:<public>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.EditTextPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.notification.NotificationListenerService.RankingMap: java.lang.String[] getOrderedKeys()>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Chronometer: void stop()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>:<public>:<android.app.WallpaperManager>
<android.app.Activity: boolean isFinishing()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.service.media.MediaBrowserService.BrowserRoot: java.lang.String getRootId()>:<public>:<android.service.media.MediaBrowserService.BrowserRoot>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.Int4: void <init>(int,int,int,int)>:<public>:<android.renderscript.Int4>
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>:<public static>:<android.text.format.DateFormat>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.Uri: java.lang.String getLastPathSegment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.UserManager: android.os.Bundle getUserRestrictions()>:<public>:<android.os.UserManager>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateSubject(javax.security.auth.x500.X500Principal)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.text.BidiFormatter.Builder: void <init>(boolean)>:<public>:<android.text.BidiFormatter.Builder>
<android.app.Notification.Builder: android.app.Notification.Builder setFullScreenIntent(android.app.PendingIntent,boolean)>:<public>:<android.app.Notification.Builder>
<android.view.accessibility.AccessibilityRecord: boolean isFullScreen()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.session.MediaSession: void setFlags(int)>:<public>:<android.media.session.MediaSession>
<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.util.SparseLongArray: void <init>()>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.view.ViewConfiguration: int getWindowTouchSlop()>:<public static>:<android.view.ViewConfiguration>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.Gallery: int getChildDrawingOrder(int,int)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.Interpolator: void reset(int)>:<public>:<android.graphics.Interpolator>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: java.lang.CharSequence getMessage()>:<public>:<android.service.voice.VoiceInteractionSession.AbortVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.view.Menu: boolean isShortcutKey(int,android.view.KeyEvent)>:<public abstract>:<android.view.Menu>
<android.net.rtp.AudioGroup: int getMode()>:<public>:<android.net.rtp.AudioGroup>
<android.net.VpnService: boolean protect(java.net.Socket)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)>:<public>:<android.view.TextureView:android.view.View>
<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFormats()>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.GLES31: void glProgramUniform4f(int,int,float,float,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.View.MeasureSpec: void <init>()>:<public>:<android.view.View.MeasureSpec>
<android.opengl.GLES10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.net.sip.SipManager: boolean isOpened(java.lang.String)>:<public>:<android.net.sip.SipManager>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.text.style.EasyEditSpan: int getSpanTypeId()>:<public>:<android.text.style.EasyEditSpan:android.text.ParcelableSpan>
<android.telecom.Call: void conference(android.telecom.Call)>:<public>:<android.telecom.Call>
<android.content.ClipData.Item: void <init>(android.net.Uri)>:<public>:<android.content.ClipData.Item>
<android.database.MatrixCursor: void addRow(java.lang.Object[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getIdType()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: float getTranslationX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.nfc.tech.MifareClassic: int blockToSector(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.media.audiofx.BassBoost.Settings: void <init>()>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setTitle(java.lang.CharSequence)>:<public>:<android.media.MediaDescription.Builder>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.OrientationListener: void onAccuracyChanged(int,int)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState[] values()>:<public static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewStructure: void setText(java.lang.CharSequence,int,int)>:<public abstract>:<android.view.ViewStructure>
<android.provider.SyncStateContract.Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.telecom.Connection: android.net.Uri getAddress()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.bluetooth.BluetoothHealthCallback: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>:<public>:<android.bluetooth.BluetoothHealthCallback>
<android.util.Base64InputStream: void mark(int)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.test.AndroidTestRunner: junit.framework.TestResult getTestResult()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.app.Activity: void onStart()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.RectF: void set(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.content.pm.PackageStats: void <init>(android.os.Parcel)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.view.InputDevice: boolean hasMicrophone()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.RatingBar: void setNumStars(int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.inputmethod.InputBinding: int getUid()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.View: void setScaleX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RadioGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: int getNextFocusLeftId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.AlarmManager.AlarmClockInfo: void <clinit>()>:<static>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.gesture.GestureLibrary: void setOrientationStyle(int)>:<public>:<android.gesture.GestureLibrary>
<android.content.Loader: void commitContentChanged()>:<public>:<android.content.Loader>
<android.net.wifi.p2p.WifiP2pInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.widget.AbsListView: void setTextFilterEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.HorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<junit.runner.Version: java.lang.String id()>:<public static>:<junit.runner.Version>
<android.telecom.ConnectionRequest: int describeContents()>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>:<public>:<android.webkit.WebViewClient>
<android.media.midi.MidiManager.DeviceCallback: void <init>()>:<public>:<android.media.midi.MidiManager.DeviceCallback>
<android.media.MediaRouter.UserRouteInfo: void requestSetVolume(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.widget.TextView: int getMinLines()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Display: void getMetrics(android.util.DisplayMetrics)>:<public>:<android.view.Display>
<android.text.SpannableStringBuilder: android.text.Editable insert(int,java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.renderscript.RenderScript.RSMessageHandler: void run()>:<public>:<android.renderscript.RenderScript.RSMessageHandler:java.lang.Runnable>
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.opengl.EGLExt: void <init>()>:<public>:<android.opengl.EGLExt>
<android.view.View.OnContextClickListener: boolean onContextClick(android.view.View)>:<public abstract>:<android.view.View.OnContextClickListener>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setLineSpacing(float,float)>:<public>:<android.text.StaticLayout.Builder>
<android.bluetooth.BluetoothHealthAppConfiguration: int describeContents()>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.ToneGenerator: void stopTone()>:<public native>:<android.media.ToneGenerator>
<android.widget.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListPopupWindow>
<android.service.carrier.CarrierMessagingService: void onSendDataSms(byte[],int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.RestrictionEntry: int getIntValue()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.telecom.ConnectionService: void addExistingConnection(android.telecom.PhoneAccountHandle,android.telecom.Connection)>:<public final>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.inputmethodservice.InputMethodService: void onDestroy()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,android.renderscript.Allocation,int,int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.WebStorage: void deleteOrigin(java.lang.String)>:<public>:<android.webkit.WebStorage>
<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.text.Layout: int getLineDescent(int)>:<public abstract>:<android.text.Layout>
<android.hardware.usb.UsbConfiguration: boolean isSelfPowered()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.provider.Telephony.Carriers: void <init>()>:<>:<android.provider.Telephony.Carriers:android.provider.BaseColumns>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int)>:<public static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.widget.ArrayAdapter: void add(java.lang.Object)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.printservice.PrintJob: boolean hasAdvancedOption(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.text.format.DateUtils: void <clinit>()>:<static>:<android.text.format.DateUtils>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.TextView: void setHint(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.style.LocaleSpan: int getSpanTypeId()>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void setFillBefore(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.graphics.Path: void close()>:<public>:<android.graphics.Path>
<android.app.Activity: boolean navigateUpTo(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.ViewStub: void setVisibility(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.FragmentTransaction: void <init>()>:<public>:<android.app.FragmentTransaction>
<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection.Callback)>:<public>:<android.telecom.RemoteConnection>
<android.opengl.GLES10: void glClear(int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Matrix2f: void set(int,int,float)>:<public>:<android.renderscript.Matrix2f>
<android.view.Window: android.os.Bundle saveHierarchyState()>:<public abstract>:<android.view.Window>
<android.view.View: boolean isSaveFromParentEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>(boolean)>:<public>:<android.text.LoginFilter.UsernameFilterGeneric:android.text.LoginFilter>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>:<public static>:<android.provider.ContactsContract.QuickContact>
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)>:<public>:<android.media.MediaPlayer>
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.animation.AnimationSet: boolean willChangeBounds()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.app.Instrumentation: void startAllocCounting()>:<public>:<android.app.Instrumentation>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.accessibilityservice.AccessibilityService: java.util.List getWindows()>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.telephony.ServiceState: void setIsManualSelection(boolean)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.text.SpannableStringBuilder: android.text.Editable append(java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.telecom.PhoneAccount.Builder: void <init>(android.telecom.PhoneAccount)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.widget.NumberPicker.OnScrollListener: void onScrollStateChange(android.widget.NumberPicker,int)>:<public abstract>:<android.widget.NumberPicker.OnScrollListener>
<android.telecom.ConnectionService: android.telecom.Connection onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>:<public>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.audiofx.Visualizer: int getWaveForm(byte[])>:<public>:<android.media.audiofx.Visualizer>
<android.widget.ListPopupWindow: void setWindowLayoutType(int)>:<public>:<android.widget.ListPopupWindow>
<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.view.animation.AccelerateInterpolator: void <init>(float)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.BaseInterpolator>
<android.speech.tts.TextToSpeech.Engine: void <init>(android.speech.tts.TextToSpeech)>:<public>:<android.speech.tts.TextToSpeech.Engine>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.transition.ChangeImageTransform: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.content.Context: boolean deleteDatabase(java.lang.String)>:<public abstract>:<android.content.Context>
<android.app.SearchableInfo: int describeContents()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.renderscript.Type: android.renderscript.Element getElement()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>:<public abstract>:<android.webkit.WebSettings>
<org.json.JSONTokener: java.lang.String toString()>:<public>:<org.json.JSONTokener>
<android.hardware.Camera.Parameters: void setPreviewFormat(int)>:<public>:<android.hardware.Camera.Parameters>
<android.app.FragmentController: void attachHost(android.app.Fragment)>:<public>:<android.app.FragmentController>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: boolean onInterceptHoverEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.MenuItem: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>:<public abstract>:<android.view.MenuItem>
<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.media.MediaDrm.OnExpirationUpdateListener: void onExpirationUpdate(android.media.MediaDrm,byte[],long)>:<public abstract>:<android.media.MediaDrm.OnExpirationUpdateListener>
<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.drm.ProcessedData: java.lang.String getAccountId()>:<public>:<android.drm.ProcessedData>
<android.os.Parcel: android.util.Size readSize()>:<public final>:<android.os.Parcel>
<android.location.Address: java.lang.String toString()>:<public>:<android.location.Address:android.os.Parcelable>
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>:<public>:<android.graphics.Paint>
<android.view.View: java.util.ArrayList getFocusables(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.midi.MidiDeviceStatus: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.AdapterView: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.widget.ImageView.ScaleType: void <clinit>()>:<static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.speech.tts.SynthesisRequest: android.os.Bundle getParams()>:<public>:<android.speech.tts.SynthesisRequest>
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.SurfaceView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createEnrollIntent()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.widget.PopupWindow: boolean isAttachedInDecor()>:<public>:<android.widget.PopupWindow>
<android.widget.PopupWindow: void setHeight(int)>:<public>:<android.widget.PopupWindow>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes build()>:<public>:<android.print.PrintAttributes.Builder>
<android.util.JsonReader: void nextNull()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.util.JsonToken: void <clinit>()>:<static>:<android.util.JsonToken:java.lang.Enum>
<android.media.ToneGenerator: void finalize()>:<protected>:<android.media.ToneGenerator>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.telephony.SignalStrength: boolean isGsm()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10Ext>
<android.app.admin.DevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority[] values()>:<public static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.media.tv.TvInputService.Session: android.view.View onCreateOverlayView()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.content.pm.ServiceInfo: int describeContents()>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getRouteAt(int)>:<public>:<android.media.MediaRouter>
<android.content.SyncInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncInfo:android.os.Parcelable>
<android.telephony.SignalStrength: boolean equals(java.lang.Object)>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.textservice.SpellCheckerSession: void close()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.media.tv.TvInputInfo: int hashCode()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.preference.PreferenceActivity: boolean isValidFragment(java.lang.String)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.opengl.GLES30: void glGetQueryiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)>:<public static>:<android.view.animation.AnimationUtils>
<android.media.tv.TvInputInfo: java.lang.String getId()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setAutoRegistration(boolean)>:<public>:<android.net.sip.SipProfile.Builder>
<android.test.mock.MockPackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.MediaMuxer: void <init>(java.lang.String,int)>:<public>:<android.media.MediaMuxer>
<android.widget.DialerFilter: void append(java.lang.String)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.ActionMode: android.view.View getCustomView()>:<public abstract>:<android.view.ActionMode>
<android.app.Application: void unregisterOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.preference.PreferenceActivity.Header: int describeContents()>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>:<public static>:<android.util.Xml>
<android.media.AudioRecord.Builder: android.media.AudioRecord.Builder setBufferSizeInBytes(int)>:<public>:<android.media.AudioRecord.Builder>
<android.test.mock.MockPackageManager: android.content.pm.PackageInstaller getPackageInstaller()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.preference.PreferenceActivity: void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.IntentFilter: java.util.Iterator categoriesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.Cursor: int getColumnIndex(java.lang.String)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.content.Intent: int fillIn(android.content.Intent,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.JetPlayer: java.lang.Object clone()>:<public>:<android.media.JetPlayer>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaSyncEvent: int getAudioSessionId()>:<public>:<android.media.MediaSyncEvent>
<android.os.Parcel: void writeMap(java.util.Map)>:<public final>:<android.os.Parcel>
<android.net.wifi.WpsInfo: int describeContents()>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.provider.MediaStore.Audio.Artists: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Artists:android.provider.BaseColumns,android.provider.MediaStore.Audio.ArtistColumns>
<android.telephony.gsm.SmsMessage: int getStatusOnSim()>:<public>:<android.telephony.gsm.SmsMessage>
<android.preference.Preference: android.os.Bundle getExtras()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.telecom.VideoProfile.CameraCapabilities: void <init>(int,int)>:<public>:<android.telecom.VideoProfile.CameraCapabilities:android.os.Parcelable>
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.view.View: boolean isInEditMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.IntentService: void onStart(android.content.Intent,int)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.telephony.IccOpenLogicalChannelResponse: void <clinit>()>:<static>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>:<public>:<android.appwidget.AppWidgetManager>
<android.R.style: void <init>()>:<public>:<android.R.style>
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>:<public static>:<android.text.method.Touch>
<android.service.notification.StatusBarNotification: java.lang.String getKey()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>:<public>:<android.media.AudioManager>
<android.view.WindowManager.LayoutParams: void <init>(android.os.Parcel)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putObject(int,java.lang.Object)>:<public synchronized>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.net.ConnectivityManager: void addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>:<public>:<android.net.ConnectivityManager>
<android.telephony.SmsMessage: void <init>()>:<>:<android.telephony.SmsMessage>
<android.inputmethodservice.Keyboard.Key: void onPressed()>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.speech.tts.TextToSpeech: int setVoice(android.speech.tts.Voice)>:<public>:<android.speech.tts.TextToSpeech>
<android.text.style.SubscriptSpan: void <init>()>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.nfc.tech.MifareClassic: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.widget.QuickContactBadge: void setExcludeMimes(java.lang.String[])>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.content.pm.LauncherApps.Callback: void onPackageChanged(java.lang.String,android.os.UserHandle)>:<public abstract>:<android.content.pm.LauncherApps.Callback>
<android.content.CursorLoader: void onStopLoading()>:<protected>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.security.keystore.KeyInfo: java.lang.String[] getBlockModes()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.text.SpannableStringBuilder: android.text.Editable delete(int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.os.Parcel: void writePersistableBundle(android.os.PersistableBundle)>:<public final>:<android.os.Parcel>
<android.view.textservice.SpellCheckerInfo: int describeContents()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.app.Fragment: void onCreate(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.media.PlaybackParams: android.media.PlaybackParams setSpeed(float)>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.text.style.TtsSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.TtsSpan:android.text.ParcelableSpan>
<android.hardware.Sensor: float getPower()>:<public>:<android.hardware.Sensor>
<android.provider.Contacts.ContactMethods: void <init>()>:<>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.view.Window: void setDimAmount(float)>:<public>:<android.view.Window>
<android.graphics.drawable.VectorDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.view.MotionEvent: int getEdgeFlags()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String,android.webkit.ValueCallback)>:<public abstract>:<android.webkit.CookieManager>
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>:<public>:<android.telephony.SmsManager>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>:<public>:<android.graphics.Paint>
<android.animation.BidirectionalTypeConverter: java.lang.Object convertBack(java.lang.Object)>:<public abstract>:<android.animation.BidirectionalTypeConverter:android.animation.TypeConverter>
<android.util.SparseBooleanArray: void <init>()>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.view.animation.AnimationSet: void setStartTime(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.content.res.Configuration: int describeContents()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.os.Process: void setThreadPriority(int,int)>:<public static final native>:<android.os.Process>
<android.media.audiofx.Equalizer.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.renderscript.ScriptIntrinsicColorMatrix: void setRGBtoYUV()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.telecom.RemoteConnection: void playDtmfTone(char)>:<public>:<android.telecom.RemoteConnection>
<android.widget.Toast: void setText(int)>:<public>:<android.widget.Toast>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>:<public>:<android.graphics.Paint>
<android.util.StateSet: boolean stateSetMatches(int[],int)>:<public static>:<android.util.StateSet>
<junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>:<public static>:<junit.framework.Assert>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.graphics.Paint: void setFlags(int)>:<public native>:<android.graphics.Paint>
<android.app.admin.DevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.KeyCharacterMap: boolean deviceHasKey(int)>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.VoiceInteractor.Prompt: void <clinit>()>:<static>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.graphics.drawable.Drawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.Drawable>
<android.app.UiModeManager: void enableCarMode(int)>:<public>:<android.app.UiModeManager>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>:<public>:<android.accounts.AccountManager>
<android.os.Binder: boolean pingBinder()>:<public>:<android.os.Binder:android.os.IBinder>
<android.database.sqlite.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.content.Intent: android.content.Intent getSelector()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue.IdleHandler)>:<public>:<android.os.MessageQueue>
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte3)>:<public>:<android.renderscript.FieldPacker>
<android.widget.TabHost: android.widget.TabHost.TabSpec newTabSpec(java.lang.String)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: boolean isDirty()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.Bundle: short[] getShortArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setSummaryText(java.lang.CharSequence)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.database.AbstractCursor: boolean requery()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.style.AlignmentSpan: android.text.Layout.Alignment getAlignment()>:<public abstract>:<android.text.style.AlignmentSpan:android.text.style.ParagraphStyle>
<android.text.SpannedString: void <init>(java.lang.CharSequence)>:<public>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.transition.TransitionSet: android.transition.Transition addListener(android.transition.Transition.TransitionListener)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.inputmethodservice.InputMethodService: void hideStatusIcon()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.Notification.Builder: android.app.Notification.Builder setAutoCancel(boolean)>:<public>:<android.app.Notification.Builder>
<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.os.Debug.MemoryInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.view.ViewGroup: void clearFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onMarkerReached(android.media.AudioTrack)>:<public abstract>:<android.media.AudioTrack.OnPlaybackPositionUpdateListener>
<android.widget.NumberPicker: void onMeasure(int,int)>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>:<public>:<android.speech.SpeechRecognizer>
<android.widget.EdgeEffect: int getColor()>:<public>:<android.widget.EdgeEffect>
<android.media.FaceDetector: void <init>(int,int,int)>:<public>:<android.media.FaceDetector>
<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.SectionIndexer: java.lang.Object[] getSections()>:<public abstract>:<android.widget.SectionIndexer>
<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>:<public>:<org.apache.http.conn.ConnectTimeoutException:java.io.InterruptedIOException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.view.ViewGroup: void dispatchSystemUiVisibilityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)>:<public>:<android.webkit.WebViewClient>
<android.media.session.MediaSession.QueueItem: long getQueueId()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.nfc.tech.NfcB: byte[] getProtocolInfo()>:<public>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.renderscript.ScriptIntrinsicBLAS: void STRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.DatePicker: void setSpinnersShown(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.MoreAsserts: void assertEquals(byte[],byte[])>:<public static>:<android.test.MoreAsserts>
<android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.provider.ContactsContract.Settings: void <clinit>()>:<static>:<android.provider.ContactsContract.Settings:android.provider.ContactsContract.SettingsColumns>
<android.provider.Telephony.MmsSms: void <clinit>()>:<static>:<android.provider.Telephony.MmsSms:android.provider.BaseColumns>
<android.graphics.drawable.LayerDrawable: int getLayerGravity(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.ShapeDrawable: void <init>()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable.Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.renderscript.Script: void setVar(int,int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.util.ArrayMap: java.util.Set keySet()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.service.carrier.CarrierIdentifier: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.view.animation.LayoutAnimationController: void start()>:<public>:<android.view.animation.LayoutAnimationController>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>:<public>:<org.json.JSONObject>
<android.test.mock.MockContext: int checkSelfPermission(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.Bitmap: void setDensity(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.Network: void bindSocket(java.io.FileDescriptor)>:<public>:<android.net.Network:android.os.Parcelable>
<android.net.NetworkCapabilities: java.lang.String toString()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.widget.AdapterViewFlipper: boolean isFlipping()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.params.HttpConnectionParams: void <init>()>:<>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.nfc.tech.BasicTagTechnology: boolean isConnected()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.app.Notification: int describeContents()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.hardware.usb.UsbDeviceConnection: boolean setInterface(android.hardware.usb.UsbInterface)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.telephony.TelephonyManager: int getDataState()>:<public>:<android.telephony.TelephonyManager>
<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>:<public final native>:<android.hardware.Camera>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.PorterDuffXfermode:android.graphics.Xfermode>
<android.animation.AnimatorSet: void setupStartValues()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.provider.Settings.System: boolean canWrite(android.content.Context)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>:<public>:<android.content.ContentResolver>
<android.test.mock.MockCursor: boolean getWantsAllOnMoveCalls()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.opengl.GLES31Ext: void glDebugMessageInsertKHR(int,int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.AbstractWindowedCursor: short getShort(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.WindowInsets: boolean hasSystemWindowInsets()>:<public>:<android.view.WindowInsets>
<android.renderscript.FieldPacker: void <init>(byte[])>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.shapes.Shape: boolean hasAlpha()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.test.MoreAsserts: void assertNotContainsRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.test.MoreAsserts: void assertNotEmpty(java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.graphics.Region: boolean isComplex()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.media.effect.EffectContext: void release()>:<public>:<android.media.effect.EffectContext>
<android.text.style.LocaleSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.util.Size: void <init>(int,int)>:<public>:<android.util.Size>
<android.widget.ActionMenuView: boolean isOverflowMenuShowing()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.ActionMode.Callback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public abstract>:<android.view.ActionMode.Callback>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)>:<public>:<android.content.ClipData.Item>
<android.app.backup.FileBackupHelperBase: void <init>()>:<>:<android.app.backup.FileBackupHelperBase>
<android.media.tv.TvTrackInfo: float getVideoPixelAspectRatio()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.view.View: int[] mergeDrawableStates(int[],int[])>:<protected static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Criteria: int getSpeedAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.telecom.Connection: void setDialing()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int4)>:<public>:<android.renderscript.FieldPacker>
<android.widget.Gallery: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.view.ViewPropertyAnimator>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.os.Handler.Callback: boolean handleMessage(android.os.Message)>:<public abstract>:<android.os.Handler.Callback>
<android.hardware.SensorManager: boolean remapCoordinateSystem(float[],int,int,float[])>:<public static>:<android.hardware.SensorManager>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.content.SyncRequest: void <init>()>:<>:<android.content.SyncRequest:android.os.Parcelable>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long2)>:<public>:<android.renderscript.FieldPacker>
<android.print.PrintDocumentInfo: java.lang.String getName()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.View: void invalidateOutline()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.camera2.params.TonemapCurve: void <init>(float[],float[],float[])>:<public>:<android.hardware.camera2.params.TonemapCurve>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener,android.os.Handler)>:<public>:<android.media.JetPlayer>
<android.location.Criteria: void setVerticalAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.HeterogeneousExpandableList: int getChildTypeCount()>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.widget.TextView: int getCompoundDrawablePadding()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TableLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.Spinner: int getDropDownVerticalOffset()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.AbsListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.NumberPicker: void setMaxValue(int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.Toolbar: void setNavigationContentDescription(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings.TextSize)>:<public synchronized>:<android.webkit.WebSettings>
<android.net.LinkProperties: java.util.List getLinkAddresses()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.text.Spanned: int getSpanStart(java.lang.Object)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>:<public>:<android.app.Instrumentation>
<android.nfc.tech.IsoDep: int getTimeout()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.widget.FrameLayout: void onMeasure(int,int)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: boolean onIsMultiPane()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.database.CursorWrapper: boolean moveToPosition(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.Dialog: void openOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.text.GetChars: void getChars(int,int,char[],int)>:<public abstract>:<android.text.GetChars:java.lang.CharSequence>
<android.telephony.CellSignalStrengthCdma: int getLevel()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.media.session.PlaybackState: long getPosition()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.widget.Spinner: void setDropDownHorizontalOffset(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.test.mock.MockPackageManager: java.util.List queryIntentServices(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.provider.Settings.Global: android.net.Uri getUriFor(java.lang.String)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.widget.HorizontalScrollView: void measureChild(android.view.View,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Display.Mode: int hashCode()>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.app.Application: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.text.Editable.Factory: android.text.Editable newEditable(java.lang.CharSequence)>:<public>:<android.text.Editable.Factory>
<android.view.FrameStats: int getFrameCount()>:<public final>:<android.view.FrameStats>
<android.accessibilityservice.AccessibilityServiceInfo: void <clinit>()>:<static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<junit.runner.BaseTestRunner: void addError(junit.framework.Test,java.lang.Throwable)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.database.DatabaseUtils.InsertHelper: void bind(int,int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.os.ConditionVariable: void block()>:<public>:<android.os.ConditionVariable>
<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.animation.ValueAnimator: void end()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void viewClicked(boolean)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>:<public static>:<android.os.Messenger:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: int getColorModes()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.Activity: void onCreate(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.Loader.ForceLoadContentObserver: void <init>(android.content.Loader)>:<public>:<android.content.Loader.ForceLoadContentObserver:android.database.ContentObserver>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.opengl.GLES30: void glGetInteger64v(int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.renderscript.ScriptIntrinsicBLAS: void CHER2(int,android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>()>:<public>:<android.graphics.SurfaceTexture.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.preference.PreferenceGroup: void dispatchRestoreInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.provider.Settings.System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.util.ArraySet: int size()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.view.WindowInsets: int getSystemWindowInsetLeft()>:<public>:<android.view.WindowInsets>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.media.browse.MediaBrowser.MediaItem: boolean isBrowsable()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCancelable(boolean)>:<public>:<android.app.AlertDialog.Builder>
<android.telecom.Connection: void setCallerDisplayName(java.lang.String,int)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.hardware.camera2.DngCreator: void finalize()>:<protected>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.text.DynamicLayout: android.text.Layout.Directions getLineDirections(int)>:<public final>:<android.text.DynamicLayout:android.text.Layout>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>:<public>:<org.json.JSONObject>
<android.webkit.WebResourceError: java.lang.CharSequence getDescription()>:<public abstract>:<android.webkit.WebResourceError>
<android.text.style.BulletSpan: void <init>(int,int)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void <init>()>:<public>:<android.hardware.camera2.CameraCaptureSession.StateCallback>
<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForService(android.content.ComponentName,java.lang.String)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.hardware.usb.UsbConfiguration: int getId()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.Outline: void setAlpha(float)>:<public>:<android.graphics.Outline>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.webkit.WebView: void requestImageRef(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.String)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.test.ActivityUnitTestCase: int getRequestedOrientation()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.graphics.Camera: float getLocationX()>:<public native>:<android.graphics.Camera>
<android.view.Window.Callback: boolean onSearchRequested()>:<public abstract>:<android.view.Window.Callback>
<android.graphics.ColorMatrix: float[] getArray()>:<public final>:<android.graphics.ColorMatrix>
<android.graphics.YuvImage: void <init>(byte[],int,int,int,int[])>:<public>:<android.graphics.YuvImage>
<android.widget.FrameLayout: void setMeasureAllChildren(boolean)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.view.View: void onProvideStructure(android.view.ViewStructure)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.transition.Transition: java.util.List getTargetTypes()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.view.View.BaseSavedState: void <clinit>()>:<static>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.net.wifi.p2p.WifiP2pConfig: void <init>(android.net.wifi.p2p.WifiP2pConfig)>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.view.OrientationListener: void <init>(android.content.Context)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.opengl.GLES30: void glEndTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.FragmentTransaction: boolean isAddToBackStackAllowed()>:<public abstract>:<android.app.FragmentTransaction>
<android.R.color: void <init>()>:<public>:<android.R.color>
<android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.animation.AlphaAnimation: boolean willChangeBounds()>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.text.BoringLayout: int getLineTop(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.telephony.SubscriptionInfo: java.lang.String toString()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.content.Intent: void setSourceBounds(android.graphics.Rect)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.animation.AlphaAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.provider.Settings: boolean canDrawOverlays(android.content.Context)>:<public static>:<android.provider.Settings>
<android.view.View: boolean hasOverlappingRendering()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ViewSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.ProviderTestCase2: void tearDown()>:<protected>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.MotionEvent: int getActionMasked()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.provider.CallLog: void <init>()>:<public>:<android.provider.CallLog>
<android.view.InputDevice.MotionRange: int getAxis()>:<public>:<android.view.InputDevice.MotionRange>
<android.content.Intent: java.lang.String getAction()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.animation.Keyframe: void setValue(java.lang.Object)>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.speech.SpeechRecognizer: boolean isRecognitionAvailable(android.content.Context)>:<public static>:<android.speech.SpeechRecognizer>
<android.text.style.TabStopSpan: int getTabStop()>:<public abstract>:<android.text.style.TabStopSpan:android.text.style.ParagraphStyle>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.Drawable>
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onSuccess()>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ActionListener>
<android.graphics.RegionIterator: boolean next(android.graphics.Rect)>:<public final>:<android.graphics.RegionIterator>
<android.media.audiofx.AudioEffect: int getId()>:<public>:<android.media.audiofx.AudioEffect>
<android.speech.tts.TextToSpeechService: java.util.List onGetVoices()>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<junit.framework.Assert: void assertEquals(java.lang.String,long,long)>:<public static>:<junit.framework.Assert>
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.service.dreams.DreamService: android.view.Window getWindow()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService.RankingMap getCurrentRanking()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setCancelLabel(java.lang.CharSequence)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler getContentHandler()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.PopupWindow: void setWidth(int)>:<public>:<android.widget.PopupWindow>
<android.net.NetworkInfo: boolean isConnected()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.view.View.OnGenericMotionListener: boolean onGenericMotion(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnGenericMotionListener>
<android.provider.ContactsContract.CommonDataKinds.Im: int getProtocolLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>:<public final>:<android.os.Handler>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.widget.SimpleCursorTreeAdapter: void setViewBinder(android.widget.SimpleCursorTreeAdapter.ViewBinder)>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>:<public>:<android.nfc.NfcAdapter>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.Window: void setFeatureDrawableAlpha(int,int)>:<public abstract>:<android.view.Window>
<android.graphics.drawable.ShapeDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.media.AudioAttributes: int getFlags()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.database.AbstractWindowedCursor: float getFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.text.SpannableStringBuilder: void <init>()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.renderscript.FieldPacker: android.renderscript.Long4 subLong4()>:<public>:<android.renderscript.FieldPacker>
<android.os.Parcel: boolean[] createBooleanArray()>:<public final>:<android.os.Parcel>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.widget.AdapterView: void removeAllViews()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.ZoomButton: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.graphics.drawable.ColorDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.Entity: java.lang.String toString()>:<public>:<android.content.Entity>
<android.appwidget.AppWidgetHostView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.IsolatedContext: void <init>(android.content.ContentResolver,android.content.Context)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.RectF getCharacterBounds(int)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.EncoderCapabilities getEncoderCapabilities()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.MediaDrm: void closeSession(byte[])>:<public native>:<android.media.MediaDrm>
<android.system.Os: int poll(android.system.StructPollfd[],int)>:<public static>:<android.system.Os>
<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.os.Message: android.os.Bundle peekData()>:<public>:<android.os.Message:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.widget.RadioGroup: void onFinishInflate()>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: java.lang.String getFontFeatureSettings()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.wifi.SupplicantState: int describeContents()>:<public>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void <init>()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.database.sqlite.SQLiteStatement: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>(java.lang.String)>:<public>:<android.security.keystore.KeyPermanentlyInvalidatedException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.util.SparseBooleanArray: boolean valueAt(int)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.telephony.CellInfoWcdma: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.os.WorkSource: void <init>(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.database.AbstractCursor: long getLong(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>:<public static>:<android.os.Debug>
<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView.OnGroupClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.TextureView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.view.TextureView:android.view.View>
<android.view.MotionEvent.PointerProperties: int hashCode()>:<public>:<android.view.MotionEvent.PointerProperties>
<android.app.Notification.Builder: android.app.Notification.Builder setStyle(android.app.Notification.Style)>:<public>:<android.app.Notification.Builder>
<android.hardware.camera2.CaptureRequest.Key: void <init>()>:<>:<android.hardware.camera2.CaptureRequest.Key>
<android.app.admin.DevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStarted(java.lang.String)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.location.Address: void setUrl(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.View: void announceForAccessibility(java.lang.CharSequence)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGL14: boolean eglSwapInterval(android.opengl.EGLDisplay,int)>:<public static native>:<android.opengl.EGL14>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.net.InetAddress,int)>:<public>:<android.net.VpnService.Builder>
<android.hardware.camera2.CaptureRequest.Key: java.lang.String toString()>:<public>:<android.hardware.camera2.CaptureRequest.Key>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getSelectedRoute(int)>:<public>:<android.media.MediaRouter>
<android.test.ViewAsserts: void assertBaselineAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.renderscript.BaseObj: void finalize()>:<protected>:<android.renderscript.BaseObj>
<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ScaleGestureDetector>
<android.graphics.Point: void <init>(int,int)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.transition.VisibilityPropagation: int getViewVisibility(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.telecom.StatusHints: android.os.Bundle getExtras()>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.net.Network: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>:<public>:<android.net.Network:android.os.Parcelable>
<android.media.audiofx.NoiseSuppressor: android.media.audiofx.NoiseSuppressor create(int)>:<public static>:<android.media.audiofx.NoiseSuppressor:android.media.audiofx.AudioEffect>
<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.accessibilityservice.AccessibilityService: boolean onKeyEvent(android.view.KeyEvent)>:<protected>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.VectorDrawable: int getOpacity()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.widget.TextView: boolean performLongClick()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>:<public static>:<android.text.format.DateFormat>
<android.test.RenamingDelegatingContext: boolean deleteDatabase(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.provider.Telephony.Mms.Addr: void <init>()>:<>:<android.provider.Telephony.Mms.Addr:android.provider.BaseColumns>
<android.renderscript.AllocationAdapter: void setZ(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.view.View: int getNextFocusRightId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Display.Mode: int getPhysicalWidth()>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.hardware.camera2.params.ColorSpaceTransform: void copyElements(int[],int)>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.provider.DocumentsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)>:<public static>:<android.view.animation.AnimationUtils>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setAuthUserName(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.renderscript.FieldPacker: void addI16(short)>:<public>:<android.renderscript.FieldPacker>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.String)>:<public>:<android.content.IntentSender.SendIntentException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(android.net.Uri)>:<public static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.telephony.ServiceState: int getState()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.transition.ChangeScroll: void <init>()>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.telecom.PhoneAccount: boolean isEnabled()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.EGL14: boolean eglReleaseTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.View: boolean isAttachedToWindow()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.provider.CalendarContract.Calendars: void <init>()>:<>:<android.provider.CalendarContract.Calendars:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.CalendarColumns>
<junit.runner.BaseTestRunner: java.lang.String truncate(java.lang.String)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.util.ArrayMap: void <init>(int)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsizedWidth(int)>:<public>:<android.text.StaticLayout.Builder>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapS()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.location.Location: void setElapsedRealtimeNanos(long)>:<public>:<android.location.Location:android.os.Parcelable>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isHeading()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaDrm.CryptoSession: byte[] encrypt(byte[],byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.hardware.Camera.Parameters: int getMaxExposureCompensation()>:<public>:<android.hardware.Camera.Parameters>
<android.telephony.TelephonyManager: boolean canChangeDtmfToneLength()>:<public>:<android.telephony.TelephonyManager>
<android.widget.HorizontalScrollView: void requestLayout()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.opengl.GLES10: void glColorPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.test.mock.MockApplication: void onCreate()>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<android.widget.CheckedTextView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.text.style.ImageSpan: void <init>(android.content.Context,int,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getPlmn()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.security.KeyPairGeneratorSpec: javax.security.auth.x500.X500Principal getSubjectDN()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.app.Fragment: void setSharedElementEnterTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.FragmentManager: int getBackStackEntryCount()>:<public abstract>:<android.app.FragmentManager>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)>:<public static>:<android.view.Gravity>
<android.os.UserManager: java.lang.String getUserName()>:<public>:<android.os.UserManager>
<android.text.Html.TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>:<public abstract>:<android.text.Html.TagHandler>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>:<public>:<android.media.MediaMetadataRetriever>
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Binder: void <init>()>:<public>:<android.os.Binder:android.os.IBinder>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ExpandableListView.OnGroupExpandListener: void onGroupExpand(int)>:<public abstract>:<android.widget.ExpandableListView.OnGroupExpandListener>
<android.text.method.ArrowKeyMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: void onWindowFocusChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.Conference: void setOnHold()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.media.tv.TvView.TvInputCallback: void onContentBlocked(java.lang.String,android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.text.SpannableStringBuilder: java.lang.Appendable append(java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.content.res.Configuration: void <init>()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>:<public abstract>:<android.view.MenuItem>
<android.renderscript.ScriptIntrinsicBLAS: void STRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder addRequirements(java.util.List)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<android.view.textservice.SpellCheckerSubtype: void <clinit>()>:<static>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.media.MediaCodecInfo.VideoCapabilities: boolean areSizeAndRateSupported(int,int,double)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.content.pm.Signature: void <init>(java.lang.String)>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.test.mock.MockContext: void sendStickyBroadcast(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.TableRow: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference: boolean isSelectable()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.CursorTreeAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.util.TimingLogger: void reset()>:<public>:<android.util.TimingLogger>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.PackageStats: int describeContents()>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.text.style.LeadingMarginSpan.Standard: void <init>(android.os.Parcel)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.telephony.CellIdentityWcdma: int getMcc()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.media.AudioTrack: int getStreamType()>:<public>:<android.media.AudioTrack>
<android.os.CountDownTimer: void <init>(long,long)>:<public>:<android.os.CountDownTimer>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.pm.PackageManager: java.util.List getAllPermissionGroups(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.MenuInflater: void <init>(android.content.Context)>:<public>:<android.view.MenuInflater>
<android.view.View: void onStartTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebChromeClient.CustomViewCallback: void onCustomViewHidden()>:<public abstract>:<android.webkit.WebChromeClient.CustomViewCallback>
<android.os.Looper: void <init>()>:<>:<android.os.Looper>
<android.view.accessibility.AccessibilityEvent: int getEventType()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.View: boolean dispatchNestedFling(float,float,boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.res.AssetManager.AssetInputStream: void close()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.test.InstrumentationTestCase: void sendRepeatedKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.graphics.drawable.RotateDrawable: void setToDegrees(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.graphics.drawable.GradientDrawable: void setSize(int,int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.ColorMatrix: void setScale(float,float,float,float)>:<public>:<android.graphics.ColorMatrix>
<android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.PixelFormat: void <init>()>:<public>:<android.graphics.PixelFormat>
<android.gesture.GestureOverlayView: void onDetachedFromWindow()>:<protected>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageHeight()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getDomainSuffixMatch()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: boolean isActive()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()>:<public abstract>:<android.webkit.WebSettings>
<android.app.NativeActivity: void onStop()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActivityManager.RunningTaskInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.nsd.NsdManager: void stopServiceDiscovery(android.net.nsd.NsdManager.DiscoveryListener)>:<public>:<android.net.nsd.NsdManager>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>:<public>:<android.hardware.fingerprint.FingerprintManager.CryptoObject>
<android.view.View: void onCancelPendingInputEvents()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.DocumentsProvider: android.database.Cursor queryRecentDocuments(java.lang.String,java.lang.String[])>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.view.textservice.SuggestionsInfo: void <clinit>()>:<static>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.text.style.TtsSpan.Builder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.Builder>
<android.media.MediaExtractor: void selectTrack(int)>:<public native>:<android.media.MediaExtractor>
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getAllTests()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.util.ArraySet: java.util.Iterator iterator()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.Script: void <init>()>:<>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.widget.Toolbar: void onDetachedFromWindow()>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.animation.Animator: long getDuration()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLES30: void glTransformFeedbackVaryings(int,java.lang.String[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.service.voice.VoiceInteractionService: boolean isActiveService(android.content.Context,android.content.ComponentName)>:<public static>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.StatFs: long getBlockSizeLong()>:<public>:<android.os.StatFs>
<android.database.sqlite.SQLiteTableLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.gesture.GestureLibrary: void addGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.net.ConnectivityManager: boolean isDefaultNetworkActive()>:<public>:<android.net.ConnectivityManager>
<android.text.SpannedString: int getSpanFlags(java.lang.Object)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.widget.EdgeEffect: int getMaxHeight()>:<public>:<android.widget.EdgeEffect>
<android.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.Toolbar: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.content.RestrictionEntry: void setChoiceEntries(android.content.Context,int)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clone()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.IntentService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioTrack: void addOnRoutingChangedListener(android.media.AudioTrack.OnRoutingChangedListener,android.os.Handler)>:<public>:<android.media.AudioTrack>
<android.test.mock.MockResources: android.content.res.Configuration getConfiguration()>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.ListPopupWindow: android.view.View.OnTouchListener createDragToOpenListener(android.view.View)>:<public>:<android.widget.ListPopupWindow>
<android.app.TimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.media.midi.MidiDeviceService: void onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)>:<public>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.AnimatedVectorDrawable: void stop()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.os.PowerManager.WakeLock: void finalize()>:<protected>:<android.os.PowerManager.WakeLock>
<android.media.MediaDescription: android.graphics.Bitmap getIconBitmap()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.app.ApplicationErrorReport: void <init>()>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.os.Parcel: void readCharArray(char[])>:<public final>:<android.os.Parcel>
<android.util.Base64: byte[] encode(byte[],int,int,int)>:<public static>:<android.util.Base64>
<android.telephony.CellIdentityCdma: int describeContents()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.os.BatteryManager: long getLongProperty(int)>:<public>:<android.os.BatteryManager>
<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>:<public abstract>:<android.view.SurfaceHolder>
<android.widget.VideoView: int getCurrentPosition()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.TextView: boolean didTouchFocusSelect()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>:<public final native>:<android.media.MediaExtractor>
<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)>:<public static>:<android.net.sip.SipManager>
<android.net.http.SslError: boolean hasError(int)>:<public>:<android.net.http.SslError>
<android.net.wifi.p2p.WifiP2pDevice: boolean isServiceDiscoveryCapable()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.text.style.URLSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.gesture.Gesture: void <init>()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.os.StatFs: long getTotalBytes()>:<public>:<android.os.StatFs>
<android.view.View: boolean willNotCacheDrawing()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.pdf.PdfDocument.PageInfo: android.graphics.Rect getContentRect()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.view.View: boolean getClipBounds(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.framework.TestSuite: java.lang.String toString()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.media.midi.MidiDeviceService: android.media.midi.MidiDeviceInfo getDeviceInfo()>:<public final>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.speech.tts.SynthesisRequest: int getPitch()>:<public>:<android.speech.tts.SynthesisRequest>
<android.renderscript.Script: void setTimeZone(java.lang.String)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.net.LocalServerSocket: void close()>:<public>:<android.net.LocalServerSocket>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Build: void <init>()>:<public>:<android.os.Build>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRMM(int,int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short3)>:<public>:<android.renderscript.FieldPacker>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AnalogClock:android.view.View>
<android.database.DataSetObservable: void <init>()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.gesture.GestureStore: void removeGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.app.UiAutomation.OnAccessibilityEventListener: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.app.UiAutomation.OnAccessibilityEventListener>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.TabWidget: void childDrawableStateChanged(android.view.View)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.os.Looper: android.os.MessageQueue myQueue()>:<public static>:<android.os.Looper>
<android.util.LongSparseArray: void delete(long)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>:<public static>:<android.os.RecoverySystem>
<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>:<public>:<android.view.accessibility.CaptioningManager>
<android.telecom.Connection.VideoProvider: void onRequestConnectionDataUsage()>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.hardware.camera2.TotalCaptureResult: void <init>()>:<>:<android.hardware.camera2.TotalCaptureResult:android.hardware.camera2.CaptureResult,android.hardware.camera2.CameraMetadata>
<org.xmlpull.v1.sax2.Driver: void <init>(org.xmlpull.v1.XmlPullParser)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.view.KeyCharacterMap: char getMatch(int,char[],int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.security.keystore.KeyExpiredException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.security.keystore.KeyExpiredException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.animation.AnimatorInflater: void <init>()>:<public>:<android.animation.AnimatorInflater>
<android.preference.Preference: void onAttachedToActivity()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.drawable.VectorDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.webkit.JsResult: void confirm()>:<public final>:<android.webkit.JsResult>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.CursorLoader: void onStartLoading()>:<protected>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.os.AsyncTask: void onCancelled()>:<protected>:<android.os.AsyncTask>
<android.media.MediaCodec.CodecException: void <init>()>:<>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.test.SingleLaunchActivityTestCase: void tearDown()>:<protected>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.TextureView: void setTransform(android.graphics.Matrix)>:<public>:<android.view.TextureView:android.view.View>
<android.widget.RelativeLayout: void onMeasure(int,int)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: boolean glIsProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.AudioAttributes: int getUsage()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.graphics.RectF: int describeContents()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.net.rtp.AudioCodec: void <init>()>:<>:<android.net.rtp.AudioCodec>
<android.print.PrintAttributes.Resolution: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.Resolution>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setYuvFormat(int)>:<public>:<android.renderscript.Type.Builder>
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.LayoutAnimationController>
<android.media.tv.TvInputService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.media.tv.TvInputService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>:<public>:<android.view.ViewOverlay>
<android.content.IntentFilter: boolean hasAction(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.json.JSONObject: java.lang.String toString(int)>:<public>:<org.json.JSONObject>
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent.PointerCoords)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<junit.framework.TestFailure: java.lang.String trace()>:<public>:<junit.framework.TestFailure>
<android.widget.AbsSeekBar: void setThumbTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setLongArgument(java.lang.String,long)>:<public>:<android.text.style.TtsSpan.Builder>
<android.text.AndroidCharacter: void getDirectionalities(char[],byte[],int)>:<public static native>:<android.text.AndroidCharacter>
<android.bluetooth.BluetoothGattService: void <init>(java.util.UUID,int)>:<public>:<android.bluetooth.BluetoothGattService>
<android.widget.TextView: void setFontFeatureSettings(java.lang.String)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.util.Base64InputStream: int available()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.widget.TextClock: java.lang.CharSequence getFormat24Hour()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.MenuItem: android.content.Intent getIntent()>:<public abstract>:<android.view.MenuItem>
<android.content.CursorLoader: java.lang.String[] getProjection()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebViewFragment: void onDestroyView()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.animation.ValueAnimator: int getRepeatMode()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.animation.Animation: void setBackgroundColor(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>:<public>:<android.text.StaticLayout.Builder>
<android.widget.TextView: int getGravity()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.StatFs: long getAvailableBlocksLong()>:<public>:<android.os.StatFs>
<android.app.backup.FileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.printservice.PrintService: android.printservice.PrinterDiscoverySession onCreatePrinterDiscoverySession()>:<protected abstract>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.LayerDrawable: int getEndPadding()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.util.SizeF: int hashCode()>:<public>:<android.util.SizeF>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.os.PersistableBundle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.Cursor: byte[] getBlob(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.ViewParent: boolean isLayoutRequested()>:<public abstract>:<android.view.ViewParent>
<android.media.MediaActionSound: void load(int)>:<public synchronized>:<android.media.MediaActionSound>
<android.service.wallpaper.WallpaperService.Engine: void onVisibilityChanged(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ImageView:android.view.View>
<android.nfc.tech.NfcBarcode: void close()>:<public volatile>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.View: java.lang.CharSequence getContentDescription()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onCallSessionEvent(android.telecom.RemoteConnection.VideoProvider,int)>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.media.MediaCodec.Callback: void onInputBufferAvailable(android.media.MediaCodec,int)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.graphics.drawable.AnimatedStateListDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.assist.AssistStructure.ViewNode: boolean isChecked()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.os.Parcel: byte[] marshall()>:<public final>:<android.os.Parcel>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.admin.DevicePolicyManager: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.animation.Animation: void start()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.view.MotionEvent: void offsetLocation(float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvInputManager: int getInputState(java.lang.String)>:<public>:<android.media.tv.TvInputManager>
<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.NativeActivity: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.MotionEvent: long getDownTime()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.animation.TimeAnimator: void setCurrentPlayTime(long)>:<public>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.View: void setActivated(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.Touch: void <init>()>:<>:<android.text.method.Touch>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>:<public static>:<android.text.format.DateUtils>
<android.animation.PropertyValuesHolder: void setFloatValues(float[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.text.DynamicLayout: int getEllipsisStart(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.app.admin.DevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.GeolocationPermissions>
<android.content.pm.PermissionGroupInfo: void <clinit>()>:<static>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void CHPMV(int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.hardware.Camera.Parameters: java.lang.String get(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setThumbnail(android.media.Image)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addAction(android.app.Notification.Action)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.media.MediaFormat: boolean containsKey(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager.Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.graphics.drawable.shapes.Shape: float getHeight()>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.service.voice.VoiceInteractionService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.PendingIntent: void <clinit>()>:<static>:<android.app.PendingIntent:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.assist.AssistContent: void setWebUri(android.net.Uri)>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.accounts.OperationCanceledException: void <init>(java.lang.String)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.util.Range: java.lang.Comparable getUpper()>:<public>:<android.util.Range>
<android.graphics.Typeface: boolean isItalic()>:<public final>:<android.graphics.Typeface>
<android.telephony.gsm.SmsMessage.MessageClass: android.telephony.gsm.SmsMessage.MessageClass[] values()>:<public static>:<android.telephony.gsm.SmsMessage.MessageClass:java.lang.Enum>
<android.text.style.DrawableMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID)>:<public>:<android.bluetooth.BluetoothGattService>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.renderscript.FieldPacker: android.renderscript.Matrix3f subMatrix3f()>:<public>:<android.renderscript.FieldPacker>
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintJobInfo: void <init>()>:<>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.graphics.Picture: void <init>()>:<public>:<android.graphics.Picture>
<android.view.WindowManager.LayoutParams: java.lang.String toString()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.text.method.MultiTapKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.widget.LinearLayout: int getBaseline()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getCurrentHintTextColor()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.usb.UsbEndpoint: void <init>()>:<>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setColorModes(int,int)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.app.admin.DevicePolicyManager: void uninstallAllUserCaCerts(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.animation.ValueAnimator: void setRepeatCount(int)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.ListView: boolean isOpaque()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.telecom.GatewayInfo: void <init>(java.lang.String,android.net.Uri,android.net.Uri)>:<public>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.view.Window: void setElevation(float)>:<public>:<android.view.Window>
<android.widget.SearchView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean,boolean)>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.service.carrier.CarrierService: void notifyCarrierNetworkChange(boolean)>:<public final>:<android.service.carrier.CarrierService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.speech.tts.TextToSpeechService: void onSynthesizeText(android.speech.tts.SynthesisRequest,android.speech.tts.SynthesisCallback)>:<protected abstract>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.Window: boolean hasSoftInputMode()>:<protected final>:<android.view.Window>
<android.graphics.Color: int parseColor(java.lang.String)>:<public static>:<android.graphics.Color>
<android.widget.SlidingDrawer: void onMeasure(int,int)>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.util.SparseIntArray: int valueAt(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.text.style.AbsoluteSizeSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>:<public abstract>:<android.text.TextWatcher:android.text.NoCopySpan>
<android.widget.TabHost: int getCurrentTab()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: int getScrollBarSize()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.HandlerThread: android.os.Looper getLooper()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<junit.framework.TestCase: junit.framework.TestResult createResult()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.preference.PreferenceScreen: void bind(android.widget.ListView)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.widget.StackView: void onMeasure(int,int)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.MatrixCursor: boolean isNull(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setLanguage(java.lang.String)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.content.CursorLoader: void setSortOrder(java.lang.String)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.security.keystore.KeyInfo: java.lang.String[] getSignaturePaddings()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.test.mock.MockCursor: android.os.Bundle getExtras()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>:<public static>:<android.media.ThumbnailUtils>
<android.graphics.Paint: int getFlags()>:<public native>:<android.graphics.Paint>
<android.net.sip.SipManager: void register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int,int)>:<public>:<android.media.AudioRecord>
<android.view.accessibility.AccessibilityEvent: int getAction()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.accessibility.AccessibilityEvent: void appendRecord(android.view.accessibility.AccessibilityRecord)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.AbsListView: void setSelector(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Fragment: android.view.View getView()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<org.json.JSONObject: double getDouble(java.lang.String)>:<public>:<org.json.JSONObject>
<android.app.WallpaperManager: void <init>()>:<>:<android.app.WallpaperManager>
<android.text.util.Rfc822Token: java.lang.String quoteNameIfNecessary(java.lang.String)>:<public static>:<android.text.util.Rfc822Token>
<android.telecom.Connection: void destroy()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.opengl.GLES20: void glStencilMask(int)>:<public static native>:<android.opengl.GLES20>
<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()>:<public>:<android.hardware.camera2.CameraManager>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyB(int,byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.telecom.RemoteConnection.Callback: void onConferenceableConnectionsChanged(android.telecom.RemoteConnection,java.util.List)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>:<public static>:<android.net.wifi.WifiManager>
<android.test.mock.MockContext: java.io.File[] getExternalMediaDirs()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.app.AlertDialog: void setView(android.view.View)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeNameResId(int)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.location.GpsSatellite: boolean hasEphemeris()>:<public>:<android.location.GpsSatellite>
<android.media.AudioManager.OnAudioFocusChangeListener: void onAudioFocusChange(int)>:<public abstract>:<android.media.AudioManager.OnAudioFocusChangeListener>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeX()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.nfc.cardemulation.CardEmulation: android.nfc.cardemulation.CardEmulation getInstance(android.nfc.NfcAdapter)>:<public static synchronized>:<android.nfc.cardemulation.CardEmulation>
<android.widget.Spinner: int getDropDownHorizontalOffset()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.view.ViewStructure: void setLongClickable(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.app.UiAutomation>
<android.telecom.VideoProfile: int getQuality()>:<public>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.telephony.CellIdentityCdma: void <init>()>:<>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.view.View: void dispatchDrawableHotspotChanged(float,float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.PackageInstaller.SessionParams: void setAppLabel(java.lang.CharSequence)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.webkit.WebResourceRequest: boolean isForMainFrame()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.bluetooth.BluetoothHealthAppConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>:<public>:<android.app.ActivityManager>
<android.content.AsyncQueryHandler.WorkerArgs: void <init>()>:<protected>:<android.content.AsyncQueryHandler.WorkerArgs>
<android.widget.OverScroller: int getStartY()>:<public final>:<android.widget.OverScroller>
<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.AdapterView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.content.res.AssetManager.AssetInputStream: int read()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.text.format.Formatter: java.lang.String formatIpAddress(int)>:<public static>:<android.text.format.Formatter>
<android.preference.Preference: void setDefaultValue(java.lang.Object)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.speech.RecognitionService.Callback: void results(android.os.Bundle)>:<public>:<android.speech.RecognitionService.Callback>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint.FontMetrics)>:<public native>:<android.graphics.Paint>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>:<public>:<android.app.Instrumentation>
<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.util.JsonWriter: android.util.JsonWriter endObject()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.service.dreams.DreamService: boolean isInteractive()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.print.PrinterId: java.lang.String toString()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.provider.Contacts.Photos: void <init>()>:<>:<android.provider.Contacts.Photos:android.provider.BaseColumns,android.provider.Contacts.PhotosColumns>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.net.RouteInfo: int describeContents()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.os.UserManager: boolean setRestrictionsChallenge(java.lang.String)>:<public>:<android.os.UserManager>
<android.renderscript.FieldPacker: android.renderscript.Double3 subDouble3()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader.TileMode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.provider.ContactsContract.RawContacts: void <clinit>()>:<static>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.view.KeyCharacterMap: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.opengl.GLES31Ext: void glBlendFuncSeparateiEXT(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.Fragment: void onDetach()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.Paint.Cap: void <clinit>()>:<static>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.telecom.Conference: void onSeparate(android.telecom.Connection)>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.opengl.GLES30: void glUniform1uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>:<public abstract>:<android.content.Context>
<android.text.style.TypefaceSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.telephony.CellInfoCdma: int hashCode()>:<public>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.os.Debug: void waitForDebugger()>:<public static>:<android.os.Debug>
<android.media.MediaExtractor: long getSampleTime()>:<public native>:<android.media.MediaExtractor>
<android.database.CursorWrapper: boolean isBeforeFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.SurfaceTexture: long getTimestamp()>:<public>:<android.graphics.SurfaceTexture>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.MediaCodec.CryptoInfo: void set(int,int[],int[],byte[],byte[],int)>:<public>:<android.media.MediaCodec.CryptoInfo>
<android.opengl.GLES30: void glGetProgramBinary(int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.nfc.NdefMessage: void <init>(byte[])>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.gesture.GestureStore: void save(java.io.OutputStream)>:<public>:<android.gesture.GestureStore>
<android.view.View: android.view.View findViewWithTag(java.lang.Object)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioRecord.Builder: void <init>()>:<public>:<android.media.AudioRecord.Builder>
<android.app.SearchableInfo: int getVoiceLanguageId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.ActivityManager.AppTask: void moveToFront()>:<public>:<android.app.ActivityManager.AppTask>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.RectF: void offset(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.telecom.Connection: void setOnHold()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.view.View: java.lang.String toString()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.Handler: void handleMessage(android.os.Message)>:<public>:<android.os.Handler>
<android.view.ScaleGestureDetector: float getPreviousSpanX()>:<public>:<android.view.ScaleGestureDetector>
<android.service.voice.VoiceInteractionSession: int getUserDisabledShowContext()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.os.ParcelUuid: java.lang.String toString()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.view.TextureView: void setLayerPaint(android.graphics.Paint)>:<public>:<android.view.TextureView:android.view.View>
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>:<public>:<android.content.res.Resources>
<android.graphics.Region: void translate(int,int,android.graphics.Region)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.os.Message: java.lang.Runnable getCallback()>:<public>:<android.os.Message:android.os.Parcelable>
<android.os.Messenger: boolean equals(java.lang.Object)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int describeContents()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.view.View: float getRotationY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Extender)>:<public>:<android.app.Notification.Action.Builder>
<android.provider.Settings.Secure: boolean isLocationProviderEnabled(android.content.ContentResolver,java.lang.String)>:<public static final>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.widget.ShareActionProvider: void onPrepareSubMenu(android.view.SubMenu)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.view.View: void postInvalidate(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer.TrackInfo: java.lang.String toString()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.speech.RecognizerResultsIntent: void <init>()>:<>:<android.speech.RecognizerResultsIntent>
<android.renderscript.ScriptGroup: void execute()>:<public>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.system.Os: void setgid(int)>:<public static>:<android.system.Os>
<android.service.voice.VoiceInteractionSession.Request: java.lang.String getCallingPackage()>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.graphics.Canvas: void translate(float,float)>:<public>:<android.graphics.Canvas>
<android.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.renderscript.ScriptIntrinsicBLAS: void ZHPR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.content.BroadcastReceiver: void <init>()>:<public>:<android.content.BroadcastReceiver>
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBLAS: void CHER2K(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.text.method.QwertyKeyListener: int getInputType()>:<public>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.util.SparseLongArray: java.lang.String toString()>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.view.accessibility.AccessibilityWindowInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.ViewParent: void requestFitSystemWindows()>:<public abstract>:<android.view.ViewParent>
<org.apache.http.conn.ssl.X509HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<android.webkit.WebView: android.graphics.Picture capturePicture()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.drawable.TransitionDrawable: void startTransition(int)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: void setSubpixelText(boolean)>:<public native>:<android.graphics.Paint>
<android.provider.VoicemailContract.Status: void <init>()>:<>:<android.provider.VoicemailContract.Status:android.provider.BaseColumns>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.telecom.PhoneAccount: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.test.InstrumentationTestCase: void sendKeys(java.lang.String)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.util.TimeUtils: void <init>()>:<>:<android.util.TimeUtils>
<android.media.midi.MidiDeviceStatus: int describeContents()>:<public>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>:<public static>:<android.text.TextUtils>
<dalvik.system.DexFile: dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int)>:<public static>:<dalvik.system.DexFile>
<android.app.ActionBar: float getElevation()>:<public>:<android.app.ActionBar>
<android.webkit.WebView.HitTestResult: java.lang.String getExtra()>:<public>:<android.webkit.WebView.HitTestResult>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType valueOf(java.lang.String)>:<public static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.os.Looper: void setMessageLogging(android.util.Printer)>:<public>:<android.os.Looper>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.Window: void setSoftInputMode(int)>:<public>:<android.view.Window>
<android.app.NativeActivity: void onPause()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES30: void glEndQuery(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.transition.TransitionSet: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.widget.AdapterViewAnimator: void advance()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.app.usage.UsageEvents: int describeContents()>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.widget.TextView: int getHyphenationFrequency()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.wifi.WifiManager.WpsCallback: void onFailed(int)>:<public abstract>:<android.net.wifi.WifiManager.WpsCallback>
<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>:<public final>:<android.content.Context>
<android.os.Debug: void resetGlobalAllocCount()>:<public static>:<android.os.Debug>
<android.media.audiofx.Virtualizer: int getVirtualizationMode()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.widget.Toolbar: void setNavigationIcon(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.test.ActivityTestCase: void setActivity(android.app.Activity)>:<protected>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewGroup: boolean isMotionEventSplittingEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.telecom.Connection.VideoProvider: void setCallDataUsage(long)>:<public>:<android.telecom.Connection.VideoProvider>
<android.view.Display: java.lang.String toString()>:<public>:<android.view.Display>
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>:<public>:<android.graphics.Canvas>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.widget.Chronometer: void setFormat(java.lang.String)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: void setScrollbarFadingEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipManager: void unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.bluetooth.BluetoothDevice: int hashCode()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.test.IsolatedContext: void unregisterReceiver(android.content.BroadcastReceiver)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.os.Message: android.os.Message obtain(android.os.Message)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.app.FragmentController: void <init>()>:<>:<android.app.FragmentController>
<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>:<public abstract>:<android.view.MenuItem>
<android.app.Dialog: void openContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.DrawableWrapper: void <init>(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothSocket: int getConnectionType()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.app.KeyguardManager.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>:<public abstract>:<android.app.KeyguardManager.OnKeyguardExitResult>
<android.bluetooth.BluetoothGattServerCallback: void onServiceAdded(int,android.bluetooth.BluetoothGattService)>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.app.Notification.Action: android.app.Notification.Action clone()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.text.style.TtsSpan.DigitsBuilder: android.text.style.TtsSpan.DigitsBuilder setDigits(java.lang.String)>:<public>:<android.text.style.TtsSpan.DigitsBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.content.res.Configuration: void <init>(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.net.wifi.WifiInfo: int getIpAddress()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.accessibilityservice.AccessibilityService: boolean performGlobalAction(int)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.ParcelFileDescriptor.FileDescriptorDetachedException: void <init>()>:<public>:<android.os.ParcelFileDescriptor.FileDescriptorDetachedException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.animation.ObjectAnimator: java.lang.String getPropertyName()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.content.IntentFilter: void addDataType(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.media.audiofx.Visualizer: int setCaptureSize(int)>:<public>:<android.media.audiofx.Visualizer>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.hardware.usb.UsbManager: void <init>()>:<>:<android.hardware.usb.UsbManager>
<android.content.res.Configuration: boolean isScreenRound()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.os.DropBoxManager.Entry: int describeContents()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>:<public>:<android.os.Vibrator>
<android.test.ProviderTestCase: android.content.ContentResolver newResolverWithContentProviderFromSql(android.content.Context,java.lang.Class,java.lang.String,java.lang.String,int,java.lang.String)>:<public static>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.bluetooth.BluetoothGattServer: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Image.Plane: int getRowStride()>:<public abstract>:<android.media.Image.Plane>
<android.widget.AbsSpinner: void setSelection(int,boolean)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: boolean isDrawingCacheEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.printservice.PrintDocument: android.print.PrintDocumentInfo getInfo()>:<public>:<android.printservice.PrintDocument>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setDuplexModes(int,int)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.security.KeyStoreParameter: void <init>()>:<>:<android.security.KeyStoreParameter:java.security.KeyStore.ProtectionParameter>
<android.widget.AbsListView: void setStackFromBottom(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.nfc.NdefRecord: byte[] toByteArray()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.GridLayout.Spec: int hashCode()>:<public>:<android.widget.GridLayout.Spec>
<android.app.admin.DevicePolicyManager: void clearDeviceOwnerApp(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.ExpandableListAdapter: boolean isChildSelectable(int,int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.widget.SlidingDrawer: boolean isMoving()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.ListPopupWindow: int getInputMethodMode()>:<public>:<android.widget.ListPopupWindow>
<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.nfc.tech.IsoDep: void setTimeout(int)>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.text.style.IconMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.ViewConfiguration: long getZoomControlsTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.os.Debug: long threadCpuTimeNanos()>:<public static>:<android.os.Debug>
<android.media.MediaRouter.RouteInfo: void setTag(java.lang.Object)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.PopupWindow: boolean isClippingEnabled()>:<public>:<android.widget.PopupWindow>
<android.telecom.Conference: void onDisconnect()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.widget.ScrollView: void draw(android.graphics.Canvas)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.backup.BackupManager: void dataChanged(java.lang.String)>:<public static>:<android.app.backup.BackupManager>
<android.webkit.URLUtil: boolean isAboutUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.app.Activity: void onVisibleBehindCanceled()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.hardware.camera2.CaptureRequest: boolean isReprocess()>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.test.mock.MockContentProvider: boolean onCreate()>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.service.chooser.ChooserTarget: float getScore()>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.graphics.Matrix: boolean isAffine()>:<public>:<android.graphics.Matrix>
<android.app.Notification.Action.WearableExtender: void <init>(android.app.Notification.Action)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.view.WindowManager.LayoutParams: void <init>(int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void CSYMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>:<public>:<android.webkit.WebChromeClient>
<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>:<protected>:<android.util.LruCache>
<android.text.style.DynamicDrawableSpan: void <init>(int)>:<protected>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.opengl.GLES20: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES20>
<android.bluetooth.BluetoothGattServer: boolean sendResponse(android.bluetooth.BluetoothDevice,int,int,int,byte[])>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo getRangeInfo()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: int getTextAlignment()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.MoreAsserts: void assertNotMatchesRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.widget.SlidingDrawer.OnDrawerCloseListener: void onDrawerClosed()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerCloseListener>
<android.renderscript.ScriptIntrinsicBLAS: void CTRMM(int,int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.location.Address: java.lang.String getSubAdminArea()>:<public>:<android.location.Address:android.os.Parcelable>
<android.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>:<public static>:<android.media.MediaPlayer>
<android.graphics.Paint: boolean isFakeBoldText()>:<public final>:<android.graphics.Paint>
<android.media.MediaMetadataRetriever: void <init>()>:<public>:<android.media.MediaMetadataRetriever>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: android.content.pm.PackageManager getPackageManager()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.telecom.DisconnectCause: boolean equals(java.lang.Object)>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.service.chooser.ChooserTarget: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.view.ViewParent: boolean canResolveTextAlignment()>:<public abstract>:<android.view.ViewParent>
<android.app.job.JobParameters: void <clinit>()>:<static>:<android.app.job.JobParameters:android.os.Parcelable>
<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>:<public>:<android.webkit.WebChromeClient>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putString(int,java.lang.String)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.app.Activity: boolean onSearchRequested(android.view.SearchEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.Notification.Style: void checkBuilder()>:<protected>:<android.app.Notification.Style>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setDescription(java.lang.String)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.database.ContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.ContentObserver>
<android.graphics.drawable.Drawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.Drawable>
<android.util.ArraySet: java.lang.Object removeAt(int)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.widget.AbsoluteLayout: void onMeasure(int,int)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.widget.ProgressBar: void setProgressBackgroundTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.animation.LinearInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.BaseInterpolator>
<android.opengl.GLES30: int glGetFragDataLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.UiAutomation: boolean setRotation(int)>:<public>:<android.app.UiAutomation>
<android.widget.NumberPicker: int getValue()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.Menu: android.view.SubMenu addSubMenu(java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType[] values()>:<public static>:<android.widget.TextView.BufferType:java.lang.Enum>
<android.printservice.PrintJob: android.print.PrintJobInfo getInfo()>:<public>:<android.printservice.PrintJob>
<android.content.BroadcastReceiver.PendingResult: void setResult(int,java.lang.String,android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.test.MoreAsserts: void assertNotContainsRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.media.browse.MediaBrowser.MediaItem: boolean isPlayable()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.net.Uri.Builder: android.net.Uri.Builder authority(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.RadioGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>:<protected final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glUniform4ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.animation.Transformation: float getAlpha()>:<public>:<android.view.animation.Transformation>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.test.mock.MockContext: android.content.pm.ApplicationInfo getApplicationInfo()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.SubMenu: android.view.SubMenu setIcon(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.preference.Preference: boolean callChangeListener(java.lang.Object)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.Intent: void <init>(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.TrafficStats: long getMobileRxBytes()>:<public static>:<android.net.TrafficStats>
<android.view.Menu: android.view.MenuItem add(int)>:<public abstract>:<android.view.Menu>
<android.graphics.drawable.GradientDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.media.tv.TvInputManager: java.util.List getTvInputList()>:<public>:<android.media.tv.TvInputManager>
<android.gesture.Gesture: int describeContents()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.location.Address: java.lang.String getPhone()>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.ViewParent: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public abstract>:<android.view.ViewParent>
<junit.framework.Assert: void assertEquals(short,short)>:<public static>:<junit.framework.Assert>
<android.renderscript.ScriptIntrinsicBLAS: void SSYR2(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.CalendarView: int getShownWeekCount()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.res.ObbScanner: void <init>()>:<>:<android.content.res.ObbScanner>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.util.SparseIntArray: int size()>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.os.Debug: int getGlobalExternalAllocCount()>:<public static>:<android.os.Debug>
<android.app.job.JobInfo: int getNetworkType()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: void <clinit>()>:<static>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.os.Messenger: int describeContents()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.test.AndroidTestCase: void <init>()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(int)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.view.View: boolean isScrollContainer()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothDevice: void <clinit>()>:<static>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)>:<public>:<android.mtp.MtpDevice>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onCallDataUsageChanged(android.telecom.RemoteConnection.VideoProvider,long)>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>:<public>:<android.telephony.SubscriptionManager>
<android.service.voice.VoiceInteractionSession: void onComputeInsets(android.service.voice.VoiceInteractionSession.Insets)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.os.Handler: java.lang.String getMessageName(android.os.Message)>:<public>:<android.os.Handler>
<android.graphics.drawable.NinePatchDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>:<public>:<android.content.res.Resources>
<android.test.ActivityUnitTestCase: android.content.Intent getStartedActivityIntent()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.speech.tts.TextToSpeech: int playSilentUtterance(long,int,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.view.ViewStructure: void setEnabled(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.widget.CalendarView: long getMinDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.IntentSender.SendIntentException: void <init>()>:<public>:<android.content.IntentSender.SendIntentException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.text.util.Rfc822Token: java.lang.String toString()>:<public>:<android.text.util.Rfc822Token>
<android.media.audiofx.Equalizer: short[] getBandLevelRange()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats.Bucket querySummaryForUser(int,java.lang.String,long,long)>:<public>:<android.app.usage.NetworkStatsManager>
<android.telephony.CellSignalStrengthWcdma: int hashCode()>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.widget.ZoomControls: void show()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.system.ErrnoException: void <init>(java.lang.String,int,java.lang.Throwable)>:<public>:<android.system.ErrnoException:java.lang.Exception,java.lang.Throwable>
<android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.ProgressBar: void setProgressDrawableTiled(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.audiofx.AudioEffect.Descriptor: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.media.audiofx.AudioEffect.Descriptor>
<android.text.method.MetaKeyKeyListener: long clearMetaKeyState(long,int)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.telephony.TelephonyManager: java.lang.String sendEnvelopeWithStatus(java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.widget.TabHost: void clearAllTabs()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.webkit.WebSettings: void setTextZoom(int)>:<public abstract>:<android.webkit.WebSettings>
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.view.Window: android.transition.Transition getExitTransition()>:<public>:<android.view.Window>
<android.provider.CalendarContract.Instances: void <init>()>:<>:<android.provider.CalendarContract.Instances:android.provider.BaseColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.renderscript.ScriptIntrinsicBLAS: void ZSYRK(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.transition.TransitionSet: android.transition.TransitionSet setStartDelay(long)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.database.DatabaseUtils.InsertHelper: long insert(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isEnabled()>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)>:<public static>:<android.text.TextUtils>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.DialerFilter: java.lang.CharSequence getLetters()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager.DiscoveryListener)>:<public>:<android.net.nsd.NsdManager>
<android.text.method.CharacterPickerDialog: void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean)>:<public>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.app.usage.NetworkStats: void close()>:<public>:<android.app.usage.NetworkStats:java.lang.AutoCloseable>
<android.provider.ContactsContract.CommonDataKinds.Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Relation:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.bluetooth.BluetoothAdapter: int getState()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.telephony.CellLocation: void <init>()>:<public>:<android.telephony.CellLocation>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int[])>:<public static transient>:<android.view.ViewDebug>
<android.widget.TextView: android.text.TextUtils.TruncateAt getEllipsize()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.ScriptGroup.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.database.CursorWindow: void clear()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.View: boolean isContextClickable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Spinner: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.provider.ContactsContract.CommonDataKinds.Phone: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.service.notification.NotificationListenerService: void onListenerConnected()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.AbstractCursor: boolean onMove(int,int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.RelativeLayout: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void <init>()>:<public>:<android.test.TouchUtils>
<android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech.OnUtteranceCompletedListener)>:<public>:<android.speech.tts.TextToSpeech>
<android.telecom.RemoteConnection: int getAddressPresentation()>:<public>:<android.telecom.RemoteConnection>
<android.widget.TextView: java.lang.String getPrivateImeOptions()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>:<public static>:<android.content.ContentResolver>
<android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.renderscript.ScriptIntrinsic3DLUT: void setLUT(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ListPopupWindow: void setAnchorView(android.view.View)>:<public>:<android.widget.ListPopupWindow>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.CursorJoiner: void <init>(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<org.json.JSONArray: void <init>(org.json.JSONTokener)>:<public>:<org.json.JSONArray>
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setHighlightColor(int)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.opengl.GLES31Ext: void glBlendFunciEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.webkit.WebView: void destroy()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.ConnectivityManager: void <init>()>:<>:<android.net.ConnectivityManager>
<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.hardware.Camera.Parameters: void setJpegThumbnailQuality(int)>:<public>:<android.hardware.Camera.Parameters>
<android.widget.GridLayout.Spec: boolean equals(java.lang.Object)>:<public>:<android.widget.GridLayout.Spec>
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.content.SyncAdapterType: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.content.CursorLoader: void setUri(android.net.Uri)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.app.backup.BackupManager: void <init>(android.content.Context)>:<public>:<android.app.backup.BackupManager>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>:<public>:<android.graphics.Canvas>
<android.content.Intent.FilterComparison: int hashCode()>:<public>:<android.content.Intent.FilterComparison>
<android.print.PrintDocumentInfo.Builder: void <init>(java.lang.String)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.media.RemoteControlClient.OnGetPlaybackPositionListener: long onGetPlaybackPosition()>:<public abstract>:<android.media.RemoteControlClient.OnGetPlaybackPositionListener>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType[] values()>:<public static>:<android.renderscript.RenderScript.ContextType:java.lang.Enum>
<android.widget.Gallery: void onShowPress(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.ListFragment: void setListShown(boolean)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.text.method.ScrollingMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.text.Layout.Directions: void <init>()>:<>:<android.text.Layout.Directions>
<android.graphics.Color: int blue(int)>:<public static>:<android.graphics.Color>
<android.hardware.usb.UsbEndpoint: void <clinit>()>:<static>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.security.keystore.KeyProtection: java.lang.String[] getBlockModes()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.graphics.Path: void addPath(android.graphics.Path,float,float)>:<public>:<android.graphics.Path>
<android.widget.AdapterViewFlipper: void showNext()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.shapes.PathShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>:<public>:<android.content.res.Resources>
<android.provider.SyncStateContract.Helpers: android.net.Uri insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.view.View: float getTranslationY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.SpannableStringBuilder: android.text.Editable replace(int,int,java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.mtp.MtpDevice: int getDeviceId()>:<public>:<android.mtp.MtpDevice>
<android.widget.Toolbar: void onRtlPropertiesChanged(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.media.MediaCodecList: java.lang.String findEncoderForFormat(android.media.MediaFormat)>:<public final>:<android.media.MediaCodecList>
<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.hardware.camera2.params.BlackLevelPattern: void copyTo(int[],int)>:<public>:<android.hardware.camera2.params.BlackLevelPattern>
<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.Window: void <init>(android.content.Context)>:<public>:<android.view.Window>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>:<public abstract>:<android.view.MenuItem>
<android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>:<public static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.os.ParcelUuid: void <init>(java.util.UUID)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.speech.RecognitionService: void onCancel(android.speech.RecognitionService.Callback)>:<protected abstract>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>:<public>:<android.media.AudioTrack>
<android.app.ActivityOptions: void update(android.app.ActivityOptions)>:<public>:<android.app.ActivityOptions>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float,boolean)>:<public>:<android.widget.OverScroller>
<android.widget.TextView: void clearComposingText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AdapterView: void removeViewAt(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeToGlobal()>:<public>:<android.telephony.TelephonyManager>
<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.app.usage.UsageEvents: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.media.JetPlayer: boolean setMuteFlags(int,boolean)>:<public>:<android.media.JetPlayer>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.mock.MockResources: java.lang.String getString(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.AbsSavedState: void <clinit>()>:<static>:<android.view.AbsSavedState:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Fragment: void setAllowReturnTransitionOverlap(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.ScriptIntrinsicLUT: void setAlpha(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: void onDraw(android.graphics.Canvas)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: boolean getDefaultEditable()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.admin.DevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.service.dreams.DreamService: boolean onSearchRequested(android.view.SearchEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void displayCompletions(android.view.inputmethod.CompletionInfo[])>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.content.UriPermission: boolean isWritePermission()>:<public>:<android.content.UriPermission:android.os.Parcelable>
<android.service.notification.NotificationListenerService: int getCurrentListenerHints()>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.midi.MidiManager.OnDeviceOpenedListener: void onDeviceOpened(android.media.midi.MidiDevice)>:<public abstract>:<android.media.midi.MidiManager.OnDeviceOpenedListener>
<android.opengl.EGLObjectHandle: long getNativeHandle()>:<public>:<android.opengl.EGLObjectHandle>
<android.telephony.SignalStrength: int hashCode()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.Display: int getOrientation()>:<public>:<android.view.Display>
<android.speech.RecognitionService.Callback: void rmsChanged(float)>:<public>:<android.speech.RecognitionService.Callback>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View,int)>:<public>:<android.animation.LayoutTransition>
<android.hardware.Camera.Area: void <init>(android.graphics.Rect,int)>:<public>:<android.hardware.Camera.Area>
<android.webkit.WebView: void findAllAsync(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.hardware.Camera: void finalize()>:<protected>:<android.hardware.Camera>
<android.text.style.StrikethroughSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.test.mock.MockPackageManager: boolean hasSystemFeature(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.Camera.Parameters: void setPictureSize(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.view.Window.Callback: void onWindowFocusChanged(boolean)>:<public abstract>:<android.view.Window.Callback>
<android.media.AudioRecord.OnRoutingChangedListener: void onRoutingChanged(android.media.AudioRecord)>:<public abstract>:<android.media.AudioRecord.OnRoutingChangedListener>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.content.Intent: java.lang.String toURI()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter.Builder setTextDirectionHeuristic(android.text.TextDirectionHeuristic)>:<public>:<android.text.BidiFormatter.Builder>
<android.view.View: void jumpDrawablesToCurrentState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.system.StructUtsname: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.system.StructUtsname>
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>:<public>:<android.media.MediaPlayer>
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.os.Process: long getElapsedCpuTime()>:<public static final native>:<android.os.Process>
<android.app.VoiceInteractor.Request: void cancel()>:<public>:<android.app.VoiceInteractor.Request>
<android.media.MediaCodec: java.lang.String getName()>:<public final native>:<android.media.MediaCodec>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.animation.LayoutTransition: boolean isTransitionTypeEnabled(int)>:<public>:<android.animation.LayoutTransition>
<android.view.KeyEvent.Callback: boolean onKeyUp(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.provider.Settings.System: void <clinit>()>:<static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.EGL14: boolean eglQueryContext(android.opengl.EGLDisplay,android.opengl.EGLContext,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.widget.TableRow: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaController: long getFlags()>:<public>:<android.media.session.MediaController>
<android.widget.Scroller: int getFinalY()>:<public final>:<android.widget.Scroller>
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<junit.runner.BaseTestRunner: void setPreference(java.lang.String,java.lang.String)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.R.string: void <init>()>:<public>:<android.R.string>
<android.telecom.RemoteConnection: void <init>()>:<>:<android.telecom.RemoteConnection>
<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.Uri: java.lang.String getScheme()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateSerialNumber(java.math.BigInteger)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.widget.TextView: void drawableStateChanged()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Loader.ForceLoadContentObserver: boolean deliverSelfNotifications()>:<public>:<android.content.Loader.ForceLoadContentObserver:android.database.ContentObserver>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Float getFloatValue(int,int)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.app.VoiceInteractor.Prompt: void <init>(java.lang.CharSequence)>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.AvoidXfermode.Mode: void <clinit>()>:<static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.content.pm.FeatureGroupInfo: void <init>(android.content.pm.FeatureGroupInfo)>:<public>:<android.content.pm.FeatureGroupInfo:android.os.Parcelable>
<android.net.wifi.WifiManager: int getWifiState()>:<public>:<android.net.wifi.WifiManager>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLES10: void glFogfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.view.WindowContentFrameStats: long getFrameReadyTimeNano(int)>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.util.ArrayMap: java.util.Set entrySet()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.media.midi.MidiDeviceInfo: int describeContents()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.widget.ShareActionProvider: void setOnShareTargetSelectedListener(android.widget.ShareActionProvider.OnShareTargetSelectedListener)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<org.xmlpull.v1.XmlSerializer: void endDocument()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.opengl.GLES30: void glUniform2ui(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.accessibility.AccessibilityRecord: int getFromIndex()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.View: void setAccessibilityDelegate(android.view.View.AccessibilityDelegate)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.PendingIntent.OnFinished: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.app.PendingIntent.OnFinished>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.text.BoringLayout: android.text.Layout.Directions getLineDirections(int)>:<public final>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.view.inputmethod.CorrectionInfo: int describeContents()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.app.backup.BackupDataInputStream: void <init>()>:<>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>:<public>:<android.drm.DrmManagerClient>
<android.media.JetPlayer.OnJetEventListener: void onJetPauseUpdate(android.media.JetPlayer,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.webkit.WebSettings: int getMinimumLogicalFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.transition.AutoTransition: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.AutoTransition:android.transition.TransitionSet,android.transition.Transition>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.webkit.WebHistoryItem: void <init>()>:<public>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.provider.ContactsContract.RawContacts.DisplayPhoto: void <init>()>:<>:<android.provider.ContactsContract.RawContacts.DisplayPhoto>
<android.util.AndroidRuntimeException: void <init>()>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ActionMenuView: void onDetachedFromWindow()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.Context: java.io.File getDatabasePath(java.lang.String)>:<public abstract>:<android.content.Context>
<android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentResolver,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)>:<public static>:<android.provider.DocumentsContract>
<android.telephony.SmsMessage: android.telephony.SmsMessage.MessageClass getMessageClass()>:<public>:<android.telephony.SmsMessage>
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.transition.TransitionManager: void <init>()>:<public>:<android.transition.TransitionManager>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.opengl.GLES20: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Double2: void <init>(double,double)>:<public>:<android.renderscript.Double2>
<android.view.View: int getScrollY()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.nsd.NsdManager: void <init>()>:<>:<android.net.nsd.NsdManager>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<public>:<android.drm.DrmInfoEvent:android.drm.DrmEvent>
<android.renderscript.ScriptIntrinsicLUT: void setBlue(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.ViewGroupOverlay: void add(android.view.View)>:<public>:<android.view.ViewGroupOverlay:android.view.ViewOverlay>
<android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.database.MergeCursor: int getInt(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.MediaRouter.Callback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,android.view.KeyEvent)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.widget.RelativeLayout: boolean shouldDelayChildPressedState()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.app.usage.UsageEvents.Event: java.lang.String getPackageName()>:<public>:<android.app.usage.UsageEvents.Event>
<android.opengl.GLES30: void glBindSampler(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.provider.Contacts.Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>:<public static>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<android.view.KeyEvent: int getKeyCode()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RelativeLayout: void setGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaRouter.RouteCategory: void <init>()>:<>:<android.media.MediaRouter.RouteCategory>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.bluetooth.le.ScanFilter: byte[] getServiceData()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.widget.OverScroller: int getStartX()>:<public final>:<android.widget.OverScroller>
<android.service.dreams.DreamService: void setFullscreen(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.app.ActionBar.LayoutParams: void <init>(int,int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.test.mock.MockContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.RegionIterator: void finalize()>:<protected>:<android.graphics.RegionIterator>
<android.media.tv.TvInputService.Session: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.hardware.Camera.Size: void <init>(android.hardware.Camera,int,int)>:<public>:<android.hardware.Camera.Size>
<android.provider.Contacts: void <clinit>()>:<static>:<android.provider.Contacts>
<android.widget.SlidingDrawer: android.view.View getContent()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.media.ExifInterface: boolean hasThumbnail()>:<public>:<android.media.ExifInterface>
<android.preference.RingtonePreference: void setShowDefault(boolean)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.RemoteController.MetadataEditor: void apply()>:<public synchronized>:<android.media.RemoteController.MetadataEditor:android.media.MediaMetadataEditor>
<android.os.PersistableBundle: int describeContents()>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.TrafficStats: long getMobileTxBytes()>:<public static>:<android.net.TrafficStats>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES20>
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort.WebMessageCallback)>:<public abstract>:<android.webkit.WebMessagePort>
<android.provider.ContactsContract.CommonDataKinds.Website: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Website:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.VoiceInteractor.Request: java.lang.String toString()>:<public>:<android.app.VoiceInteractor.Request>
<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.media.audiofx.PresetReverb.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.graphics.Paint: android.graphics.Paint.Join getStrokeJoin()>:<public>:<android.graphics.Paint>
<android.telecom.PhoneAccount: android.telecom.PhoneAccount.Builder toBuilder()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.app.Activity: android.view.View onCreatePanelView(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.opengl.GLSurfaceView.EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.widget.Adapter: java.lang.Object getItem(int)>:<public abstract>:<android.widget.Adapter>
<android.content.ComponentName: android.content.ComponentName createRelative(android.content.Context,java.lang.String)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.telecom.PhoneAccount.Builder: void <init>(android.telecom.PhoneAccountHandle,java.lang.CharSequence)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>:<public static native>:<android.opengl.EGL14>
<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.midi.MidiManager.DeviceCallback: void onDeviceAdded(android.media.midi.MidiDeviceInfo)>:<public>:<android.media.midi.MidiManager.DeviceCallback>
<android.net.rtp.RtpStream: int getRemotePort()>:<public>:<android.net.rtp.RtpStream>
<android.telecom.Call.Details: android.os.Bundle getExtras()>:<public>:<android.telecom.Call.Details>
<android.widget.AutoCompleteTextView: int getThreshold()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AbsListView: int getListPaddingBottom()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaCodecInfo.AudioCapabilities: boolean isSampleRateSupported(int)>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<junit.framework.TestResult: void endTest(junit.framework.Test)>:<public>:<junit.framework.TestResult>
<android.text.method.BaseMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.view.View: android.view.ViewOverlay getOverlay()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ImageView: void setImageURI(android.net.Uri)>:<public>:<android.widget.ImageView:android.view.View>
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)>:<public static final>:<android.media.MediaCodecList>
<android.provider.ContactsContract.Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Data:android.provider.ContactsContract.DataColumnsWithJoins>
<android.widget.ListView: int getFooterViewsCount()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>:<public>:<android.content.res.Resources>
<android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>:<public abstract>:<android.content.Context>
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>:<public>:<android.sax.RootElement:android.sax.Element>
<android.os.WorkSource: void clear()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.preference.DialogPreference: void onClick(android.content.DialogInterface,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.Window: void setGravity(int)>:<public>:<android.view.Window>
<android.preference.Preference: boolean isEnabled()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.widget.AbsSpinner: int pointToPosition(int,int)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>:<public native>:<android.media.MediaMetadataRetriever>
<android.widget.AbsListView.OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>:<public abstract>:<android.widget.AbsListView.OnScrollListener>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.system.Os: java.lang.String getenv(java.lang.String)>:<public static>:<android.system.Os>
<android.animation.RectEvaluator: void <init>()>:<public>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.widget.Spinner: void setDropDownWidth(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.webkit.WebSettings: boolean getBuiltInZoomControls()>:<public abstract>:<android.webkit.WebSettings>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearActions()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.Matrix2f: float[] getArray()>:<public>:<android.renderscript.Matrix2f>
<android.view.ScaleGestureDetector: void setQuickScaleEnabled(boolean)>:<public>:<android.view.ScaleGestureDetector>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.service.media.MediaBrowserService: void <init>()>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)>:<public>:<android.media.MediaMetadataRetriever>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Point getUpperLeftPoint()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.opengl.GLES31: int glCreateShaderProgramv(int,java.lang.String[])>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.net.NetworkRequest: int describeContents()>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.accounts.AccountManager: boolean notifyAccountAuthenticated(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.content.pm.PackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.ViewAnimator: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.Session: long onTimeShiftGetCurrentPosition()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.LayerDrawable: int getAlpha()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.MediaCodecInfo.CodecCapabilities: void <init>()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.widget.BaseExpandableListAdapter: void notifyDataSetChanged()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.database.CursorWrapper: int getPosition()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.admin.DeviceAdminReceiver: void onSystemUpdatePending(android.content.Context,android.content.Intent,long)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle,android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.service.dreams.DreamService: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.service.notification.StatusBarNotification: java.lang.String toString()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.webkit.ClientCertRequest: void cancel()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.graphics.drawable.ColorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.animation.StateListAnimator: void <init>()>:<public>:<android.animation.StateListAnimator:java.lang.Cloneable>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>:<public>:<android.preference.PreferenceManager>
<android.widget.PopupWindow: void <init>(int,int)>:<public>:<android.widget.PopupWindow>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceDisconnected(int)>:<public abstract>:<android.bluetooth.BluetoothProfile.ServiceListener>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)>:<public>:<android.app.WallpaperManager>
<android.webkit.WebChromeClient.FileChooserParams: int getMode()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<org.xmlpull.v1.sax2.Driver: java.lang.String getSystemId()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.LocalActivityManager: void dispatchStop()>:<public>:<android.app.LocalActivityManager>
<android.app.assist.AssistStructure.ViewNode: int getTextStyle()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.util.SparseBooleanArray: java.lang.String toString()>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.webkit.WebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)>:<public>:<android.webkit.WebViewClient>
<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>:<public>:<android.content.res.Resources>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>:<public abstract>:<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.app.FragmentBreadCrumbs: void setActivity(android.app.Activity)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.text.TextUtils.SimpleStringSplitter: void setString(java.lang.String)>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.widget.Filter: java.lang.CharSequence convertResultToString(java.lang.Object)>:<public>:<android.widget.Filter>
<android.content.pm.ServiceInfo: void <init>()>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.transition.Slide: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>:<public final>:<android.view.AbsSavedState:android.os.Parcelable>
<android.view.animation.Animation: void setFillEnabled(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationFailed()>:<public>:<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback>
<android.widget.Toolbar: int getContentInsetEnd()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.hardware.usb.UsbEndpoint: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(java.lang.Class)>:<public>:<android.app.TaskStackBuilder>
<android.graphics.Canvas.VertexMode: void <clinit>()>:<static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.system.Os: void mincore(long,long,byte[])>:<public static>:<android.system.Os>
<android.app.SharedElementCallback: void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback.OnSharedElementsReadyListener)>:<public>:<android.app.SharedElementCallback>
<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>:<public>:<android.speech.tts.TextToSpeech>
<android.net.wifi.WifiManager.WifiLock: java.lang.String toString()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.nfc.tech.NfcA: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.media.session.MediaController.PlaybackInfo: void <init>()>:<>:<android.media.session.MediaController.PlaybackInfo>
<android.hardware.Sensor: int getType()>:<public>:<android.hardware.Sensor>
<android.text.format.Time: boolean parse3339(java.lang.String)>:<public>:<android.text.format.Time>
<android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActivityManager: int getLockTaskModeState()>:<public>:<android.app.ActivityManager>
<android.widget.ProgressBar: void incrementProgressBy(int)>:<public final synchronized>:<android.widget.ProgressBar:android.view.View>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.Window.Callback: boolean onCreatePanelMenu(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>:<public static>:<junit.framework.Assert>
<android.view.MotionEvent: int getButtonState()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.transition.TransitionSet: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.test.mock.MockContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.lang.String)>:<public static>:<android.gesture.GestureLibraries>
<android.widget.TableRow: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.AudioManager: void loadSoundEffects()>:<public>:<android.media.AudioManager>
<android.hardware.usb.UsbEndpoint: java.lang.String toString()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.webkit.WebView: void reload()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>:<public>:<android.content.ContentProviderClient>
<android.transition.ChangeImageTransform: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.telecom.Connection: android.os.Bundle getExtras()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.hardware.camera2.params.InputConfiguration: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.InputConfiguration>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public final>:<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.nfc.cardemulation.CardEmulation: boolean registerAidsForService(android.content.ComponentName,java.lang.String,java.util.List)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.graphics.Matrix.ScaleToFit: void <clinit>()>:<static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)>:<public>:<android.net.ConnectivityManager>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setSubtitle(java.lang.CharSequence)>:<public>:<android.media.MediaDescription.Builder>
<android.telecom.Call.Details: long getConnectTimeMillis()>:<public final>:<android.telecom.Call.Details>
<android.test.mock.MockContext: void clearWallpaper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.Handler: void removeMessages(int)>:<public final>:<android.os.Handler>
<android.widget.TabWidget: void setLeftStripDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.ZoomButtonsController: android.view.View getZoomControls()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.content.pm.LauncherApps.Callback: void onPackagesAvailable(java.lang.String[],android.os.UserHandle,boolean)>:<public abstract>:<android.content.pm.LauncherApps.Callback>
<android.text.style.UnderlineSpan: int describeContents()>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putLong(int,long)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.hardware.input.InputManager: void <init>()>:<>:<android.hardware.input.InputManager>
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.view.MotionEvent: void setAction(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.RippleDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onFontScaleChanged(float)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.webkit.WebView: void onResume()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.EdgeEffect: void setSize(int,int)>:<public>:<android.widget.EdgeEffect>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityForConsumptionEnd(java.util.Date)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.provider.DocumentsContract: android.net.Uri buildSearchDocumentsUri(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.test.SingleLaunchActivityTestCase: void testActivityTestCaseSetUpProperly()>:<public>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>:<public>:<android.os.PowerManager>
<junit.framework.TestResult: java.util.Enumeration errors()>:<public synchronized>:<junit.framework.TestResult>
<android.opengl.GLES10: void glClearDepthx(int)>:<public static native>:<android.opengl.GLES10>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setMultiplicity(java.lang.String)>:<public>:<android.text.style.TtsSpan.SemioticClassBuilder:android.text.style.TtsSpan.Builder>
<android.app.Dialog: void setContentView(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.WifiManager: void finalize()>:<protected>:<android.net.wifi.WifiManager>
<android.widget.ArrayAdapter: void insert(java.lang.Object,int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.animation.ObjectAnimator: java.lang.Object getTarget()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.speech.tts.UtteranceProgressListener: void onError(java.lang.String,int)>:<public>:<android.speech.tts.UtteranceProgressListener>
<android.preference.MultiSelectListPreference: void setEntryValues(int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.net.wifi.WifiConfiguration.KeyMgmt: void <init>()>:<>:<android.net.wifi.WifiConfiguration.KeyMgmt>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void <init>()>:<>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.view.View.AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.telecom.RemoteConnection: void hold()>:<public>:<android.telecom.RemoteConnection>
<android.view.ScaleGestureDetector: float getScaleFactor()>:<public>:<android.view.ScaleGestureDetector>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TextView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AutoCompleteTextView.OnDismissListener: void onDismiss()>:<public abstract>:<android.widget.AutoCompleteTextView.OnDismissListener>
<android.view.ViewGroup: void setLayoutMode(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)>:<public>:<android.media.MediaExtractor>
<android.os.Bundle: void putFloat(java.lang.String,float)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.animation.ValueAnimator: void removeAllUpdateListeners()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path,int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.opengl.GLES30: void glVertexAttribI4i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telephony.CellIdentityWcdma: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.widget.TextView: void setInputExtras(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.le.ScanResult: boolean equals(java.lang.Object)>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.app.FragmentTransaction: android.app.FragmentTransaction detach(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.content.Intent: java.util.Set getCategories()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.inputmethodservice.Keyboard: void setHorizontalGap(int)>:<protected>:<android.inputmethodservice.Keyboard>
<android.test.RenamingDelegatingContext: java.io.File getCacheDir()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(int)>:<public>:<android.app.AlertDialog.Builder>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<android.hardware.camera2.params.MeteringRectangle: void <init>(int,int,int,int,int)>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,int,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.TabHost: void setup()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putText(java.lang.String,java.lang.CharSequence)>:<public>:<android.media.MediaMetadata.Builder>
<android.content.res.Resources.Theme: void <init>(android.content.res.Resources)>:<>:<android.content.res.Resources.Theme>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] mapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.hardware.camera2.CaptureResult: void <init>()>:<>:<android.hardware.camera2.CaptureResult:android.hardware.camera2.CameraMetadata>
<android.telephony.PhoneNumberUtils: boolean is12Key(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings.PluginState)>:<public abstract>:<android.webkit.WebSettings>
<android.app.job.JobInfo: long getMinLatencyMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.graphics.Outline: float getAlpha()>:<public>:<android.graphics.Outline>
<android.renderscript.RenderScript: void finish()>:<public>:<android.renderscript.RenderScript>
<android.hardware.camera2.CaptureRequest.Builder: void <init>()>:<>:<android.hardware.camera2.CaptureRequest.Builder>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>:<public>:<org.json.JSONObject>
<android.preference.PreferenceFragment: void onDestroyView()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean isProfileOwnerApp(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.provider.Contacts.Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>:<public static final>:<android.provider.Contacts.Organizations:android.provider.BaseColumns,android.provider.Contacts.OrganizationColumns>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create1D(android.renderscript.RenderScript,android.renderscript.Allocation)>:<public static>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.media.JetPlayer: void <init>()>:<>:<android.media.JetPlayer>
<android.hardware.Sensor: java.lang.String getName()>:<public>:<android.hardware.Sensor>
<android.text.Html: java.lang.String toHtml(android.text.Spanned)>:<public static>:<android.text.Html>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>:<public>:<android.app.WallpaperManager>
<android.provider.Settings.NameValueTable: void <init>()>:<public>:<android.provider.Settings.NameValueTable:android.provider.BaseColumns>
<android.net.TrafficStats: long getUidTxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.net.sip.SipSession.Listener: void onRegistrationTimeout(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.text.BidiFormatter: boolean getStereoReset()>:<public>:<android.text.BidiFormatter>
<android.renderscript.ScriptIntrinsicBLAS: void ZGEMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.Chronometer: java.lang.CharSequence getContentDescription()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.hardware.Camera.Parameters: java.lang.String getSceneMode()>:<public>:<android.hardware.Camera.Parameters>
<android.hardware.camera2.params.ColorSpaceTransform: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<android.content.IntentFilter: java.lang.String getCategory(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.os.Parcel: void <clinit>()>:<static>:<android.os.Parcel>
<android.hardware.camera2.CaptureRequest: void <clinit>()>:<static>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.AbsSavedState:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pDevice: boolean isGroupOwner()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.AdapterView: void addView(android.view.View,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.Window: boolean performPanelIdentifierAction(int,int,int)>:<public abstract>:<android.view.Window>
<android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.Switch: void setTrackTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.ViewDebug.ExportedProperty: boolean resolveId()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.gesture.GestureStore: java.util.Set getGestureEntries()>:<public>:<android.gesture.GestureStore>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>:<public static native>:<android.opengl.Visibility>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getItemClickListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.ListPopupWindow>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<android.system.Os: int pread(java.io.FileDescriptor,byte[],int,int,long)>:<public static>:<android.system.Os>
<android.widget.Switch: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.res.Resources: void flushLayoutCache()>:<public final>:<android.content.res.Resources>
<android.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattService getService(java.util.UUID)>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.AbsListView: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>:<public static>:<android.widget.Toast>
<android.widget.TableRow: int getVirtualChildCount()>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker.OnValueChangeListener)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowInsets: int getStableInsetTop()>:<public>:<android.view.WindowInsets>
<android.graphics.drawable.VectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.animation.LayoutTransition: void setDuration(long)>:<public>:<android.animation.LayoutTransition>
<android.util.ArrayMap: java.lang.Object valueAt(int)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.ListView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.SimpleAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.service.dreams.DreamService: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.webkit.WebChromeClient: void onPermissionRequest(android.webkit.PermissionRequest)>:<public>:<android.webkit.WebChromeClient>
<android.os.Parcel: byte[] createByteArray()>:<public final>:<android.os.Parcel>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.app.FragmentHostCallback: boolean onUseFragmentManagerInflaterFactory()>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.net.sip.SipRegistrationListener: void onRegistrationFailed(java.lang.String,int,java.lang.String)>:<public abstract>:<android.net.sip.SipRegistrationListener>
<android.media.MediaRouter.UserRouteInfo: void setVolumeHandling(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.app.Fragment: java.lang.Object getHost()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.speech.tts.Voice: void <init>(java.lang.String,java.util.Locale,int,int,boolean,java.util.Set)>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.animation.Animation: int getRepeatMode()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.provider.DocumentsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.PackageItemInfo>
<android.hardware.Camera: android.hardware.Camera open()>:<public static>:<android.hardware.Camera>
<android.content.RestrictionEntry: java.lang.String[] getChoiceEntries()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.view.inputmethod.InputMethodInfo: int describeContents()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.Image.Plane: void <init>()>:<>:<android.media.Image.Plane>
<android.view.animation.Animation: long computeDurationHint()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.View: void dispatchSystemUiVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebView: void documentHasImages(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>:<public>:<android.text.style.CharacterStyle>
<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter.FilterListener)>:<public final>:<android.widget.Filter>
<android.service.media.MediaBrowserService.Result: void <init>(android.service.media.MediaBrowserService)>:<>:<android.service.media.MediaBrowserService.Result>
<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.webkit.GeolocationPermissions: void getOrigins(android.webkit.ValueCallback)>:<public>:<android.webkit.GeolocationPermissions>
<android.app.Dialog: void onDetachedFromWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.TimePicker: int getMinute()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockDialogInterface: void cancel()>:<public>:<android.test.mock.MockDialogInterface:android.content.DialogInterface>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReferences(android.content.ContentValues)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattDescriptor,boolean,boolean,int,byte[])>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.test.FlakyTest: int tolerance()>:<public abstract>:<android.test.FlakyTest:java.lang.annotation.Annotation>
<android.renderscript.FieldPacker: double subF64()>:<public>:<android.renderscript.FieldPacker>
<android.text.style.TtsSpan.TelephoneBuilder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.TelephoneBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityForConsumptionEnd(java.util.Date)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.inputmethodservice.Keyboard.Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.nfc.tech.MifareClassic: void <init>()>:<>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setAvailableOffline(boolean)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>:<public>:<android.graphics.Canvas>
<android.media.midi.MidiDeviceStatus: android.media.midi.MidiDeviceInfo getDeviceInfo()>:<public>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.view.animation.Animation: long getStartOffset()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.os.StrictMode.VmPolicy: void <init>()>:<>:<android.os.StrictMode.VmPolicy>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setMonth(int)>:<public>:<android.text.style.TtsSpan.DateBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>:<public static native>:<android.opengl.EGL14>
<android.widget.CompoundButton: void drawableStateChanged()>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.provider.ContactsContract.CommonDataKinds.Contactables: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.Contactables:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.animation.AnimatorListenerAdapter: void onAnimationPause(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection build()>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.util.JsonWriter: android.util.JsonWriter value(boolean)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.util.LongSparseArray: void removeAt(int)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.opengl.GLES10: void glLoadIdentity()>:<public static native>:<android.opengl.GLES10>
<android.view.ActionMode: java.lang.CharSequence getSubtitle()>:<public abstract>:<android.view.ActionMode>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.ScrollView: boolean isSmoothScrollingEnabled()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.system.Os: void remove(java.lang.String)>:<public static>:<android.system.Os>
<android.text.method.ArrowKeyMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.renderscript.ScriptIntrinsicBLAS: android.renderscript.ScriptIntrinsicBLAS create(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>:<public>:<android.location.Geocoder>
<android.widget.RelativeLayout.LayoutParams: int getRule(int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.hardware.camera2.params.TonemapCurve: void copyColorCurve(int,float[],int)>:<public>:<android.hardware.camera2.params.TonemapCurve>
<android.media.browse.MediaBrowser.ConnectionCallback: void <init>()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.telephony.SmsMessage.SubmitPdu: void <init>()>:<>:<android.telephony.SmsMessage.SubmitPdu>
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>:<public abstract>:<android.content.Context>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.widget.AutoCompleteTextView: void clearListSelection()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.res.TypedArray: int getLayoutDimension(int,int)>:<public>:<android.content.res.TypedArray>
<android.media.tv.TvView: boolean dispatchUnhandledInputEvent(android.view.InputEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.inputmethodservice.InputMethodService: void onFinishInput()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Parcel: void writeFloat(float)>:<public final>:<android.os.Parcel>
<android.os.ParcelFileDescriptor.OnCloseListener: void onClose(java.io.IOException)>:<public abstract>:<android.os.ParcelFileDescriptor.OnCloseListener>
<android.util.Property: void set(java.lang.Object,java.lang.Object)>:<public>:<android.util.Property>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.view.View: void setScrollBarStyle(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<org.json.JSONObject: boolean optBoolean(java.lang.String)>:<public>:<org.json.JSONObject>
<android.location.Address: boolean hasLatitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.KeyCharacterMap: void <clinit>()>:<static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.widget.PopupWindow: void <init>(android.view.View,int,int)>:<public>:<android.widget.PopupWindow>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.provider.Telephony.Mms: void <clinit>()>:<static>:<android.provider.Telephony.Mms:android.provider.Telephony.BaseMmsColumns>
<android.content.SearchRecentSuggestionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.view.ViewGroup: int getChildCount()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.telecom.RemoteConference: int getConnectionCapabilities()>:<public final>:<android.telecom.RemoteConference>
<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.telecom.Call: java.lang.String getRemainingPostDialSequence()>:<public>:<android.telecom.Call>
<android.bluetooth.BluetoothGattCallback: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.renderscript.ScriptIntrinsicHistogram: void setOutput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.LayerDrawable: void setLayerGravity(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.BidirectionalTypeConverter: void <init>(java.lang.Class,java.lang.Class)>:<public>:<android.animation.BidirectionalTypeConverter:android.animation.TypeConverter>
<android.widget.Switch: void setThumbTextPadding(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telephony.CellInfoGsm: int describeContents()>:<public>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.text.style.MaskFilterSpan: void <init>(android.graphics.MaskFilter)>:<public>:<android.text.style.MaskFilterSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager()>:<public>:<android.telecom.TelecomManager>
<android.transition.Visibility: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.renderscript.Type.CubemapFace: void <clinit>()>:<static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.graphics.Camera: float getLocationY()>:<public native>:<android.graphics.Camera>
<android.view.ViewTreeObserver: void <init>()>:<>:<android.view.ViewTreeObserver>
<android.text.method.MetaKeyKeyListener: long resetLockedMeta(long)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.widget.HorizontalScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long)>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<android.graphics.Point: int describeContents()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.print.PrinterCapabilitiesInfo: int getDuplexModes()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectCleartextNetwork()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setAnimacy(java.lang.String)>:<public>:<android.text.style.TtsSpan.SemioticClassBuilder:android.text.style.TtsSpan.Builder>
<android.text.util.Linkify.MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>:<public abstract>:<android.text.util.Linkify.MatchFilter>
<android.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)>:<public>:<android.app.SharedElementCallback>
<android.database.SQLException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.Notification: void <init>(android.os.Parcel)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.content.Loader.ForceLoadContentObserver: void onChange(boolean)>:<public>:<android.content.Loader.ForceLoadContentObserver:android.database.ContentObserver>
<android.net.ConnectivityManager: void setNetworkPreference(int)>:<public>:<android.net.ConnectivityManager>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>()>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: boolean isCursorVisible()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AbsListView: void onTouchModeChanged(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.DropBoxManager.Entry: int getFlags()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.media.session.PlaybackState: java.lang.CharSequence getErrorMessage()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.util.SparseIntArray: void delete(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.widget.RatingBar: void onMeasure(int,int)>:<protected synchronized>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.nfc.cardemulation.HostApduService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.nfc.cardemulation.HostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.media.AudioManager: void unregisterRemoteController(android.media.RemoteController)>:<public>:<android.media.AudioManager>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.MediaCodecInfo.AudioCapabilities: void <init>()>:<>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>:<public static>:<android.text.TextUtils>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate,java.lang.String)>:<public>:<android.net.http.SslError>
<android.app.backup.BackupAgent: void <init>()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Binder: void flushPendingCommands()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.widget.TextView: int getMinWidth()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewStructure: void setChildCount(int)>:<public abstract>:<android.view.ViewStructure>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.net.wifi.WifiEnterpriseConfig: int getPhase2Method()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.BaseInterpolator>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.AdapterView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.provider.CalendarContract.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentProviderClient)>:<public static>:<android.provider.CalendarContract.EventsEntity:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.EventsColumns>
<android.net.sip.SipAudioCall: boolean isMuted()>:<public>:<android.net.sip.SipAudioCall>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.pm.ComponentInfo: int getIconResource()>:<public final>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.telephony.PhoneNumberUtils: android.text.style.TtsSpan createTtsSpan(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.media.audiofx.Virtualizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Virtualizer,int,int,short)>:<public abstract>:<android.media.audiofx.Virtualizer.OnParameterChangeListener>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeExiting(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.mtp.MtpStorageInfo: java.lang.String getDescription()>:<public final>:<android.mtp.MtpStorageInfo>
<android.service.carrier.MessagePdu: java.util.List getPdus()>:<public>:<android.service.carrier.MessagePdu:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: int getOpacity()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.Gallery: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumHeight()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.net.VpnService: void <init>()>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.widget.ViewSwitcher.ViewFactory: android.view.View makeView()>:<public abstract>:<android.widget.ViewSwitcher.ViewFactory>
<android.media.session.MediaController: android.media.session.MediaController.PlaybackInfo getPlaybackInfo()>:<public>:<android.media.session.MediaController>
<android.util.SparseArray: void clear()>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.graphics.PointF: java.lang.String toString()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.view.accessibility.AccessibilityNodeInfo: void <init>()>:<>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.MotionEvent: boolean isButtonPressed(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaMetadataEditor: long getLong(int,long)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.media.tv.TvInputInfo: java.lang.String toString()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.Drawable>
<android.widget.RemoteViews: void setAccessibilityTraversalAfter(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.PrinterId: int describeContents()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap.Config,boolean)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.view.View: void draw(android.graphics.Canvas)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.ServiceState: boolean getIsManualSelection()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.widget.AnalogClock: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.bluetooth.BluetoothGattDescriptor: boolean setValue(byte[])>:<public>:<android.bluetooth.BluetoothGattDescriptor>
<android.animation.AnimatorSet: void start()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.MediaMetadata: java.util.Set keySet()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Notification.WearableExtender: boolean getContentIntentAvailableOffline()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.LayerDrawable: int getLayerInsetLeft(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.DocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.text.LoginFilter: boolean isAllowed(char)>:<public abstract>:<android.text.LoginFilter:android.text.InputFilter>
<android.os.StatFs: void restat(java.lang.String)>:<public>:<android.os.StatFs>
<android.graphics.PointF: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.app.NativeActivity: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.Context: java.lang.ClassLoader getClassLoader()>:<public abstract>:<android.content.Context>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.graphics.ColorMatrix: void <init>(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)>:<public>:<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Shader>
<android.media.tv.TvInputService.Session: void onSetCaptionEnabled(boolean)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession.CommandRequest: java.lang.String getCommand()>:<public>:<android.service.voice.VoiceInteractionSession.CommandRequest:android.service.voice.VoiceInteractionSession.Request>
<android.renderscript.Allocation: void copyFrom(java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.service.voice.VoiceInteractionService: void <init>()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.WindowInsets: int getStableInsetLeft()>:<public>:<android.view.WindowInsets>
<android.graphics.pdf.PdfRenderer.Page: void finalize()>:<protected>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.view.Window: void setAllowReturnTransitionOverlap(boolean)>:<public>:<android.view.Window>
<android.text.method.ReplacementTransformationMethod: char[] getOriginal()>:<protected abstract>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.test.mock.MockPackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>:<public static native>:<android.opengl.EGL14>
<android.view.MotionEvent.PointerCoords: void clear()>:<public>:<android.view.MotionEvent.PointerCoords>
<org.xmlpull.v1.XmlPullParserException: int getLineNumber()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.media.session.MediaSession.QueueItem: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.test.mock.MockResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.Toolbar: java.lang.CharSequence getSubtitle()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.net.NetworkRequest: void <clinit>()>:<static>:<android.net.NetworkRequest:android.os.Parcelable>
<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>:<public>:<android.graphics.Paint>
<android.view.inputmethod.InputMethodSession: void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.tv.TvView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setDay(int)>:<public>:<android.text.style.TtsSpan.DateBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.text.style.BackgroundColorSpan: int getSpanTypeId()>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>:<public static>:<android.preference.PreferenceManager>
<android.preference.EditTextPreference: android.widget.EditText getEditText()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.telecom.TelecomManager: void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)>:<public>:<android.telecom.TelecomManager>
<android.view.DragEvent: float getY()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.util.Log: int i(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.database.CursorJoiner: java.lang.Object next()>:<public volatile>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.media.MediaDrm.ProvisionRequest: byte[] getData()>:<public>:<android.media.MediaDrm.ProvisionRequest>
<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.hardware.usb.UsbDeviceConnection: void close()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.view.InputDevice: boolean[] hasKeys(int[])>:<public transient>:<android.view.InputDevice:android.os.Parcelable>
<android.net.sip.SipRegistrationListener: void onRegistrationDone(java.lang.String,long)>:<public abstract>:<android.net.sip.SipRegistrationListener>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isRevoked()>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>:<public>:<org.json.JSONObject>
<android.database.Cursor: android.net.Uri getNotificationUri()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.telephony.CellInfoLte: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.telecom.Call.Details: int getCallCapabilities()>:<public>:<android.telecom.Call.Details>
<android.drm.DrmInfo: void <init>(int,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.graphics.Path.Op: android.graphics.Path.Op[] values()>:<public static>:<android.graphics.Path.Op:java.lang.Enum>
<android.preference.Preference: android.preference.Preference findPreferenceInHierarchy(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.view.ActionProvider: android.view.View onCreateActionView()>:<public abstract>:<android.view.ActionProvider>
<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>:<public abstract>:<android.app.FragmentManager>
<android.graphics.Movie: int height()>:<public native>:<android.graphics.Movie>
<android.app.Activity: boolean isDestroyed()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public abstract>:<android.content.Context>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.view.animation.AnimationUtils: void <init>()>:<public>:<android.view.animation.AnimationUtils>
<android.text.style.TabStopSpan.Standard: int getTabStop()>:<public>:<android.text.style.TabStopSpan.Standard:android.text.style.TabStopSpan>
<android.test.AndroidTestCase: void assertActivityRequiresPermission(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder addSupportedUriScheme(java.lang.String)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.telecom.PhoneAccountHandle: boolean equals(java.lang.Object)>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.nfc.FormatException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.nfc.FormatException:java.lang.Exception,java.lang.Throwable>
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.hardware.usb.UsbConfiguration: int getMaxPower()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.os.PersistableBundle: void <init>()>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.speech.tts.TextToSpeech: int playSilence(long,int,java.util.HashMap)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.TextView: java.lang.CharSequence getHint()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.telecom.Call.Details: void <init>()>:<>:<android.telecom.Call.Details>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.AbsListView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.IntentSender: int describeContents()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult: int[] getMessageRefs()>:<public>:<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult>
<android.app.assist.AssistStructure.ViewNode: int[] getTextLineBaselines()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.view.ViewGroup: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.hardware.camera2.CameraManager: void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager.AvailabilityCallback)>:<public>:<android.hardware.camera2.CameraManager>
<android.security.keystore.KeyProtection: void <init>()>:<>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.media.AudioManager: void unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)>:<public>:<android.media.AudioManager>
<android.media.MediaRouter.RouteInfo: java.lang.Object getTag()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.app.AlertDialog: android.widget.ListView getListView()>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.content.RestrictionEntry: void setChoiceEntries(java.lang.String[])>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.media.MediaPlayer: void pause()>:<public>:<android.media.MediaPlayer>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace valueOf(java.lang.String)>:<public static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.gesture.Gesture: android.graphics.Path toPath()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority[] values()>:<public static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,int[],int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int)>:<public abstract>:<android.media.audiofx.Visualizer.OnDataCaptureListener>
<android.telephony.CellInfoCdma: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.MotionEvent: float getToolMajor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaCodec.Callback: void <init>()>:<public>:<android.media.MediaCodec.Callback>
<android.view.ScaleGestureDetector: boolean isQuickScaleEnabled()>:<public>:<android.view.ScaleGestureDetector>
<android.content.res.Resources: void finishPreloading()>:<public final>:<android.content.res.Resources>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void close()>:<public>:<android.os.ParcelFileDescriptor.AutoCloseOutputStream:java.io.FileOutputStream,java.io.OutputStream>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.drm.DrmRights: java.lang.String getSubscriptionId()>:<public>:<android.drm.DrmRights>
<android.transition.Visibility: int getMode()>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.view.MotionEvent: int findPointerIndex(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.app.Instrumentation.ActivityResult: int getResultCode()>:<public>:<android.app.Instrumentation.ActivityResult>
<android.hardware.camera2.params.InputConfiguration: int hashCode()>:<public>:<android.hardware.camera2.params.InputConfiguration>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>:<public>:<android.media.MediaMetadataRetriever>
<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.drawable.AnimatedVectorDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.view.WindowId: int describeContents()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.HorizontalScrollView: void addView(android.view.View)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingStarted(android.gesture.GestureOverlayView)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturingListener>
<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder.Callback)>:<public abstract>:<android.view.SurfaceHolder>
<android.widget.CheckedTextView: void <init>(android.content.Context)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.View: void setBackground(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.framework.TestSuite: int countTestCases()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.widget.TableLayout: android.widget.TableLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ImageView: void setImageLevel(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.hardware.usb.UsbRequest: boolean cancel()>:<public>:<android.hardware.usb.UsbRequest>
<android.test.ActivityInstrumentationTestCase: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Debug: void dumpHprofData(java.lang.String)>:<public static>:<android.os.Debug>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintJobInfo.Builder: void setPages(android.print.PageRange[])>:<public>:<android.print.PrintJobInfo.Builder>
<android.text.TextUtils.SimpleStringSplitter: void remove()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ImageView: int getBaseline()>:<public>:<android.widget.ImageView:android.view.View>
<android.provider.Telephony.Mms.Rate: void <init>()>:<>:<android.provider.Telephony.Mms.Rate>
<android.provider.Contacts.People.Extensions: void <init>()>:<>:<android.provider.Contacts.People.Extensions:android.provider.BaseColumns,android.provider.Contacts.ExtensionsColumns>
<android.view.animation.LayoutAnimationController: boolean isDone()>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.Chronometer: java.lang.String getFormat()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.app.Dialog: android.app.ActionBar getActionBar()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.CheckedTextView: void setCheckMarkTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.Notification.BigTextStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>:<public static>:<android.os.Messenger:android.os.Parcelable>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.pdf.PdfDocument.PageInfo: void <init>()>:<>:<android.graphics.pdf.PdfDocument.PageInfo>
<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>:<public>:<android.media.session.MediaController>
<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.ImageView: void setImageResource(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.provider.MediaStore.Images.Thumbnails: void <init>()>:<public>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.content.pm.LauncherApps: java.util.List getActivityList(java.lang.String,android.os.UserHandle)>:<public>:<android.content.pm.LauncherApps>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.ScriptIntrinsicBlend create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>:<public final>:<android.hardware.Camera>
<android.test.suitebuilder.TestMethod: void <init>(junit.framework.TestCase)>:<public>:<android.test.suitebuilder.TestMethod>
<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.hardware.camera2.params.RggbChannelVector: void <init>(float,float,float,float)>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.app.Service: void onDestroy()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.view.ViewStructure: void setId(int,java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<android.view.ViewStructure>
<android.hardware.usb.UsbDevice: int getDeviceSubclass()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.location.GpsSatellite: int getPrn()>:<public>:<android.location.GpsSatellite>
<android.widget.Spinner: boolean performClick()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getHint()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.content.pm.PackageInstaller.SessionParams: void setSize(long)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener: boolean onBreadCrumbClick(android.app.FragmentManager.BackStackEntry,int)>:<public abstract>:<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener>
<android.preference.PreferenceActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.MotionEvent: float getAxisValue(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.telephony.TelephonyManager: boolean setVoiceMailNumber(java.lang.String,java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.os.HandlerThread: void <init>(java.lang.String,int)>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.provider.ContactsContract.CommonDataKinds.Relation: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Relation:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.ContextWrapper: java.lang.String getPackageName()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.provider.ContactsContract.CommonDataKinds.Event: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Event:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent.PointerProperties[],android.view.MotionEvent.PointerCoords[],int,int,float,float,int,int,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ImageView:android.view.View>
<android.gesture.GestureOverlayView: boolean isFadeEnabled()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.Drawable>
<android.widget.AbsSpinner: int getCount()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattCharacteristic)>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.media.MediaCodec: void setCallback(android.media.MediaCodec.Callback,android.os.Handler)>:<public>:<android.media.MediaCodec>
<android.graphics.drawable.PictureDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.telephony.NeighboringCellInfo: int getCid()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.hardware.camera2.params.ColorSpaceTransform: android.util.Rational getElement(int,int)>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain()>:<public static>:<android.view.accessibility.AccessibilityRecord>
<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.MediaStore.Images.Media: void <init>()>:<public>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.telephony.ServiceState: void setState(int)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.graphics.Rect: void set(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>:<public>:<android.media.MediaMetadataRetriever>
<android.renderscript.Element: android.renderscript.Element BOOLEAN(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.media.audiofx.Visualizer: int getMaxCaptureRate()>:<public static native>:<android.media.audiofx.Visualizer>
<android.app.ApplicationErrorReport.RunningServiceInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.view.inputmethod.EditorInfo: void <clinit>()>:<static>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder setLatestTimestamp(long)>:<public>:<android.app.Notification.CarExtender.Builder>
<android.app.ActivityManager.MemoryInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources.Theme)>:<public static>:<android.graphics.drawable.Drawable>
<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.TouchDelegate>
<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.text.Layout: float getSpacingMultiplier()>:<public final>:<android.text.Layout>
<android.database.sqlite.SQLiteClosable: void acquireReference()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.app.Dialog: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.widget.Scroller: boolean isFinished()>:<public final>:<android.widget.Scroller>
<android.service.chooser.ChooserTarget: void <clinit>()>:<static>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.view.View: java.lang.String getTransitionName()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat valueOf(java.lang.String)>:<public static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.widget.AdapterViewAnimator: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.media.MediaDrm: void <init>(java.util.UUID)>:<public>:<android.media.MediaDrm>
<android.media.SoundPool: void pause(int)>:<public final native>:<android.media.SoundPool>
<android.net.ConnectivityManager: android.net.Network getBoundNetworkForProcess()>:<public>:<android.net.ConnectivityManager>
<android.view.textservice.SuggestionsInfo: int getCookie()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putBitmap(int,android.graphics.Bitmap)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.app.ActionBar: void setSubtitle(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.gesture.GestureOverlayView.OnGesturePerformedListener: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturePerformedListener>
<android.view.animation.Animation: void startNow()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.text.method.ArrowKeyMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.print.PrintDocumentInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setBigContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.opengl.GLSurfaceView: void setDebugFlags(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.telecom.TelecomManager: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>:<public>:<android.telecom.TelecomManager>
<junit.framework.TestCase: void <init>(java.lang.String)>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.app.Instrumentation: void onDestroy()>:<public>:<android.app.Instrumentation>
<android.system.Os: void listen(java.io.FileDescriptor,int)>:<public static>:<android.system.Os>
<android.widget.QuickContactBadge: void setImageToDefault()>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.TableLayout: boolean isColumnCollapsed(int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.AnimatedStateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.ListView.FixedViewInfo: void <init>(android.widget.ListView)>:<public>:<android.widget.ListView.FixedViewInfo>
<android.hardware.camera2.params.ColorSpaceTransform: void copyElements(android.util.Rational[],int)>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<android.view.accessibility.AccessibilityWindowInfo: void recycle()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setWillNotDraw(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: void finishActivity(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.CheckedTextView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.content.PeriodicSync: boolean equals(java.lang.Object)>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<android.view.animation.AnimationSet: long getStartTime()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public abstract>:<android.text.method.MovementMethod>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setStringArgument(java.lang.String,java.lang.String)>:<public>:<android.text.style.TtsSpan.Builder>
<android.app.Activity: void setMediaController(android.media.session.MediaController)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.job.JobScheduler: java.util.List getAllPendingJobs()>:<public abstract>:<android.app.job.JobScheduler>
<android.content.Context: void sendBroadcast(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.accessibility.AccessibilityNodeInfo: boolean isMultiLine()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.textservice.SpellCheckerService.Session: android.os.Bundle getBundle()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.test.ViewAsserts: void assertOffScreenBelow(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.app.Activity: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.bluetooth.BluetoothGattServer: boolean removeService(android.bluetooth.BluetoothGattService)>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.telephony.SubscriptionInfo: java.lang.String getCountryIso()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.database.Cursor: int getPosition()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioChannelCount(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.widget.EditText: void <init>(android.content.Context)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.app.admin.DevicePolicyManager: void uninstallCaCert(android.content.ComponentName,byte[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.telephony.cdma.CdmaCellLocation: void fillInNotifierBundle(android.os.Bundle)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.webkit.WebSettings: void setSavePassword(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.test.RenamingDelegatingContext: java.io.File getDatabasePath(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.hardware.usb.UsbDevice: int getProductId()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<junit.framework.TestResult: void removeListener(junit.framework.TestListener)>:<public synchronized>:<junit.framework.TestResult>
<android.view.Menu: android.view.SubMenu addSubMenu(int)>:<public abstract>:<android.view.Menu>
<android.provider.ContactsContract.DeletedContacts: void <init>()>:<>:<android.provider.ContactsContract.DeletedContacts:android.provider.ContactsContract.DeletedContactsColumns>
<android.bluetooth.BluetoothGatt: boolean requestMtu(int)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.renderscript.Float3: void <init>()>:<public>:<android.renderscript.Float3>
<android.test.RenamingDelegatingContext: java.io.FileInputStream openFileInput(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.Path: void reset()>:<public>:<android.graphics.Path>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>:<public abstract>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.view.inputmethod.InputMethodInfo: int hashCode()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.test.mock.MockContext: java.lang.String[] databaseList()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.HorizontalScrollView: void <init>(android.content.Context)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.NumberPicker: void scrollBy(int,int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void setZAdjustment(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.graphics.drawable.LayerDrawable: void setLayerInsetStart(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.MediaStore.Images.Thumbnails: void <clinit>()>:<static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>:<public>:<android.location.LocationManager>
<android.widget.CalendarView: long getMaxDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.AsyncTask: java.lang.Object get()>:<public final>:<android.os.AsyncTask>
<android.preference.Preference: android.preference.Preference.OnPreferenceChangeListener getOnPreferenceChangeListener()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.transition.PatternPathMotion: void <init>(android.graphics.Path)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.LinearLayout: void onMeasure(int,int)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.test.mock.MockContext: void <init>()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.textservice.SuggestionsInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.hardware.fingerprint.FingerprintManager: void <init>()>:<>:<android.hardware.fingerprint.FingerprintManager>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.media.midi.MidiManager.DeviceCallback: void onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)>:<public>:<android.media.midi.MidiManager.DeviceCallback>
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>:<public>:<android.location.LocationManager>
<android.widget.AbsSpinner: void onMeasure(int,int)>:<protected>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputInfo: int getType()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.Manifest.permission_group: void <init>()>:<public>:<android.Manifest.permission_group>
<android.telecom.DisconnectCause: void <init>(int)>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.Debug: boolean isDebuggerConnected()>:<public static>:<android.os.Debug>
<android.view.Window: android.media.session.MediaController getMediaController()>:<public>:<android.view.Window>
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.os.Binder:android.os.IBinder>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumerator(java.lang.String)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.telephony.CellSignalStrengthWcdma: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>:<public>:<android.view.ViewConfiguration>
<android.renderscript.Element: int getVectorSize()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.provider.DocumentsContract: android.net.Uri buildRootUri(java.lang.String,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[],int,int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.media.tv.TvContentRating: java.lang.String getDomain()>:<public>:<android.media.tv.TvContentRating>
<android.system.Os: java.io.FileDescriptor open(java.lang.String,int,int)>:<public static>:<android.system.Os>
<android.os.Debug: void startNativeTracing()>:<public static>:<android.os.Debug>
<android.text.util.Rfc822Token: java.lang.String getComment()>:<public>:<android.text.util.Rfc822Token>
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.content.ContextWrapper: void startActivities(android.content.Intent[])>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionResumed()>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.speech.tts.Voice: int getQuality()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.text.DynamicLayout: int getEllipsisCount(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.admin.DevicePolicyManager: int getPermissionPolicy(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.DownloadManager: int remove(long[])>:<public transient>:<android.app.DownloadManager>
<android.animation.Animator: void cancel()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.service.carrier.CarrierMessagingService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.ApplicationErrorReport.AnrInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.widget.ListPopupWindow: int getPromptPosition()>:<public>:<android.widget.ListPopupWindow>
<android.print.PrinterInfo: int getStatus()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.AudioManager: int generateAudioSessionId()>:<public>:<android.media.AudioManager>
<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)>:<public>:<android.app.Instrumentation>
<android.hardware.usb.UsbConfiguration: int describeContents()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.media.MediaRouter.UserRouteInfo: void <init>()>:<>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.widget.LinearLayout: int getOrientation()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)>:<public static>:<android.app.RemoteInput:android.os.Parcelable>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getSecondaryProgressTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.app.ActionBar: android.view.View getCustomView()>:<public abstract>:<android.app.ActionBar>
<android.util.TypedValue: int getComplexUnit()>:<public>:<android.util.TypedValue>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.nfc.tech.NfcF: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.PathClassLoader:dalvik.system.BaseDexClassLoader,java.lang.ClassLoader>
<android.os.Parcel: void readDoubleArray(double[])>:<public final>:<android.os.Parcel>
<android.widget.TextView: int getLeftPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.format.Time: java.lang.String format(java.lang.String)>:<public>:<android.text.format.Time>
<android.app.UiModeManager: void <init>()>:<>:<android.app.UiModeManager>
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>:<public>:<android.media.RingtoneManager>
<android.widget.AbsListView: android.view.View getSelectedView()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.Sensor: int getReportingMode()>:<public>:<android.hardware.Sensor>
<android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String)>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.AnimationDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.speech.RecognitionService.Callback: void endOfSpeech()>:<public>:<android.speech.RecognitionService.Callback>
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.AutomaticGainControl: boolean isAvailable()>:<public static>:<android.media.audiofx.AutomaticGainControl:android.media.audiofx.AudioEffect>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.EditText: void extendSelection(int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.widget.CalendarView: void setDate(long,boolean,boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.UrlQuerySanitizer: void clear()>:<protected>:<android.net.UrlQuerySanitizer>
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost.Settings getProperties()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.content.res.TypedArray: float getDimension(int,float)>:<public>:<android.content.res.TypedArray>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>:<public static final>:<android.text.util.Linkify>
<android.renderscript.Element: android.renderscript.Element U8_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.content.ComponentName: int hashCode()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance(java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder addCharacterBounds(int,float,float,float,float,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.app.usage.NetworkStats.Bucket: int getUid()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.webkit.WebView: void <init>(android.content.Context)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.CursorWindow: boolean putLong(long,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.job.JobInfo: int getBackoffPolicy()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newDelete(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView.OnGroupExpandListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>:<public>:<android.media.AudioTrack>
<android.graphics.PorterDuffColorFilter: boolean equals(java.lang.Object)>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.widget.TabWidget: void setCurrentTab(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.webkit.WebView: void clearSslPreferences()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.webkit.WebMessagePort.WebMessageCallback: void <init>()>:<public>:<android.webkit.WebMessagePort.WebMessageCallback>
<android.app.DownloadManager.Query: void <init>()>:<public>:<android.app.DownloadManager.Query>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.widget.TextView: void setShowSoftInputOnFocus(boolean)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: int glCreateShader(int)>:<public static native>:<android.opengl.GLES20>
<android.app.LoaderManager: void enableDebugLogging(boolean)>:<public static>:<android.app.LoaderManager>
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.Context: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.view.View: android.graphics.drawable.Drawable getForeground()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodManager: void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.net.Uri: java.util.List getPathSegments()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.animation.ValueAnimator: boolean isStarted()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.graphics.drawable.Drawable: boolean isVisible()>:<public final>:<android.graphics.drawable.Drawable>
<android.util.LruCache: int putCount()>:<public final synchronized>:<android.util.LruCache>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.transition.Transition: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.view.Window: void setSharedElementsUseOverlay(boolean)>:<public>:<android.view.Window>
<android.os.AsyncTask: void <init>()>:<public>:<android.os.AsyncTask>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>:<public>:<android.hardware.usb.UsbManager>
<android.bluetooth.le.AdvertiseData: boolean getIncludeDeviceName()>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.media.midi.MidiDeviceInfo: int getType()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.service.voice.VoiceInteractionSession.Request: boolean isActive()>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.preference.DialogPreference: android.app.Dialog getDialog()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.R.layout: void <init>()>:<public>:<android.R.layout>
<android.widget.EdgeEffect: boolean isFinished()>:<public>:<android.widget.EdgeEffect>
<android.media.Image: long getTimestamp()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.widget.TextView: java.util.Locale getTextLocale()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>:<public final>:<android.content.ContentResolver>
<android.bluetooth.BluetoothSocket: boolean isConnected()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.graphics.drawable.GradientDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.util.JsonWriter: void close()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.graphics.YuvImage: int getHeight()>:<public>:<android.graphics.YuvImage>
<android.view.ViewGroup: void dispatchSetActivated(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.DialogPreference: void setDialogIcon(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.View: void setAccessibilityTraversalBefore(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.ActivityUnitTestCase: android.app.Activity getActivity()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.bluetooth.BluetoothGattServerCallback: void onExecuteWrite(android.bluetooth.BluetoothDevice,int,boolean)>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.view.MotionEvent: float getY()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.provider.ContactsContract.RawContacts: android.content.EntityIterator newEntityIterator(android.database.Cursor)>:<public static>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.widget.ExpandableListAdapter: boolean areAllItemsEnabled()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView.OnKeyboardActionListener getOnKeyboardActionListener()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.ViewGroup)>:<public>:<android.transition.Scene>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockContext: void removeStickyBroadcast(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.AudioDeviceInfo: int getType()>:<public>:<android.media.AudioDeviceInfo>
<android.webkit.URLUtil: boolean isHttpUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.test.InstrumentationTestRunner: void onCreate(android.os.Bundle)>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.provider.SearchRecentSuggestions: void <clinit>()>:<static>:<android.provider.SearchRecentSuggestions>
<android.view.View.OnClickListener: void onClick(android.view.View)>:<public abstract>:<android.view.View.OnClickListener>
<android.app.MediaRouteButton: void jumpDrawablesToCurrentState()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.text.method.TextKeyListener: void clear(android.text.Editable)>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.net.wifi.p2p.WifiP2pManager: void createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.text.BoringLayout: int getHeight()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.net.sip.SipAudioCall: void startAudio()>:<public>:<android.net.sip.SipAudioCall>
<android.app.FragmentController: java.util.List retainNonConfig()>:<public>:<android.app.FragmentController>
<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.style.SuggestionSpan: java.lang.String getLocale()>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Parcel: int[] createIntArray()>:<public final>:<android.os.Parcel>
<android.graphics.drawable.ShapeDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.database.Cursor: int getColumnCount()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.telecom.Call: void postDialContinue(boolean)>:<public>:<android.telecom.Call>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode valueOf(java.lang.String)>:<public static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.app.assist.AssistContent: void <init>()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTxPowerLevel(int)>:<public>:<android.bluetooth.le.AdvertiseSettings.Builder>
<android.app.Activity: void onTrimMemory(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.mtp.MtpDevice: void <init>(android.hardware.usb.UsbDevice)>:<public>:<android.mtp.MtpDevice>
<android.widget.TextView: android.text.style.URLSpan[] getUrls()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addKernel(android.renderscript.Script.KernelID)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.security.keystore.KeyProtection: java.util.Date getKeyValidityForConsumptionEnd()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.os.PersistableBundle: java.lang.Object clone()>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.Parcel: void readStringList(java.util.List)>:<public final>:<android.os.Parcel>
<android.content.SyncStats: void clear()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.telecom.Conference: void setExtras(android.os.Bundle)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.view.Surface: void release()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.app.UiAutomation: android.graphics.Bitmap takeScreenshot()>:<public>:<android.app.UiAutomation>
<android.widget.ExpandableListView.OnGroupCollapseListener: void onGroupCollapse(int)>:<public abstract>:<android.widget.ExpandableListView.OnGroupCollapseListener>
<android.net.LinkProperties: java.util.List getDnsServers()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.text.method.BaseMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.text.style.SubscriptSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>:<public static final>:<android.media.MediaDrm>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>:<public static>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int)>:<public>:<android.appwidget.AppWidgetHost>
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.content.pm.PackageInstaller.SessionCallback: void onCreated(int)>:<public abstract>:<android.content.pm.PackageInstaller.SessionCallback>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor remove(java.lang.String)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.database.AbstractCursor: java.lang.String getString(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.RemoteControlClient: android.media.RemoteControlClient.MetadataEditor editMetadata(boolean)>:<public>:<android.media.RemoteControlClient>
<android.app.Activity: int getTitleColor()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.PopupWindow: void setAnimationStyle(int)>:<public>:<android.widget.PopupWindow>
<android.widget.ListView: long[] getCheckItemIds()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.GestureDetector.SimpleOnGestureListener: void onLongPress(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.provider.Telephony.Sms.Conversations: void <clinit>()>:<static>:<android.provider.Telephony.Sms.Conversations:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.view.LayoutInflater.Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.view.LayoutInflater.Factory>
<android.widget.TabWidget: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.telephony.PhoneNumberUtils: boolean isISODigit(char)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.renderscript.Float4: void <init>(float,float,float,float)>:<public>:<android.renderscript.Float4>
<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.app.admin.SystemUpdatePolicy: int getInstallWindowEnd()>:<public>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.service.voice.VoiceInteractionSessionService: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<dalvik.system.BaseDexClassLoader: java.lang.String findLibrary(java.lang.String)>:<public>:<dalvik.system.BaseDexClassLoader:java.lang.ClassLoader>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback)>:<public>:<android.os.Handler>
<android.app.admin.DeviceAdminInfo: void <clinit>()>:<static>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.app.ActionBar: int getTabCount()>:<public abstract>:<android.app.ActionBar>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.view.ViewGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.view.ViewGroup.LayoutParams>
<android.widget.GridView: void setStretchMode(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.SeekBar: void <init>(android.content.Context)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View: void setBottom(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.midi.MidiDeviceStatus: java.lang.String toString()>:<public>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.widget.HorizontalScrollView: void smoothScrollTo(int,int)>:<public final>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.CheckBoxPreference: void <init>(android.content.Context)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.util.SparseArray: void delete(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.renderscript.ScriptIntrinsicBLAS: void CHER(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.RestrictionsManager: android.os.Bundle convertRestrictionsToBundle(java.util.List)>:<public static>:<android.content.RestrictionsManager>
<android.os.WorkSource: boolean remove(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.view.View: void setScrollY(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.GradientDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>:<public>:<android.util.Range>
<android.webkit.WebView: void goBackOrForward(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>:<public static>:<android.text.format.DateFormat>
<android.text.method.LinkMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.view.animation.PathInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.BaseInterpolator>
<android.telephony.IccOpenLogicalChannelResponse: void <init>()>:<>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.app.admin.DeviceAdminReceiver: java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.mtp.MtpStorageInfo: void <init>()>:<>:<android.mtp.MtpStorageInfo>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.service.notification.NotificationListenerService.Ranking: boolean isAmbient()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.preference.TwoStatePreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.database.sqlite.SQLiteDoneException: void <init>()>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.system.ErrnoException: java.lang.String getMessage()>:<public>:<android.system.ErrnoException:java.lang.Exception,java.lang.Throwable>
<android.media.AudioTrack: int getPlaybackRate()>:<public>:<android.media.AudioTrack>
<android.transition.TransitionInflater: void <init>()>:<>:<android.transition.TransitionInflater>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>:<public abstract>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.service.wallpaper.WallpaperService: void onDestroy()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.method.MetaKeyKeyListener: void <init>()>:<public>:<android.text.method.MetaKeyKeyListener>
<android.app.Notification.Action: int describeContents()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.database.SQLException: void <init>()>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes build()>:<public>:<android.media.AudioAttributes.Builder>
<android.content.ComponentName: boolean equals(java.lang.Object)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.app.Dialog: void takeKeyEvents(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.renderscript.FieldPacker: android.renderscript.Double2 subDouble2()>:<public>:<android.renderscript.FieldPacker>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.content.res.TypedArray: int getType(int)>:<public>:<android.content.res.TypedArray>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.res.Resources: float getFraction(int,int,int)>:<public>:<android.content.res.Resources>
<android.test.mock.MockCursor: boolean isNull(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.speech.tts.TextToSpeech: int getMaxSpeechInputLength()>:<public static>:<android.speech.tts.TextToSpeech>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>:<public>:<android.text.StaticLayout.Builder>
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>:<public final>:<android.content.AbstractThreadedSyncAdapter>
<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActions(long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.gesture.GestureStroke: java.lang.Object clone()>:<public>:<android.gesture.GestureStroke>
<android.test.AndroidTestRunner: void setInstrumentaiton(android.app.Instrumentation)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.view.View: boolean checkInputConnectionProxy(android.view.View)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.audiofx.AudioEffect.OnControlStatusChangeListener: void onControlStatusChange(android.media.audiofx.AudioEffect,boolean)>:<public abstract>:<android.media.audiofx.AudioEffect.OnControlStatusChangeListener>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.telephony.CellInfoCdma: void <init>()>:<>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.text.InputFilter.AllCaps: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.InputFilter.AllCaps:android.text.InputFilter>
<android.animation.AnimatorSet: java.lang.String toString()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.MediaCryptoException: void <init>(java.lang.String)>:<public>:<android.media.MediaCryptoException:java.lang.Exception,java.lang.Throwable>
<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>:<public final>:<android.os.Parcel>
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.test.mock.MockPackageManager: void <init>()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothAdapter: int getScanMode()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.widget.TextView: void setCursorVisible(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.midi.MidiDeviceService: void onClose()>:<public>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.renderscript.Allocation: void copyFromUnchecked(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.opengl.GLES30: void glClearBufferuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.EdgeEffect: void onPull(float,float)>:<public>:<android.widget.EdgeEffect>
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.text.SpannableString: boolean equals(java.lang.Object)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.app.VoiceInteractor.Prompt: java.lang.String toString()>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.view.TextureView: void draw(android.graphics.Canvas)>:<public final>:<android.view.TextureView:android.view.View>
<android.view.MotionEvent.PointerCoords: void copyFrom(android.view.MotionEvent.PointerCoords)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix3f)>:<public>:<android.renderscript.FieldPacker>
<android.util.Log: int w(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.view.animation.PathInterpolator: void <init>(android.graphics.Path)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.BaseInterpolator>
<android.widget.RadioButton: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.UriPermission: java.lang.String toString()>:<public>:<android.content.UriPermission:android.os.Parcelable>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putObject(int,java.lang.Object)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.media.tv.TvInputService.Session: boolean onSetSurface(android.view.Surface)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.animation.PointFEvaluator: void <init>(android.graphics.PointF)>:<public>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.widget.CheckedTextView: boolean isChecked()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.LauncherActivity: java.util.List onQueryPackageManager(android.content.Intent)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.telephony.SmsMessage: int getStatusOnIcc()>:<public>:<android.telephony.SmsMessage>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>:<public>:<android.media.MediaPlayer>
<android.media.tv.TvInputInfo: int describeContents()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.net.wifi.ScanResult: boolean isPasspointNetwork()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.provider.Contacts: void <init>()>:<>:<android.provider.Contacts>
<android.animation.AnimatorSet: boolean isStarted()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.app.assist.AssistStructure.ViewNode: void <init>()>:<>:<android.app.assist.AssistStructure.ViewNode>
<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.view.WindowInsets: boolean isConsumed()>:<public>:<android.view.WindowInsets>
<android.view.ViewPropertyAnimator: void cancel()>:<public>:<android.view.ViewPropertyAnimator>
<android.os.Looper: android.os.MessageQueue getQueue()>:<public>:<android.os.Looper>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onCameraCapabilitiesChanged(android.telecom.RemoteConnection.VideoProvider,android.telecom.VideoProfile.CameraCapabilities)>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.util.SparseIntArray: int get(int,int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.media.tv.TvInputInfo: void <init>()>:<>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.View: int[] getDrawableState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.FieldPacker: android.renderscript.Byte3 subByte3()>:<public>:<android.renderscript.FieldPacker>
<android.view.textservice.SuggestionsInfo: int describeContents()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.nfc.NdefRecord: int describeContents()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.opengl.GLES11: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11:android.opengl.GLES10>
<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>:<public>:<android.util.AtomicFile>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo obtain(int,float,float,float)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>:<public>:<org.json.JSONObject>
<android.media.MediaRouter.RouteInfo: int getVolumeMax()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView.SurfaceTextureListener)>:<public>:<android.view.TextureView:android.view.View>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.MaskFilter: void <init>()>:<public>:<android.graphics.MaskFilter>
<android.system.OsConstants: boolean S_ISREG(int)>:<public static>:<android.system.OsConstants>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskReads()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.gesture.GestureStore: java.util.ArrayList recognize(android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.util.EventLog.Event: int getTag()>:<public>:<android.util.EventLog.Event>
<android.view.Window: int getForcedWindowFlags()>:<protected final>:<android.view.Window>
<android.telephony.SubscriptionInfo: int getMnc()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.UiAutomation: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>:<public>:<android.app.UiAutomation>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>:<public>:<android.hardware.SensorManager>
<android.telecom.TelecomManager: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle)>:<public>:<android.telecom.TelecomManager>
<android.security.KeyChain: void <init>()>:<public>:<android.security.KeyChain>
<android.provider.Settings.Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.os.ParcelFileDescriptor: void finalize()>:<protected>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.Dialog: void setContentView(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES20: void glUseProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.telecom.ConnectionRequest: void <clinit>()>:<static>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.app.SearchableInfo: int getVoicePromptTextId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.StackView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.carrier.CarrierIdentifier: java.lang.String getMcc()>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.view.View: void setForegroundTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.os.Parcel: int dataSize()>:<public final>:<android.os.Parcel>
<android.widget.CalendarView: void setMinDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean onCheckIsTextEditor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.BaseInterpolator>
<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<junit.framework.TestSuite: void <init>(java.lang.String)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.drm.DrmInfoStatus: void <init>(int,int,android.drm.ProcessedData,java.lang.String)>:<public>:<android.drm.DrmInfoStatus>
<android.content.ContextWrapper: android.content.Context getBaseContext()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.json.JSONTokener: java.lang.Object nextValue()>:<public>:<org.json.JSONTokener>
<android.app.ActivityManager.TaskDescription: java.lang.String toString()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.view.ViewDebug.CapturedViewProperty: boolean retrieveReturn()>:<public abstract>:<android.view.ViewDebug.CapturedViewProperty:java.lang.annotation.Annotation>
<android.view.ActionMode: void setType(int)>:<public>:<android.view.ActionMode>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.VoiceInteractor.CommandRequest: void <init>(java.lang.String,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CommandRequest:android.app.VoiceInteractor.Request>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.AudioRecord: int read(short[],int,int)>:<public>:<android.media.AudioRecord>
<android.os.BaseBundle: int size()>:<public>:<android.os.BaseBundle>
<android.database.Cursor: void close()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.ActionBar: void setCustomView(int)>:<public abstract>:<android.app.ActionBar>
<android.content.pm.LabeledIntent: void readFromParcel(android.os.Parcel)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)>:<protected>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.preference.TwoStatePreference: void setDisableDependentsState(boolean)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.util.AndroidException: void <init>(java.lang.Exception)>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityStart(java.util.Date)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.widget.ScrollView: boolean pageScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SearchView: void setIconifiedByDefault(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.hardware.camera2.params.LensShadingMap: android.hardware.camera2.params.RggbChannelVector getGainFactorVector(int,int)>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.graphics.RectF: boolean contains(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.Color: void colorToHSV(int,float[])>:<public static>:<android.graphics.Color>
<android.webkit.WebSettings.TextSize: void <clinit>()>:<static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.content.CursorLoader: void setSelection(java.lang.String)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.view.View: boolean isTextAlignmentResolved()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.CellSignalStrength: int getDbm()>:<public abstract>:<android.telephony.CellSignalStrength>
<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()>:<public>:<android.telephony.SubscriptionManager>
<android.telecom.InCallService: void onCanAddCallChanged(boolean)>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.le.ScanResult: void <clinit>()>:<static>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public abstract>:<android.app.LoaderManager>
<android.widget.RatingBar: float getRating()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)>:<public>:<android.mtp.MtpDevice>
<android.telecom.Connection.VideoProvider: void onRequestCameraCapabilities()>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.bluetooth.BluetoothGattServerCallback: void onNotificationSent(android.bluetooth.BluetoothDevice,int)>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.content.SharedPreferences.OnSharedPreferenceChangeListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>:<public abstract>:<android.content.SharedPreferences.OnSharedPreferenceChangeListener>
<android.net.NetworkInfo: boolean isAvailable()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element RGB_888(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.provider.DocumentsProvider: void revokeDocumentPermission(java.lang.String)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.view.ViewGroup: android.view.View getChildAt(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.BaseAdapter: boolean isEmpty()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.media.AudioManager: void playSoundEffect(int,float)>:<public>:<android.media.AudioManager>
<android.app.Fragment: boolean equals(java.lang.Object)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.Window: void onActive()>:<protected abstract>:<android.view.Window>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.String)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.bluetooth.BluetoothClass: java.lang.String toString()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.media.Image: android.media.Image.Plane[] getPlanes()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>:<public abstract>:<android.text.method.TransformationMethod>
<android.view.Surface: boolean isValid()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.media.MediaFormat: long getLong(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.util.SparseArray: void append(int,java.lang.Object)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.graphics.drawable.LayerDrawable: void setDrawable(int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Fragment: void setSharedElementReturnTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String[])>:<public transient>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.widget.HeaderViewListAdapter: boolean hasStableIds()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.view.textservice.TextInfo: void <init>(java.lang.CharSequence,int,int,int,int)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.app.ActivityManager.RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.media.Rating: void <init>()>:<>:<android.media.Rating:android.os.Parcelable>
<android.app.ExpandableListActivity: void <init>()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.VolumeProvider: void <init>(int,int,int)>:<public>:<android.media.VolumeProvider>
<android.telecom.Connection.VideoProvider: void onSetZoom(float)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.net.VpnService.Builder: void <init>(android.net.VpnService)>:<public>:<android.net.VpnService.Builder>
<android.net.wifi.WifiManager.MulticastLock: void finalize()>:<protected>:<android.net.wifi.WifiManager.MulticastLock>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.opengl.GLES31: void glSampleMaski(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.system.Os: android.system.StructUtsname uname()>:<public static>:<android.system.Os>
<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.graphics.Paint: float getFontSpacing()>:<public>:<android.graphics.Paint>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionStart()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>()>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskReads()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>:<public>:<android.graphics.NinePatch>
<android.view.View: boolean getFitsSystemWindows()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.TypefaceSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.util.JsonReader: void skipValue()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerDataMask()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)>:<public abstract>:<android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener>
<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>:<public>:<android.gesture.GestureStroke>
<android.widget.TableLayout: void <init>(android.content.Context)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.Context: java.lang.String getPackageCodePath()>:<public abstract>:<android.content.Context>
<android.widget.GridView: void setSelection(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>:<public static>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.text.Annotation: int getSpanTypeId()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.widget.HorizontalScrollView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter.UserRouteInfo: void setIconDrawable(android.graphics.drawable.Drawable)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.content.ContentResolver: java.util.List getPersistedUriPermissions()>:<public>:<android.content.ContentResolver>
<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>:<public>:<android.media.tv.TvInputManager>
<android.location.Address: void setCountryName(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.test.AndroidTestRunner: void testEnded(java.lang.String)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.database.SQLException: void <init>(java.lang.String)>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.util.AttributeSet: java.lang.String getAttributeName(int)>:<public abstract>:<android.util.AttributeSet>
<android.os.Debug: void getMemoryInfo(android.os.Debug.MemoryInfo)>:<public static native>:<android.os.Debug>
<android.database.MergeCursor: void close()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.view.InflateException: void <init>(java.lang.String)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.net.MailTo: java.lang.String getCc()>:<public>:<android.net.MailTo>
<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>:<public>:<android.view.FocusFinder>
<android.view.WindowId: int hashCode()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.text.util.Rfc822Token: boolean equals(java.lang.Object)>:<public>:<android.text.util.Rfc822Token>
<android.content.ClipData.Item: java.lang.String coerceToHtmlText(android.content.Context)>:<public>:<android.content.ClipData.Item>
<android.app.TaskStackBuilder: void <init>()>:<>:<android.app.TaskStackBuilder>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>:<public>:<android.app.Notification.Action.Builder>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDMultiply()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType valueOf(java.lang.String)>:<public static>:<android.widget.TextView.BufferType:java.lang.Enum>
<android.graphics.drawable.AnimatedStateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.speech.tts.Voice: int hashCode()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager: void discoverServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.widget.QuickContactBadge: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.content.ClipData: android.content.ClipDescription getDescription()>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void CHPR2(int,android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.preference.RingtonePreference: android.net.Uri onRestoreRingtone()>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.location.Criteria: int getVerticalAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.drm.DrmStore.Action: void <init>()>:<public>:<android.drm.DrmStore.Action>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: java.lang.CharSequence getPrompt()>:<public>:<android.service.voice.VoiceInteractionSession.ConfirmationRequest:android.service.voice.VoiceInteractionSession.Request>
<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>:<public abstract>:<android.view.MenuItem>
<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.InputDevice: int[] getDeviceIds()>:<public static>:<android.view.InputDevice:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.media.AudioRecord: int getAudioSessionId()>:<public>:<android.media.AudioRecord>
<android.widget.RelativeLayout: void setHorizontalGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.provider.Contacts.People: void markAsContacted(android.content.ContentResolver,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.hardware.usb.UsbRequest: void finalize()>:<protected>:<android.hardware.usb.UsbRequest>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeMode(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.bluetooth.le.AdvertiseData: int describeContents()>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.service.voice.VoiceInteractionService: int getDisabledShowContext()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>:<public>:<android.view.ViewPropertyAnimator>
<org.json.JSONTokener: boolean more()>:<public>:<org.json.JSONTokener>
<android.app.ActivityManager.AppTask: android.app.ActivityManager.RecentTaskInfo getTaskInfo()>:<public>:<android.app.ActivityManager.AppTask>
<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>:<protected>:<android.content.ContextWrapper:android.content.Context>
<android.view.MotionEvent: int getHistorySize()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.RemoteCallbackList: int beginBroadcast()>:<public>:<android.os.RemoteCallbackList>
<android.hardware.camera2.CameraManager: void setTorchMode(java.lang.String,boolean)>:<public>:<android.hardware.camera2.CameraManager>
<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)>:<public>:<android.media.MediaCodec>
<android.app.ActivityManager: java.util.List getAppTasks()>:<public>:<android.app.ActivityManager>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.renderscript.Byte4: void <init>(byte,byte,byte,byte)>:<public>:<android.renderscript.Byte4>
<android.graphics.Matrix: void setSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.net.NetworkInfo: boolean isFailover()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.opengl.GLES31: void glActiveShaderProgram(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.system.Os: int waitpid(int,android.util.MutableInt,int)>:<public static>:<android.system.Os>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String)>:<public>:<android.renderscript.Element.Builder>
<android.preference.ListPreference: void <init>(android.content.Context)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.EGL14: boolean eglSurfaceAttrib(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int)>:<public static native>:<android.opengl.EGL14>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.AudioAttributes: int getContentType()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.transition.SidePropagation: void <init>()>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.app.Application: void onCreate()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.telephony.CellSignalStrengthLte: java.lang.String toString()>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.inputmethodservice.KeyboardView: void swipeRight()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnected()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.app.NotificationManager.Policy: void <init>(int,int,int)>:<public>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.graphics.SurfaceTexture: void updateTexImage()>:<public>:<android.graphics.SurfaceTexture>
<android.graphics.Typeface: int getStyle()>:<public>:<android.graphics.Typeface>
<android.widget.AbsListView: void requestLayout()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: int getLeftPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Script: void setVar(int,boolean)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor.AutoCloseInputStream:java.io.FileInputStream,java.io.InputStream>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.app.FragmentHostCallback: void onAttachFragment(android.app.Fragment)>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getIdPackage()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.view.View.DragShadowBuilder: void <init>()>:<public>:<android.view.View.DragShadowBuilder>
<android.media.tv.TvInputService.Session: long onTimeShiftGetStartPosition()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle addLine(java.lang.CharSequence)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.view.KeyEvent: boolean isFunctionPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.opengl.GLES30: void glBeginTransformFeedback(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.ContentProvider: java.lang.String getWritePermission()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.app.usage.UsageEvents: boolean hasNextEvent()>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.view.View: boolean isHorizontalFadingEdgeEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.FloatArrayEvaluator: void <init>(float[])>:<public>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.media.Ringtone: void stop()>:<public>:<android.media.Ringtone>
<android.app.admin.DevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.content.ContentProviderClient>
<android.util.ArrayMap: java.lang.String toString()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeathOnNetwork()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.test.MoreAsserts: void assertEmpty(java.lang.String,java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>:<public static>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>:<public>:<android.widget.EdgeEffect>
<android.view.ViewGroup: boolean hasFocusable()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.provider.Telephony.MmsSms.PendingMessages: void <init>()>:<>:<android.provider.Telephony.MmsSms.PendingMessages:android.provider.BaseColumns>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.json.JSONTokener: char skipTo(char)>:<public>:<org.json.JSONTokener>
<android.os.BadParcelableException: void <init>(java.lang.String)>:<public>:<android.os.BadParcelableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.media.JetPlayer: boolean pause()>:<public>:<android.media.JetPlayer>
<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.TimePickerDialog: void updateTime(int,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.widget.RemoteViews: java.lang.String getPackage()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.webkit.WebSettings: android.webkit.WebSettings.TextSize getTextSize()>:<public synchronized>:<android.webkit.WebSettings>
<android.telephony.IccOpenLogicalChannelResponse: int getChannel()>:<public>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.test.mock.MockCursor: boolean moveToNext()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.AudioRecord: int getBufferSizeInFrames()>:<public>:<android.media.AudioRecord>
<android.widget.Scroller: void extendDuration(int)>:<public>:<android.widget.Scroller>
<android.content.pm.PackageInfo: int describeContents()>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.telecom.InCallService: boolean canAddCall()>:<public final>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewParent: void childHasTransientStateChanged(android.view.View,boolean)>:<public abstract>:<android.view.ViewParent>
<android.renderscript.Element: boolean isComplex()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.telephony.CellInfoLte: java.lang.String toString()>:<public>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.widget.AdapterView: void addView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.net.UrlQuerySanitizer: void registerParameters(java.lang.String[],android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.text.method.CharacterPickerDialog: void onClick(android.view.View)>:<public>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>:<public static>:<android.content.ContentUris>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.animation.ValueAnimator.AnimatorUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>:<public abstract>:<android.animation.ValueAnimator.AnimatorUpdateListener>
<android.telephony.CellSignalStrengthGsm: void <clinit>()>:<static>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.view.View: void setScrollBarSize(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.Bundle: java.lang.String toString()>:<public synchronized>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()>:<public>:<android.bluetooth.le.ScanRecord>
<android.nfc.tech.NfcBarcode: int getType()>:<public>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.service.carrier.MessagePdu: int describeContents()>:<public>:<android.service.carrier.MessagePdu:android.os.Parcelable>
<android.graphics.Paint: void setLinearText(boolean)>:<public native>:<android.graphics.Paint>
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.SimpleCursorTreeAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>:<protected>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.content.ContentProviderOperation: boolean isYieldAllowed()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.hardware.camera2.params.InputConfiguration: int getWidth()>:<public>:<android.hardware.camera2.params.InputConfiguration>
<android.renderscript.RenderScript.Priority: void <clinit>()>:<static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.nfc.cardemulation.HostApduService: void sendResponseApdu(byte[])>:<public final>:<android.nfc.cardemulation.HostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>:<public>:<android.app.ActionBar>
<android.media.MediaScannerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter createTyped(android.renderscript.RenderScript,android.renderscript.Allocation,android.renderscript.Type)>:<public static>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.hardware.camera2.CaptureRequest.Key: java.lang.String getName()>:<public>:<android.hardware.camera2.CaptureRequest.Key>
<android.print.PageRange: int getEnd()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.os.Debug: void changeDebugPort(int)>:<public static>:<android.os.Debug>
<android.widget.ImageView: void setImageState(int[],boolean)>:<public>:<android.widget.ImageView:android.view.View>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withStartAction(java.lang.Runnable)>:<public>:<android.view.ViewPropertyAnimator>
<android.hardware.usb.UsbDevice: int getDeviceClass()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine: void onDesiredSizeChanged(int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.graphics.Canvas: int getHeight()>:<public>:<android.graphics.Canvas>
<android.os.AsyncTask: boolean isCancelled()>:<public final>:<android.os.AsyncTask>
<android.os.Binder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>:<public>:<android.os.Binder:android.os.IBinder>
<android.renderscript.Matrix3f: float[] getArray()>:<public>:<android.renderscript.Matrix3f>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void toggleSoftInput(int,int)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.widget.StackView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.camera2.params.Face: void <init>()>:<>:<android.hardware.camera2.params.Face>
<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>:<public>:<android.app.WallpaperManager>
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)>:<public>:<android.telecom.TelecomManager>
<android.content.SyncAdapterType: boolean supportsUploading()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.print.PrintJobId: int hashCode()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.SparseLongArray: long valueAt(int)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.printservice.PrintJob: boolean setTag(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.app.ListActivity: int getSelectedItemPosition()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.AudioAttributes: void <init>()>:<>:<android.media.AudioAttributes:android.os.Parcelable>
<android.app.backup.BackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.telephony.PhoneStateListener: void <init>()>:<public>:<android.telephony.PhoneStateListener>
<android.os.Bundle: void putSize(java.lang.String,android.util.Size)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: int getLayerInsetEnd(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.Toolbar: void dismissPopupMenus()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.hardware.camera2.CameraCaptureSession: boolean isReprocessable()>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.util.TypedValue: java.lang.CharSequence coerceToString()>:<public final>:<android.util.TypedValue>
<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.hardware.camera2.CaptureResult.Key: java.lang.String getName()>:<public>:<android.hardware.camera2.CaptureResult.Key>
<android.media.AudioAttributes: boolean equals(java.lang.Object)>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.view.ViewConfiguration: int getTouchSlop()>:<public static>:<android.view.ViewConfiguration>
<android.media.audiofx.Equalizer: short getBandLevel(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.widget.CursorAdapter: void onContentChanged()>:<protected>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.animation.ValueAnimator: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.app.LauncherActivity: void <init>()>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.view.animation.Animation: void setStartTime(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.GridLayout: boolean isRowOrderPreserved()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.content.ContentValues: void <init>()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.UriPermission: boolean isReadPermission()>:<public>:<android.content.UriPermission:android.os.Parcelable>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.widget.CursorTreeAdapter: long getGroupId(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.test.mock.MockContext: java.io.File getDir(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setShowRunningNotification(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.animation.Animator: void setupStartValues()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.view.View: void setClickable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.util.AttributeSet: float getAttributeFloatValue(int,float)>:<public abstract>:<android.util.AttributeSet>
<android.widget.Toolbar: void <init>(android.content.Context)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AnalogClock:android.view.View>
<android.widget.SlidingDrawer: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.speech.tts.SynthesisCallback: int getMaxBufferSize()>:<public abstract>:<android.speech.tts.SynthesisCallback>
<android.os.Looper: boolean isCurrentThread()>:<public>:<android.os.Looper>
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.telecom.Connection: void onAnswer(int)>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.telecom.Connection: void setInitializing()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<junit.framework.AssertionFailedError: void <init>(java.lang.String)>:<public>:<junit.framework.AssertionFailedError:java.lang.AssertionError,java.lang.Error,java.lang.Throwable>
<android.app.FragmentController: void doLoaderStop(boolean)>:<public>:<android.app.FragmentController>
<android.media.AudioTrack: int write(short[],int,int)>:<public>:<android.media.AudioTrack>
<android.speech.tts.TextToSpeechService: int onLoadLanguage(java.lang.String,java.lang.String,java.lang.String)>:<protected abstract>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.animation.AnimationSet: void setFillAfter(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.media.audiofx.Visualizer: int[] getCaptureSizeRange()>:<public static native>:<android.media.audiofx.Visualizer>
<android.printservice.PrintService: java.util.List getActivePrintJobs()>:<public final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.SurfaceTexture: void finalize()>:<protected>:<android.graphics.SurfaceTexture>
<android.view.View: boolean isActivated()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: float getHistoricalPressure(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebView: void computeScroll()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.inputmethodservice.KeyboardView: void onDraw(android.graphics.Canvas)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.telecom.InCallService.VideoCall.Callback: void onCallSessionEvent(int)>:<public abstract>:<android.telecom.InCallService.VideoCall.Callback>
<android.graphics.drawable.LayerDrawable: void setLayerInsetTop(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Allocation: void finalize()>:<protected>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.service.wallpaper.WallpaperService.Engine: boolean isVisible()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.util.SparseArray: java.lang.Object clone()>:<public volatile>:<android.util.SparseArray:java.lang.Cloneable>
<android.database.AbstractWindowedCursor: void <init>()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.net.ProxyInfo: void <clinit>()>:<static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.app.Instrumentation: android.content.Context getTargetContext()>:<public>:<android.app.Instrumentation>
<android.renderscript.Element: android.renderscript.Element RGBA_4444(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.ListView: int getHeaderViewsCount()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.RestrictionEntry: java.lang.String getSelectedString()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.media.session.PlaybackState.CustomAction: java.lang.CharSequence getName()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.graphics.drawable.ColorDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.view.animation.AlphaAnimation: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setNumerator(java.lang.String)>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.CamcorderProfile: boolean hasProfile(int,int)>:<public static>:<android.media.CamcorderProfile>
<android.widget.TextView: void setTextIsSelectable(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Notification.Builder: android.app.Notification getNotification()>:<public>:<android.app.Notification.Builder>
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.transition.Transition: android.transition.Transition addTarget(int)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.drawable.DrawableContainer: boolean isStateful()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>:<public>:<android.graphics.Paint>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulAndAngleBracketsLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.media.browse.MediaBrowser: void getItem(java.lang.String,android.media.browse.MediaBrowser.ItemCallback)>:<public>:<android.media.browse.MediaBrowser>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType,int)>:<public static>:<android.renderscript.RenderScript>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.service.voice.VoiceInteractionSession: void setDisabledShowContext(int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.media.audiofx.Equalizer.Settings: void <init>()>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.runner.BaseTestRunner: void savePreferences()>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.test.mock.MockContext: java.io.FileInputStream openFileInput(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>:<public>:<android.app.Notification.Builder>
<android.media.AudioTrack: float getMaxVolume()>:<public static>:<android.media.AudioTrack>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.view.InputQueue.Callback: void onInputQueueCreated(android.view.InputQueue)>:<public abstract>:<android.view.InputQueue.Callback>
<android.app.Instrumentation: void removeMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.view.View: void postInvalidateOnAnimation(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: void onPostResume()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.ViewGroup: void detachViewsFromParent(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ListView: void <init>(android.content.Context)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.ExtractEditText: boolean performClick()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.nfc.tech.Ndef: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.database.DatabaseUtils.InsertHelper: int getColumnIndex(java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.print.PrintAttributes: java.lang.String toString()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>:<public static>:<android.view.SoundEffectConstants>
<android.hardware.camera2.CameraDevice.StateCallback: void onDisconnected(android.hardware.camera2.CameraDevice)>:<public abstract>:<android.hardware.camera2.CameraDevice.StateCallback>
<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>:<public static>:<android.graphics.RectF:android.os.Parcelable>
<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Region: void translate(int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.ListView: void smoothScrollToPosition(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>:<public final>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Input addInput()>:<public>:<android.renderscript.ScriptGroup.Builder2>
<android.util.SparseArray: java.lang.Object valueAt(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES31Ext: void glDisableiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.Notification.CarExtender.Builder: void <init>(java.lang.String)>:<public>:<android.app.Notification.CarExtender.Builder>
<android.test.MoreAsserts: void assertAssignableFrom(java.lang.Class,java.lang.Object)>:<public static>:<android.test.MoreAsserts>
<android.view.View: void setOnGenericMotionListener(android.view.View.OnGenericMotionListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.assist.AssistStructure.ViewNode: android.app.assist.AssistStructure.ViewNode getChildAt(int)>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.app.Notification.Action: void <clinit>()>:<static>:<android.app.Notification.Action:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void STRMM(int,int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.TransitionSet: android.transition.Transition addTarget(android.view.View)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ListActivity: void onContentChanged()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.database.CursorWindow: void freeLastRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.telecom.RemoteConference: android.telecom.DisconnectCause getDisconnectCause()>:<public>:<android.telecom.RemoteConference>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.CalendarView: void setSelectedDateVerticalBar(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentValues: void <clinit>()>:<static>:<android.content.ContentValues:android.os.Parcelable>
<android.content.Intent: boolean filterEquals(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.nfc.cardemulation.OffHostApduService: android.os.IBinder onBind(android.content.Intent)>:<public abstract>:<android.nfc.cardemulation.OffHostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.OverScroller: int getCurrY()>:<public final>:<android.widget.OverScroller>
<android.test.ViewAsserts: void assertOnScreen(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.telephony.CellIdentityLte: int getMcc()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.graphics.PointF: int describeContents()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.test.IsolatedContext: java.io.File getFilesDir()>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.NinePatchDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.View: boolean performHapticFeedback(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.Icon: java.lang.String toString()>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.database.CursorWrapper: int getCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.ProgressBar: void postInvalidate()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.app.ActionBar: android.app.ActionBar.Tab getTabAt(int)>:<public abstract>:<android.app.ActionBar>
<android.media.MediaRecorder: void <init>()>:<public>:<android.media.MediaRecorder>
<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: void sendConfirmationResult(boolean,android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.ConfirmationRequest:android.service.voice.VoiceInteractionSession.Request>
<android.os.PowerManager.WakeLock: void acquire(long)>:<public>:<android.os.PowerManager.WakeLock>
<android.view.View: int getAccessibilityTraversalBefore()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()>:<public volatile>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES10>
<android.content.res.Resources.Theme: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.content.res.Resources.Theme>
<android.telephony.CellIdentityGsm: void <clinit>()>:<static>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.bluetooth.BluetoothGattCharacteristic: int getInstanceId()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.widget.DialerFilter: void <init>(android.content.Context)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.HorizontalScrollView: boolean fullScroll(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.NativeActivity: void onInputQueueDestroyed(android.view.InputQueue)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.CollapsibleActionView: void onActionViewExpanded()>:<public abstract>:<android.view.CollapsibleActionView>
<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.widget.TextView: void setMaxEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.Camera.Parameters: void setVideoStabilization(boolean)>:<public>:<android.hardware.Camera.Parameters>
<android.view.accessibility.AccessibilityRecord: boolean isChecked()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.app.ActivityGroup: void <init>()>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.HandlerThread: boolean quitSafely()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.net.nsd.NsdManager.RegistrationListener: void onRegistrationFailed(android.net.nsd.NsdServiceInfo,int)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setDenominator(long)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.test.mock.MockResources: android.content.res.ColorStateList getColorStateList(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.renderscript.ScriptIntrinsicBLAS: void CGERC(android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.graphics.drawable.LevelListDrawable: void addLevel(int,int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.widget.TextView: void setLetterSpacing(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadPreviewImage(android.content.Context,int)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>:<public>:<android.os.MemoryFile>
<android.view.animation.Animation: boolean hasStarted()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.accessibility.CaptioningManager: float getFontScale()>:<public final>:<android.view.accessibility.CaptioningManager>
<android.view.AbsSavedState: void <init>(android.os.Parcelable)>:<protected>:<android.view.AbsSavedState:android.os.Parcelable>
<android.view.Display: int getDisplayId()>:<public>:<android.view.Display>
<android.graphics.Matrix: void setRotate(float)>:<public>:<android.graphics.Matrix>
<android.text.style.SuperscriptSpan: void <init>()>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.animation.ObjectAnimator: android.animation.ValueAnimator clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.content.ContentResolver: android.net.Uri uncanonicalize(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.view.ViewParent: android.view.ViewParent getParent()>:<public abstract>:<android.view.ViewParent>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage.MessageLevel messageLevel()>:<public>:<android.webkit.ConsoleMessage>
<android.media.tv.TvTrackInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.app.job.JobInfo: long getInitialBackoffMillis()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.graphics.Matrix: void setScale(float,float)>:<public>:<android.graphics.Matrix>
<android.drm.DrmManagerClient.OnEventListener: void onEvent(android.drm.DrmManagerClient,android.drm.DrmEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnEventListener>
<android.nfc.NdefMessage: byte[] toByteArray()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.content.Context: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.graphics.Path: void lineTo(float,float)>:<public>:<android.graphics.Path>
<android.app.NotificationManager: android.service.notification.StatusBarNotification[] getActiveNotifications()>:<public>:<android.app.NotificationManager>
<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.animation.TimeAnimator: void setTimeListener(android.animation.TimeAnimator.TimeListener)>:<public>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.app.Notification.Builder: android.app.Notification.Builder setShowWhen(boolean)>:<public>:<android.app.Notification.Builder>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.app.admin.DevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<org.json.JSONArray: org.json.JSONArray put(int)>:<public>:<org.json.JSONArray>
<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.content.IntentFilter: boolean hasDataAuthority(android.net.Uri)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.VoiceInteractor.PickOptionRequest.Option: int describeContents()>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.app.ActivityManager.ProcessErrorStateInfo: void <clinit>()>:<static>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.hardware.camera2.params.StreamConfigurationMap: void <init>()>:<>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedRegistrationObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.TimePickerDialog: void onClick(android.content.DialogInterface,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.widget.SearchView: void setSuggestionsAdapter(android.widget.CursorAdapter)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.transition.ArcMotion: float getMaximumAngle()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.widget.ListView: void setHeaderDividersEnabled(boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.Location: void removeAltitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.provider.ContactsContract.CommonDataKinds.Nickname: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Nickname:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo build()>:<public>:<android.media.tv.TvTrackInfo.Builder>
<android.transition.Transition: java.util.List getTargetIds()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>:<public static>:<android.media.RingtoneManager>
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>:<public abstract>:<android.content.Context>
<android.media.tv.TvView: void timeShiftSeekTo(long)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.StateListDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothAssignedNumbers: void <init>()>:<>:<android.bluetooth.BluetoothAssignedNumbers>
<android.view.View.OnHoverListener: boolean onHover(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnHoverListener>
<android.media.MediaRouter.VolumeCallback: void <init>()>:<public>:<android.media.MediaRouter.VolumeCallback>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>:<public>:<android.app.LocalActivityManager>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>:<public>:<android.media.RingtoneManager>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.graphics.drawable.AnimatedStateListDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.security.keystore.KeyInfo: void <init>()>:<>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.preference.TwoStatePreference: void setSummaryOff(java.lang.CharSequence)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.inputmethodservice.Keyboard: int getVerticalGap()>:<protected>:<android.inputmethodservice.Keyboard>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.Drawable>
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.net.VpnService: boolean protect(java.net.DatagramSocket)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Path.FillType: void <clinit>()>:<static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.text.method.BaseMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.graphics.Paint: void <init>(int)>:<public>:<android.graphics.Paint>
<android.widget.Adapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.Adapter>
<android.graphics.Paint: void setLetterSpacing(float)>:<public>:<android.graphics.Paint>
<android.webkit.WebViewFragment: void onPause()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.graphics.drawable.DrawableWrapper: void setAlpha(int)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.service.voice.VoiceInteractionSession: void onHandleAssist(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.view.View: android.graphics.Matrix getMatrix()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.Contacts.Organizations: void <clinit>()>:<static>:<android.provider.Contacts.Organizations:android.provider.BaseColumns,android.provider.Contacts.OrganizationColumns>
<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)>:<public static>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.Rating: int describeContents()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.bluetooth.le.ScanResult: int getRssi()>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.text.style.EasyEditSpan: int describeContents()>:<public>:<android.text.style.EasyEditSpan:android.text.ParcelableSpan>
<android.view.accessibility.AccessibilityEvent: int describeContents()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.SearchView: void setQueryRefinementEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.content.Intent: android.net.Uri getData()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.Application: void registerOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.widget.OverScroller: int getFinalX()>:<public final>:<android.widget.OverScroller>
<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.preference.PreferenceFragment: void addPreferencesFromResource(int)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.widget.ActionMenuView: void <init>(android.content.Context)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(float,float,float,float)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.ActionBar: void setHomeButtonEnabled(boolean)>:<public>:<android.app.ActionBar>
<android.hardware.usb.UsbDevice: int getConfigurationCount()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<org.json.JSONArray: java.lang.String optString(int)>:<public>:<org.json.JSONArray>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>:<public>:<android.graphics.Movie>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>:<public>:<android.telephony.TelephonyManager>
<android.accounts.Account: int describeContents()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int,int)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.PathDashPathEffect.Style: void <clinit>()>:<static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.net.sip.SipAudioCall: void endCall()>:<public>:<android.net.sip.SipAudioCall>
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>:<public>:<android.location.LocationManager>
<android.widget.Switch: void setSwitchMinWidth(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.telephony.SubscriptionInfo: void <clinit>()>:<static>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.widget.ImageView: void drawableStateChanged()>:<protected>:<android.widget.ImageView:android.view.View>
<android.graphics.drawable.Animatable2: void clearAnimationCallbacks()>:<public abstract>:<android.graphics.drawable.Animatable2:android.graphics.drawable.Animatable>
<android.location.Address: int getMaxAddressLineIndex()>:<public>:<android.location.Address:android.os.Parcelable>
<android.webkit.WebView: int getContentHeight()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.BoringLayout: boolean getLineContainsTab(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.drawable.DrawableWrapper: boolean canApplyTheme()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.session.MediaController.Callback: void onPlaybackStateChanged(android.media.session.PlaybackState)>:<public>:<android.media.session.MediaController.Callback>
<android.widget.RatingBar.OnRatingBarChangeListener: void onRatingChanged(android.widget.RatingBar,float,boolean)>:<public abstract>:<android.widget.RatingBar.OnRatingBarChangeListener>
<android.view.Menu: void setGroupEnabled(int,boolean)>:<public abstract>:<android.view.Menu>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>:<public final>:<android.content.ContentResolver>
<android.content.pm.InstrumentationInfo: void <init>()>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)>:<public>:<android.content.pm.PackageInstaller>
<android.view.ViewGroup: void startViewTransition(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewDebug: void <init>()>:<public>:<android.view.ViewDebug>
<android.app.Notification.WearableExtender: boolean getHintShowBackgroundOnly()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.test.MoreAsserts: void assertEquals(java.lang.Object[],java.lang.Object[])>:<public static>:<android.test.MoreAsserts>
<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.view.View.MeasureSpec: int makeMeasureSpec(int,int)>:<public static>:<android.view.View.MeasureSpec>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.widget.ListView: void setSelectionAfterHeaderView()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>:<public>:<android.content.res.TypedArray>
<android.webkit.WebSettings: java.lang.String getDatabasePath()>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.tv.TvInputInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean installCaCert(android.content.ComponentName,byte[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,int)>:<public>:<android.app.Notification.Builder>
<android.renderscript.Element: android.renderscript.Element I64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.Chronometer: long getBase()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.util.SparseLongArray: long get(int,long)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.util.JsonReader: boolean hasNext()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.view.SearchEvent: void <init>(android.view.InputDevice)>:<public>:<android.view.SearchEvent>
<android.database.CursorWrapper: int getType(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.util.SizeF: android.util.SizeF parseSizeF(java.lang.String)>:<public static>:<android.util.SizeF>
<android.content.ComponentName: int compareTo(android.content.ComponentName)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.print.PrinterCapabilitiesInfo: void <init>()>:<>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>:<public final>:<android.media.MediaCodecList>
<android.app.SearchManager.OnCancelListener: void onCancel()>:<public abstract>:<android.app.SearchManager.OnCancelListener>
<android.view.inputmethod.InputMethodSubtype: int hashCode()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)>:<public>:<android.media.AudioTrack>
<android.provider.ContactsContract.DisplayPhoto: void <clinit>()>:<static>:<android.provider.ContactsContract.DisplayPhoto>
<android.widget.AbsoluteLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void swipeUp()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.media.MediaDrm: java.util.List getSecureStops()>:<public native>:<android.media.MediaDrm>
<android.test.RenamingDelegatingContext: void makeExistingFilesAndDbsAccessible()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.method.LinkMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.webkit.WebView: void onScrollChanged(int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.IpPrefix: byte[] getRawAddress()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.text.Annotation: int describeContents()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.graphics.Bitmap: void <init>()>:<>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.Xfermode)>:<public>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.graphics.RectF: boolean intersects(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.widget.MediaController: void setAnchorView(android.view.View)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onContextClick(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.view.View: void requestFitSystemWindows()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.AnimatedStateListDrawable: void addState(int[],android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.transition.TransitionSet: android.transition.Transition addTarget(int)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>:<public static>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.ViewAnimator: int getBaseline()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.BaseInterpolator>
<android.media.session.MediaController: android.app.PendingIntent getSessionActivity()>:<public>:<android.media.session.MediaController>
<android.view.SubMenu: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.speech.tts.TextToSpeechService: void onDestroy()>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.LauncherApps: void <init>()>:<>:<android.content.pm.LauncherApps>
<android.media.MediaSync: void setCallback(android.media.MediaSync.Callback,android.os.Handler)>:<public>:<android.media.MediaSync>
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.usage.ConfigurationStats: android.content.res.Configuration getConfiguration()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>:<public final>:<android.os.Parcel>
<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.net.sip.SipException:java.lang.Exception,java.lang.Throwable>
<android.media.tv.TvInputManager.TvInputCallback: void onInputStateChanged(java.lang.String,int)>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.renderscript.ScriptIntrinsicBLAS: void CTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.speech.tts.TextToSpeechService: void onCreate()>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.location.Address: java.lang.String getFeatureName()>:<public>:<android.location.Address:android.os.Parcelable>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.widget.ZoomButton: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.widget.Switch: android.graphics.PorterDuff.Mode getThumbTintMode()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.net.wifi.WifiManager: void startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager.WpsCallback)>:<public>:<android.net.wifi.WifiManager>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setMipmaps(boolean)>:<public>:<android.renderscript.Type.Builder>
<android.transition.TransitionSet: android.transition.TransitionSet clone()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>:<public final>:<android.graphics.drawable.Drawable>
<android.content.res.ObbInfo: int describeContents()>:<public>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.os.Debug: void resetGlobalExternalFreedSize()>:<public static>:<android.os.Debug>
<android.renderscript.ScriptIntrinsicBLAS: void STRSM(int,int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintJobInfo.Builder: void setCopies(int)>:<public>:<android.print.PrintJobInfo.Builder>
<android.speech.tts.SynthesisCallback: int audioAvailable(byte[],int,int)>:<public abstract>:<android.speech.tts.SynthesisCallback>
<android.widget.ViewFlipper: void stopFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.Contacts.People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.test.mock.MockPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.MultiAutoCompleteTextView.Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.os.RemoteCallbackList: void <init>()>:<public>:<android.os.RemoteCallbackList>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<android.widget.CheckBox: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.RelativeLayout.LayoutParams: void addRule(int,int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.gesture.GestureLibrary: int getOrientationStyle()>:<public>:<android.gesture.GestureLibrary>
<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>:<public final>:<android.telephony.gsm.SmsManager>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Matrix3f: void scale(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.telecom.Connection: void setConferenceableConnections(java.util.List)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewStub:android.view.View>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getCancelLabel()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.text.style.LeadingMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public abstract>:<android.text.style.LeadingMarginSpan:android.text.style.ParagraphStyle>
<android.media.session.MediaController.PlaybackInfo: int getCurrentVolume()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.preference.TwoStatePreference: void setSummaryOn(java.lang.CharSequence)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.speech.tts.Voice: java.lang.String getName()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.os.BaseBundle: void remove(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.bluetooth.BluetoothGattService: java.util.List getCharacteristics()>:<public>:<android.bluetooth.BluetoothGattService>
<android.view.DragEvent: void <init>()>:<>:<android.view.DragEvent:android.os.Parcelable>
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>:<public static final>:<android.text.Selection>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>()>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.os.Parcel: void writeString(java.lang.String)>:<public final>:<android.os.Parcel>
<android.opengl.GLES30: void glGetUniformuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.ViewConfiguration: int getEdgeSlop()>:<public static>:<android.view.ViewConfiguration>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(android.view.View)>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.AlertDialog: void setIconAttribute(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.content.ContextWrapper: android.content.res.Resources getResources()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>:<public static>:<android.media.RingtoneManager>
<android.media.SoundPool.Builder: void <init>()>:<public>:<android.media.SoundPool.Builder>
<android.media.browse.MediaBrowser: android.os.Bundle getExtras()>:<public>:<android.media.browse.MediaBrowser>
<android.os.storage.StorageManager: void <init>()>:<>:<android.os.storage.StorageManager>
<android.database.CursorWrapper: float getFloat(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.content.Intent: boolean hasCategory(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.mtp.MtpObjectInfo: int getThumbPixWidth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: java.lang.CharSequence getPrompt()>:<public>:<android.service.voice.VoiceInteractionSession.PickOptionRequest:android.service.voice.VoiceInteractionSession.Request>
<android.text.method.ScrollingMovementMethod: void <init>()>:<public>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>:<public static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.provider.ContactsContract.RawContacts.Entity: void <init>()>:<>:<android.provider.ContactsContract.RawContacts.Entity:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns>
<android.content.ComponentCallbacks: void onLowMemory()>:<public abstract>:<android.content.ComponentCallbacks>
<android.view.View: android.view.WindowId getWindowId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean)>:<public static>:<android.telephony.SmsMessage>
<android.net.LinkAddress: boolean equals(java.lang.Object)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>:<protected>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.text.Editable: void clear()>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>:<public abstract>:<android.view.Window>
<android.os.TokenWatcher: void acquired()>:<public abstract>:<android.os.TokenWatcher>
<android.app.assist.AssistContent: android.net.Uri getWebUri()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>:<public abstract>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.preference.PreferenceScreen: android.app.Dialog getDialog()>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.media.MediaPlayer.OnSeekCompleteListener: void onSeekComplete(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnSeekCompleteListener>
<android.widget.TextView: int computeVerticalScrollRange()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MotionEvent: int axisFromString(java.lang.String)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>:<public>:<android.telephony.PhoneStateListener>
<android.telephony.CellInfoGsm: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.media.Image.Plane: int getPixelStride()>:<public abstract>:<android.media.Image.Plane>
<android.bluetooth.BluetoothAdapter: java.lang.String getName()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.content.pm.PackageManager: void extendVerificationTimeout(int,int,long)>:<public abstract>:<android.content.pm.PackageManager>
<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.HorizontalScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Matrix3f: void set(int,int,float)>:<public>:<android.renderscript.Matrix3f>
<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.text.method.BaseMovementMethod: boolean canSelectArbitrarily()>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.os.UserHandle: void <clinit>()>:<static>:<android.os.UserHandle:android.os.Parcelable>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.widget.TextView: void setTextColor(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void <init>()>:<public>:<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback>
<android.view.InputEvent: void <clinit>()>:<static>:<android.view.InputEvent:android.os.Parcelable>
<android.app.LauncherActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Interpolator: void finalize()>:<protected>:<android.graphics.Interpolator>
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.gesture.GestureStroke: android.gesture.OrientedBoundingBox computeOrientedBoundingBox()>:<public>:<android.gesture.GestureStroke>
<android.media.MediaCodec.CodecException: boolean isRecoverable()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.pm.PackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.util.MonthDisplayHelper: void <init>(int,int,int)>:<public>:<android.util.MonthDisplayHelper>
<android.widget.ExpandableListView: void setIndicatorBoundsRelative(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.pm.ConfigurationInfo: void <init>(android.content.pm.ConfigurationInfo)>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.media.AudioAttributes: java.lang.String toString()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.text.style.TtsSpan.TimeBuilder: void <init>(int,int)>:<public>:<android.text.style.TtsSpan.TimeBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,java.lang.String)>:<public>:<android.app.AlertDialog.Builder>
<android.view.MenuItem: android.view.View getActionView()>:<public abstract>:<android.view.MenuItem>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID,java.lang.String)>:<public static final>:<android.media.MediaDrm>
<android.telecom.StatusHints: boolean equals(java.lang.Object)>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.media.MediaCodecInfo.VideoCapabilities: void <init>()>:<>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.content.pm.PackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.http.SslError: java.lang.String toString()>:<public>:<android.net.http.SslError>
<android.media.MediaPlayer.OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnErrorListener>
<android.telecom.Connection: void onAbort()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter.CreateBeamUrisCallback,android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.widget.AbsListView: void clearTextFilter()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.carrier.CarrierMessagingService: void onSendMultipartTextSms(java.util.List,int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Element: android.renderscript.Element F64_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.animation.Animation: boolean isInitialized()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.webkit.WebStorage.Origin: long getUsage()>:<public>:<android.webkit.WebStorage.Origin>
<android.telecom.VideoProfile: void <init>(int,int)>:<public>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>:<public>:<android.accounts.AccountManager>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName()>:<public>:<android.media.MediaRouter.RouteCategory>
<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>:<public>:<org.json.JSONObject>
<android.graphics.drawable.AnimatedVectorDrawable: int getAlpha()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.widget.VideoView: boolean canPause()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>(java.lang.String)>:<public>:<android.content.IntentFilter.MalformedMimeTypeException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.opengl.GLES30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.provider.ContactsContract.CommonDataKinds.Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Organization:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.media.tv.TvContentRating: java.util.List getSubRatings()>:<public>:<android.media.tv.TvContentRating>
<android.content.ContextWrapper: java.io.File[] getExternalFilesDirs(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>:<public static>:<android.graphics.BitmapFactory>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.media.AudioRecord: void release()>:<public>:<android.media.AudioRecord>
<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.ContextWrapper: void <init>(android.content.Context)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.telecom.Connection: android.telecom.Connection createCanceledConnection()>:<public static>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.provider.ContactsContract: void <init>()>:<public>:<android.provider.ContactsContract>
<android.util.ArraySet: void <init>(int)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.webkit.WebViewDatabase: void clearFormData()>:<public abstract>:<android.webkit.WebViewDatabase>
<android.location.Address: android.os.Bundle getExtras()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)>:<public>:<android.os.UserManager>
<org.xmlpull.v1.XmlPullParser: boolean isWhitespace()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.renderscript.Type.Builder: android.renderscript.Type create()>:<public>:<android.renderscript.Type.Builder>
<android.graphics.Rect: void union(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.text.style.TtsSpan.OrdinalBuilder: android.text.style.TtsSpan.OrdinalBuilder setNumber(long)>:<public>:<android.text.style.TtsSpan.OrdinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.util.LongSparseArray: int indexOfKey(long)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.PopupWindow>
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>:<public>:<android.location.Geocoder>
<android.content.SyncAdapterType: boolean isUserVisible()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.renderscript.BaseObj: void setName(java.lang.String)>:<public>:<android.renderscript.BaseObj>
<android.graphics.Rect: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.database.sqlite.SQLiteClosable: void releaseReference()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.graphics.drawable.LayerDrawable: void setLayerInsetRelative(int,int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)>:<public>:<android.net.UrlQuerySanitizer>
<android.content.RestrictionEntry: void setSelectedString(java.lang.String)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>:<public>:<android.net.sip.SipManager>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsSeekBar: boolean getSplitTrack()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.widget.CalendarView: int getFocusedMonthDateColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setVerticalScrollBarEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.VideoProfile: boolean isReceptionEnabled(int)>:<public static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.graphics.Paint: void clearShadowLayer()>:<public>:<android.graphics.Paint>
<android.telephony.TelephonyManager: boolean isNetworkRoaming()>:<public>:<android.telephony.TelephonyManager>
<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>:<public>:<android.location.LocationManager>
<android.app.Notification.Builder: android.app.Notification.Builder setContent(android.widget.RemoteViews)>:<public>:<android.app.Notification.Builder>
<android.app.TabActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLSurfaceView: void setRenderMode(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.telecom.DisconnectCause: int getTone()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.graphics.Paint: java.lang.String getFontFeatureSettings()>:<public>:<android.graphics.Paint>
<android.media.tv.TvContract: android.net.Uri buildChannelUriForPassthroughInput(java.lang.String)>:<public static final>:<android.media.tv.TvContract>
<android.text.style.TtsSpan: int getSpanTypeId()>:<public>:<android.text.style.TtsSpan:android.text.ParcelableSpan>
<android.content.IntentFilter: boolean hasDataPath(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onText(java.lang.CharSequence)>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.database.CursorWindow: int getInt(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.HandlerThread: void <init>(java.lang.String)>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.os.Parcel: void writeFloatArray(float[])>:<public final>:<android.os.Parcel>
<android.hardware.camera2.params.Face: android.graphics.Point getMouthPosition()>:<public>:<android.hardware.camera2.params.Face>
<android.app.FragmentManager: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public abstract>:<android.app.FragmentManager>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.animation.LayoutTransition: long getDuration(int)>:<public>:<android.animation.LayoutTransition>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.util.SparseIntArray: void <init>(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.content.pm.InstrumentationInfo: void <clinit>()>:<static>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap getIcon()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: boolean isEnabled()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.widget.Toolbar: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.assist.AssistStructure.ViewNode: int getWidth()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.telephony.gsm.GsmCellLocation: int hashCode()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.renderscript.ScriptGroup.Closure: android.renderscript.ScriptGroup.Future getGlobal(android.renderscript.Script.FieldID)>:<public>:<android.renderscript.ScriptGroup.Closure:android.renderscript.BaseObj>
<android.telephony.gsm.SmsMessage: boolean isEmail()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.TextView: int getRightPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.speech.tts.TextToSpeech: int setSpeechRate(float)>:<public>:<android.speech.tts.TextToSpeech>
<android.text.method.TextKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.security.KeyPairGeneratorSpec: java.util.Date getEndDate()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.renderscript.Element: android.renderscript.Element.DataType getDataType()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.telephony.CellIdentityGsm: int getPsc()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.widget.Filter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>:<protected abstract>:<android.widget.Filter>
<android.database.AbstractCursor: short getShort(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.os.ParcelFileDescriptor: int getFd()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<junit.framework.Assert: void assertEquals(int,int)>:<public static>:<junit.framework.Assert>
<android.text.Selection: void <init>()>:<>:<android.text.Selection>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.sip.SipSession: void makeCall(android.net.sip.SipProfile,java.lang.String,int)>:<public>:<android.net.sip.SipSession>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.TextView: void setLinkTextColor(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.Switch: void onMeasure(int,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>:<public transient>:<android.content.res.Resources>
<android.media.session.MediaController: void adjustVolume(int,int)>:<public>:<android.media.session.MediaController>
<android.graphics.RectF: float height()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager.DisplayListener)>:<public>:<android.hardware.display.DisplayManager>
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean)>:<public>:<android.os.UserManager>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.TextView: int getMarqueeRepeatLimit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.conn.ssl.SSLSocketFactory: boolean isSecure(java.net.Socket)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.widget.AbsListView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider.PipeDataWriter)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.view.Window: void setTransitionManager(android.transition.TransitionManager)>:<public>:<android.view.Window>
<android.media.ImageReader: android.media.ImageReader newInstance(int,int,int,int)>:<public static>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.transition.ChangeBounds: boolean getResizeClip()>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureSizes()>:<public>:<android.hardware.Camera.Parameters>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getConfirmLabel()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.database.DatabaseUtils.InsertHelper: void bind(int,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.telecom.CallAudioState: boolean isMuted()>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.nfc.cardemulation.HostApduService: void notifyUnhandled()>:<public final>:<android.nfc.cardemulation.HostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence getComposingText()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.AdapterView.OnItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public abstract>:<android.widget.AdapterView.OnItemClickListener>
<android.service.notification.StatusBarNotification: int getId()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.webkit.WebView: void goForward()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.MimeTypeMap: boolean hasMimeType(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.app.backup.SharedPreferencesBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.view.ViewStub: android.view.View inflate()>:<public>:<android.view.ViewStub:android.view.View>
<android.provider.Telephony.Sms: java.lang.String getDefaultSmsPackage(android.content.Context)>:<public static>:<android.provider.Telephony.Sms:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.view.Menu: boolean performIdentifierAction(int,int)>:<public abstract>:<android.view.Menu>
<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.bluetooth.BluetoothClass: boolean equals(java.lang.Object)>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.animation.Animator: long getStartDelay()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<junit.framework.Assert: void assertNull(java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.view.animation.Animation: void setDetachWallpaper(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.tv.TvTrackInfo: android.os.Bundle getExtra()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.media.tv.TvInputService.Session: void notifyChannelRetuned(android.net.Uri)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.renderscript.AllocationAdapter: void setY(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.location.Address: void <clinit>()>:<static>:<android.location.Address:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.hardware.camera2.params.MeteringRectangle: int getY()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.os.AsyncTask: void onPostExecute(java.lang.Object)>:<protected>:<android.os.AsyncTask>
<android.mtp.MtpObjectInfo: void <init>()>:<>:<android.mtp.MtpObjectInfo>
<android.webkit.WebSettings.LayoutAlgorithm: void <clinit>()>:<static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.text.method.ArrowKeyMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>:<public static>:<android.util.Log>
<android.provider.Contacts.People.ContactMethods: void <init>()>:<>:<android.provider.Contacts.People.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.nfc.tech.NfcA: int getMaxTransceiveLength()>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.app.VoiceInteractor: android.app.VoiceInteractor.Request getActiveRequest(java.lang.String)>:<public>:<android.app.VoiceInteractor>
<android.graphics.Path: void moveTo(float,float)>:<public>:<android.graphics.Path>
<android.widget.Toast: void setText(java.lang.CharSequence)>:<public>:<android.widget.Toast>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.app.UiAutomation: void setRunAsMonkey(boolean)>:<public>:<android.app.UiAutomation>
<android.view.inputmethod.InputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.Ringtone: int getStreamType()>:<public>:<android.media.Ringtone>
<android.test.AndroidTestRunner: java.util.List getTestCases()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.transition.Transition: android.transition.Transition setDuration(long)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.nfc.cardemulation.CardEmulation: boolean removeAidsForService(android.content.ComponentName,java.lang.String)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.telecom.DisconnectCause: java.lang.CharSequence getDescription()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.opengl.EGLObjectHandle: int hashCode()>:<public>:<android.opengl.EGLObjectHandle>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>:<public>:<android.graphics.Paint>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<junit.framework.Protectable: void protect()>:<public abstract>:<junit.framework.Protectable>
<android.opengl.GLES31Ext: java.lang.String glGetObjectPtrLabelKHR(long)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewGroupOverlay: void <init>()>:<>:<android.view.ViewGroupOverlay:android.view.ViewOverlay>
<android.opengl.GLES30: void glFramebufferTextureLayer(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.AbsListView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.Toast: void show()>:<public>:<android.widget.Toast>
<android.app.Service: void stopForeground(boolean)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.webkit.DownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>:<public abstract>:<android.webkit.DownloadListener>
<android.nfc.tech.Ndef: void close()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.widget.Scroller: void setFinalX(int)>:<public>:<android.widget.Scroller>
<android.widget.ViewFlipper: void <init>(android.content.Context)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TableLayout: void onMeasure(int,int)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>:<public>:<android.media.session.MediaSession>
<android.graphics.Bitmap: boolean isMutable()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.CursorAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.media.RemoteController: boolean clearArtworkConfiguration()>:<public>:<android.media.RemoteController>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.telecom.Connection: int getAddressPresentation()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.net.ConnectivityManager: android.net.ProxyInfo getDefaultProxy()>:<public>:<android.net.ConnectivityManager>
<android.view.animation.Animation: int getZAdjustment()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.bluetooth.BluetoothGattServer: java.util.List getServices()>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>:<public>:<android.telephony.PhoneStateListener>
<android.media.MediaRouter.RouteGroup: java.lang.String toString()>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.test.mock.MockPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.renderscript.Sampler.Value: void <clinit>()>:<static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.view.ViewDebug.ExportedProperty: boolean hasAdjacentMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.pdf.PdfDocument: android.graphics.pdf.PdfDocument.Page startPage(android.graphics.pdf.PdfDocument.PageInfo)>:<public>:<android.graphics.pdf.PdfDocument>
<android.animation.AnimatorSet: android.animation.Animator clone()>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.WindowManager.LayoutParams: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.graphics.RectF: boolean contains(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.util.SparseIntArray: void <init>()>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.net.wifi.ScanResult: void <init>()>:<>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.animation.Keyframe: java.lang.Object clone()>:<public volatile>:<android.animation.Keyframe:java.lang.Cloneable>
<android.net.sip.SipAudioCall.Listener: void onChanged(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>:<public>:<org.json.JSONObject>
<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.nfc.tech.NfcF: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.graphics.drawable.TransitionDrawable: void reverseTransition(int)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.print.PrintDocumentAdapter: void onStart()>:<public>:<android.print.PrintDocumentAdapter>
<android.media.tv.TvContract.Channels: java.lang.String getVideoResolution(java.lang.String)>:<public static final>:<android.media.tv.TvContract.Channels:android.media.tv.TvContract.BaseTvColumns>
<android.text.SpannableStringBuilder: android.text.Editable append(char)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.Gallery: void setSpacing(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.inputmethodservice.InputMethodService: void onExtractedTextClicked()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Color: void <init>()>:<public>:<android.graphics.Color>
<android.widget.AlphabetIndexer: int getPositionForSection(int)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isStateful()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.provider.DocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>:<public abstract>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.util.Rational: void <init>(int,int)>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.FrameStats: void <init>()>:<public>:<android.view.FrameStats>
<org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.inputmethodservice.Keyboard: int getMinWidth()>:<public>:<android.inputmethodservice.Keyboard>
<android.opengl.GLES30: void <init>()>:<public>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.graphics.drawable.RippleDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.renderscript.Matrix4f: boolean inverseTranspose()>:<public>:<android.renderscript.Matrix4f>
<android.system.Os: void chmod(java.lang.String,int)>:<public static>:<android.system.Os>
<android.app.Fragment: android.app.Fragment getTargetFragment()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.test.ViewAsserts: void <init>()>:<>:<android.test.ViewAsserts>
<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>:<public>:<android.os.DropBoxManager>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.Fragment: boolean isInLayout()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.ViewDebug.ExportedProperty: boolean deepExport()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.graphics.YuvImage: int getWidth()>:<public>:<android.graphics.YuvImage>
<android.widget.Scroller: int getCurrX()>:<public final>:<android.widget.Scroller>
<android.util.SparseLongArray: void delete(int)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStopTrackingTouch(android.widget.SeekBar)>:<public abstract>:<android.widget.SeekBar.OnSeekBarChangeListener>
<android.view.ViewGroup: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.RectF: void set(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.Parcel: void readLongArray(long[])>:<public final>:<android.os.Parcel>
<android.test.mock.MockCursor: boolean isAfterLast()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.VideoView: boolean canSeekForward()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.os.DropBoxManager: void <init>()>:<protected>:<android.os.DropBoxManager>
<android.os.Messenger: void <init>(android.os.IBinder)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.hardware.camera2.CameraManager: void registerTorchCallback(android.hardware.camera2.CameraManager.TorchCallback,android.os.Handler)>:<public>:<android.hardware.camera2.CameraManager>
<android.provider.Contacts.ContactMethods: java.lang.Object decodeImProtocol(java.lang.String)>:<public static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.app.NotificationManager.Policy: boolean equals(java.lang.Object)>:<public>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.widget.AnalogClock: void <init>(android.content.Context)>:<public>:<android.widget.AnalogClock:android.view.View>
<android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.net.wifi.WifiManager: boolean pingSupplicant()>:<public>:<android.net.wifi.WifiManager>
<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringInternal>
<android.test.mock.MockContentProvider: void <init>(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PathPermission[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaPlayer: void setDataSource(android.media.MediaDataSource)>:<public>:<android.media.MediaPlayer>
<android.app.Notification.Builder: android.app.Notification.Builder setDefaults(int)>:<public>:<android.app.Notification.Builder>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.widget.SlidingDrawer: android.view.View getHandle()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.TableLayout: boolean isColumnShrinkable(int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.RawContactsEntity: void <clinit>()>:<static>:<android.provider.ContactsContract.RawContactsEntity:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns,android.provider.ContactsContract.RawContactsColumns>
<android.text.AlteredCharSequence: char charAt(int)>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.transition.Slide: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.graphics.drawable.VectorDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.os.FileObserver: void startWatching()>:<public>:<android.os.FileObserver>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<android.app.Notification.MediaStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.transition.ChangeClipBounds: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<public>:<android.drm.DrmErrorEvent:android.drm.DrmEvent>
<android.util.SparseArray: java.lang.Object get(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])>:<public static>:<android.gesture.GestureUtils>
<android.view.ActionMode: void setSubtitle(int)>:<public abstract>:<android.view.ActionMode>
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.security.keystore.KeyInfo: int getPurposes()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.view.SurfaceHolder: void setSizeFromLayout()>:<public abstract>:<android.view.SurfaceHolder>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.util.TypedValue: float getFloat()>:<public final>:<android.util.TypedValue>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(android.view.View)>:<public>:<android.widget.TabHost.TabSpec>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.Rect getConstantPadding()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.print.PrintManager: java.util.List getPrintJobs()>:<public>:<android.print.PrintManager>
<android.widget.ArrayAdapter: void sort(java.util.Comparator)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.AdapterView: int getCount()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.test.mock.MockCursor: boolean moveToFirst()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.ArrayAdapter: void clear()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.print.PrintAttributes.MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>:<public abstract>:<android.view.MenuItem>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>:<public static>:<junit.framework.Assert>
<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Paint: void set(android.graphics.Paint)>:<public>:<android.graphics.Paint>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>:<public>:<android.widget.PopupWindow>
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>:<public>:<android.bluetooth.le.AdvertiseSettings.Builder>
<android.bluetooth.le.ScanSettings: int describeContents()>:<public>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<android.view.View: void setScaleY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntries()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.util.SparseArray: void removeAtRange(int,int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.view.ActionMode: void setTitleOptionalHint(boolean)>:<public>:<android.view.ActionMode>
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.util.Property: java.lang.Class getType()>:<public>:<android.util.Property>
<android.view.KeyEvent: boolean hasModifiers(int)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.Drawable: int getAlpha()>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.Short2: void <init>(short,short)>:<public>:<android.renderscript.Short2>
<android.service.voice.AlwaysOnHotwordDetector: int getSupportedRecognitionModes()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.nfc.cardemulation.CardEmulation: void <init>()>:<>:<android.nfc.cardemulation.CardEmulation>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.Rating: android.media.Rating newThumbRating(boolean)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,android.os.ParcelFileDescriptor,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.provider.MediaStore.Audio.Media: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<android.widget.ExpandableListAdapter: java.lang.Object getChild(int,int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.app.NotificationManager.Policy: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.preference.PreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.media.MediaExtractor: void setDataSource(android.media.MediaDataSource)>:<public final native>:<android.media.MediaExtractor>
<android.renderscript.Element.DataType: void <clinit>()>:<static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.service.dreams.DreamService: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.text.SpannableStringBuilder: void clearSpans()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.hardware.usb.UsbConfiguration: void <init>()>:<>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.media.Rating: boolean isRated()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.test.mock.MockPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.media.AudioManager: void adjustVolume(int,int)>:<public>:<android.media.AudioManager>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void dragViewToBottom(android.test.ActivityInstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.system.Os: long lseek(java.io.FileDescriptor,long,int)>:<public static>:<android.system.Os>
<android.view.View: boolean isLaidOut()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession.Callback: void onSkipToPrevious()>:<public>:<android.media.session.MediaSession.Callback>
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.system.Os: android.system.StructStat stat(java.lang.String)>:<public static>:<android.system.Os>
<android.webkit.WebView: boolean performLongClick()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.nfc.tech.TagTechnology: boolean isConnected()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<android.net.LocalServerSocket: android.net.LocalSocket accept()>:<public>:<android.net.LocalServerSocket>
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.inputmethod.ExtractedText: void <clinit>()>:<static>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.content.pm.ActivityInfo: int getThemeResource()>:<public final>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: void sendIntermediatePickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.PickOptionRequest:android.service.voice.VoiceInteractionSession.Request>
<android.media.MediaDrm.KeyRequest: int getRequestType()>:<public>:<android.media.MediaDrm.KeyRequest>
<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.util.Pair: int hashCode()>:<public>:<android.util.Pair>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.provider.ContactsContract.StatusUpdates: int getPresenceIconResourceId(int)>:<public static final>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaDescription: android.os.Bundle getExtras()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.graphics.drawable.GradientDrawable: void setOrientation(android.graphics.drawable.GradientDrawable.Orientation)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.hardware.Sensor: float getMaximumRange()>:<public>:<android.hardware.Sensor>
<android.view.View: void requestUnbufferedDispatch(android.view.MotionEvent)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: float getShadowRadius()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.DocumentsContract: android.net.Uri buildRecentDocumentsUri(java.lang.String,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.widget.ViewAnimator: boolean getAnimateFirstView()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>:<public final>:<android.os.Parcel>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener,android.os.Handler)>:<public>:<android.view.ScaleGestureDetector>
<android.app.Activity: boolean isImmersive()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()>:<public>:<android.app.WallpaperManager>
<android.provider.ContactsContract.CommonDataKinds.Phone: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.pm.ResolveInfo: void <clinit>()>:<static>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.provider.ContactsContract.CommonDataKinds.Callable: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.Callable:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.media.MediaPlayer>
<android.widget.CompoundButton: boolean performClick()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.renderscript.FieldPacker: void addF32(float)>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.WifiEnterpriseConfig: void setClientKeyEntry(java.security.PrivateKey,java.security.cert.X509Certificate)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.os.Debug: int getBinderProxyObjectCount()>:<public static final native>:<android.os.Debug>
<android.view.MotionEvent: int getAction()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Message: void recycle()>:<public>:<android.os.Message:android.os.Parcelable>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.content.ContentValues: java.util.Set keySet()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.net.TrafficStats: void untagSocket(java.net.Socket)>:<public static>:<android.net.TrafficStats>
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void dragViewToTop(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>:<public static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.os.Message: void <clinit>()>:<static>:<android.os.Message:android.os.Parcelable>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMagnification()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.media.Image: void <init>()>:<>:<android.media.Image:java.lang.AutoCloseable>
<android.os.AsyncTask: boolean cancel(boolean)>:<public final>:<android.os.AsyncTask>
<android.webkit.SslErrorHandler: void cancel()>:<public>:<android.webkit.SslErrorHandler:android.os.Handler>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface.OnCancelListener)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.drawable.NinePatchDrawable: int getOpacity()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.SurfaceView: void onAttachedToWindow()>:<protected>:<android.view.SurfaceView:android.view.View>
<android.graphics.drawable.shapes.RectShape: void <init>()>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.renderscript.Short4: void <init>()>:<public>:<android.renderscript.Short4>
<android.speech.tts.SynthesisRequest: void <init>(java.lang.String,android.os.Bundle)>:<public>:<android.speech.tts.SynthesisRequest>
<android.util.ArraySet: boolean removeAll(android.util.ArraySet)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView.Validator)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: java.lang.CharSequence getMessage()>:<public>:<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.provider.ContactsContract.ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>:<public static>:<android.provider.ContactsContract.ProfileSyncState:android.provider.SyncStateContract.Columns>
<android.telecom.Call: void registerCallback(android.telecom.Call.Callback)>:<public>:<android.telecom.Call>
<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.app.Instrumentation: boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor,int)>:<public>:<android.app.Instrumentation>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.drawable.TransitionDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.test.InstrumentationTestCase: void injectInsrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.widget.CursorTreeAdapter: long getChildId(int,int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.app.ActivityGroup: void onResume()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: boolean isSuggestionsEnabled()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.graphics.Bitmap: void eraseColor(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.telephony.CellIdentityCdma: int getNetworkId()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode[] values()>:<public static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.media.midi.MidiSender: void connect(android.media.midi.MidiReceiver)>:<public>:<android.media.midi.MidiSender>
<android.widget.Button: void <init>(android.content.Context)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.app.FragmentController: void dispatchResume()>:<public>:<android.app.FragmentController>
<android.content.PeriodicSync: java.lang.String toString()>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setLiveRegion(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService.BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)>:<public abstract>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToRFC3966(java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.Filter.FilterListener: void onFilterComplete(int)>:<public abstract>:<android.widget.Filter.FilterListener>
<android.test.mock.MockCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(int,boolean)>:<public>:<android.media.MediaRouter>
<android.graphics.drawable.NinePatchDrawable: boolean isFilterBitmap()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>:<public static native>:<android.opengl.GLES20>
<junit.framework.Assert: void assertFalse(java.lang.String,boolean)>:<public static>:<junit.framework.Assert>
<android.print.PrintJobInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.AbsoluteLayout: boolean shouldDelayChildPressedState()>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.os.Debug: void startMethodTracing(java.lang.String,int)>:<public static>:<android.os.Debug>
<android.drm.DrmStore.DrmObjectType: void <init>()>:<public>:<android.drm.DrmStore.DrmObjectType>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>:<public static synchronized>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.media.effect.Effect: void <init>()>:<public>:<android.media.effect.Effect>
<android.location.Location: void writeToParcel(android.os.Parcel,int)>:<public>:<android.location.Location:android.os.Parcelable>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.AutoCompleteTextView: void onAttachedToWindow()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.sqlite.SQLiteMisuseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.hardware.camera2.params.StreamConfigurationMap: int hashCode()>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZ(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.animation.AnimationSet: long getDuration()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.text.AlteredCharSequence: int length()>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.service.notification.NotificationListenerService.RankingMap: boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService.Ranking)>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.util.LruCache: void <init>(int)>:<public>:<android.util.LruCache>
<android.webkit.URLUtil: boolean isHttpsUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.renderscript.Element: android.renderscript.Element U64_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.content.SyncAdapterType: boolean allowParallelSyncs()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.net.nsd.NsdServiceInfo: int describeContents()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>:<public>:<android.view.ViewConfiguration>
<android.widget.Gallery: void dispatchSetSelected(boolean)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.hardware.GeomagneticField: float getDeclination()>:<public>:<android.hardware.GeomagneticField>
<android.media.session.MediaSession: void setQueue(java.util.List)>:<public>:<android.media.session.MediaSession>
<android.widget.ListView: boolean areFooterDividersEnabled()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.MarginLayoutParams: void setMarginEnd(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setDenominator(java.lang.String)>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode[] values()>:<public static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getLoadingView()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<junit.runner.BaseTestRunner: void testStarted(java.lang.String)>:<public abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.text.style.TtsSpan.DecimalBuilder: void <init>(double,int,int)>:<public>:<android.text.style.TtsSpan.DecimalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.AudioTrack: int write(short[],int,int,int)>:<public>:<android.media.AudioTrack>
<android.app.Notification.Action.Builder: android.os.Bundle getExtras()>:<public>:<android.app.Notification.Action.Builder>
<android.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.AbstractWindowedCursor: boolean isString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setVariablePadding(boolean)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.PointF: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.os.PowerManager: boolean isInteractive()>:<public>:<android.os.PowerManager>
<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.graphics.drawable.BitmapDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.nfc.tech.NfcA: void close()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.util.DisplayMetrics: boolean equals(android.util.DisplayMetrics)>:<public>:<android.util.DisplayMetrics>
<android.database.AbstractCursor: float getFloat(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.appwidget.AppWidgetHost: void startAppWidgetConfigureActivityForResult(android.app.Activity,int,int,int,android.os.Bundle)>:<public final>:<android.appwidget.AppWidgetHost>
<android.graphics.drawable.ColorDrawable: void <init>(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.net.rtp.RtpStream: void setMode(int)>:<public>:<android.net.rtp.RtpStream>
<android.telecom.RemoteConnection.VideoProvider: void setCamera(java.lang.String)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.view.View: int getLeft()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.framework.TestSuite: junit.framework.Test warning(java.lang.String)>:<public static>:<junit.framework.TestSuite:junit.framework.Test>
<android.widget.Scroller: float getCurrVelocity()>:<public>:<android.widget.Scroller>
<android.text.format.DateUtils: void <init>()>:<public>:<android.text.format.DateUtils>
<android.transition.Transition.EpicenterCallback: android.graphics.Rect onGetEpicenter(android.transition.Transition)>:<public abstract>:<android.transition.Transition.EpicenterCallback>
<android.telephony.TelephonyManager: boolean hasIccCard()>:<public>:<android.telephony.TelephonyManager>
<android.content.pm.FeatureGroupInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.FeatureGroupInfo:android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: boolean isAccessibilityFocused()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.view.textservice.SpellCheckerSession: void finalize()>:<protected>:<android.view.textservice.SpellCheckerSession>
<android.media.projection.MediaProjectionManager: android.content.Intent createScreenCaptureIntent()>:<public>:<android.media.projection.MediaProjectionManager>
<android.widget.ImageView: int getMaxHeight()>:<public>:<android.widget.ImageView:android.view.View>
<android.app.Activity: void <init>()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.nfc.tech.NfcB: int getMaxTransceiveLength()>:<public>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.opengl.EGL14: int eglQueryAPI()>:<public static native>:<android.opengl.EGL14>
<android.test.mock.MockCursor: void <init>()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.hardware.display.VirtualDisplay: void <init>()>:<>:<android.hardware.display.VirtualDisplay>
<android.media.session.MediaSession.Token: void <clinit>()>:<static>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.telephony.CellIdentityWcdma: int getCid()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.content.Loader: android.content.Context getContext()>:<public>:<android.content.Loader>
<android.location.LocationProvider: boolean requiresSatellite()>:<public>:<android.location.LocationProvider>
<android.speech.tts.TextToSpeech: java.util.Set getAvailableLanguages()>:<public>:<android.speech.tts.TextToSpeech>
<android.net.Network: int hashCode()>:<public>:<android.net.Network:android.os.Parcelable>
<android.provider.CalendarContract.EventDays: void <clinit>()>:<static>:<android.provider.CalendarContract.EventDays:android.provider.CalendarContract.EventDaysColumns>
<android.renderscript.Element.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Element.Builder>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.ListPopupWindow: boolean isModal()>:<public>:<android.widget.ListPopupWindow>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.opengl.GLES30: void glGetUniformuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>:<public>:<android.app.LocalActivityManager>
<android.renderscript.FieldPacker: android.renderscript.Int2 subInt2()>:<public>:<android.renderscript.FieldPacker>
<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()>:<public>:<android.net.rtp.AudioGroup>
<android.app.NotificationManager: void setNotificationPolicy(android.app.NotificationManager.Policy)>:<public>:<android.app.NotificationManager>
<android.widget.Gallery: void setAnimationDuration(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.webkit.WebResourceResponse: java.lang.String getMimeType()>:<public>:<android.webkit.WebResourceResponse>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.transition.ChangeTransform: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.app.Service: void onStart(android.content.Intent,int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.preference.Preference: void setDependency(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForAid(android.content.ComponentName,java.lang.String)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.service.voice.VoiceInteractionSession: void onLowMemory()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.service.voice.VoiceInteractionSession: void onDestroy()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.opengl.GLES10: void glEnable(int)>:<public static native>:<android.opengl.GLES10>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar.Tab>
<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>:<public>:<android.speech.SpeechRecognizer>
<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.text.method.MultiTapKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.webkit.CookieManager: void removeAllCookies(android.webkit.ValueCallback)>:<public abstract>:<android.webkit.CookieManager>
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbTitleRes()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.text.method.ScrollingMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.net.wifi.p2p.WifiP2pDeviceList: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.widget.ProgressBar: int getProgress()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.widget.SimpleAdapter: void setDropDownViewResource(int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.WindowInsets: java.lang.String toString()>:<public>:<android.view.WindowInsets>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>:<public static>:<android.util.Base64>
<android.graphics.drawable.Drawable: void jumpToCurrentState()>:<public>:<android.graphics.drawable.Drawable>
<android.view.View.OnDragListener: boolean onDrag(android.view.View,android.view.DragEvent)>:<public abstract>:<android.view.View.OnDragListener>
<android.nfc.tech.NfcV: void close()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>:<public>:<android.os.DropBoxManager>
<android.media.Image: int getHeight()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.widget.ScrollView: void addView(android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telecom.VideoProfile.CameraCapabilities: int getHeight()>:<public>:<android.telecom.VideoProfile.CameraCapabilities:android.os.Parcelable>
<android.drm.DrmInfoRequest: void <init>(int,java.lang.String)>:<public>:<android.drm.DrmInfoRequest>
<android.widget.TextView: int getCompoundPaddingEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.util.Xml: android.util.Xml.Encoding findEncodingByName(java.lang.String)>:<public static>:<android.util.Xml>
<android.print.PrinterInfo: int hashCode()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.content.Intent: void <clinit>()>:<static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.RectF: void roundOut(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.nfc.tech.MifareClassic: int sectorToBlock(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.media.midi.MidiDeviceInfo: void <init>()>:<>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.provider.CalendarContract.Colors: void <init>()>:<>:<android.provider.CalendarContract.Colors:android.provider.CalendarContract.ColorsColumns>
<android.util.AtomicFile: java.io.FileInputStream openRead()>:<public>:<android.util.AtomicFile>
<android.text.format.Formatter: java.lang.String formatShortFileSize(android.content.Context,long)>:<public static>:<android.text.format.Formatter>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode valueOf(java.lang.String)>:<public static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.test.ApplicationTestCase: void terminateApplication()>:<protected final>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AdapterView: android.widget.AdapterView.OnItemLongClickListener getOnItemLongClickListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.SoundPool: int play(int,float,float,int,int,float)>:<public final>:<android.media.SoundPool>
<android.os.Debug: void resetThreadExternalAllocSize()>:<public static>:<android.os.Debug>
<android.text.style.LeadingMarginSpan.Standard: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.widget.ViewAnimator: void removeViews(int,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void invalidate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.StateListAnimator: void jumpToCurrentState()>:<public>:<android.animation.StateListAnimator:java.lang.Cloneable>
<android.system.Os: void chown(java.lang.String,int,int)>:<public static>:<android.system.Os>
<android.content.RestrictionEntry: void <init>(int,java.lang.String)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.util.Config: void <init>()>:<>:<android.util.Config>
<android.bluetooth.le.ScanSettings: void <init>()>:<>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.view.ViewConfiguration: int getKeyRepeatDelay()>:<public static>:<android.view.ViewConfiguration>
<android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.media.tv.TvView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void <init>()>:<public>:<android.opengl.GLES10>
<android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element.DataType,int)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.hardware.camera2.CameraManager: void registerAvailabilityCallback(android.hardware.camera2.CameraManager.AvailabilityCallback,android.os.Handler)>:<public>:<android.hardware.camera2.CameraManager>
<android.widget.ProgressBar: void incrementSecondaryProgressBy(int)>:<public final synchronized>:<android.widget.ProgressBar:android.view.View>
<android.renderscript.FieldPacker: void addBoolean(boolean)>:<public>:<android.renderscript.FieldPacker>
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()>:<public>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<org.xmlpull.v1.sax2.Driver: int getLength()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>:<public>:<android.telephony.SmsManager>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.test.mock.MockResources: android.util.DisplayMetrics getDisplayMetrics()>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.Instrumentation: void start()>:<public>:<android.app.Instrumentation>
<android.renderscript.Double3: void <init>(double,double,double)>:<public>:<android.renderscript.Double3>
<android.net.SSLCertificateSocketFactory: void setTrustManagers(javax.net.ssl.TrustManager[])>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.textservice.TextInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setBufferSizeInBytes(int)>:<public>:<android.media.AudioTrack.Builder>
<android.widget.NumberPicker: int getMaxValue()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.OverScroller: void notifyHorizontalEdgeReached(int,int,int)>:<public>:<android.widget.OverScroller>
<android.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.RelativeLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursor(android.graphics.Rect)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.bluetooth.BluetoothManager: java.util.List getDevicesMatchingConnectionStates(int,int[])>:<public>:<android.bluetooth.BluetoothManager>
<android.widget.CompoundButton: int getCompoundPaddingLeft()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.net.sip.SipAudioCall: void sendDtmf(int,android.os.Message)>:<public>:<android.net.sip.SipAudioCall>
<android.telecom.Call.Callback: void onChildrenChanged(android.telecom.Call,java.util.List)>:<public>:<android.telecom.Call.Callback>
<android.location.Address: void setAddressLine(int,java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.os.IBinder,int,int)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setSummaryText(java.lang.CharSequence)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.app.KeyguardManager: boolean isKeyguardSecure()>:<public>:<android.app.KeyguardManager>
<android.graphics.Paint: java.util.Locale getTextLocale()>:<public>:<android.graphics.Paint>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.media.tv.TvInputService.Session: void onUnblockContent(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.telephony.PhoneNumberUtils: void <init>()>:<public>:<android.telephony.PhoneNumberUtils>
<android.widget.TableLayout: void addView(android.view.View)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic,boolean)>:<public>:<android.text.BidiFormatter>
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.view.ViewGroup: boolean hasFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.Annotation: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>:<public>:<android.graphics.Canvas>
<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAsciiCapable(boolean)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.service.chooser.ChooserTarget: int describeContents()>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.telecom.RemoteConference: void merge()>:<public>:<android.telecom.RemoteConference>
<android.media.MediaScannerConnection: void disconnect()>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.view.View: int getSuggestedMinimumWidth()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.hardware.Camera.ErrorCallback: void onError(int,android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.ErrorCallback>
<android.widget.ZoomButtonsController: boolean isVisible()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.graphics.pdf.PdfDocument: java.util.List getPages()>:<public>:<android.graphics.pdf.PdfDocument>
<android.widget.DigitalClock: void onAttachedToWindow()>:<protected>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>:<public>:<android.net.ConnectivityManager>
<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>:<public>:<android.location.LocationProvider>
<android.content.Context: android.content.ComponentName startService(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.view.View.OnSystemUiVisibilityChangeListener: void onSystemUiVisibilityChange(int)>:<public abstract>:<android.view.View.OnSystemUiVisibilityChangeListener>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.os.Parcel: void <init>()>:<>:<android.os.Parcel>
<android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.graphics.drawable.DrawableWrapper: int getAlpha()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>:<protected final>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)>:<public static>:<android.view.ViewDebug>
<android.content.ClipboardManager: java.lang.CharSequence getText()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.service.voice.VoiceInteractionSession: void onShow(android.os.Bundle,int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.view.ViewConfiguration: int getPressedStateDuration()>:<public static>:<android.view.ViewConfiguration>
<android.renderscript.FieldPacker: android.renderscript.Byte2 subByte2()>:<public>:<android.renderscript.FieldPacker>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>:<public>:<android.graphics.Path>
<android.test.mock.MockContext: void startActivity(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectResourceMismatches()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.renderscript.Allocation: void <init>()>:<>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.util.Printer: void println(java.lang.String)>:<public abstract>:<android.util.Printer>
<android.widget.Gallery.LayoutParams: void <init>(int,int)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.app.ActionBar.OnNavigationListener: boolean onNavigationItemSelected(int,long)>:<public abstract>:<android.app.ActionBar.OnNavigationListener>
<android.telecom.Connection.VideoProvider: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>:<public>:<android.telecom.Connection.VideoProvider>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.service.textservice.SpellCheckerService.Session: void <init>()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>:<public static>:<android.util.Xml>
<android.widget.Switch: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.telecom.Connection.VideoProvider: void <init>()>:<public>:<android.telecom.Connection.VideoProvider>
<android.widget.CheckedTextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.rtp.RtpStream: void finalize()>:<protected>:<android.net.rtp.RtpStream>
<junit.framework.TestCase: java.lang.String getName()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.view.View: void setMeasuredDimension(int,int)>:<protected final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.wifi.WifiEnterpriseConfig: void setPhase2Method(int)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.view.KeyEvent: char getMatch(char[])>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AbsoluteLayout.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.os.Message: android.os.Message obtain(android.os.Handler)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.graphics.Movie: void <init>()>:<>:<android.graphics.Movie>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)>:<public static>:<android.text.style.CharacterStyle>
<android.app.ExpandableListActivity: long getSelectedId()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ZoomButtonsController: boolean isAutoDismissed()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.gesture.GestureOverlayView: void addOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockResources: void getValue(java.lang.String,android.util.TypedValue,boolean)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>:<public>:<org.json.JSONArray>
<android.widget.MediaController.MediaPlayerControl: void seekTo(int)>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.test.AndroidTestCase: void assertWritingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.database.MergeCursor: long getLong(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.telecom.InCallService: void onCallAudioStateChanged(android.telecom.CallAudioState)>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvInputService.Session: void notifyContentBlocked(android.media.tv.TvContentRating)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.preference.MultiSelectListPreference: void setEntryValues(java.lang.CharSequence[])>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ViewGroup: void drawableStateChanged()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: void cancelPendingInputEvents()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup: void dispatchProvideStructure(android.view.ViewStructure)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioTrack: boolean getTimestamp(android.media.AudioTimestamp)>:<public>:<android.media.AudioTrack>
<junit.runner.BaseTestRunner: java.lang.String elapsedTimeAsString(long)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.renderscript.ScriptIntrinsicBLAS: void DSYR2(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ArrayAdapter: void remove(java.lang.Object)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.Window: boolean performContextMenuIdentifierAction(int,int)>:<public abstract>:<android.view.Window>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.String)>:<public>:<android.hardware.camera2.CameraAccessException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.Activity: void setContentTransitionManager(android.transition.TransitionManager)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.system.Os: android.system.StructStat lstat(java.lang.String)>:<public static>:<android.system.Os>
<android.view.Surface: void <clinit>()>:<static>:<android.view.Surface:android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.os.MemoryFile: void <init>(java.lang.String,int)>:<public>:<android.os.MemoryFile>
<android.widget.ImageView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ImageView:android.view.View>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: int getTop()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.app.Instrumentation: void waitForIdleSync()>:<public>:<android.app.Instrumentation>
<android.net.rtp.RtpStream: int getMode()>:<public>:<android.net.rtp.RtpStream>
<android.app.Instrumentation: void onStart()>:<public>:<android.app.Instrumentation>
<android.content.IntentFilter: int countCategories()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.content.Context: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public abstract>:<android.content.Context>
<android.text.DynamicLayout: boolean getLineContainsTab(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.app.ActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>:<public>:<android.app.ActivityManager>
<android.inputmethodservice.Keyboard: void setVerticalGap(int)>:<protected>:<android.inputmethodservice.Keyboard>
<android.telecom.RemoteConference: void playDtmfTone(char)>:<public>:<android.telecom.RemoteConference>
<android.os.AsyncTask: void publishProgress(java.lang.Object[])>:<protected final transient>:<android.os.AsyncTask>
<android.content.ContentProvider: android.net.Uri uncanonicalize(android.net.Uri)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.widget.DialerFilter: void setFilterWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.ListPopupWindow: int getSoftInputMode()>:<public>:<android.widget.ListPopupWindow>
<android.content.Context: java.io.File getObbDir()>:<public abstract>:<android.content.Context>
<android.text.method.ReplacementTransformationMethod: void <init>()>:<public>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.content.res.AssetFileDescriptor: long getStartOffset()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.test.mock.MockResources: java.lang.CharSequence getText(int,java.lang.CharSequence)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.renderscript.ScriptIntrinsic3DLUT: void <init>()>:<>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.renderscript.Sampler: void <init>()>:<>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.service.dreams.DreamService: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.R.plurals: void <init>()>:<public>:<android.R.plurals>
<android.preference.PreferenceFragment: void onStart()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.ViewAnimator: void showNext()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)>:<public>:<android.gesture.GestureStore>
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.bluetooth.le.ScanFilter: java.lang.String toString()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(boolean)>:<public static>:<android.text.BidiFormatter>
<android.widget.TableLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.audiofx.Visualizer: boolean getEnabled()>:<public>:<android.media.audiofx.Visualizer>
<android.widget.NumberPicker: void jumpDrawablesToCurrentState()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>:<public static>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>:<public static>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.telephony.CellInfoCdma: void <clinit>()>:<static>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.service.notification.NotificationListenerService: void <init>()>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>:<protected>:<android.util.LruCache>
<android.hardware.Camera.Parameters: java.util.List getSupportedColorEffects()>:<public>:<android.hardware.Camera.Parameters>
<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.KeyEvent: void <init>(int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.wifi.WifiConfiguration.GroupCipher: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.GroupCipher>
<android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.util.SparseIntArray: int indexOfKey(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.content.pm.ResolveInfo.DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.content.pm.ResolveInfo.DisplayNameComparator:java.util.Comparator>
<android.media.MediaRecorder.VideoSource: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.VideoSource>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicBLAS: void DSPR2(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: boolean markSupported()>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.text.style.URLSpan: int describeContents()>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES20: void glFlush()>:<public static native>:<android.opengl.GLES20>
<android.provider.ContactsContract.Contacts: void <clinit>()>:<static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.app.RemoteInput.Builder: android.os.Bundle getExtras()>:<public>:<android.app.RemoteInput.Builder>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewGroup: void dispatchSetSelected(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.sip.SipProfile: java.lang.String getUserName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>:<public>:<android.os.BaseBundle>
<android.view.SurfaceHolder: android.view.Surface getSurface()>:<public abstract>:<android.view.SurfaceHolder>
<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.telecom.DisconnectCause: java.lang.String getReason()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.preference.Preference: java.lang.String getKey()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.Path: void set(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.os.Bundle: short getShort(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.ActivityManager.RunningTaskInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.telephony.gsm.SmsMessage: boolean isCphsMwiMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.service.notification.NotificationListenerService.Ranking: boolean matchesInterruptionFilter()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.widget.TimePicker: int getHour()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.NetworkCapabilities: void <clinit>()>:<static>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.Fragment.InstantiationException: void <init>(java.lang.String,java.lang.Exception)>:<public>:<android.app.Fragment.InstantiationException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setSignaturePaddings(java.lang.String[])>:<public transient>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.content.BroadcastReceiver.PendingResult: void setResultData(java.lang.String)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.os.Environment: boolean isExternalStorageEmulated(java.io.File)>:<public static>:<android.os.Environment>
<android.view.ViewGroup: int getPersistentDrawingCache()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.app.Application: void onTerminate()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.inputmethodservice.Keyboard: void setKeyWidth(int)>:<protected>:<android.inputmethodservice.Keyboard>
<android.animation.Animator: boolean isRunning()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.InputDevice: int getSources()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.Surface: void finalize()>:<protected>:<android.view.Surface:android.os.Parcelable>
<android.content.OperationApplicationException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.os.ParcelFileDescriptor: void close()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.telephony.CellSignalStrengthGsm: int getDbm()>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.widget.VideoView: boolean canSeekBackward()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.view.View: boolean hasOnClickListeners()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(java.lang.CharSequence,boolean)>:<public>:<android.media.MediaRouter>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>:<public>:<android.service.voice.VoiceInteractionSession.ConfirmationRequest:android.service.voice.VoiceInteractionSession.Request>
<android.widget.SeekBar: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.app.UiAutomation: android.view.accessibility.AccessibilityEvent executeAndWaitForEvent(java.lang.Runnable,android.app.UiAutomation.AccessibilityEventFilter,long)>:<public>:<android.app.UiAutomation>
<android.test.mock.MockResources: java.lang.String getString(int,java.lang.Object[])>:<public transient>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.Spinner: int getDropDownWidth()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.Manifest: void <init>()>:<public>:<android.Manifest>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void attachToken(android.os.IBinder)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.bluetooth.BluetoothGattDescriptor: int getPermissions()>:<public>:<android.bluetooth.BluetoothGattDescriptor>
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>:<public>:<android.media.MediaRecorder>
<android.content.res.Configuration: int hashCode()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.hardware.Camera.Face: void <init>()>:<public>:<android.hardware.Camera.Face>
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>:<public>:<android.os.UserManager>
<android.opengl.Visibility: void <init>()>:<public>:<android.opengl.Visibility>
<android.provider.CalendarContract.CalendarCache: void <init>()>:<>:<android.provider.CalendarContract.CalendarCache:android.provider.CalendarContract.CalendarCacheColumns>
<android.test.mock.MockCursor: android.net.Uri getNotificationUri()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.mtp.MtpObjectInfo: int getAssociationDesc()>:<public final>:<android.mtp.MtpObjectInfo>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.net.ConnectivityManager.NetworkCallback: void onLost(android.net.Network)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>:<protected>:<android.net.UrlQuerySanitizer>
<android.app.AlarmManager.AlarmClockInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.test.AndroidTestRunner: junit.framework.TestResult createTestResult()>:<protected>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>:<public>:<android.graphics.NinePatch>
<android.provider.CalendarContract.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>:<public static final>:<android.provider.CalendarContract.Instances:android.provider.BaseColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.os.IInterface: android.os.IBinder asBinder()>:<public abstract>:<android.os.IInterface>
<android.content.pm.ResolveInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>:<public>:<android.content.pm.ResolveInfo.DisplayNameComparator:java.util.Comparator>
<android.media.tv.TvInputManager.TvInputCallback: void onInputAdded(java.lang.String)>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.os.UserManager: boolean isSystemUser()>:<public>:<android.os.UserManager>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.webkit.WebView: int computeVerticalScrollOffset()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaPlayer: int getVideoWidth()>:<public native>:<android.media.MediaPlayer>
<android.app.usage.UsageStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.widget.TextView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ContentProviderResult: void <init>(android.os.Parcel)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.app.ApplicationErrorReport.AnrInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.widget.Scroller: void <init>(android.content.Context)>:<public>:<android.widget.Scroller>
<android.content.pm.PackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: int getVerticalScrollbarWidth()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Instrumentation: void sendStringSync(java.lang.String)>:<public>:<android.app.Instrumentation>
<android.provider.MediaStore.Audio.Playlists.Members: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Audio.Playlists.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.text.style.TextAppearanceSpan: int getTextSize()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder syncOnce()>:<public>:<android.content.SyncRequest.Builder>
<org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.hardware.camera2.CameraCaptureSession: void abortCaptures()>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[])>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.media.tv.TvInputManager: void registerCallback(android.media.tv.TvInputManager.TvInputCallback,android.os.Handler)>:<public>:<android.media.tv.TvInputManager>
<android.widget.CompoundButton: android.graphics.PorterDuff.Mode getButtonTintMode()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.speech.tts.TextToSpeechService: int onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>:<protected abstract>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaMetadata: java.lang.String getString(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.util.Log: int d(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.location.Address: java.lang.String getPostalCode()>:<public>:<android.location.Address:android.os.Parcelable>
<android.test.AndroidTestCase: android.content.Context getContext()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.test.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.ComparisonFailure:android.test.AssertionFailedError,java.lang.Error,java.lang.Throwable>
<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>()>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.InputMethodSession.EventCallback: void finishedEvent(int,boolean)>:<public abstract>:<android.view.inputmethod.InputMethodSession.EventCallback>
<android.graphics.drawable.BitmapDrawable: int getAlpha()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.app.job.JobInfo: boolean isRequireCharging()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.telephony.CellInfoGsm: void <init>()>:<>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.preference.Preference: void setIntent(android.content.Intent)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.net.ProxyInfo: void <init>()>:<>:<android.net.ProxyInfo:android.os.Parcelable>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.audiofx.BassBoost: void setProperties(android.media.audiofx.BassBoost.Settings)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.webkit.WebChromeClient: void onGeolocationPermissionsHidePrompt()>:<public>:<android.webkit.WebChromeClient>
<android.renderscript.Long4: void <init>(long,long,long,long)>:<public>:<android.renderscript.Long4>
<android.media.ImageReader: int getWidth()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.TimePicker: void <init>(android.content.Context)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.pm.ResolveInfo.DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>:<public final>:<android.content.pm.ResolveInfo.DisplayNameComparator:java.util.Comparator>
<android.util.ArraySet: void <init>(android.util.ArraySet)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.app.Notification.Builder: android.app.Notification.Builder setDeleteIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.view.View: void setPaddingRelative(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintDocumentAdapter: void <init>()>:<public>:<android.print.PrintDocumentAdapter>
<android.text.style.TypefaceSpan: int getSpanTypeId()>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.mtp.MtpObjectInfo: int getAssociationType()>:<public final>:<android.mtp.MtpObjectInfo>
<android.util.JsonReader: java.lang.String nextString()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.widget.ScrollView: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.preference.MultiSelectListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.GradientDrawable: float getGradientRadius()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.widget.Gallery: void onLongPress(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.gesture.GestureLibrary: boolean load()>:<public abstract>:<android.gesture.GestureLibrary>
<android.view.WindowManager.BadTokenException: void <init>()>:<public>:<android.view.WindowManager.BadTokenException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.WallpaperManager: void setResource(int)>:<public>:<android.app.WallpaperManager>
<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.provider.DocumentsContract: boolean deleteDocument(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.DocumentsContract>
<junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>:<public synchronized>:<junit.framework.TestResult>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.VoiceInteractor.ConfirmationRequest: void <init>(android.app.VoiceInteractor.Prompt,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.ConfirmationRequest:android.app.VoiceInteractor.Request>
<android.widget.NumberPicker: void setMinValue(int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.le.ScanSettings: int getScanResultType()>:<public>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>:<public static>:<android.graphics.Typeface>
<android.database.sqlite.SQLiteAccessPermException: void <init>()>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.util.JsonWriter: android.util.JsonWriter nullValue()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.view.View.BaseSavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.test.mock.MockCursor: long getLong(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.AbsListView: void smoothScrollToPosition(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.dreams.DreamService: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)>:<public>:<android.view.TextureView:android.view.View>
<android.view.ViewGroup: void dispatchWindowSystemUiVisiblityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.test.mock.MockContext: java.lang.String getPackageResourcePath()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.mock.MockCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.test.ActivityUnitTestCase: void setUp()>:<protected>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.database.AbstractCursor: android.net.Uri getNotificationUri()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.Window: void setContentView(int)>:<public abstract>:<android.view.Window>
<android.util.Property: java.lang.Object get(java.lang.Object)>:<public abstract>:<android.util.Property>
<android.print.PrinterCapabilitiesInfo: java.util.List getMediaSizes()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>:<public>:<android.graphics.Outline>
<android.widget.PopupWindow.OnDismissListener: void onDismiss()>:<public abstract>:<android.widget.PopupWindow.OnDismissListener>
<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.AbstractCursor: int getColumnCount()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioManager: void registerRemoteControlClient(android.media.RemoteControlClient)>:<public>:<android.media.AudioManager>
<android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.app.assist.AssistContent: android.os.Bundle getExtras()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.nfc.tech.MifareUltralight: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.service.voice.VoiceInteractionSessionService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.hardware.camera2.params.RggbChannelVector: float getGreenOdd()>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.util.Base64InputStream: void reset()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.renderscript.Element: android.renderscript.Element I8_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.GLES10: void glFogx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.bluetooth.BluetoothHealth: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.backup.BackupAgent: void onDestroy()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.text.StaticLayout: int getLineTop(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)>:<public static>:<android.provider.MediaStore>
<android.telephony.CellSignalStrengthGsm: int hashCode()>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera.ErrorCallback)>:<public final>:<android.hardware.Camera>
<android.view.View.DragShadowBuilder: void onDrawShadow(android.graphics.Canvas)>:<public>:<android.view.View.DragShadowBuilder>
<android.nfc.NfcAdapter: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)>:<public>:<android.nfc.NfcAdapter>
<android.content.ContentQueryMap: void close()>:<public synchronized>:<android.content.ContentQueryMap:java.util.Observable>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.session.MediaSession.Callback: void onRewind()>:<public>:<android.media.session.MediaSession.Callback>
<android.os.Debug: void resetThreadExternalAllocCount()>:<public static>:<android.os.Debug>
<android.graphics.drawable.shapes.ArcShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.ArcShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.accessibilityservice.AccessibilityServiceInfo: void <init>()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.widget.Switch: void setSwitchPadding(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.provider.Telephony.Sms.Draft: void <init>()>:<>:<android.provider.Telephony.Sms.Draft:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.media.audiofx.Equalizer.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>:<public final transient>:<android.os.AsyncTask>
<android.widget.NumberPicker: boolean performLongClick()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.ContentProviderOperation: boolean isDelete()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.system.Os: void mlock(long,long)>:<public static>:<android.system.Os>
<android.content.pm.PackageInstaller.Session: void setStagingProgress(float)>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.provider.DocumentsContract: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.renderscript.FieldPacker: void addU8(short)>:<public>:<android.renderscript.FieldPacker>
<android.telephony.CellSignalStrength: boolean equals(java.lang.Object)>:<public abstract>:<android.telephony.CellSignalStrength>
<android.hardware.usb.UsbInterface: int getId()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.json.JSONObject: void <init>()>:<public>:<org.json.JSONObject>
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.telephony.SubscriptionInfo: java.lang.CharSequence getDisplayName()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.app.Notification.WearableExtender: android.app.Notification.Builder extend(android.app.Notification.Builder)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.content.pm.PackageManager: void removePackageFromPreferred(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession.Listener)>:<public>:<android.net.sip.SipManager>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.opengl.GLES20: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaPlayer.OnVideoSizeChangedListener: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnVideoSizeChangedListener>
<android.animation.RectEvaluator: void <init>(android.graphics.Rect)>:<public>:<android.animation.RectEvaluator:android.animation.TypeEvaluator>
<android.app.admin.SystemUpdatePolicy: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.bluetooth.le.AdvertiseData: java.util.List getServiceUuids()>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.view.Window: int getFeatures()>:<protected final>:<android.view.Window>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.AdapterViewFlipper: boolean isAutoStart()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.provider.Settings.System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.test.mock.MockResources: java.lang.CharSequence getQuantityText(int,int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.content.Intent: java.lang.String getScheme()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.preference.Preference: void saveHierarchyState(android.os.Bundle)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.appwidget.AppWidgetProviderInfo: void <init>()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void <init>()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Message: android.os.Handler getTarget()>:<public>:<android.os.Message:android.os.Parcelable>
<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>:<public>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.location.Criteria: void <clinit>()>:<static>:<android.location.Criteria:android.os.Parcelable>
<android.test.mock.MockCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.os.Debug.MemoryInfo: int getTotalPrivateDirty()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicResize: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.audiofx.AcousticEchoCanceler: android.media.audiofx.AcousticEchoCanceler create(int)>:<public static>:<android.media.audiofx.AcousticEchoCanceler:android.media.audiofx.AudioEffect>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.view.Surface.OutOfResourcesException: void <init>()>:<public>:<android.view.Surface.OutOfResourcesException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.widget.AbsListView: void smoothScrollBy(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.MemoryFile: boolean allowPurging(boolean)>:<public synchronized>:<android.os.MemoryFile>
<android.util.MonthDisplayHelper: int getFirstDayOfMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.media.MediaCrypto: void finalize()>:<protected>:<android.media.MediaCrypto>
<android.widget.ExpandableListAdapter: long getCombinedGroupId(long)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.renderscript.Element: int getSubElementArraySize(int)>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.hardware.camera2.TotalCaptureResult: java.util.List getPartialResults()>:<public>:<android.hardware.camera2.TotalCaptureResult:android.hardware.camera2.CaptureResult,android.hardware.camera2.CameraMetadata>
<android.content.Context: int checkCallingPermission(java.lang.String)>:<public abstract>:<android.content.Context>
<android.telephony.CellSignalStrengthLte: int getDbm()>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.hardware.Camera.Parameters: int getPictureFormat()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.app.SearchManager.OnDismissListener: void onDismiss()>:<public abstract>:<android.app.SearchManager.OnDismissListener>
<android.view.ViewGroup.MarginLayoutParams: void setMargins(int,int,int,int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.app.ProgressDialog: void incrementProgressBy(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.provider.DocumentsProvider: java.lang.String getDocumentType(java.lang.String)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.media.MediaMuxer: void stop()>:<public>:<android.media.MediaMuxer>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.Builder: android.app.Notification.Builder extend(android.app.Notification.Extender)>:<public>:<android.app.Notification.Builder>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.content.pm.LauncherActivityInfo: android.content.ComponentName getComponentName()>:<public>:<android.content.pm.LauncherActivityInfo>
<android.os.Parcel: void writeIntArray(int[])>:<public final>:<android.os.Parcel>
<android.content.CursorLoader: void deliverResult(java.lang.Object)>:<public volatile>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewConfiguration: int getScrollBarFadeDuration()>:<public static>:<android.view.ViewConfiguration>
<android.app.Dialog: void onContentChanged()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.nfc.cardemulation.OffHostApduService: void <init>()>:<public>:<android.nfc.cardemulation.OffHostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Debug: int getGlobalFreedSize()>:<public static>:<android.os.Debug>
<android.graphics.RectF: boolean equals(java.lang.Object)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.net.VpnService.Builder: android.os.ParcelFileDescriptor establish()>:<public>:<android.net.VpnService.Builder>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.View: void invalidate(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.Switch: java.lang.CharSequence getTextOff()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.test.mock.MockResources: int getDimensionPixelOffset(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.text.style.SuperscriptSpan: int describeContents()>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.session.MediaSession: void release()>:<public>:<android.media.session.MediaSession>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.printservice.PrinterDiscoverySession: void onDestroy()>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.media.MediaPlayer: void addTimedTextSource(android.content.Context,android.net.Uri,java.lang.String)>:<public>:<android.media.MediaPlayer>
<android.drm.DrmInfo: java.util.Iterator iterator()>:<public>:<android.drm.DrmInfo>
<android.app.SearchableInfo: int getSuggestThreshold()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.job.JobParameters: boolean isOverrideDeadlineExpired()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<junit.framework.ComparisonFailure: java.lang.String getActual()>:<public>:<junit.framework.ComparisonFailure:junit.framework.AssertionFailedError,java.lang.AssertionError,java.lang.Error,java.lang.Throwable>
<android.service.carrier.CarrierService: void <init>()>:<public>:<android.service.carrier.CarrierService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceData(android.os.ParcelUuid,byte[])>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.util.Base64: byte[] decode(byte[],int,int,int)>:<public static>:<android.util.Base64>
<android.widget.GridView: int getStretchMode()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.Configuration: void <clinit>()>:<static>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.service.restrictions.RestrictionsReceiver: void onRequestPermission(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>:<public abstract>:<android.service.restrictions.RestrictionsReceiver:android.content.BroadcastReceiver>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>:<public>:<android.hardware.fingerprint.FingerprintManager.CryptoObject>
<android.opengl.GLES11: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.AdapterViewAnimator: void deferNotifyDataSetChanged()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Rect: int width()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>:<public abstract>:<android.webkit.WebViewDatabase>
<junit.framework.Assert: void assertEquals(java.lang.String,int,int)>:<public static>:<junit.framework.Assert>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>:<public>:<android.media.ExifInterface>
<android.app.backup.FileBackupHelperBase: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FileBackupHelperBase>
<android.app.Activity: void finish()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.Intent: android.graphics.Rect getSourceBounds()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.GridLayout: void setUseDefaultMargins(boolean)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.tv.TvInputService.HardwareSession: java.lang.String getHardwareInputId()>:<public abstract>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.graphics.drawable.VectorDrawable: int getAlpha()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.database.CursorJoiner.Result: void <clinit>()>:<static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.os.Bundle: char[] getCharArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.telecom.InCallService.VideoCall.Callback: void <init>()>:<public>:<android.telecom.InCallService.VideoCall.Callback>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View.OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnTouchListener>
<android.graphics.Paint.FontMetricsInt: void <init>()>:<public>:<android.graphics.Paint.FontMetricsInt>
<android.widget.Toast: int getXOffset()>:<public>:<android.widget.Toast>
<android.net.VpnService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ListPopupWindow: void setInputMethodMode(int)>:<public>:<android.widget.ListPopupWindow>
<android.animation.PropertyValuesHolder: java.lang.Object clone()>:<public volatile>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.app.FragmentController: void doLoaderStart()>:<public>:<android.app.FragmentController>
<android.view.VelocityTracker: void <init>()>:<>:<android.view.VelocityTracker>
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>:<protected>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar>
<android.view.KeyEvent.DispatcherState: void performedLongPress(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.opengl.EGLObjectHandle: int getHandle()>:<public>:<android.opengl.EGLObjectHandle>
<android.content.BroadcastReceiver.PendingResult: void setResultExtras(android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.system.OsConstants: java.lang.String errnoName(int)>:<public static>:<android.system.OsConstants>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)>:<public static>:<android.text.TextUtils>
<android.view.accessibility.AccessibilityRecord: void setBeforeText(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater.Factory2)>:<public>:<android.view.LayoutInflater>
<android.bluetooth.BluetoothGattCharacteristic: void <init>(java.util.UUID,int,int)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>:<public>:<android.webkit.WebChromeClient>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsPbcSupported()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.content.pm.PackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>:<public abstract>:<android.content.pm.PackageManager>
<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.service.media.MediaBrowserService: void setSessionToken(android.media.session.MediaSession.Token)>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.session.MediaController.TransportControls: void sendCustomAction(android.media.session.PlaybackState.CustomAction,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.view.accessibility.AccessibilityRecord: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityRecord>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedScanBatchingSupported()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.service.carrier.CarrierMessagingService: void onSendMultipartTextSms(java.util.List,int,java.lang.String,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.CalendarContract.CalendarCache: void <clinit>()>:<static>:<android.provider.CalendarContract.CalendarCache:android.provider.CalendarContract.CalendarCacheColumns>
<android.provider.ContactsContract.DataUsageFeedback: void <init>()>:<public>:<android.provider.ContactsContract.DataUsageFeedback>
<android.renderscript.ScriptIntrinsicYuvToRGB: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.renderscript.ScriptGroup.Closure: android.renderscript.ScriptGroup.Future getReturn()>:<public>:<android.renderscript.ScriptGroup.Closure:android.renderscript.BaseObj>
<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<org.json.JSONArray: boolean optBoolean(int)>:<public>:<org.json.JSONArray>
<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.widget.AutoCompleteTextView: void setThreshold(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.AbstractCursor: boolean moveToPrevious()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.preference.TwoStatePreference: boolean shouldDisableDependents()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStopped(java.lang.String)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.os.PatternMatcher: java.lang.String toString()>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconBitmap(android.graphics.Bitmap)>:<public>:<android.media.MediaDescription.Builder>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.os.Parcel)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.bluetooth.le.ScanRecord: int getTxPowerLevel()>:<public>:<android.bluetooth.le.ScanRecord>
<android.util.ArrayMap: boolean retainAll(java.util.Collection)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>:<public>:<android.location.LocationManager>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>:<public>:<android.media.Ringtone>
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)>:<public>:<android.os.TokenWatcher>
<android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>:<public static>:<android.text.format.Time>
<android.graphics.pdf.PdfRenderer: void finalize()>:<protected>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.widget.RemoteViewsService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.widget.RemoteViewsService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.midi.MidiDeviceInfo: int getId()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.graphics.Canvas: int getWidth()>:<public>:<android.graphics.Canvas>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addActions(java.util.List)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<org.xmlpull.v1.sax2.Driver: void setProperty(java.lang.String,java.lang.Object)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat[] values()>:<public static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.widget.QuickContactBadge: void drawableStateChanged()>:<protected>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.ActionMenuView: void dismissPopupMenus()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Point: void offset(int,int)>:<public final>:<android.graphics.Point:android.os.Parcelable>
<android.widget.ArrayAdapter: long getItemId(int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setPassword(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()>:<public static>:<android.media.JetPlayer>
<android.content.ContentProviderOperation: void <init>()>:<>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.printservice.PrintJob: boolean cancel()>:<public>:<android.printservice.PrintJob>
<android.security.keystore.KeyProtection: int getUserAuthenticationValidityDurationSeconds()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.view.ActionMode: void setSubtitle(java.lang.CharSequence)>:<public abstract>:<android.view.ActionMode>
<android.renderscript.FieldPacker: long subI64()>:<public>:<android.renderscript.FieldPacker>
<android.net.ConnectivityManager: void reportNetworkConnectivity(android.net.Network,boolean)>:<public>:<android.net.ConnectivityManager>
<android.speech.RecognitionService.Callback: void partialResults(android.os.Bundle)>:<public>:<android.speech.RecognitionService.Callback>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(int,java.lang.String,long,long)>:<public>:<android.app.usage.NetworkStatsManager>
<android.widget.AbsListView: int getListPaddingTop()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.net.LocalServerSocket>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setUserAuthenticationValidityDurationSeconds(int)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.app.Activity: boolean isTaskRoot()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.animation.Animator: java.lang.Object clone()>:<public volatile>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.TableLayout: boolean isColumnStretchable(int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.NativeActivity: void onWindowFocusChanged(boolean)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.preference.PreferenceManager: void <init>()>:<>:<android.preference.PreferenceManager>
<android.view.View: void getHitRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>:<public final>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.WindowAnimationFrameStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>:<public abstract>:<android.content.Context>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRSM(int,int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.location.Location: double getAltitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.service.wallpaper.WallpaperService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.util.Rfc822Token: int hashCode()>:<public>:<android.text.util.Rfc822Token>
<android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)>:<public static>:<android.media.MediaCodec>
<android.widget.AbsListView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.HorizontalScrollView: void computeScroll()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: void onDestroy()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.content.ComponentName: java.lang.String flattenToShortString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.graphics.Matrix: int hashCode()>:<public>:<android.graphics.Matrix>
<android.media.tv.TvView: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.widget.TextView: void setGravity(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.CursorWrapper: void setExtras(android.os.Bundle)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>:<public>:<android.app.Instrumentation>
<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>:<protected>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.graphics.Canvas: void restore()>:<public>:<android.graphics.Canvas>
<android.media.session.MediaController: java.lang.String getPackageName()>:<public>:<android.media.session.MediaController>
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.test.ServiceTestCase: void shutdownService()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>:<public abstract>:<android.content.ServiceConnection>
<android.hardware.Camera.ShutterCallback: void onShutter()>:<public abstract>:<android.hardware.Camera.ShutterCallback>
<android.app.Activity: void takeKeyEvents(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.nfc.tech.Ndef: boolean isWritable()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.SurfaceView:android.view.View>
<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)>:<public final>:<android.media.MediaFormat>
<android.graphics.ColorMatrix: void setYUV2RGB()>:<public>:<android.graphics.ColorMatrix>
<android.view.animation.Animation: void <init>()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.content.pm.PermissionInfo: void <init>()>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onVideoQualityChanged(android.telecom.RemoteConnection.VideoProvider,int)>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.MediaCodec.BufferInfo: void set(int,int,long,int)>:<public>:<android.media.MediaCodec.BufferInfo>
<android.media.MediaCodecInfo.VideoCapabilities: int getWidthAlignment()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.opengl.GLES11: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.MediaController.MediaPlayerControl: int getDuration()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>:<protected>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.widget.OverScroller: void startScroll(int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.widget.SearchView: void setIconified(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.hardware.ConsumerIrManager: boolean hasIrEmitter()>:<public>:<android.hardware.ConsumerIrManager>
<android.app.DialogFragment: void onDetach()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.webkit.WebIconDatabase: void close()>:<public abstract>:<android.webkit.WebIconDatabase>
<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.location.Criteria: int describeContents()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.SipAddress:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.ContentProviderOperation: int describeContents()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.util.MonthDisplayHelper: int getColumnOf(int)>:<public>:<android.util.MonthDisplayHelper>
<android.widget.DatePicker: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.ImageWriter: void close()>:<public>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.webkit.WebView: int getProgress()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Notification.WearableExtender: int getContentIconGravity()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.VoiceInteractor.CompleteVoiceRequest: void <init>(android.app.VoiceInteractor.Prompt,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CompleteVoiceRequest:android.app.VoiceInteractor.Request>
<android.hardware.camera2.CaptureRequest: int describeContents()>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.text.BoringLayout: int getLineStart(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.media.CamcorderProfile: boolean hasProfile(int)>:<public static>:<android.media.CamcorderProfile>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>:<public>:<android.bluetooth.le.AdvertiseData.Builder>
<android.telecom.Call: void registerCallback(android.telecom.Call.Callback,android.os.Handler)>:<public>:<android.telecom.Call>
<android.preference.PreferenceActivity.Header: void <clinit>()>:<static>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.test.MoreAsserts: java.util.regex.MatchResult assertMatchesRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)>:<public abstract>:<android.webkit.WebSettings>
<android.util.Xml.Encoding: void <clinit>()>:<static>:<android.util.Xml.Encoding:java.lang.Enum>
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public final>:<android.content.ContentResolver>
<android.media.MediaPlayer: void setOnTimedTextListener(android.media.MediaPlayer.OnTimedTextListener)>:<public>:<android.media.MediaPlayer>
<junit.framework.TestSuite: void <init>()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.graphics.ColorMatrix: void reset()>:<public>:<android.graphics.ColorMatrix>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>:<public static>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void revokeSelf()>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.media.AudioRecord: int getSampleRate()>:<public>:<android.media.AudioRecord>
<android.media.session.MediaController: java.util.List getQueue()>:<public>:<android.media.session.MediaController>
<android.database.MatrixCursor: void <init>(java.lang.String[],int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>()>:<public>:<android.security.keystore.KeyPermanentlyInvalidatedException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>:<public final>:<android.telephony.gsm.SmsManager>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>:<public>:<org.json.JSONObject>
<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.view.MotionEvent: java.lang.String toString()>:<public>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.test.TestSuiteProvider: junit.framework.TestSuite getTestSuite()>:<public abstract>:<android.test.TestSuiteProvider>
<android.text.method.ReplacementTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>:<public>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.renderscript.Element: int getSubElementCount()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.test.mock.MockContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.DexClassLoader:dalvik.system.BaseDexClassLoader,java.lang.ClassLoader>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.widget.VideoView: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.telephony.CellIdentityCdma: int hashCode()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.telecom.RemoteConnection.VideoProvider: void setPauseImage(android.net.Uri)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.renderscript.AllocationAdapter: void resize(int)>:<public synchronized>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.media.ExifInterface: void saveAttributes()>:<public>:<android.media.ExifInterface>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.GridLayout.Alignment: void <init>()>:<>:<android.widget.GridLayout.Alignment>
<android.widget.PopupWindow: boolean isShowing()>:<public>:<android.widget.PopupWindow>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.preference.PreferenceActivity: void switchToHeader(android.preference.PreferenceActivity.Header)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>:<public>:<android.hardware.camera2.CameraCaptureSession.CaptureCallback>
<android.print.PrintAttributes.Margins: int getBottomMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.os.Trace: void <init>()>:<>:<android.os.Trace>
<android.graphics.Paint: float getTextSize()>:<public native>:<android.graphics.Paint>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEvent(int)>:<public abstract>:<android.view.accessibility.AccessibilityEventSource>
<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.telecom.RemoteConnection.VideoProvider: void sendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.view.Display.Mode: void <clinit>()>:<static>:<android.view.Display.Mode:android.os.Parcelable>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<org.json.JSONObject: void <init>(java.util.Map)>:<public>:<org.json.JSONObject>
<android.view.accessibility.CaptioningManager: boolean isEnabled()>:<public final>:<android.view.accessibility.CaptioningManager>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>:<public>:<android.media.RingtoneManager>
<android.os.Bundle: void <init>()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur[] values()>:<public static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.telecom.PhoneAccount: boolean supportsUriScheme(java.lang.String)>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.DebugUtils: boolean isObjectSelected(java.lang.Object)>:<public static>:<android.util.DebugUtils>
<android.test.mock.MockCursor: boolean moveToLast()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>:<public>:<android.net.ConnectivityManager>
<android.content.Loader: void registerOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)>:<public>:<android.content.Loader>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addKernel(android.renderscript.Script.KernelID,android.renderscript.Type,java.lang.Object[])>:<public transient>:<android.renderscript.ScriptGroup.Builder2>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withYieldAllowed(boolean)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.os.Debug: void enableEmulatorTraceOutput()>:<public static>:<android.os.Debug>
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>:<public static>:<android.text.TextUtils>
<android.widget.ResourceCursorAdapter: void setViewResource(int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.FrameLayout: void setForegroundGravity(int)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.app.AliasActivity: void <init>()>:<public>:<android.app.AliasActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar.Tab: void select()>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.EdgeEffect: void onPull(float)>:<public>:<android.widget.EdgeEffect>
<android.view.Window: void injectInputEvent(android.view.InputEvent)>:<public>:<android.view.Window>
<android.content.IntentFilter.AuthorityEntry: java.lang.String getHost()>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setResolution(android.print.PrintAttributes.Resolution)>:<public>:<android.print.PrintAttributes.Builder>
<android.widget.ViewSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.res.AssetFileDescriptor: void <clinit>()>:<static>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.animation.IntEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.renderscript.Allocation: void ioReceive()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory2 getFactory2()>:<public final>:<android.view.LayoutInflater>
<android.print.PrintAttributes.Resolution: java.lang.String getLabel()>:<public>:<android.print.PrintAttributes.Resolution>
<android.graphics.Rect: void <init>()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.DatePicker: int getFirstDayOfWeek()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.notification.StatusBarNotification: int getUserId()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<org.json.JSONObject: void <clinit>()>:<static>:<org.json.JSONObject>
<android.content.res.Configuration: boolean equals(java.lang.Object)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.os.DeadObjectException: void <init>()>:<public>:<android.os.DeadObjectException:android.os.RemoteException,android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.graphics.PointF: void <clinit>()>:<static>:<android.graphics.PointF:android.os.Parcelable>
<android.widget.TabHost.TabContentFactory: android.view.View createTabContent(java.lang.String)>:<public abstract>:<android.widget.TabHost.TabContentFactory>
<android.opengl.GLES20: void glFinish()>:<public static native>:<android.opengl.GLES20>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.hardware.SensorManager: void <init>()>:<>:<android.hardware.SensorManager>
<android.view.View: android.content.res.Resources getResources()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewStructure: void setTextLines(int[],int[])>:<public abstract>:<android.view.ViewStructure>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTint(int)>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.bluetooth.BluetoothClass: int hashCode()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.media.tv.TvInputManager: void <init>()>:<>:<android.media.tv.TvInputManager>
<android.content.pm.PackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES31Ext: void glColorMaskiEXT(int,boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenStart(java.lang.CharSequence,int)>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.sip.SipSession.Listener: void onError(android.net.sip.SipSession,int,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.net.IpPrefix: int hashCode()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.net.ParseException: void <init>()>:<>:<android.net.ParseException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.test.mock.MockPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>:<public final>:<android.view.ViewTreeObserver>
<android.transition.ChangeTransform: boolean getReparent()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.telecom.Call.Callback: void onVideoCallChanged(android.telecom.Call,android.telecom.InCallService.VideoCall)>:<public>:<android.telecom.Call.Callback>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPage(android.app.Notification)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.test.mock.MockPackageManager: java.util.List getAllPermissionGroups(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.RestrictionEntry: java.lang.String toString()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.media.MediaDrm: void finalize()>:<protected>:<android.media.MediaDrm>
<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.graphics.drawable.PaintDrawable: void <init>(int)>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.preference.PreferenceActivity: void onStop()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.telephony.CellInfoWcdma: android.telephony.CellIdentityWcdma getCellIdentity()>:<public>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.hardware.SensorManager: boolean flush(android.hardware.SensorEventListener)>:<public>:<android.hardware.SensorManager>
<android.widget.ExpandableListView: void setChildIndicatorBoundsRelative(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.util.Base64InputStream: void <init>(java.io.InputStream,int)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.BaseInterpolator>
<android.location.Location: void setTime(long)>:<public>:<android.location.Location:android.os.Parcelable>
<android.drm.DrmManagerClient: int acquireRights(android.drm.DrmInfoRequest)>:<public>:<android.drm.DrmManagerClient>
<android.bluetooth.BluetoothGattService: java.util.List getIncludedServices()>:<public>:<android.bluetooth.BluetoothGattService>
<android.telecom.Connection: void setConferenceables(java.util.List)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturingListener>
<android.view.TextureView: void onDraw(android.graphics.Canvas)>:<protected final>:<android.view.TextureView:android.view.View>
<android.widget.AbsListView: void drawableStateChanged()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.LinkProperties: java.lang.String toString()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.text.style.LocaleSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.admin.SystemUpdatePolicy: int describeContents()>:<public>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.SearchManager: void stopSearch()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType valueOf(java.lang.String)>:<public static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.inputmethodservice.InputMethodService: void onUnbindInput()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicBLAS: void ZHEMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.test.MoreAsserts: void checkEqualsAndHashCodeMethods(java.lang.String,java.lang.Object,java.lang.Object,boolean)>:<public static>:<android.test.MoreAsserts>
<android.location.LocationListener: void onProviderDisabled(java.lang.String)>:<public abstract>:<android.location.LocationListener>
<android.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.media.audiofx.BassBoost: short getRoundedStrength()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.net.sip.SipProfile.Builder: void <init>(java.lang.String,java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.text.format.DateUtils: boolean isToday(long)>:<public static>:<android.text.format.DateUtils>
<android.inputmethodservice.InputMethodService: void onWindowHidden()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.WebView: void onFinishTemporaryDetach()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.bluetooth.BluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.webkit.WebSettings: void setAllowFileAccess(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.Display: int getPixelFormat()>:<public>:<android.view.Display>
<android.widget.CursorTreeAdapter: void setChildrenCursor(int,android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.Gallery: boolean showContextMenu()>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.bluetooth.BluetoothClass: void <init>()>:<>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.view.ViewGroup: void detachViewFromParent(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.service.dreams.DreamService: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short2)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ActionBar: void setHomeAsUpIndicator(int)>:<public>:<android.app.ActionBar>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.app.WallpaperInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setCapabilities(android.print.PrinterCapabilitiesInfo)>:<public>:<android.print.PrinterInfo.Builder>
<android.content.Loader: boolean takeContentChanged()>:<public>:<android.content.Loader>
<android.bluetooth.le.AdvertiseData: java.util.Map getServiceData()>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.net.NetworkInfo: java.lang.String getTypeName()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.webkit.WebView.HitTestResult: void <init>()>:<>:<android.webkit.WebView.HitTestResult>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.Camera.Parameters: boolean getAutoWhiteBalanceLock()>:<public>:<android.hardware.Camera.Parameters>
<android.view.KeyCharacterMap: int describeContents()>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element RGBA_8888(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>:<public>:<android.graphics.drawable.Drawable>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.graphics.drawable.GradientDrawable.Orientation: android.graphics.drawable.GradientDrawable.Orientation[] values()>:<public static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.Settings.Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Region: boolean isRect()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Notification.Builder: android.app.Notification.Builder addExtras(android.os.Bundle)>:<public>:<android.app.Notification.Builder>
<android.media.audiofx.BassBoost: void setStrength(short)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.os.Handler: java.lang.String toString()>:<public>:<android.os.Handler>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.telecom.Conference: void onSwap()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.view.MotionEvent.PointerProperties: boolean equals(java.lang.Object)>:<public>:<android.view.MotionEvent.PointerProperties>
<android.text.style.TtsSpan.MoneyBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.MoneyBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.net.ConnectivityManager.NetworkCallback: void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.telecom.RemoteConnection: java.lang.CharSequence getCallerDisplayName()>:<public>:<android.telecom.RemoteConnection>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>:<public static>:<android.telephony.SmsMessage>
<android.app.usage.NetworkStats.Bucket: long getEndTimeStamp()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.opengl.GLES10: void glMatrixMode(int)>:<public static native>:<android.opengl.GLES10>
<android.util.Rational: void <clinit>()>:<static>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.media.MediaRouter.Callback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLES31: void glProgramUniform1f(int,int,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.ListFragment: void setEmptyText(java.lang.CharSequence)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.hardware.Camera.AutoFocusMoveCallback: void onAutoFocusMoving(boolean,android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.AutoFocusMoveCallback>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.view.ViewGroup: boolean onNestedPreFling(android.view.View,float,float)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.database.Observable: void <init>()>:<public>:<android.database.Observable>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener)>:<public>:<android.view.ScaleGestureDetector>
<android.view.Display: void getSize(android.graphics.Point)>:<public>:<android.view.Display>
<android.renderscript.FieldPacker: android.renderscript.Byte4 subByte4()>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES20: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.telecom.TelecomManager: boolean handleMmi(java.lang.String,android.telecom.PhoneAccountHandle)>:<public>:<android.telecom.TelecomManager>
<android.net.UrlQuerySanitizer.ParameterValuePair: void <init>(android.net.UrlQuerySanitizer,java.lang.String,java.lang.String)>:<public>:<android.net.UrlQuerySanitizer.ParameterValuePair>
<android.content.BroadcastReceiver: int getResultCode()>:<public final>:<android.content.BroadcastReceiver>
<android.test.mock.MockCursor: boolean move(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.location.Location: void set(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.app.Dialog: void setTitle(java.lang.CharSequence)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.TabHost.OnTabChangeListener: void onTabChanged(java.lang.String)>:<public abstract>:<android.widget.TabHost.OnTabChangeListener>
<android.widget.SimpleExpandableListAdapter: boolean hasStableIds()>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.ActionMode: java.lang.Object getTag()>:<public>:<android.view.ActionMode>
<android.media.projection.MediaProjectionManager: void <init>()>:<>:<android.media.projection.MediaProjectionManager>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.MediaRouteButton: void <init>(android.content.Context)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.widget.AlphabetIndexer: void onInvalidated()>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.VoiceInteractor.CompleteVoiceRequest: void onCompleteResult(android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CompleteVoiceRequest:android.app.VoiceInteractor.Request>
<android.graphics.Xfermode: void finalize()>:<protected>:<android.graphics.Xfermode>
<android.service.chooser.ChooserTargetService: void <init>()>:<public>:<android.service.chooser.ChooserTargetService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: void postInvalidateDelayed(long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.opengl.GLES10: void glMaterialf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.app.FragmentManager.BackStackEntry: int getId()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.service.voice.VoiceInteractionSession: void onTrimMemory(int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.Object)>:<public>:<android.database.MatrixCursor.RowBuilder>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.view.WindowId: java.lang.String toString()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.graphics.SurfaceTexture: void release()>:<public>:<android.graphics.SurfaceTexture>
<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService.Result)>:<public abstract>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.BaseInterpolator>
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.usage.NetworkStats.Bucket: long getRxPackets()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<org.json.JSONObject: long getLong(java.lang.String)>:<public>:<org.json.JSONObject>
<android.net.wifi.WifiManager.WifiLock: void setReferenceCounted(boolean)>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.renderscript.Matrix2f: void loadRotate(float)>:<public>:<android.renderscript.Matrix2f>
<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.media.AudioRecord: int getNotificationMarkerPosition()>:<public>:<android.media.AudioRecord>
<android.text.method.DateKeyListener: void <init>()>:<public>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.TabActivity: void onPostCreate(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.speech.tts.TextToSpeechService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog create()>:<public>:<android.app.AlertDialog.Builder>
<android.view.InputEvent: int describeContents()>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.app.Presentation: android.view.Display getDisplay()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.text.ClipboardManager: java.lang.CharSequence getText()>:<public abstract>:<android.text.ClipboardManager>
<android.graphics.drawable.RippleDrawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.widget.AbsListView: boolean canScrollList(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.appwidget.AppWidgetProvider: void onRestored(android.content.Context,int[],int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.accessibility.AccessibilityRecord: int getScrollX()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.content.Intent: double getDoubleExtra(java.lang.String,double)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.json.JSONException: void <init>(java.lang.String)>:<public>:<org.json.JSONException:java.lang.Exception,java.lang.Throwable>
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>:<public>:<android.media.SoundPool>
<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ListView: void onFinishInflate()>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.TypedArray: android.content.res.Resources getResources()>:<public>:<android.content.res.TypedArray>
<android.security.KeyPairGeneratorSpec: java.math.BigInteger getSerialNumber()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.content.pm.ApplicationInfo.DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.content.pm.ApplicationInfo.DisplayNameComparator:java.util.Comparator>
<android.net.sip.SipSession.Listener: void <init>()>:<public>:<android.net.sip.SipSession.Listener>
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>:<protected>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.widget.AbsSeekBar: void <init>(android.content.Context)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.Orientation,int[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<org.json.JSONTokener: java.lang.String nextString(char)>:<public>:<org.json.JSONTokener>
<android.widget.GridLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.SearchView: void setMaxWidth(int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.database.Observable: void unregisterAll()>:<public>:<android.database.Observable>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public abstract>:<android.view.SurfaceHolder>
<org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: float getHistoricalY(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)>:<public>:<android.media.AudioRecord>
<android.widget.HeaderViewListAdapter: int getCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>:<public abstract>:<org.apache.http.conn.scheme.LayeredSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.media.MediaRouter.RouteCategory: int getSupportedTypes()>:<public>:<android.media.MediaRouter.RouteCategory>
<android.app.Notification.WearableExtender: java.util.List getPages()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.ActionBar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.GridLayout: void setColumnOrderPreserved(boolean)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.NinePatchDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.InputDevice: android.os.Vibrator getVibrator()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.app.ProgressDialog: void onStart()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.view.inputmethod.InputMethodInfo: void <clinit>()>:<static>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.SoundPool: void resume(int)>:<public final native>:<android.media.SoundPool>
<android.os.Parcel: byte readByte()>:<public final>:<android.os.Parcel>
<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.LauncherActivity.IconResizer: void <init>(android.app.LauncherActivity)>:<public>:<android.app.LauncherActivity.IconResizer>
<android.bluetooth.le.AdvertiseSettings: int getTimeout()>:<public>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.os.UserManager: java.util.List getUserProfiles()>:<public>:<android.os.UserManager>
<android.os.CancellationSignal: void <init>()>:<public>:<android.os.CancellationSignal>
<android.media.MediaScannerConnection: void onServiceDisconnected(android.content.ComponentName)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.text.SpannedString: int getSpanStart(java.lang.Object)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.opengl.GLES10: void glNormal3x(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.audiofx.EnvironmentalReverb: void setDiffusion(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.view.View: void setDrawingCacheEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>:<public>:<android.view.View.AccessibilityDelegate>
<android.renderscript.ScriptIntrinsicBLAS: void CTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.animation.Animation.AnimationListener: void onAnimationEnd(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.text.method.BaseMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.GridView: void setHorizontalSpacing(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.Address: void setLongitude(double)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.View: float getLeftFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseExpandableListAdapter: void onGroupExpanded(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.accounts.Account: boolean equals(java.lang.Object)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.telecom.PhoneAccountHandle: void <clinit>()>:<static>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings.RenderPriority)>:<public abstract>:<android.webkit.WebSettings>
<android.telephony.CellIdentityCdma: int getSystemId()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.net.NetworkRequest: int hashCode()>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.BaseInterpolator>
<android.text.style.RasterizerSpan: void <init>(android.graphics.Rasterizer)>:<public>:<android.text.style.RasterizerSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.transition.TransitionSet: int getOrdering()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.hardware.camera2.params.BlackLevelPattern: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.BlackLevelPattern>
<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>:<public>:<android.app.Instrumentation>
<android.security.keystore.KeyInfo: java.util.Date getKeyValidityStart()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.AbsListView: void setFastScrollEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.EditText: boolean getDefaultEditable()>:<protected>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.test.ActivityInstrumentationTestCase: void testActivityTestCaseSetUpProperly()>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.widget.TextView.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.net.TrafficStats: void incrementOperationCount(int,int)>:<public static>:<android.net.TrafficStats>
<android.test.SingleLaunchActivityTestCase: android.app.Activity getActivity()>:<public>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.Window: void addFlags(int)>:<public>:<android.view.Window>
<android.renderscript.ScriptIntrinsicBLAS: void DSYR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Rect: int describeContents()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.NumberPicker: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.inputmethodservice.KeyboardView: void closing()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.RatingBar: void setMax(int)>:<public synchronized>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrc()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.net.ConnectivityManager: android.net.Network getActiveNetwork()>:<public>:<android.net.ConnectivityManager>
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.test.ActivityInstrumentationTestCase2: void setActivityIntent(android.content.Intent)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>:<public transient>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.MenuItem: android.view.MenuItem setShortcut(char,char)>:<public abstract>:<android.view.MenuItem>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstAtop()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.text.util.Rfc822Tokenizer: void tokenize(java.lang.CharSequence,java.util.Collection)>:<public static>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.MenuItem: char getAlphabeticShortcut()>:<public abstract>:<android.view.MenuItem>
<android.nfc.tech.IsoDep: boolean isExtendedLengthApduSupported()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.content.RestrictionEntry: void <init>(java.lang.String,int)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.graphics.ColorFilter: void finalize()>:<protected>:<android.graphics.ColorFilter>
<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>:<public>:<org.json.JSONArray>
<android.text.style.StyleSpan: int getStyle()>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.location.Address: java.lang.String getThoroughfare()>:<public>:<android.location.Address:android.os.Parcelable>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.KeyEvent.Callback: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.net.Uri: android.net.Uri.Builder buildUpon()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.AudioFormat: void <init>()>:<>:<android.media.AudioFormat>
<android.opengl.GLES30: void glUniform2uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hardware.camera2.params.RggbChannelVector: void copyTo(float[],int)>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.renderscript.ScriptC: void <init>(long,android.renderscript.RenderScript)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.nfc.tech.NfcB: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State valueOf(java.lang.String)>:<public static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.renderscript.Type: int getZ()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicBLAS: void ZGBMV(int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.PeriodicSync: int describeContents()>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.content.res.TypedArray: boolean hasValueOrEmpty(int)>:<public>:<android.content.res.TypedArray>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.KeyEvent: int getDeadChar(int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>()>:<public>:<android.view.SurfaceHolder.BadSurfaceTypeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>:<public>:<android.graphics.Canvas>
<android.view.ContextThemeWrapper: void <init>()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.renderscript.FieldPacker: void addI8(byte)>:<public>:<android.renderscript.FieldPacker>
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()>:<public static>:<android.net.rtp.AudioCodec>
<android.content.SharedPreferences: android.content.SharedPreferences.Editor edit()>:<public abstract>:<android.content.SharedPreferences>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.test.mock.MockPackageManager: int checkPermission(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.widget.CursorTreeAdapter: void notifyDataSetInvalidated()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.media.PlaybackParams: android.media.PlaybackParams allowDefaults()>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.webkit.CookieManager: void flush()>:<public abstract>:<android.webkit.CookieManager>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPictureSize()>:<public>:<android.hardware.Camera.Parameters>
<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Dialog: void registerForContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.view.WindowInsets: int getSystemWindowInsetRight()>:<public>:<android.view.WindowInsets>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(android.net.Uri)>:<public static final>:<android.media.tv.TvContract>
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.telephony.CellIdentityGsm: int getCid()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.database.CursorWrapper: void close()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.webkit.CookieSyncManager: void stopSync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.animation.StateListAnimator: java.lang.Object clone()>:<public volatile>:<android.animation.StateListAnimator:java.lang.Cloneable>
<android.media.SyncParams: android.media.SyncParams setAudioAdjustMode(int)>:<public>:<android.media.SyncParams>
<android.opengl.GLES10: void glShadeModel(int)>:<public static native>:<android.opengl.GLES10>
<android.nfc.tech.TagTechnology: android.nfc.Tag getTag()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<android.graphics.pdf.PdfDocument: void finalize()>:<protected>:<android.graphics.pdf.PdfDocument>
<android.net.NetworkRequest: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.Intent: void removeCategory(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.security.keystore.KeyInfo: java.util.Date getKeyValidityForConsumptionEnd()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.audiofx.PresetReverb.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>:<public>:<android.app.ActivityManager>
<android.app.ActionBar.Tab: java.lang.Object getTag()>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.ActionBar: void setLogo(int)>:<public abstract>:<android.app.ActionBar>
<android.widget.TextView: int getCurrentTextColor()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.GeolocationPermissions.Callback: void invoke(java.lang.String,boolean,boolean)>:<public abstract>:<android.webkit.GeolocationPermissions.Callback>
<android.graphics.drawable.GradientDrawable: void setColor(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDown(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.test.mock.MockResources: java.lang.CharSequence getText(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(java.lang.Throwable)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.app.Notification.Builder: android.app.Notification.Builder setVibrate(long[])>:<public>:<android.app.Notification.Builder>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.widget.TextView: void setMinEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.Drawable: int getOpacity()>:<public abstract>:<android.graphics.drawable.Drawable>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>:<public>:<android.app.job.JobInfo.Builder>
<android.widget.RatingBar: void setRating(float)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View: int computeVerticalScrollExtent()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window.Callback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.Window.Callback>
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer.Settings getProperties()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.RestrictionEntry: void setTitle(java.lang.String)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.ActionMode: boolean getTitleOptionalHint()>:<public>:<android.view.ActionMode>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.textservice.TextInfo: int getCookie()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onError(java.lang.String)>:<public>:<android.media.browse.MediaBrowser.SubscriptionCallback>
<android.net.wifi.WifiConfiguration.PairwiseCipher: void <init>()>:<>:<android.net.wifi.WifiConfiguration.PairwiseCipher>
<android.nfc.tech.IsoDep: void <init>()>:<>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator iterator()>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.service.voice.VoiceInteractionSession: void setTheme(int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.system.Os: void setuid(int)>:<public static>:<android.system.Os>
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager.OnCancelListener)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.ListPopupWindow>
<android.content.Loader: int getId()>:<public>:<android.content.Loader>
<android.content.Context: java.lang.String[] fileList()>:<public abstract>:<android.content.Context>
<android.view.ViewGroup: void dispatchVisibilityChanged(android.view.View,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.webkit.WebViewClient: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)>:<public>:<android.webkit.WebViewClient>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekForward()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace[] values()>:<public static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.telecom.InCallService.VideoCall: void registerCallback(android.telecom.InCallService.VideoCall.Callback)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.util.DebugUtils: void <init>()>:<>:<android.util.DebugUtils>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>(long)>:<public>:<android.text.style.TtsSpan.OrdinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.graphics.drawable.RotateDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.view.Choreographer.FrameCallback: void doFrame(long)>:<public abstract>:<android.view.Choreographer.FrameCallback>
<android.renderscript.Sampler.Builder: void setAnisotropy(float)>:<public>:<android.renderscript.Sampler.Builder>
<android.content.res.AssetManager.AssetInputStream: long skip(long)>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.widget.ImageView: void clearColorFilter()>:<public final>:<android.widget.ImageView:android.view.View>
<android.media.MediaSync: void setSyncParams(android.media.SyncParams)>:<public>:<android.media.MediaSync>
<android.view.WindowManager.InvalidDisplayException: void <init>()>:<public>:<android.view.WindowManager.InvalidDisplayException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.TextureView: int getLayerType()>:<public>:<android.view.TextureView:android.view.View>
<android.media.session.MediaSessionManager: void <init>()>:<>:<android.media.session.MediaSessionManager>
<android.database.CursorWindow: void <init>(boolean)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.NumberPicker: void setOnScrollListener(android.widget.NumberPicker.OnScrollListener)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public abstract>:<android.content.Context>
<android.view.WindowInsets: int getSystemWindowInsetTop()>:<public>:<android.view.WindowInsets>
<android.view.ViewStructure: void setCheckable(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.graphics.drawable.Drawable.Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.widget.ListView: void setCacheColorHint(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy createPostponeInstallPolicy()>:<public static>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder includeAllPackagesUnderHere()>:<public final>:<android.test.suitebuilder.TestSuiteBuilder>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.net.VpnService.Builder: android.net.VpnService.Builder addSearchDomain(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.provider.Settings.System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.database.MergeCursor: double getDouble(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder addNameParameter(java.lang.String)>:<public>:<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder>
<android.widget.PopupWindow: void setOverlapAnchor(boolean)>:<public>:<android.widget.PopupWindow>
<android.preference.Preference: java.lang.String getDependency()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>:<public abstract>:<android.app.SharedElementCallback.OnSharedElementsReadyListener>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.widget.RelativeLayout.LayoutParams)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)>:<public>:<android.drm.DrmManagerClient>
<android.telephony.ServiceState: void <clinit>()>:<static>:<android.telephony.ServiceState:android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void bind(int,double)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.app.FragmentBreadCrumbs: void setTitle(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.security.KeyChainException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.graphics.Rect: void offset(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.util.SparseArray: void <init>()>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.test.mock.MockPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.BroadcastReceiver: boolean isOrderedBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.hardware.Sensor: int getMaxDelay()>:<public>:<android.hardware.Sensor>
<android.database.sqlite.SQLiteDatabase: void disableWriteAheadLogging()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.CursorTreeAdapter: int getGroupCount()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.MotionEvent: float getHistoricalToolMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.CursorLoader: void onCanceled(java.lang.Object)>:<public volatile>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>:<public>:<android.app.Notification.Builder>
<android.net.nsd.NsdManager.DiscoveryListener: void onStopDiscoveryFailed(java.lang.String,int)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.os.Debug: long getNativeHeapAllocatedSize()>:<public static native>:<android.os.Debug>
<android.view.View: int getRightPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.BidiFormatter: boolean isRtl(java.lang.String)>:<public>:<android.text.BidiFormatter>
<android.widget.Switch: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.test.ServiceTestCase: void setUp()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.AsyncTask: java.lang.Object doInBackground(java.lang.Object[])>:<protected abstract transient>:<android.os.AsyncTask>
<android.service.dreams.DreamService: void onAttachedToWindow()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.content.ComponentName: java.lang.String getPackageName()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.hardware.camera2.CameraCharacteristics.Key: boolean equals(java.lang.Object)>:<public final>:<android.hardware.camera2.CameraCharacteristics.Key>
<android.media.AudioManager: void setMode(int)>:<public>:<android.media.AudioManager>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setExtras(android.os.Bundle)>:<public>:<android.media.MediaDescription.Builder>
<android.content.pm.PackageInstaller.Session: java.io.InputStream openRead(java.lang.String)>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.service.voice.VoiceInteractionSession.CommandRequest: void sendIntermediateResult(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.CommandRequest:android.service.voice.VoiceInteractionSession.Request>
<android.widget.PopupMenu.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.widget.PopupMenu.OnMenuItemClickListener>
<android.service.carrier.CarrierService: android.os.PersistableBundle onLoadConfig(android.service.carrier.CarrierIdentifier)>:<public abstract>:<android.service.carrier.CarrierService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: void getLocationOnScreen(int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.PackageInstaller.SessionInfo: void <init>()>:<>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.opengl.GLES31Ext: boolean glIsEnablediEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.text.style.SuperscriptSpan: int getSpanTypeId()>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.security.keystore.KeyInfo: int getKeySize()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.widget.AdapterViewFlipper: void onWindowVisibilityChanged(int)>:<protected>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: void setIntValues(int[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.AbsSpinner: void <init>(android.content.Context)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>:<public static final>:<android.provider.Browser>
<junit.framework.TestSuite: void setName(java.lang.String)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.renderscript.Script.KernelID: void <init>()>:<>:<android.renderscript.Script.KernelID:android.renderscript.BaseObj>
<android.bluetooth.le.ScanRecord: java.lang.String toString()>:<public>:<android.bluetooth.le.ScanRecord>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectActivityLeaks()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.test.suitebuilder.TestMethod: java.lang.String getEnclosingClassname()>:<public>:<android.test.suitebuilder.TestMethod>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.AbsListView.MultiChoiceModeListener: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>:<public abstract>:<android.widget.AbsListView.MultiChoiceModeListener:android.view.ActionMode.Callback>
<android.R.attr: void <init>()>:<public>:<android.R.attr>
<android.content.SharedPreferences: int getInt(java.lang.String,int)>:<public abstract>:<android.content.SharedPreferences>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo getCapabilities()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.provider.DocumentsContract: android.net.Uri buildDocumentUri(java.lang.String,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>:<public>:<android.hardware.usb.UsbManager>
<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.webkit.WebSettings: android.webkit.WebSettings.LayoutAlgorithm getLayoutAlgorithm()>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.LayerDrawable: boolean onLayoutDirectionChanged(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.ImageReader: android.media.Image acquireLatestImage()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<org.json.JSONArray: int optInt(int,int)>:<public>:<org.json.JSONArray>
<android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUri(java.lang.String,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect)>:<public>:<android.graphics.NinePatch>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>:<public>:<android.view.animation.LayoutAnimationController>
<android.database.sqlite.SQLiteProgram: void bindNull(int)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.util.MutableChar: void <init>(char)>:<public>:<android.util.MutableChar>
<android.telephony.SubscriptionInfo: java.lang.CharSequence getCarrierName()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>:<public>:<android.graphics.drawable.Drawable>
<android.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>:<public static final>:<android.text.util.Linkify>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator z(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.graphics.Rect: float exactCenterY()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.preference.Preference.OnPreferenceClickListener: boolean onPreferenceClick(android.preference.Preference)>:<public abstract>:<android.preference.Preference.OnPreferenceClickListener>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.text.style.UnderlineSpan: void <init>()>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.preference.PreferenceGroup: void onAttachedToActivity()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.app.admin.DeviceAdminReceiver: java.lang.String onChoosePrivateKeyAlias(android.content.Context,android.content.Intent,int,android.net.Uri,java.lang.String)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.graphics.LayerRasterizer: void <init>()>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.transition.TransitionSet: android.transition.Transition setDuration(long)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.graphics.RectF: void round(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>:<public>:<android.speech.tts.TextToSpeech>
<android.app.Activity: void registerForContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.renderscript.Float2: void <init>(float,float)>:<public>:<android.renderscript.Float2>
<android.hardware.GeomagneticField: float getFieldStrength()>:<public>:<android.hardware.GeomagneticField>
<android.widget.ScrollView: boolean arrowScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.provider.ContactsContract: boolean isProfileId(long)>:<public static>:<android.provider.ContactsContract>
<android.view.Window: android.transition.Transition getSharedElementReenterTransition()>:<public>:<android.view.Window>
<android.app.usage.ConfigurationStats: int describeContents()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.widget.VideoView: int resolveAdjustedSize(int,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantWidth()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.FileDescriptor,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.view.inputmethod.InputMethod: void unbindInput()>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.widget.ScrollView: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.admin.DeviceAdminReceiver: void onEnabled(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.WifiManager: java.util.List getScanResults()>:<public>:<android.net.wifi.WifiManager>
<android.graphics.Picture: void finalize()>:<protected>:<android.graphics.Picture>
<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.graphics.Paint: void setAlpha(int)>:<public native>:<android.graphics.Paint>
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.GeomagneticField: float getHorizontalStrength()>:<public>:<android.hardware.GeomagneticField>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur valueOf(java.lang.String)>:<public static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.telecom.PhoneAccountHandle: void <init>(android.content.ComponentName,java.lang.String,android.os.UserHandle)>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession: void finish()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.content.pm.PackageManager: void removePermission(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: boolean isDuplicateParentStateEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.ListPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.app.ListFragment: long getSelectedItemId()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.widget.ExpandableListAdapter: long getChildId(int,int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.hardware.Camera: void release()>:<public final>:<android.hardware.Camera>
<android.text.StaticLayout: int getLineStart(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.view.InputDevice.MotionRange: float getMax()>:<public>:<android.view.InputDevice.MotionRange>
<android.widget.TimePicker.OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>:<public abstract>:<android.widget.TimePicker.OnTimeChangedListener>
<android.content.res.TypedArray: int getInteger(int,int)>:<public>:<android.content.res.TypedArray>
<dalvik.system.BaseDexClassLoader: java.lang.String toString()>:<public>:<dalvik.system.BaseDexClassLoader:java.lang.ClassLoader>
<android.widget.PopupMenu: android.view.Menu getMenu()>:<public>:<android.widget.PopupMenu>
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.media.AudioTrack: int getNotificationMarkerPosition()>:<public>:<android.media.AudioTrack>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.util.StateSet: boolean isWildCard(int[])>:<public static>:<android.util.StateSet>
<android.preference.Preference: int getTitleRes()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.Element: android.renderscript.Element U32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.Notification.CarExtender: int getColor()>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: boolean isHierarchical()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.net.wifi.WifiManager.MulticastLock: void acquire()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.Dialog: int getVolumeControlStream()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asPortrait()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.system.Os: java.lang.String readlink(java.lang.String)>:<public static>:<android.system.Os>
<android.app.MediaRouteButton: void onDraw(android.graphics.Canvas)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public static>:<android.graphics.drawable.Drawable>
<android.widget.Toast: void setView(android.view.View)>:<public>:<android.widget.Toast>
<android.test.mock.MockPackageManager: java.lang.String getNameForUid(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.opengl.EGL14: boolean eglWaitNative(int)>:<public static native>:<android.opengl.EGL14>
<android.os.Build.VERSION_CODES: void <init>()>:<public>:<android.os.Build.VERSION_CODES>
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.os.Looper: java.lang.String toString()>:<public>:<android.os.Looper>
<android.preference.Preference: void setTitle(java.lang.CharSequence)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.pm.PermissionInfo: void <clinit>()>:<static>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.service.voice.VoiceInteractionSession: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.renderscript.Float3: void <init>(float,float,float)>:<public>:<android.renderscript.Float3>
<android.media.session.MediaController: android.os.Bundle getExtras()>:<public>:<android.media.session.MediaController>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setSummaryText(java.lang.CharSequence)>:<public>:<android.app.Notification.BigTextStyle:android.app.Notification.Style>
<android.content.Loader: void deliverCancellation()>:<public>:<android.content.Loader>
<android.graphics.Interpolator: void <init>(int,int)>:<public>:<android.graphics.Interpolator>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>:<public>:<android.app.RemoteInput.Builder>
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.text.Layout: int getBottomPadding()>:<public abstract>:<android.text.Layout>
<android.animation.ValueAnimator: void setFloatValues(float[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.View: void setFocusable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputDevice: java.util.List getMotionRanges()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback,android.os.Handler)>:<public>:<android.content.pm.PackageInstaller>
<android.app.job.JobService: void <init>()>:<public>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.Drawable>
<android.net.wifi.WifiInfo: int getNetworkId()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.text.style.ForegroundColorSpan: void <init>(int)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.content.pm.PackageInstaller.SessionParams: void setAppIcon(android.graphics.Bitmap)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.util.Base64DataException: void <init>(java.lang.String)>:<public>:<android.util.Base64DataException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.net.wifi.WifiInfo: int describeContents()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.service.dreams.DreamService: void onWindowFocusChanged(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.util.JsonReader: long nextLong()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.test.mock.MockCursor: byte[] getBlob(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.MediaController: void setPrevNextListeners(android.view.View.OnClickListener,android.view.View.OnClickListener)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGattService: boolean addCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>:<public>:<android.bluetooth.BluetoothGattService>
<android.security.keystore.KeyExpiredException: void <init>(java.lang.String)>:<public>:<android.security.keystore.KeyExpiredException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.InputDevice: java.lang.String getDescriptor()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.opengl.GLSurfaceView: int getRenderMode()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>:<public static>:<android.view.animation.AnimationUtils>
<android.content.res.TypedArray: int length()>:<public>:<android.content.res.TypedArray>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.graphics.drawable.RotateDrawable: void setPivotY(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.text.SpannableStringInternal: boolean equals(java.lang.Object)>:<public>:<android.text.SpannableStringInternal>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.pm.PackageInstaller.SessionParams: int describeContents()>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.graphics.Rect: void inset(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean hasCaCertInstalled(android.content.ComponentName,byte[])>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.PopupWindow: void update()>:<public>:<android.widget.PopupWindow>
<android.bluetooth.BluetoothGattCharacteristic: boolean addDescriptor(android.bluetooth.BluetoothGattDescriptor)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.view.ViewStructure: android.view.ViewStructure asyncNewChild(int)>:<public abstract>:<android.view.ViewStructure>
<android.opengl.GLES10: void glFlush()>:<public static native>:<android.opengl.GLES10>
<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.HeaderViewListAdapter: int getViewTypeCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.util.Size: int hashCode()>:<public>:<android.util.Size>
<android.renderscript.Long4: void <init>()>:<public>:<android.renderscript.Long4>
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.renderscript.Matrix2f: float get(int,int)>:<public>:<android.renderscript.Matrix2f>
<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>:<public>:<android.view.ViewTreeObserver>
<android.content.IntentFilter: int countDataSchemeSpecificParts()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.os.Vibrator: void <init>()>:<>:<android.os.Vibrator>
<android.graphics.Paint: void setTextLocale(java.util.Locale)>:<public>:<android.graphics.Paint>
<android.database.Cursor: android.os.Bundle respond(android.os.Bundle)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.telecom.DisconnectCause: java.lang.CharSequence getLabel()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.preference.Preference: boolean shouldPersist()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.Allocation: void copyTo(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.Parcel: long readLong()>:<public final>:<android.os.Parcel>
<android.service.voice.VoiceInteractionSession: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>:<public>:<android.hardware.display.DisplayManager>
<android.app.Activity: void setContentView(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.util.ArrayMap: boolean containsAll(java.util.Collection)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.text.Layout: int getOffsetToRightOf(int)>:<public>:<android.text.Layout>
<android.app.Activity: void onDetachedFromWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telecom.Call: java.util.List getConferenceableCalls()>:<public>:<android.telecom.Call>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.database.sqlite.SQLiteConstraintException: void <init>()>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue.IdleHandler)>:<public>:<android.os.MessageQueue>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.animation.ValueAnimator: float getAnimatedFraction()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.MediaPlayer: void release()>:<public>:<android.media.MediaPlayer>
<android.media.tv.TvTrackInfo: int getVideoWidth()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.view.textservice.SentenceSuggestionsInfo: int describeContents()>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.test.ServiceTestCase: android.app.Application getApplication()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>:<public static>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.app.AlarmManager.AlarmClockInfo: android.app.PendingIntent getShowIntent()>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.test.TouchUtils: int dragViewTo(android.test.InstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.text.format.Time: java.lang.String getCurrentTimezone()>:<public static>:<android.text.format.Time>
<android.app.Activity: void onActivityReenter(int,android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.ArraySet: boolean isEmpty()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.graphics.Paint: float ascent()>:<public native>:<android.graphics.Paint>
<android.util.ArrayMap: int hashCode()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.app.AlertDialog: void setCustomTitle(android.view.View)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.os.Binder: int getCallingPid()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.graphics.drawable.ShapeDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.test.ApplicationTestCase: void <init>(java.lang.Class)>:<public>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.AndroidCharacter: boolean mirror(char[],int,int)>:<public static native>:<android.text.AndroidCharacter>
<android.provider.ContactsContract.Data: void <clinit>()>:<static>:<android.provider.ContactsContract.Data:android.provider.ContactsContract.DataColumnsWithJoins>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.MediaController: boolean isShowing()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: char getNumber()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.MessageQueue.IdleHandler: boolean queueIdle()>:<public abstract>:<android.os.MessageQueue.IdleHandler>
<android.view.animation.Animation.Description: void <init>()>:<protected>:<android.view.animation.Animation.Description>
<android.media.Rating: android.media.Rating newHeartRating(boolean)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.location.Address: void setSubLocality(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.util.Property: android.util.Property of(java.lang.Class,java.lang.Class,java.lang.String)>:<public static>:<android.util.Property>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Space:android.view.View>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.renderscript.ScriptIntrinsicBlur: void <init>()>:<>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.res.AssetManager.AssetInputStream: void finalize()>:<protected>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.database.MatrixCursor: short getShort(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.speech.RecognitionListener: void onBufferReceived(byte[])>:<public abstract>:<android.speech.RecognitionListener>
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>:<public>:<android.content.res.Resources>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.content.Context: android.content.Context getApplicationContext()>:<public abstract>:<android.content.Context>
<android.view.Surface: void readFromParcel(android.os.Parcel)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.os.SystemClock: void <init>()>:<>:<android.os.SystemClock>
<android.net.sip.SipManager: void <init>()>:<>:<android.net.sip.SipManager>
<android.preference.TwoStatePreference: void <init>(android.content.Context)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.util.AttributeSet: int getStyleAttribute()>:<public abstract>:<android.util.AttributeSet>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithFilePath(java.lang.String)>:<public static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.media.MediaFormat: void setLong(java.lang.String,long)>:<public final>:<android.media.MediaFormat>
<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>:<public>:<android.media.MediaCodec>
<android.test.MoreAsserts: void assertEquals(java.lang.String,java.lang.Object[],java.lang.Object[])>:<public static>:<android.test.MoreAsserts>
<android.widget.SearchView: boolean isIconfiedByDefault()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.app.admin.DevicePolicyManager: void addUserRestriction(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.TabActivity: android.widget.TabHost getTabHost()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String)>:<public>:<android.media.session.MediaSession>
<android.print.PrintDocumentAdapter.WriteResultCallback: void <init>()>:<>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.provider.CalendarContract.ExtendedProperties: void <clinit>()>:<static>:<android.provider.CalendarContract.ExtendedProperties:android.provider.BaseColumns,android.provider.CalendarContract.ExtendedPropertiesColumns,android.provider.CalendarContract.EventsColumns>
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.tv.TvView: void dispatchWindowFocusChanged(boolean)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.app.RemoteInput.Builder: void <init>(java.lang.String)>:<public>:<android.app.RemoteInput.Builder>
<android.view.View: void dispatchProvideStructure(android.view.ViewStructure)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.JsPromptResult: void <init>()>:<>:<android.webkit.JsPromptResult:android.webkit.JsResult>
<android.view.Window: boolean isActive()>:<public final>:<android.view.Window>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface.OnShowListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>:<protected>:<android.view.LayoutInflater>
<junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>:<public abstract>:<junit.framework.TestListener>
<android.system.Os: int read(java.io.FileDescriptor,java.nio.ByteBuffer)>:<public static>:<android.system.Os>
<android.util.TimingLogger: void <init>(java.lang.String,java.lang.String)>:<public>:<android.util.TimingLogger>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTag(java.lang.Object)>:<public abstract>:<android.app.ActionBar.Tab>
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.app.WallpaperManager: boolean isWallpaperSupported()>:<public>:<android.app.WallpaperManager>
<android.hardware.camera2.params.Face: android.graphics.Rect getBounds()>:<public>:<android.hardware.camera2.params.Face>
<android.app.FragmentHostCallback: android.view.View onFindViewById(int)>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.net.LinkProperties: void <init>()>:<>:<android.net.LinkProperties:android.os.Parcelable>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>:<public static>:<android.provider.ContactsContract.QuickContact>
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.Message: void copyFrom(android.os.Message)>:<public>:<android.os.Message:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.TextureView: void onSizeChanged(int,int,int,int)>:<protected>:<android.view.TextureView:android.view.View>
<android.app.ApplicationErrorReport.AnrInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.renderscript.Allocation: void copyFrom(android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantHeight()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AbsoluteLayout: void <init>(android.content.Context)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ClipData.Item: java.lang.String getHtmlText()>:<public>:<android.content.ClipData.Item>
<android.content.pm.PackageInstaller: java.util.List getMySessions()>:<public>:<android.content.pm.PackageInstaller>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.ShapeDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>:<public static>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.media.MediaFormat: float getFloat(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.transition.Explode: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)>:<public>:<android.view.ActionProvider>
<android.app.VoiceInteractor.Request: void onAttached(android.app.Activity)>:<public>:<android.app.VoiceInteractor.Request>
<android.content.res.AssetManager.AssetInputStream: int available()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.text.style.LocaleSpan: void <init>(java.util.Locale)>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.session.PlaybackState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.print.PrintJob: boolean isCancelled()>:<public>:<android.print.PrintJob>
<android.test.InstrumentationTestCase: void runTest()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.CalendarView: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>:<public static>:<android.appwidget.AppWidgetHost>
<android.gesture.Gesture: java.util.ArrayList getStrokes()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.View: boolean isNestedScrollingEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityManager: void <init>()>:<>:<android.view.accessibility.AccessibilityManager>
<android.widget.ScrollView: void scrollTo(int,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.format.DateUtils: java.lang.CharSequence formatSameDayTime(long,long,int,int)>:<public static final>:<android.text.format.DateUtils>
<android.inputmethodservice.KeyboardView: boolean isPreviewEnabled()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.AbsListView: android.widget.AbsListView.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.print.PrinterInfo: void <init>()>:<>:<android.print.PrinterInfo:android.os.Parcelable>
<android.media.browse.MediaBrowser.MediaItem: void <clinit>()>:<static>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.text.method.BaseMovementMethod: void <init>()>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>:<public>:<android.os.Binder:android.os.IBinder>
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.view.WindowInsets: int getStableInsetBottom()>:<public>:<android.view.WindowInsets>
<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.preference.Preference: android.content.Intent getIntent()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener,boolean)>:<public>:<android.view.textservice.TextServicesManager>
<android.renderscript.ScriptIntrinsicBLAS: void DTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.ContentValues: java.lang.Object get(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.view.textservice.SuggestionsInfo: void <init>(android.os.Parcel)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<org.json.JSONArray: long optLong(int)>:<public>:<org.json.JSONArray>
<android.drm.DrmManagerClient: void setOnInfoListener(android.drm.DrmManagerClient.OnInfoListener)>:<public synchronized>:<android.drm.DrmManagerClient>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getEncryptionPaddings()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.util.Xml: void <init>()>:<>:<android.util.Xml>
<android.transition.Transition.EpicenterCallback: void <init>()>:<public>:<android.transition.Transition.EpicenterCallback>
<android.widget.TextView: void setText(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvTrackInfo: void <init>()>:<>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)>:<public static final>:<android.util.Patterns>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.app.Service: void onCreate()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.graphics.drawable.GradientDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.bluetooth.le.AdvertiseSettings: void <init>()>:<>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.os.Bundle: void putByteArray(java.lang.String,byte[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.RouteInfo: void <init>()>:<>:<android.net.RouteInfo:android.os.Parcelable>
<android.media.tv.TvView.TvInputCallback: void onVideoUnavailable(java.lang.String,int)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSubtract()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.AbsListView: void setVelocityScale(float)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.nfc.Tag: int describeContents()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.os.Parcel: char[] createCharArray()>:<public final>:<android.os.Parcel>
<android.widget.BaseAdapter: void notifyDataSetChanged()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.test.MoreAsserts: void assertEquals(int[],int[])>:<public static>:<android.test.MoreAsserts>
<android.accounts.AccountManager: boolean removeAccountExplicitly(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.telecom.RemoteConference: java.util.List getConferenceableConnections()>:<public>:<android.telecom.RemoteConference>
<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder.OnErrorListener)>:<public>:<android.media.MediaRecorder>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)>:<public static>:<android.text.format.DateUtils>
<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.widget.AbsListView: int getListPaddingLeft()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.TokenWatcher: void released()>:<public abstract>:<android.os.TokenWatcher>
<android.opengl.GLES20: void glReleaseShaderCompiler()>:<public static native>:<android.opengl.GLES20>
<android.util.LruCache: int hitCount()>:<public final synchronized>:<android.util.LruCache>
<android.net.nsd.NsdServiceInfo: java.util.Map getAttributes()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: boolean isShowInputRequested()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Space: void onMeasure(int,int)>:<protected>:<android.widget.Space:android.view.View>
<android.nfc.tech.NfcV: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>:<public>:<android.net.wifi.WifiManager>
<android.view.ViewGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.view.Display: float[] getSupportedRefreshRates()>:<public>:<android.view.Display>
<android.os.Message: android.os.Message obtain()>:<public static>:<android.os.Message:android.os.Parcelable>
<android.speech.tts.TextToSpeech: int speak(java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>:<public static final>:<android.telephony.gsm.SmsManager>
<org.apache.http.conn.ssl.AbstractVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.transition.PatternPathMotion: android.graphics.Path getPath(float,float,float,float)>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.app.ActionBar: void setDisplayUseLogoEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.test.mock.MockContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.ActionBar: int getDisplayOptions()>:<public abstract>:<android.app.ActionBar>
<android.renderscript.ScriptIntrinsicConvolve5x5: void <init>()>:<>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.util.Xml.Encoding: android.util.Xml.Encoding valueOf(java.lang.String)>:<public static>:<android.util.Xml.Encoding:java.lang.Enum>
<android.widget.Switch: int getCompoundPaddingRight()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES30: void glUniform3uiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.test.RenamingDelegatingContext: android.content.ContentProvider providerWithRenamedContext(java.lang.Class,android.content.Context,java.lang.String)>:<public static>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.net.LocalSocket: java.io.InputStream getInputStream()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.view.KeyEvent: void <clinit>()>:<static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.speech.SpeechRecognizer: void stopListening()>:<public>:<android.speech.SpeechRecognizer>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.content.Context: java.io.File getCodeCacheDir()>:<public abstract>:<android.content.Context>
<android.service.carrier.CarrierIdentifier: java.lang.String getImsi()>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onMarkerReached(android.media.AudioRecord)>:<public abstract>:<android.media.AudioRecord.OnRecordPositionUpdateListener>
<android.app.ActivityManager.RecentTaskInfo: int describeContents()>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public static>:<android.text.method.Touch>
<android.widget.GridLayout: void <clinit>()>:<static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.ContextThemeWrapper: void setTheme(int)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.animation.BaseInterpolator: void <init>()>:<public>:<android.view.animation.BaseInterpolator:android.view.animation.Interpolator>
<android.media.ImageReader: void setOnImageAvailableListener(android.media.ImageReader.OnImageAvailableListener,android.os.Handler)>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.widget.ScrollView: void onStopNestedScroll(android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.LayoutParams: void <init>(int,int)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setDescription(java.lang.CharSequence)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.widget.AutoCompleteTextView: void onDetachedFromWindow()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.preference.Preference: int getLayoutResource()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender.UnreadConversation getUnreadConversation()>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.preference.PreferenceFragment: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.location.Address: boolean hasLongitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.RadioGroup.OnCheckedChangeListener: void onCheckedChanged(android.widget.RadioGroup,int)>:<public abstract>:<android.widget.RadioGroup.OnCheckedChangeListener>
<android.media.midi.MidiReceiver: void send(byte[],int,int,long)>:<public>:<android.media.midi.MidiReceiver>
<android.renderscript.ScriptIntrinsicBLAS: void ZGERC(android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.method.TextKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setUnit(java.lang.String)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.content.pm.PackageInstaller.SessionInfo: boolean isActive()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.R: void <init>()>:<public>:<android.R>
<android.nfc.tech.NfcF: byte[] getSystemCode()>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>:<public static>:<android.text.format.DateUtils>
<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.DatePicker: void setMaxDate(long)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.String,java.lang.Object)>:<public>:<android.database.MatrixCursor.RowBuilder>
<android.graphics.Paint: int getOffsetForAdvance(char[],int,int,int,int,boolean,float)>:<public>:<android.graphics.Paint>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.lang.String,int)>:<public>:<android.net.VpnService.Builder>
<android.system.OsConstants: int WTERMSIG(int)>:<public static>:<android.system.OsConstants>
<android.gesture.Gesture: android.graphics.Path toPath(int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt,boolean,android.text.TextUtils.EllipsizeCallback)>:<public static>:<android.text.TextUtils>
<android.widget.RemoteViews: void setDisplayedChild(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.database.Cursor: boolean isNull(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.IpPrefix: int getPrefixLength()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.content.SyncResult: void <clinit>()>:<static>:<android.content.SyncResult:android.os.Parcelable>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.media.audiofx.Visualizer: void finalize()>:<protected>:<android.media.audiofx.Visualizer>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: boolean isHardwareAccelerated()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.sax.EndTextElementListener: void end(java.lang.String)>:<public abstract>:<android.sax.EndTextElementListener>
<android.location.Criteria: void setBearingRequired(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>:<public>:<android.appwidget.AppWidgetHost>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.NumberPicker: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntryValues()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.MediaRecorder: android.view.Surface getSurface()>:<public native>:<android.media.MediaRecorder>
<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>:<public>:<android.view.LayoutInflater>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.EditorInfo: void <init>()>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.webkit.WebSettings: void setSaveFormData(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.Element: android.renderscript.Element I64_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.usage.UsageStats: void <init>(android.app.usage.UsageStats)>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.location.GpsStatus: java.lang.Iterable getSatellites()>:<public>:<android.location.GpsStatus>
<android.telecom.Conference: void setConnectionCapabilities(int)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.telephony.SmsMessage: int getIndexOnIcc()>:<public>:<android.telephony.SmsMessage>
<android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)>:<public>:<android.media.RemoteControlClient>
<org.json.JSONObject: int optInt(java.lang.String)>:<public>:<org.json.JSONObject>
<android.service.dreams.DreamService: void onContentChanged()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<junit.framework.ComparisonFailure: java.lang.String getExpected()>:<public>:<junit.framework.ComparisonFailure:junit.framework.AssertionFailedError,java.lang.AssertionError,java.lang.Error,java.lang.Throwable>
<android.widget.Toolbar.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.widget.Toolbar.OnMenuItemClickListener>
<android.text.AndroidCharacter: char getMirror(char)>:<public static native>:<android.text.AndroidCharacter>
<android.view.KeyEvent.DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.net.LocalSocket: boolean isOutputShutdown()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.view.ViewConfiguration: int getScrollDefaultDelay()>:<public static>:<android.view.ViewConfiguration>
<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>:<public>:<android.os.DropBoxManager>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.accessibility.AccessibilityNodeInfo: void recycle()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.BaseInterpolator>
<android.app.Fragment: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.AdapterView: int getLastVisiblePosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.os.UserManager: int getUserCount()>:<public>:<android.os.UserManager>
<android.bluetooth.BluetoothGatt: boolean connect()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.print.PrinterId: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.media.session.PlaybackState.CustomAction: java.lang.String toString()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.telecom.PhoneAccountHandle: java.lang.String getId()>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.app.AppOpsManager: int startOpNoThrow(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.webkit.WebStorage: void deleteAllData()>:<public>:<android.webkit.WebStorage>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.security.keystore.KeyGenParameterSpec: boolean isDigestsSpecified()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.telecom.Connection: void setInitialized()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.media.AudioRecord: void removeOnRoutingChangedListener(android.media.AudioRecord.OnRoutingChangedListener)>:<public>:<android.media.AudioRecord>
<android.telecom.PhoneAccount: android.graphics.drawable.Icon getIcon()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.media.MediaDrm.KeyRequest: byte[] getData()>:<public>:<android.media.MediaDrm.KeyRequest>
<android.opengl.GLES10: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(byte[],int,int,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>:<public>:<android.bluetooth.le.AdvertiseData.Builder>
<android.widget.CompoundButton: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void hideSoftInput(int,android.os.ResultReceiver)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>:<protected>:<android.os.ResultReceiver:android.os.Parcelable>
<android.graphics.drawable.AnimatedStateListDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.mtp.MtpObjectInfo: java.lang.String getKeywords()>:<public final>:<android.mtp.MtpObjectInfo>
<android.widget.RatingBar: android.widget.RatingBar.OnRatingBarChangeListener getOnRatingBarChangeListener()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.tv.TvView: void timeShiftSetPlaybackParams(android.media.PlaybackParams)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.telephony.CellSignalStrengthWcdma: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>:<public>:<org.json.JSONObject>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressBackgroundTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long3)>:<public>:<android.renderscript.FieldPacker>
<android.app.NativeActivity: void onResume()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.preference.TwoStatePreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.graphics.drawable.VectorDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.test.SyncBaseInstrumentation: void cancelSyncsandDisableAutoSync()>:<protected>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.json.JSONArray: java.lang.String join(java.lang.String)>:<public>:<org.json.JSONArray>
<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.location.Address: java.lang.String getCountryCode()>:<public>:<android.location.Address:android.os.Parcelable>
<android.graphics.Bitmap: void <clinit>()>:<static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.Debug: long getNativeHeapFreeSize()>:<public static native>:<android.os.Debug>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance()>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int,int)>:<public>:<android.app.Notification.Builder>
<android.telecom.Conference: void setActive()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener)>:<public>:<android.view.GestureDetector>
<android.webkit.CookieManager: void removeAllCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>:<public static>:<android.net.TrafficStats>
<junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.media.MediaCodec: void queueSecureInputBuffer(int,int,android.media.MediaCodec.CryptoInfo,long,int)>:<public final>:<android.media.MediaCodec>
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.media.MediaPlayer.OnTimedTextListener: void onTimedText(android.media.MediaPlayer,android.media.TimedText)>:<public abstract>:<android.media.MediaPlayer.OnTimedTextListener>
<android.content.SyncStats: java.lang.String toString()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.net.LocalSocket: void setSendBufferSize(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.graphics.Outline: boolean isEmpty()>:<public>:<android.graphics.Outline>
<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>:<public>:<android.media.RemoteControlClient>
<android.graphics.drawable.GradientDrawable: void <init>()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.ViewAsserts: void assertGroupContains(android.view.ViewGroup,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.app.Notification.Builder: android.app.Notification.Builder setUsesChronometer(boolean)>:<public>:<android.app.Notification.Builder>
<android.provider.ContactsContract.DataUsageFeedback: void <clinit>()>:<static>:<android.provider.ContactsContract.DataUsageFeedback>
<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>:<protected transient>:<android.os.AsyncTask>
<android.view.Display: android.view.Display.Mode[] getSupportedModes()>:<public>:<android.view.Display>
<android.util.SparseBooleanArray: void put(int,boolean)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.ImageWriter: int getMaxImages()>:<public>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.graphics.DiscretePathEffect: void <init>(float,float)>:<public>:<android.graphics.DiscretePathEffect:android.graphics.PathEffect>
<android.system.Os: java.lang.String strsignal(int)>:<public static>:<android.system.Os>
<android.print.PrinterId: int hashCode()>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraAvailable(java.lang.String)>:<public>:<android.hardware.camera2.CameraManager.AvailabilityCallback>
<android.widget.SlidingDrawer: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.AnimatorSet: void resume()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.telecom.VideoProfile: boolean isAudioOnly(int)>:<public static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.opengl.GLES10: void glDepthRangex(int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.http.HttpResponseCache: int getRequestCount()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.graphics.drawable.RippleDrawable: void setPaddingMode(int)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.service.dreams.DreamService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.Window.Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window.Callback>
<android.telecom.Conference: void setVideoState(android.telecom.Connection,int)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.app.ActionBar.Tab: void <init>()>:<public>:<android.app.ActionBar.Tab>
<android.hardware.Camera.Parameters: boolean getAutoExposureLock()>:<public>:<android.hardware.Camera.Parameters>
<android.view.ViewGroup: void onAttachedToWindow()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener: void onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)>:<public abstract>:<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener>
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.telephony.gsm.SmsMessage: int[] calculateLength(java.lang.String,boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.CursorTreeAdapter: void setGroupCursor(android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.media.audiofx.AudioEffect: void finalize()>:<protected>:<android.media.audiofx.AudioEffect>
<android.widget.TextView: void onFinishTemporaryDetach()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.content.ContentProvider.PipeDataWriter: void writeDataToPipe(android.os.ParcelFileDescriptor,android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)>:<public abstract>:<android.content.ContentProvider.PipeDataWriter>
<android.media.AudioRecord: int getState()>:<public>:<android.media.AudioRecord>
<android.provider.MediaStore.Video.Media: void <init>()>:<public>:<android.provider.MediaStore.Video.Media:android.provider.MediaStore.Video.VideoColumns>
<android.media.browse.MediaBrowser.ItemCallback: void onItemLoaded(android.media.browse.MediaBrowser.MediaItem)>:<public>:<android.media.browse.MediaBrowser.ItemCallback>
<android.graphics.drawable.VectorDrawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.view.KeyCharacterMap: boolean[] deviceHasKeys(int[])>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.test.ServiceTestCase: void startService(android.content.Intent)>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.test.mock.MockContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<org.json.JSONArray: java.lang.Object opt(int)>:<public>:<org.json.JSONArray>
<android.media.tv.TvContentRating: void <clinit>()>:<static>:<android.media.tv.TvContentRating>
<android.media.AudioTrack: void setPlaybackParams(android.media.PlaybackParams)>:<public>:<android.media.AudioTrack>
<android.view.View: void setScrollIndicators(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.NotificationManager.Policy: int hashCode()>:<public>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.media.SoundPool: void finalize()>:<protected>:<android.media.SoundPool>
<android.hardware.Camera.Parameters: float getHorizontalViewAngle()>:<public>:<android.hardware.Camera.Parameters>
<android.hardware.Camera: void stopFaceDetection()>:<public final>:<android.hardware.Camera>
<junit.framework.TestCase: void <init>()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.view.View: int getWindowVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.VideoProfile: java.lang.String videoStateToString(int)>:<public static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.bluetooth.BluetoothAdapter: boolean enable()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.app.Notification.Action.WearableExtender: boolean isAvailableOffline()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.view.animation.LinearInterpolator: void <init>()>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.BaseInterpolator>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.view.animation.Animation: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.AudioManager: void startBluetoothSco()>:<public>:<android.media.AudioManager>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.provider.VoicemailContract.Voicemails: void <init>()>:<>:<android.provider.VoicemailContract.Voicemails:android.provider.BaseColumns,android.provider.OpenableColumns>
<android.hardware.usb.UsbRequest: boolean initialize(android.hardware.usb.UsbDeviceConnection,android.hardware.usb.UsbEndpoint)>:<public>:<android.hardware.usb.UsbRequest>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>:<public static>:<android.text.TextUtils>
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>:<public>:<android.location.LocationManager>
<android.widget.ScrollView: boolean shouldDelayChildPressedState()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.TouchDelegate getTouchDelegate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.midi.MidiDeviceService: android.media.midi.MidiReceiver[] getOutputPortReceivers()>:<public final>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.util.JsonReader: android.util.JsonToken peek()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.os.StrictMode: void noteSlowCall(java.lang.String)>:<public static>:<android.os.StrictMode>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromRawResource(android.content.Context,int)>:<public static>:<android.gesture.GestureLibraries>
<android.view.View: void setSaveFromParentEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<org.xmlpull.v1.XmlPullParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.net.Proxy: java.lang.String getDefaultHost()>:<public static final>:<android.net.Proxy>
<android.media.MediaMuxer.OutputFormat: void <init>()>:<>:<android.media.MediaMuxer.OutputFormat>
<android.content.RestrictionEntry: void <init>(java.lang.String,java.lang.String)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.text.method.DialerKeyListener: int getInputType()>:<public>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.opengl.GLES31Ext: void glPushDebugGroupKHR(int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.telephony.cdma.CdmaCellLocation: double convertQuartSecToDecDegrees(int)>:<public static>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.app.Presentation: void onStart()>:<protected>:<android.app.Presentation:android.app.Dialog>
<android.telecom.Call: void <init>()>:<>:<android.telecom.Call>
<android.widget.VideoView: void start()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.hardware.camera2.CameraDevice: android.hardware.camera2.CaptureRequest.Builder createCaptureRequest(int)>:<public abstract>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.animation.ValueAnimator: void setCurrentPlayTime(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.graphics.Point: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.database.MatrixCursor: byte[] getBlob(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.tv.TvView.TvInputCallback: void onTimeShiftStatusChanged(java.lang.String,int)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<junit.framework.TestFailure: junit.framework.Test failedTest()>:<public>:<junit.framework.TestFailure>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.Advanceable: void fyiWillBeAdvancedByHostKThx()>:<public abstract>:<android.widget.Advanceable>
<android.text.Layout.Alignment: void <clinit>()>:<static>:<android.text.Layout.Alignment:java.lang.Enum>
<android.view.Window: void takeInputQueue(android.view.InputQueue.Callback)>:<public abstract>:<android.view.Window>
<android.opengl.EGL14: boolean eglTerminate(android.opengl.EGLDisplay)>:<public static native>:<android.opengl.EGL14>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.media.tv.TvInputService.Session: void onRelease()>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.location.LocationProvider: int getPowerRequirement()>:<public>:<android.location.LocationProvider>
<android.view.Display.Mode: void <init>()>:<>:<android.view.Display.Mode:android.os.Parcelable>
<android.telecom.InCallService.VideoCall: void requestCallDataUsage()>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.bluetooth.BluetoothGattServer: boolean addService(android.bluetooth.BluetoothGattService)>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.graphics.drawable.LayerDrawable: int getTopPadding()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: void onFinishTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.SoundPool: int load(java.lang.String,int)>:<public>:<android.media.SoundPool>
<android.print.PrinterCapabilitiesInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskReads()>:<public static>:<android.os.StrictMode>
<android.app.ActionBar: void <init>()>:<public>:<android.app.ActionBar>
<android.preference.PreferenceActivity: void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.pm.Signature: void <clinit>()>:<static>:<android.content.pm.Signature:android.os.Parcelable>
<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics.Key)>:<public>:<android.hardware.camera2.CameraCharacteristics:android.hardware.camera2.CameraMetadata>
<android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: void <init>()>:<>:<android.service.voice.VoiceInteractionSession.AbortVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.app.ProgressDialog: void onStop()>:<protected>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.telecom.ConnectionService: boolean onUnbind(android.content.Intent)>:<public>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.ClipDescription: boolean compareMimeTypes(java.lang.String,java.lang.String)>:<public static>:<android.content.ClipDescription:android.os.Parcelable>
<android.hardware.camera2.CameraCharacteristics.Key: java.lang.String getName()>:<public>:<android.hardware.camera2.CameraCharacteristics.Key>
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.SpannableStringBuilder: android.text.Editable append(java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.util.ArraySet: boolean addAll(java.util.Collection)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.webkit.WebSettings: void setAllowContentAccess(boolean)>:<public abstract>:<android.webkit.WebSettings>
<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.Scroller: void setFriction(float)>:<public final>:<android.widget.Scroller>
<android.content.SyncAdapterType: void <init>(android.os.Parcel)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureRequestKeys()>:<public>:<android.hardware.camera2.CameraCharacteristics:android.hardware.camera2.CameraMetadata>
<android.system.OsConstants: boolean WIFSIGNALED(int)>:<public static>:<android.system.OsConstants>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.test.mock.MockPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.style.TtsSpan.DecimalBuilder: void <init>(java.lang.String,java.lang.String)>:<public>:<android.text.style.TtsSpan.DecimalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.graphics.drawable.AnimatedVectorDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.opengl.GLES30: void glDeleteVertexArrays(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telephony.SmsMessage: android.telephony.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>:<public static>:<android.telephony.SmsMessage>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int,android.os.Handler)>:<public>:<android.hardware.SensorManager>
<org.xmlpull.v1.sax2.Driver: int getColumnNumber()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.view.MenuItem: boolean isCheckable()>:<public abstract>:<android.view.MenuItem>
<android.app.ActivityManager.RecentTaskInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.view.View: void scrollBy(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.FragmentController: void dispatchLowMemory()>:<public>:<android.app.FragmentController>
<android.hardware.camera2.CaptureResult: java.util.List getKeys()>:<public>:<android.hardware.camera2.CaptureResult:android.hardware.camera2.CameraMetadata>
<android.media.tv.TvView.TvInputCallback: void onTracksChanged(java.lang.String,java.util.List)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.R.menu: void <init>()>:<public>:<android.R.menu>
<android.util.SparseIntArray: void append(int,int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.VoiceInteractor.PickOptionRequest.Option: void <clinit>()>:<static>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.util.AttributeSet: java.lang.String getPositionDescription()>:<public abstract>:<android.util.AttributeSet>
<android.media.audiofx.Visualizer: int setEnabled(boolean)>:<public>:<android.media.audiofx.Visualizer>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>:<public static>:<android.renderscript.RenderScript>
<android.hardware.Camera.Parameters: void setRotation(int)>:<public>:<android.hardware.Camera.Parameters>
<android.provider.ContactsContract.RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.widget.GridLayout.Spec: void <init>()>:<>:<android.widget.GridLayout.Spec>
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.effect.EffectFactory: boolean isEffectSupported(java.lang.String)>:<public static>:<android.media.effect.EffectFactory>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String feedbackTypeToString(int)>:<public static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEncryptionRequired()>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.widget.AbsListView: int getCacheColorHint()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.transition.Transition: long getStartDelay()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.telephony.NeighboringCellInfo: void <init>(android.os.Parcel)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.widget.Toolbar: void setNavigationOnClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>:<public static>:<android.text.TextUtils>
<android.util.MalformedJsonException: void <init>(java.lang.String)>:<public>:<android.util.MalformedJsonException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.content.Intent: long getLongExtra(java.lang.String,long)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.RemoteControlClient.MetadataEditor: void <init>(android.media.RemoteControlClient)>:<>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.speech.tts.SynthesisCallback: void error(int)>:<public abstract>:<android.speech.tts.SynthesisCallback>
<android.view.Menu: void clear()>:<public abstract>:<android.view.Menu>
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)>:<public>:<android.sax.Element>
<android.net.wifi.p2p.WifiP2pGroup: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.telecom.TelecomManager: void placeCall(android.net.Uri,android.os.Bundle)>:<public>:<android.telecom.TelecomManager>
<android.animation.ObjectAnimator: void <init>()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.telephony.gsm.SmsMessage: boolean isStatusReportMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.os.Parcel: void readBinderList(java.util.List)>:<public final>:<android.os.Parcel>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon)>:<public>:<android.app.Notification.Builder>
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.view.View: void setMinimumHeight(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.DocumentsContract: java.lang.String getRootId(android.net.Uri)>:<public static>:<android.provider.DocumentsContract>
<android.view.ViewStructure: void setContextClickable(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.renderscript.FieldPacker: void addU64(long)>:<public>:<android.renderscript.FieldPacker>
<android.media.MediaCodec.CryptoInfo: java.lang.String toString()>:<public>:<android.media.MediaCodec.CryptoInfo>
<android.provider.DocumentsContract.Root: void <init>()>:<>:<android.provider.DocumentsContract.Root>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.preference.SwitchPreference: void <init>(android.content.Context)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Files>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: void sendCompleteResult(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.Filter: void filter(java.lang.CharSequence)>:<public final>:<android.widget.Filter>
<android.hardware.camera2.params.TonemapCurve: int hashCode()>:<public>:<android.hardware.camera2.params.TonemapCurve>
<android.view.View: void offsetTopAndBottom(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.res.ColorStateList: boolean isOpaque()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.gesture.GestureOverlayView: void draw(android.graphics.Canvas)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebViewFragment: android.webkit.WebView getWebView()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float4)>:<public>:<android.renderscript.FieldPacker>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)>:<public>:<android.hardware.SensorManager>
<android.content.res.ColorStateList: int getColorForState(int[],int)>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.media.MediaPlayer: void setNextMediaPlayer(android.media.MediaPlayer)>:<public native>:<android.media.MediaPlayer>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11: void glPointParameterf(int,float)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.HorizontalScrollView: void setFillViewport(boolean)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiManager: boolean isDeviceToApRttSupported()>:<public>:<android.net.wifi.WifiManager>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.util.Range: android.util.Range extend(java.lang.Comparable)>:<public>:<android.util.Range>
<android.graphics.Point: void <clinit>()>:<static>:<android.graphics.Point:android.os.Parcelable>
<android.view.View: android.view.animation.Animation getAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.StaticLayout: android.text.Layout.Directions getLineDirections(int)>:<public final>:<android.text.StaticLayout:android.text.Layout>
<android.app.Fragment: boolean isAdded()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.system.Os: void close(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.PopupWindow>
<android.view.ViewGroup: boolean isAnimationCacheEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.assist.AssistStructure.ViewNode: boolean isContextClickable()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<protected>:<android.drm.DrmEvent>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: float getAlpha()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.renderscript.Script: void setVar(int,long)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable.Orientation getOrientation()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.bluetooth.BluetoothGattCharacteristic: void setWriteType(int)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.text.method.LinkMovementMethod: boolean canSelectArbitrarily()>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>:<public>:<android.telephony.PhoneStateListener>
<android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.telephony.CellInfo: void <clinit>()>:<static>:<android.telephony.CellInfo:android.os.Parcelable>
<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>:<public abstract>:<android.content.pm.PackageManager>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putBitmap(java.lang.String,android.graphics.Bitmap)>:<public>:<android.media.MediaMetadata.Builder>
<android.nfc.tech.MifareUltralight: void writePage(int,byte[])>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.app.job.JobScheduler: void <init>()>:<public>:<android.app.job.JobScheduler>
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.animation.AnimatorSet: void <init>()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setRandomizedEncryptionRequired(boolean)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.util.SizeF: float getHeight()>:<public>:<android.util.SizeF>
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.FieldPacker: void reset()>:<public>:<android.renderscript.FieldPacker>
<android.text.style.TextAppearanceSpan: int getTextStyle()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.nfc.tech.NfcF: void close()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.animation.ValueAnimator: void start()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.ListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.database.sqlite.SQLiteCursor: void finalize()>:<protected>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.nfc.tech.NfcA: byte[] getAtqa()>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.media.projection.MediaProjection: void <init>()>:<>:<android.media.projection.MediaProjection>
<android.text.Editable: void clearSpans()>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.widget.CalendarView: boolean getShowWeekNumber()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>:<public>:<android.webkit.WebChromeClient>
<android.app.ActivityManager.RunningServiceInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.opengl.GLES30: void glProgramParameteri(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.view.animation.AnimationSet: void setDuration(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<org.json.JSONArray: org.json.JSONArray put(long)>:<public>:<org.json.JSONArray>
<android.widget.AbsSeekBar: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.content.pm.ApplicationInfo: int describeContents()>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.ActionMode: void invalidateContentRect()>:<public>:<android.view.ActionMode>
<android.text.style.TtsSpan: java.lang.String getType()>:<public>:<android.text.style.TtsSpan:android.text.ParcelableSpan>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.hardware.Camera.Parameters: void setGpsProcessingMethod(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.PathClassLoader:dalvik.system.BaseDexClassLoader,java.lang.ClassLoader>
<android.graphics.SurfaceTexture.OnFrameAvailableListener: void onFrameAvailable(android.graphics.SurfaceTexture)>:<public abstract>:<android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.telephony.SmsMessage: android.telephony.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>:<public static>:<android.telephony.SmsMessage>
<android.provider.ContactsContract.AggregationExceptions: void <clinit>()>:<static>:<android.provider.ContactsContract.AggregationExceptions:android.provider.BaseColumns>
<android.graphics.Paint: float getRunAdvance(char[],int,int,int,int,boolean,int)>:<public>:<android.graphics.Paint>
<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>:<public abstract>:<android.content.Context>
<android.text.method.DialerKeyListener: void <clinit>()>:<static>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.hardware.camera2.params.InputConfiguration: void <init>(int,int,int)>:<public>:<android.hardware.camera2.params.InputConfiguration>
<android.content.pm.Signature: int hashCode()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.hardware.SensorListener: void onSensorChanged(int,float[])>:<public abstract>:<android.hardware.SensorListener>
<android.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.style.URLSpan: int getSpanTypeId()>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.telephony.CellIdentityLte: int getPci()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.os.Looper: android.os.Looper getMainLooper()>:<public static>:<android.os.Looper>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUid(int,java.lang.String,long,long,int)>:<public>:<android.app.usage.NetworkStatsManager>
<android.provider.SyncStateContract.Helpers: void <init>()>:<public>:<android.provider.SyncStateContract.Helpers>
<android.widget.GridLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.drm.DrmManagerClient: int removeAllRights()>:<public>:<android.drm.DrmManagerClient>
<android.print.PageRange: int describeContents()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.media.audiofx.Equalizer: void usePreset(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.media.MediaPlayer: void prepare()>:<public>:<android.media.MediaPlayer>
<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.view.InputDevice: java.lang.String toString()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.app.ActionBar: void removeAllTabs()>:<public abstract>:<android.app.ActionBar>
<android.graphics.drawable.BitmapDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.bluetooth.BluetoothSocket: void <init>()>:<>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.content.Context: boolean deleteFile(java.lang.String)>:<public abstract>:<android.content.Context>
<android.media.session.MediaController.TransportControls: void stop()>:<public>:<android.media.session.MediaController.TransportControls>
<android.opengl.GLES30: boolean glIsSampler(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.Bitmap: int getByteCount()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element I16(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.os.Looper: void dump(android.util.Printer,java.lang.String)>:<public>:<android.os.Looper>
<android.view.Window.Callback: void onDetachedFromWindow()>:<public abstract>:<android.view.Window.Callback>
<android.util.SizeF: boolean equals(java.lang.Object)>:<public>:<android.util.SizeF>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ActivityManager: boolean isInLockTaskMode()>:<public>:<android.app.ActivityManager>
<android.hardware.usb.UsbEndpoint: int getType()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.LayoutParams: void <init>(int,int,int)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.webkit.WebView: void setInitialScale(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.speech.RecognitionService: void onStartListening(android.content.Intent,android.speech.RecognitionService.Callback)>:<protected abstract>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar: void setHomeActionContentDescription(int)>:<public>:<android.app.ActionBar>
<dalvik.bytecode.OpcodeInfo: void <init>()>:<>:<dalvik.bytecode.OpcodeInfo>
<android.app.ActivityManager.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteGroup getGroup()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.preference.DialogPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.view.MotionEvent: void setLocation(float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ToggleButton: void onFinishInflate()>:<protected>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.renderscript.ScriptIntrinsicBLAS: void SSYMV(int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.provider.ContactsContract.SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>:<public>:<android.telephony.TelephonyManager>
<android.text.method.DialerKeyListener: void <init>()>:<public>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.animation.RotateAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.view.inputmethod.CursorAnchorInfo: int hashCode()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.location.Location: void removeAccuracy()>:<public>:<android.location.Location:android.os.Parcelable>
<android.preference.RingtonePreference: boolean getShowDefault()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.telecom.Connection.VideoProvider: void changePeerDimensions(int,int)>:<public>:<android.telecom.Connection.VideoProvider>
<android.os.Debug: int getThreadGcInvocationCount()>:<public static>:<android.os.Debug>
<android.content.Context: void sendStickyBroadcast(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.accessibilityservice.AccessibilityService: void <init>()>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.AdapterView: void removeView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ImageView:android.view.View>
<android.media.session.PlaybackState.Builder: void <init>(android.media.session.PlaybackState)>:<public>:<android.media.session.PlaybackState.Builder>
<android.opengl.GLES30: void glGetInteger64v(int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ProgressBar: void setIndeterminate(boolean)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.app.Activity: void startLockTask()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.location.Location: void setLatitude(double)>:<public>:<android.location.Location:android.os.Parcelable>
<android.view.View: int getId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: boolean isShown()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.ContactsContract.SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.net.nsd.NsdManager: void unregisterService(android.net.nsd.NsdManager.RegistrationListener)>:<public>:<android.net.nsd.NsdManager>
<android.widget.AbsListView: void onAttachedToWindow()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.ImageView: boolean getAdjustViewBounds()>:<public>:<android.widget.ImageView:android.view.View>
<android.security.keystore.KeyGenParameterSpec: void <init>()>:<>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.content.pm.LauncherApps: void registerCallback(android.content.pm.LauncherApps.Callback,android.os.Handler)>:<public>:<android.content.pm.LauncherApps>
<android.media.tv.TvContract.Programs: void <init>()>:<>:<android.media.tv.TvContract.Programs:android.media.tv.TvContract.BaseTvColumns>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRanges()>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>:<public abstract>:<android.text.Spannable:android.text.Spanned>
<android.media.MediaRouter.RouteGroup: void removeRoute(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.LayoutInflater.Filter: boolean onLoadClass(java.lang.Class)>:<public abstract>:<android.view.LayoutInflater.Filter>
<android.content.pm.LauncherApps: void unregisterCallback(android.content.pm.LauncherApps.Callback)>:<public>:<android.content.pm.LauncherApps>
<android.widget.EditText: void selectAll()>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.test.mock.MockPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.provider.DocumentsContract: android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.test.mock.MockCursor: java.lang.String getString(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasForegroundColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.text.format.Time: void <init>(java.lang.String)>:<public>:<android.text.format.Time>
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.test.mock.MockContext: int checkPermission(java.lang.String,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.bluetooth.le.ScanResult: void <init>(android.bluetooth.BluetoothDevice,android.bluetooth.le.ScanRecord,int,long)>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.renderscript.Matrix2f: void scale(float,float)>:<public>:<android.renderscript.Matrix2f>
<android.renderscript.Byte2: void <init>(byte,byte)>:<public>:<android.renderscript.Byte2>
<android.app.admin.DevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>:<public>:<android.view.SurfaceView:android.view.View>
<android.preference.DialogPreference: void showDialog(android.os.Bundle)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<junit.framework.TestSuite: void addTest(junit.framework.Test)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.hardware.camera2.params.LensShadingMap: float getGainFactor(int,int,int)>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.view.View: void setDrawingCacheBackgroundColor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telephony.PhoneStateListener: void onCellInfoChanged(java.util.List)>:<public>:<android.telephony.PhoneStateListener>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumber(long)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.provider.MediaStore.Video.Thumbnails: void <clinit>()>:<static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.widget.QuickContactBadge: void drawableHotspotChanged(float,float)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.media.CamcorderProfile: void <init>()>:<>:<android.media.CamcorderProfile>
<android.provider.Contacts.Groups: void <clinit>()>:<static>:<android.provider.Contacts.Groups:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<android.os.Parcel: boolean hasFileDescriptors()>:<public final>:<android.os.Parcel>
<android.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.media.midi.MidiManager: void <init>()>:<>:<android.media.midi.MidiManager>
<android.media.JetPlayer: void finalize()>:<protected>:<android.media.JetPlayer>
<android.text.AndroidCharacter: int getEastAsianWidth(char)>:<public static native>:<android.text.AndroidCharacter>
<android.widget.AbsListView: void setSelectionFromTop(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.style.QuoteSpan: void <init>(int)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.webkit.WebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions.Callback)>:<public>:<android.webkit.WebChromeClient>
<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.location.LocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>:<public abstract>:<android.location.LocationListener>
<android.telecom.CallAudioState: java.lang.String toString()>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,java.lang.String[],int[],int,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.telephony.ServiceState: boolean getRoaming()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.opengl.GLES30: void glTexStorage3D(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telecom.DisconnectCause: java.lang.String toString()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.widget.GridLayout: boolean isColumnOrderPreserved()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.preference.ListPreference: void setEntryValues(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.MergeCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeyType(java.lang.String)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.widget.HorizontalScrollView: void onMeasure(int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.CursorWindow: boolean putNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.EGL14: boolean eglWaitGL()>:<public static native>:<android.opengl.EGL14>
<android.content.Intent: android.os.Bundle getExtras()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.mtp.MtpConstants: void <init>()>:<public>:<android.mtp.MtpConstants>
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>:<public static>:<android.util.TimeUtils>
<android.widget.ListPopupWindow: void dismiss()>:<public>:<android.widget.ListPopupWindow>
<android.transition.TransitionSet: android.transition.Transition removeTarget(java.lang.String)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.WallpaperManager: int getDesiredMinimumWidth()>:<public>:<android.app.WallpaperManager>
<android.net.wifi.WifiInfo: void <init>()>:<>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Notification.Builder: android.app.Notification.Builder setLargeIcon(android.graphics.Bitmap)>:<public>:<android.app.Notification.Builder>
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.CaptivePortal: int describeContents()>:<public>:<android.net.CaptivePortal:android.os.Parcelable>
<android.speech.tts.Voice: boolean isNetworkConnectionRequired()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void CGBMV(int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.MenuItem: int getItemId()>:<public abstract>:<android.view.MenuItem>
<android.accounts.AccountAuthenticatorResponse: void <clinit>()>:<static>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.test.mock.MockContext: void enforceCallingPermission(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.print.PrinterCapabilitiesInfo: int hashCode()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.net.rtp.AudioStream: boolean isBusy()>:<public final>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte2)>:<public>:<android.renderscript.FieldPacker>
<android.widget.TextView: android.graphics.Typeface getTypeface()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockCursor: boolean isFirst()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage)>:<public>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.media.AudioDeviceInfo: boolean isSource()>:<public>:<android.media.AudioDeviceInfo>
<android.app.Fragment: void registerForContextMenu(android.view.View)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.animation.AnimatorSet: java.lang.Object clone()>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.content.pm.PackageInstaller.SessionInfo: int getSessionId()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.os.Process: boolean is64Bit()>:<public static final>:<android.os.Process>
<android.service.chooser.ChooserTarget: android.content.ComponentName getComponentName()>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>:<public>:<android.speech.tts.TextToSpeech>
<android.hardware.usb.UsbDeviceConnection: boolean setConfiguration(android.hardware.usb.UsbConfiguration)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.app.ActionBar.Tab: android.graphics.drawable.Drawable getIcon()>:<public abstract>:<android.app.ActionBar.Tab>
<android.print.PageRange: void <clinit>()>:<static>:<android.print.PageRange:android.os.Parcelable>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>:<public>:<android.graphics.Canvas>
<android.media.MediaActionSound: void <init>()>:<public>:<android.media.MediaActionSound>
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.graphics.RectF: java.lang.String toString()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>:<public static>:<android.text.TextUtils>
<android.app.DialogFragment: void dismiss()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.Script: void bindAllocation(android.renderscript.Allocation,int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.graphics.drawable.LayerDrawable: int getId(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>:<public>:<android.graphics.Paint>
<android.os.Debug: int getThreadExternalAllocCount()>:<public static>:<android.os.Debug>
<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.app.Fragment: android.content.res.Resources getResources()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Process: int getUidForName(java.lang.String)>:<public static final native>:<android.os.Process>
<android.media.audiofx.Visualizer: int setScalingMode(int)>:<public>:<android.media.audiofx.Visualizer>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.os.Debug: int getGlobalClassInitCount()>:<public static>:<android.os.Debug>
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.print.PrintDocumentAdapter: void onFinish()>:<public>:<android.print.PrintDocumentAdapter>
<android.view.ViewStub: void onMeasure(int,int)>:<protected>:<android.view.ViewStub:android.view.View>
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintShowBackgroundOnly(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.widget.Checkable: void toggle()>:<public abstract>:<android.widget.Checkable>
<android.hardware.usb.UsbDevice: java.lang.String getSerialNumber()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.media.effect.Effect: java.lang.String getName()>:<public abstract>:<android.media.effect.Effect>
<android.provider.Contacts.GroupMembership: void <init>()>:<>:<android.provider.Contacts.GroupMembership:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setFlags(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.app.assist.AssistStructure.WindowNode: android.app.assist.AssistStructure.ViewNode getRootViewNode()>:<public>:<android.app.assist.AssistStructure.WindowNode>
<android.hardware.Sensor: float getResolution()>:<public>:<android.hardware.Sensor>
<android.security.keystore.KeyProtection: java.lang.String[] getEncryptionPaddings()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.provider.ContactsContract.Profile: void <clinit>()>:<static>:<android.provider.ContactsContract.Profile:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.widget.TextView: void setMinWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.ContactsContract.Profile: void <init>()>:<>:<android.provider.ContactsContract.Profile:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.view.View: boolean awakenScrollBars(int,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.DhcpInfo: java.lang.String toString()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.os.ResultReceiver: void <clinit>()>:<static>:<android.os.ResultReceiver:android.os.Parcelable>
<android.app.AlarmManager: void setTimeZone(java.lang.String)>:<public>:<android.app.AlarmManager>
<android.telephony.gsm.GsmCellLocation: void <init>()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.view.animation.Animation: void scaleCurrentDuration(float)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.accessibility.CaptioningManager.CaptionStyle: void <init>()>:<>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.widget.BaseExpandableListAdapter: void notifyDataSetInvalidated()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.ScriptIntrinsicColorMatrix: void <init>()>:<>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.hardware.Camera: void setDisplayOrientation(int)>:<public final native>:<android.hardware.Camera>
<android.view.ViewStructure: boolean hasExtras()>:<public abstract>:<android.view.ViewStructure>
<android.app.FragmentHostCallback: void onStartActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.content.AsyncQueryHandler.WorkerHandler: void <init>(android.content.AsyncQueryHandler,android.os.Looper)>:<public>:<android.content.AsyncQueryHandler.WorkerHandler:android.os.Handler>
<android.os.PowerManager: void <init>()>:<>:<android.os.PowerManager>
<android.webkit.WebSyncManager: void onSyncInit()>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ApplicationErrorReport.BatteryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.content.IntentFilter: void <init>(android.content.IntentFilter)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.util.EventLog.Event: long getTimeNanos()>:<public>:<android.util.EventLog.Event>
<android.graphics.Camera: void rotateY(float)>:<public native>:<android.graphics.Camera>
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.widget.DialerFilter: void setLettersWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.text.Layout.Alignment: android.text.Layout.Alignment[] values()>:<public static>:<android.text.Layout.Alignment:java.lang.Enum>
<android.text.AlteredCharSequence: java.lang.String toString()>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.text.SpannedString: int hashCode()>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.service.voice.VoiceInteractionSession.Request: java.lang.String toString()>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.RingtoneManager: int inferStreamType()>:<public>:<android.media.RingtoneManager>
<android.graphics.PorterDuff.Mode: void <clinit>()>:<static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.view.MenuItem: void setShowAsAction(int)>:<public abstract>:<android.view.MenuItem>
<android.widget.Gallery: int computeHorizontalScrollOffset()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.inputmethod.CorrectionInfo: int getOffset()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.media.AudioTrack: int getPlaybackHeadPosition()>:<public>:<android.media.AudioTrack>
<android.webkit.ClientCertRequest: java.lang.String getHost()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.transition.ChangeScroll: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,int[][])>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.RelativeLayout: int getBaseline()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.R.fraction: void <init>()>:<public>:<android.R.fraction>
<android.test.mock.MockContentResolver: void <init>()>:<public>:<android.test.mock.MockContentResolver:android.content.ContentResolver>
<android.view.KeyEvent: boolean isMetaPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.telecom.RemoteConnection: void unhold()>:<public>:<android.telecom.RemoteConnection>
<android.renderscript.Matrix3f: void loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.security.KeyChainException: void <init>(java.lang.Throwable)>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.webkit.WebView: void onWindowFocusChanged(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.CursorLoader: java.lang.String getSelection()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.test.MoreAsserts: void assertNotEmpty(java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.MediaRecorder: void setMaxDuration(int)>:<public native>:<android.media.MediaRecorder>
<org.json.JSONTokener: void skipPast(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.view.ViewStub: void <init>(android.content.Context)>:<public>:<android.view.ViewStub:android.view.View>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.location.Criteria: boolean isBearingRequired()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.util.Base64: byte[] decode(byte[],int)>:<public static>:<android.util.Base64>
<android.net.LinkAddress: int describeContents()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.net.sip.SipAudioCall.Listener: void <init>()>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>:<public abstract>:<android.content.Context>
<android.media.midi.MidiReceiver: void onFlush()>:<public>:<android.media.midi.MidiReceiver>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo build()>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.transition.Scene: android.view.ViewGroup getSceneRoot()>:<public>:<android.transition.Scene>
<android.app.ProgressDialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.app.Activity: void onLowMemory()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telephony.SubscriptionInfo: int getDataRoaming()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.media.midi.MidiDevice.MidiConnection: void close()>:<public>:<android.media.midi.MidiDevice.MidiConnection:java.io.Closeable>
<android.nfc.tech.MifareClassic: int getSectorCount()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.widget.Chronometer: void <init>(android.content.Context)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.util.AttributeSet: int getAttributeIntValue(int,int)>:<public abstract>:<android.util.AttributeSet>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo create()>:<public>:<android.graphics.pdf.PdfDocument.PageInfo.Builder>
<android.bluetooth.BluetoothGattCallback: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.telecom.Call.Callback: void onCallDestroyed(android.telecom.Call)>:<public>:<android.telecom.Call.Callback>
<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.TextView: boolean isTextSelectable()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.print.PrintAttributes.Margins: int hashCode()>:<public>:<android.print.PrintAttributes.Margins>
<android.view.View: long getDrawingTime()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.security.keystore.KeyProperties: void <init>()>:<>:<android.security.keystore.KeyProperties>
<android.telephony.CellSignalStrengthLte: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.database.AbstractCursor: int getCount()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.TrafficStats: void tagSocket(java.net.Socket)>:<public static>:<android.net.TrafficStats>
<android.view.animation.Animation: android.view.animation.Animation clone()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.telecom.ConnectionService: void onRemoteConferenceAdded(android.telecom.RemoteConference)>:<public>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Toolbar: boolean hasExpandedActionView()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setSelectAllOnFocus(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitResourceMismatches()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.view.ViewGroup: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.telecom.TelecomManager: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)>:<public>:<android.telecom.TelecomManager>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeTransportType(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.widget.Spinner: void <init>(android.content.Context,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.telecom.RemoteConnection: void disconnect()>:<public>:<android.telecom.RemoteConnection>
<android.app.admin.DeviceAdminInfo: int describeContents()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.app.usage.UsageEvents.Event: int getEventType()>:<public>:<android.app.usage.UsageEvents.Event>
<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()>:<public>:<android.drm.DrmSupportInfo>
<android.net.LocalSocket: void shutdownInput()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.widget.Switch: int getSwitchPadding()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telecom.InCallService.VideoCall.Callback: void onSessionModifyRequestReceived(android.telecom.VideoProfile)>:<public abstract>:<android.telecom.InCallService.VideoCall.Callback>
<android.text.style.RasterizerSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.RasterizerSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.graphics.drawable.GradientDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.PorterDuffColorFilter: int hashCode()>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)>:<public>:<android.text.StaticLayout.Builder>
<android.net.http.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.content.pm.Signature: char[] toChars(char[],int[])>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.telecom.Call.Details: boolean hasProperty(int)>:<public>:<android.telecom.Call.Details>
<android.os.storage.OnObbStateChangeListener: void <init>()>:<public>:<android.os.storage.OnObbStateChangeListener>
<android.test.mock.MockPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer.Settings getProperties()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>:<public abstract>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.view.Window: int getNavigationBarColor()>:<public abstract>:<android.view.Window>
<android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>:<public static>:<android.app.AppOpsManager>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.net.wifi.SupplicantState: void <clinit>()>:<static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.app.Notification.Builder: android.app.Notification.Builder setOnlyAlertOnce(boolean)>:<public>:<android.app.Notification.Builder>
<android.graphics.Xfermode: void <init>()>:<public>:<android.graphics.Xfermode>
<android.app.backup.BackupDataInput: void <init>()>:<>:<android.app.backup.BackupDataInput>
<android.view.Window: void setUiOptions(int,int)>:<public>:<android.view.Window>
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>:<public static>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.system.Os: int prctl(int,long,long,long,long)>:<public static>:<android.system.Os>
<android.gesture.GestureStore: void <init>()>:<public>:<android.gesture.GestureStore>
<android.renderscript.Long3: void <init>()>:<public>:<android.renderscript.Long3>
<android.hardware.camera2.params.MeteringRectangle: int hashCode()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.view.accessibility.AccessibilityManager: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.text.util.Rfc822Tokenizer: void <init>()>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>:<public>:<android.graphics.Canvas>
<android.bluetooth.le.ScanCallback: void onScanResult(int,android.bluetooth.le.ScanResult)>:<public>:<android.bluetooth.le.ScanCallback>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onPeriodicNotification(android.media.AudioTrack)>:<public abstract>:<android.media.AudioTrack.OnPlaybackPositionUpdateListener>
<android.renderscript.Matrix3f: void multiply(android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.media.AudioRecord: void startRecording(android.media.MediaSyncEvent)>:<public>:<android.media.AudioRecord>
<android.os.CancellationSignal: boolean isCanceled()>:<public>:<android.os.CancellationSignal>
<android.widget.TextSwitcher: void <init>(android.content.Context)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Dialog: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.test.MoreAsserts: void assertContentsInOrder(java.lang.String,java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.usage.UsageEvents: void <clinit>()>:<static>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.provider.Telephony.Mms.Rate: void <clinit>()>:<static>:<android.provider.Telephony.Mms.Rate>
<android.test.mock.MockContext: int checkCallingUriPermission(android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession: void <init>()>:<public>:<android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession:android.hardware.camera2.CameraCaptureSession>
<android.media.projection.MediaProjection: void registerCallback(android.media.projection.MediaProjection.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjection>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()>:<public>:<android.gesture.GestureLibrary>
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.net.sip.SipProfile: java.lang.String getProfileName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.text.style.LocaleSpan: java.util.Locale getLocale()>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(java.lang.String,java.lang.String,int)>:<public>:<android.media.session.PlaybackState.Builder>
<android.os.StatFs: long getFreeBytes()>:<public>:<android.os.StatFs>
<android.animation.Animator: void addPauseListener(android.animation.Animator.AnimatorPauseListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.view.animation.GridLayoutAnimationController: int getDirection()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.app.Activity: boolean onNavigateUpFromChild(android.app.Activity)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.test.MoreAsserts: void assertEquals(java.lang.String,int[],int[])>:<public static>:<android.test.MoreAsserts>
<android.gesture.GestureLibrary: boolean isReadOnly()>:<public>:<android.gesture.GestureLibrary>
<android.util.EventLogTags: android.util.EventLogTags.Description get(java.lang.String)>:<public>:<android.util.EventLogTags>
<android.preference.DialogPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.MoreAsserts: void <init>()>:<>:<android.test.MoreAsserts>
<android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>:<public final>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)>:<public abstract>:<android.widget.SearchView.OnQueryTextListener>
<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TableRow.LayoutParams: void <init>()>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.hardware.Camera: int getNumberOfCameras()>:<public static native>:<android.hardware.Camera>
<android.webkit.WebChromeClient: boolean onJsTimeout()>:<public>:<android.webkit.WebChromeClient>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getSelectionMode()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.renderscript.Matrix3f: void load(android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>:<public>:<android.webkit.WebChromeClient>
<android.transition.TransitionSet: android.transition.TransitionSet addListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>:<public static>:<android.text.format.DateUtils>
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.SearchableInfo: void <clinit>()>:<static>:<android.app.SearchableInfo:android.os.Parcelable>
<android.provider.AlarmClock: void <init>()>:<public>:<android.provider.AlarmClock>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>:<public>:<android.graphics.Canvas>
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setNoRetry(boolean)>:<public>:<android.content.SyncRequest.Builder>
<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>:<public>:<android.media.session.MediaSessionManager>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: void <init>()>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>:<public abstract>:<android.content.SharedPreferences>
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.sip.SipSession.State: void <init>()>:<>:<android.net.sip.SipSession.State>
<android.app.FragmentHostCallback: void <init>(android.content.Context,android.os.Handler,int)>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus convertData(int,byte[])>:<public>:<android.drm.DrmManagerClient>
<android.location.SettingInjectorService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.location.SettingInjectorService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.Surface: void unlockCanvas(android.graphics.Canvas)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>:<public abstract>:<android.view.MenuItem>
<android.graphics.Region: boolean set(android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.MediaController: void show()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.Activity: android.view.View findViewById(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.drm.DrmRights: byte[] getData()>:<public>:<android.drm.DrmRights>
<android.util.EventLog.Event: int getProcessId()>:<public>:<android.util.EventLog.Event>
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>:<public static>:<android.text.format.DateUtils>
<android.renderscript.Sampler.Builder: android.renderscript.Sampler create()>:<public>:<android.renderscript.Sampler.Builder>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotAfter()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.GridLayout: boolean getUseDefaultMargins()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.provider.DocumentsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.view.Window: android.transition.Transition getSharedElementReturnTransition()>:<public>:<android.view.Window>
<android.content.RestrictionsManager: void requestPermission(java.lang.String,java.lang.String,android.os.PersistableBundle)>:<public>:<android.content.RestrictionsManager>
<android.view.WindowId.FocusObserver: void <init>()>:<public>:<android.view.WindowId.FocusObserver>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,java.nio.IntBuffer,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telecom.Conferenceable: void <init>()>:<>:<android.telecom.Conferenceable>
<android.text.style.StrikethroughSpan: int describeContents()>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.animation.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.widget.AnalogClock: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<org.json.JSONArray: org.json.JSONObject toJSONObject(org.json.JSONArray)>:<public>:<org.json.JSONArray>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element SAMPLER(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>:<public>:<android.media.AudioManager>
<android.graphics.pdf.PdfDocument.Page: android.graphics.Canvas getCanvas()>:<public>:<android.graphics.pdf.PdfDocument.Page>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>:<public static>:<android.net.TrafficStats>
<android.os.Handler: void dispatchMessage(android.os.Message)>:<public>:<android.os.Handler>
<android.database.DataSetObservable: void notifyChanged()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.animation.ValueAnimator: void reverse()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.app.ActionBar: void setDisplayOptions(int)>:<public abstract>:<android.app.ActionBar>
<android.system.Os: void rename(java.lang.String,java.lang.String)>:<public static>:<android.system.Os>
<android.content.Intent: java.lang.String toUri(int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.animation.AnimatorSet.Builder: void <init>(android.animation.AnimatorSet)>:<>:<android.animation.AnimatorSet.Builder>
<android.media.MediaPlayer: void setLooping(boolean)>:<public native>:<android.media.MediaPlayer>
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.test.mock.MockContentResolver: void <init>(android.content.Context)>:<public>:<android.test.mock.MockContentResolver:android.content.ContentResolver>
<android.graphics.Paint: boolean isStrikeThruText()>:<public final>:<android.graphics.Paint>
<android.system.Os: int getuid()>:<public static>:<android.system.Os>
<android.app.Dialog: android.view.View findViewById(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Allocation.OnBufferAvailableListener: void onBufferAvailable(android.renderscript.Allocation)>:<public abstract>:<android.renderscript.Allocation.OnBufferAvailableListener>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public abstract>:<android.content.Context>
<android.accessibilityservice.AccessibilityServiceInfo: int hashCode()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.widget.ListPopupWindow: void clearListSelection()>:<public>:<android.widget.ListPopupWindow>
<android.provider.CalendarContract.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>:<public static final>:<android.provider.CalendarContract.Instances:android.provider.BaseColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.view.View: float getRightFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.BaseSavedState: void <init>(android.os.Parcel)>:<public>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.text.style.LeadingMarginSpan.Standard: int describeContents()>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.telephony.gsm.SmsMessage.SubmitPdu: java.lang.String toString()>:<public>:<android.telephony.gsm.SmsMessage.SubmitPdu>
<android.transition.Transition: android.transition.Transition clone()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.telecom.InCallService: void setMuted(boolean)>:<public final>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.GeolocationPermissions: void clear(java.lang.String)>:<public>:<android.webkit.GeolocationPermissions>
<android.util.JsonReader: void setLenient(boolean)>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setConstantSize(boolean)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.widget.RelativeLayout.LayoutParams: void resolveLayoutDirection(int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.service.chooser.ChooserTargetService: java.util.List onGetChooserTargets(android.content.ComponentName,android.content.IntentFilter)>:<public abstract>:<android.service.chooser.ChooserTargetService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.session.PlaybackState: long getActiveQueueItemId()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.nfc.tech.IsoDep: void close()>:<public volatile>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.view.inputmethod.CursorAnchorInfo.Builder: void reset()>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.app.Fragment: android.app.LoaderManager getLoaderManager()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Instrumentation.ActivityResult: void <init>(int,android.content.Intent)>:<public>:<android.app.Instrumentation.ActivityResult>
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)>:<public static>:<android.security.KeyChain>
<android.telecom.Conference: void onMerge(android.telecom.Connection)>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.graphics.drawable.Drawable: boolean setState(int[])>:<public>:<android.graphics.drawable.Drawable>
<android.util.TimingLogger: void addSplit(java.lang.String)>:<public>:<android.util.TimingLogger>
<android.content.Context: int getColor(int)>:<public final>:<android.content.Context>
<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.text.Layout: void draw(android.graphics.Canvas)>:<public>:<android.text.Layout>
<android.database.MatrixCursor: float getFloat(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.net.rtp.RtpStream: void <init>()>:<>:<android.net.rtp.RtpStream>
<android.app.Activity: void onStateNotSaved()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telecom.Connection: int getState()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.graphics.drawable.Drawable: void setTint(int)>:<public>:<android.graphics.drawable.Drawable>
<android.content.ComponentCallbacks: void onConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.content.ComponentCallbacks>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.animation.Keyframe: void setFraction(float)>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AccountManager>
<android.mtp.MtpObjectInfo: int getImagePixHeight()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothProfile: java.util.List getConnectedDevices()>:<public abstract>:<android.bluetooth.BluetoothProfile>
<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.app.Fragment: int getId()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.Paint: float measureText(char[],int,int)>:<public>:<android.graphics.Paint>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.AbsSpinner: android.view.View getSelectedView()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.MediaDrm.KeyRequest: java.lang.String getDefaultUrl()>:<public>:<android.media.MediaDrm.KeyRequest>
<android.widget.AbsSeekBar: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.graphics.ImageFormat: void <init>()>:<public>:<android.graphics.ImageFormat>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.accounts.AuthenticatorDescription: int describeContents()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.View: int resolveSizeAndState(int,int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiSelectListPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.CursorWindow: double getDouble(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.telephony.CellSignalStrengthLte: int describeContents()>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.media.tv.TvInputService.Session: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.webkit.PluginStub: android.view.View getEmbeddedView(int,android.content.Context)>:<public abstract>:<android.webkit.PluginStub>
<android.hardware.camera2.CameraAccessException: int getReason()>:<public final>:<android.hardware.camera2.CameraAccessException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.text.style.ForegroundColorSpan: int getForegroundColor()>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.media.MediaSync: void setOnErrorListener(android.media.MediaSync.OnErrorListener,android.os.Handler)>:<public>:<android.media.MediaSync>
<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.util.ArrayMap: boolean containsKey(java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.view.animation.Transformation: void setTransformationType(int)>:<public>:<android.view.animation.Transformation>
<android.renderscript.Element: android.renderscript.Element U16_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: int getOpacity()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>:<public static>:<android.util.Xml>
<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.gesture.GestureStore: void removeEntry(java.lang.String)>:<public>:<android.gesture.GestureStore>
<android.database.CursorWrapper: boolean isAfterLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.renderscript.Long2: void <init>()>:<public>:<android.renderscript.Long2>
<android.content.EntityIterator: void close()>:<public abstract>:<android.content.EntityIterator:java.util.Iterator>
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.widget.PopupWindow: void setContentView(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.widget.TextView: float getLeftFadingEdgeStrength()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.speech.tts.SynthesisCallback: int start(int,int,int)>:<public abstract>:<android.speech.tts.SynthesisCallback>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateNotAfter(java.util.Date)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.test.mock.MockResources: int getDimensionPixelSize(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>:<public>:<android.text.StaticLayout.Builder>
<android.app.TaskStackBuilder: void startActivities(android.os.Bundle)>:<public>:<android.app.TaskStackBuilder>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,float,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setProtocol(java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.graphics.drawable.Drawable: boolean isStateful()>:<public>:<android.graphics.drawable.Drawable>
<android.os.PowerManager.WakeLock: void release()>:<public>:<android.os.PowerManager.WakeLock>
<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.TextureView:android.view.View>
<android.view.View.OnCreateContextMenuListener: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public abstract>:<android.view.View.OnCreateContextMenuListener>
<android.app.usage.UsageStats: long getLastTimeStamp()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.widget.ScrollView: void <init>(android.content.Context)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.hardware.camera2.params.MeteringRectangle: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.security.KeyPairGeneratorSpec: boolean isEncryptionRequired()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.test.InstrumentationTestRunner: java.lang.ClassLoader getLoader()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.content.Intent: void setSelector(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.system.OsConstants: boolean S_ISFIFO(int)>:<public static>:<android.system.OsConstants>
<android.media.midi.MidiDeviceStatus: int getOutputPortOpenCount(int)>:<public>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.widget.HorizontalScrollView: boolean pageScroll(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.usage.UsageStats: long getTotalTimeInForeground()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.preference.CheckBoxPreference: void onBindView(android.view.View)>:<protected>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.media.MediaRouter.UserRouteInfo: void setVolumeMax(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.app.Notification.CarExtender: android.app.Notification.Builder extend(android.app.Notification.Builder)>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telecom.CallAudioState: void <init>(boolean,int,int)>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.net.VpnService: boolean setUnderlyingNetworks(android.net.Network[])>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.graphics.PointF: int hashCode()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.webkit.URLUtil: byte[] decode(byte[])>:<public static>:<android.webkit.URLUtil>
<android.view.KeyEvent: void <init>(android.view.KeyEvent)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.transition.Transition: long getDuration()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.Activity: void setVisible(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.HorizontalScrollView: void addView(android.view.View,int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.style.URLSpan: void onClick(android.view.View)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.system.Os: void shutdown(java.io.FileDescriptor,int)>:<public static>:<android.system.Os>
<android.net.LocalSocket: void shutdownOutput()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.util.SparseLongArray: int indexOfKey(int)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.hardware.Camera.Parameters: void setAntibanding(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.GLES30: void glGenSamplers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityForOriginationEnd(java.util.Date)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setIntegerPart(long)>:<public>:<android.text.style.TtsSpan.MoneyBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.graphics.Paint: boolean isElegantTextHeight()>:<public native>:<android.graphics.Paint>
<android.widget.ProgressBar: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment,float)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.content.CursorLoader: void onCanceled(android.database.Cursor)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.os.Debug.MemoryInfo: int getTotalSharedDirty()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.app.IntentService: void <init>(java.lang.String)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.nfc.tech.NfcBarcode: void <init>()>:<>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.view.ViewGroup: boolean addStatesFromChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.KeyEvent: boolean isNumLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES30: java.nio.Buffer glGetBufferPointerv(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ImageView: void setScaleType(android.widget.ImageView.ScaleType)>:<public>:<android.widget.ImageView:android.view.View>
<android.content.IntentFilter: boolean hasDataScheme(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.net.ProxyInfo: boolean equals(java.lang.Object)>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.view.ViewGroup: void dispatchDisplayHint(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>:<public final>:<android.view.animation.LayoutAnimationController>
<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>:<public>:<org.json.JSONObject>
<android.widget.ViewFlipper: boolean isAutoStart()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View)>:<public>:<android.app.AlertDialog.Builder>
<android.widget.ImageView: void <init>(android.content.Context)>:<public>:<android.widget.ImageView:android.view.View>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<android.system.Os: void execv(java.lang.String,java.lang.String[])>:<public static>:<android.system.Os>
<android.media.TimedMetaData: byte[] getMetaData()>:<public>:<android.media.TimedMetaData>
<android.media.session.PlaybackState.CustomAction: android.os.Bundle getExtras()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.database.sqlite.SQLiteQuery: void <init>()>:<>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.util.SparseLongArray: int indexOfValue(long)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.view.textservice.SuggestionsInfo[],int[],int[])>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.media.ExifInterface: byte[] getThumbnail()>:<public>:<android.media.ExifInterface>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChildCount()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.database.CursorWindow: boolean setNumColumns(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.Window: android.view.WindowManager getWindowManager()>:<public>:<android.view.Window>
<android.net.MailTo: android.net.MailTo parse(java.lang.String)>:<public static>:<android.net.MailTo>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.xmlpull.v1.XmlPullParserFactory: void setValidating(boolean)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumHeight()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.widget.RemoteViews: void <init>(java.lang.String,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.test.RenamingDelegatingContext: java.lang.String[] databaseList()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.ColorDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.assist.AssistStructure.ViewNode: boolean isActivated()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.style.SuperscriptSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.Rating: void <clinit>()>:<static>:<android.media.Rating:android.os.Parcelable>
<android.graphics.Path.Direction: void <clinit>()>:<static>:<android.graphics.Path.Direction:java.lang.Enum>
<android.media.MediaFormat: void setFloat(java.lang.String,float)>:<public final>:<android.media.MediaFormat>
<android.media.MediaDescription: java.lang.CharSequence getTitle()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.view.textservice.TextInfo: java.lang.CharSequence getCharSequence()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.content.Context: java.lang.String getPackageResourcePath()>:<public abstract>:<android.content.Context>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>:<protected>:<android.inputmethodservice.Keyboard>
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.Rect: boolean isEmpty()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.animation.ValueAnimator: void <init>()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.gesture.GestureOverlayView: int getGestureStrokeType()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType valueOf(java.lang.String)>:<public static>:<android.renderscript.RenderScript.ContextType:java.lang.Enum>
<android.test.AndroidTestCase: void setContext(android.content.Context)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewGroup: void removeViewInLayout(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.AlarmManager: void setTime(long)>:<public>:<android.app.AlarmManager>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>:<public>:<android.hardware.fingerprint.FingerprintManager.CryptoObject>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>:<public>:<android.graphics.Canvas>
<android.test.mock.MockResources: java.lang.String getResourcePackageName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.session.PlaybackState.CustomAction: void <init>()>:<>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.widget.ListView: void setItemsCanFocus(boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>:<public static>:<android.app.WallpaperManager>
<android.graphics.drawable.LayerDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.Layout: int getLineForOffset(int)>:<public>:<android.text.Layout>
<android.animation.ObjectAnimator: void setupEndValues()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.telephony.SignalStrength: int getEvdoSnr()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RemoteViews: int describeContents()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.Uri: java.lang.String getEncodedFragment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.nfc.NdefRecord: java.lang.String toString()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.media.AudioRecord: android.media.AudioFormat getFormat()>:<public>:<android.media.AudioRecord>
<android.media.JetPlayer: boolean closeJetFile()>:<public>:<android.media.JetPlayer>
<android.os.Parcel: void writeBooleanArray(boolean[])>:<public final>:<android.os.Parcel>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES20>
<android.telecom.Connection: android.telecom.CallAudioState getCallAudioState()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.widget.CalendarView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.gesture.GestureLibrary: java.util.ArrayList recognize(android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.media.tv.TvInputService.Session: void onTimeShiftResume()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.AnalogClock: void onDetachedFromWindow()>:<protected>:<android.widget.AnalogClock:android.view.View>
<junit.runner.BaseTestRunner: boolean inVAJava()>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.database.sqlite.SQLiteStatement: void <init>()>:<>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.HeterogeneousExpandableList: int getGroupTypeCount()>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.speech.tts.TextToSpeechService: java.lang.String onGetDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>:<public>:<android.graphics.Paint>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.graphics.BitmapRegionDecoder: void <init>()>:<>:<android.graphics.BitmapRegionDecoder>
<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.os.BaseBundle: long[] getLongArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>:<protected>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.util.AttributeSet: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>:<public abstract>:<android.util.AttributeSet>
<android.widget.Switch: int[] onCreateDrawableState(int)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.MediaController: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.widget.AdapterView.OnItemSelectedListener: void onNothingSelected(android.widget.AdapterView)>:<public abstract>:<android.widget.AdapterView.OnItemSelectedListener>
<android.system.Os: long mmap(long,long,int,int,java.io.FileDescriptor,long)>:<public static>:<android.system.Os>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>:<public>:<android.location.LocationManager>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(android.view.View)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.hardware.camera2.CaptureFailure: android.hardware.camera2.CaptureRequest getRequest()>:<public>:<android.hardware.camera2.CaptureFailure>
<android.service.dreams.DreamService: void onDetachedFromWindow()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>:<public>:<android.hardware.camera2.CameraCaptureSession.CaptureCallback>
<android.app.ActionBar: android.content.Context getThemedContext()>:<public>:<android.app.ActionBar>
<android.text.style.SuggestionSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.AsyncQueryHandler: void onUpdateComplete(int,java.lang.Object,int)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createReEnrollIntent()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.content.RestrictionsManager: void <init>()>:<>:<android.content.RestrictionsManager>
<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.GroupInfoListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>:<public static synchronized>:<android.bluetooth.BluetoothAdapter>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>:<public>:<android.app.ActivityManager>
<android.service.voice.VoiceInteractionSession.CommandRequest: void sendResult(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.CommandRequest:android.service.voice.VoiceInteractionSession.Request>
<android.app.ActivityManager.AppTask: void setExcludeFromRecents(boolean)>:<public>:<android.app.ActivityManager.AppTask>
<android.util.LruCache: int createCount()>:<public final synchronized>:<android.util.LruCache>
<android.test.SyncBaseInstrumentation: void <init>()>:<public>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.net.NetworkRequest: java.lang.String toString()>:<public>:<android.net.NetworkRequest:android.os.Parcelable>
<android.text.style.CharacterStyle: void updateDrawState(android.text.TextPaint)>:<public abstract>:<android.text.style.CharacterStyle>
<android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.speech.RecognitionListener: void onBeginningOfSpeech()>:<public abstract>:<android.speech.RecognitionListener>
<android.database.MergeCursor: void <init>(android.database.Cursor[])>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.media.AudioAttributes: void <clinit>()>:<static>:<android.media.AudioAttributes:android.os.Parcelable>
<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.media.MediaSync: void setAudioTrack(android.media.AudioTrack)>:<public>:<android.media.MediaSync>
<android.os.Debug: int setAllocationLimit(int)>:<public static>:<android.os.Debug>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: android.media.AudioFormat getCaptureAudioFormat()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.SubMenu: android.view.MenuItem getItem()>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.location.Criteria: void setPowerRequirement(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.media.ImageReader: void close()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.app.DialogFragment: void onCreate(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.system.Os: android.system.StructStat fstat(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.text.method.ScrollingMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.system.Os: int getegid()>:<public static>:<android.system.Os>
<android.os.PowerManager.WakeLock: void acquire()>:<public>:<android.os.PowerManager.WakeLock>
<android.view.WindowInsets: void <init>(android.view.WindowInsets)>:<public>:<android.view.WindowInsets>
<android.os.StrictMode.VmPolicy: java.lang.String toString()>:<public>:<android.os.StrictMode.VmPolicy>
<android.app.Fragment: android.content.Context getContext()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.preference.Preference: android.os.Bundle peekExtras()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>:<public>:<android.app.admin.DevicePolicyManager>
<android.service.notification.StatusBarNotification: void <init>(android.os.Parcel)>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.renderscript.Matrix4f: void loadOrthoWindow(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.media.AudioFormat: int getChannelCount()>:<public>:<android.media.AudioFormat>
<android.media.midi.MidiManager: void openDevice(android.media.midi.MidiDeviceInfo,android.media.midi.MidiManager.OnDeviceOpenedListener,android.os.Handler)>:<public>:<android.media.midi.MidiManager>
<android.text.Annotation: java.lang.String getKey()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.transition.ChangeScroll: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender clone()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.content.MutableContextWrapper: void <init>(android.content.Context)>:<public>:<android.content.MutableContextWrapper:android.content.ContextWrapper,android.content.Context>
<android.test.IsolatedContext: java.util.List getAndClearBroadcastIntents()>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public abstract>:<android.content.Context>
<android.view.animation.AnimationSet: java.util.List getAnimations()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.nfc.NfcManager: void <init>()>:<>:<android.nfc.NfcManager>
<android.graphics.drawable.ColorDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.test.mock.MockContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.MemoryFile: java.io.InputStream getInputStream()>:<public>:<android.os.MemoryFile>
<android.view.inputmethod.InputMethodSession: void updateSelection(int,int,int,int,int,int)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.telephony.CellIdentityGsm: java.lang.String toString()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.test.mock.MockContext: boolean isRestricted()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.Outline: void <init>()>:<public>:<android.graphics.Outline>
<android.test.ActivityTestCase: void scrubClass(java.lang.Class)>:<protected>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>:<public>:<android.content.res.Resources>
<android.widget.GridLayout.LayoutParams: void setGravity(int)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>:<public>:<android.net.UrlQuerySanitizer>
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.hardware.camera2.CaptureRequest.Builder: void set(android.hardware.camera2.CaptureRequest.Key,java.lang.Object)>:<public>:<android.hardware.camera2.CaptureRequest.Builder>
<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telephony.PhoneNumberUtils: boolean compare(android.content.Context,java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.accounts.AuthenticatorDescription: int hashCode()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.content.res.AssetFileDescriptor: int describeContents()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.service.carrier.CarrierMessagingService: void onSendTextSms(java.lang.String,int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewStructure: int getChildCount()>:<public abstract>:<android.view.ViewStructure>
<android.media.MediaDrm.KeyRequest: void <init>()>:<>:<android.media.MediaDrm.KeyRequest>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.view.InputDevice: void <init>()>:<>:<android.view.InputDevice:android.os.Parcelable>
<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)>:<public>:<android.util.MonthDisplayHelper>
<android.view.ViewDebug.ExportedProperty: boolean formatToHexString()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.view.animation.Animation: long getStartTime()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.WallpaperManager: int getDesiredMinimumHeight()>:<public>:<android.app.WallpaperManager>
<android.media.MediaCodecList: int getCodecCount()>:<public static final>:<android.media.MediaCodecList>
<android.test.mock.MockResources: java.lang.String[] getStringArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.os.Bundle: short getShort(java.lang.String,short)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.drm.DrmStore.RightsStatus: void <init>()>:<public>:<android.drm.DrmStore.RightsStatus>
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.test.IsolatedContext: android.content.ContentResolver getContentResolver()>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.content.ContextWrapper: java.io.File getNoBackupFilesDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.os.Parcelable.Creator: java.lang.Object[] newArray(int)>:<public abstract>:<android.os.Parcelable.Creator>
<android.view.View: int getMeasuredHeightAndState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: int getCompoundPaddingRight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telecom.Conference: void onHold()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.content.IntentSender: boolean equals(java.lang.Object)>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.media.MediaPlayer: void setOnTimedMetaDataAvailableListener(android.media.MediaPlayer.OnTimedMetaDataAvailableListener)>:<public>:<android.media.MediaPlayer>
<android.telephony.gsm.SmsMessage: void <init>()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.GridLayout: int getOrientation()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo getCollectionInfo()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.MediaPlayer: void seekTo(int)>:<public native>:<android.media.MediaPlayer>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>()>:<public>:<android.content.IntentFilter.MalformedMimeTypeException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.widget.AbsSpinner: void requestLayout()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView.OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>:<public abstract>:<android.widget.AbsListView.OnScrollListener>
<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.PointF: float length()>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setDigests(java.lang.String[])>:<public transient>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.widget.EditText: void setSelection(int,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: void sendAbortResult(android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.AbortVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.net.wifi.WifiEnterpriseConfig: void setAltSubjectMatch(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.telecom.PhoneAccount: void <clinit>()>:<static>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbDeviceConnection openDevice(android.hardware.usb.UsbDevice)>:<public>:<android.hardware.usb.UsbManager>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display)>:<public>:<android.app.Presentation:android.app.Dialog>
<android.view.View: void setKeepScreenOn(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.ActivityManager.RunningTaskInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>:<public>:<android.media.AudioTrack>
<android.widget.Switch: void setThumbResource(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.content.pm.ConfigurationInfo: java.lang.String toString()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void ZSYMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<junit.runner.BaseTestRunner: void endTest(junit.framework.Test)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.text.method.KeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>:<public abstract>:<android.text.method.KeyListener>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.accessibility.AccessibilityEventSource>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.media.session.MediaController.Callback: void <init>()>:<public>:<android.media.session.MediaController.Callback>
<android.widget.ProgressBar: android.content.res.ColorStateList getIndeterminateTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.Surface: int describeContents()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>:<public static>:<android.text.format.DateFormat>
<android.print.PrinterCapabilitiesInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.media.AudioTrack: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int,int)>:<public>:<android.media.AudioTrack>
<android.widget.ImageView: boolean getBaselineAlignBottom()>:<public>:<android.widget.ImageView:android.view.View>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int,java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.OrientationListener: void disable()>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.app.LocalActivityManager: void dispatchPause(boolean)>:<public>:<android.app.LocalActivityManager>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>:<public>:<android.view.ViewConfiguration>
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>:<public static>:<android.text.format.DateFormat>
<android.transition.Slide: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>:<public abstract>:<android.view.ViewParent>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setZ(int,int)>:<public>:<android.renderscript.Script.LaunchOptions>
<android.inputmethodservice.ExtractEditText: boolean isFocused()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.widget.Gallery: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.os.Trace: void beginSection(java.lang.String)>:<public static>:<android.os.Trace>
<android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>:<public static>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.text.util.Rfc822Token: void setAddress(java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.view.WindowManager.BadTokenException: void <init>(java.lang.String)>:<public>:<android.view.WindowManager.BadTokenException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.content.pm.PackageInstaller: void uninstall(java.lang.String,android.content.IntentSender)>:<public>:<android.content.pm.PackageInstaller>
<android.bluetooth.le.ScanResult: int hashCode()>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator xBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES20>
<android.widget.Switch: java.lang.CharSequence getTextOn()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.net.TrafficStats: void incrementOperationCount(int)>:<public static>:<android.net.TrafficStats>
<android.opengl.GLES10: void glScalef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.text.BidiFormatter: boolean isRtlContext()>:<public>:<android.text.BidiFormatter>
<android.nfc.tech.NfcB: void <init>()>:<>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.database.MergeCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<org.json.JSONObject: boolean isNull(java.lang.String)>:<public>:<org.json.JSONObject>
<android.service.dreams.DreamService: boolean isScreenBright()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.test.mock.MockContext: java.lang.ClassLoader getClassLoader()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.widget.PopupWindow: boolean isFocusable()>:<public>:<android.widget.PopupWindow>
<android.graphics.Matrix: void setValues(float[])>:<public>:<android.graphics.Matrix>
<android.speech.tts.TextToSpeech: boolean isSpeaking()>:<public>:<android.speech.tts.TextToSpeech>
<android.util.ArrayMap: boolean isEmpty()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.content.OperationApplicationException: void <init>(int)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.os.Handler: boolean hasMessages(int)>:<public final>:<android.os.Handler>
<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.View: android.view.ViewOutlineProvider getOutlineProvider()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setMatrix(android.graphics.Matrix)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.mock.MockContext: boolean stopService(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.opengl.GLES30: void glDeleteQueries(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.RecoverySystem.ProgressListener: void onProgress(int)>:<public abstract>:<android.os.RecoverySystem.ProgressListener>
<android.app.Service: void stopSelf()>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.database.MatrixCursor: long getLong(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>:<public final>:<android.content.ContentResolver>
<android.widget.Gallery: boolean onDown(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.renderscript.ScriptIntrinsicBLAS: void ZTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: int getDefaultSize(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ClipData.Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>:<public>:<android.content.ClipData.Item>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setLeft(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.ContentProviderClient: boolean release()>:<public>:<android.content.ContentProviderClient>
<android.text.util.Linkify: void <init>()>:<public>:<android.text.util.Linkify>
<android.telephony.TelephonyManager: int getDataActivity()>:<public>:<android.telephony.TelephonyManager>
<android.os.Parcel: void writeSerializable(java.io.Serializable)>:<public final>:<android.os.Parcel>
<android.widget.PopupWindow: void dismiss()>:<public>:<android.widget.PopupWindow>
<android.os.Debug: void resetThreadGcInvocationCount()>:<public static>:<android.os.Debug>
<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.system.Os: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)>:<public static>:<android.system.Os>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.View.AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>:<public>:<android.view.View.AccessibilityDelegate>
<android.app.Instrumentation: void endPerformanceSnapshot()>:<public>:<android.app.Instrumentation>
<android.bluetooth.le.ScanFilter: byte[] getServiceDataMask()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.view.Window>
<android.view.Window: void restoreHierarchyState(android.os.Bundle)>:<public abstract>:<android.view.Window>
<android.transition.CircularPropagation: void <init>()>:<public>:<android.transition.CircularPropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeRequired()>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.app.WallpaperManager>
<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.view.ViewGroup: void dispatchDrawableHotspotChanged(float,float)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.media.tv.TvView: void setCaptionEnabled(boolean)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setX(int,int)>:<public>:<android.renderscript.Script.LaunchOptions>
<android.preference.MultiSelectListPreference: java.util.Set getValues()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.net.TrafficStats: long getTotalRxPackets()>:<public static>:<android.net.TrafficStats>
<android.webkit.WebChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)>:<public>:<android.webkit.WebChromeClient>
<android.text.TextUtils.SimpleStringSplitter: java.util.Iterator iterator()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDropBox()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onMediaScannerConnected()>:<public abstract>:<android.media.MediaScannerConnection.MediaScannerConnectionClient:android.media.MediaScannerConnection.OnScanCompletedListener>
<android.content.DialogInterface.OnClickListener: void onClick(android.content.DialogInterface,int)>:<public abstract>:<android.content.DialogInterface.OnClickListener>
<android.speech.tts.TextToSpeech: void shutdown()>:<public>:<android.speech.tts.TextToSpeech>
<android.speech.tts.SynthesisCallback: boolean hasStarted()>:<public abstract>:<android.speech.tts.SynthesisCallback>
<android.text.StaticLayout: int getBottomPadding()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.method.ReplacementTransformationMethod: char[] getReplacement()>:<protected abstract>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle)>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.app.Service: boolean onUnbind(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.graphics.Canvas.EdgeType: void <clinit>()>:<static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.nfc.tech.MifareClassic: int getMaxTransceiveLength()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.app.ListActivity: void onDestroy()>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.ViewConfiguration: int getScaledEdgeSlop()>:<public>:<android.view.ViewConfiguration>
<android.graphics.drawable.PaintDrawable: void <init>()>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.inputmethodservice.InputMethodService: void onCreate()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.ActivityInfo: int describeContents()>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.gesture.GestureStore: void addGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.location.Location: void <clinit>()>:<static>:<android.location.Location:android.os.Parcelable>
<android.media.MediaCodec: android.media.MediaCodec createEncoderByType(java.lang.String)>:<public static>:<android.media.MediaCodec>
<android.graphics.drawable.LayerDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.util.SparseBooleanArray: int size()>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.widget.TextView: android.text.TextPaint getPaint()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TabWidget: void removeAllViews()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.telecom.Call.Callback: void onConferenceableCallsChanged(android.telecom.Call,java.util.List)>:<public>:<android.telecom.Call.Callback>
<android.content.ComponentName: android.content.ComponentName clone()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.test.suitebuilder.TestMethod: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.suitebuilder.TestMethod>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.net.Uri: java.lang.String getUserInfo()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.nfc.cardemulation.HostApduService: void <init>()>:<public>:<android.nfc.cardemulation.HostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.admin.DevicePolicyManager: int enableSystemApp(android.content.ComponentName,android.content.Intent)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.Gravity: boolean isHorizontal(int)>:<public static>:<android.view.Gravity>
<android.app.admin.DevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.graphics.drawable.AnimationDrawable: void run()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.telephony.CellSignalStrengthWcdma: void <clinit>()>:<static>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.content.Loader: void startLoading()>:<public final>:<android.content.Loader>
<android.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)>:<public abstract>:<android.app.FragmentManager>
<android.widget.AbsListView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.media.MediaRouter.RouteGroup: void setIconDrawable(android.graphics.drawable.Drawable)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.preference.SwitchPreference: void setSwitchTextOff(int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.gesture.GestureOverlayView: void removeAllOnGestureListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera.AutoFocusMoveCallback)>:<public>:<android.hardware.Camera>
<android.util.AtomicFile: byte[] readFully()>:<public>:<android.util.AtomicFile>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>(java.lang.String)>:<public>:<android.graphics.SurfaceTexture.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>:<public>:<android.content.Context>
<android.print.PrintAttributes.Margins: int getRightMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.view.MotionEvent: void finalize()>:<protected>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.renderscript.Allocation: void copy3DRangeTo(int,int,int,int,int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.shapes.RectShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.widget.ViewAnimator: void removeViewAt(int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,int[],int,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.MenuItem: android.view.MenuItem setIcon(int)>:<public abstract>:<android.view.MenuItem>
<junit.runner.BaseTestRunner: boolean useReloadingTestSuiteLoader()>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.renderscript.RenderScript: android.renderscript.RenderScript createMultiContext(android.content.Context,android.renderscript.RenderScript.ContextType,int,int)>:<public static>:<android.renderscript.RenderScript>
<android.widget.ZoomButton: void setZoomSpeed(long)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.bluetooth.BluetoothManager: void <init>()>:<>:<android.bluetooth.BluetoothManager>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.ColorDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.List,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public static>:<android.accounts.AccountManager>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onAvailabilityChanged(int)>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver>
<android.hardware.Camera.Parameters: void removeGpsData()>:<public>:<android.hardware.Camera.Parameters>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onScanCompleted(java.lang.String,android.net.Uri)>:<public abstract>:<android.media.MediaScannerConnection.MediaScannerConnectionClient:android.media.MediaScannerConnection.OnScanCompletedListener>
<android.app.Fragment: void onHiddenChanged(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.TabActivity: void <init>()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)>:<public>:<android.media.session.MediaSession>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidths()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.net.sip.SipAudioCall: boolean isOnHold()>:<public>:<android.net.sip.SipAudioCall>
<android.widget.TextView: int getTotalPaddingEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Intent: boolean hasFileDescriptors()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(int)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.view.inputmethod.InputMethodSubtype: int getIconResId()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.graphics.Region.Op: android.graphics.Region.Op[] values()>:<public static>:<android.graphics.Region.Op:java.lang.Enum>
<android.graphics.drawable.ColorDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.hardware.Camera.Size: int hashCode()>:<public>:<android.hardware.Camera.Size>
<android.view.Window: int getStatusBarColor()>:<public abstract>:<android.view.Window>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.mtp.MtpDevice: boolean open(android.hardware.usb.UsbDeviceConnection)>:<public>:<android.mtp.MtpDevice>
<android.printservice.PrintJob: boolean complete()>:<public>:<android.printservice.PrintJob>
<android.media.MediaRouter.RouteInfo: java.lang.String toString()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.provider.Settings.System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>:<public>:<android.accounts.AccountManager>
<android.net.IpPrefix: boolean contains(java.net.InetAddress)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.bluetooth.BluetoothHealth: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.widget.BaseExpandableListAdapter: int getGroupType(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.session.MediaSession.QueueItem: void <clinit>()>:<static>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.app.Activity: void onPostCreate(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.accessibility.AccessibilityWindowInfo: int describeContents()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.app.Notification.Action: android.graphics.drawable.Icon getIcon()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.app.FragmentTransaction: int commitAllowingStateLoss()>:<public abstract>:<android.app.FragmentTransaction>
<android.app.Activity: boolean hasWindowFocus()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.TrafficStats: long getTotalTxPackets()>:<public static>:<android.net.TrafficStats>
<android.view.SurfaceView: void onWindowVisibilityChanged(int)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.view.View: void onFinishInflate()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.IntArrayEvaluator: void <init>(int[])>:<public>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.widget.ViewFlipper: void setFlipInterval(int)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine: void onDestroy()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>:<public>:<android.os.BaseBundle>
<android.text.TextUtils: boolean isGraphic(char)>:<public static>:<android.text.TextUtils>
<android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>:<public static>:<android.util.Pair>
<android.view.View: void setNextFocusRightId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: void setLinksClickable(boolean)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Activity: void onAttachedToWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.ClipboardManager: void addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.widget.SimpleCursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.graphics.Paint: void setStrokeMiter(float)>:<public native>:<android.graphics.Paint>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result valueOf(java.lang.String)>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.graphics.Region: void <init>(int,int,int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.test.mock.MockContext: java.io.File getExternalFilesDir(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.security.keystore.KeyProtection: boolean isDigestsSpecified()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.os.Parcel: void writeByteArray(byte[])>:<public final>:<android.os.Parcel>
<android.widget.AbsListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.suitebuilder.TestSuiteBuilder: void <init>(java.lang.String,java.lang.ClassLoader)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<android.os.Looper: android.os.Looper myLooper()>:<public static>:<android.os.Looper>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.system.Os: void execve(java.lang.String,java.lang.String[],java.lang.String[])>:<public static>:<android.system.Os>
<android.bluetooth.BluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.telecom.RemoteConnection.Callback: void onVideoProviderChanged(android.telecom.RemoteConnection,android.telecom.RemoteConnection.VideoProvider)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.graphics.drawable.shapes.PathShape: void <init>(android.graphics.Path,float,float)>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.net.LocalSocketAddress: void <init>(java.lang.String)>:<public>:<android.net.LocalSocketAddress>
<android.telecom.Connection: android.telecom.StatusHints getStatusHints()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.webkit.WebSettings: int getMixedContentMode()>:<public abstract>:<android.webkit.WebSettings>
<android.text.method.LinkMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.graphics.Rasterizer: void <init>()>:<public>:<android.graphics.Rasterizer>
<android.printservice.PrintJob: boolean block(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.graphics.drawable.AnimatedVectorDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.webkit.WebChromeClient.FileChooserParams: android.net.Uri[] parseResult(int,android.content.Intent)>:<public static>:<android.webkit.WebChromeClient.FileChooserParams>
<android.net.LocalSocket: void <init>(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.preference.Preference: boolean getPersistedBoolean(boolean)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.content.Intent: void setClipData(android.content.ClipData)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.WebView: void setFindListener(android.webkit.WebView.FindListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.webkit.WebView: java.lang.String getTitle()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES10: void glCullFace(int)>:<public static native>:<android.opengl.GLES10>
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.bluetooth.BluetoothGatt: boolean beginReliableWrite()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.view.LayoutInflater: void <init>(android.content.Context)>:<protected>:<android.view.LayoutInflater>
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.media.MediaRouter.SimpleCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.renderscript.RenderScript: void sendMessage(int,int[])>:<public>:<android.renderscript.RenderScript>
<android.net.sip.SipAudioCall.Listener: void onReadyToCall(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.media.MediaActionSound: void play(int)>:<public synchronized>:<android.media.MediaActionSound>
<android.media.SoundPool: void autoPause()>:<public final native>:<android.media.SoundPool>
<android.system.StructPollfd: void <init>()>:<public>:<android.system.StructPollfd>
<android.media.ImageReader: int getMaxImages()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<junit.runner.TestSuiteLoader: java.lang.Class reload(java.lang.Class)>:<public abstract>:<junit.runner.TestSuiteLoader>
<android.graphics.Matrix: boolean preSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.widget.AbsListView: void setOverScrollMode(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.PopupMenu: void setOnDismissListener(android.widget.PopupMenu.OnDismissListener)>:<public>:<android.widget.PopupMenu>
<android.net.LinkProperties: java.util.List getRoutes()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.test.mock.MockPackageManager: void removePackageFromPreferred(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.app.Fragment: void onTrimMemory(int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.MutableLong: void <init>(long)>:<public>:<android.util.MutableLong>
<android.provider.ContactsContract.StatusUpdates: int getPresencePrecedence(int)>:<public static final>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.printservice.PrintJob: boolean fail(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.app.job.JobParameters: int describeContents()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>:<public>:<android.view.VelocityTracker>
<android.media.MediaRouter.UserRouteInfo: void setRemoteControlClient(android.media.RemoteControlClient)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.app.AlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock()>:<public>:<android.app.AlarmManager>
<android.nfc.tech.TagTechnology: void close()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoAvailable()>:<public>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.graphics.drawable.ScaleDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.media.effect.EffectContext: android.media.effect.EffectContext createWithCurrentGlContext()>:<public static>:<android.media.effect.EffectContext>
<android.media.audiofx.Equalizer: short getNumberOfBands()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.media.audiofx.PresetReverb: void setPreset(short)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.opengl.GLES20: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES20>
<android.location.Location: double getLongitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)>:<public static>:<android.transition.TransitionManager>
<android.widget.ResourceCursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setShortDescription(java.lang.CharSequence)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>:<public static>:<android.content.ContentResolver>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telecom.StatusHints: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.test.MoreAsserts: void assertNotEqual(java.lang.Object,java.lang.Object)>:<public static>:<android.test.MoreAsserts>
<android.transition.Scene: android.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)>:<public static>:<android.transition.Scene>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.telecom.Conference: void setStatusHints(android.telecom.StatusHints)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.media.audiofx.Equalizer: short getBand(int)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.graphics.PointF: void offset(float,float)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>:<public abstract>:<android.content.Context>
<android.widget.TabWidget: void focusCurrentTab(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.midi.MidiSender: void onConnect(android.media.midi.MidiReceiver)>:<public abstract>:<android.media.midi.MidiSender>
<android.widget.HorizontalScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES10>
<android.widget.AdapterViewAnimator: void onRemoteAdapterDisconnected()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.Context: android.graphics.drawable.Drawable peekWallpaper()>:<public abstract>:<android.content.Context>
<android.util.SparseIntArray: int get(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.content.Intent.FilterComparison: boolean equals(java.lang.Object)>:<public>:<android.content.Intent.FilterComparison>
<android.opengl.EGL14: boolean eglCopyBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.opengl.GLES30: void glUniform1uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hardware.camera2.CaptureRequest.Key: int hashCode()>:<public final>:<android.hardware.camera2.CaptureRequest.Key>
<android.bluetooth.BluetoothGattServer: void cancelConnection(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.telecom.StatusHints: int hashCode()>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.text.style.LocaleSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.ActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>:<public abstract>:<android.app.ActionBar>
<android.media.tv.TvInputService.Session: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<org.json.JSONArray: org.json.JSONArray optJSONArray(int)>:<public>:<org.json.JSONArray>
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.DialogInterface.OnShowListener: void onShow(android.content.DialogInterface)>:<public abstract>:<android.content.DialogInterface.OnShowListener>
<android.util.AttributeSet: int getAttributeResourceValue(int,int)>:<public abstract>:<android.util.AttributeSet>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.StrictMode: void setVmPolicy(android.os.StrictMode.VmPolicy)>:<public static>:<android.os.StrictMode>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo build()>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.widget.CheckedTextView: void drawableStateChanged()>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.usage.ConfigurationStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.transition.Visibility: boolean isTransitionRequired(android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.widget.CursorTreeAdapter: void onGroupCollapsed(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.View: android.view.ViewGroup.LayoutParams getLayoutParams()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.view.accessibility.AccessibilityWindowInfo: boolean equals(java.lang.Object)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.provider.Contacts.Phones: void <clinit>()>:<static>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.view.animation.Transformation: void <init>()>:<public>:<android.view.animation.Transformation>
<android.widget.StackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Animatable: void start()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.media.MediaExtractor: boolean hasCacheReachedEndOfStream()>:<public native>:<android.media.MediaExtractor>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.app.Dialog: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.util.LruCache: java.util.Map snapshot()>:<public final synchronized>:<android.util.LruCache>
<android.media.AudioTrack: int getPositionNotificationPeriod()>:<public>:<android.media.AudioTrack>
<com.android.internal.util.Predicate: boolean apply(java.lang.Object)>:<public abstract>:<com.android.internal.util.Predicate>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>:<public>:<android.app.RemoteInput.Builder>
<android.service.notification.NotificationListenerService: void cancelNotifications(java.lang.String[])>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.ImageReader: void finalize()>:<protected>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>:<public>:<android.content.res.Resources>
<android.net.CaptivePortal: void <clinit>()>:<static>:<android.net.CaptivePortal:android.os.Parcelable>
<android.database.CrossProcessCursorWrapper: boolean onMove(int,int)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.media.AudioFormat.Builder: android.media.AudioFormat build()>:<public>:<android.media.AudioFormat.Builder>
<android.provider.Contacts.People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.database.CursorWrapper: boolean requery()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.telephony.CellIdentityCdma: int getLatitude()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult: int getSendStatus()>:<public>:<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult>
<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>:<public>:<android.util.AtomicFile>
<android.widget.ZoomButtonsController: void setFocusable(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>:<public static>:<android.media.RingtoneManager>
<android.widget.MediaController.MediaPlayerControl: void pause()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.Int2: void <init>()>:<public>:<android.renderscript.Int2>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.provider.Telephony.Sms.Outbox: void <init>()>:<>:<android.provider.Telephony.Sms.Outbox:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.preference.PreferenceActivity: void <init>()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: void setFromDegrees(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.telephony.gsm.GsmCellLocation: void <init>(android.os.Bundle)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.test.mock.MockCursor: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine: void onApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.Toast: android.view.View getView()>:<public>:<android.widget.Toast>
<android.content.res.Resources: boolean getBoolean(int)>:<public>:<android.content.res.Resources>
<android.view.View: boolean isSaveEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RatingBar: float getStepSize()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View: void setTop(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.nfc.NdefRecord: int hashCode()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.text.style.TtsSpan.VerbatimBuilder: android.text.style.TtsSpan.VerbatimBuilder setVerbatim(java.lang.String)>:<public>:<android.text.style.TtsSpan.VerbatimBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceName()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.view.ViewParent: void requestLayout()>:<public abstract>:<android.view.ViewParent>
<android.os.WorkSource: int hashCode()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.text.TextDirectionHeuristics: void <clinit>()>:<static>:<android.text.TextDirectionHeuristics>
<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.os.Binder: void joinThreadPool()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.media.MediaDescription: java.lang.String getMediaId()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.speech.tts.TextToSpeechService: int onLoadVoice(java.lang.String)>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeIconResId(int)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.media.FaceDetector: int findFaces(android.graphics.Bitmap,android.media.FaceDetector.Face[])>:<public>:<android.media.FaceDetector>
<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.content.Loader: void stopLoading()>:<public>:<android.content.Loader>
<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.hardware.Camera.Parameters: void setGpsLongitude(double)>:<public>:<android.hardware.Camera.Parameters>
<android.app.WallpaperManager: boolean hasResourceWallpaper(int)>:<public>:<android.app.WallpaperManager>
<android.animation.ObjectAnimator: java.lang.Object clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.location.Location: void setExtras(android.os.Bundle)>:<public>:<android.location.Location:android.os.Parcelable>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverRoaming(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.test.ServiceTestCase: void testServiceTestCaseSetUpProperly()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getStatus()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.webkit.WebResourceError: int getErrorCode()>:<public abstract>:<android.webkit.WebResourceError>
<junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.content.Intent.ShortcutIconResource: java.lang.String toString()>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.webkit.WebView: void onProvideVirtualStructure(android.view.ViewStructure)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.TextView: void setError(java.lang.CharSequence)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaRouter.RouteGroup: int getRouteCount()>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.content.Intent: boolean hasExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.nfc.NdefRecord: byte[] getPayload()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.hardware.Camera.Parameters: void setJpegQuality(int)>:<public>:<android.hardware.Camera.Parameters>
<android.content.ClipData: void <init>(android.content.ClipDescription,android.content.ClipData.Item)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.view.ScaleGestureDetector: boolean isStylusScaleEnabled()>:<public>:<android.view.ScaleGestureDetector>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteCategory getCategory()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.gesture.GestureOverlayView: boolean isEventsInterceptionEnabled()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.method.TimeKeyListener: void <init>()>:<public>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.text.SpannableStringInternal: char charAt(int)>:<public final>:<android.text.SpannableStringInternal>
<android.graphics.drawable.AnimationDrawable: boolean isRunning()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.view.View: android.view.Display getDisplay()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Bitmap: void setHeight(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.carrier.CarrierMessagingService.SendMmsResult: void <init>(int,byte[])>:<public>:<android.service.carrier.CarrierMessagingService.SendMmsResult>
<android.view.ActionProvider: void <init>(android.content.Context)>:<public>:<android.view.ActionProvider>
<android.app.Fragment: void onAttach(android.content.Context)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setY(int,int)>:<public>:<android.renderscript.Script.LaunchOptions>
<android.telephony.CellInfo: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellInfo:android.os.Parcelable>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.AbsListView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.widget.ZoomButton: void <init>(android.content.Context)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.content.pm.ApplicationInfo.DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>:<public final>:<android.content.pm.ApplicationInfo.DisplayNameComparator:java.util.Comparator>
<android.net.sip.SipAudioCall.Listener: void onRingingBack(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.media.session.PlaybackState.CustomAction: int describeContents()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothDevice: java.lang.String getName()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.media.AudioManager: void stopBluetoothSco()>:<public>:<android.media.AudioManager>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.textservice.SpellCheckerSession: void cancel()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.os.TokenWatcher: void dump(java.io.PrintWriter)>:<public>:<android.os.TokenWatcher>
<android.opengl.GLES10: void glDisableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.mtp.MtpDevice: boolean importFile(int,java.lang.String)>:<public>:<android.mtp.MtpDevice>
<android.text.Layout: int getEllipsizedWidth()>:<public>:<android.text.Layout>
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable.ShaderFactory)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsKeypadSupported()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.app.VoiceInteractor.PickOptionRequest.Option: android.os.Bundle getExtras()>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.accounts.Account: int hashCode()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.drm.DrmUtils: android.drm.DrmUtils.ExtendedMetadataParser getExtendedMetadataParser(byte[])>:<public static>:<android.drm.DrmUtils>
<android.telecom.PhoneAccount: void <init>()>:<>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.media.AudioAttributes.Builder: void <init>()>:<public>:<android.media.AudioAttributes.Builder>
<android.widget.TextView: void setLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.widget.ImageView: void setVisibility(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.app.assist.AssistStructure: android.content.ComponentName getActivityComponent()>:<public>:<android.app.assist.AssistStructure:android.os.Parcelable>
<android.os.RecoverySystem: void <init>()>:<>:<android.os.RecoverySystem>
<android.view.ViewTreeObserver: void removeOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>:<public>:<android.view.ViewTreeObserver>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>:<public>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.database.AbstractWindowedCursor: int getType(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.media.Rating: java.lang.String toString()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.view.View: boolean hasTransientState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstIn()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.BaseExpandableListAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.view.View: int computeVerticalScrollOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)>:<public static>:<android.provider.UserDictionary.Words:android.provider.BaseColumns>
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)>:<public>:<android.drm.DrmManagerClient>
<android.graphics.drawable.ColorDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.text.Layout.Alignment: android.text.Layout.Alignment valueOf(java.lang.String)>:<public static>:<android.text.Layout.Alignment:java.lang.Enum>
<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.view.ViewGroup: void debug(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)>:<public static>:<android.provider.DocumentsContract>
<android.app.ActionBar.TabListener: void onTabSelected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.opengl.GLES31: void glValidateProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Shader: void finalize()>:<protected>:<android.graphics.Shader>
<android.hardware.usb.UsbInterface: int describeContents()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.view.MotionEvent: float getToolMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.audiofx.Virtualizer.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.mtp.MtpObjectInfo: int getObjectHandle()>:<public final>:<android.mtp.MtpObjectInfo>
<android.content.ContentResolver: void cancelSync(android.net.Uri)>:<public>:<android.content.ContentResolver>
<android.webkit.WebSettings: boolean getJavaScriptEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.drm.DrmSupportInfo: void addFileSuffix(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<android.view.animation.AnticipateOvershootInterpolator: void <init>()>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.BaseInterpolator>
<android.telephony.SubscriptionInfo: void <init>()>:<>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.telephony.CellIdentityCdma: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.PopupWindow: void setOutsideTouchable(boolean)>:<public>:<android.widget.PopupWindow>
<android.provider.Telephony.Carriers: void <clinit>()>:<static>:<android.provider.Telephony.Carriers:android.provider.BaseColumns>
<android.content.DialogInterface.OnCancelListener: void onCancel(android.content.DialogInterface)>:<public abstract>:<android.content.DialogInterface.OnCancelListener>
<android.widget.ProgressBar: void setProgressTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Shader>
<android.provider.ContactsContract.CommonDataKinds.Photo: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Photo:android.provider.ContactsContract.DataColumnsWithJoins>
<android.database.DatabaseUtils.InsertHelper: void close()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.telecom.Connection.VideoProvider: void onSetPreviewSurface(android.view.Surface)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.util.SparseBooleanArray: int indexOfKey(int)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.media.browse.MediaBrowser: void connect()>:<public>:<android.media.browse.MediaBrowser>
<android.opengl.GLES31: void glProgramUniform3ui(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.TextView: void endBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.database.sqlite.SQLiteAbortException: void <init>()>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.NotificationManager.Policy: void <clinit>()>:<static>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.text.style.ImageSpan: void <init>(android.content.Context,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setConfirmLabel(java.lang.CharSequence)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.graphics.drawable.NinePatchDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>:<public>:<android.content.res.Resources.Theme>
<android.view.View: void setBackgroundColor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public>:<android.graphics.BitmapRegionDecoder>
<android.net.VpnService.Builder: android.net.VpnService.Builder setUnderlyingNetworks(android.net.Network[])>:<public>:<android.net.VpnService.Builder>
<android.view.inputmethod.InputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.InputEvent: long getEventTime()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.transition.Transition: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.nfc.NfcAdapter.ReaderCallback: void onTagDiscovered(android.nfc.Tag)>:<public abstract>:<android.nfc.NfcAdapter.ReaderCallback>
<android.text.style.TtsSpan.MeasureBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence)>:<public>:<android.widget.TabHost.TabSpec>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.telephony.CellInfoWcdma: android.telephony.CellSignalStrengthWcdma getCellSignalStrength()>:<public>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.nfc.NdefRecord: void <init>(byte[])>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.view.animation.AnimationSet: void setRepeatMode(int)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceData(android.os.ParcelUuid,byte[])>:<public>:<android.bluetooth.le.AdvertiseData.Builder>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.NumberPicker: float getBottomFadingEdgeStrength()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter.UserRouteInfo: void setIconResource(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.webkit.CookieManager: boolean allowFileSchemeCookies()>:<public static>:<android.webkit.CookieManager>
<android.media.AudioManager: void unloadSoundEffects()>:<public>:<android.media.AudioManager>
<android.location.SettingInjectorService: boolean onGetEnabled()>:<protected abstract>:<android.location.SettingInjectorService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Chronometer: void setBase(long)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.media.midi.MidiReceiver: void onSend(byte[],int,int,long)>:<public abstract>:<android.media.midi.MidiReceiver>
<android.util.SparseIntArray: int keyAt(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.text.StaticLayout: int getLineDescent(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>:<public synchronized>:<junit.framework.TestResult>
<android.hardware.camera2.CaptureResult: void <clinit>()>:<static>:<android.hardware.camera2.CaptureResult:android.hardware.camera2.CameraMetadata>
<android.hardware.camera2.params.ColorSpaceTransform: int hashCode()>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<org.json.JSONArray: double getDouble(int)>:<public>:<org.json.JSONArray>
<android.provider.ContactsContract.CommonDataKinds.StructuredName: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.StructuredName:android.provider.ContactsContract.DataColumnsWithJoins>
<org.json.JSONTokener: java.lang.String next(int)>:<public>:<org.json.JSONTokener>
<android.telecom.RemoteConnection.VideoProvider.Callback: void <init>()>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.content.Intent: android.content.Intent addFlags(int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.transition.Explode: void <init>()>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer.Page openPage(int)>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.gesture.GestureOverlayView: void setGestureVisible(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockCursor: boolean isBeforeFirst()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.database.DatabaseUtils.InsertHelper: void bind(int,byte[])>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.content.Context: java.io.File getNoBackupFilesDir()>:<public abstract>:<android.content.Context>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putLong(java.lang.String,long)>:<public>:<android.media.MediaMetadata.Builder>
<android.content.res.ObbInfo: void <init>()>:<>:<android.content.res.ObbInfo:android.os.Parcelable>
<org.xmlpull.v1.sax2.Driver: void setEntityResolver(org.xml.sax.EntityResolver)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.transition.ChangeBounds: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.os.StrictMode.ThreadPolicy.Builder: void <init>()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.app.RemoteInput: java.lang.String getResultKey()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.Application: void registerComponentCallbacks(android.content.ComponentCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.widget.ListView: void smoothScrollByOffset(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Parcelable: int describeContents()>:<public abstract>:<android.os.Parcelable>
<android.location.LocationListener: void onLocationChanged(android.location.Location)>:<public abstract>:<android.location.LocationListener>
<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.os.StatFs: int getBlockSize()>:<public>:<android.os.StatFs>
<android.view.InputDevice.MotionRange: boolean isFromSource(int)>:<public>:<android.view.InputDevice.MotionRange>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.framework.Assert: java.lang.String format(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.graphics.drawable.ShapeDrawable: int getAlpha()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>:<public>:<android.view.LayoutInflater>
<android.os.BaseBundle: void putInt(java.lang.String,int)>:<public>:<android.os.BaseBundle>
<android.hardware.Camera.Parameters: void set(java.lang.String,int)>:<public>:<android.hardware.Camera.Parameters>
<android.net.Uri.Builder: android.net.Uri.Builder clearQuery()>:<public>:<android.net.Uri.Builder>
<android.view.KeyEvent: boolean isTracking()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)>:<public>:<android.animation.LayoutTransition>
<android.preference.Preference: int getOrder()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.preference.Preference: void onParentChanged(android.preference.Preference,boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.Camera: void rotateZ(float)>:<public native>:<android.graphics.Camera>
<android.service.voice.VoiceInteractionService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.PermissionGroupInfo: int describeContents()>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.hardware.camera2.params.LensShadingMap: int getRowCount()>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.FragmentTransaction: android.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<junit.runner.BaseTestRunner: boolean showStackRaw()>:<protected static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.Switch: void setTextOn(java.lang.CharSequence)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.Activity: void removeDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.drawable.VectorDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.app.FragmentContainer: android.view.View onFindViewById(int)>:<public abstract>:<android.app.FragmentContainer>
<android.view.Window: android.view.WindowManager.LayoutParams getAttributes()>:<public final>:<android.view.Window>
<android.location.GpsStatus: void <init>()>:<>:<android.location.GpsStatus>
<android.widget.PopupMenu: void show()>:<public>:<android.widget.PopupMenu>
<android.webkit.WebStorage: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIntentAvailableOffline(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance()>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.test.mock.MockContext: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.StaticLayout: int getParagraphDirection(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.preference.DialogPreference: void onActivityDestroy()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.ScaleGestureDetector: boolean isInProgress()>:<public>:<android.view.ScaleGestureDetector>
<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter.ViewBinder getViewBinder()>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.widget.TextView: android.view.ActionMode.Callback getCustomSelectionActionModeCallback()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.animation.Animation.AnimationListener: void onAnimationRepeat(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>:<public>:<android.media.MediaMetadataRetriever>
<android.view.View: boolean requestFocus()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONTokener: java.lang.String nextTo(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>:<public>:<android.net.wifi.WifiManager>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>:<public static>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.util.EventLog: java.lang.String getTagName(int)>:<public static>:<android.util.EventLog>
<android.view.View: int getSuggestedMinimumHeight()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebView: void findNext(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.ParcelFileDescriptor: long getStatSize()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb.Settings getProperties()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.TextView: java.lang.CharSequence getError()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.AndroidTestRunner: void testFailed(int,junit.framework.Test,java.lang.Throwable)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>:<public static>:<android.app.Instrumentation>
<android.telecom.VideoProfile: void <clinit>()>:<static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.transition.Explode: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.location.Location: void removeSpeed()>:<public>:<android.location.Location:android.os.Parcelable>
<android.app.ActionBar: void hide()>:<public abstract>:<android.app.ActionBar>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRangesFor(android.util.Size)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.util.LongSparseArray: java.lang.Object clone()>:<public volatile>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>:<public final>:<android.os.Parcel>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.telecom.TelecomManager: void cancelMissedCallsNotification()>:<public>:<android.telecom.TelecomManager>
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String,java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.usage.UsageEvents.Event: void <init>()>:<public>:<android.app.usage.UsageEvents.Event>
<android.view.ViewGroup: android.view.View getFocusedChild()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int)>:<public static>:<android.app.ActivityOptions>
<android.app.ActivityManager: java.util.List getProcessesInErrorState()>:<public>:<android.app.ActivityManager>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.net.wifi.p2p.WifiP2pGroup: void <init>(android.net.wifi.p2p.WifiP2pGroup)>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.net.sip.SipAudioCall: void makeCall(android.net.sip.SipProfile,android.net.sip.SipSession,int)>:<public>:<android.net.sip.SipAudioCall>
<android.os.SystemClock: void sleep(long)>:<public static>:<android.os.SystemClock>
<android.preference.TwoStatePreference: boolean getDisableDependentsState()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>:<public static native>:<android.opengl.EGL14>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.hardware.usb.UsbDevice: boolean equals(java.lang.Object)>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.app.Dialog: void onAttachedToWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.appwidget.AppWidgetHost: void stopListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>:<public static>:<android.graphics.BitmapFactory>
<android.telecom.TelecomManager: void <init>()>:<>:<android.telecom.TelecomManager>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: float getBottomFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.LinearLayout: void setMeasureWithLargestChildEnabled(boolean)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>:<public>:<android.app.job.JobInfo.Builder>
<android.widget.TextView: int getAutoLinkMask()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.CallLog: void <clinit>()>:<static>:<android.provider.CallLog>
<android.gesture.GestureOverlayView: void setGestureStrokeType(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.net.SSLCertificateSocketFactory: void setUseSessionTickets(java.net.Socket,boolean)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.View: void removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType[] values()>:<public static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.os.DropBoxManager.Entry: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.view.ViewPropertyAnimator>
<android.content.BroadcastReceiver: void abortBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.telephony.gsm.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.content.IntentFilter: void addAction(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.os.BatteryManager: int getIntProperty(int)>:<public>:<android.os.BatteryManager>
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)>:<public static>:<android.database.DatabaseUtils>
<android.media.midi.MidiDeviceInfo: java.lang.String toString()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.view.ViewParent: int getTextAlignment()>:<public abstract>:<android.view.ViewParent>
<android.app.DialogFragment: void onAttach(android.app.Activity)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.media.session.MediaSession.QueueItem: void <init>(android.media.MediaDescription,long)>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.webkit.WebView: void clearCache(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.style.TtsSpan.TimeBuilder: android.text.style.TtsSpan.TimeBuilder setMinutes(int)>:<public>:<android.text.style.TtsSpan.TimeBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.Fragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.PointF: void <init>(float,float)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.app.admin.SystemUpdatePolicy: int getInstallWindowStart()>:<public>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.content.Context: java.io.File getDir(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.util.TypedValue: java.lang.String coerceToString(int,int)>:<public static final>:<android.util.TypedValue>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>:<public final>:<android.os.Parcel>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.audiofx.AcousticEchoCanceler: boolean isAvailable()>:<public static>:<android.media.audiofx.AcousticEchoCanceler:android.media.audiofx.AudioEffect>
<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()>:<public>:<android.test.suitebuilder.TestMethod>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForOriginationEnd()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: boolean isSafeMode()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.CharSequence,java.io.File)>:<public>:<android.speech.tts.TextToSpeech>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>:<public>:<android.app.job.JobInfo.Builder>
<android.renderscript.Matrix4f: void scale(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.text.Layout: android.text.Layout.Alignment getAlignment()>:<public final>:<android.text.Layout>
<android.media.MediaRouter.Callback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Space:android.view.View>
<android.app.assist.AssistStructure.WindowNode: java.lang.CharSequence getTitle()>:<public>:<android.app.assist.AssistStructure.WindowNode>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<android.text.TextDirectionHeuristic: boolean isRtl(java.lang.CharSequence,int,int)>:<public abstract>:<android.text.TextDirectionHeuristic>
<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.graphics.RectF: boolean contains(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.telephony.cdma.CdmaCellLocation: java.lang.String toString()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.app.VoiceInteractor.Prompt: int describeContents()>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.media.MediaCodecList: java.lang.String findDecoderForFormat(android.media.MediaFormat)>:<public final>:<android.media.MediaCodecList>
<android.test.mock.MockContentProvider: void <init>()>:<protected>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.widget.CalendarView: int getDateTextAppearance()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler getErrorHandler()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.text.Layout: int getParagraphLeft(int)>:<public final>:<android.text.Layout>
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.SyncParams: float getFrameRate()>:<public>:<android.media.SyncParams>
<android.telecom.RemoteConnection.VideoProvider: void setZoom(float)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForConsumptionEnd()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.location.Criteria: java.lang.String toString()>:<public>:<android.location.Criteria:android.os.Parcelable>
<org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.app.VoiceInteractor.CommandRequest: void onCommandResult(boolean,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.CommandRequest:android.app.VoiceInteractor.Request>
<android.print.PrintJob: int hashCode()>:<public>:<android.print.PrintJob>
<android.content.SyncResult: boolean madeSomeProgress()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.inputmethodservice.KeyboardView: boolean isShifted()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.telecom.InCallService.VideoCall: void setPauseImage(android.net.Uri)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.renderscript.Double4: void <init>()>:<public>:<android.renderscript.Double4>
<android.test.TouchUtils: void dragViewToTop(android.test.ActivityInstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.database.Cursor: boolean moveToPosition(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>:<public>:<android.app.TaskStackBuilder>
<android.widget.Gallery: void setCallbackDuringFling(boolean)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.net.wifi.WifiEnterpriseConfig: void setSubjectMatch(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.transition.ChangeImageTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.net.ProxyInfo: int getPort()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.inputmethodservice.ExtractEditText: void onSelectionChanged(int,int)>:<protected>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.content.ContentResolver: void requestSync(android.content.SyncRequest)>:<public static>:<android.content.ContentResolver>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Activity: void onStop()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>:<public static>:<android.gesture.GestureUtils>
<android.content.AsyncQueryHandler: void <init>(android.content.ContentResolver)>:<public>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.graphics.drawable.LayerDrawable: void setLayerHeight(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telephony.gsm.SmsMessage: byte[] getUserData()>:<public>:<android.telephony.gsm.SmsMessage>
<android.bluetooth.BluetoothGattDescriptor: void <init>(java.util.UUID,int)>:<public>:<android.bluetooth.BluetoothGattDescriptor>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.RestrictionEntry: android.content.RestrictionEntry createBundleArrayEntry(java.lang.String,android.content.RestrictionEntry[])>:<public static>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element PROGRAM_STORE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element F64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.telecom.PhoneAccountHandle: int describeContents()>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.service.dreams.DreamService: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.opengl.GLSurfaceView: void setPreserveEGLContextOnPause(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.app.Notification.Builder: android.app.Notification.Builder setPriority(int)>:<public>:<android.app.Notification.Builder>
<android.media.MediaRouter.UserRouteInfo: void requestUpdateVolume(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.speech.tts.TextToSpeech.OnUtteranceCompletedListener: void onUtteranceCompleted(java.lang.String)>:<public abstract>:<android.speech.tts.TextToSpeech.OnUtteranceCompletedListener>
<android.database.Cursor: float getFloat(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.opengl.GLES20: void glLineWidth(float)>:<public static native>:<android.opengl.GLES20>
<android.transition.Scene: void exit()>:<public>:<android.transition.Scene>
<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.method.TextKeyListener.Capitalize: android.text.method.TextKeyListener.Capitalize[] values()>:<public static>:<android.text.method.TextKeyListener.Capitalize:java.lang.Enum>
<android.net.sip.SipAudioCall: void holdCall(int)>:<public>:<android.net.sip.SipAudioCall>
<android.app.Dialog: void setDismissMessage(android.os.Message)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.view.View: boolean isHorizontalScrollBarEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBLAS: void DGEMM(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.MediaCodec: void setInputSurface(android.view.Surface)>:<public>:<android.media.MediaCodec>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style valueOf(java.lang.String)>:<public static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.widget.Spinner: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.os.Bundle: void putChar(java.lang.String,char)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.Activity: void setRequestedOrientation(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.MediaCodec.Callback: void onError(android.media.MediaCodec,android.media.MediaCodec.CodecException)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.graphics.Region: void <init>(android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.midi.MidiReceiver: int getMaxMessageSize()>:<public final>:<android.media.midi.MidiReceiver>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.graphics.NinePatch: int getWidth()>:<public>:<android.graphics.NinePatch>
<android.app.NativeActivity: void onStart()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.media.MediaDrm: void provideProvisionResponse(byte[])>:<public>:<android.media.MediaDrm>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransition(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.net.rtp.AudioStream: void setDtmfType(int)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.view.ViewAnimationUtils: void <init>()>:<>:<android.view.ViewAnimationUtils>
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy createWindowedInstallPolicy(int,int)>:<public static>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.mtp.MtpDevice: long getParent(int)>:<public>:<android.mtp.MtpDevice>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>:<public>:<android.service.voice.VoiceInteractionSession.AbortVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.preference.ListPreference: void setEntries(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.test.mock.MockPackageManager: java.lang.String[] getSystemSharedLibraryNames()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.InputDevice: int getControllerNumber()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.graphics.Rect: java.lang.String toString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.ListView: void setSelection(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.Layout: int getLineForVertical(int)>:<public>:<android.text.Layout>
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.media.ImageWriter: void setOnImageReleasedListener(android.media.ImageWriter.OnImageReleasedListener,android.os.Handler)>:<public>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.accounts.NetworkErrorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.util.SparseArray: void setValueAt(int,java.lang.Object)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.media.tv.TvInputService.Session: void onTimeShiftPause()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.print.PrintJob: void cancel()>:<public>:<android.print.PrintJob>
<android.media.AudioRecord: int getAudioSource()>:<public>:<android.media.AudioRecord>
<android.test.mock.MockCursor: boolean moveToPosition(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.inputmethodservice.Keyboard.Key: void onReleased(boolean)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.util.PrintStreamPrinter: void <init>(java.io.PrintStream)>:<public>:<android.util.PrintStreamPrinter:android.util.Printer>
<android.content.Context: void clearWallpaper()>:<public abstract>:<android.content.Context>
<android.webkit.WebSettings: int getCacheMode()>:<public abstract>:<android.webkit.WebSettings>
<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>:<public synchronized>:<android.content.ContentQueryMap:java.util.Observable>
<android.widget.HorizontalScrollView: boolean isSmoothScrollingEnabled()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.speech.tts.Voice: boolean equals(java.lang.Object)>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.text.Editable.Factory: void <init>()>:<public>:<android.text.Editable.Factory>
<org.xmlpull.v1.XmlPullParser: void <clinit>()>:<static>:<org.xmlpull.v1.XmlPullParser>
<android.preference.PreferenceActivity: boolean isMultiPane()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.audiofx.Equalizer: void setBandLevel(short,short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.widget.MultiAutoCompleteTextView: boolean enoughToFilter()>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.test.MoreAsserts: void assertEmpty(java.lang.String,java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.text.style.AbsoluteSizeSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.gesture.GestureOverlayView: void cancelClearAnimation()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.SearchableInfo: int getVoiceMaxResults()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.EditText: java.lang.CharSequence getText()>:<public volatile>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.widget.LinearLayout: void setVerticalGravity(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.NotificationManager.Policy: java.lang.String prioritySendersToString(int)>:<public static>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.preference.EditTextPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.AbstractCursor: int getPosition()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.content.res.TypedArray: void recycle()>:<public>:<android.content.res.TypedArray>
<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.media.MediaCodec: void stop()>:<public final>:<android.media.MediaCodec>
<android.nfc.NdefRecord: void writeToParcel(android.os.Parcel,int)>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.widget.Spinner: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.bluetooth.le.BluetoothLeScanner: void <init>()>:<>:<android.bluetooth.le.BluetoothLeScanner>
<android.os.Bundle: android.util.SizeF getSizeF(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.hardware.Camera.Parameters: void setAutoExposureLock(boolean)>:<public>:<android.hardware.Camera.Parameters>
<android.media.browse.MediaBrowser: android.content.ComponentName getServiceComponent()>:<public>:<android.media.browse.MediaBrowser>
<android.app.SearchManager: void <init>()>:<>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.assist.AssistStructure.ViewNode: int[] getTextLineCharOffsets()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<org.json.JSONStringer: org.json.JSONStringer value(boolean)>:<public>:<org.json.JSONStringer>
<android.widget.AbsSeekBar: void setThumbTintList(android.content.res.ColorStateList)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.renderscript.Allocation: void copyFromUnchecked(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.ViewTreeObserver.OnTouchModeChangeListener: void onTouchModeChanged(boolean)>:<public abstract>:<android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.util.Base64InputStream: int read(byte[],int,int)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.provider.SearchRecentSuggestions: void saveRecentQuery(java.lang.String,java.lang.String)>:<public>:<android.provider.SearchRecentSuggestions>
<android.database.Cursor: android.os.Bundle getExtras()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.mtp.MtpObjectInfo: int getProtectionStatus()>:<public final>:<android.mtp.MtpObjectInfo>
<android.bluetooth.le.AdvertiseSettings: void <clinit>()>:<static>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>:<public static>:<android.text.format.DateUtils>
<android.renderscript.ScriptIntrinsicBLAS: void STPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.util.AttributeSet: int getAttributeIntValue(java.lang.String,java.lang.String,int)>:<public abstract>:<android.util.AttributeSet>
<android.renderscript.FieldPacker: void addU32(long)>:<public>:<android.renderscript.FieldPacker>
<android.widget.GridLayout: void onViewRemoved(android.view.View)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.telephony.TelephonyManager: int getNetworkType()>:<public>:<android.telephony.TelephonyManager>
<android.graphics.RectF: void <init>(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.transition.ChangeTransform: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.test.MoreAsserts: void assertEquals(java.lang.String,byte[],byte[])>:<public static>:<android.test.MoreAsserts>
<android.view.Window: void setFormat(int)>:<public>:<android.view.Window>
<android.webkit.WebStorage.Origin: java.lang.String getOrigin()>:<public>:<android.webkit.WebStorage.Origin>
<android.net.Uri: java.lang.String getFragment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.nsd.NsdServiceInfo: void removeAttribute(java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.media.AudioAttributes: int describeContents()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.widget.SearchView: void setImeOptions(int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,javax.net.ssl.SSLEngine)>:<public>:<android.net.PskKeyManager>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.database.CursorWrapper: short getShort(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.hardware.GeomagneticField: float getY()>:<public>:<android.hardware.GeomagneticField>
<android.view.animation.Animation: void reset()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.tv.TvView.TvInputCallback: void onVideoSizeChanged(java.lang.String,int,int)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.app.IntentService: void onCreate()>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.LauncherApps: boolean isActivityEnabled(android.content.ComponentName,android.os.UserHandle)>:<public>:<android.content.pm.LauncherApps>
<android.view.ViewStructure: void setElevation(float)>:<public abstract>:<android.view.ViewStructure>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.media.AudioManager: int getRingerMode()>:<public>:<android.media.AudioManager>
<android.widget.TextView: void onMeasure(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int)>:<public>:<android.telephony.TelephonyManager>
<android.net.wifi.WifiConfiguration: int describeContents()>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.media.MediaRouter.RouteInfo: int getVolume()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.content.ContextWrapper: void revokeUriPermission(android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.text.style.TtsSpan.TelephoneBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.TelephoneBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.content.AsyncTaskLoader: void onForceLoad()>:<protected>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.RestrictionEntry: void setType(int)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.app.ProgressDialog: void incrementSecondaryProgressBy(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.webkit.WebViewClient: void <init>()>:<public>:<android.webkit.WebViewClient>
<android.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>:<public>:<android.app.FragmentController>
<android.inputmethodservice.Keyboard: void setKeyHeight(int)>:<protected>:<android.inputmethodservice.Keyboard>
<junit.framework.TestSuite: void <init>(java.lang.Class)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder setReadPendingIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.CarExtender.Builder>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setSyncAdapter(android.accounts.Account,java.lang.String)>:<public>:<android.content.SyncRequest.Builder>
<android.util.JsonReader: java.lang.String toString()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.media.tv.TvContentRating: java.lang.String flattenToString()>:<public>:<android.media.tv.TvContentRating>
<android.webkit.WebView: android.webkit.WebMessagePort[] createWebMessageChannel()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.drawable.Animatable2: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>:<public abstract>:<android.graphics.drawable.Animatable2:android.graphics.drawable.Animatable>
<android.bluetooth.BluetoothGattCharacteristic: int getWriteType()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.view.inputmethod.InputConnectionWrapper: boolean finishComposingText()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TextClock: java.lang.String getTimeZone()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.MediaPlayer.TrackInfo: void <init>()>:<>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.media.MediaCodecInfo.CodecProfileLevel: void <init>()>:<public>:<android.media.MediaCodecInfo.CodecProfileLevel>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm.OnEventListener)>:<public>:<android.media.MediaDrm>
<android.content.ContentProviderOperation: boolean isWriteOperation()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.app.Dialog: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.net.Proxy: void <init>()>:<public>:<android.net.Proxy>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerApp(java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.system.Os: void symlink(java.lang.String,java.lang.String)>:<public static>:<android.system.Os>
<android.graphics.Camera: void finalize()>:<protected>:<android.graphics.Camera>
<android.view.View: int getHorizontalScrollbarHeight()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.transition.Transition: void captureEndValues(android.transition.TransitionValues)>:<public abstract>:<android.transition.Transition:java.lang.Cloneable>
<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.transition.Transition: android.transition.Transition excludeTarget(android.view.View,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String)>:<protected>:<android.drm.DrmEvent>
<android.media.MediaCodec: void start()>:<public final>:<android.media.MediaCodec>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.io.File,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.app.MediaRouteButton: int getRouteTypes()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.provider.Settings.NameValueTable: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>:<protected static>:<android.provider.Settings.NameValueTable:android.provider.BaseColumns>
<android.view.View: void setImportantForAccessibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Loader.OnLoadCompleteListener: void onLoadComplete(android.content.Loader,java.lang.Object)>:<public abstract>:<android.content.Loader.OnLoadCompleteListener>
<android.database.AbstractCursor: boolean isClosed()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.Switch: void toggle()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES10: void glLightf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.telecom.DisconnectCause: int getCode()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.telecom.VideoProfile: boolean isBidirectional(int)>:<public static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.nfc.tech.NfcBarcode: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.graphics.Rect: boolean intersect(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.provider.ContactsContract.CommonDataKinds.Phone: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.pm.LauncherActivityInfo: android.content.pm.ApplicationInfo getApplicationInfo()>:<public>:<android.content.pm.LauncherActivityInfo>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>:<public>:<android.graphics.Paint>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureFormats()>:<public>:<android.hardware.Camera.Parameters>
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.app.PendingIntent: int hashCode()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.opengl.GLES30: int glClientWaitSync(long,int,long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telecom.Connection: void setNextPostDialChar(char)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.graphics.drawable.shapes.RoundRectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.provider.ContactsContract.CommonDataKinds.Organization: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Organization:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.provider.SearchRecentSuggestions: void truncateHistory(android.content.ContentResolver,int)>:<protected>:<android.provider.SearchRecentSuggestions>
<android.bluetooth.BluetoothGattServer: java.util.List getConnectedDevices()>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.test.MoreAsserts: void assertEquals(java.util.Set,java.util.Set)>:<public static>:<android.test.MoreAsserts>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.telecom.VideoProfile.CameraCapabilities: int getWidth()>:<public>:<android.telecom.VideoProfile.CameraCapabilities:android.os.Parcelable>
<android.service.carrier.CarrierIdentifier: int describeContents()>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.renderscript.Short2: void <init>()>:<public>:<android.renderscript.Short2>
<android.drm.DrmInfo: void <init>(int,byte[],java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.webkit.WebHistoryItem: java.lang.String getUrl()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.renderscript.ScriptIntrinsicBLAS: void SGER(float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.OrientationEventListener: void <init>(android.content.Context)>:<public>:<android.view.OrientationEventListener>
<android.graphics.PathMeasure: void <init>()>:<public>:<android.graphics.PathMeasure>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsDisplaySupported()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Integer getIntValue(int,int)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.media.MediaDescription: java.lang.CharSequence getSubtitle()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.speech.RecognitionService.Callback: void bufferReceived(byte[])>:<public>:<android.speech.RecognitionService.Callback>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>:<public abstract>:<android.text.SpanWatcher:android.text.NoCopySpan>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.test.RenamingDelegatingContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.widget.ListPopupWindow: void setAnimationStyle(int)>:<public>:<android.widget.ListPopupWindow>
<android.text.Selection: void setSelection(android.text.Spannable,int)>:<public static final>:<android.text.Selection>
<android.text.style.UnderlineSpan: int getSpanTypeId()>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager.RegistrationListener)>:<public>:<android.net.nsd.NsdManager>
<android.opengl.GLSurfaceView.GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)>:<public abstract>:<android.opengl.GLSurfaceView.GLWrapper>
<android.view.SurfaceHolder.Callback2: void surfaceRedrawNeeded(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback2:android.view.SurfaceHolder.Callback>
<android.app.Activity: void setProgress(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.PathMeasure: boolean nextContour()>:<public>:<android.graphics.PathMeasure>
<android.widget.TextView: void setTextAppearance(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.sax.Element: android.sax.Element requireChild(java.lang.String)>:<public>:<android.sax.Element>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.webkit.WebView: void goBack()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Activity: void finishAffinity()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.renderscript.Allocation: void copyFrom(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.service.media.MediaBrowserService: void onLoadItem(java.lang.String,android.service.media.MediaBrowserService.Result)>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaCodec: android.media.MediaCodec createByCodecName(java.lang.String)>:<public static>:<android.media.MediaCodec>
<android.opengl.GLES20: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void setOnKeyListener(android.view.View.OnKeyListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int,int)>:<protected>:<android.renderscript.Script.FieldBase>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.database.CursorWindow: java.lang.String toString()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: int getTextSelectionStart()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.inputmethodservice.InputMethodService: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>:<protected>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.Network: java.net.InetAddress getByName(java.lang.String)>:<public>:<android.net.Network:android.os.Parcelable>
<android.widget.Toolbar: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.print.PrintDocumentInfo: int hashCode()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.net.RouteInfo: int hashCode()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: int getInputType()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.net.Uri build()>:<public>:<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder>
<android.content.pm.PackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.os.UserHandle: android.os.UserHandle readFromParcel(android.os.Parcel)>:<public static>:<android.os.UserHandle:android.os.Parcelable>
<android.graphics.Region: void <clinit>()>:<static>:<android.graphics.Region:android.os.Parcelable>
<android.media.MediaRouter.UserRouteInfo: void setDescription(java.lang.CharSequence)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.widget.ExpandableListView: boolean isGroupExpanded(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaDrmException: void <init>(java.lang.String)>:<public>:<android.media.MediaDrmException:java.lang.Exception,java.lang.Throwable>
<android.system.Os: java.io.FileDescriptor[] pipe()>:<public static>:<android.system.Os>
<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public abstract>:<android.text.TextWatcher:android.text.NoCopySpan>
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int hashCode()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.widget.ListPopupWindow: void setWidth(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference: int getPersistedInt(int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.net.ConnectivityManager: void removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>:<public>:<android.net.ConnectivityManager>
<android.view.WindowManager.InvalidDisplayException: void <init>(java.lang.String)>:<public>:<android.view.WindowManager.InvalidDisplayException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<org.json.JSONTokener: int dehexchar(char)>:<public static>:<org.json.JSONTokener>
<android.telephony.CellInfoCdma: int describeContents()>:<public>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>:<public native>:<android.media.MediaDrm>
<android.inputmethodservice.AbstractInputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.webkit.SslErrorHandler: void proceed()>:<public>:<android.webkit.SslErrorHandler:android.os.Handler>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getInProgressLabel()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,int)>:<public static>:<android.provider.UserDictionary.Words:android.provider.BaseColumns>
<android.text.TextUtils.SimpleStringSplitter: void <init>(char)>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<org.json.JSONObject: long optLong(java.lang.String,long)>:<public>:<org.json.JSONObject>
<android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.app.MediaRouteButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.printservice.PrintJob: boolean isCancelled()>:<public>:<android.printservice.PrintJob>
<android.telephony.gsm.SmsMessage: boolean isMwiDontStore()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.PopupWindow: android.view.View getContentView()>:<public>:<android.widget.PopupWindow>
<android.provider.CallLog.Calls: void <clinit>()>:<static>:<android.provider.CallLog.Calls:android.provider.BaseColumns>
<android.graphics.Color: int HSVToColor(int,float[])>:<public static>:<android.graphics.Color>
<android.widget.BaseAdapter: boolean isEnabled(int)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>:<public>:<android.view.LayoutInflater>
<android.database.sqlite.SQLiteDatabase: void finalize()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.util.SparseBooleanArray: int keyAt(int)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.widget.AbsSeekBar: int getKeyProgressIncrement()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.content.ClipData.Item: java.lang.CharSequence getText()>:<public>:<android.content.ClipData.Item>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>:<public final>:<android.os.Binder:android.os.IBinder>
<android.view.MenuItem: boolean isVisible()>:<public abstract>:<android.view.MenuItem>
<android.widget.ArrayAdapter: void addAll(java.util.Collection)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.AnimatorListenerAdapter: void onAnimationRepeat(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.provider.Contacts.Phones: void <init>()>:<>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver.PendingResult goAsync()>:<public final>:<android.content.BroadcastReceiver>
<android.net.sip.SipProfile.Builder: void <init>(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.view.View: int getScrollX()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>:<public>:<android.app.Notification.Builder>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int4)>:<public>:<android.renderscript.FieldPacker>
<android.transition.Transition: android.transition.Transition setStartDelay(long)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.os.AsyncTask: void onCancelled(java.lang.Object)>:<protected>:<android.os.AsyncTask>
<android.widget.AbsListView: void draw(android.graphics.Canvas)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.wifi.WifiConfiguration.AuthAlgorithm: void <init>()>:<>:<android.net.wifi.WifiConfiguration.AuthAlgorithm>
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.app.WallpaperInfo: void <clinit>()>:<static>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void prepareForInsert()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.opengl.GLES10: void glNormalPointer(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.telephony.gsm.GsmCellLocation: boolean equals(java.lang.Object)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.ScriptIntrinsic3DLUT create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.pm.PackageInstaller.Session: void fsync(java.io.OutputStream)>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.net.TrafficStats: void setThreadStatsTag(int)>:<public static>:<android.net.TrafficStats>
<android.text.util.Linkify: void <clinit>()>:<static>:<android.text.util.Linkify>
<android.net.wifi.WifiManager: boolean isEnhancedPowerReportingSupported()>:<public>:<android.net.wifi.WifiManager>
<android.widget.SimpleExpandableListAdapter: int getGroupCount()>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.renderscript.Byte3: void <init>()>:<public>:<android.renderscript.Byte3>
<android.view.accessibility.AccessibilityRecord: void setAddedCount(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.graphics.Camera: void applyToCanvas(android.graphics.Canvas)>:<public>:<android.graphics.Camera>
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.service.chooser.ChooserTarget: android.os.Bundle getIntentExtras()>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.os.Parcel: java.lang.String[] createStringArray()>:<public final>:<android.os.Parcel>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>:<public>:<android.app.Notification.Action.Builder>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.content.Intent: int getIntExtra(java.lang.String,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.net.MailTo: java.lang.String getBody()>:<public>:<android.net.MailTo>
<android.preference.DialogPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.pdf.PdfRenderer: int getPageCount()>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.widget.Toast: int getYOffset()>:<public>:<android.widget.Toast>
<android.security.KeyPairGeneratorSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.webkit.WebSettings: boolean getOffscreenPreRaster()>:<public abstract>:<android.webkit.WebSettings>
<android.widget.DatePicker: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.EGLConfig: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLConfig:android.opengl.EGLObjectHandle>
<android.app.Activity: void setFeatureDrawableResource(int,int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.http.X509TrustManagerExtensions: boolean isUserAddedCertificate(java.security.cert.X509Certificate)>:<public>:<android.net.http.X509TrustManagerExtensions>
<android.print.PrintJob: void <init>()>:<>:<android.print.PrintJob>
<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.AbsListView: int getTopPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>:<protected>:<android.view.animation.LayoutAnimationController>
<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>:<public>:<android.webkit.WebViewClient>
<android.provider.ContactsContract.PinnedPositions: void undemote(android.content.ContentResolver,long)>:<public static>:<android.provider.ContactsContract.PinnedPositions>
<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.ZoomButton: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.text.SpannableStringBuilder: boolean equals(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.media.RemoteController: boolean seekTo(long)>:<public>:<android.media.RemoteController>
<android.media.AudioFormat: java.lang.String toString()>:<public>:<android.media.AudioFormat>
<android.widget.ListView: boolean areHeaderDividersEnabled()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.text.BoringLayout: int getTopPadding()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.preference.PreferenceActivity.Header: void readFromParcel(android.os.Parcel)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumber(java.lang.String)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.job.JobInfo: boolean isRequireDeviceIdle()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.widget.Spinner: void setPopupBackgroundResource(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.net.wifi.WifiConfiguration: java.lang.String toString()>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.content.CursorLoader: void cancelLoadInBackground()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.service.voice.VoiceInteractionSession: void startVoiceActivity(android.content.Intent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.preference.PreferenceManager: int getSharedPreferencesMode()>:<public>:<android.preference.PreferenceManager>
<android.telecom.InCallService.VideoCall: void sendSessionModifyResponse(android.telecom.VideoProfile)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.app.job.JobInfo: int describeContents()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.text.method.TimeKeyListener: void <clinit>()>:<static>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[],int,int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.media.projection.MediaProjection: void stop()>:<public>:<android.media.projection.MediaProjection>
<android.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.FragmentController>
<android.media.tv.TvView: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.telephony.SmsMessage: boolean isMWISetMessage()>:<public>:<android.telephony.SmsMessage>
<android.widget.Spinner: void setDropDownVerticalOffset(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.media.MediaRouter.Callback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isRunning()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.OrientationListener: void <init>(android.content.Context,int)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.location.Location: void <init>(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>:<public>:<android.net.ConnectivityManager>
<android.widget.CursorAdapter: long getItemId(int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>:<public>:<android.view.Window>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.telephony.SmsMessage: int getStatus()>:<public>:<android.telephony.SmsMessage>
<android.os.Handler: void removeMessages(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()>:<public final>:<android.mtp.MtpStorageInfo>
<android.os.Message: android.os.Message obtain(android.os.Handler,int)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()>:<public>:<android.text.style.RasterizerSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.widget.AbsListView: void scrollListBy(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.midi.MidiManager.DeviceCallback: void onDeviceRemoved(android.media.midi.MidiDeviceInfo)>:<public>:<android.media.midi.MidiManager.DeviceCallback>
<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.net.RouteInfo: boolean equals(java.lang.Object)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.net.Uri: java.lang.String getEncodedAuthority()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.view.View: void onDetachedFromWindow()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.ParcelableSpan: int getSpanTypeId()>:<public abstract>:<android.text.ParcelableSpan:android.os.Parcelable>
<android.graphics.Rect: java.lang.String flattenToString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.view.View: int getWindowAttachCount()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: android.view.View getCurrentFocus()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)>:<public>:<android.webkit.WebChromeClient>
<android.widget.TextView: void setCompoundDrawablePadding(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AbsSeekBar: android.graphics.PorterDuff.Mode getThumbTintMode()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.renderscript.FieldPacker: byte[] getData()>:<public final>:<android.renderscript.FieldPacker>
<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.View: void stopNestedScroll()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.media.SyncParams: int getAudioAdjustMode()>:<public>:<android.media.SyncParams>
<android.webkit.MimeTypeMap: void <init>()>:<>:<android.webkit.MimeTypeMap>
<android.widget.RemoteViews: void setScrollPosition(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()>:<public>:<android.net.UrlQuerySanitizer>
<android.content.ContextWrapper: java.lang.String[] fileList()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.app.KeyguardManager>
<android.telecom.Call.Details: int getVideoState()>:<public>:<android.telecom.Call.Details>
<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.hardware.Camera.AutoFocusCallback: void onAutoFocus(boolean,android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.AutoFocusCallback>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState valueOf(java.lang.String)>:<public static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.bluetooth.le.BluetoothLeAdvertiser: void <init>()>:<>:<android.bluetooth.le.BluetoothLeAdvertiser>
<android.content.ContentProviderOperation: android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[],int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>:<public>:<android.service.voice.VoiceInteractionSession.PickOptionRequest:android.service.voice.VoiceInteractionSession.Request>
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.net.Uri: int compareTo(java.lang.Object)>:<public volatile>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.Uri.Builder: android.net.Uri build()>:<public>:<android.net.Uri.Builder>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.provider.CallLog.Calls: java.lang.String getLastOutgoingCall(android.content.Context)>:<public static>:<android.provider.CallLog.Calls:android.provider.BaseColumns>
<android.text.Layout: float getSecondaryHorizontal(int)>:<public>:<android.text.Layout>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.ViewGroup: boolean canAnimate()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.Rating: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.Rating:android.os.Parcelable>
<android.telecom.Connection.VideoProvider: void onSendSessionModifyResponse(android.telecom.VideoProfile)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.widget.ScrollView: void computeScroll()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.assist.AssistStructure.ViewNode: android.os.Bundle getExtras()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[])>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.renderscript.ScriptGroup.Input: void <init>()>:<>:<android.renderscript.ScriptGroup.Input>
<android.renderscript.ScriptIntrinsicBLAS: void DTRSM(int,int,int,int,double,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>:<public>:<android.content.res.Resources>
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>:<public>:<android.app.WallpaperManager>
<android.print.PrintJobInfo.Builder: void <init>(android.print.PrintJobInfo)>:<public>:<android.print.PrintJobInfo.Builder>
<android.view.ViewOverlay: void clear()>:<public>:<android.view.ViewOverlay>
<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getIdentity()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.view.View: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptGroup: void setOutput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.widget.RemoteViews: void setImageViewResource(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.telephony.NeighboringCellInfo: int getNetworkType()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.hardware.camera2.CameraCharacteristics: java.util.List getKeys()>:<public>:<android.hardware.camera2.CameraCharacteristics:android.hardware.camera2.CameraMetadata>
<android.webkit.WebSettings: boolean getBlockNetworkImage()>:<public abstract>:<android.webkit.WebSettings>
<android.database.CursorWrapper: boolean moveToLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.Activity: void onWindowFocusChanged(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.MediaController: void <init>(android.content.Context,boolean)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.telecom.RemoteConnection: boolean isRingbackRequested()>:<public>:<android.telecom.RemoteConnection>
<android.widget.TimePicker: void setMinute(int)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.CookieManager: void setAcceptThirdPartyCookies(android.webkit.WebView,boolean)>:<public abstract>:<android.webkit.CookieManager>
<android.transition.TransitionSet: void setPropagation(android.transition.TransitionPropagation)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.Presentation: void show()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.gesture.OrientedBoundingBox: void <init>()>:<>:<android.gesture.OrientedBoundingBox>
<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView.OnKeyboardActionListener)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.telecom.Conference: void setDisconnected(android.telecom.DisconnectCause)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.renderscript.Element: android.renderscript.Element I32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>:<public>:<android.os.storage.StorageManager>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.MediaMetadata: void <init>()>:<>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: void setDrawingCacheQuality(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Spinner: void onDetachedFromWindow()>:<protected>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap.KeyData)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioRecord: boolean setPreferredDevice(android.media.AudioDeviceInfo)>:<public>:<android.media.AudioRecord>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.sqlite.SQLiteDatabase: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<org.json.JSONObject: int optInt(java.lang.String,int)>:<public>:<org.json.JSONObject>
<android.print.PrintAttributes.Margins: void <init>(int,int,int,int)>:<public>:<android.print.PrintAttributes.Margins>
<android.webkit.WebView: int computeVerticalScrollExtent()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>:<public abstract>:<android.content.pm.PackageManager>
<android.telecom.Conference: void onConnectionAdded(android.telecom.Connection)>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.BoringLayout: int getLineCount()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.Toolbar: void inflateMenu(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.MediaSyncEvent: android.media.MediaSyncEvent createEvent(int)>:<public static>:<android.media.MediaSyncEvent>
<android.util.ArrayMap: void ensureCapacity(int)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.content.SyncAdapterType: boolean isAlwaysSyncable()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.content.res.ColorStateList: int getChangingConfigurations()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>:<public>:<android.graphics.PathMeasure>
<android.location.Location: boolean hasAccuracy()>:<public>:<android.location.Location:android.os.Parcelable>
<android.renderscript.FieldPacker: void skip(int)>:<public>:<android.renderscript.FieldPacker>
<android.database.MatrixCursor: int getType(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.content.Loader: boolean isReset()>:<public>:<android.content.Loader>
<android.service.wallpaper.WallpaperService.Engine: void onCreate(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.MediaMetadata.Builder: void <init>(android.media.MediaMetadata)>:<public>:<android.media.MediaMetadata.Builder>
<android.widget.LinearLayout: float getWeightSum()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>:<public>:<android.appwidget.AppWidgetManager>
<android.net.RouteInfo: android.net.IpPrefix getDestination()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<junit.framework.TestResult: int errorCount()>:<public synchronized>:<junit.framework.TestResult>
<android.os.HandlerThread: void run()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.view.View: boolean isPressed()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic)>:<public>:<android.text.BidiFormatter>
<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>:<public>:<android.content.pm.PackageInstaller>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addMediaSize(android.print.PrintAttributes.MediaSize,boolean)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.widget.ViewAnimator: void setDisplayedChild(int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.app.LauncherActivity.ListItem: void <init>()>:<public>:<android.app.LauncherActivity.ListItem>
<android.view.animation.Transformation: void setAlpha(float)>:<public>:<android.view.animation.Transformation>
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiManager>
<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.telecom.Call.Details: android.net.Uri getHandle()>:<public>:<android.telecom.Call.Details>
<android.widget.VideoView: void suspend()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.webkit.WebView: void clearMatches()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaCodec.CodecException: int getErrorCode()>:<public>:<android.media.MediaCodec.CodecException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.SlidingDrawer: void animateOpen()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.nfc.NfcAdapter: boolean invokeBeam(android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.media.tv.TvInputService.Session: void setOverlayViewEnabled(boolean)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>:<public abstract>:<android.app.FragmentTransaction>
<android.util.ArraySet: boolean retainAll(java.util.Collection)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority valueOf(java.lang.String)>:<public static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.webkit.WebView: void enableSlowWholeDocumentDraw()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.Spinner: int getGravity()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.net.wifi.WifiEnterpriseConfig: void setIdentity(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.renderscript.RenderScript.ContextType: void <clinit>()>:<static>:<android.renderscript.RenderScript.ContextType:java.lang.Enum>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>:<public>:<android.graphics.Paint>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>()>:<public>:<android.text.LoginFilter.UsernameFilterGeneric:android.text.LoginFilter>
<android.app.admin.DevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.PointF: void <init>()>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.system.StructPollfd: java.lang.String toString()>:<public>:<android.system.StructPollfd>
<android.widget.CalendarView: void setDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.xmlpull.v1.XmlSerializer: void entityRef(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.view.ViewStructure: void <init>()>:<public>:<android.view.ViewStructure>
<android.telecom.CallAudioState: int getRoute()>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.mtp.MtpDevice: java.lang.String getDeviceName()>:<public>:<android.mtp.MtpDevice>
<android.telephony.SmsMessage: boolean isMwiDontStore()>:<public>:<android.telephony.SmsMessage>
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManagerCallback: void run(android.accounts.AccountManagerFuture)>:<public abstract>:<android.accounts.AccountManagerCallback>
<android.os.Debug: void startMethodTracing(java.lang.String)>:<public static>:<android.os.Debug>
<android.content.Context: java.io.File[] getObbDirs()>:<public abstract>:<android.content.Context>
<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.Activity: void onBackPressed()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.browse.MediaBrowser: void subscribe(java.lang.String,android.media.browse.MediaBrowser.SubscriptionCallback)>:<public>:<android.media.browse.MediaBrowser>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPassword(java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>:<public static>:<android.webkit.WebSettings>
<android.app.Notification.WearableExtender: int getContentIcon()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.test.mock.MockContext: java.io.File getCodeCacheDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.Fragment: int getTargetRequestCode()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>:<public final>:<android.graphics.drawable.Drawable>
<android.net.sip.SipProfile: java.lang.String getDisplayName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.media.MediaExtractor: int readSampleData(java.nio.ByteBuffer,int)>:<public native>:<android.media.MediaExtractor>
<android.media.AudioDeviceCallback: void <init>()>:<public>:<android.media.AudioDeviceCallback>
<android.renderscript.Int2: void <init>(int,int)>:<public>:<android.renderscript.Int2>
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telecom.RemoteConnection.VideoProvider: void requestCallDataUsage()>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.view.View: boolean awakenScrollBars()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setContentType(int)>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.graphics.Paint: void setStrokeWidth(float)>:<public native>:<android.graphics.Paint>
<android.test.mock.MockPackageManager: java.util.List getAllIntentFilters(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>:<public>:<android.graphics.Paint>
<android.test.mock.MockResources: android.content.res.XmlResourceParser getLayout(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.media.tv.TvView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.test.RenamingDelegatingContext: android.content.ContentProvider providerWithRenamedContext(java.lang.Class,android.content.Context,java.lang.String,boolean)>:<public static>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.graphics.drawable.DrawableWrapper: int getOpacity()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.audiofx.AutomaticGainControl: android.media.audiofx.AutomaticGainControl create(int)>:<public static>:<android.media.audiofx.AutomaticGainControl:android.media.audiofx.AudioEffect>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean)>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.test.AndroidTestCase: void scrubClass(java.lang.Class)>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.NinePatch)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.media.audiofx.Virtualizer: void setParameterListener(android.media.audiofx.Virtualizer.OnParameterChangeListener)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.security.keystore.KeyGenParameterSpec: int getPurposes()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.app.Activity: void setTitle(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telecom.RemoteConference.Callback: void onExtrasChanged(android.telecom.RemoteConference,android.os.Bundle)>:<public>:<android.telecom.RemoteConference.Callback>
<android.database.CursorWrapper: boolean isClosed()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.admin.DevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.Rect: boolean equals(java.lang.Object)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.webkit.WebResourceRequest: boolean hasGesture()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.widget.SimpleAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.ViewFlipper: void onDetachedFromWindow()>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.ExtractedText: void <init>()>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.security.keystore.KeyNotYetValidException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.security.keystore.KeyNotYetValidException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<junit.framework.Assert: void assertEquals(java.lang.String,char,char)>:<public static>:<junit.framework.Assert>
<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.Matrix: void getValues(float[])>:<public>:<android.graphics.Matrix>
<android.os.SystemClock: long elapsedRealtime()>:<public static native>:<android.os.SystemClock>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setColorMode(int)>:<public>:<android.print.PrintAttributes.Builder>
<android.app.MediaRouteButton: void drawableStateChanged()>:<protected>:<android.app.MediaRouteButton:android.view.View>
<android.print.PrintAttributes.Resolution: int getVerticalDpi()>:<public>:<android.print.PrintAttributes.Resolution>
<android.provider.MediaStore.Audio.Albums: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Albums:android.provider.BaseColumns,android.provider.MediaStore.Audio.AlbumColumns>
<android.media.MediaPlayer: android.media.MediaPlayer.TrackInfo[] getTrackInfo()>:<public>:<android.media.MediaPlayer>
<android.webkit.WebView: void onWindowVisibilityChanged(int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>:<public static synchronized>:<android.webkit.CookieManager>
<android.graphics.Paint: boolean hasGlyph(java.lang.String)>:<public>:<android.graphics.Paint>
<android.telecom.RemoteConference.Callback: void onDestroyed(android.telecom.RemoteConference)>:<public>:<android.telecom.RemoteConference.Callback>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>:<public>:<android.view.accessibility.AccessibilityRecord>
<dalvik.system.DexFile: java.lang.String toString()>:<public>:<dalvik.system.DexFile>
<android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>:<public>:<android.graphics.SurfaceTexture>
<android.provider.MediaStore.Video.Thumbnails: void <init>()>:<public>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.VideoView: void draw(android.graphics.Canvas)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String getFilenameHint()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.text.method.ArrowKeyMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: void <init>(int,int,int)>:<public>:<android.graphics.pdf.PdfDocument.PageInfo.Builder>
<android.content.res.Resources: android.graphics.Movie getMovie(int)>:<public>:<android.content.res.Resources>
<android.telecom.RemoteConference.Callback: void onStateChanged(android.telecom.RemoteConference,int,int)>:<public>:<android.telecom.RemoteConference.Callback>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.drm.DrmRights: java.lang.String getAccountId()>:<public>:<android.drm.DrmRights>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.nfc.NdefMessage: boolean equals(java.lang.Object)>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.media.midi.MidiDeviceInfo: android.os.Bundle getProperties()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.content.Loader: void unregisterListener(android.content.Loader.OnLoadCompleteListener)>:<public>:<android.content.Loader>
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceRemoved(int)>:<public abstract>:<android.hardware.input.InputManager.InputDeviceListener>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String toString()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.widget.ExpandableListAdapter: void onGroupExpanded(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.animation.AnimatorSet: long getStartDelay()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.telecom.Connection.VideoProvider: void onSetCamera(java.lang.String)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.print.PrintAttributes: android.print.PrintAttributes.Margins getMinMargins()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.app.Dialog: void closeOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>:<public static>:<android.provider.DocumentsContract>
<android.text.style.DrawableMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.view.View: android.view.View getRootView()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.test.mock.MockContext: android.content.Context createPackageContext(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.util.JsonWriter: void setIndent(java.lang.String)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy build()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.os.Debug: int getGlobalExternalFreedSize()>:<public static>:<android.os.Debug>
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.CalendarView: void setMaxDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telephony.SmsManager: int getDefaultSmsSubscriptionId()>:<public static>:<android.telephony.SmsManager>
<android.bluetooth.BluetoothGattDescriptor: android.bluetooth.BluetoothGattCharacteristic getCharacteristic()>:<public>:<android.bluetooth.BluetoothGattDescriptor>
<android.widget.ImageView: void onAttachedToWindow()>:<protected>:<android.widget.ImageView:android.view.View>
<android.bluetooth.le.ScanResult: int describeContents()>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>:<public>:<android.media.ExifInterface>
<android.widget.HorizontalScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ActivityUnitTestCase: void setApplication(android.app.Application)>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.os.Looper: void quit()>:<public>:<android.os.Looper>
<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.content.res.Configuration: void setToDefaults()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.os.Bundle: float[] getFloatArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.view.View: boolean isAccessibilityFocused()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ImageView: boolean isOpaque()>:<public>:<android.widget.ImageView:android.view.View>
<android.view.Window: android.transition.Transition getSharedElementEnterTransition()>:<public>:<android.view.Window>
<android.app.admin.DeviceAdminReceiver: void onDisabled(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.media.MediaPlayer: void addTimedTextSource(java.lang.String,java.lang.String)>:<public>:<android.media.MediaPlayer>
<android.media.AudioManager: android.media.AudioDeviceInfo[] getDevices(int)>:<public>:<android.media.AudioManager>
<android.webkit.WebSyncManager: void sync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.widget.GridView: int computeVerticalScrollRange()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.MarginLayoutParams: int getMarginStart()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.telephony.TelephonyManager: int getPhoneType()>:<public>:<android.telephony.TelephonyManager>
<android.animation.TimeAnimator: void <init>()>:<public>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.HorizontalScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.RectF: void setEmpty()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.transition.TransitionSet: android.transition.Transition addTarget(java.lang.String)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.media.MediaSync.OnErrorListener: void onError(android.media.MediaSync,int,int)>:<public abstract>:<android.media.MediaSync.OnErrorListener>
<android.app.ActivityGroup: void onCreate(android.os.Bundle)>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.test.InstrumentationTestSuite: void addTestSuite(java.lang.Class)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.view.View: void setScrollX(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.system.OsConstants: boolean S_ISLNK(int)>:<public static>:<android.system.OsConstants>
<android.renderscript.Matrix2f: void multiply(android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.util.Log: int println(int,java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.renderscript.Element: android.renderscript.Element A_8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.View: int getTextDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.drm.DrmEvent: int getUniqueId()>:<public>:<android.drm.DrmEvent>
<android.widget.Toast: void cancel()>:<public>:<android.widget.Toast>
<android.widget.TextSwitcher: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.MediaStore.Audio.Radio: void <init>()>:<>:<android.provider.MediaStore.Audio.Radio>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List)>:<public>:<android.media.browse.MediaBrowser.SubscriptionCallback>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setSampleRate(int)>:<public>:<android.media.AudioFormat.Builder>
<android.view.DragEvent: java.lang.Object getLocalState()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.speech.RecognitionService: void onStopListening(android.speech.RecognitionService.Callback)>:<protected abstract>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.SurfaceTexture: void releaseTexImage()>:<public>:<android.graphics.SurfaceTexture>
<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite build()>:<public final>:<android.test.suitebuilder.TestSuiteBuilder>
<android.hardware.camera2.CaptureRequest.Builder: void setTag(java.lang.Object)>:<public>:<android.hardware.camera2.CaptureRequest.Builder>
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.widget.RelativeLayout: void setVerticalGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.content.RestrictionsManager: android.os.Bundle getApplicationRestrictions()>:<public>:<android.content.RestrictionsManager>
<android.text.style.TtsSpan.DigitsBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.DigitsBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.telecom.InCallService.VideoCall.Callback: void onCallDataUsageChanged(long)>:<public abstract>:<android.telecom.InCallService.VideoCall.Callback>
<android.content.ContentValues: boolean equals(java.lang.Object)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.ContentProvider: void onLowMemory()>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<org.json.JSONObject: java.lang.String numberToString(java.lang.Number)>:<public static>:<org.json.JSONObject>
<android.widget.TabHost: void addTab(android.widget.TabHost.TabSpec)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.res.ObbInfo: java.lang.String toString()>:<public>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.app.Activity: void startPostponedEnterTransition()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.view.Display.Mode: boolean equals(java.lang.Object)>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus.Listener)>:<public>:<android.location.LocationManager>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType[] values()>:<public static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>:<public abstract>:<org.apache.http.conn.scheme.SocketFactory>
<android.hardware.camera2.params.LensShadingMap: int hashCode()>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.app.FragmentManager.BackStackEntry: java.lang.String getName()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.hardware.camera2.CaptureRequest.Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest.Key)>:<public>:<android.hardware.camera2.CaptureRequest.Builder>
<android.util.TimingLogger: void dumpToLog()>:<public>:<android.util.TimingLogger>
<android.graphics.Paint.Align: void <clinit>()>:<static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.view.ViewStub: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewStub:android.view.View>
<android.view.KeyEvent: boolean isSymPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.LayoutTransition: void setStartDelay(int,long)>:<public>:<android.animation.LayoutTransition>
<android.widget.AbsListView: void reclaimViews(java.util.List)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewParent: boolean isTextDirectionResolved()>:<public abstract>:<android.view.ViewParent>
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>:<public static>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.test.mock.MockPackageManager: void verifyPendingInstall(int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.AbsListView: boolean isFastScrollEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.animation.IntArrayEvaluator: int[] evaluate(float,int[],int[])>:<public>:<android.animation.IntArrayEvaluator:android.animation.TypeEvaluator>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>:<public static>:<android.view.ViewAnimationUtils>
<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder.OnInfoListener)>:<public>:<android.media.MediaRecorder>
<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.accessibility.AccessibilityWindowInfo: void getBoundsInScreen(android.graphics.Rect)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.TextView.BufferType: void <clinit>()>:<static>:<android.widget.TextView.BufferType:java.lang.Enum>
<android.opengl.GLES20: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES20>
<android.os.DropBoxManager.Entry: java.lang.String getTag()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.widget.AdapterView: android.view.View getEmptyView()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.view.KeyEvent: java.lang.String getCharacters()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.SlidingDrawer: void setOnDrawerOpenListener(android.widget.SlidingDrawer.OnDrawerOpenListener)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.renderscript.ScriptIntrinsicBLAS: void DTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeystoreAlias()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.printservice.PrintJob: android.print.PrintJobId getId()>:<public>:<android.printservice.PrintJob>
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.SyncStats: void <init>()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.hardware.camera2.params.MeteringRectangle: boolean equals(android.hardware.camera2.params.MeteringRectangle)>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>:<public>:<android.app.LocalActivityManager>
<android.content.ContentValues: boolean containsKey(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.webkit.ConsoleMessage: int lineNumber()>:<public>:<android.webkit.ConsoleMessage>
<android.net.wifi.WifiInfo: int getRssi()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: java.util.List getInstalledCaCerts(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Bundle: void putAll(android.os.Bundle)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.Notification.WearableExtender: boolean getStartScrollBottom()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.media.midi.MidiDeviceService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.projection.MediaProjection.Callback: void <init>()>:<public>:<android.media.projection.MediaProjection.Callback>
<android.telecom.Connection.VideoProvider: void receiveSessionModifyRequest(android.telecom.VideoProfile)>:<public>:<android.telecom.Connection.VideoProvider>
<android.webkit.GeolocationPermissions: void allow(java.lang.String)>:<public>:<android.webkit.GeolocationPermissions>
<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.AbsSpinner: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.style.LeadingMarginSpan.Standard: int getLeadingMargin(boolean)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.content.AsyncTaskLoader: void cancelLoadInBackground()>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterById(long[])>:<public transient>:<android.app.DownloadManager.Query>
<android.nfc.tech.MifareClassic: int getTimeout()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.animation.OvershootInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.BaseInterpolator>
<android.widget.TextView: void beginBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.widget.TableLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioTrack: int setVolume(float)>:<public>:<android.media.AudioTrack>
<android.text.style.SuggestionSpan: int describeContents()>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode[] values()>:<public static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.hardware.camera2.CameraDevice.StateCallback: void onClosed(android.hardware.camera2.CameraDevice)>:<public>:<android.hardware.camera2.CameraDevice.StateCallback>
<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.json.JSONArray: boolean isNull(int)>:<public>:<org.json.JSONArray>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.ActivityManager.RunningServiceInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.app.ProgressDialog: void setProgressStyle(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<junit.runner.TestSuiteLoader: java.lang.Class load(java.lang.String)>:<public abstract>:<junit.runner.TestSuiteLoader>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>:<public static>:<android.media.CamcorderProfile>
<android.renderscript.ScriptIntrinsicYuvToRGB: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Rect: int hashCode()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.content.res.ColorStateList: boolean isStateful()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.app.backup.BackupAgentHelper: void addHelper(java.lang.String,android.app.backup.BackupHelper)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebView: boolean zoomIn()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.SystemClock: boolean setCurrentTimeMillis(long)>:<public static>:<android.os.SystemClock>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>:<public>:<android.location.LocationManager>
<android.widget.ScrollView: void requestLayout()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ActionMenuView: android.view.Menu getMenu()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.speech.tts.SynthesisRequest: int getSpeechRate()>:<public>:<android.speech.tts.SynthesisRequest>
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)>:<public>:<android.media.session.MediaSessionManager>
<android.widget.DatePicker: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.IpPrefix: void <clinit>()>:<static>:<android.net.IpPrefix:android.os.Parcelable>
<android.media.session.MediaSession: boolean isActive()>:<public>:<android.media.session.MediaSession>
<android.graphics.Matrix: float mapRadius(float)>:<public>:<android.graphics.Matrix>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.os.Debug: int getThreadExternalAllocSize()>:<public static>:<android.os.Debug>
<android.print.PrintJob: boolean isStarted()>:<public>:<android.print.PrintJob>
<android.webkit.WebView: void clearHistory()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.assist.AssistStructure: android.app.assist.AssistStructure.WindowNode getWindowNodeAt(int)>:<public>:<android.app.assist.AssistStructure:android.os.Parcelable>
<android.mtp.MtpDeviceInfo: java.lang.String getModel()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.view.ViewGroup.MarginLayoutParams: void setMarginStart(int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.text.Annotation: java.lang.String getValue()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.telecom.PhoneAccount: android.net.Uri getAddress()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.test.mock.MockContext: int getWallpaperDesiredMinimumHeight()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.KeyguardManager.KeyguardLock: void <init>(android.app.KeyguardManager)>:<>:<android.app.KeyguardManager.KeyguardLock>
<android.telecom.RemoteConnection: int getVideoState()>:<public>:<android.telecom.RemoteConnection>
<android.content.Loader: boolean isAbandoned()>:<public>:<android.content.Loader>
<android.opengl.GLES31Ext: void glBlendEquationiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.View: void onMeasure(int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.preference.Preference: boolean persistInt(int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TableRow.LayoutParams: void <init>(int,int)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.content.ContentProvider: android.content.Context getContext()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.os.MessageQueue: void addOnFileDescriptorEventListener(java.io.FileDescriptor,int,android.os.MessageQueue.OnFileDescriptorEventListener)>:<public>:<android.os.MessageQueue>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>:<public>:<android.media.MediaPlayer>
<android.widget.CompoundButton: void setButtonDrawable(int)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.Activity: void finishAfterTransition()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float)>:<public>:<android.widget.OverScroller>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>:<public>:<android.app.job.JobInfo.Builder>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<android.media.tv.TvInputService.Session: boolean onTune(android.net.Uri)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)>:<public static>:<android.text.TextUtils>
<android.app.admin.DevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>:<public>:<android.app.admin.DevicePolicyManager>
<android.util.SparseLongArray: int size()>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction build()>:<public>:<android.media.session.PlaybackState.CustomAction.Builder>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.RestrictionEntry: void <init>(java.lang.String,java.lang.String[])>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.Instrumentation: android.content.ComponentName getComponentName()>:<public>:<android.app.Instrumentation>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.storage.OnObbStateChangeListener: void onObbStateChange(java.lang.String,int)>:<public>:<android.os.storage.OnObbStateChangeListener>
<android.net.rtp.AudioStream: void join(android.net.rtp.AudioGroup)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.media.ImageReader: int getHeight()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.Parcel: void readStringArray(java.lang.String[])>:<public final>:<android.os.Parcel>
<android.hardware.camera2.CaptureResult.Key: void <init>()>:<>:<android.hardware.camera2.CaptureResult.Key>
<android.app.ApplicationErrorReport.CrashInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.telephony.CellSignalStrengthCdma: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.test.TouchUtils: int dragViewToY(android.test.ActivityInstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<android.bluetooth.BluetoothGattServerCallback: void onMtuChanged(android.bluetooth.BluetoothDevice,int)>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.content.pm.PackageInstaller.Session: void abandon()>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.view.GestureDetector.OnContextClickListener: boolean onContextClick(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnContextClickListener>
<android.mtp.MtpObjectInfo: int getCompressedSize()>:<public final>:<android.mtp.MtpObjectInfo>
<android.net.Uri: java.lang.String toString()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.preference.PreferenceActivity: void onBuildHeaders(java.util.List)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.MenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)>:<public abstract>:<android.view.MenuItem>
<android.media.AudioRecord: int getAudioFormat()>:<public>:<android.media.AudioRecord>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Path: boolean isEmpty()>:<public>:<android.graphics.Path>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>:<public>:<android.media.MediaMetadataRetriever>
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.print.PrintAttributes.MediaSize: int getWidthMils()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.util.LongSparseArray: void <init>()>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.app.Fragment: void setEnterTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.hardware.camera2.params.RggbChannelVector: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>:<public abstract>:<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener>
<android.test.mock.MockPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.provider.UserDictionary: void <init>()>:<public>:<android.provider.UserDictionary>
<android.content.ContentValues: void put(java.lang.String,byte[])>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.renderscript.Matrix4f: float get(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putString(java.lang.String,java.lang.String)>:<public>:<android.media.MediaMetadata.Builder>
<android.bluetooth.le.AdvertiseSettings: int describeContents()>:<public>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.Toolbar: android.graphics.drawable.Drawable getLogo()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: void setSource(int)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.ContentQueryMap: void requery()>:<public>:<android.content.ContentQueryMap:java.util.Observable>
<android.printservice.PrinterDiscoverySession: void onStartPrinterStateTracking(android.print.PrinterId)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.os.Parcel: void writeValue(java.lang.Object)>:<public final>:<android.os.Parcel>
<android.test.mock.MockCursor: int getPosition()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.BaseInterpolator>
<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.MotionEvent: int getPointerCount()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.renderscript.Matrix4f: boolean inverse()>:<public>:<android.renderscript.Matrix4f>
<android.preference.Preference: boolean isPersistent()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype build()>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.media.MediaDataSource: long getSize()>:<public abstract>:<android.media.MediaDataSource:java.io.Closeable>
<android.renderscript.Allocation: void resize(int)>:<public synchronized>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable.ShaderFactory getShaderFactory()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.content.RestrictionEntry: boolean getSelectedState()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.LayerDrawable: int getStartPadding()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.ScriptIntrinsicBLAS: void DTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.String,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.widget.AbsListView: void afterTextChanged(android.text.Editable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.provider.CalendarContract.Attendees: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>:<public static final>:<android.provider.CalendarContract.Attendees:android.provider.BaseColumns,android.provider.CalendarContract.AttendeesColumns,android.provider.CalendarContract.EventsColumns>
<android.provider.CallLog.Calls: void <init>()>:<public>:<android.provider.CallLog.Calls:android.provider.BaseColumns>
<android.util.ArraySet: void ensureCapacity(int)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.database.CursorWindow: void finalize()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.inputmethodservice.InputMethodService: void onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.TableRow: void onMeasure(int,int)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.HorizontalScrollView: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ProviderTestCase: void tearDown()>:<protected>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int,int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.telephony.CellInfoWcdma: int describeContents()>:<public>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.content.res.Resources.Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>:<public>:<android.content.res.Resources.Theme>
<android.test.mock.MockResources: android.content.res.XmlResourceParser getAnimation(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.ActionProvider.VisibilityListener: void onActionProviderVisibilityChanged(boolean)>:<public abstract>:<android.view.ActionProvider.VisibilityListener>
<android.graphics.drawable.DrawableWrapper: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.security.keystore.KeyInfo: boolean isInsideSecureHardware()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.widget.PopupMenu.OnDismissListener: void onDismiss(android.widget.PopupMenu)>:<public abstract>:<android.widget.PopupMenu.OnDismissListener>
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.View: void refreshDrawableState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int,int)>:<public>:<android.media.AudioTrack>
<android.service.voice.VoiceInteractionService: void onCreate()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.KeyEvent: int getModifierMetaStateMask()>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.VoiceInteractor.PickOptionRequest.Option: void <init>(java.lang.CharSequence,int)>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>:<public>:<android.hardware.camera2.CameraCaptureSession.CaptureCallback>
<android.text.style.EasyEditSpan: void <init>(android.app.PendingIntent)>:<public>:<android.text.style.EasyEditSpan:android.text.ParcelableSpan>
<android.telephony.SmsManager: void <init>()>:<>:<android.telephony.SmsManager>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.os.RemoteCallbackList: void kill()>:<public>:<android.os.RemoteCallbackList>
<android.widget.CheckedTextView: void setVisibility(int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.transition.Fade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.app.NativeActivity: void onLowMemory()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.transition.ChangeBounds: void setResizeClip(boolean)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.widget.GridLayout: int getRowCount()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>:<public>:<android.app.LocalActivityManager>
<android.telephony.CellSignalStrengthWcdma: int getLevel()>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.content.SyncRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncRequest:android.os.Parcelable>
<android.accounts.AccountManager: void <init>()>:<>:<android.accounts.AccountManager>
<android.media.AudioManager: boolean shouldVibrate(int)>:<public>:<android.media.AudioManager>
<android.content.pm.ComponentInfo: int getBannerResource()>:<public final>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.test.TouchUtils: void dragQuarterScreenDown(android.test.InstrumentationTestCase,android.app.Activity)>:<public static>:<android.test.TouchUtils>
<android.view.TextureView: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public>:<android.view.TextureView:android.view.View>
<android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.MediaStore.Audio.Genres.Members: void <init>()>:<public>:<android.provider.MediaStore.Audio.Genres.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.app.backup.BackupAgent: void onCreate()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.content.Context: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.renderscript.Element: android.renderscript.Element F16(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ShareActionProvider: android.view.View onCreateActionView()>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.content.IntentFilter: boolean hasDataSchemeSpecificPart(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.text.style.TextAppearanceSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.opengl.Matrix: void translateM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.text.LoginFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.widget.NumberPicker: boolean getWrapSelectorWheel()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>:<public static>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.bluetooth.BluetoothDevice: java.lang.String toString()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.telecom.CallAudioState: int describeContents()>:<public>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>:<public>:<android.telephony.SmsManager>
<android.widget.ImageView: boolean hasOverlappingRendering()>:<public>:<android.widget.ImageView:android.view.View>
<android.provider.Contacts.Extensions: void <init>()>:<>:<android.provider.Contacts.Extensions:android.provider.BaseColumns,android.provider.Contacts.ExtensionsColumns>
<android.widget.VideoView: void onAttachedToWindow()>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.media.RingtoneManager: void setType(int)>:<public>:<android.media.RingtoneManager>
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>:<public static>:<android.text.format.DateFormat>
<android.widget.TabWidget: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.content.Intent.FilterComparison: android.content.Intent getIntent()>:<public>:<android.content.Intent.FilterComparison>
<android.media.midi.MidiDevice.MidiConnection: void finalize()>:<protected>:<android.media.midi.MidiDevice.MidiConnection:java.io.Closeable>
<android.transition.ArcMotion: float getMinimumHorizontalAngle()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.view.ActionMode: void setCustomView(android.view.View)>:<public abstract>:<android.view.ActionMode>
<android.webkit.PermissionRequest: android.net.Uri getOrigin()>:<public abstract>:<android.webkit.PermissionRequest>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.ClientCertRequest: int getPort()>:<public abstract>:<android.webkit.ClientCertRequest>
<android.app.UiModeManager: void setNightMode(int)>:<public>:<android.app.UiModeManager>
<android.telecom.RemoteConnection: android.telecom.DisconnectCause getDisconnectCause()>:<public>:<android.telecom.RemoteConnection>
<android.media.ExifInterface: void <init>(java.lang.String)>:<public>:<android.media.ExifInterface>
<android.provider.ContactsContract.ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>:<public static>:<android.provider.ContactsContract.ProfileSyncState:android.provider.SyncStateContract.Columns>
<android.os.Parcel: android.os.IBinder readStrongBinder()>:<public final>:<android.os.Parcel>
<android.hardware.usb.UsbInterface: int getEndpointCount()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.content.ContextWrapper: java.io.File getObbDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.ViewTreeObserver: void dispatchOnDraw()>:<public final>:<android.view.ViewTreeObserver>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPath(java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.ExpandableListView: boolean expandGroup(int,boolean)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<junit.framework.TestCase: int countTestCases()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.mtp.MtpObjectInfo: int getSequenceNumber()>:<public final>:<android.mtp.MtpObjectInfo>
<android.test.SyncBaseInstrumentation: void setUp()>:<protected>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.MediaRouteActionProvider: boolean overridesItemVisibility()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.renderscript.ScriptIntrinsicBLAS: void CGEMV(int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.ListPopupWindow: boolean performItemClick(int)>:<public>:<android.widget.ListPopupWindow>
<android.view.ViewGroup: android.view.animation.Animation.AnimationListener getLayoutAnimationListener()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.ContextWrapper: android.content.res.Resources.Theme getTheme()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.Window: long getTransitionBackgroundFadeDuration()>:<public>:<android.view.Window>
<android.animation.Animator: boolean isStarted()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.bluetooth.le.AdvertiseSettings.Builder: void <init>()>:<public>:<android.bluetooth.le.AdvertiseSettings.Builder>
<android.test.ServiceTestCase: android.app.Service getService()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.Window: int getLocalFeatures()>:<protected final>:<android.view.Window>
<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetInitialHeader()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.text.style.CharacterStyle: void <init>()>:<public>:<android.text.style.CharacterStyle>
<android.os.Handler: boolean sendMessage(android.os.Message)>:<public final>:<android.os.Handler>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.TabHost: android.view.View getCurrentTabView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.media.MediaRecorder.AudioEncoder: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.AudioEncoder>
<android.text.DynamicLayout: int getLineCount()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.app.assist.AssistStructure.ViewNode: java.lang.CharSequence getText()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.app.UiAutomation: void waitForIdle(long,long)>:<public>:<android.app.UiAutomation>
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.webkit.JsResult: void <init>()>:<>:<android.webkit.JsResult>
<android.system.Os: void munlock(long,long)>:<public static>:<android.system.Os>
<android.app.Fragment: java.lang.String getTag()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.AbsSpinner: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>:<public static>:<android.graphics.BitmapFactory>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>:<public final>:<android.os.Handler>
<android.gesture.GestureLibraries: void <init>()>:<>:<android.gesture.GestureLibraries>
<android.accounts.AccountAuthenticatorActivity: void finish()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.Message: void sendToTarget()>:<public>:<android.os.Message:android.os.Parcelable>
<android.content.SearchRecentSuggestionsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.hardware.usb.UsbAccessory: java.lang.String getModel()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.provider.Contacts.ContactMethods: void <clinit>()>:<static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: void setSaveEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>:<public static>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBaseline()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<junit.runner.BaseTestRunner: void setLoading(boolean)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.telecom.DisconnectCause: void <init>(int,java.lang.String)>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.Drawable>
<android.view.View: boolean hasNestedScrollingParent()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int available()>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.graphics.Path: void incReserve(int)>:<public>:<android.graphics.Path>
<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>:<public>:<android.webkit.WebChromeClient>
<android.content.pm.PackageItemInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo.DisplayNameComparator:java.util.Comparator>
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.hardware.camera2.CaptureRequest.Builder: void removeTarget(android.view.Surface)>:<public>:<android.hardware.camera2.CaptureRequest.Builder>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.media.CameraProfile: void <init>()>:<public>:<android.media.CameraProfile>
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.MediaController.MediaPlayerControl: int getCurrentPosition()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.view.ViewStructure: void setContentDescription(java.lang.CharSequence)>:<public abstract>:<android.view.ViewStructure>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicBLAS: void DSYRK(int,int,double,android.renderscript.Allocation,double,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.test.mock.MockPackageManager: int[] getPackageGids(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.app.ActivityManager: int getLauncherLargeIconDensity()>:<public>:<android.app.ActivityManager>
<junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>:<public static>:<junit.framework.TestSuite:junit.framework.Test>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.net.InetAddress)>:<public>:<android.net.VpnService.Builder>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SentenceSuggestionsInfo[] onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.media.RemoteControlClient: void setPlaybackState(int)>:<public>:<android.media.RemoteControlClient>
<android.util.AttributeSet: int getIdAttributeResourceValue(int)>:<public abstract>:<android.util.AttributeSet>
<android.widget.GridLayout.LayoutParams: int hashCode()>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.res.AssetManager: void close()>:<public>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>:<public native>:<android.media.MediaDrm>
<android.app.usage.NetworkStats.Bucket: long getTxBytes()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>:<public>:<android.content.res.TypedArray>
<android.widget.TextView: int getLineHeight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>:<public static final>:<android.text.util.Linkify>
<android.database.CrossProcessCursor: boolean onMove(int,int)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.ActivityUnitTestCase: boolean isFinishCalled()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.app.VoiceInteractor: android.app.VoiceInteractor.Request[] getActiveRequests()>:<public>:<android.app.VoiceInteractor>
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.Scroller: void forceFinished(boolean)>:<public final>:<android.widget.Scroller>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.util.JsonReader: java.lang.String nextName()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.net.TrafficStats: long getTotalRxBytes()>:<public static>:<android.net.TrafficStats>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode.ThreadPolicy)>:<public static>:<android.os.StrictMode>
<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.text.style.AbsoluteSizeSpan: boolean getDip()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.nfc.NdefRecord: android.nfc.NdefRecord createTextRecord(java.lang.String,java.lang.String)>:<public static>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.media.MediaScannerConnection: boolean isConnected()>:<public synchronized>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.gesture.Prediction: java.lang.String toString()>:<public>:<android.gesture.Prediction>
<android.widget.Gallery: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.ExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.net.sip.SipAudioCall.Listener: void onCallEstablished(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.preference.Preference: boolean persistBoolean(boolean)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.hardware.TriggerEventListener: void <init>()>:<public>:<android.hardware.TriggerEventListener>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas()>:<public abstract>:<android.view.SurfaceHolder>
<android.view.View: void clearAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ContextWrapper: void enforcePermission(java.lang.String,int,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.DefaultDatabaseErrorHandler: void <init>()>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>:<public>:<android.content.BroadcastReceiver>
<android.graphics.pdf.PdfDocument.Page: android.graphics.pdf.PdfDocument.PageInfo getInfo()>:<public>:<android.graphics.pdf.PdfDocument.Page>
<android.provider.Telephony.Sms.Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>:<public static>:<android.provider.Telephony.Sms.Intents>
<android.graphics.Movie: boolean isOpaque()>:<public native>:<android.graphics.Movie>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.io.File)>:<public static>:<android.gesture.GestureLibraries>
<android.test.mock.MockPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>:<public>:<android.bluetooth.le.BluetoothLeAdvertiser>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: void postInvalidateOnAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.le.ScanRecord: java.lang.String getDeviceName()>:<public>:<android.bluetooth.le.ScanRecord>
<android.view.View: float getTranslationZ()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.renderscript.Script: void setVar(int,double)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.widget.CalendarView: int getFirstDayOfWeek()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.AbstractWindowedCursor: void checkPosition()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.content.Intent: java.lang.String toString()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerData()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.graphics.Paint: void finalize()>:<protected>:<android.graphics.Paint>
<android.content.ContentProviderOperation.Builder: void <init>()>:<>:<android.content.ContentProviderOperation.Builder>
<android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<org.json.JSONArray: java.lang.String toString(int)>:<public>:<org.json.JSONArray>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.app.Activity: void onContentChanged()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.inputmethodservice.Keyboard: int getHorizontalGap()>:<protected>:<android.inputmethodservice.Keyboard>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.VoiceInteractor.Prompt: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.os.Parcel: void setDataCapacity(int)>:<public final>:<android.os.Parcel>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.test.ViewAsserts: void assertRightAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.database.CursorWindow: int getNumRows()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>:<public>:<android.app.LocalActivityManager>
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>:<public>:<android.location.LocationManager>
<android.content.pm.PackageItemInfo: void <init>(android.os.Parcel)>:<protected>:<android.content.pm.PackageItemInfo>
<android.view.Choreographer: void <init>()>:<>:<android.view.Choreographer>
<android.content.pm.PackageInstaller: void abandonSession(int)>:<public>:<android.content.pm.PackageInstaller>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>:<public>:<android.telephony.TelephonyManager>
<android.telecom.ConnectionService: android.telecom.Connection onCreateIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>:<public>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri,int)>:<public>:<android.drm.DrmManagerClient>
<android.widget.GridLayout: void requestLayout()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.View: android.view.WindowInsets getRootWindowInsets()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaMetadataEditor: java.lang.Object getObject(int,java.lang.Object)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.telephony.CellSignalStrengthWcdma: int describeContents()>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.renderscript.Allocation: void ioSend()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.CursorWindow: java.lang.String getString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.content.Intent: android.content.Intent setType(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.AlteredCharSequence: java.lang.CharSequence subSequence(int,int)>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.preference.Preference: void setEnabled(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.inputmethod.InputBinding: void <clinit>()>:<static>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,int[][])>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.app.IntentService: void setIntentRedelivery(boolean)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.admin.DevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.telephony.SmsMessage: java.lang.String getMessageBody()>:<public>:<android.telephony.SmsMessage>
<android.widget.GridLayout.LayoutParams: void <init>()>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.View: int computeHorizontalScrollRange()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.json.JSONObject: int getInt(java.lang.String)>:<public>:<org.json.JSONObject>
<android.app.FragmentManager: android.app.Fragment findFragmentById(int)>:<public abstract>:<android.app.FragmentManager>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.wifi.p2p.WifiP2pDeviceList: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.database.CursorWrapper: int getColumnCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.drawable.Drawable: int getMinimumWidth()>:<public>:<android.graphics.drawable.Drawable>
<android.system.Os: void munmap(long,long)>:<public static>:<android.system.Os>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeySize(int)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.util.LongSparseArray: void put(long,java.lang.Object)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<org.json.JSONTokener: char nextClean()>:<public>:<org.json.JSONTokener>
<android.telecom.RemoteConference: void separate(android.telecom.RemoteConnection)>:<public>:<android.telecom.RemoteConference>
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onSessionModifyResponseReceived(android.telecom.RemoteConnection.VideoProvider,int,android.telecom.VideoProfile,android.telecom.VideoProfile)>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.view.KeyEvent.DispatcherState: void handleUpEvent(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.media.MediaDrm.ProvisionRequest: void <init>()>:<>:<android.media.MediaDrm.ProvisionRequest>
<android.provider.ContactsContract.CommonDataKinds.GroupMembership: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.GroupMembership:android.provider.ContactsContract.DataColumnsWithJoins>
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory getFactory()>:<public final>:<android.view.LayoutInflater>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.text.method.CharacterPickerDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference.Callback)>:<public final>:<android.telecom.RemoteConference>
<org.json.JSONObject: void <init>(java.lang.String)>:<public>:<org.json.JSONObject>
<android.widget.ScrollView: void setOverScrollMode(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: void setClipToPadding(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.admin.DevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>:<public>:<android.app.admin.DevicePolicyManager>
<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.hardware.Camera.Parameters: java.util.List getFocusAreas()>:<public>:<android.hardware.Camera.Parameters>
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent.PointerCoords)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: void setCameraDistance(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionPaused()>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.content.pm.LauncherApps: boolean isPackageEnabled(java.lang.String,android.os.UserHandle)>:<public>:<android.content.pm.LauncherApps>
<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.Manifest.permission: void <init>()>:<public>:<android.Manifest.permission>
<android.speech.SpeechRecognizer: void <init>()>:<>:<android.speech.SpeechRecognizer>
<android.provider.CalendarContract.EventDays: android.database.Cursor query(android.content.ContentResolver,int,int,java.lang.String[])>:<public static final>:<android.provider.CalendarContract.EventDays:android.provider.CalendarContract.EventDaysColumns>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addResolution(android.print.PrintAttributes.Resolution,boolean)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeath()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.Activity: void setContentView(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.RelativeLayout: void <init>(android.content.Context)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.camera2.params.BlackLevelPattern: int getOffsetForIndex(int,int)>:<public>:<android.hardware.camera2.params.BlackLevelPattern>
<android.app.Activity: void startActivity(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.database.AbstractWindowedCursor: long getLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.transition.ChangeBounds: void <init>()>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.renderscript.ScriptIntrinsicHistogram: void setDotCoefficients(float,float,float,float)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient.CustomViewCallback)>:<public>:<android.webkit.WebChromeClient>
<android.os.ParcelFileDescriptor: int describeContents()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.view.TextureView: android.graphics.Canvas lockCanvas()>:<public>:<android.view.TextureView:android.view.View>
<android.media.MediaRouter.VolumeCallback: void onVolumeUpdateRequest(android.media.MediaRouter.RouteInfo,int)>:<public abstract>:<android.media.MediaRouter.VolumeCallback>
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall.Listener)>:<public>:<android.net.sip.SipManager>
<android.hardware.Camera.Parameters: java.util.List getSupportedFocusModes()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.AdapterView: void setEmptyView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.animation.RotateAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.app.TimePickerDialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.util.LongSparseArray: long keyAt(int)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.widget.PopupWindow: boolean getOverlapAnchor()>:<public>:<android.widget.PopupWindow>
<android.database.sqlite.SQLiteDiskIOException: void <init>()>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.transition.TransitionSet: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.telecom.TelecomManager: void showInCallScreen(boolean)>:<public>:<android.telecom.TelecomManager>
<android.hardware.usb.UsbEndpoint: int getDirection()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.widget.QuickContactBadge: void setMode(int)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvContract: android.net.Uri buildChannelUri(long)>:<public static final>:<android.media.tv.TvContract>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setStartScrollBottom(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.content.res.Resources.Theme: android.content.res.Resources getResources()>:<public>:<android.content.res.Resources.Theme>
<android.widget.GridView: int computeVerticalScrollExtent()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.mock.MockContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.ViewParent: void bringChildToFront(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.Drawable[])>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.MediaController: void onFinishInflate()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>:<public>:<org.json.JSONObject>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onConfigured(android.hardware.camera2.CameraCaptureSession)>:<public abstract>:<android.hardware.camera2.CameraCaptureSession.StateCallback>
<android.text.style.AbsoluteSizeSpan: void <init>(int)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.hardware.camera2.params.MeteringRectangle: int getHeight()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.text.style.SuperscriptSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.Activity: void setProgressBarVisibility(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.content.res.Resources: int getColor(int)>:<public>:<android.content.res.Resources>
<android.test.ProviderTestCase: android.test.mock.MockContentResolver getMockContentResolver()>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.provider.MediaStore.Audio.Albums: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Albums:android.provider.BaseColumns,android.provider.MediaStore.Audio.AlbumColumns>
<android.view.View: boolean isPaddingOffsetRequired()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseAdapter: void <init>()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.widget.AbsListView: void layoutChildren()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.FragmentManager: android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment)>:<public abstract>:<android.app.FragmentManager>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.service.notification.NotificationListenerService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.preference.PreferenceScreen: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>:<public>:<android.app.WallpaperManager>
<android.graphics.DrawFilter: void <init>()>:<public>:<android.graphics.DrawFilter>
<android.renderscript.Allocation: android.view.Surface getSurface()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.animation.FloatArrayEvaluator: float[] evaluate(float,float[],float[])>:<public>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.widget.CalendarView: void setShownWeekCount(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>:<public>:<android.app.Instrumentation>
<android.renderscript.Element: android.renderscript.Element U16_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.bluetooth.BluetoothServerSocket: java.lang.String toString()>:<public>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telecom.RemoteConnection: int getConnectionCapabilities()>:<public>:<android.telecom.RemoteConnection>
<android.service.notification.StatusBarNotification: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>:<public abstract>:<android.os.IBinder>
<android.util.MonthDisplayHelper: int getMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>:<public static>:<android.net.http.SslCertificate>
<android.test.mock.MockCursor: int getColumnIndex(java.lang.String)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.Rating: boolean isThumbUp()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.Note: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Note:android.provider.ContactsContract.DataColumnsWithJoins>
<android.service.carrier.CarrierIdentifier: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.widget.HeaderViewListAdapter: int getHeadersCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.app.ActivityManager.TaskDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.provider.MediaStore.Audio.Playlists: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Playlists:android.provider.BaseColumns,android.provider.MediaStore.Audio.PlaylistsColumns>
<android.opengl.GLES10: void glLightModelf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.telephony.TelephonyManager: int getPhoneCount()>:<public>:<android.telephony.TelephonyManager>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.BitmapDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.view.View: boolean isFocusable()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,boolean)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.security.keystore.KeyInfo: int getUserAuthenticationValidityDurationSeconds()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.graphics.Region: void finalize()>:<protected>:<android.graphics.Region:android.os.Parcelable>
<android.view.View: void onDrawForeground(android.graphics.Canvas)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipSession.Listener: void onCallEnded(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.admin.SystemUpdatePolicy: java.lang.String toString()>:<public>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.media.tv.TvInputService.Session: void layoutSurface(int,int,int,int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioTrack: int write(byte[],int,int)>:<public>:<android.media.AudioTrack>
<android.app.MediaRouteButton: boolean performLongClick()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>:<public static final>:<android.database.DatabaseUtils>
<android.view.MotionEvent: float getHistoricalTouchMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AbsListView: void smoothScrollToPosition(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addTransportType(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.printservice.PrinterDiscoverySession: boolean isDestroyed()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.LocalServerSocket: void <init>(java.lang.String)>:<public>:<android.net.LocalServerSocket>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattCharacteristic,boolean,boolean,int,byte[])>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.telephony.CellInfoGsm: java.lang.String toString()>:<public>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.telephony.SignalStrength: void <init>()>:<>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeExtraValue(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String,int)>:<public>:<android.renderscript.Element.Builder>
<android.widget.Toolbar: android.view.Menu getMenu()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBlur: void setInput(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>:<public>:<android.telephony.TelephonyManager>
<android.os.ParcelFileDescriptor: void <clinit>()>:<static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<dalvik.system.DexFile: void finalize()>:<protected>:<dalvik.system.DexFile>
<android.location.LocationProvider: boolean supportsAltitude()>:<public>:<android.location.LocationProvider>
<android.view.MotionEvent.PointerCoords: void setAxisValue(int,float)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.widget.Switch: void setSplitTrack(boolean)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.test.PerformanceTestCase.Intermediates: void setInternalIterations(int)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)>:<public static>:<android.text.format.Time>
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.database.AbstractCursor: boolean moveToPosition(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.media.MediaDataSource: int readAt(long,byte[],int,int)>:<public abstract>:<android.media.MediaDataSource:java.io.Closeable>
<android.database.AbstractCursor: boolean moveToLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.Display: void <init>()>:<>:<android.view.Display>
<junit.framework.Assert: void fail()>:<public static>:<junit.framework.Assert>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.service.voice.VoiceInteractionSession: int getDisabledShowContext()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.graphics.SumPathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>:<public>:<android.graphics.SumPathEffect:android.graphics.PathEffect>
<android.util.Size: java.lang.String toString()>:<public>:<android.util.Size>
<android.nfc.tech.NfcB: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.nfc.tech.NfcA: short getSak()>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.content.pm.PackageInfo: java.lang.String toString()>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.view.WindowContentFrameStats: void <init>()>:<>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.app.ActivityManager: void <init>()>:<>:<android.app.ActivityManager>
<android.media.MediaDrm: void release()>:<public final native>:<android.media.MediaDrm>
<android.security.keystore.KeyInfo: java.util.Date getKeyValidityForOriginationEnd()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,int,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.transition.TransitionSet: android.transition.Transition removeListener(android.transition.Transition.TransitionListener)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.RouteInfo: boolean matches(java.net.InetAddress)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.widget.ImageView: void drawableHotspotChanged(float,float)>:<public>:<android.widget.ImageView:android.view.View>
<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>:<public>:<android.view.View.AccessibilityDelegate>
<android.view.View: int computeHorizontalScrollExtent()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.Uri: boolean equals(java.lang.Object)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.telecom.Connection.VideoProvider: void onSetDeviceOrientation(int)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.media.MediaCodec: void signalEndOfInputStream()>:<public final native>:<android.media.MediaCodec>
<android.widget.ProgressBar: void drawableHotspotChanged(float,float)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.hardware.SensorManager: void getAngleChange(float[],float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityEnd(java.util.Date)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.preference.RingtonePreference: boolean onActivityResult(int,int,android.content.Intent)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.database.CursorWrapper: int getInt(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.mtp.MtpStorageInfo: int getStorageId()>:<public final>:<android.mtp.MtpStorageInfo>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUnregisteredParameterValueSanitizer()>:<public>:<android.net.UrlQuerySanitizer>
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.Service: void onTaskRemoved(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.FragmentController: void reportLoaderStart()>:<public>:<android.app.FragmentController>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.ShareActionProvider: void <init>(android.content.Context)>:<public>:<android.widget.ShareActionProvider:android.view.ActionProvider>
<android.text.method.DateTimeKeyListener: int getInputType()>:<public>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.database.sqlite.SQLiteStatement: void execute()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.media.DeniedByServerException: void <init>(java.lang.String)>:<public>:<android.media.DeniedByServerException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.bluetooth.BluetoothGattCharacteristic: java.util.List getDescriptors()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.app.admin.DevicePolicyManager: void <init>()>:<>:<android.app.admin.DevicePolicyManager>
<android.provider.Settings.Global: void <init>()>:<public>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.widget.AbsListView: void setTranscriptMode(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.InputDevice: int getVendorId()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.Switch: void setTrackResource(int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.TextView: int getCompoundPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteDatabase: boolean enableWriteAheadLogging()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ContentProviderResult: int describeContents()>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.text.Selection: void <clinit>()>:<static>:<android.text.Selection>
<android.renderscript.Type: android.renderscript.Type createXYZ(android.renderscript.RenderScript,android.renderscript.Element,int,int,int)>:<public static>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.drawable.AnimatedVectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>:<public>:<android.graphics.Matrix>
<android.telephony.CellInfoWcdma: int hashCode()>:<public>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.opengl.GLES20: void glEnable(int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub.OnInflateListener)>:<public>:<android.view.ViewStub:android.view.View>
<android.hardware.Camera.Parameters: java.util.List getSupportedVideoSizes()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.TextView: android.text.Layout getLayout()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOut()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.view.View: void setClipBounds(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvView: java.lang.String getSelectedTrack(int)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.content.Loader: boolean onCancelLoad()>:<protected>:<android.content.Loader>
<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.content.Context: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>:<public>:<android.content.Context>
<android.hardware.camera2.params.Face: int getId()>:<public>:<android.hardware.camera2.params.Face>
<android.view.ViewGroup: void onNestedPreScroll(android.view.View,int,int,int[])>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.AbsListView: void setChoiceMode(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumWidth()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.media.ToneGenerator: void release()>:<public native>:<android.media.ToneGenerator>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setText(java.lang.CharSequence)>:<public>:<android.text.StaticLayout.Builder>
<android.test.ServiceTestCase: android.os.IBinder bindService(android.content.Intent)>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.graphics.drawable.DrawableWrapper: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.service.wallpaper.WallpaperService: void onCreate()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioTrack: void removeOnRoutingChangedListener(android.media.AudioTrack.OnRoutingChangedListener)>:<public>:<android.media.AudioTrack>
<android.app.Instrumentation: void sendCharacterSync(int)>:<public>:<android.app.Instrumentation>
<android.widget.QuickContactBadge: void <init>(android.content.Context)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>:<public>:<android.net.http.SslError>
<android.view.MotionEvent: float getTouchMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.ETC1Util: boolean isETC1Supported()>:<public static>:<android.opengl.ETC1Util>
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.ContentObservable: void registerObserver(java.lang.Object)>:<public volatile>:<android.database.ContentObservable:android.database.Observable>
<android.text.BoringLayout: int getEllipsisCount(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.Location: double getLatitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.transition.TransitionSet: android.transition.Transition removeTarget(android.view.View)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.UiAutomation: void clearWindowAnimationFrameStats()>:<public>:<android.app.UiAutomation>
<android.util.Rational: android.util.Rational parseRational(java.lang.String)>:<public static>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.hardware.Camera.Parameters: boolean getVideoStabilization()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.AbsListView: void onDetachedFromWindow()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaDescription: void <init>()>:<>:<android.media.MediaDescription:android.os.Parcelable>
<android.text.BoringLayout: void ellipsized(int,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenStart(java.lang.CharSequence,int)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.util.Size: boolean equals(java.lang.Object)>:<public>:<android.util.Size>
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createUnEnrollIntent()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.app.ProgressDialog: void setProgressPercentFormat(java.text.NumberFormat)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.view.ActionMode: void onWindowFocusChanged(boolean)>:<public>:<android.view.ActionMode>
<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewParent: void onNestedPreScroll(android.view.View,int,int,int[])>:<public abstract>:<android.view.ViewParent>
<android.graphics.drawable.Animatable: void stop()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.app.admin.DevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.media.tv.TvInputService.Session: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.net.sip.SipSession: java.lang.String getCallId()>:<public>:<android.net.sip.SipSession>
<android.widget.ListPopupWindow: int getHorizontalOffset()>:<public>:<android.widget.ListPopupWindow>
<android.telecom.Connection: void setConnectionCapabilities(int)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)>:<public>:<android.media.JetPlayer>
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.Typeface: void <clinit>()>:<static>:<android.graphics.Typeface>
<android.net.ConnectivityManager.NetworkCallback: void onLosing(android.net.Network,int)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.util.TypedValue: float getFraction(float,float)>:<public>:<android.util.TypedValue>
<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.net.Credentials: int getGid()>:<public>:<android.net.Credentials>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>:<public>:<android.media.AudioManager>
<android.app.Activity: boolean isVoiceInteractionRoot()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.ClipData.Item: java.lang.CharSequence coerceToText(android.content.Context)>:<public>:<android.content.ClipData.Item>
<android.net.sip.SipSession.Listener: void onRegistrationFailed(android.net.sip.SipSession,int,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.webkit.WebViewFragment: void onDestroy()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String toString()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.preference.Preference: int compareTo(java.lang.Object)>:<public volatile>:<android.preference.Preference:java.lang.Comparable>
<android.media.MediaMuxer: void setLocation(float,float)>:<public>:<android.media.MediaMuxer>
<android.opengl.GLES10: void glEnableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.view.View: void setScrollIndicators(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: void addView(android.view.View,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.Spannable.Factory: void <init>()>:<public>:<android.text.Spannable.Factory>
<android.media.MediaPlayer: void setAudioStreamType(int)>:<public>:<android.media.MediaPlayer>
<android.view.View: void setAccessibilityLiveRegion(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.Connection: void onAnswer()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.drm.DrmUtils.ExtendedMetadataParser: java.lang.String get(java.lang.String)>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.ImageView:android.view.View>
<android.os.Debug: void resetGlobalClassInitTime()>:<public static>:<android.os.Debug>
<android.test.ServiceTestCase: void <init>(java.lang.Class)>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>:<protected>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.widget.ListPopupWindow: void setDropDownGravity(int)>:<public>:<android.widget.ListPopupWindow>
<android.content.Intent: float getFloatExtra(java.lang.String,float)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.hardware.camera2.CaptureRequest: java.lang.Object getTag()>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.view.KeyEvent: int getSource()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setDenominator(java.lang.String)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.telephony.SubscriptionManager.OnSubscriptionsChangedListener: void <init>()>:<public>:<android.telephony.SubscriptionManager.OnSubscriptionsChangedListener>
<android.text.style.UnderlineSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.view.View: void onRtlPropertiesChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.Conference: android.telecom.CallAudioState getCallAudioState()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.text.DynamicLayout: int getEllipsizedWidth()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.opengl.GLSurfaceView.EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>:<public abstract>:<android.opengl.GLSurfaceView.EGLConfigChooser>
<android.webkit.WebView: boolean pageUp(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.os.UserManager: long getUserCreationTime(android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>:<public>:<android.hardware.SensorManager>
<android.preference.Preference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.View: boolean requestFocusFromTouch()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.ScriptIntrinsicHistogram create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.Surface: java.lang.String toString()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.View: void setEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: boolean requestWindowFeature(int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBottom()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.printservice.PrinterDiscoverySession: void onStopPrinterStateTracking(android.print.PrinterId)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.os.Messenger: int hashCode()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitAll()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebSyncManager: java.lang.Object clone()>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.net.IpPrefix: boolean equals(java.lang.Object)>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit valueOf(java.lang.String)>:<public static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.app.backup.BackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.widget.GridView: void setGravity(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.ContentProviderResult: java.lang.String toString()>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.os.StatFs: long getAvailableBytes()>:<public>:<android.os.StatFs>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDisallowedApplication(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.accounts.Account: void <init>(android.os.Parcel)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.view.MenuItem: boolean isEnabled()>:<public abstract>:<android.view.MenuItem>
<android.view.FrameStats: long getFramePresentedTimeNano(int)>:<public final>:<android.view.FrameStats>
<android.widget.RadioGroup: android.widget.RadioGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.bluetooth.BluetoothSocket: void connect()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)>:<public abstract>:<android.view.MenuItem.OnActionExpandListener>
<android.content.pm.ActivityInfo: void <clinit>()>:<static>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<junit.runner.BaseTestRunner: junit.runner.TestSuiteLoader getLoader()>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.telephony.CellSignalStrengthWcdma: int getAsuLevel()>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>:<public final>:<android.os.Handler>
<android.database.AbstractWindowedCursor: int getInt(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Parcel: void writeSizeF(android.util.SizeF)>:<public final>:<android.os.Parcel>
<android.service.voice.VoiceInteractionSession: void onHandleScreenshot(android.graphics.Bitmap)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.webkit.WebResourceResponse: void setData(java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.view.MotionEvent: float getSize(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: int getMeasuredWidth()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.Rect: boolean intersect(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.telecom.VideoProfile: boolean isVideo(int)>:<public static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.media.tv.TvTrackInfo: void <clinit>()>:<static>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.view.Window: void setReenterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.widget.TextView: void setScroller(android.widget.Scroller)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.BroadcastReceiver: void clearAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.R.raw: void <init>()>:<public>:<android.R.raw>
<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.widget.TextView: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.Visualizer: int setMeasurementMode(int)>:<public>:<android.media.audiofx.Visualizer>
<android.system.Os: void fsync(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.view.View: float getTopFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONStringer: java.lang.String toString()>:<public>:<org.json.JSONStringer>
<android.view.SurfaceView: void draw(android.graphics.Canvas)>:<public>:<android.view.SurfaceView:android.view.View>
<android.content.res.TypedArray: java.lang.String toString()>:<public>:<android.content.res.TypedArray>
<android.view.ViewGroup: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.transition.Visibility: void <init>()>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.media.audiofx.EnvironmentalReverb: void setProperties(android.media.audiofx.EnvironmentalReverb.Settings)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()>:<public>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.preference.Preference: void setSummary(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.AudioManager: boolean isMicrophoneMute()>:<public>:<android.media.AudioManager>
<org.apache.http.conn.ssl.StrictHostnameVerifier: java.lang.String toString()>:<public final>:<org.apache.http.conn.ssl.StrictHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.telecom.Connection: void onDisconnect()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.media.midi.MidiDevice: android.media.midi.MidiInputPort openInputPort(int)>:<public>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.opengl.GLES30: boolean glUnmapBuffer(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.SoundPool: int load(android.content.Context,int,int)>:<public>:<android.media.SoundPool>
<android.text.method.PasswordTransformationMethod: void <init>()>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.app.Notification.Builder: android.app.Notification.Builder setNumber(int)>:<public>:<android.app.Notification.Builder>
<dalvik.system.DexFile: void <init>(java.lang.String)>:<public>:<dalvik.system.DexFile>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.FaceDetector.Face: void <init>(android.media.FaceDetector)>:<>:<android.media.FaceDetector.Face>
<android.media.audiofx.BassBoost.OnParameterChangeListener: void onParameterChange(android.media.audiofx.BassBoost,int,int,short)>:<public abstract>:<android.media.audiofx.BassBoost.OnParameterChangeListener>
<android.telecom.Connection: android.telecom.Connection createFailedConnection(android.telecom.DisconnectCause)>:<public static>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.telephony.CellInfoGsm: int hashCode()>:<public>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.text.Layout: int getLineBaseline(int)>:<public final>:<android.text.Layout>
<android.test.mock.MockResources: int[] getIntArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.app.RemoteInput: void <init>()>:<>:<android.app.RemoteInput:android.os.Parcelable>
<android.os.Parcel: void writeDouble(double)>:<public final>:<android.os.Parcel>
<android.renderscript.ScriptGroup: java.lang.Object[] execute(java.lang.Object[])>:<public transient>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.graphics.YuvImage: int[] getStrides()>:<public>:<android.graphics.YuvImage>
<android.widget.Switch: void setShowText(boolean)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.ActionMode: void finish()>:<public abstract>:<android.view.ActionMode>
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>:<public>:<android.text.SpannableStringInternal>
<android.content.pm.ComponentInfo: boolean isEnabled()>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager.ResolveListener)>:<public>:<android.net.nsd.NsdManager>
<android.util.StateSet: int[] trimStateSet(int[],int)>:<public static>:<android.util.StateSet>
<android.view.View: android.graphics.drawable.Drawable getBackground()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.util.Rfc822Token: java.lang.String quoteName(java.lang.String)>:<public static>:<android.text.util.Rfc822Token>
<android.content.ContentValues: int size()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.view.Window: void setSharedElementEnterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.system.Os: int write(java.io.FileDescriptor,java.nio.ByteBuffer)>:<public static>:<android.system.Os>
<android.net.rtp.AudioCodec: void <clinit>()>:<static>:<android.net.rtp.AudioCodec>
<android.app.VoiceInteractor.PickOptionRequest.Option: int countSynonyms()>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.telecom.ConnectionService: android.telecom.RemoteConnection createRemoteIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>:<public final>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.bluetooth.BluetoothClass: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.preference.PreferenceFragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.graphics.drawable.LayerDrawable: int getLayerInsetRight(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.ClipData.Item: android.net.Uri getUri()>:<public>:<android.content.ClipData.Item>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>:<public>:<android.net.http.SslCertificate>
<android.hardware.Camera: void setParameters(android.hardware.Camera.Parameters)>:<public>:<android.hardware.Camera>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.security.keystore.KeyProtection: java.util.Date getKeyValidityStart()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.PointF: float length(float,float)>:<public static>:<android.graphics.PointF:android.os.Parcelable>
<android.content.pm.LauncherApps: void startAppDetailsActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)>:<public>:<android.content.pm.LauncherApps>
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>:<public static>:<android.content.ContentResolver>
<android.widget.PopupWindow: int getInputMethodMode()>:<public>:<android.widget.PopupWindow>
<android.opengl.GLES30: void glCopyBufferSubData(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telephony.CellInfo: int describeContents()>:<public>:<android.telephony.CellInfo:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession: void onRequestAbortVoice(android.service.voice.VoiceInteractionSession.AbortVoiceRequest)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.view.View: int getWidth()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.xmlpull.v1.sax2.Driver: void <init>()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.text.style.BackgroundColorSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.view.Display: void getRealSize(android.graphics.Point)>:<public>:<android.view.Display>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setMaxStreams(int)>:<public>:<android.media.SoundPool.Builder>
<android.preference.SwitchPreference: void setSwitchTextOff(java.lang.CharSequence)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.view.View: boolean onCheckIsTextEditor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.VpnService.Builder: android.net.VpnService.Builder setMtu(int)>:<public>:<android.net.VpnService.Builder>
<android.text.method.TextKeyListener.Capitalize: void <clinit>()>:<static>:<android.text.method.TextKeyListener.Capitalize:java.lang.Enum>
<android.service.voice.VoiceInteractionSession: void onCreate()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.content.pm.PermissionInfo: java.lang.String toString()>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>:<public final>:<android.content.Context>
<android.net.Proxy: int getDefaultPort()>:<public static final>:<android.net.Proxy>
<android.graphics.Rect: int centerX()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.appwidget.AppWidgetHost: void startListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.media.session.PlaybackState: int getState()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.media.MediaCodecInfo.VideoCapabilities: int getHeightAlignment()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.location.Address: java.lang.String getPremises()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.SearchView: void onActionViewCollapsed()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.view.View: int computeHorizontalScrollOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvTrackInfo: java.lang.String getLanguage()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.text.StaticLayout: int getTopPadding()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canConstantState()>:<public synchronized>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.content.pm.PathPermission: java.lang.String getWritePermission()>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.media.effect.EffectFactory: void <init>()>:<>:<android.media.effect.EffectFactory>
<android.opengl.GLSurfaceView: void finalize()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.ViewSwitcher: android.view.View getNextView()>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: int getVideoHeight()>:<public native>:<android.media.MediaPlayer>
<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.opengl.EGL14: boolean eglGetConfigs(android.opengl.EGLDisplay,android.opengl.EGLConfig[],int,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged(boolean)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int)>:<public static>:<android.gesture.GestureUtils>
<android.view.MenuItem: int getGroupId()>:<public abstract>:<android.view.MenuItem>
<android.content.pm.FeatureInfo: void <clinit>()>:<static>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation.AnimationListener)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.util.Property: void <init>(java.lang.Class,java.lang.String)>:<public>:<android.util.Property>
<android.app.LauncherActivity.IconResizer: android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable)>:<public>:<android.app.LauncherActivity.IconResizer>
<android.app.LauncherActivity: java.util.List makeListItems()>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Bitmap: void setHasAlpha(boolean)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.transition.TransitionValues: boolean equals(java.lang.Object)>:<public>:<android.transition.TransitionValues>
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.graphics.PathEffect: void <init>()>:<public>:<android.graphics.PathEffect>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>:<public static>:<org.xmlpull.v1.XmlPullParserFactory>
<android.view.ScaleGestureDetector: float getPreviousSpan()>:<public>:<android.view.ScaleGestureDetector>
<android.inputmethodservice.Keyboard: java.util.List getKeys()>:<public>:<android.inputmethodservice.Keyboard>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler,boolean)>:<public>:<android.view.GestureDetector>
<android.opengl.Matrix: void setIdentityM(float[],int)>:<public static>:<android.opengl.Matrix>
<android.app.AlarmManager.AlarmClockInfo: void <init>(long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.graphics.drawable.shapes.ArcShape: void <init>(float,float)>:<public>:<android.graphics.drawable.shapes.ArcShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLES31Ext: void glCopyImageSubDataEXT(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.renderscript.ScriptIntrinsicBLAS: void ZHPMV(int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.SimpleAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.content.ContentProvider: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView: void requestRender()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.SurfaceView: void setVisibility(int)>:<public>:<android.view.SurfaceView:android.view.View>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.PopupWindow>
<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>:<public>:<android.location.LocationManager>
<android.telecom.Connection: void setStatusHints(android.telecom.StatusHints)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.content.res.Resources.Theme: void finalize()>:<protected>:<android.content.res.Resources.Theme>
<android.media.tv.TvContentRating: void <init>()>:<>:<android.media.tv.TvContentRating>
<android.widget.ListPopupWindow: void setContentWidth(int)>:<public>:<android.widget.ListPopupWindow>
<android.test.InstrumentationTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.transition.ChangeClipBounds: void <init>()>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.Surface: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.text.style.AlignmentSpan.Standard: int getSpanTypeId()>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.bluetooth.BluetoothA2dp: void finalize()>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.accounts.AuthenticatorException: void <init>()>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.app.Activity: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>:<public>:<android.telephony.TelephonyManager>
<android.hardware.usb.UsbConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.test.mock.MockResources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.accessibility.AccessibilityEvent: void setAction(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.media.session.MediaSession.Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.Callback>
<android.app.DialogFragment: void setCancelable(boolean)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.widget.DigitalClock: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.animation.ValueAnimator: void pause()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>:<public>:<android.widget.PopupMenu>
<android.app.SearchableInfo: boolean queryAfterZeroResults()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.ExpandableListAdapter: int getGroupCount()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.View)>:<public>:<android.transition.Scene>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.media.MediaRouter.RouteGroup: void <init>()>:<>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.app.UiAutomation: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>:<public final>:<android.app.UiAutomation>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.tv.TvView: void reset()>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.hardware.Camera.Area: boolean equals(java.lang.Object)>:<public>:<android.hardware.Camera.Area>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double4)>:<public>:<android.renderscript.FieldPacker>
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>:<public static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRecorder.OutputFormat: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.OutputFormat>
<android.widget.TimePicker: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.CursorWrapper: boolean isNull(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.Window: void setFeatureDrawableResource(int,int)>:<public abstract>:<android.view.Window>
<android.hardware.usb.UsbConfiguration: boolean isRemoteWakeup()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.telephony.gsm.GsmCellLocation: int getLac()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>:<public static final>:<android.text.Selection>
<android.media.MediaRouter: void addUserRoute(android.media.MediaRouter.UserRouteInfo)>:<public>:<android.media.MediaRouter>
<android.location.Location: float bearingTo(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.media.audiofx.AudioEffect: void <init>()>:<>:<android.media.audiofx.AudioEffect>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>:<public>:<org.json.JSONArray>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>:<public static native>:<android.opengl.GLES10Ext>
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>:<public>:<android.content.res.Resources>
<android.media.MediaPlayer: void <init>()>:<public>:<android.media.MediaPlayer>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>:<public abstract>:<android.webkit.CookieManager>
<android.telephony.SubscriptionInfo: int getSubscriptionId()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>:<public static>:<android.util.Xml>
<android.media.MediaRouter.SimpleCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.security.keystore.KeyInfo: boolean isUserAuthenticationRequired()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.service.dreams.DreamService: void onWakeUp()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.content.Intent: void <init>(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>:<public>:<android.media.MediaCodec>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.Spinner: int getBaseline()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.text.Editable: android.text.InputFilter[] getFilters()>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()>:<public>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.text.util.Rfc822Token: java.lang.String getAddress()>:<public>:<android.text.util.Rfc822Token>
<android.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.app.DialogFragment: void setStyle(int,int)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.provider.MediaStore.Images.Media: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<android.view.ScaleGestureDetector: float getCurrentSpan()>:<public>:<android.view.ScaleGestureDetector>
<android.app.DialogFragment: void setShowsDialog(boolean)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.widget.Adapter: boolean hasStableIds()>:<public abstract>:<android.widget.Adapter>
<android.test.mock.MockResources: float getDimension(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.media.AudioRecord: int getRecordingState()>:<public>:<android.media.AudioRecord>
<android.graphics.Movie: boolean setTime(int)>:<public native>:<android.graphics.Movie>
<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.view.ViewGroup: void removeViewAt(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaExtractor: void unselectTrack(int)>:<public native>:<android.media.MediaExtractor>
<android.media.AudioTrack: int setNotificationMarkerPosition(int)>:<public>:<android.media.AudioTrack>
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>:<public>:<android.preference.PreferenceManager>
<android.opengl.GLES20: void glDeleteProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.Icon: int describeContents()>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.system.Os: java.lang.String gai_strerror(int)>:<public static>:<android.system.Os>
<android.app.admin.DevicePolicyManager: boolean setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.transition.Transition.TransitionListener: void onTransitionPause(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.view.accessibility.AccessibilityEvent: long getEventTime()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>:<public abstract>:<android.content.SharedPreferences>
<android.app.usage.NetworkStats: void finalize()>:<protected>:<android.app.usage.NetworkStats:java.lang.AutoCloseable>
<android.hardware.Camera.Parameters: int getZoom()>:<public>:<android.hardware.Camera.Parameters>
<android.nfc.tech.MifareClassic: void connect()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.location.Address: java.lang.String getUrl()>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.animation.Animator: void removeAllListeners()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.nfc.tech.NdefFormatable: boolean isConnected()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.media.SoundPool: void release()>:<public final>:<android.media.SoundPool>
<android.view.ViewDebug.RecyclerTraceType: void <clinit>()>:<static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.telecom.Connection: void onUnhold()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.media.session.MediaSession.Callback: void onPause()>:<public>:<android.media.session.MediaSession.Callback>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.view.View: boolean performHapticFeedback(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int[])>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: java.lang.CharSequence getContentDescription()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.text.style.TtsSpan.TextBuilder: android.text.style.TtsSpan.TextBuilder setText(java.lang.String)>:<public>:<android.text.style.TtsSpan.TextBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.text.method.ArrowKeyMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public final>:<android.content.ContentResolver>
<android.media.MediaMuxer: void release()>:<public>:<android.media.MediaMuxer>
<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.text.SpannableStringBuilder: void clear()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.media.MediaCodec: void releaseOutputBuffer(int,long)>:<public final>:<android.media.MediaCodec>
<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>:<public>:<android.graphics.Path>
<android.net.wifi.ScanResult: java.lang.String toString()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.widget.AbsListView: void onDisplayHint(int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.mock.MockPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.inputmethod.CursorAnchorInfo: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.view.ViewConfiguration: float getScrollFriction()>:<public static>:<android.view.ViewConfiguration>
<android.media.MediaExtractor: void setDataSource(java.lang.String,java.util.Map)>:<public final>:<android.media.MediaExtractor>
<android.text.method.DigitsKeyListener: void <init>()>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.util.EventLog: int writeEvent(int,java.lang.Object[])>:<public static native transient>:<android.util.EventLog>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.VideoView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.telecom.RemoteConnection.Callback: void onStatusHintsChanged(android.telecom.RemoteConnection,android.telecom.StatusHints)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.view.View: void setSoundEffectsEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setCapabilities(int)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.content.pm.Signature: char[] toChars()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.app.VoiceInteractor.Request: android.content.Context getContext()>:<public>:<android.app.VoiceInteractor.Request>
<android.graphics.Paint: float descent()>:<public native>:<android.graphics.Paint>
<android.util.MonthDisplayHelper: void <init>(int,int)>:<public>:<android.util.MonthDisplayHelper>
<android.widget.GridView: void smoothScrollToPosition(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceChanged(int)>:<public abstract>:<android.hardware.input.InputManager.InputDeviceListener>
<android.app.ActionBar: boolean isShowing()>:<public abstract>:<android.app.ActionBar>
<android.util.MutableInt: void <init>(int)>:<public>:<android.util.MutableInt>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectCustomSlowCalls()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.widget.HorizontalScrollView: void scrollTo(int,int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()>:<protected>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.gesture.Gesture: java.lang.Object clone()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.text.LoginFilter: void <init>()>:<>:<android.text.LoginFilter:android.text.InputFilter>
<android.opengl.GLSurfaceView: void onResume()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.Region.Op: void <clinit>()>:<static>:<android.graphics.Region.Op:java.lang.Enum>
<android.test.mock.MockPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.method.BaseMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.provider.ContactsContract.PhoneLookup: void <clinit>()>:<static>:<android.provider.ContactsContract.PhoneLookup:android.provider.BaseColumns,android.provider.ContactsContract.PhoneLookupColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns>
<android.webkit.WebView.WebViewTransport: void <init>(android.webkit.WebView)>:<public>:<android.webkit.WebView.WebViewTransport>
<android.opengl.GLES31: void glVertexAttribIFormat(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.system.Os: android.system.StructStatVfs statvfs(java.lang.String)>:<public static>:<android.system.Os>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setIgnoreBackoff(boolean)>:<public>:<android.content.SyncRequest.Builder>
<android.app.assist.AssistStructure.ViewNode: boolean isFocusable()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.ScriptIntrinsicBLAS: void DSPR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.graphics.Interpolator: void <init>(int)>:<public>:<android.graphics.Interpolator>
<junit.framework.TestSuite: int testCount()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>:<public>:<android.text.StaticLayout.Builder>
<android.widget.ImageView: void setImageAlpha(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.os.Parcelable.ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>:<public abstract>:<android.os.Parcelable.ClassLoaderCreator:android.os.Parcelable.Creator>
<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>:<public abstract>:<android.webkit.CookieManager>
<android.os.Debug: void startAllocCounting()>:<public static>:<android.os.Debug>
<android.app.ActivityManager.TaskDescription: int getPrimaryColor()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.widget.OverScroller: boolean isOverScrolled()>:<public>:<android.widget.OverScroller>
<android.app.ExpandableListActivity: void setSelectedGroup(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.view.textservice.SpellCheckerSubtype: int describeContents()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<org.json.JSONObject: long optLong(java.lang.String)>:<public>:<org.json.JSONObject>
<android.telephony.SubscriptionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES31Ext: void glFramebufferTextureEXT(int,int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>:<public transient>:<android.animation.AnimatorSet:android.animation.Animator>
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>:<public>:<android.inputmethodservice.Keyboard>
<android.widget.ListPopupWindow: void setSelection(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.ZoomButtonsController.OnZoomListener: void onZoom(boolean)>:<public abstract>:<android.widget.ZoomButtonsController.OnZoomListener>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)>:<public>:<android.drm.DrmInfoRequest>
<android.view.animation.DecelerateInterpolator: void <init>()>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.BaseInterpolator>
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.os.CountDownTimer: void cancel()>:<public final synchronized>:<android.os.CountDownTimer>
<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.text.method.ScrollingMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.TextView: int computeVerticalScrollExtent()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.accessibility.AccessibilityRecord: void setItemCount(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>:<public static final>:<android.text.util.Linkify>
<android.content.ClipboardManager: void <init>()>:<>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.system.OsConstants: boolean WIFSTOPPED(int)>:<public static>:<android.system.OsConstants>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glBindTransformFeedback(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.view.View: void invalidate(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ImageSwitcher: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBLAS: void CTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.preference.DialogPreference: int getDialogLayoutResource()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.CursorAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.provider.DocumentsContract: android.net.Uri buildTreeDocumentUri(java.lang.String,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.inputmethodservice.Keyboard.Key: void <init>(android.inputmethodservice.Keyboard.Row)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.test.mock.MockContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.speech.RecognitionListener: void onEvent(int,android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<android.app.PendingIntent: java.lang.String getTargetPackage()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.hardware.Sensor: java.lang.String getStringType()>:<public>:<android.hardware.Sensor>
<android.renderscript.FieldPacker: void <init>(int)>:<public>:<android.renderscript.FieldPacker>
<android.renderscript.Type: int getCount()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.Activity: void setImmersive(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.NetworkInfo: void <init>()>:<>:<android.net.NetworkInfo:android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.webkit.WebView: void setPictureListener(android.webkit.WebView.PictureListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.hardware.Camera.Parameters: java.lang.String flatten()>:<public>:<android.hardware.Camera.Parameters>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.test.ViewAsserts: void assertOffScreenAbove(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.app.FragmentManager: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public abstract>:<android.app.FragmentManager>
<org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.telecom.Connection: void onPostDialContinue(boolean)>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.service.voice.AlwaysOnHotwordDetector: boolean stopRecognition()>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureStore: void setOrientationStyle(int)>:<public>:<android.gesture.GestureStore>
<android.telecom.InCallService: java.util.List getCalls()>:<public final>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,int,android.view.Surface,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>:<public>:<android.media.projection.MediaProjection>
<android.media.session.PlaybackState.CustomAction: void <clinit>()>:<static>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.text.style.ScaleXSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.SyncParams: android.media.SyncParams setTolerance(float)>:<public>:<android.media.SyncParams>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.ListActivity: android.widget.ListView getListView()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.test.ApplicationTestCase: android.content.Context getSystemContext()>:<public>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>:<public final>:<android.view.LayoutInflater>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>:<public>:<android.graphics.Canvas>
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.wifi.p2p.WifiP2pManager.PeerListListener: void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.PeerListListener>
<android.graphics.Color: int red(int)>:<public static>:<android.graphics.Color>
<android.net.sip.SipSession: void setListener(android.net.sip.SipSession.Listener)>:<public>:<android.net.sip.SipSession>
<android.view.animation.Animation.AnimationListener: void onAnimationStart(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>:<public>:<android.location.LocationManager>
<android.opengl.GLES10: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES10>
<android.print.PrinterCapabilitiesInfo: java.util.List getResolutions()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.service.voice.VoiceInteractionSession: void onCancelRequest(android.service.voice.VoiceInteractionSession.Request)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.renderscript.ScriptIntrinsicBLAS: void SSBMV(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.provider.ContactsContract.Presence: void <init>()>:<public>:<android.provider.ContactsContract.Presence:android.provider.ContactsContract.StatusUpdates>
<android.service.notification.NotificationListenerService: void requestListenerHints(int)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>:<public>:<android.view.LayoutInflater>
<android.test.mock.MockApplication: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<android.os.Process: boolean supportsProcesses()>:<public static final>:<android.os.Process>
<android.graphics.Rect: boolean intersects(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setSendKeepAlive(boolean)>:<public>:<android.net.sip.SipProfile.Builder>
<android.view.animation.Animation: boolean getDetachWallpaper()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.KeyEvent: boolean isSystem()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.system.Os: int getgid()>:<public static>:<android.system.Os>
<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.json.JSONStringer: org.json.JSONStringer value(double)>:<public>:<org.json.JSONStringer>
<android.app.Activity: void closeOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.provider.Settings.Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.content.pm.PackageInstaller: void unregisterSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>:<public>:<android.content.pm.PackageInstaller>
<android.graphics.Matrix: java.lang.String toShortString()>:<public>:<android.graphics.Matrix>
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)>:<public>:<android.os.UserManager>
<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)>:<public static>:<android.text.TextUtils>
<dalvik.system.BaseDexClassLoader: java.util.Enumeration findResources(java.lang.String)>:<protected>:<dalvik.system.BaseDexClassLoader:java.lang.ClassLoader>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.net.sip.SipSession: boolean isInCall()>:<public>:<android.net.sip.SipSession>
<android.content.IntentFilter: int countDataPaths()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.ViewGroup: void startLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.http.SslCertificate: java.lang.String toString()>:<public>:<android.net.http.SslCertificate>
<android.widget.TableLayout: boolean isStretchAllColumns()>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothHealthCallback: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>:<public>:<android.bluetooth.BluetoothHealthCallback>
<android.view.View: void dispatchWindowFocusChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>:<public>:<android.telephony.SmsMessage>
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()>:<public>:<android.app.TaskStackBuilder>
<android.graphics.drawable.VectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Matrix4f: void loadScale(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.util.JsonWriter: android.util.JsonWriter beginArray()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.widget.ListPopupWindow: long getSelectedItemId()>:<public>:<android.widget.ListPopupWindow>
<android.test.mock.MockContext: boolean deleteDatabase(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.speech.tts.TextToSpeechService: int onIsValidVoiceName(java.lang.String)>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockCursor: boolean isClosed()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.database.Cursor: boolean moveToLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.View.AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.view.ViewStructure: int getTextSelectionStart()>:<public abstract>:<android.view.ViewStructure>
<android.content.IntentFilter: int countDataTypes()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context,android.os.Handler)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.test.AndroidTestRunner: void runTest()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.opengl.GLES31Ext: void glPrimitiveBoundingBoxEXT(float,float,float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES31Ext>
<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Canvas: void <init>()>:<public>:<android.graphics.Canvas>
<android.view.ScaleGestureDetector: float getFocusX()>:<public>:<android.view.ScaleGestureDetector>
<android.media.VolumeProvider: void onAdjustVolume(int)>:<public>:<android.media.VolumeProvider>
<android.content.pm.PackageInstaller.SessionInfo: android.content.Intent createDetailsIntent()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.view.ViewGroup: boolean getClipToPadding()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.MediaController.Callback: void onSessionDestroyed()>:<public>:<android.media.session.MediaController.Callback>
<android.graphics.Outline: void offset(int,int)>:<public>:<android.graphics.Outline>
<android.inputmethodservice.ExtractEditText: void startInternalChanges()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.test.mock.MockContext: java.io.File getCacheDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.nfc.tech.NfcB: void close()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.util.ArraySet: java.lang.String toString()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.content.RestrictionEntry: int getType()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.util.EventLog: int writeEvent(int,float)>:<public static native>:<android.util.EventLog>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setGravity(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.sip.SipSession: void unregister()>:<public>:<android.net.sip.SipSession>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Camera: void rotate(float,float,float)>:<public native>:<android.graphics.Camera>
<android.provider.ContactsContract.CommonDataKinds.Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>:<public static>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.location.Address: void setAdminArea(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setCase(java.lang.String)>:<public>:<android.text.style.TtsSpan.SemioticClassBuilder:android.text.style.TtsSpan.Builder>
<android.graphics.drawable.GradientDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.widget.RadioGroup: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.StrictMode.ThreadPolicy: void <init>()>:<>:<android.os.StrictMode.ThreadPolicy>
<android.opengl.GLES11: void <init>()>:<public>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.tv.TvTrackInfo: int getVideoHeight()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.transition.TransitionPropagation: void <init>()>:<public>:<android.transition.TransitionPropagation>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothAdapter getAdapter()>:<public>:<android.bluetooth.BluetoothManager>
<android.view.View: void addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabWidget: int getTabCount()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.tv.TvView: void setCallback(android.media.tv.TvView.TvInputCallback)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.Paint: boolean isFilterBitmap()>:<public final>:<android.graphics.Paint>
<android.test.suitebuilder.TestMethod: int hashCode()>:<public>:<android.test.suitebuilder.TestMethod>
<android.media.Ringtone: boolean isPlaying()>:<public>:<android.media.Ringtone>
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.database.CursorJoiner: java.util.Iterator iterator()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.widget.DatePicker: boolean getSpinnersShown()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void dragQuarterScreenDown(android.test.ActivityInstrumentationTestCase)>:<public static>:<android.test.TouchUtils>
<android.renderscript.FieldPacker: void align(int)>:<public>:<android.renderscript.FieldPacker>
<android.app.AlarmManager: void setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.view.inputmethod.InputConnectionWrapper: boolean clearMetaKeyStates(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.telephony.CellSignalStrength: void <init>()>:<>:<android.telephony.CellSignalStrength>
<android.database.DatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.DatabaseErrorHandler>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>:<public>:<android.graphics.Paint>
<android.preference.PreferenceFragment: void onDestroy()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBLAS: void SGEMV(int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.Observable: void unregisterObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.hardware.Camera.Parameters: int getExposureCompensation()>:<public>:<android.hardware.Camera.Parameters>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.Uri.Builder: android.net.Uri.Builder appendQueryParameter(java.lang.String,java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.appwidget.AppWidgetProvider: void <init>()>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.graphics.Paint: void <init>()>:<public>:<android.graphics.Paint>
<android.graphics.drawable.BitmapDrawable: void <init>(java.lang.String)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.MediaRouter.RouteGroup: void removeRoute(android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public abstract>:<android.content.BroadcastReceiver>
<android.transition.Transition: void <init>()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.content.pm.PackageManager: void <init>()>:<public>:<android.content.pm.PackageManager>
<android.renderscript.Element: android.renderscript.Element PROGRAM_FRAGMENT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.p2p.WifiP2pInfo: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.view.inputmethod.CompletionInfo: void <clinit>()>:<static>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.media.MediaRouter.RouteGroup: void setIconResource(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.tv.TvInputManager.TvInputCallback: void <init>()>:<public>:<android.media.tv.TvInputManager.TvInputCallback>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setCurrency(java.lang.String)>:<public>:<android.text.style.TtsSpan.MoneyBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.tv.TvTrackInfo: java.lang.String getId()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSubject(javax.security.auth.x500.X500Principal)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.renderscript.FieldPacker: void addU16(int)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>:<public static native>:<android.opengl.ETC1>
<android.service.media.MediaBrowserService.BrowserRoot: void <init>(java.lang.String,android.os.Bundle)>:<public>:<android.service.media.MediaBrowserService.BrowserRoot>
<android.graphics.Matrix: void set(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.telephony.CellIdentityLte: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.util.TimingLogger: void reset(java.lang.String,java.lang.String)>:<public>:<android.util.TimingLogger>
<android.widget.AbsListView: float getBottomFadingEdgeStrength()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaDrm: byte[] openSession()>:<public native>:<android.media.MediaDrm>
<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.Space: void <init>(android.content.Context)>:<public>:<android.widget.Space:android.view.View>
<android.app.FragmentTransaction: android.app.FragmentTransaction attach(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>:<public static final>:<android.database.DatabaseUtils>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AbsListView: void fling(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.app.PendingIntent)>:<public>:<android.net.ConnectivityManager>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.telephony.CellSignalStrengthCdma: void <clinit>()>:<static>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.renderscript.RenderScript: void finalize()>:<protected>:<android.renderscript.RenderScript>
<android.app.FragmentContainer: void <init>()>:<public>:<android.app.FragmentContainer>
<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>:<public>:<android.content.UriMatcher>
<android.content.SyncAdapterType: int hashCode()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.database.sqlite.SQLiteAccessPermException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.PskKeyManager: void <init>()>:<public>:<android.net.PskKeyManager>
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.webkit.DateSorter: long getBoundary(int)>:<public>:<android.webkit.DateSorter>
<android.widget.TabWidget: void addView(android.view.View)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.animation.AnimatorSet: void setStartDelay(long)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.MediaDrm: android.media.MediaDrm.ProvisionRequest getProvisionRequest()>:<public>:<android.media.MediaDrm>
<android.view.View: boolean dispatchNestedPreFling(float,float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>:<public static>:<android.util.Range>
<android.opengl.EGL14: boolean eglReleaseThread()>:<public static native>:<android.opengl.EGL14>
<android.net.wifi.p2p.WifiP2pManager.Channel: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pManager.Channel>
<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.opengl.GLES10: void glPopMatrix()>:<public static native>:<android.opengl.GLES10>
<android.view.animation.AnimationSet: void restrictDuration(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.webkit.WebChromeClient.FileChooserParams: void <init>()>:<public>:<android.webkit.WebChromeClient.FileChooserParams>
<android.service.carrier.CarrierMessagingService: void onFilterSms(android.service.carrier.MessagePdu,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.sax.Element: java.lang.String toString()>:<public>:<android.sax.Element>
<android.graphics.drawable.AnimatedVectorDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.widget.TextView: void setWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read()>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.os.DropBoxManager.Entry: java.lang.String getText(int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView.OnQueryTextListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.text.Layout: int getLineStart(int)>:<public abstract>:<android.text.Layout>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.View: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothHealth: void <init>()>:<>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.content.res.TypedArray: int getResourceId(int,int)>:<public>:<android.content.res.TypedArray>
<android.text.style.IconMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.VideoView: void pause()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.app.ActionBar.LayoutParams: void <init>(int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.opengl.GLES30: boolean glIsQuery(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telecom.InCallService: void setAudioRoute(int)>:<public final>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Path: void <init>()>:<public>:<android.graphics.Path>
<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>:<public abstract>:<android.widget.ThemedSpinnerAdapter:android.widget.SpinnerAdapter>
<android.content.SharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>:<public abstract>:<android.content.SharedPreferences>
<android.content.IntentFilter: int countActions()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>:<public>:<org.json.JSONArray>
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.test.mock.MockContext: java.io.File getFileStreamPath(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.nfc.tech.MifareClassic: void decrement(int,int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.net.http.HttpResponseCache: void flush()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.widget.ProgressBar: void setSecondaryProgressTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.content.SharedPreferences: java.util.Map getAll()>:<public abstract>:<android.content.SharedPreferences>
<android.telephony.CellIdentityWcdma: int getPsc()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.Notification: void <clinit>()>:<static>:<android.app.Notification:android.os.Parcelable>
<android.test.ViewAsserts: void assertRightAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<android.telecom.Conference: android.telecom.DisconnectCause getDisconnectCause()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeY()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.Gallery: boolean onSingleTapUp(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.bluetooth.BluetoothSocket: void close()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.Script: int getVarI(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.util.JsonWriter: android.util.JsonWriter beginObject()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.content.ContentProvider: boolean isTemporary()>:<protected>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.Application: void onLowMemory()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.media.MediaSync: void queueAudio(java.nio.ByteBuffer,int,long)>:<public>:<android.media.MediaSync>
<android.graphics.PixelFormat: boolean formatHasAlpha(int)>:<public static>:<android.graphics.PixelFormat>
<android.widget.DialerFilter: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiEnterpriseConfig: void setRealm(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.gesture.GestureLibrary: void <init>()>:<protected>:<android.gesture.GestureLibrary>
<android.view.ViewParent: void onNestedScroll(android.view.View,int,int,int,int)>:<public abstract>:<android.view.ViewParent>
<android.graphics.PointF: void set(float,float)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.os.Debug: void resetGlobalExternalAllocCount()>:<public static>:<android.os.Debug>
<android.telecom.PhoneAccount: android.telecom.PhoneAccount.Builder builder(android.telecom.PhoneAccountHandle,java.lang.CharSequence)>:<public static>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: void <init>()>:<>:<android.service.voice.VoiceInteractionSession.ConfirmationRequest:android.service.voice.VoiceInteractionSession.Request>
<android.gesture.GestureOverlayView: void setOrientation(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ContextThemeWrapper: android.content.res.Resources.Theme getTheme()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.renderscript.Matrix3f: void <init>()>:<public>:<android.renderscript.Matrix3f>
<android.widget.TextView: int getPaintFlags()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.job.JobService: boolean onStartJob(android.app.job.JobParameters)>:<public abstract>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.audiofx.LoudnessEnhancer: void <init>(int)>:<public>:<android.media.audiofx.LoudnessEnhancer:android.media.audiofx.AudioEffect>
<android.test.MoreAsserts: void assertEquals(java.lang.String,double[],double[])>:<public static>:<android.test.MoreAsserts>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES30: void glUniform1ui(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.Menu: int size()>:<public abstract>:<android.view.Menu>
<android.util.LruCache: java.lang.Object remove(java.lang.Object)>:<public final>:<android.util.LruCache>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.ScriptIntrinsicLUT create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()>:<public>:<android.net.UrlQuerySanitizer>
<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,int)>:<public>:<android.print.PrintJobInfo.Builder>
<android.net.Network: int describeContents()>:<public>:<android.net.Network:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void growArray(int,int)>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.app.assist.AssistStructure.ViewNode: float getTextSize()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.text.StaticLayout: int getEllipsisStart(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.hardware.camera2.CaptureResult.Key: boolean equals(java.lang.Object)>:<public final>:<android.hardware.camera2.CaptureResult.Key>
<android.content.pm.ApplicationInfo: void <clinit>()>:<static>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.os.Debug.MemoryInfo: void <init>()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.provider.MediaStore.Images: void <init>()>:<public>:<android.provider.MediaStore.Images>
<android.database.MergeCursor: short getShort(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(java.util.Locale)>:<public static>:<android.text.BidiFormatter>
<android.view.MotionEvent: float getHistoricalPressure(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.text.style.TtsSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.TtsSpan:android.text.ParcelableSpan>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.util.Log: int v(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.preference.Preference: java.lang.CharSequence getSummary()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.InputDevice.MotionRange: float getRange()>:<public>:<android.view.InputDevice.MotionRange>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaCodec: int dequeueInputBuffer(long)>:<public final>:<android.media.MediaCodec>
<android.service.wallpaper.WallpaperService.Engine: void <init>(android.service.wallpaper.WallpaperService)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.net.sip.SipProfile: java.lang.String getProxyAddress()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.util.Base64InputStream: int read()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setOrientation(int)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.PointFEvaluator: android.graphics.PointF evaluate(float,android.graphics.PointF,android.graphics.PointF)>:<public>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.hardware.Camera.Parameters: java.util.List getSupportedAntibanding()>:<public>:<android.hardware.Camera.Parameters>
<android.media.audiofx.EnvironmentalReverb: void setRoomHFLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.JetPlayer: boolean clearQueue()>:<public>:<android.media.JetPlayer>
<android.net.Uri.Builder: android.net.Uri.Builder path(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.animation.ObjectAnimator: android.animation.Animator clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.content.ContentValues: void <init>(int)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.widget.ImageSwitcher: void setImageResource(int)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.location.SettingInjectorService: int onStartCommand(android.content.Intent,int,int)>:<public final>:<android.location.SettingInjectorService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.system.Os: java.io.FileDescriptor dup2(java.io.FileDescriptor,int)>:<public static>:<android.system.Os>
<android.preference.RingtonePreference: int getRingtoneType()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.bluetooth.BluetoothGatt: boolean executeReliableWrite()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.os.Bundle: char getChar(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.AbsListView: void onNestedScroll(android.view.View,int,int,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.ViewDebug.FlagToString: int equals()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short4)>:<public>:<android.renderscript.FieldPacker>
<android.animation.AnimatorSet: void cancel()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFailed(java.lang.CharSequence)>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.hardware.Camera.Parameters: java.lang.String getColorEffect()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>:<public>:<android.media.AudioManager>
<android.telephony.SmsMessage.SubmitPdu: java.lang.String toString()>:<public>:<android.telephony.SmsMessage.SubmitPdu>
<android.util.ArraySet: boolean removeAll(java.util.Collection)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.telephony.CellIdentityGsm: int getLac()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.widget.TextView: int getMaxHeight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityEnd(java.util.Date)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.widget.NumberPicker: int computeVerticalScrollExtent()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.CalendarContract.EventDays: void <init>()>:<>:<android.provider.CalendarContract.EventDays:android.provider.CalendarContract.EventDaysColumns>
<android.graphics.RectF: float width()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.transition.ChangeClipBounds: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.inputmethodservice.KeyboardView: void invalidateAllKeys()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.BaseExpandableListAdapter: void <init>()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.net.ConnectivityManager: void releaseNetworkRequest(android.app.PendingIntent)>:<public>:<android.net.ConnectivityManager>
<android.text.ClipboardManager: boolean hasText()>:<public abstract>:<android.text.ClipboardManager>
<android.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar.OnNavigationListener)>:<public abstract>:<android.app.ActionBar>
<android.telecom.PhoneAccount: java.lang.String toString()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.Window: android.transition.Transition getReturnTransition()>:<public>:<android.view.Window>
<android.provider.CalendarContract.SyncState: void <clinit>()>:<static>:<android.provider.CalendarContract.SyncState:android.provider.SyncStateContract.Columns>
<android.os.WorkSource: void set(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.view.SearchEvent: android.view.InputDevice getInputDevice()>:<public>:<android.view.SearchEvent>
<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>:<public>:<android.graphics.Path>
<android.provider.ContactsContract.CommonDataKinds.Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.Loader: void onReset()>:<protected>:<android.content.Loader>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.MultiAutoCompleteTextView: void performValidation()>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.media.session.MediaController.TransportControls: void playFromUri(android.net.Uri,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>:<public>:<android.content.res.Resources>
<android.accounts.AccountAuthenticatorActivity: void <init>()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.ViewOverlay: void <init>()>:<>:<android.view.ViewOverlay>
<android.os.Bundle: android.util.Size getSize(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.view.SurfaceView: void <init>(android.content.Context)>:<public>:<android.view.SurfaceView:android.view.View>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.appwidget.AppWidgetManager: void <init>()>:<>:<android.appwidget.AppWidgetManager>
<android.animation.AnimatorSet: long getDuration()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.widget.NumberPicker: void computeScroll()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ActionBar>
<android.graphics.Matrix: void setSinCos(float,float)>:<public>:<android.graphics.Matrix>
<android.widget.Toolbar: boolean hideOverflowMenu()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiManager: boolean isP2pSupported()>:<public>:<android.net.wifi.WifiManager>
<android.widget.AbsListView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.notification.NotificationListenerService.Ranking: void <init>()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.view.View: boolean isOpaque()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.AdapterView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaCodecInfo.AudioCapabilities: int[] getSupportedSampleRates()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.widget.DialerFilter: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.session.PlaybackState: long getLastPositionUpdateTime()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.net.rtp.RtpStream: void associate(java.net.InetAddress,int)>:<public>:<android.net.rtp.RtpStream>
<android.view.InputEvent: boolean isFromSource(int)>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.widget.Gallery: void <init>(android.content.Context)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.test.mock.MockContext: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.preference.TwoStatePreference: void setChecked(boolean)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>:<public>:<android.media.AudioManager>
<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.VideoView: void setVideoPath(java.lang.String)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.app.ApplicationErrorReport.BatteryInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.BatteryInfo>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.Window: android.view.LayoutInflater getLayoutInflater()>:<public abstract>:<android.view.Window>
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setTranslationZ(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.xmlpull.v1.sax2.Driver: void parse(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.MenuItem>
<android.view.ActionMode.Callback2: void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect)>:<public>:<android.view.ActionMode.Callback2:android.view.ActionMode.Callback>
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.sip.SipAudioCall: void toggleMute()>:<public>:<android.net.sip.SipAudioCall>
<android.os.WorkSource: boolean diff(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.Callable: void <init>()>:<public>:<android.provider.ContactsContract.CommonDataKinds.Callable:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.provider.VoicemailContract.Status: void <clinit>()>:<static>:<android.provider.VoicemailContract.Status:android.provider.BaseColumns>
<android.graphics.pdf.PdfRenderer: boolean shouldScaleForPrinting()>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.widget.AbsListView: void onFilterComplete(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.gesture.GestureOverlayView: void setGesture(android.gesture.Gesture)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setNextFocusLeftId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.ContactsContract.PinnedPositions: void <init>()>:<public>:<android.provider.ContactsContract.PinnedPositions>
<android.app.FragmentController: void dispatchStart()>:<public>:<android.app.FragmentController>
<android.util.EventLogTags: void <init>()>:<public>:<android.util.EventLogTags>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.GestureDetector.SimpleOnGestureListener: void <init>()>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>:<public static>:<android.telephony.CellLocation>
<android.view.ViewGroup: void addView(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.sip.SipSession.Listener: void onCallBusy(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.print.PrintDocumentInfo: long getDataSize()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.YuvImage: byte[] getYuvData()>:<public>:<android.graphics.YuvImage>
<android.preference.ListPreference: java.lang.String getValue()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback)>:<public>:<android.media.session.MediaSession>
<android.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>:<public>:<android.view.ActionProvider>
<android.widget.NumberPicker: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.Vibrator: void cancel()>:<public abstract>:<android.os.Vibrator>
<android.printservice.PrinterDiscoverySession: java.util.List getTrackedPrinters()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>:<public>:<android.graphics.drawable.Drawable>
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder addRequirements(com.android.internal.util.Predicate[])>:<public final transient>:<android.test.suitebuilder.TestSuiteBuilder>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattDescriptor)>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix getMatrix()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.test.mock.MockResources: void getValue(int,android.util.TypedValue,boolean)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.HeterogeneousExpandableList: int getGroupType(int)>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.test.AndroidTestCase: void tearDown()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: int getType()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public final>:<android.content.ContentResolver>
<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>:<public>:<android.content.res.Resources>
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>:<public>:<android.os.storage.StorageManager>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.ViewBinder getViewBinder()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>:<public>:<android.location.LocationManager>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.ViewStub: int getLayoutResource()>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.SlidingDrawer: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.security.keystore.KeyGenParameterSpec: boolean isUserAuthenticationRequired()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.telecom.Call.Details: java.lang.String getCallerDisplayName()>:<public>:<android.telecom.Call.Details>
<android.opengl.GLSurfaceView: void onDetachedFromWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,android.content.res.Resources.Theme)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: void setMaxHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaRouter.VolumeCallback: void onVolumeSetRequest(android.media.MediaRouter.RouteInfo,int)>:<public abstract>:<android.media.MediaRouter.VolumeCallback>
<android.renderscript.ScriptIntrinsicConvolve3x3: void <init>()>:<>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.DialogFragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.usage.NetworkStats.Bucket: long getStartTimeStamp()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public static>:<android.content.ContentResolver>
<android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>:<public static>:<android.os.Environment>
<android.widget.ExpandableListAdapter: boolean hasStableIds()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.hardware.Sensor: int getFifoMaxEventCount()>:<public>:<android.hardware.Sensor>
<android.renderscript.Element: android.renderscript.Element I16_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.media.MediaRouter.RouteInfo: android.view.Display getPresentationDisplay()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan build()>:<public>:<android.text.style.TtsSpan.Builder>
<android.location.Location: java.lang.String getProvider()>:<public>:<android.location.Location:android.os.Parcelable>
<android.view.animation.AnimationSet: void setStartOffset(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.text.SpannableStringBuilder: int hashCode()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.Path: void toggleInverseFillType()>:<public>:<android.graphics.Path>
<android.graphics.pdf.PdfDocument: void finishPage(android.graphics.pdf.PdfDocument.Page)>:<public>:<android.graphics.pdf.PdfDocument>
<android.widget.RemoteViews: void <init>(android.widget.RemoteViews,android.widget.RemoteViews)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.database.ContentObservable: void dispatchChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsic3DLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.bluetooth.BluetoothAdapter: void closeProfileProxy(int,android.bluetooth.BluetoothProfile)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowAttached()>:<public abstract>:<android.view.ViewTreeObserver.OnWindowAttachListener>
<android.view.MotionEvent: int getActionIndex()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CalendarView.OnDateChangeListener: void onSelectedDayChange(android.widget.CalendarView,int,int,int)>:<public abstract>:<android.widget.CalendarView.OnDateChangeListener>
<android.graphics.Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.mtp.MtpObjectInfo: long getDateCreated()>:<public final>:<android.mtp.MtpObjectInfo>
<android.widget.TableLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.ScriptIntrinsicBLAS: void CGEMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.hardware.camera2.params.Face: int getScore()>:<public>:<android.hardware.camera2.params.Face>
<android.view.KeyEvent: boolean isGamepadButton(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Fragment.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.media.MediaDescription: java.lang.String toString()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaRouter.UserRouteInfo: void setStatus(java.lang.CharSequence)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: android.view.View.OnFocusChangeListener getOnFocusChangeListener()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View,int)>:<public>:<android.widget.PopupMenu>
<android.view.View: int getAccessibilityTraversalAfter()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.app.FragmentManager: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>:<public abstract>:<android.app.FragmentManager>
<android.test.mock.MockContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.View: void setDuplicateParentStateEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSMessageHandler getMessageHandler()>:<public>:<android.renderscript.RenderScript>
<android.media.MediaRecorder: void setAudioEncoder(int)>:<public native>:<android.media.MediaRecorder>
<android.widget.Gallery: void setUnselectedAlpha(float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.database.CursorWindow: boolean isNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setComposingText(int,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.hardware.input.InputManager: int[] getInputDeviceIds()>:<public>:<android.hardware.input.InputManager>
<android.util.SparseLongArray: void put(int,long)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.graphics.drawable.Icon: void loadDrawableAsync(android.content.Context,android.os.Message)>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.net.nsd.NsdServiceInfo: void setServiceType(java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.util.SparseBooleanArray: boolean get(int)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>:<public static final>:<android.database.DatabaseUtils>
<android.app.FragmentBreadCrumbs: void onBackStackChanged()>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hardware.Sensor: boolean isWakeUpSensor()>:<public>:<android.hardware.Sensor>
<android.provider.MediaStore.Video: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Video>
<android.net.wifi.WifiInfo: int getFrequency()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.test.ProviderTestCase: android.test.IsolatedContext getMockContext()>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewStub: void setLayoutResource(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.renderscript.RenderScript.RSErrorHandler: void <init>()>:<public>:<android.renderscript.RenderScript.RSErrorHandler:java.lang.Runnable>
<android.widget.Scroller: int getStartY()>:<public final>:<android.widget.Scroller>
<android.app.PendingIntent: int describeContents()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.system.Os: java.net.SocketAddress getsockname(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.media.MediaFormat: android.media.MediaFormat createAudioFormat(java.lang.String,int,int)>:<public static final>:<android.media.MediaFormat>
<android.print.PrintAttributes.Margins: java.lang.String toString()>:<public>:<android.print.PrintAttributes.Margins>
<android.provider.CalendarContract.CalendarEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor)>:<public static>:<android.provider.CalendarContract.CalendarEntity:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.CalendarColumns>
<android.service.carrier.CarrierMessagingService: void onDownloadMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.PendingIntent: void cancel()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.widget.ShareActionProvider.OnShareTargetSelectedListener: boolean onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent)>:<public abstract>:<android.widget.ShareActionProvider.OnShareTargetSelectedListener>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.hardware.camera2.CaptureFailure: long getFrameNumber()>:<public>:<android.hardware.camera2.CaptureFailure>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>:<public>:<android.content.res.TypedArray>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>:<public>:<android.location.LocationManager>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>:<public abstract>:<android.view.MenuItem>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.BroadcastReceiver: boolean getAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.inputmethodservice.ExtractEditText: boolean onTextContextMenuItem(int)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.LinearLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>:<public>:<android.graphics.Paint>
<org.xmlpull.v1.sax2.Driver: void setErrorHandler(org.xml.sax.ErrorHandler)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.graphics.Paint.Join: android.graphics.Paint.Join[] values()>:<public static>:<android.graphics.Paint.Join:java.lang.Enum>
<android.util.StringBuilderPrinter: void <init>(java.lang.StringBuilder)>:<public>:<android.util.StringBuilderPrinter:android.util.Printer>
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String,java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.database.MatrixCursor: void addRow(java.lang.Iterable)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setWeekday(int)>:<public>:<android.text.style.TtsSpan.DateBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.AnimatedVectorDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.view.GestureDetector.OnGestureListener: void onShowPress(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.app.VoiceInteractor.ConfirmationRequest: void onConfirmationResult(boolean,android.os.Bundle)>:<public>:<android.app.VoiceInteractor.ConfirmationRequest:android.app.VoiceInteractor.Request>
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>:<public>:<android.preference.PreferenceManager>
<android.util.SparseArray: java.lang.String toString()>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.print.PrinterCapabilitiesInfo.Builder: void <init>(android.print.PrinterId)>:<public>:<android.print.PrinterCapabilitiesInfo.Builder>
<android.test.MoreAsserts: void assertContentsInAnyOrder(java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.app.ProgressDialog: void setSecondaryProgress(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.drawable.GradientDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.util.ArrayMap: boolean containsValue(java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.os.Environment: void <init>()>:<public>:<android.os.Environment>
<android.webkit.WebSyncManager: void run()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.renderscript.Script.FieldBase: void <init>()>:<protected>:<android.renderscript.Script.FieldBase>
<android.webkit.WebSettings: int getTextZoom()>:<public abstract>:<android.webkit.WebSettings>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface.OnDismissListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.service.notification.StatusBarNotification: java.lang.String getTag()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.location.Location: float getBearing()>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>:<public final>:<android.content.ContentResolver>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,java.nio.IntBuffer,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.renderscript.Element: android.renderscript.Element F16_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.view.animation.CycleInterpolator: void <init>(float)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.BaseInterpolator>
<android.view.ViewGroup: void bringChildToFront(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.ViewGroup: void removeAllViews()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaDrm: byte[] getPropertyByteArray(java.lang.String)>:<public native>:<android.media.MediaDrm>
<android.media.audiofx.AudioEffect: void setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener)>:<public>:<android.media.audiofx.AudioEffect>
<android.app.VoiceInteractor.Prompt: int countVoicePrompts()>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.opengl.GLES20: void glDisable(int)>:<public static native>:<android.opengl.GLES20>
<android.telecom.RemoteConference: void unhold()>:<public>:<android.telecom.RemoteConference>
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.view.animation.BounceInterpolator: void <init>()>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.BaseInterpolator>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>:<public abstract>:<android.bluetooth.BluetoothProfile.ServiceListener>
<android.opengl.GLES31: void glGetBooleani_v(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.content.IntentFilter: java.lang.String getDataType(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.ExpandableListActivity: void onGroupCollapse(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityManager.RunningServiceInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.animation.TypeConverter: java.lang.Object convert(java.lang.Object)>:<public abstract>:<android.animation.TypeConverter>
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.MotionEvent: float getTouchMajor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetails(int,java.lang.String,long,long)>:<public>:<android.app.usage.NetworkStatsManager>
<android.widget.SlidingDrawer: void unlock()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: int getTop()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.util.MutableBoolean: void <init>(boolean)>:<public>:<android.util.MutableBoolean>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.text.method.MetaKeyKeyListener: long handleKeyUp(long,int,android.view.KeyEvent)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.app.ActionBar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.renderscript.Element: android.renderscript.Element F64_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean,android.os.Bundle)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.print.PrintAttributes.Resolution: java.lang.String getId()>:<public>:<android.print.PrintAttributes.Resolution>
<android.view.accessibility.AccessibilityManager: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.print.PrintJobInfo: void <clinit>()>:<static>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.webkit.WebHistoryItem: java.lang.Object clone()>:<protected volatile>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.view.View: android.view.View focusSearch(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodec.BufferInfo: void <init>()>:<public>:<android.media.MediaCodec.BufferInfo>
<android.widget.RemoteViewsService: void <init>()>:<public>:<android.widget.RemoteViewsService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaExtractor: boolean getSampleCryptoInfo(android.media.MediaCodec.CryptoInfo)>:<public native>:<android.media.MediaExtractor>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request addRequestHeader(java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.content.ContentProviderOperation: java.lang.String[] resolveSelectionArgsBackReferences(android.content.ContentProviderResult[],int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.view.animation.AnimationSet: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.test.InstrumentationTestCase: void sendKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: int getAccessibilityLiveRegion()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputConnection: boolean requestCursorUpdates(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.media.MediaSync: void setSurface(android.view.Surface)>:<public>:<android.media.MediaSync>
<android.app.PendingIntent: void send()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryEffects()>:<public static>:<android.media.audiofx.AudioEffect>
<org.json.JSONObject: org.json.JSONArray toJSONArray(org.json.JSONArray)>:<public>:<org.json.JSONObject>
<android.os.Debug: void resetGlobalExternalAllocSize()>:<public static>:<android.os.Debug>
<android.view.View.DragShadowBuilder: void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)>:<public>:<android.view.View.DragShadowBuilder>
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActivityManager.RunningTaskInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)>:<public>:<android.speech.tts.TextToSpeech>
<android.print.PrinterInfo: void <clinit>()>:<static>:<android.print.PrinterInfo:android.os.Parcelable>
<android.view.View: boolean startNestedScroll(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: float getTextSize()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewStructure: java.lang.CharSequence getHint()>:<public abstract>:<android.view.ViewStructure>
<android.app.ActivityManager.TaskDescription: void <init>()>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.widget.ListPopupWindow: int getAnimationStyle()>:<public>:<android.widget.ListPopupWindow>
<android.print.PrintAttributes: void <init>()>:<>:<android.print.PrintAttributes:android.os.Parcelable>
<android.media.MediaMetadata: boolean containsKey(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.content.pm.PackageItemInfo: void <init>()>:<public>:<android.content.pm.PackageItemInfo>
<android.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.graphics.pdf.PdfRenderer: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.util.AtomicFile: void delete()>:<public>:<android.util.AtomicFile>
<android.widget.OverScroller: void abortAnimation()>:<public>:<android.widget.OverScroller>
<android.print.PageRange: int hashCode()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.graphics.drawable.ColorDrawable: void <init>()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.graphics.Typeface: void finalize()>:<protected>:<android.graphics.Typeface>
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentResolver>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>:<public final transient>:<android.content.Context>
<android.print.PrintDocumentInfo: java.lang.String toString()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.media.midi.MidiDevice: android.media.midi.MidiDevice.MidiConnection connectPorts(android.media.midi.MidiInputPort,int)>:<public>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.nfc.NfcAdapter.CreateNdefMessageCallback: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)>:<public abstract>:<android.nfc.NfcAdapter.CreateNdefMessageCallback>
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()>:<protected>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.app.backup.FullBackupDataOutput: void <init>()>:<>:<android.app.backup.FullBackupDataOutput>
<android.content.BroadcastReceiver: boolean getDebugUnregister()>:<public final>:<android.content.BroadcastReceiver>
<android.view.View: void setHapticFeedbackEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.AbsListView: long[] getCheckedItemIds()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.webkit.WebView: int computeHorizontalScrollRange()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaMuxer: int addTrack(android.media.MediaFormat)>:<public>:<android.media.MediaMuxer>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources.Theme)>:<public>:<android.content.res.Resources>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteQuery: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.widget.AdapterView: boolean canAnimate()>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.Gallery: void dispatchSetPressed(boolean)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.View: void buildLayer()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean onNestedFling(android.view.View,float,float,boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.util.Size: int getWidth()>:<public>:<android.util.Size>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.tv.TvView.TvInputCallback: void onChannelRetuned(java.lang.String,android.net.Uri)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES30: void glGenQueries(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.GLES30: java.nio.Buffer glMapBufferRange(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hardware.usb.UsbAccessory: java.lang.String toString()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.widget.TextView: int getMaxEms()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void <init>(android.inputmethodservice.InputMethodService)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.media.tv.TvContract.Channels: void <init>()>:<>:<android.media.tv.TvContract.Channels:android.media.tv.TvContract.BaseTvColumns>
<android.provider.ContactsContract.PinnedPositions: void pin(android.content.ContentResolver,long,int)>:<public static>:<android.provider.ContactsContract.PinnedPositions>
<android.widget.GridLayout: void onViewAdded(android.view.View)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.test.mock.MockResources: int getColor(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.speech.RecognitionListener: void onPartialResults(android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<android.location.Criteria: int getPowerRequirement()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>:<public>:<android.view.animation.LayoutAnimationController>
<android.opengl.GLES20: void glUniform2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>:<public transient>:<android.nfc.NfcAdapter>
<android.app.FragmentController: android.os.Parcelable saveAllState()>:<public>:<android.app.FragmentController>
<android.transition.TransitionSet: android.transition.TransitionSet removeListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.nfc.tech.TagTechnology: void connect()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>:<public abstract>:<android.content.Context>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager.Query)>:<public>:<android.app.DownloadManager>
<android.provider.Settings.Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.bluetooth.BluetoothProfile: java.util.List getDevicesMatchingConnectionStates(int[])>:<public abstract>:<android.bluetooth.BluetoothProfile>
<android.media.ImageReader: android.media.Image acquireNextImage()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.app.LauncherActivity: android.content.Intent getTargetIntent()>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Canvas: void restoreToCount(int)>:<public>:<android.graphics.Canvas>
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)>:<public static>:<android.security.KeyChain>
<android.view.OrientationEventListener: boolean canDetectOrientation()>:<public>:<android.view.OrientationEventListener>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType valueOf(java.lang.String)>:<public static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.animation.LayoutTransition: void removeChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.telecom.Conference: android.os.Bundle getExtras()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.hardware.camera2.CaptureRequest: int hashCode()>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.graphics.Bitmap: int getScaledHeight(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.ImageButton: boolean onSetAlpha(int)>:<protected>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.database.sqlite.SQLiteProgram: void <init>()>:<>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.ViewTreeObserver.OnGlobalFocusChangeListener: void onGlobalFocusChanged(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewTreeObserver.OnGlobalFocusChangeListener>
<android.location.Criteria: int getBearingAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.database.CursorWindow: boolean allocRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.location.Address: void setThoroughfare(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.View: void setNextFocusDownId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.AndroidTestRunner: void <init>()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.view.inputmethod.InputMethodSession: void viewClicked(boolean)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.renderscript.FieldPacker: void addObj(android.renderscript.BaseObj)>:<public>:<android.renderscript.FieldPacker>
<android.net.NetworkInfo: java.lang.String getReason()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.bluetooth.BluetoothHealthAppConfiguration: void <clinit>()>:<static>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.ViewManager>
<android.hardware.camera2.CameraManager: void unregisterTorchCallback(android.hardware.camera2.CameraManager.TorchCallback)>:<public>:<android.hardware.camera2.CameraManager>
<android.gesture.GestureOverlayView: void <init>(android.content.Context)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.job.JobParameters: int getJobId()>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.security.keystore.KeyNotYetValidException: void <init>()>:<public>:<android.security.keystore.KeyNotYetValidException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onPeerDimensionsChanged(android.telecom.RemoteConnection.VideoProvider,int,int)>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.media.AudioTrack: void pause()>:<public>:<android.media.AudioTrack>
<android.renderscript.Matrix4f: void set(int,int,float)>:<public>:<android.renderscript.Matrix4f>
<android.hardware.Camera.Parameters: void setPreviewFpsRange(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.GLES10: void glLightx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityWindowInfo: int getChildCount()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.telecom.RemoteConference: void swap()>:<public>:<android.telecom.RemoteConference>
<android.telecom.InCallService.VideoCall: void setZoom(float)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.net.NetworkCapabilities: boolean equals(java.lang.Object)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int,int)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.widget.Gallery: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>:<public>:<android.graphics.Paint>
<android.database.MergeCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.service.carrier.MessagePdu: void <init>(java.util.List)>:<public>:<android.service.carrier.MessagePdu:android.os.Parcelable>
<android.graphics.ColorMatrix: void set(float[])>:<public>:<android.graphics.ColorMatrix>
<android.widget.CursorAdapter: boolean hasStableIds()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>:<public>:<android.app.WallpaperManager>
<android.view.WindowContentFrameStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.widget.TableLayout: void setStretchAllColumns(boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.MergeCursor: float getFloat(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.Uri: java.lang.String decode(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Instrumentation: boolean invokeMenuActionSync(android.app.Activity,int,int)>:<public>:<android.app.Instrumentation>
<android.app.MediaRouteButton: void onDetachedFromWindow()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.preference.PreferenceGroup: int getPreferenceCount()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.renderscript.Sampler.Builder: void setWrapT(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.widget.TextView: void setHighlightColor(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.LoginFilter.PasswordFilterGMail: void <init>(boolean)>:<public>:<android.text.LoginFilter.PasswordFilterGMail:android.text.LoginFilter>
<android.preference.PreferenceCategory: boolean isEnabled()>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.os.Environment: java.lang.String getStorageState(java.io.File)>:<public static>:<android.os.Environment>
<android.widget.Spinner: void onMeasure(int,int)>:<protected>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.animation.AnimatorListenerAdapter: void <init>()>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.app.Fragment: boolean getAllowEnterTransitionOverlap()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.Window.Callback: void onActionModeFinished(android.view.ActionMode)>:<public abstract>:<android.view.Window.Callback>
<android.media.MediaPlayer: void setAuxEffectSendLevel(float)>:<public>:<android.media.MediaPlayer>
<android.graphics.Bitmap.Config: void <clinit>()>:<static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.app.UiAutomation: android.os.ParcelFileDescriptor executeShellCommand(java.lang.String)>:<public>:<android.app.UiAutomation>
<android.telephony.CellSignalStrengthLte: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.text.method.MovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.app.ActivityManager.TaskDescription: void <clinit>()>:<static>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.net.ProxyInfo: java.lang.String[] getExclusionList()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.gesture.Prediction: void <init>()>:<>:<android.gesture.Prediction>
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.bluetooth.le.AdvertiseData: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.view.Window: android.view.Window getContainer()>:<public final>:<android.view.Window>
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.renderscript.Script.FieldID: void <init>()>:<>:<android.renderscript.Script.FieldID:android.renderscript.BaseObj>
<org.xmlpull.v1.XmlPullParserFactory: boolean isNamespaceAware()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.view.ViewGroup.LayoutParams: void <init>(int,int)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.test.mock.MockCursor: boolean isLast()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.RemoteControlClient: android.media.session.MediaSession getMediaSession()>:<public>:<android.media.RemoteControlClient>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String,java.lang.String)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.widget.ListPopupWindow: void setSoftInputMode(int)>:<public>:<android.widget.ListPopupWindow>
<android.transition.Transition: android.transition.Transition addListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>:<public final>:<android.os.Parcel>
<android.view.KeyEvent: boolean hasNoModifiers()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.backup.FileBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.os.Debug: void resetGlobalFreedSize()>:<public static>:<android.os.Debug>
<android.renderscript.Matrix3f: float get(int,int)>:<public>:<android.renderscript.Matrix3f>
<android.test.mock.MockPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.widget.TextView: int getOffsetForPosition(float,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES31: void glDispatchCompute(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setBackoffCriteria(long,int)>:<public>:<android.app.job.JobInfo.Builder>
<android.content.ClipData: void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData.Item)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.webkit.WebView: void postUrl(java.lang.String,byte[])>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.gesture.GestureStore: void load(java.io.InputStream)>:<public>:<android.gesture.GestureStore>
<android.net.wifi.WifiManager.WifiLock: void finalize()>:<protected>:<android.net.wifi.WifiManager.WifiLock>
<android.app.PendingIntent: void send(int)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.database.ContentObservable: void dispatchChange(boolean,android.net.Uri)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.animation.Keyframe: float getFraction()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>:<protected>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>:<public>:<android.graphics.drawable.Drawable>
<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView.RecyclerListener)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.midi.MidiInputPort: void <init>()>:<>:<android.media.midi.MidiInputPort:android.media.midi.MidiReceiver,java.io.Closeable>
<android.telephony.SignalStrength: int getCdmaEcio()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.animation.TypeConverter: void <init>(java.lang.Class,java.lang.Class)>:<public>:<android.animation.TypeConverter>
<android.widget.EdgeEffect: void onAbsorb(int)>:<public>:<android.widget.EdgeEffect>
<android.view.ViewTreeObserver.OnGlobalLayoutListener: void onGlobalLayout()>:<public abstract>:<android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.net.RouteInfo: java.lang.String getInterface()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.app.ActivityManager: android.util.Size getAppTaskThumbnailSize()>:<public>:<android.app.ActivityManager>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telecom.Connection: void setExtras(android.os.Bundle)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo.Builder setContentRect(android.graphics.Rect)>:<public>:<android.graphics.pdf.PdfDocument.PageInfo.Builder>
<android.os.HandlerThread: int getThreadId()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.renderscript.ScriptIntrinsicBLAS: void ZGEMV(int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.PopupMenu: void dismiss()>:<public>:<android.widget.PopupMenu>
<android.app.SearchableInfo: int getImeOptions()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.ActionMenuView: int getPopupTheme()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.tv.TvView.TimeShiftPositionCallback: void <init>()>:<public>:<android.media.tv.TvView.TimeShiftPositionCallback>
<android.text.method.ScrollingMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.util.SizeF: void <init>(float,float)>:<public>:<android.util.SizeF>
<android.widget.AbsListView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.util.DisplayMetrics: void setToDefaults()>:<public>:<android.util.DisplayMetrics>
<org.json.JSONTokener: org.json.JSONException syntaxError(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.ClipboardManager.OnPrimaryClipChangedListener: void onPrimaryClipChanged()>:<public abstract>:<android.content.ClipboardManager.OnPrimaryClipChangedListener>
<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.renderscript.Element: android.renderscript.Element I64_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.content.Intent: short getShortExtra(java.lang.String,short)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.preference.DialogPreference: void setDialogLayoutResource(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.drawable.DrawableContainer: void jumpToCurrentState()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ListPopupWindow: void show()>:<public>:<android.widget.ListPopupWindow>
<android.transition.ArcMotion: void setMaximumAngle(float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.String)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.opengl.ETC1Util.ETC1Texture: java.nio.ByteBuffer getData()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.graphics.drawable.LayerDrawable: void setPadding(int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: void <init>()>:<>:<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.widget.QuickContactBadge: void onClick(android.view.View)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.TableLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaRouter: void <init>()>:<>:<android.media.MediaRouter>
<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.backup.BackupDataInput: boolean readNextHeader()>:<public>:<android.app.backup.BackupDataInput>
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.text.TextDirectionHeuristics: void <init>()>:<public>:<android.text.TextDirectionHeuristics>
<android.telecom.RemoteConnection.Callback: void onVideoStateChanged(android.telecom.RemoteConnection,int)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.graphics.ColorMatrix: void setSaturation(float)>:<public>:<android.graphics.ColorMatrix>
<android.content.CursorLoader: android.net.Uri getUri()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.media.MediaCodec: android.media.Image getInputImage(int)>:<public>:<android.media.MediaCodec>
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.service.voice.VoiceInteractionSession: android.content.Context getContext()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.hardware.camera2.params.Face: android.graphics.Point getLeftEyePosition()>:<public>:<android.hardware.camera2.params.Face>
<android.nfc.NdefRecord: void <init>(short,byte[],byte[],byte[])>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.transition.Transition.TransitionListener: void onTransitionResume(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.widget.AbsListView: int getVerticalScrollbarWidth()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: java.io.File getObbDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.TextView: int getMaxLines()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Paint: void setStrikeThruText(boolean)>:<public native>:<android.graphics.Paint>
<android.view.MotionEvent: float getOrientation()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.hardware.Camera.Parameters: void setGpsTimestamp(long)>:<public>:<android.hardware.Camera.Parameters>
<android.nfc.NdefRecord: android.nfc.NdefRecord createExternal(java.lang.String,java.lang.String,byte[])>:<public static>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.widget.SeekBar.OnSeekBarChangeListener: void onProgressChanged(android.widget.SeekBar,int,boolean)>:<public abstract>:<android.widget.SeekBar.OnSeekBarChangeListener>
<android.app.ActivityManager.TaskDescription: void <init>(android.app.ActivityManager.TaskDescription)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.view.animation.Animation: boolean hasEnded()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.renderscript.ScriptIntrinsicHistogram: void <init>()>:<>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.media.audiofx.EnvironmentalReverb: short getDensity()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats.Bucket querySummaryForDevice(int,java.lang.String,long,long)>:<public>:<android.app.usage.NetworkStatsManager>
<android.text.format.Time: int getJulianDay(long,long)>:<public static>:<android.text.format.Time>
<android.os.Process: void <init>()>:<public>:<android.os.Process>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Paint: void <init>(android.graphics.Paint)>:<public>:<android.graphics.Paint>
<android.provider.Settings.System: void <init>()>:<public>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.transition.Transition: android.transition.Transition excludeChildren(android.view.View,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>:<public>:<android.bluetooth.le.AdvertiseCallback>
<android.media.session.MediaController.PlaybackInfo: int getMaxVolume()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.widget.ExpandableListAdapter: boolean isEmpty()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.widget.AbsListView: long pointToRowId(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.Element: android.renderscript.Element RGB_565(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>:<public static>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.hardware.Camera: void stopSmoothZoom()>:<public final native>:<android.hardware.Camera>
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.BaseInterpolator>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setDisplayIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getRealm()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.http.HttpResponseCache: void delete()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31: void glDrawElementsIndirect(int,int,long)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)>:<public>:<android.app.TaskStackBuilder>
<android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.widget.HeaderViewListAdapter: boolean isEnabled(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.ClipData: void addItem(android.content.ClipData.Item)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>:<public>:<android.app.Instrumentation>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.provider.Browser: void <init>()>:<public>:<android.provider.Browser>
<android.os.BaseBundle: void putDouble(java.lang.String,double)>:<public>:<android.os.BaseBundle>
<android.hardware.camera2.params.LensShadingMap: void <init>()>:<>:<android.hardware.camera2.params.LensShadingMap>
<android.preference.TwoStatePreference: void setSummaryOn(int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.media.MediaRouter: android.media.MediaRouter.UserRouteInfo createUserRoute(android.media.MediaRouter.RouteCategory)>:<public>:<android.media.MediaRouter>
<android.test.TouchUtils: void longClickView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.media.ImageWriter: int getFormat()>:<public>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES10: void glLogicOp(int)>:<public static native>:<android.opengl.GLES10>
<android.media.MediaRouter: void selectRoute(int,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter>
<android.renderscript.Element.DataKind: void <clinit>()>:<static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.app.ActivityManager: boolean isUserAMonkey()>:<public static>:<android.app.ActivityManager>
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.media.MediaExtractor: java.util.Map getPsshInfo()>:<public>:<android.media.MediaExtractor>
<android.telecom.Conference: void onCallAudioStateChanged(android.telecom.CallAudioState)>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.text.method.DateKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.telephony.SmsMessage.MessageClass: android.telephony.SmsMessage.MessageClass valueOf(java.lang.String)>:<public static>:<android.telephony.SmsMessage.MessageClass:java.lang.Enum>
<android.widget.TableRow: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyChainException: void <init>()>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public>:<android.content.ContentProviderClient>
<android.media.MediaPlayer: android.media.MediaTimestamp getTimestamp()>:<public>:<android.media.MediaPlayer>
<android.util.ArrayMap: void putAll(java.util.Map)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.widget.AbsListView: void setFriction(float)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.OperationCanceledException: void <init>()>:<public>:<android.os.OperationCanceledException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.ContentValues: void putAll(android.content.ContentValues)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>:<public static native>:<android.opengl.ETC1>
<android.appwidget.AppWidgetHost: void clearViews()>:<protected>:<android.appwidget.AppWidgetHost>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.service.wallpaper.WallpaperService.Engine: void setOffsetNotificationsEnabled(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.textservice.SpellCheckerSession: void <init>()>:<>:<android.view.textservice.SpellCheckerSession>
<android.view.MotionEvent: void recycle()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.AbsSavedState: void <init>(android.os.Parcel)>:<protected>:<android.view.AbsSavedState:android.os.Parcelable>
<android.media.MediaRouter.Callback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.text.AlteredCharSequence: void <init>()>:<>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.text.util.Linkify.TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>:<public abstract>:<android.text.util.Linkify.TransformFilter>
<android.media.RemoteControlClient.OnMetadataUpdateListener: void onMetadataUpdate(int,java.lang.Object)>:<public abstract>:<android.media.RemoteControlClient.OnMetadataUpdateListener>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Notification.Action.Builder: android.app.Notification.Action build()>:<public>:<android.app.Notification.Action.Builder>
<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.ScriptIntrinsicBLAS: void SSYMM(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.HorizontalScrollView: void fling(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder named(java.lang.String)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<android.media.audiofx.Virtualizer.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.hardware.camera2.CaptureRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.text.DynamicLayout: int getParagraphDirection(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>:<public>:<android.hardware.SensorManager>
<android.location.Location: void setSpeed(float)>:<public>:<android.location.Location:android.os.Parcelable>
<android.net.sip.SipAudioCall.Listener: void onCallHeld(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.view.View: int getNextFocusUpId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setZ(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.system.Os: int write(java.io.FileDescriptor,byte[],int,int)>:<public static>:<android.system.Os>
<android.app.job.JobInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.view.ViewPropertyAnimator: long getDuration()>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.assist.AssistStructure.ViewNode: int getLeft()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.widget.TextClock: void onDetachedFromWindow()>:<protected>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.webkit.WebView: void onPause()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.Element: android.renderscript.Element U32_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.QuickContactBadge: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.service.wallpaper.WallpaperService.Engine: void onTouchEvent(android.view.MotionEvent)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>:<public>:<android.telephony.TelephonyManager>
<android.app.backup.RestoreObserver: void <init>()>:<public>:<android.app.backup.RestoreObserver>
<android.util.SparseArray: void remove(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.test.RenamingDelegatingContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterId,java.lang.String,int)>:<public>:<android.print.PrinterInfo.Builder>
<android.widget.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebChromeClient: boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient.FileChooserParams)>:<public>:<android.webkit.WebChromeClient>
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayOriginatingAddress()>:<public>:<android.telephony.gsm.SmsMessage>
<android.content.res.Resources: int getDimensionPixelSize(int)>:<public>:<android.content.res.Resources>
<android.app.TimePickerDialog: void onTimeChanged(android.widget.TimePicker,int,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.speech.tts.TextToSpeech.EngineInfo: java.lang.String toString()>:<public>:<android.speech.tts.TextToSpeech.EngineInfo>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.Toast: int getDuration()>:<public>:<android.widget.Toast>
<android.net.LocalSocket: int getSendBufferSize()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.NoCopySpan.Concrete: void <init>()>:<public>:<android.text.NoCopySpan.Concrete:android.text.NoCopySpan>
<android.view.ViewStub: void <init>(android.content.Context,int)>:<public>:<android.view.ViewStub:android.view.View>
<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)>:<public>:<android.telephony.TelephonyManager>
<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>:<public>:<android.content.res.Resources>
<android.service.carrier.CarrierIdentifier: java.lang.String getMnc()>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.hardware.Camera.Parameters: java.util.List getSupportedJpegThumbnailSizes()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.animation.Animator: void resume()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.Paint>
<android.telephony.CellIdentityGsm: int getMcc()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.content.RestrictionEntry: java.lang.String[] getAllSelectedStrings()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.view.FrameStats: long getStartTimeNano()>:<public final>:<android.view.FrameStats>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.net.sip.SipManager: boolean isApiSupported(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.service.voice.VoiceInteractionSession: void onLockscreenShown()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.test.ActivityUnitTestCase: void setActivityContext(android.content.Context)>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES20: boolean glIsProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.net.wifi.WifiConfiguration: boolean isPasspoint()>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.os.Debug: void stopAllocCounting()>:<public static>:<android.os.Debug>
<android.media.MediaFormat: int getInteger(java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.location.GpsSatellite: void <init>()>:<>:<android.location.GpsSatellite>
<android.nfc.FormatException: void <init>()>:<public>:<android.nfc.FormatException:java.lang.Exception,java.lang.Throwable>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothSocket: int getMaxTransmitPacketSize()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.provider.SearchRecentSuggestions: void clearHistory()>:<public>:<android.provider.SearchRecentSuggestions>
<android.widget.TextClock: java.lang.CharSequence getFormat12Hour()>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.location.Address: void setFeatureName(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.os.Bundle: java.lang.ClassLoader getClassLoader()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.hardware.usb.UsbRequest: void close()>:<public>:<android.hardware.usb.UsbRequest>
<android.media.MediaSyncEvent: void <init>()>:<>:<android.media.MediaSyncEvent>
<android.text.TextPaint: void <init>()>:<public>:<android.text.TextPaint:android.graphics.Paint>
<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.media.tv.TvInputService.Session: void notifyTrackSelected(int,java.lang.String)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.hardware.usb.UsbInterface: int getInterfaceClass()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder includePackages(java.lang.String[])>:<public transient>:<android.test.suitebuilder.TestSuiteBuilder>
<android.webkit.WebMessage: void <init>(java.lang.String,android.webkit.WebMessagePort[])>:<public>:<android.webkit.WebMessage>
<org.json.JSONTokener: java.lang.String nextTo(char)>:<public>:<org.json.JSONTokener>
<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.print.PrintJobInfo: android.print.PrintJobId getId()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.view.SurfaceHolder: boolean isCreating()>:<public abstract>:<android.view.SurfaceHolder>
<android.view.InputQueue: void <init>()>:<>:<android.view.InputQueue>
<android.view.MotionEvent: float getHistoricalSize(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioTrack: int getState()>:<public>:<android.media.AudioTrack>
<android.view.KeyEvent.DispatcherState: boolean isTracking(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>:<public>:<android.os.UserManager>
<android.app.Activity: boolean onSearchRequested()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.Notification.Builder: android.app.Notification.Builder setContentIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.renderscript.Matrix4f: void translate(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.nfc.NdefRecord: android.nfc.NdefRecord createMime(java.lang.String,byte[])>:<public static>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>:<public>:<android.app.ActivityManager.TaskDescription:android.os.Parcelable>
<android.view.FocusFinder: void <init>()>:<>:<android.view.FocusFinder>
<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.graphics.DashPathEffect: void <init>(float[],float)>:<public>:<android.graphics.DashPathEffect:android.graphics.PathEffect>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoFrameRate(float)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.transition.Slide: void <init>()>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.graphics.drawable.shapes.RectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setDigests(java.lang.String[])>:<public transient>:<android.security.keystore.KeyProtection.Builder>
<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.widget.ViewAnimator: int getDisplayedChild()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.ServiceTestCase: void setApplication(android.app.Application)>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.SimpleCursorAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>:<public abstract>:<android.widget.SimpleCursorAdapter.ViewBinder>
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.Context: java.io.File getCacheDir()>:<public abstract>:<android.content.Context>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>:<public>:<android.bluetooth.le.ScanSettings.Builder>
<android.opengl.GLES10: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES10>
<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera.CameraInfo)>:<public static>:<android.hardware.Camera>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.util.AtomicFile: java.io.FileOutputStream startWrite()>:<public>:<android.util.AtomicFile>
<android.preference.SwitchPreference: void setSwitchTextOn(int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.gesture.GestureStroke: void clearPath()>:<public>:<android.gesture.GestureStroke>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.renderscript.BaseObj: void <init>()>:<>:<android.renderscript.BaseObj>
<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.speech.tts.Voice: int describeContents()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.widget.RemoteViews: void setTextColor(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.WrapperListAdapter: android.widget.ListAdapter getWrappedAdapter()>:<public abstract>:<android.widget.WrapperListAdapter:android.widget.ListAdapter>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display,int)>:<public>:<android.app.Presentation:android.app.Dialog>
<android.provider.ContactsContract.QuickContact: void <init>()>:<public>:<android.provider.ContactsContract.QuickContact>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedTo()>:<public>:<android.net.http.SslCertificate>
<android.net.NetworkInfo: int getSubtype()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.drm.DrmStore: void <init>()>:<public>:<android.drm.DrmStore>
<android.telephony.gsm.SmsManager: void <init>()>:<>:<android.telephony.gsm.SmsManager>
<junit.runner.BaseTestRunner: java.lang.String extractClassName(java.lang.String)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.ContentProviderClient>
<android.animation.IntEvaluator: void <init>()>:<public>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.content.OperationApplicationException: void <init>()>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.GestureDetector>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.util.Base64OutputStream: void write(int)>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.nfc.NdefRecord: void <clinit>()>:<static>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: int getOpacity()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.bluetooth.BluetoothGattCallback: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes getDefaults()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOff()>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.telephony.SubscriptionInfo: android.graphics.Bitmap createIconBitmap(android.content.Context)>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void CHERK(int,int,float,android.renderscript.Allocation,float,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.MotionEvent.PointerCoords: float getAxisValue(int)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.content.IntentSender: void <clinit>()>:<static>:<android.content.IntentSender:android.os.Parcelable>
<android.app.usage.NetworkStats.Bucket: long getRxBytes()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.os.MemoryFile: int readBytes(byte[],int,int,int)>:<public>:<android.os.MemoryFile>
<android.widget.HorizontalScrollView: boolean isFillViewport()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.widget.ArrayAdapter: void setDropDownViewResource(int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.Fragment: void onPause()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.provider.ContactsContract.CommonDataKinds.Identity: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Identity:android.provider.ContactsContract.DataColumnsWithJoins>
<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)>:<public>:<android.mtp.MtpDevice>
<android.text.method.LinkMovementMethod: void <init>()>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.media.MediaDrm: void releaseSecureStops(byte[])>:<public native>:<android.media.MediaDrm>
<android.nfc.tech.MifareClassic: int getBlockCount()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.widget.TimePicker: int getBaseline()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.provider.ContactsContract.Settings: void <init>()>:<>:<android.provider.ContactsContract.Settings:android.provider.ContactsContract.SettingsColumns>
<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.provider.CalendarContract.CalendarAlerts: void <init>()>:<>:<android.provider.CalendarContract.CalendarAlerts:android.provider.BaseColumns,android.provider.CalendarContract.CalendarAlertsColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>:<public final native>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.provider.Settings.System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.content.ContentProviderOperation: boolean isAssertQuery()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.database.AbstractCursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.Filterable: android.widget.Filter getFilter()>:<public abstract>:<android.widget.Filterable>
<android.view.View: void setAccessibilityTraversalAfter(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long)>:<public static final>:<android.media.tv.TvContract>
<android.widget.MediaController: void <init>(android.content.Context)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockCursor: void deactivate()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ComparisonFailure: java.lang.String getMessage()>:<public>:<android.test.ComparisonFailure:android.test.AssertionFailedError,java.lang.Error,java.lang.Throwable>
<android.view.Menu: void close()>:<public abstract>:<android.view.Menu>
<android.gesture.GestureOverlayView: void addOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getInputType()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.appwidget.AppWidgetProviderInfo: java.lang.Object clone()>:<public volatile>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: int getApplicationEnabledSetting(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.preference.PreferenceCategory: void <init>(android.content.Context)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.net.VpnService: void onRevoke()>:<public>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.ContactsContract.Contacts.Data: void <init>()>:<>:<android.provider.ContactsContract.Contacts.Data:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns>
<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View.DragShadowBuilder: void <init>(android.view.View)>:<public>:<android.view.View.DragShadowBuilder>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>:<public>:<android.location.Geocoder>
<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.media.MediaRouter.Callback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.net.wifi.p2p.WifiP2pGroup: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.view.accessibility.AccessibilityRecord: boolean isPassword()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.text.style.MaskFilterSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.MaskFilterSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.MediaRouter.RouteGroup: void requestSetVolume(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.media.MediaRecorder.OnErrorListener: void onError(android.media.MediaRecorder,int,int)>:<public abstract>:<android.media.MediaRecorder.OnErrorListener>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.net.LinkAddress: int getPrefixLength()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.media.session.PlaybackState.CustomAction: int getIcon()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.view.View: void setRotationX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebSettings: boolean getAllowFileAccessFromFileURLs()>:<public abstract>:<android.webkit.WebSettings>
<android.app.SharedElementCallback: void onRejectSharedElements(java.util.List)>:<public>:<android.app.SharedElementCallback>
<android.preference.Preference: void setOrder(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.Matrix3f: void rotate(float,float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.text.style.BackgroundColorSpan: void <init>(int)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.transition.VisibilityPropagation: void <init>()>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>(java.lang.String)>:<public>:<android.view.SurfaceHolder.BadSurfaceTypeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.MediaDrmResetException: void <init>(java.lang.String)>:<public>:<android.media.MediaDrmResetException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.ActivityOptions: android.os.Bundle toBundle()>:<public>:<android.app.ActivityOptions>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int)>:<public abstract>:<android.app.FragmentTransaction>
<android.location.GpsStatus: int getTimeToFirstFix()>:<public>:<android.location.GpsStatus>
<android.app.DatePickerDialog: void onClick(android.content.DialogInterface,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuid()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.view.textservice.SpellCheckerSubtype: boolean containsExtraValueKey(java.lang.String)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.speech.tts.TextToSpeechService: java.util.Set onGetFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>:<protected>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.preference.DialogPreference: void <init>(android.content.Context)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.system.Os: int writev(java.io.FileDescriptor,java.lang.Object[],int[],int[])>:<public static>:<android.system.Os>
<android.text.style.BulletSpan: void <init>(int)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.app.usage.UsageEvents.Event: java.lang.String getClassName()>:<public>:<android.app.usage.UsageEvents.Event>
<android.media.audiofx.Equalizer: void <init>(int,int)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>:<public static>:<android.text.format.Formatter>
<android.gesture.GestureOverlayView: boolean isGestureVisible()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Switch: void onProvideStructure(android.view.ViewStructure)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.text.Layout: android.text.Layout.Alignment getParagraphAlignment(int)>:<public final>:<android.text.Layout>
<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.util.Xml.Encoding: android.util.Xml.Encoding[] values()>:<public static>:<android.util.Xml.Encoding:java.lang.Enum>
<android.telecom.InCallService.VideoCall: void sendSessionModifyRequest(android.telecom.VideoProfile)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.transition.Slide: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.app.Service: void stopSelf(int)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.app.ActivityGroup: void onPause()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix2f)>:<public>:<android.renderscript.FieldPacker>
<android.net.sip.SipProfile: void <init>()>:<>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.content.IntentFilter.AuthorityEntry: int match(android.net.Uri)>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.view.TextureView: android.graphics.Bitmap getBitmap()>:<public>:<android.view.TextureView:android.view.View>
<android.webkit.WebView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.FieldPacker: void addI64(long)>:<public>:<android.renderscript.FieldPacker>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.media.MediaPlayer: boolean isLooping()>:<public native>:<android.media.MediaPlayer>
<android.net.Uri: android.net.Uri normalizeScheme()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionFailed()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.util.Property: boolean isReadOnly()>:<public>:<android.util.Property>
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender setUnreadConversation(android.app.Notification.CarExtender.UnreadConversation)>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.media.AudioManager: void setStreamSolo(int,boolean)>:<public>:<android.media.AudioManager>
<android.net.UrlQuerySanitizer: boolean hasParameter(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.hardware.Camera.Parameters: void setGpsLatitude(double)>:<public>:<android.hardware.Camera.Parameters>
<android.hardware.SensorListener: void onAccuracyChanged(int,int)>:<public abstract>:<android.hardware.SensorListener>
<android.view.ViewGroup: void onDetachedFromWindow()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.app.NativeActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.HeaderViewListAdapter: long getItemId(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.telecom.Call.Details: java.lang.String propertiesToString(int)>:<public static>:<android.telecom.Call.Details>
<android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.animation.ValueAnimator: long getFrameDelay()>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.BroadcastReceiver: void setResultCode(int)>:<public final>:<android.content.BroadcastReceiver>
<android.os.Debug.InstructionCount: boolean resetAndStart()>:<public>:<android.os.Debug.InstructionCount>
<org.xmlpull.v1.XmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.print.PrintDocumentInfo: void <clinit>()>:<static>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.view.Window: android.transition.Scene getContentScene()>:<public>:<android.view.Window>
<android.widget.ImageView: void onDetachedFromWindow()>:<protected>:<android.widget.ImageView:android.view.View>
<android.widget.TableRow: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.system.Os: void kill(int,int)>:<public static>:<android.system.Os>
<android.renderscript.FieldPacker: android.renderscript.Double4 subDouble4()>:<public>:<android.renderscript.FieldPacker>
<android.view.animation.PathInterpolator: void <init>(float,float)>:<public>:<android.view.animation.PathInterpolator:android.view.animation.BaseInterpolator>
<android.test.mock.MockResources: java.lang.String getResourceTypeName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.inputmethodservice.InputMethodService: void updateInputViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.util.LruCache: int maxSize()>:<public final synchronized>:<android.util.LruCache>
<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.view.Window: void setFlags(int,int)>:<public>:<android.view.Window>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>:<public>:<android.test.mock.MockContentResolver:android.content.ContentResolver>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransitionStyle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.telecom.RemoteConnection: int getState()>:<public>:<android.telecom.RemoteConnection>
<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>:<public abstract>:<android.content.SharedPreferences>
<android.graphics.drawable.Drawable: void <init>()>:<public>:<android.graphics.drawable.Drawable>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.view.Window.Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.util.LongSparseArray: java.lang.String toString()>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.service.carrier.CarrierMessagingService: void onSendMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: boolean isLongPress()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>:<public>:<android.util.Pair>
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.telecom.Connection: android.telecom.Conference getConference()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.graphics.drawable.shapes.OvalShape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.widget.ImageButton: void <init>(android.content.Context)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.util.JsonWriter: android.util.JsonWriter value(long)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>:<public>:<android.content.res.TypedArray>
<android.graphics.drawable.AnimationDrawable: void stop()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.util.EventLog.Event: java.lang.Object getData()>:<public synchronized>:<android.util.EventLog.Event>
<android.widget.Switch: void <init>(android.content.Context)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.IntentFilter: java.util.Iterator pathsIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.telecom.Connection: void onPlayDtmfTone(char)>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Rect getRect()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadUnbadgedIcon(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.telephony.SignalStrength: int getLevel()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.View: android.os.IBinder getApplicationWindowToken()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Path: void offset(float,float,android.graphics.Path)>:<public>:<android.graphics.Path>
<android.media.MediaMetadata: int describeContents()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.MotionEvent: void setEdgeFlags(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.app.Fragment: boolean getAllowReturnTransitionOverlap()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.accessibility.AccessibilityRecord: int getWindowId()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.webkit.WebSettings: boolean getAllowContentAccess()>:<public abstract>:<android.webkit.WebSettings>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.inputmethod.InputMethodInfo: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.Display.Mode: java.lang.String toString()>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void ZHER(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.drm.ProcessedData: void <init>()>:<>:<android.drm.ProcessedData>
<android.graphics.drawable.LayerDrawable: void setLayerWidth(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.widget.TextView: int computeHorizontalScrollRange()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.opengl.Matrix: void <init>()>:<public>:<android.opengl.Matrix>
<android.media.MediaMetadataEditor: void <init>()>:<>:<android.media.MediaMetadataEditor>
<android.hardware.Camera: void <init>()>:<>:<android.hardware.Camera>
<android.widget.FrameLayout: void <init>(android.content.Context)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.util.SizeF: float getWidth()>:<public>:<android.util.SizeF>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.test.ActivityInstrumentationTestCase: void tearDown()>:<protected>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.content.res.Resources: java.lang.String getString(int)>:<public>:<android.content.res.Resources>
<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.animation.LayoutTransition: void setDuration(int,long)>:<public>:<android.animation.LayoutTransition>
<android.widget.NumberPicker: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.service.carrier.CarrierMessagingService.SendMmsResult: int getSendStatus()>:<public>:<android.service.carrier.CarrierMessagingService.SendMmsResult>
<android.opengl.GLES30: void glSamplerParameterf(int,int,float)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.Cursor: boolean moveToFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.admin.DevicePolicyManager: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.CursorLoader: java.lang.Object loadInBackground()>:<public volatile>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.AudioDeviceInfo: int[] getEncodings()>:<public>:<android.media.AudioDeviceInfo>
<android.app.NotificationManager: void cancel(int)>:<public>:<android.app.NotificationManager>
<android.widget.OverScroller: int getFinalY()>:<public final>:<android.widget.OverScroller>
<android.content.pm.ServiceInfo: java.lang.String toString()>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.app.Notification.Action: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.location.Address: int describeContents()>:<public>:<android.location.Address:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void setHotspotBounds(int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.RippleDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.os.Binder: android.os.UserHandle getCallingUserHandle()>:<public static final>:<android.os.Binder:android.os.IBinder>
<android.print.PrintAttributes.MediaSize: boolean isPortrait()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>:<public abstract>:<android.app.FragmentManager>
<android.util.SparseBooleanArray: void append(int,boolean)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.view.ActionMode: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.ActionMode>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.OverScroller: boolean isFinished()>:<public final>:<android.widget.OverScroller>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>:<public>:<org.json.JSONObject>
<android.widget.HorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Fragment: android.transition.Transition getEnterTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.UiAutomation: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>:<public final>:<android.app.UiAutomation>
<android.net.Credentials: void <init>(int,int,int)>:<public>:<android.net.Credentials>
<android.service.dreams.DreamService: void onDreamingStarted()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.text.method.ArrowKeyMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>:<public>:<android.net.http.SslCertificate>
<android.system.Os: void setegid(int)>:<public static>:<android.system.Os>
<android.net.ConnectivityManager: boolean bindProcessToNetwork(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.opengl.GLES10: void glLineWidthx(int)>:<public static native>:<android.opengl.GLES10>
<android.app.Service: void onLowMemory()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.widget.MultiAutoCompleteTextView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.app.FragmentController: void dispatchStop()>:<public>:<android.app.FragmentController>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)>:<public>:<android.text.BidiFormatter>
<android.app.backup.BackupDataOutput: void <init>()>:<>:<android.app.backup.BackupDataOutput>
<android.test.mock.MockResources: android.graphics.Movie getMovie(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.hardware.camera2.params.ColorSpaceTransform: void <init>(int[])>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<android.speech.tts.TextToSpeech.OnInitListener: void onInit(int)>:<public abstract>:<android.speech.tts.TextToSpeech.OnInitListener>
<android.view.View.OnScrollChangeListener: void onScrollChange(android.view.View,int,int,int,int)>:<public abstract>:<android.view.View.OnScrollChangeListener>
<org.json.JSONStringer: org.json.JSONStringer array()>:<public>:<org.json.JSONStringer>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>:<public>:<android.app.job.JobInfo.Builder>
<android.app.AlertDialog: void setIcon(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>:<public static>:<junit.framework.Assert>
<android.media.session.MediaSession.Callback: void onFastForward()>:<public>:<android.media.session.MediaSession.Callback>
<android.location.Criteria: void <init>(android.location.Criteria)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata build()>:<public>:<android.media.MediaMetadata.Builder>
<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.format.Time: long setJulianDay(int)>:<public>:<android.text.format.Time>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.system.Os: java.lang.String[] environ()>:<public static>:<android.system.Os>
<android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.content.Entity: void <init>(android.content.ContentValues)>:<public>:<android.content.Entity>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Region: void <init>(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.content.res.TypedArray>
<android.location.Location: boolean isFromMockProvider()>:<public>:<android.location.Location:android.os.Parcelable>
<android.location.Location: long getTime()>:<public>:<android.location.Location:android.os.Parcelable>
<android.accounts.NetworkErrorException: void <init>()>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.session.MediaController.PlaybackInfo: int getVolumeControl()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.widget.AbsSeekBar: void drawableHotspotChanged(float,float)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.graphics.Matrix: boolean preTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.widget.PopupWindow: void setAttachedInDecor(boolean)>:<public>:<android.widget.PopupWindow>
<android.content.Intent: android.content.Intent cloneFilter()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActivityManager: void dumpPackageState(java.io.FileDescriptor,java.lang.String)>:<public>:<android.app.ActivityManager>
<android.content.pm.PackageManager.NameNotFoundException: void <init>()>:<public>:<android.content.pm.PackageManager.NameNotFoundException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.app.Activity: void setTitle(java.lang.CharSequence)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder addMessage(java.lang.String)>:<public>:<android.app.Notification.CarExtender.Builder>
<android.view.animation.Animation: void setStartOffset(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.animation.PropertyValuesHolder: java.lang.String toString()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.TextClock: void <clinit>()>:<static>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.app.Instrumentation.ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation.ActivityMonitor>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayAdded(int)>:<public abstract>:<android.hardware.display.DisplayManager.DisplayListener>
<android.widget.AbsListView: boolean onRemoteAdapterConnected()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.telecom.Call.Details: android.os.Bundle getIntentExtras()>:<public>:<android.telecom.Call.Details>
<android.net.sip.SipSession.State: java.lang.String toString(int)>:<public static>:<android.net.sip.SipSession.State>
<android.media.MediaRouter.SimpleCallback: void <init>()>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.telecom.Call: void answer(int)>:<public>:<android.telecom.Call>
<android.view.animation.AnticipateInterpolator: void <init>()>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.BaseInterpolator>
<android.media.MediaRecorder: void setLocation(float,float)>:<public>:<android.media.MediaRecorder>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.pm.LauncherApps.Callback: void onPackagesUnavailable(java.lang.String[],android.os.UserHandle,boolean)>:<public abstract>:<android.content.pm.LauncherApps.Callback>
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<junit.framework.Assert>
<android.provider.SyncStateContract: void <init>()>:<public>:<android.provider.SyncStateContract>
<android.media.MediaRouter.SimpleCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.preference.Preference: int getWidgetLayoutResource()>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.util.SparseIntArray: void removeAt(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.media.MediaPlayer: android.media.SyncParams getSyncParams()>:<public native>:<android.media.MediaPlayer>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutCancelled()>:<public>:<android.print.PrintDocumentAdapter.LayoutResultCallback>
<android.widget.GridView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.Groups: void <init>()>:<>:<android.provider.ContactsContract.Groups:android.provider.BaseColumns,android.provider.ContactsContract.GroupsColumns,android.provider.ContactsContract.SyncColumns>
<android.renderscript.ScriptIntrinsicBLAS: void SSYR2K(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.util.Rational: int getDenominator()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.os.Parcel: android.util.SizeF readSizeF()>:<public final>:<android.os.Parcel>
<android.media.session.MediaSession.Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>:<public>:<android.media.session.MediaSession.Callback>
<android.print.pdf.PrintedPdfDocument: android.graphics.Rect getPageContentRect()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.mtp.MtpConstants: boolean isAbstractObject(int)>:<public static>:<android.mtp.MtpConstants>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.ImageView:android.view.View>
<android.service.voice.VoiceInteractionSessionService: android.service.voice.VoiceInteractionSession onNewSession(android.os.Bundle)>:<public abstract>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.MediaPlayer.TrackInfo: int getTrackType()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.media.session.PlaybackState.CustomAction: java.lang.String getAction()>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.test.ProviderTestCase2: void setUp()>:<protected>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.Instrumentation: void stopProfiling()>:<public>:<android.app.Instrumentation>
<android.test.mock.MockContext: void setTheme(int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.style.ScaleXSpan: int describeContents()>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.security.keystore.KeyProtection: java.util.Date getKeyValidityForOriginationEnd()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.test.mock.MockCursor: java.lang.String[] getColumnNames()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.text.Spannable.Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>:<public>:<android.text.Spannable.Factory>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy getThreadPolicy()>:<public static>:<android.os.StrictMode>
<android.media.effect.Effect: void setUpdateListener(android.media.effect.EffectUpdateListener)>:<public>:<android.media.effect.Effect>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.effect.EffectFactory: android.media.effect.Effect createEffect(java.lang.String)>:<public>:<android.media.effect.EffectFactory>
<android.speech.RecognitionService.Callback: int getCallingUid()>:<public>:<android.speech.RecognitionService.Callback>
<android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>:<public>:<android.app.WallpaperManager>
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()>:<public>:<android.telephony.SubscriptionManager>
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.media.SoundPool: boolean unload(int)>:<public final native>:<android.media.SoundPool>
<android.media.session.MediaSession.Callback: void onSkipToNext()>:<public>:<android.media.session.MediaSession.Callback>
<android.test.ProviderTestCase: void <init>(java.lang.Class,java.lang.String)>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.midi.MidiInputPort: int getPortNumber()>:<public final>:<android.media.midi.MidiInputPort:android.media.midi.MidiReceiver,java.io.Closeable>
<android.speech.tts.TextToSpeech: int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.bluetooth.BluetoothGattServer: boolean connect(android.bluetooth.BluetoothDevice,boolean)>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.webkit.HttpAuthHandler: void <init>()>:<>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.app.PendingIntent: boolean equals(java.lang.Object)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)>:<public>:<android.media.AudioTrack>
<android.widget.TextView: float getShadowDx()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.TabActivity: void setDefaultTab(java.lang.String)>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: android.text.InputFilter[] getFilters()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.LinkAddress: int getScope()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.content.SyncContext: void onFinished(android.content.SyncResult)>:<public>:<android.content.SyncContext>
<android.content.RestrictionEntry: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.telephony.SmsMessage: long getTimestampMillis()>:<public>:<android.telephony.SmsMessage>
<android.content.pm.LauncherApps: void startMainActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)>:<public>:<android.content.pm.LauncherApps>
<android.R.integer: void <init>()>:<public>:<android.R.integer>
<android.content.IntentFilter: void setPriority(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.TextView: float getTextScaleX()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telecom.PhoneAccount: int getCapabilities()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.widget.RemoteViews: void setLabelFor(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.content.RestrictionEntry: android.content.RestrictionEntry[] getRestrictions()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.preference.PreferenceActivity: void switchToHeader(java.lang.String,android.os.Bundle)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()>:<public>:<android.net.sip.SipSession>
<android.content.ClipDescription: int getMimeTypeCount()>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.os.MemoryFile: void close()>:<public>:<android.os.MemoryFile>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.nfc.tech.Ndef: void connect()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.widget.TableRow: android.view.View getVirtualChildAt(int)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.GestureDetector.OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.media.MediaRecorder: int getAudioSourceMax()>:<public static final>:<android.media.MediaRecorder>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.telecom.InCallService.VideoCall: void setDisplaySurface(android.view.Surface)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>:<public>:<android.widget.ImageView:android.view.View>
<android.view.textservice.SpellCheckerInfo: void <clinit>()>:<static>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.view.Window: void setTitleColor(int)>:<public abstract>:<android.view.Window>
<android.app.Notification.CarExtender.UnreadConversation: android.app.PendingIntent getReplyPendingIntent()>:<public>:<android.app.Notification.CarExtender.UnreadConversation>
<android.widget.TextView: int getMinEms()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.PhoneNumberUtils: java.lang.CharSequence createTtsSpannable(java.lang.CharSequence)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.bluetooth.BluetoothGattDescriptor: void <clinit>()>:<static>:<android.bluetooth.BluetoothGattDescriptor>
<android.view.textservice.SentenceSuggestionsInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.app.Activity: void invalidateOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.ZoomButtonsController: void setVisible(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>:<public final>:<android.content.Context>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>:<public final>:<android.graphics.Canvas>
<android.view.View: void setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.text.method.TimeKeyListener: int getInputType()>:<public>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.service.dreams.DreamService: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.graphics.drawable.BitmapDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.content.SearchRecentSuggestionsProvider: boolean onCreate()>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setBigContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.telecom.RemoteConference: void disconnect()>:<public>:<android.telecom.RemoteConference>
<android.media.ToneGenerator: boolean startTone(int,int)>:<public native>:<android.media.ToneGenerator>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String)>:<public static final>:<android.media.tv.TvContract>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.system.OsConstants: boolean WCOREDUMP(int)>:<public static>:<android.system.OsConstants>
<android.speech.tts.TextToSpeech: java.util.Locale getDefaultLanguage()>:<public>:<android.speech.tts.TextToSpeech>
<org.json.JSONArray: java.lang.Object get(int)>:<public>:<org.json.JSONArray>
<android.media.session.MediaSession.Token: int hashCode()>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.renderscript.Matrix2f: void <init>(float[])>:<public>:<android.renderscript.Matrix2f>
<android.telephony.CellIdentityLte: void <clinit>()>:<static>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.graphics.drawable.ColorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.MediaRecorder: int getMaxAmplitude()>:<public native>:<android.media.MediaRecorder>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>:<public>:<android.graphics.Paint>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain(android.view.accessibility.AccessibilityRecord)>:<public static>:<android.view.accessibility.AccessibilityRecord>
<android.view.View: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>:<public>:<android.gesture.GestureStore>
<android.app.ActivityManager.MemoryInfo: void <clinit>()>:<static>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.app.ActionBar: void setDisplayShowTitleEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.util.MonthDisplayHelper: int getWeekStartDay()>:<public>:<android.util.MonthDisplayHelper>
<android.widget.TabWidget: void onFocusChange(android.view.View,boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.database.Cursor: void deactivate()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.animation.AnimationSet: java.lang.Object clone()>:<protected volatile>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.view.MotionEvent: int getPointerId(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,java.lang.String[],java.lang.String)>:<public static>:<android.provider.ContactsContract.QuickContact>
<android.widget.FrameLayout: boolean shouldDelayChildPressedState()>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setYear(int)>:<public>:<android.text.style.TtsSpan.DateBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.SlidingDrawer: boolean isOpened()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telecom.Call: void phoneAccountSelected(android.telecom.PhoneAccountHandle,boolean)>:<public>:<android.telecom.Call>
<android.media.AudioManager: void setParameters(java.lang.String)>:<public>:<android.media.AudioManager>
<android.media.tv.TvInputService.Session: void onTimeShiftSetPlaybackParams(android.media.PlaybackParams)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(android.renderscript.Float4)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.RingtoneManager: void <init>(android.app.Activity)>:<public>:<android.media.RingtoneManager>
<android.system.OsConstants: boolean S_ISCHR(int)>:<public static>:<android.system.OsConstants>
<android.telephony.CellIdentityWcdma: void <clinit>()>:<static>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.content.Intent.ShortcutIconResource: void <clinit>()>:<static>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.app.Fragment: android.app.Fragment getParentFragment()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<junit.runner.BaseTestRunner: java.lang.String processArguments(java.lang.String[])>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.test.MoreAsserts: void assertNotEmpty(java.lang.String,java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.telephony.TelephonyManager: boolean isSmsCapable()>:<public>:<android.telephony.TelephonyManager>
<android.widget.MediaController: void show(int)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ProviderTestCase2: void <init>(java.lang.Class,java.lang.String)>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.ExpandableListView: boolean expandGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.RemoteControlClient.MetadataEditor: android.media.MediaMetadataEditor putBitmap(int,android.graphics.Bitmap)>:<public volatile>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.EGLObjectHandle: void <init>(long)>:<protected>:<android.opengl.EGLObjectHandle>
<android.content.UriPermission: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.UriPermission:android.os.Parcelable>
<android.media.MediaPlayer: int getAudioSessionId()>:<public native>:<android.media.MediaPlayer>
<android.sax.EndElementListener: void end()>:<public abstract>:<android.sax.EndElementListener>
<android.net.Uri.Builder: android.net.Uri.Builder query(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,int,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.graphics.drawable.GradientDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Animatable2: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>:<public abstract>:<android.graphics.drawable.Animatable2:android.graphics.drawable.Animatable>
<android.os.Parcel: void writeBundle(android.os.Bundle)>:<public final>:<android.os.Parcel>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.BaseInterpolator>
<android.widget.LinearLayout.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.backup.BackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupHelper>
<android.content.ClipData: void <init>(android.content.ClipData)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.view.inputmethod.InputMethodSession: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.AudioRecord: android.media.AudioDeviceInfo getRoutedDevice()>:<public>:<android.media.AudioRecord>
<android.widget.SearchView: void onActionViewExpanded()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller.SessionParams)>:<public>:<android.content.pm.PackageInstaller>
<android.preference.Preference: void notifyChanged()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.database.DatabaseUtils.InsertHelper: long execute()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.ViewStructure: void setText(java.lang.CharSequence)>:<public abstract>:<android.view.ViewStructure>
<junit.framework.TestSuite: junit.framework.Test testAt(int)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.widget.TextView: void setTextAppearance(android.content.Context,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.ParcelFileDescriptor: void closeWithError(java.lang.String)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.app.Instrumentation: android.os.Bundle getAllocCounts()>:<public>:<android.app.Instrumentation>
<android.os.StrictMode: void enableDefaults()>:<public static>:<android.os.StrictMode>
<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.location.GpsSatellite: float getElevation()>:<public>:<android.location.GpsSatellite>
<android.service.carrier.CarrierMessagingService.ResultCallback: void onReceiveResult(java.lang.Object)>:<public abstract>:<android.service.carrier.CarrierMessagingService.ResultCallback>
<android.net.TrafficStats: long getMobileTxPackets()>:<public static>:<android.net.TrafficStats>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int2)>:<public>:<android.renderscript.FieldPacker>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.Bitmap: void recycle()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.KeyEvent.Callback: boolean onKeyDown(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.widget.ViewAnimator: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PageRange: java.lang.String toString()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.text.LoginFilter: void onStop()>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.test.InstrumentationTestRunner: android.os.Bundle getArguments()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.bluetooth.BluetoothGatt: void abortReliableWrite()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.os.ParcelFormatException: void <init>()>:<public>:<android.os.ParcelFormatException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Bitmap: void setHasMipMap(boolean)>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.TableRow.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.midi.MidiDevice: java.lang.String toString()>:<public>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.os.RemoteException: void <init>()>:<public>:<android.os.RemoteException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Virtualizer: void setProperties(android.media.audiofx.Virtualizer.Settings)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.telecom.RemoteConnection: void answer()>:<public>:<android.telecom.RemoteConnection>
<android.widget.SimpleCursorTreeAdapter: void setViewText(android.widget.TextView,java.lang.String)>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.graphics.NinePatch: int getHeight()>:<public>:<android.graphics.NinePatch>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.telephony.NeighboringCellInfo: int describeContents()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.test.MoreAsserts: void assertAssignableFrom(java.lang.Class,java.lang.Class)>:<public static>:<android.test.MoreAsserts>
<android.media.AudioTrack: void setState(int)>:<protected>:<android.media.AudioTrack>
<android.graphics.Region: java.lang.String toString()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.net.Uri: int compareTo(android.net.Uri)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>:<public>:<android.telephony.SmsMessage>
<android.preference.EditTextPreference: void setText(java.lang.String)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.View: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ClipData: android.content.ClipData newHtmlText(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder excludePackages(java.lang.String[])>:<public transient>:<android.test.suitebuilder.TestSuiteBuilder>
<android.media.ExifInterface: double getAltitude(double)>:<public>:<android.media.ExifInterface>
<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.view.WindowInsets: boolean hasStableInsets()>:<public>:<android.view.WindowInsets>
<android.net.sip.SipManager: void close(java.lang.String)>:<public>:<android.net.sip.SipManager>
<android.graphics.Path: void addArc(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.os.HandlerThread: void onLooperPrepared()>:<protected>:<android.os.HandlerThread:java.lang.Thread>
<android.app.assist.AssistStructure.ViewNode: int getScrollX()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.system.OsConstants: void <clinit>()>:<static>:<android.system.OsConstants>
<android.widget.AbsListView: void invalidateViews()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.Switch: int getSwitchMinWidth()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.FragmentManager: void invalidateOptionsMenu()>:<public>:<android.app.FragmentManager>
<android.content.IntentFilter: java.lang.String matchCategories(java.util.Set)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.bluetooth.BluetoothClass: int describeContents()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionSuspended()>:<public>:<android.media.browse.MediaBrowser.ConnectionCallback>
<android.text.style.BulletSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setIntegerPart(long)>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.net.wifi.WifiEnterpriseConfig.Eap: void <init>()>:<>:<android.net.wifi.WifiEnterpriseConfig.Eap>
<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.preference.PreferenceScreen: void onClick()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.util.LongSparseArray: android.util.LongSparseArray clone()>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.test.ActivityInstrumentationTestCase2: void setActivityInitialTouchMode(boolean)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.database.AbstractCursor: void onChange(boolean)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.provider.DocumentsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.os.Process: void setThreadPriority(int)>:<public static final native>:<android.os.Process>
<android.telephony.CellIdentityWcdma: void <init>()>:<>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.content.pm.PathPermission: void <clinit>()>:<static>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.net.wifi.WifiEnterpriseConfig: void setEapMethod(int)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>:<public static>:<android.preference.PreferenceManager>
<android.content.ComponentName: void <init>(android.os.Parcel)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<junit.framework.Assert: void failSame(java.lang.String)>:<public static>:<junit.framework.Assert>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.MotionEvent.PointerProperties: void <init>(android.view.MotionEvent.PointerProperties)>:<public>:<android.view.MotionEvent.PointerProperties>
<android.drm.DrmInfoRequest: void put(java.lang.String,java.lang.Object)>:<public>:<android.drm.DrmInfoRequest>
<android.hardware.SensorManager: int getSensors()>:<public>:<android.hardware.SensorManager>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.graphics.RectF: boolean intersect(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.media.tv.TvContract.Channels: void <clinit>()>:<static>:<android.media.tv.TvContract.Channels:android.media.tv.TvContract.BaseTvColumns>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeRight()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.StackView: void showPrevious()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.inputmethod.BaseInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaRecorder: void finalize()>:<protected>:<android.media.MediaRecorder>
<android.os.Environment: boolean isExternalStorageEmulated()>:<public static>:<android.os.Environment>
<android.view.Display.Mode: int getPhysicalHeight()>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int,int)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.IntentFilter: int countDataAuthorities()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)>:<public>:<android.view.GestureDetector>
<android.content.pm.ResolveInfo: int describeContents()>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebSettings: void setSupportZoom(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.media.AudioAttributes: int hashCode()>:<public>:<android.media.AudioAttributes:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.test.mock.MockApplication: void <init>()>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,int[],int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>:<public>:<android.widget.Scroller>
<android.media.session.MediaController: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>:<public>:<android.media.session.MediaController>
<android.print.PrintAttributes.MediaSize: java.lang.String getId()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.widget.TextView: void setFreezesText(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.res.Resources: java.lang.String getResourceName(int)>:<public>:<android.content.res.Resources>
<junit.framework.TestResult: java.util.Enumeration failures()>:<public synchronized>:<junit.framework.TestResult>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>:<public>:<android.telephony.TelephonyManager>
<android.opengl.GLES30: void glResumeTransformFeedback()>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telephony.SubscriptionInfo: int getSimSlotIndex()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.hardware.Camera.Parameters: void setFlashMode(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.shapes.Shape: void <init>()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.net.sip.SipAudioCall: void continueCall(int)>:<public>:<android.net.sip.SipAudioCall>
<android.renderscript.Matrix2f: void rotate(float)>:<public>:<android.renderscript.Matrix2f>
<android.media.MediaRecorder: void setOrientationHint(int)>:<public>:<android.media.MediaRecorder>
<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForCategory(android.content.ComponentName,java.lang.String)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.webkit.WebResourceRequest: android.net.Uri getUrl()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.media.RemoteControlClient.MetadataEditor: void clear()>:<public synchronized>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.telephony.cdma.CdmaCellLocation: void <init>(android.os.Bundle)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationUri(android.net.Uri)>:<public>:<android.app.DownloadManager.Request>
<android.webkit.WebView.HitTestResult: int getType()>:<public>:<android.webkit.WebView.HitTestResult>
<android.text.style.AlignmentSpan.Standard: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.graphics.Matrix: void mapPoints(float[],float[])>:<public>:<android.graphics.Matrix>
<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.renderscript.Allocation: void copyTo(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.test.mock.MockResources: java.lang.CharSequence[] getTextArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.TextView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.ExtractedTextRequest: void <init>()>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.Loader: void forceLoad()>:<public>:<android.content.Loader>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void bindInput(android.view.inputmethod.InputBinding)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.preference.RingtonePreference: void setShowSilent(boolean)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.media.audiofx.Visualizer: int getFft(byte[])>:<public>:<android.media.audiofx.Visualizer>
<android.test.ViewAsserts: void assertTopAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.Dialog: void onStop()>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telecom.Conference: void setDialing()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.webkit.WebView: float getScale()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.webkit.WebResourceResponse: java.util.Map getResponseHeaders()>:<public>:<android.webkit.WebResourceResponse>
<android.preference.PreferenceGroup: void removeAll()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityForOriginationEnd(java.util.Date)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.media.MediaDrm.ProvisionRequest: java.lang.String getDefaultUrl()>:<public>:<android.media.MediaDrm.ProvisionRequest>
<android.webkit.WebSettings: void setAllowUniversalAccessFromFileURLs(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)>:<public static>:<android.app.ActivityOptions>
<android.widget.ViewFlipper: void onAttachedToWindow()>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: java.lang.String toString()>:<public final>:<org.apache.http.conn.ssl.AllowAllHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.widget.SlidingDrawer.OnDrawerOpenListener: void onDrawerOpened()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerOpenListener>
<android.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar>
<android.widget.ExpandableListView: int getPackedPositionType(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiConfiguration.AuthAlgorithm: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.AuthAlgorithm>
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()>:<public>:<android.net.UrlQuerySanitizer>
<android.text.style.BulletSpan: void <init>()>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: void <init>()>:<>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.CharSequence,java.lang.String,int)>:<public>:<android.speech.tts.TextToSpeech>
<android.view.animation.Animation: void initialize(int,int,int,int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)>:<public>:<android.drm.DrmEvent>
<android.bluetooth.le.AdvertiseSettings: boolean isConnectable()>:<public>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.os.BaseBundle: java.lang.Object get(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.os.ParcelUuid: int describeContents()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.print.PrintJobInfo: java.lang.String toString()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)>:<public>:<android.view.textservice.SpellCheckerSession>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOn()>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.text.method.ArrowKeyMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.animation.AnimatorSet: void setTarget(java.lang.Object)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.content.IntentSender.OnFinished: void onSendFinished(android.content.IntentSender,android.content.Intent,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.IntentSender.OnFinished>
<android.renderscript.Sampler.Builder: void setMagnification(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>:<public static>:<android.graphics.ImageFormat>
<android.widget.TextView: void <init>(android.content.Context)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.RenamingDelegatingContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.view.Display: int getWidth()>:<public>:<android.view.Display>
<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.YuvImage: boolean compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)>:<public>:<android.graphics.YuvImage>
<android.animation.ValueAnimator: void cancel()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityStart()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.hardware.Camera.Parameters: void setMeteringAreas(java.util.List)>:<public>:<android.hardware.Camera.Parameters>
<android.app.Fragment: void setRetainInstance(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.Switch: void jumpDrawablesToCurrentState()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.content.ContentProviderClient: android.net.Uri canonicalize(android.net.Uri)>:<public final>:<android.content.ContentProviderClient>
<android.net.wifi.WifiManager.WpsCallback: void onStarted(java.lang.String)>:<public abstract>:<android.net.wifi.WifiManager.WpsCallback>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.CheckBoxPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void unbindInput()>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.service.carrier.CarrierMessagingService: void <init>()>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.EdgeEffect: void finish()>:<public>:<android.widget.EdgeEffect>
<android.graphics.ColorMatrixColorFilter: void <init>(float[])>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.net.LinkProperties: int hashCode()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationValidityDurationSeconds()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)>:<public>:<android.media.MediaMetadataRetriever>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.transition.TransitionSet: android.transition.TransitionSet setDuration(long)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: java.lang.String sanitize(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.text.BoringLayout.Metrics: java.lang.String toString()>:<public>:<android.text.BoringLayout.Metrics:android.graphics.Paint.FontMetricsInt>
<android.telephony.CarrierConfigManager: void notifyConfigChangedForSubId(int)>:<public>:<android.telephony.CarrierConfigManager>
<android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.provider.Contacts.People: void <clinit>()>:<static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>:<public final>:<android.content.Context>
<android.database.AbstractCursor: void close()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AdapterView: void onDetachedFromWindow()>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.app.Notification: android.graphics.drawable.Icon getLargeIcon()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.view.animation.Animation: void setDuration(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setMediaUri(android.net.Uri)>:<public>:<android.media.MediaDescription.Builder>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.Fragment: void setAllowEnterTransitionOverlap(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.storage.StorageManager: boolean mountObb(java.lang.String,java.lang.String,android.os.storage.OnObbStateChangeListener)>:<public>:<android.os.storage.StorageManager>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ImageView:android.view.View>
<android.provider.DocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>:<public abstract>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.content.pm.FeatureInfo: int describeContents()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.text.method.TextKeyListener: int getInputType()>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller.Session openSession(int)>:<public>:<android.content.pm.PackageInstaller>
<android.app.FragmentTransaction: int commit()>:<public abstract>:<android.app.FragmentTransaction>
<android.app.VoiceInteractor.PickOptionRequest.Option: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.audiofx.EnvironmentalReverb: void setDecayHFRatio(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.GridView: void onMeasure(int,int)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.view.DragEvent: int describeContents()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.widget.TextView: void setHint(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Context: int checkSelfPermission(java.lang.String)>:<public abstract>:<android.content.Context>
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.hardware.GeomagneticField: float getInclination()>:<public>:<android.hardware.GeomagneticField>
<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.security.NetworkSecurityPolicy: void <init>()>:<>:<android.security.NetworkSecurityPolicy>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>:<public static>:<android.app.ActivityOptions>
<android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>:<public>:<android.bluetooth.le.BluetoothLeScanner>
<android.media.session.MediaController.Callback: void onQueueTitleChanged(java.lang.CharSequence)>:<public>:<android.media.session.MediaController.Callback>
<android.hardware.camera2.CameraDevice: void createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration,java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>:<public abstract>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.util.LruCache: void resize(int)>:<public>:<android.util.LruCache>
<android.speech.tts.Voice: java.lang.String toString()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.MediaMetadata: android.graphics.Bitmap getBitmap(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.AudioRecord: void addOnRoutingChangedListener(android.media.AudioRecord.OnRoutingChangedListener,android.os.Handler)>:<public>:<android.media.AudioRecord>
<android.net.http.SslCertificate.DName: void <init>(android.net.http.SslCertificate,java.lang.String)>:<public>:<android.net.http.SslCertificate.DName>
<android.nfc.tech.NfcA: void setTimeout(int)>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.telephony.gsm.GsmCellLocation: void fillInNotifierBundle(android.os.Bundle)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.text.TextUtils: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.net.sip.SipSession.Listener: void onCallChangeFailed(android.net.sip.SipSession,int,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.app.Service: void startForeground(int,android.app.Notification)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.view.View: boolean canResolveTextDirection()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONObject: void <init>(org.json.JSONObject,java.lang.String[])>:<public>:<org.json.JSONObject>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy build()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()>:<public>:<android.view.textservice.SpellCheckerSession>
<android.system.StructStat: void <init>(long,long,int,long,int,int,long,long,long,long,long,long,long)>:<public>:<android.system.StructStat>
<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setCoefficients(float[])>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.nfc.tech.NfcV: void <init>()>:<>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.PendingIntent: int getCreatorUid()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.animation.PropertyValuesHolder: void setConverter(android.animation.TypeConverter)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.database.ContentObserver: void <init>(android.os.Handler)>:<public>:<android.database.ContentObserver>
<android.text.style.LocaleSpan: int describeContents()>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap,int)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.telephony.SmsMessage: int getProtocolIdentifier()>:<public>:<android.telephony.SmsMessage>
<android.view.Display: float getRefreshRate()>:<public>:<android.view.Display>
<android.media.session.PlaybackState: void <clinit>()>:<static>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.LayerDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaDrm: android.media.MediaDrm.KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>:<public native>:<android.media.MediaDrm>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>:<public static>:<android.view.Gravity>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.location.LocationProvider: boolean requiresCell()>:<public>:<android.location.LocationProvider>
<android.system.Os: java.io.FileDescriptor socket(int,int,int)>:<public static>:<android.system.Os>
<android.graphics.Camera: float getLocationZ()>:<public native>:<android.graphics.Camera>
<android.test.mock.MockContext: void unbindService(android.content.ServiceConnection)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>:<public abstract>:<android.text.method.KeyListener>
<android.content.Intent: android.content.Intent getIntent(java.lang.String)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.TextUtils.SimpleStringSplitter: java.lang.Object next()>:<public volatile>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.media.AudioRecord.Builder: android.media.AudioRecord.Builder setAudioFormat(android.media.AudioFormat)>:<public>:<android.media.AudioRecord.Builder>
<android.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)>:<public>:<android.app.SharedElementCallback>
<android.hardware.input.InputManager: void unregisterInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener)>:<public>:<android.hardware.input.InputManager>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent,android.os.Looper)>:<public>:<android.media.RemoteControlClient>
<android.widget.TextView: void setAutoLinkMask(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionManager 'from'(android.content.Context)>:<public static>:<android.telephony.SubscriptionManager>
<android.telecom.Connection: void onStopDtmfTone()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.renderscript.Matrix2f: void transpose()>:<public>:<android.renderscript.Matrix2f>
<android.view.animation.DecelerateInterpolator: void <init>(float)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.BaseInterpolator>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.Callback getCallback()>:<public>:<android.graphics.drawable.Drawable>
<android.widget.NumberPicker: boolean dispatchHoverEvent(android.view.MotionEvent)>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.DocumentsContract.Document: void <init>()>:<>:<android.provider.DocumentsContract.Document>
<android.media.tv.TvInputInfo: android.content.Intent createSettingsIntent()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.MediaRouteButton: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.bluetooth.BluetoothGattCallback: void onReliableWriteCompleted(android.bluetooth.BluetoothGatt,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void <init>()>:<>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.view.View: int getHorizontalFadingEdgeLength()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaDrm: void releaseAllSecureStops()>:<public native>:<android.media.MediaDrm>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>:<public static>:<android.media.MediaPlayer>
<android.os.Vibrator: void vibrate(long[],int)>:<public>:<android.os.Vibrator>
<android.opengl.GLES30: void glDrawArraysInstanced(int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.nfc.tech.MifareUltralight: void <init>()>:<>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder 'with'(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.util.ArrayMap: java.util.Collection values()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.content.res.TypedArray: int getColor(int,int)>:<public>:<android.content.res.TypedArray>
<android.app.usage.UsageEvents: boolean getNextEvent(android.app.usage.UsageEvents.Event)>:<public>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[])>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.speech.tts.SynthesisRequest: java.lang.CharSequence getCharSequenceText()>:<public>:<android.speech.tts.SynthesisRequest>
<android.graphics.Paint: float measureText(java.lang.String)>:<public>:<android.graphics.Paint>
<android.view.ActionMode: void setTitle(int)>:<public abstract>:<android.view.ActionMode>
<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,int)>:<public abstract>:<android.view.Menu>
<org.json.JSONObject: double optDouble(java.lang.String)>:<public>:<org.json.JSONObject>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.Exception)>:<public>:<android.content.IntentSender.SendIntentException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.preference.Preference: int compareTo(android.preference.Preference)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Window: android.view.View getDecorView()>:<public abstract>:<android.view.Window>
<android.widget.OverScroller: void setFriction(float)>:<public final>:<android.widget.OverScroller>
<android.view.ViewStub: void setInflatedId(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.SlidingDrawer: void setOnDrawerScrollListener(android.widget.SlidingDrawer.OnDrawerScrollListener)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.ExpandableListView: long getExpandableListPosition(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.bluetooth.le.ScanRecord: byte[] getBytes()>:<public>:<android.bluetooth.le.ScanRecord>
<android.os.DropBoxManager.Entry: long getTimeMillis()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(int)>:<public>:<android.widget.TabHost.TabSpec>
<android.telecom.Connection: int getCallerDisplayNamePresentation()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.app.Notification.Style: void <init>()>:<public>:<android.app.Notification.Style>
<android.graphics.drawable.LayerDrawable: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.app.Instrumentation: void addMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.content.Context: android.content.pm.PackageManager getPackageManager()>:<public abstract>:<android.content.Context>
<android.os.UserHandle: int describeContents()>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.hardware.camera2.CameraMetadata: java.util.List getKeys()>:<public>:<android.hardware.camera2.CameraMetadata>
<android.graphics.Path: void rLineTo(float,float)>:<public>:<android.graphics.Path>
<android.content.ContentQueryMap: void setKeepUpdated(boolean)>:<public>:<android.content.ContentQueryMap:java.util.Observable>
<android.app.NotificationManager: void notify(int,android.app.Notification)>:<public>:<android.app.NotificationManager>
<android.widget.BaseAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.graphics.pdf.PdfRenderer.Page: void close()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.content.res.Configuration: java.lang.String toString()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.assist.AssistStructure.WindowNode: int getDisplayId()>:<public>:<android.app.assist.AssistStructure.WindowNode>
<android.view.animation.RotateAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.nfc.tech.NfcF: void setTimeout(int)>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>:<public>:<android.telephony.TelephonyManager>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.AdapterViewAnimator: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.view.ViewGroup: void setClipChildren(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>:<public static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.widget.SearchView: boolean isSubmitButtonEnabled()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getSummary(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.net.wifi.p2p.WifiP2pManager: void clearLocalServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.view.TextureView: void <init>(android.content.Context)>:<public>:<android.view.TextureView:android.view.View>
<android.text.AndroidCharacter: void <init>()>:<public>:<android.text.AndroidCharacter>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.text.style.ForegroundColorSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.app.LauncherActivity: android.content.Intent intentForPosition(int)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureUtils: void <init>()>:<>:<android.gesture.GestureUtils>
<android.content.SyncResult: void clear()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean isTdlsSupported()>:<public>:<android.net.wifi.WifiManager>
<android.print.PageRange: void <init>(int,int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.location.Geocoder: void <init>(android.content.Context)>:<public>:<android.location.Geocoder>
<android.util.ArraySet: java.lang.Object[] toArray()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>:<public abstract>:<android.text.ClipboardManager>
<android.app.FragmentManager: void <init>()>:<public>:<android.app.FragmentManager>
<android.service.voice.VoiceInteractionSession: void show(android.os.Bundle,int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.media.session.MediaController: void setVolumeTo(int,int)>:<public>:<android.media.session.MediaController>
<android.content.CursorLoader: void onReset()>:<protected>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.media.tv.TvTrackInfo.Builder: void <init>(int,java.lang.String)>:<public>:<android.media.tv.TvTrackInfo.Builder>
<android.drm.DrmInfo: java.lang.String getMimeType()>:<public>:<android.drm.DrmInfo>
<android.hardware.display.VirtualDisplay: void setSurface(android.view.Surface)>:<public>:<android.hardware.display.VirtualDisplay>
<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeCapability(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.net.NetworkInfo: android.net.NetworkInfo.State getState()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.widget.TextView: void setMinHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewFlipper: void setAutoStart(boolean)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.ViewParent getParentForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.SensorManager: java.util.List getSensorList(int)>:<public>:<android.hardware.SensorManager>
<android.renderscript.Element: android.renderscript.Element I32_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>:<public abstract>:<android.content.Context>
<android.graphics.RectF: boolean intersect(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.database.Cursor: java.lang.String getColumnName(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.webkit.GeolocationPermissions: void <init>()>:<>:<android.webkit.GeolocationPermissions>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle()>:<public final>:<android.os.Parcel>
<android.database.DatabaseUtils: void <init>()>:<public>:<android.database.DatabaseUtils>
<android.renderscript.FieldPacker: android.renderscript.Long3 subLong3()>:<public>:<android.renderscript.FieldPacker>
<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>:<public abstract>:<android.view.ViewParent>
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>:<public static>:<android.media.AudioRecord>
<android.widget.PopupWindow: void setFocusable(boolean)>:<public>:<android.widget.PopupWindow>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionSelect(int)>:<public abstract>:<android.widget.SearchView.OnSuggestionListener>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest build()>:<public>:<android.net.NetworkRequest.Builder>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconUri(android.net.Uri)>:<public>:<android.media.MediaDescription.Builder>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>:<public>:<android.os.MemoryFile>
<android.provider.SyncStateContract.Constants: void <init>()>:<public>:<android.provider.SyncStateContract.Constants:android.provider.SyncStateContract.Columns>
<android.app.PendingIntent: void send(int,android.app.PendingIntent.OnFinished,android.os.Handler)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizes()>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.hardware.camera2.CaptureResult: long getFrameNumber()>:<public>:<android.hardware.camera2.CaptureResult:android.hardware.camera2.CameraMetadata>
<android.animation.AnimatorListenerAdapter: void onAnimationCancel(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.transition.TransitionManager: void endTransitions(android.view.ViewGroup)>:<public static>:<android.transition.TransitionManager>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.webkit.WebSettings: int getDefaultFixedFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.ScriptIntrinsicBLAS: void CSYRK(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>:<public abstract>:<android.content.pm.PackageManager>
<android.mtp.MtpDevice: byte[] getThumbnail(int)>:<public>:<android.mtp.MtpDevice>
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall.Listener,boolean)>:<public>:<android.net.sip.SipAudioCall>
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)>:<public>:<android.hardware.input.InputManager>
<android.hardware.Camera.PictureCallback: void onPictureTaken(byte[],android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.PictureCallback>
<android.print.PrinterCapabilitiesInfo: int describeContents()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.text.TextDirectionHeuristic: boolean isRtl(char[],int,int)>:<public abstract>:<android.text.TextDirectionHeuristic>
<android.widget.VideoView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.net.Uri.Builder: void <init>()>:<public>:<android.net.Uri.Builder>
<android.inputmethodservice.InputMethodService: int getMaxWidth()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: void addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: boolean hasWindowFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setDescription(java.lang.String)>:<public>:<android.print.PrinterInfo.Builder>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.CookieManager: boolean acceptThirdPartyCookies(android.webkit.WebView)>:<public abstract>:<android.webkit.CookieManager>
<android.telecom.VideoProfile: void <init>(int)>:<public>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.preference.PreferenceGroup: void addItemFromInflater(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.opengl.GLES31Ext: void glObjectPtrLabelKHR(long,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.NotificationManager.Policy: java.lang.String priorityCategoriesToString(int)>:<public static>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.test.ActivityInstrumentationTestCase2: void tearDown()>:<protected>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.Intent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater.Filter)>:<public>:<android.view.LayoutInflater>
<android.content.pm.PackageInstaller.SessionParams: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)>:<public static>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.widget.TimePicker: java.lang.Integer getCurrentHour()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telecom.TelecomManager: void silenceRinger()>:<public>:<android.telecom.TelecomManager>
<android.view.KeyCharacterMap: int get(int,int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.renderscript.Script: void setVar(int,android.renderscript.BaseObj)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.location.Address: double getLatitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.media.MediaRecorder.AudioSource: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.AudioSource>
<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Fragment: android.app.FragmentManager getFragmentManager()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.transition.CircularPropagation: void setPropagationSpeed(float)>:<public>:<android.transition.CircularPropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.telephony.SmsMessage: java.lang.String getEmailFrom()>:<public>:<android.telephony.SmsMessage>
<junit.framework.TestListener: void endTest(junit.framework.Test)>:<public abstract>:<junit.framework.TestListener>
<android.widget.AbsSeekBar: void setMax(int)>:<public synchronized>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.widget.Gallery: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.test.ServiceTestCase: android.content.Context getSystemContext()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.GestureDetector: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.GestureDetector>
<android.content.Context: void startActivities(android.content.Intent[],android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.transition.Transition: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.telephony.CellIdentityLte: int hashCode()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.view.ViewDebug.ExportedProperty: java.lang.String category()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.app.ApplicationErrorReport: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.app.Notification.CarExtender.UnreadConversation: long getLatestTimestamp()>:<public>:<android.app.Notification.CarExtender.UnreadConversation>
<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress.Namespace getNamespace()>:<public>:<android.net.LocalSocketAddress>
<android.test.mock.MockContext: int checkCallingOrSelfUriPermission(android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept(int)>:<public>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.view.ViewManager: void removeView(android.view.View)>:<public abstract>:<android.view.ViewManager>
<android.net.wifi.WifiInfo: int getLinkSpeed()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.hardware.camera2.CameraMetadata: void <init>()>:<>:<android.hardware.camera2.CameraMetadata>
<android.app.admin.DevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.SyncStatusObserver: void onStatusChanged(int)>:<public abstract>:<android.content.SyncStatusObserver>
<android.app.TabActivity: android.widget.TabWidget getTabWidget()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.nfc.Tag: byte[] getId()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.provider.LiveFolders: void <init>()>:<>:<android.provider.LiveFolders:android.provider.BaseColumns>
<android.nfc.tech.Ndef: boolean isConnected()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.widget.TextView: android.text.method.KeyListener getKeyListener()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewFlipper: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.text.TextPaint: void set(android.text.TextPaint)>:<public>:<android.text.TextPaint:android.graphics.Paint>
<android.app.AlarmManager.AlarmClockInfo: long getTriggerTime()>:<public>:<android.app.AlarmManager.AlarmClockInfo:android.os.Parcelable>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>:<public>:<android.widget.Scroller>
<android.os.Debug: int getBinderReceivedTransactions()>:<public static native>:<android.os.Debug>
<android.widget.LinearLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.system.Os: void fchmod(java.io.FileDescriptor,int)>:<public static>:<android.system.Os>
<android.view.accessibility.AccessibilityNodeInfo: int hashCode()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewParent: boolean canResolveLayoutDirection()>:<public abstract>:<android.view.ViewParent>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.KeyCharacterMap: void <init>()>:<>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.provider.ContactsContract.ProviderStatus: void <init>()>:<>:<android.provider.ContactsContract.ProviderStatus>
<android.net.sip.SipAudioCall.Listener: void onCalling(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.os.WorkSource: boolean add(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.Notification.Action: android.app.RemoteInput[] getRemoteInputs()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void setMipMap(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.provider.Telephony.Sms.Inbox: void <init>()>:<>:<android.provider.Telephony.Sms.Inbox:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.service.voice.VoiceInteractionSessionService: void onLowMemory()>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Element: int getBytesSize()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.Sampler.Builder: void setWrapS(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.graphics.drawable.Drawable: int getLevel()>:<public final>:<android.graphics.drawable.Drawable>
<android.widget.TextView: int getSelectionStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.LayoutTransition: void removeTransitionListener(android.animation.LayoutTransition.TransitionListener)>:<public>:<android.animation.LayoutTransition>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient.CustomViewCallback)>:<public>:<android.webkit.WebChromeClient>
<android.telecom.Call.Details: boolean can(int,int)>:<public static>:<android.telecom.Call.Details>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>:<public>:<android.graphics.BitmapFactory.Options>
<android.graphics.drawable.LayerDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.Animator: void removeListener(android.animation.Animator.AnimatorListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager.AuthenticationResult)>:<public>:<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>:<public>:<android.media.MediaPlayer>
<android.webkit.CookieManager: boolean hasCookies()>:<public abstract>:<android.webkit.CookieManager>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.widget.ImageView:android.view.View>
<android.telecom.DisconnectCause: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri,long,long)>:<public static final>:<android.media.tv.TvContract>
<android.telephony.TelephonyManager: java.lang.String getMmsUserAgent()>:<public>:<android.telephony.TelephonyManager>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String flagToString(int)>:<public static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.SurfaceView:android.view.View>
<android.text.Layout: int getLineBottom(int)>:<public final>:<android.text.Layout>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>:<public static>:<org.xmlpull.v1.XmlPullParserFactory>
<android.database.MergeCursor: int getType(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.hardware.Camera.Parameters: void setFocusMode(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.app.Activity: void onUserLeaveHint()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.View: int getScrollIndicators()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.TextPaint: void <init>(android.graphics.Paint)>:<public>:<android.text.TextPaint:android.graphics.Paint>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.DefaultDatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.opengl.GLES31Ext: void glTexStorage3DMultisampleOES(int,int,int,int,int,int,boolean)>:<public static native>:<android.opengl.GLES31Ext>
<android.content.SyncResult: int describeContents()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>:<public static final>:<android.net.Proxy>
<android.text.method.ArrowKeyMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.test.InstrumentationTestCase: android.app.Activity launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewStructure: void asyncCommit()>:<public abstract>:<android.view.ViewStructure>
<android.app.backup.BackupDataInputStream: java.lang.String getKey()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.ImageView: android.widget.ImageView.ScaleType getScaleType()>:<public>:<android.widget.ImageView:android.view.View>
<junit.framework.Assert: void failNotSame(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.widget.ListPopupWindow: void postShow()>:<public>:<android.widget.ListPopupWindow>
<android.provider.Telephony.Mms.Draft: void <init>()>:<>:<android.provider.Telephony.Mms.Draft:android.provider.Telephony.BaseMmsColumns>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.TextView: void computeScroll()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.CellSignalStrengthWcdma: java.lang.String toString()>:<public>:<android.telephony.CellSignalStrengthWcdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.View: float getScaleY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.BigPictureStyle: void <init>()>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.media.audiofx.Virtualizer: void setStrength(short)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.app.Notification.Action: java.lang.Object clone()>:<public volatile>:<android.app.Notification.Action:android.os.Parcelable>
<android.app.UiAutomation: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>:<public>:<android.app.UiAutomation>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.provider.ContactsContract.PhoneLookup: void <init>()>:<>:<android.provider.ContactsContract.PhoneLookup:android.provider.BaseColumns,android.provider.ContactsContract.PhoneLookupColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>:<public>:<android.net.ConnectivityManager>
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.content.PeriodicSync: void <clinit>()>:<static>:<android.content.PeriodicSync:android.os.Parcelable>
<android.webkit.WebView: void onDraw(android.graphics.Canvas)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>:<public>:<android.text.SpannableStringInternal>
<android.service.carrier.MessagePdu: void <clinit>()>:<static>:<android.service.carrier.MessagePdu:android.os.Parcelable>
<android.view.View: void setLabelFor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.Network: void <init>()>:<>:<android.net.Network:android.os.Parcelable>
<android.content.Loader: void reset()>:<public>:<android.content.Loader>
<android.view.View: void setX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: java.lang.CharSequence getText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.GridView: int getRequestedColumnWidth()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.NotProvisionedException: void <init>(java.lang.String)>:<public>:<android.media.NotProvisionedException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setThumbnail(android.graphics.Bitmap)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.ScriptIntrinsicYuvToRGB create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.DatePicker: int getYear()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer.OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnInfoListener>
<android.graphics.Camera: void save()>:<public native>:<android.graphics.Camera>
<android.util.Log: int e(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.media.FaceDetector: void finalize()>:<protected>:<android.media.FaceDetector>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>:<public static>:<android.os.Environment>
<android.view.ViewParent: boolean isTextAlignmentResolved()>:<public abstract>:<android.view.ViewParent>
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.content.res.Configuration: boolean isLayoutSizeAtLeast(int)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.location.GpsStatus: int getMaxSatellites()>:<public>:<android.location.GpsStatus>
<android.graphics.drawable.VectorDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)>:<public static>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.security.keystore.KeyProtection: boolean isRandomizedEncryptionRequired()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.widget.TabHost: java.lang.String getCurrentTabTag()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.telecom.DisconnectCause: int hashCode()>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.media.audiofx.EnvironmentalReverb: void setReverbDelay(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.telecom.Call.Callback: void onParentChanged(android.telecom.Call,android.telecom.Call)>:<public>:<android.telecom.Call.Callback>
<android.view.animation.RotateAnimation: void <init>(float,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.opengl.GLES20: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.location.Address: double getLongitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.inputmethod.InputBinding: java.lang.String toString()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.test.TouchUtils: void touchAndCancelView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.transition.Transition: android.transition.Transition removeListener(android.transition.Transition.TransitionListener)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)>:<public static>:<android.net.sip.SipManager>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.content.pm.PackageManager: java.util.List queryInstrumentation(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.Context: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.view.ViewPropertyAnimator: void start()>:<public>:<android.view.ViewPropertyAnimator>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(java.lang.String)>:<public>:<android.net.wifi.WifiManager>
<android.preference.RingtonePreference: boolean getShowSilent()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.AdapterViewFlipper: void setAutoStart(boolean)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void playSoundEffect(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MenuItem.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.view.MenuItem.OnMenuItemClickListener>
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.webkit.WebView: int computeVerticalScrollRange()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Matrix: void mapPoints(float[])>:<public>:<android.graphics.Matrix>
<android.view.View: int getDrawingCacheQuality()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.widget.TextView: boolean onTextContextMenuItem(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)>:<public>:<android.os.RemoteCallbackList>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>:<public abstract>:<android.text.style.LineHeightSpan:android.text.style.ParagraphStyle,android.text.style.WrapTogetherSpan>
<android.app.FragmentController: void dispatchDestroy()>:<public>:<android.app.FragmentController>
<android.opengl.GLES31: int glGetProgramResourceLocation(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.renderscript.ScriptIntrinsicBLAS: void DTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.telephony.SmsManager: android.telephony.SmsManager getSmsManagerForSubscriptionId(int)>:<public static>:<android.telephony.SmsManager>
<android.media.MediaCrypto: boolean requiresSecureDecoderComponent(java.lang.String)>:<public final native>:<android.media.MediaCrypto>
<android.widget.Scroller: boolean computeScrollOffset()>:<public>:<android.widget.Scroller>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.CursorWrapper: byte[] getBlob(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.Fragment: void setEnterSharedElementCallback(android.app.SharedElementCallback)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.TextView: void setSingleLine(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Rect: void <init>(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setInsertionMarkerLocation(float,float,float,float,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.MediaController.MediaPlayerControl: boolean isPlaying()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.app.TaskStackBuilder: int getIntentCount()>:<public>:<android.app.TaskStackBuilder>
<android.widget.HeaderViewListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.Scroller: void setFinalY(int)>:<public>:<android.widget.Scroller>
<android.graphics.Rect: void offsetTo(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Scene,android.transition.Transition)>:<public>:<android.transition.TransitionManager>
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListPopupWindow>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.AudioTrack: int setAuxEffectSendLevel(float)>:<public>:<android.media.AudioTrack>
<android.preference.PreferenceActivity.Header: void <init>()>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getColumnCount()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoUnavailable(int)>:<public>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.webkit.WebMessagePort.WebMessageCallback: void onMessage(android.webkit.WebMessagePort,android.webkit.WebMessage)>:<public>:<android.webkit.WebMessagePort.WebMessageCallback>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.widget.ImageSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[],int,int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.content.ContentProviderOperation: boolean isUpdate()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.service.voice.VoiceInteractionSession.CommandRequest: void <init>()>:<>:<android.service.voice.VoiceInteractionSession.CommandRequest:android.service.voice.VoiceInteractionSession.Request>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.transition.ChangeBounds: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>:<public>:<android.graphics.Canvas>
<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>:<public final>:<android.os.Parcel>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int)>:<public>:<android.media.AudioTrack>
<android.content.ContentValues: java.util.Set valueSet()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.graphics.ColorMatrix: void setRGB2YUV()>:<public>:<android.graphics.ColorMatrix>
<android.nfc.tech.NfcF: int getMaxTransceiveLength()>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.Rating: android.media.Rating newPercentageRating(float)>:<public static>:<android.media.Rating:android.os.Parcelable>
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>:<public>:<android.graphics.Paint>
<android.print.PrintJob: android.print.PrintJobId getId()>:<public>:<android.print.PrintJob>
<android.os.Messenger: void <init>(android.os.Handler)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.opengl.GLES30: void glBindBufferRange(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telephony.CellIdentityLte: int getCi()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.net.RouteInfo: boolean isDefaultRoute()>:<public>:<android.net.RouteInfo:android.os.Parcelable>
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.webkit.WebMessagePort: void postMessage(android.webkit.WebMessage)>:<public abstract>:<android.webkit.WebMessagePort>
<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int)>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)>:<public static>:<android.security.KeyChain>
<android.graphics.Path: void addRoundRect(float,float,float,float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.widget.GridLayout: int getAlignmentMode()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getPassword()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.Paint: boolean isUnderlineText()>:<public final>:<android.graphics.Paint>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.test.mock.MockContext: void enforcePermission(java.lang.String,int,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.mock.MockResources: java.lang.String getResourceName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.media.RemoteController.OnClientUpdateListener: void onClientMetadataUpdate(android.media.RemoteController.MetadataEditor)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.widget.AdapterViewFlipper: void stopFlipping()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.content.pm.ResolveInfo: int getIconResource()>:<public final>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.util.AttributeSet: int getAttributeCount()>:<public abstract>:<android.util.AttributeSet>
<android.content.res.Resources: java.lang.String getQuantityString(int,int)>:<public>:<android.content.res.Resources>
<android.test.MoreAsserts: void assertContentsInOrder(java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>:<public>:<android.telephony.PhoneStateListener>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>:<public static>:<android.text.TextUtils>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidthsFor(int)>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.opengl.GLES20: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES20>
<android.text.style.QuoteSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.projection.MediaProjection.Callback: void onStop()>:<public>:<android.media.projection.MediaProjection.Callback>
<android.os.FileObserver: void stopWatching()>:<public>:<android.os.FileObserver>
<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.app.NotificationManager: int getCurrentInterruptionFilter()>:<public final>:<android.app.NotificationManager>
<android.renderscript.Type: android.renderscript.Type createXY(android.renderscript.RenderScript,android.renderscript.Element,int,int)>:<public static>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.view.DragEvent: boolean getResult()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.view.KeyEvent: void <init>(long,long,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.text.style.TtsSpan.SemioticClassBuilder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.SemioticClassBuilder:android.text.style.TtsSpan.Builder>
<android.provider.CalendarContract.Calendars: void <clinit>()>:<static>:<android.provider.CalendarContract.Calendars:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.CalendarColumns>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.media.MediaRecorder: void setOutputFile(java.lang.String)>:<public>:<android.media.MediaRecorder>
<android.location.Criteria: void setAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.graphics.Path: void setFillType(android.graphics.Path.FillType)>:<public>:<android.graphics.Path>
<android.animation.ObjectAnimator: void setProperty(android.util.Property)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.provider.Contacts.People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.renderscript.Element: android.renderscript.Element U64_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.service.chooser.ChooserTargetService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.chooser.ChooserTargetService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.telecom.CallAudioState: void <clinit>()>:<static>:<android.telecom.CallAudioState:android.os.Parcelable>
<android.media.MediaExtractor: void seekTo(long,int)>:<public native>:<android.media.MediaExtractor>
<android.renderscript.Script.Builder: void <init>()>:<>:<android.renderscript.Script.Builder>
<android.os.Parcel: void writeLong(long)>:<public final>:<android.os.Parcel>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.nfc.tech.NfcB: byte[] getApplicationData()>:<public>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>:<public>:<android.drm.DrmSupportInfo>
<android.telecom.Call.Details: int getHandlePresentation()>:<public>:<android.telecom.Call.Details>
<android.media.ToneGenerator: void <init>(int,int)>:<public>:<android.media.ToneGenerator>
<android.widget.Spinner: java.lang.CharSequence getPrompt()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.hardware.Camera.Parameters: void set(java.lang.String,java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.print.PrintJob: boolean isCompleted()>:<public>:<android.print.PrintJob>
<android.widget.ViewAnimator: void removeView(android.view.View)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.LightingColorFilter: void <init>(int,int)>:<public>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<android.telecom.Connection: void onSeparate()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.widget.ZoomButtonsController: void <init>(android.view.View)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.TwoLineListItem: void <init>(android.content.Context)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.TableLayout: boolean isShrinkAllColumns()>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void layout(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDAdd()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent.PointerCoords[],int,float,float,int,int,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.Uri: java.lang.String encode(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Instrumentation.ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation.ActivityMonitor>
<android.content.pm.PackageInstaller.SessionInfo: int describeContents()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.net.Network: java.net.InetAddress[] getAllByName(java.lang.String)>:<public>:<android.net.Network:android.os.Parcelable>
<android.graphics.ColorMatrix: void <init>()>:<public>:<android.graphics.ColorMatrix>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance()>:<public static>:<android.text.BidiFormatter>
<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public abstract>:<android.view.ViewParent>
<android.media.MediaRouter.Callback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>:<public abstract>:<android.media.MediaRouter.Callback>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.service.dreams.DreamService: void onPanelClosed(int,android.view.Menu)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.content.pm.PackageManager: int checkSignatures(int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.os.Debug: void <init>()>:<>:<android.os.Debug>
<android.telecom.RemoteConnection.Callback: void onPostDialWait(android.telecom.RemoteConnection,java.lang.String)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.graphics.Outline: void setEmpty()>:<public>:<android.graphics.Outline>
<android.app.SearchableInfo: void <init>()>:<>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>:<public>:<android.app.DownloadManager>
<android.service.voice.VoiceInteractionSession: void onRequestCompleteVoice(android.service.voice.VoiceInteractionSession.CompleteVoiceRequest)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setSubscriptionAddress(android.net.Uri)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ListPopupWindow>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>:<public>:<android.app.backup.BackupManager>
<android.media.session.MediaController.TransportControls: void play()>:<public>:<android.media.session.MediaController.TransportControls>
<android.animation.LayoutTransition: void addChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.content.Context: android.content.res.AssetManager getAssets()>:<public abstract>:<android.content.Context>
<android.content.ContextWrapper: java.io.File[] getExternalMediaDirs()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.test.mock.MockContext: android.content.ContentResolver getContentResolver()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.RestrictionEntry: int hashCode()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.bluetooth.le.BluetoothLeScanner: void flushPendingScanResults(android.bluetooth.le.ScanCallback)>:<public>:<android.bluetooth.le.BluetoothLeScanner>
<android.view.accessibility.AccessibilityNodeInfo: void removeAction(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.assist.AssistContent: java.lang.String getStructuredData()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.telephony.CellSignalStrengthLte: int getLevel()>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: int getUnicodeChar(int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.UiAutomation: boolean injectInputEvent(android.view.InputEvent,boolean)>:<public>:<android.app.UiAutomation>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.BaseInterpolator>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOver()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter.Blur)>:<public>:<android.graphics.BlurMaskFilter:android.graphics.MaskFilter>
<android.net.Uri: java.lang.String getEncodedUserInfo()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.os.StrictMode.VmPolicy.Builder: void <init>()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.Canvas: int getMaximumBitmapWidth()>:<public>:<android.graphics.Canvas>
<android.database.sqlite.SQLiteClosable: void close()>:<public>:<android.database.sqlite.SQLiteClosable:java.io.Closeable>
<android.bluetooth.BluetoothGattDescriptor: java.util.UUID getUuid()>:<public>:<android.bluetooth.BluetoothGattDescriptor>
<android.media.session.MediaController.Callback: void onQueueChanged(java.util.List)>:<public>:<android.media.session.MediaController.Callback>
<android.util.ArrayMap: void clear()>:<public>:<android.util.ArrayMap:java.util.Map>
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>:<public static>:<android.telephony.SmsManager>
<android.util.StateSet: java.lang.String dump(int[])>:<public static>:<android.util.StateSet>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<junit.framework.Assert: void assertTrue(java.lang.String,boolean)>:<public static>:<junit.framework.Assert>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.KeyCharacterMap.UnavailableException: void <init>(java.lang.String)>:<public>:<android.view.KeyCharacterMap.UnavailableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.telecom.GatewayInfo: void <clinit>()>:<static>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.content.ContentProviderClient: void <init>()>:<>:<android.content.ContentProviderClient>
<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int)>:<public>:<android.hardware.SensorManager>
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)>:<public>:<android.gesture.GestureLibrary>
<android.test.ActivityInstrumentationTestCase: void setUp()>:<protected>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.renderscript.Type: void <init>()>:<>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.widget.TextView: int getHighlightColor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioManager: boolean isStreamMute(int)>:<public>:<android.media.AudioManager>
<android.app.ActionBar.TabListener: void onTabUnselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.preference.MultiSelectListPreference: int findIndexOfValue(java.lang.String)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.preference.Preference: void setTitle(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float3)>:<public>:<android.renderscript.FieldPacker>
<android.widget.Scroller: int getFinalX()>:<public final>:<android.widget.Scroller>
<android.app.ListFragment: android.widget.ListView getListView()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.graphics.PathMeasure: boolean isClosed()>:<public>:<android.graphics.PathMeasure>
<android.provider.ContactsContract.ProviderStatus: void <clinit>()>:<static>:<android.provider.ContactsContract.ProviderStatus>
<android.media.midi.MidiDeviceService: void <init>()>:<public>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setChannelIndexMask(int)>:<public>:<android.media.AudioFormat.Builder>
<android.opengl.GLES10: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<android.telecom.Call: void stopDtmfTone()>:<public>:<android.telecom.Call>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setMediaId(java.lang.String)>:<public>:<android.media.MediaDescription.Builder>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.Class)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.animation.ValueAnimator: long getDuration()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.View: void onWindowSystemUiVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>:<public>:<android.app.FragmentController>
<android.app.FragmentBreadCrumbs: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.renderscript.Allocation: void copyFromUnchecked(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.print.PageRange: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActivityManager.RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.widget.GridLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.content.BroadcastReceiver: void setOrderedHint(boolean)>:<public final>:<android.content.BroadcastReceiver>
<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>:<public>:<android.media.MediaRecorder>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.opengl.GLES20: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES20>
<android.telecom.GatewayInfo: android.net.Uri getGatewayAddress()>:<public>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.widget.ScrollView: void smoothScrollBy(int,int)>:<public final>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPort(int)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.telephony.IccOpenLogicalChannelResponse: byte[] getSelectResponse()>:<public>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.content.AsyncQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.test.ProviderTestCase: void setUp()>:<protected>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.service.dreams.DreamService: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.telecom.RemoteConnection: void setCallAudioState(android.telecom.CallAudioState)>:<public>:<android.telecom.RemoteConnection>
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.Settings.System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.test.ActivityInstrumentationTestCase2: android.app.Activity getActivity()>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.Element: void <init>()>:<>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.media.effect.Effect: void release()>:<public abstract>:<android.media.effect.Effect>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.DownloadManager: void <init>()>:<>:<android.app.DownloadManager>
<android.content.pm.PackageManager: java.util.List getPreferredPackages(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.util.LayoutDirection: void <init>()>:<>:<android.util.LayoutDirection>
<android.opengl.GLES30: void glBindVertexArray(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.print.PrinterId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrinterId:android.os.Parcelable>
<android.webkit.PluginStub: android.view.View getFullScreenView(int,android.content.Context)>:<public abstract>:<android.webkit.PluginStub>
<android.media.midi.MidiOutputPort: void onDisconnect(android.media.midi.MidiReceiver)>:<public>:<android.media.midi.MidiOutputPort:android.media.midi.MidiSender,java.io.Closeable>
<android.os.ResultReceiver: void <init>(android.os.Handler)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setQueryString(java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.print.PrintAttributes: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.nfc.cardemulation.CardEmulation: boolean unsetPreferredService(android.app.Activity)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebChromeClient.FileChooserParams: android.content.Intent createIntent()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>:<public final>:<android.os.Parcel>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.Window: boolean requestFeature(int)>:<public>:<android.view.Window>
<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.Paint: void setTextScaleX(float)>:<public native>:<android.graphics.Paint>
<android.content.SharedPreferences: long getLong(java.lang.String,long)>:<public abstract>:<android.content.SharedPreferences>
<android.bluetooth.BluetoothGattServer: java.util.List getDevicesMatchingConnectionStates(int[])>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback)>:<public>:<android.media.MediaRouter>
<android.app.IntentService: int onStartCommand(android.content.Intent,int,int)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.Activity: android.content.Intent getParentActivityIntent()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.SyncStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.nfc.tech.BasicTagTechnology: void close()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.widget.AutoCompleteTextView: void showDropDown()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AutoCompleteTextView: void performValidation()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.net.SSLCertificateSocketFactory: void setHostname(java.net.Socket,java.lang.String)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: boolean isPivotYRelative()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.telecom.Connection: void setPostDialWait(java.lang.String)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.graphics.Paint: void setTextSize(float)>:<public native>:<android.graphics.Paint>
<android.content.pm.PermissionInfo: int describeContents()>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.RadioGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.Image: void close()>:<public abstract>:<android.media.Image:java.lang.AutoCloseable>
<android.app.Dialog: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.util.Rational: int compareTo(android.util.Rational)>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.media.tv.TvTrackInfo: java.lang.CharSequence getDescription()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.telephony.CellInfoLte: int hashCode()>:<public>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.media.AudioFormat: int getChannelIndexMask()>:<public>:<android.media.AudioFormat>
<android.graphics.drawable.NinePatchDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.Switch: void drawableHotspotChanged(float,float)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.os.Debug.InstructionCount: boolean collect()>:<public>:<android.os.Debug.InstructionCount>
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus.Listener)>:<public>:<android.location.LocationManager>
<android.graphics.Bitmap: boolean isRecycled()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.util.AndroidRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.util.AndroidException: void <init>()>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<android.test.mock.MockContext: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int)>:<public>:<android.print.PrintAttributes.MediaSize>
<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<android.print.pdf.PrintedPdfDocument: android.graphics.pdf.PdfDocument.Page startPage(int)>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String,long)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.app.assist.AssistStructure.ViewNode: float getElevation()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.String)>:<public>:<android.widget.RemoteViews.ActionException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.AbstractCursor: boolean isFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.telephony.CellIdentityWcdma: int getLac()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.printservice.PrintDocument: android.os.ParcelFileDescriptor getData()>:<public>:<android.printservice.PrintDocument>
<android.hardware.Camera.Parameters: boolean isAutoWhiteBalanceLockSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.LevelListDrawable: void <init>()>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.CheckBox: void <init>(android.content.Context)>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.TextView: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothDevice: boolean createBond()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.MediaRouteButton: void onAttachedToWindow()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.res.AssetFileDescriptor: java.lang.String toString()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<org.json.JSONArray: int optInt(int)>:<public>:<org.json.JSONArray>
<android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>:<public static>:<android.provider.DocumentsContract>
<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()>:<public>:<android.net.sip.SipSession>
<android.view.View: void setPressed(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.net.http.HttpResponseCache: int getNetworkCount()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.util.SparseLongArray: int keyAt(int)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.speech.RecognitionService.Callback: void error(int)>:<public>:<android.speech.RecognitionService.Callback>
<android.telecom.GatewayInfo: android.net.Uri getOriginalAddress()>:<public>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.media.ImageReader: android.view.Surface getSurface()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.test.RenamingDelegatingContext: java.io.File getFileStreamPath(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.widget.AdapterView: long getSelectedItemId()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaDrm: android.media.MediaDrm.CryptoSession getCryptoSession(byte[],java.lang.String,java.lang.String)>:<public>:<android.media.MediaDrm>
<android.app.Fragment: void setInitialSavedState(android.app.Fragment.SavedState)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.system.Os: void tcsendbreak(java.io.FileDescriptor,int)>:<public static>:<android.system.Os>
<android.telephony.CellSignalStrengthGsm: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.provider.MediaStore.Video: void <init>()>:<public>:<android.provider.MediaStore.Video>
<android.media.AudioDeviceInfo: boolean isSink()>:<public>:<android.media.AudioDeviceInfo>
<android.media.MediaCodec.CryptoException: int getErrorCode()>:<public>:<android.media.MediaCodec.CryptoException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.job.JobInfo: boolean isPeriodic()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.net.sip.SipAudioCall: void close()>:<public>:<android.net.sip.SipAudioCall>
<android.widget.ListView: void onMeasure(int,int)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.security.keystore.KeyExpiredException: void <init>()>:<public>:<android.security.keystore.KeyExpiredException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.provider.CalendarContract.ExtendedProperties: void <init>()>:<>:<android.provider.CalendarContract.ExtendedProperties:android.provider.BaseColumns,android.provider.CalendarContract.ExtendedPropertiesColumns,android.provider.CalendarContract.EventsColumns>
<android.animation.FloatArrayEvaluator: void <init>()>:<public>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.drm.DrmManagerClient.OnErrorListener: void onError(android.drm.DrmManagerClient,android.drm.DrmErrorEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnErrorListener>
<android.content.res.TypedArray: float getFloat(int,float)>:<public>:<android.content.res.TypedArray>
<android.view.ViewGroup: void jumpDrawablesToCurrentState()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Paint: android.graphics.Paint.FontMetricsInt getFontMetricsInt()>:<public>:<android.graphics.Paint>
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>:<public>:<android.app.backup.BackupDataOutput>
<android.graphics.drawable.RotateDrawable: void <init>()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.app.LauncherActivity: android.app.LauncherActivity.ListItem itemForPosition(int)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.util.JsonReader: void endObject()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.net.wifi.WifiInfo: java.lang.String toString()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.telecom.InCallService: void onBringToForeground(boolean)>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar: void selectTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.media.RemoteController.OnClientUpdateListener: void onClientChange(boolean)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] indexMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.opengl.GLES20: void glUniform1i(int,int)>:<public static native>:<android.opengl.GLES20>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.net.wifi.WifiManager: boolean reassociate()>:<public>:<android.net.wifi.WifiManager>
<android.net.NetworkInfo: android.net.NetworkInfo.DetailedState getDetailedState()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.app.PendingIntent.CanceledException: void <init>()>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.KeyEvent: boolean isCapsLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: void setContextClickable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setForegroundTintList(android.content.res.ColorStateList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String[])>:<public transient>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.app.FragmentController: boolean execPendingActions()>:<public>:<android.app.FragmentController>
<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyFlashScreen()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.telecom.Connection: void onHold()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.provider.Contacts.Extensions: void <clinit>()>:<static>:<android.provider.Contacts.Extensions:android.provider.BaseColumns,android.provider.Contacts.ExtensionsColumns>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.TextView: boolean getFreezesText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Notification: java.lang.String getGroup()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.graphics.drawable.shapes.RectShape: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.net.Uri: java.lang.String getHost()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Fragment: boolean isHidden()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.DrawableContainer: int getAlpha()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>:<public>:<android.graphics.BitmapShader:android.graphics.Shader>
<android.widget.CalendarView: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.Contacts: void <init>()>:<>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.animation.LayoutTransition: void setAnimateParentHierarchy(boolean)>:<public>:<android.animation.LayoutTransition>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.media.tv.TvInputService.HardwareSession: void <init>(android.content.Context)>:<public>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.content.Context: java.io.File getFilesDir()>:<public abstract>:<android.content.Context>
<android.net.TrafficStats: long getUidRxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.opengl.GLES11: void glPointParameterx(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setExtras(android.os.Bundle)>:<public>:<android.content.SyncRequest.Builder>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.speech.tts.SynthesisRequest: java.lang.String getVariant()>:<public>:<android.speech.tts.SynthesisRequest>
<android.print.PrintJob: boolean isBlocked()>:<public>:<android.print.PrintJob>
<android.os.Bundle: void clear()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.Fragment: void onStart()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.NumberPicker: void drawableStateChanged()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)>:<public abstract>:<android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener>
<android.service.voice.VoiceInteractionSessionService: void onCreate()>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES10: void glHint(int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.view.DragEvent: java.lang.String toString()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.os.Handler: android.os.Message obtainMessage()>:<public final>:<android.os.Handler>
<android.telephony.SubscriptionManager: boolean isNetworkRoaming(int)>:<public>:<android.telephony.SubscriptionManager>
<android.app.Fragment: void onResume()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.admin.DevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.View: int getOverScrollMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.DevicePolicyManager: void removeActiveAdmin(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.util.LruCache: java.lang.Object create(java.lang.Object)>:<protected>:<android.util.LruCache>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)>:<public static>:<android.media.CameraProfile>
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>:<public>:<android.os.Handler>
<android.nfc.tech.BasicTagTechnology: void <init>()>:<>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.os.Process: void sendSignal(int,int)>:<public static final native>:<android.os.Process>
<android.print.PrintJobInfo: long getCreationTime()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.service.chooser.ChooserTarget: android.graphics.drawable.Icon getIcon()>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.telecom.RemoteConference.Callback: void onConnectionAdded(android.telecom.RemoteConference,android.telecom.RemoteConnection)>:<public>:<android.telecom.RemoteConference.Callback>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.provider.MediaStore.Files: void <init>()>:<public>:<android.provider.MediaStore.Files>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.PathMeasure: void finalize()>:<protected>:<android.graphics.PathMeasure>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Rect: void <clinit>()>:<static>:<android.graphics.Rect:android.os.Parcelable>
<android.view.View: int getBaseline()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRecorder: void release()>:<public native>:<android.media.MediaRecorder>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.media.AudioTrack: int getPlayState()>:<public>:<android.media.AudioTrack>
<android.service.dreams.DreamService: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.graphics.RectF: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.StrictMode.VmPolicy: void <clinit>()>:<static>:<android.os.StrictMode.VmPolicy>
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.nfc.tech.MifareClassic: void transfer(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.View: void buildDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,int[],int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.util.ArraySet: boolean equals(java.lang.Object)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.media.midi.MidiManager: void registerDeviceCallback(android.media.midi.MidiManager.DeviceCallback,android.os.Handler)>:<public>:<android.media.midi.MidiManager>
<android.opengl.GLES20: void glUniform1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.provider.CalendarContract.EventsEntity: void <init>()>:<>:<android.provider.CalendarContract.EventsEntity:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.EventsColumns>
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.printservice.PrintJob: int getAdvancedIntOption(java.lang.String)>:<public>:<android.printservice.PrintJob>
<android.nfc.NdefRecord: android.net.Uri toUri()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>:<public>:<android.app.LocalActivityManager>
<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>:<public>:<android.webkit.WebChromeClient>
<android.provider.Contacts.Photos: void <clinit>()>:<static>:<android.provider.Contacts.Photos:android.provider.BaseColumns,android.provider.Contacts.PhotosColumns>
<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.print.PrintAttributes: int hashCode()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.transition.SidePropagation: void setSide(int)>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus closeConvertSession(int)>:<public>:<android.drm.DrmManagerClient>
<android.accounts.OperationCanceledException: void <init>()>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoWidth(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.telecom.RemoteConnection: int getCallerDisplayNamePresentation()>:<public>:<android.telecom.RemoteConnection>
<android.app.Activity: void onPostCreate(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>:<public static>:<android.text.format.DateFormat>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RoundRectShape clone()>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.view.animation.Animation: void ensureInterpolator()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.ActivityManager: boolean clearApplicationUserData()>:<public>:<android.app.ActivityManager>
<android.inputmethodservice.KeyboardView: void swipeDown()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.view.ViewStructure: void setChecked(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.widget.Toolbar: int getContentInsetRight()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.test.mock.MockCursor: boolean requery()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int,android.os.Handler,android.os.ParcelFileDescriptor.OnCloseListener)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.content.res.Configuration: int getLayoutDirection()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.media.MediaPlayer: void setSyncParams(android.media.SyncParams)>:<public native>:<android.media.MediaPlayer>
<android.inputmethodservice.Keyboard: boolean isShifted()>:<public>:<android.inputmethodservice.Keyboard>
<android.view.Window: void invalidatePanelMenu(int)>:<public abstract>:<android.view.Window>
<android.widget.PopupWindow: void update(int,int)>:<public>:<android.widget.PopupWindow>
<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.AbsListView: void setVerticalScrollbarPosition(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.ContentObserver: void dispatchChange(boolean)>:<public final>:<android.database.ContentObserver>
<android.gesture.GestureLibrary: int getSequenceType()>:<public>:<android.gesture.GestureLibrary>
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView.Validator getValidator()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.NotificationManager: boolean isNotificationPolicyAccessGranted()>:<public>:<android.app.NotificationManager>
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>:<public>:<android.animation.LayoutTransition>
<android.media.MediaRecorder: void setMaxFileSize(long)>:<public native>:<android.media.MediaRecorder>
<android.media.tv.TvContract.Programs.Genres: java.lang.String encode(java.lang.String[])>:<public static transient>:<android.media.tv.TvContract.Programs.Genres>
<android.content.ClipData: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>:<public static>:<android.telephony.SmsMessage>
<junit.framework.Assert: void fail(java.lang.String)>:<public static>:<junit.framework.Assert>
<android.graphics.pdf.PdfRenderer: void close()>:<public>:<android.graphics.pdf.PdfRenderer:java.lang.AutoCloseable>
<android.print.PrinterInfo: java.lang.String toString()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.Switch: void setTrackTintList(android.content.res.ColorStateList)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.View: float getRotation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputDevice.MotionRange: float getMin()>:<public>:<android.view.InputDevice.MotionRange>
<android.app.AppOpsManager: int startOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.provider.Contacts.ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>:<public>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.LocalSocket: boolean isBound()>:<public synchronized>:<android.net.LocalSocket:java.io.Closeable>
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>:<public final>:<android.content.BroadcastReceiver>
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.view.Window: void closeAllPanels()>:<public abstract>:<android.view.Window>
<android.os.Parcel: void writeInt(int)>:<public final>:<android.os.Parcel>
<android.view.WindowContentFrameStats: java.lang.String toString()>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.renderscript.Long2: void <init>(long,long)>:<public>:<android.renderscript.Long2>
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.security.KeyChain: android.content.Intent createInstallIntent()>:<public static>:<android.security.KeyChain>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(android.os.UserHandle)>:<public>:<android.appwidget.AppWidgetManager>
<android.content.Loader: void deliverResult(java.lang.Object)>:<public>:<android.content.Loader>
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.app.PendingIntent)>:<public>:<android.net.ConnectivityManager>
<android.view.WindowContentFrameStats: void <clinit>()>:<static>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.text.method.BaseKeyListener: boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.widget.SimpleCursorAdapter.CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public abstract>:<android.widget.SimpleCursorAdapter.CursorToStringConverter>
<android.renderscript.Float2: void <init>()>:<public>:<android.renderscript.Float2>
<android.graphics.drawable.NinePatchDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.print.PageRange: int getStart()>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.view.MotionEvent: float getHistoricalX(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.renderscript.Allocation: void copyFromUnchecked(java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.MotionEvent: void setSource(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.hardware.usb.UsbInterface: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.webkit.URLUtil: java.lang.String composeSearchUrl(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.view.VelocityTracker: void recycle()>:<public>:<android.view.VelocityTracker>
<android.app.DownloadManager.Request: void allowScanningByMediaScanner()>:<public>:<android.app.DownloadManager.Request>
<android.graphics.SurfaceTexture: void <init>(int,boolean)>:<public>:<android.graphics.SurfaceTexture>
<android.transition.Transition: android.transition.TransitionValues getTransitionValues(android.view.View,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.os.Parcel: void readException(int,java.lang.String)>:<public final>:<android.os.Parcel>
<org.json.JSONArray: double optDouble(int)>:<public>:<org.json.JSONArray>
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.BaseInterpolator>
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.provider.Telephony.Sms.Draft: void <clinit>()>:<static>:<android.provider.Telephony.Sms.Draft:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.widget.AbsListView: boolean onInterceptHoverEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ListView: boolean canAnimate()>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.Instrumentation: void setAutomaticPerformanceSnapshots()>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>:<public abstract>:<android.webkit.WebSettings>
<android.app.Instrumentation: boolean isProfiling()>:<public>:<android.app.Instrumentation>
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.text.Layout: int getEllipsisStart(int)>:<public abstract>:<android.text.Layout>
<android.print.PrintDocumentInfo: int getContentType()>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onSessionModifyRequestReceived(android.telecom.RemoteConnection.VideoProvider,android.telecom.VideoProfile)>:<public>:<android.telecom.RemoteConnection.VideoProvider.Callback>
<android.content.IntentFilter: void <init>()>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.View: int getPaddingTop()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>:<public abstract>:<android.os.IBinder>
<android.telephony.CellSignalStrengthGsm: int describeContents()>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.opengl.GLES30: java.lang.String glGetStringi(int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ScrollView: void measureChild(android.view.View,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.graphics.drawable.DrawableWrapper: boolean isStateful()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.job.JobInfo: int getId()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.app.admin.DevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.telephony.IccOpenLogicalChannelResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.text.style.QuoteSpan: int describeContents()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.view.ViewParent: int getLayoutDirection()>:<public abstract>:<android.view.ViewParent>
<android.renderscript.Element: android.renderscript.Element U64_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.PopupWindow: void setIgnoreCheekPress()>:<public>:<android.widget.PopupWindow>
<android.widget.ListView: void setFooterDividersEnabled(boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ImageView: void setColorFilter(int)>:<public final>:<android.widget.ImageView:android.view.View>
<android.net.Network: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.Network:android.os.Parcelable>
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Activity: void setVolumeControlStream(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.backup.BackupAgentHelper: void <init>()>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.database.Cursor: boolean getWantsAllOnMoveCalls()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.net.wifi.WifiManager: void <init>()>:<>:<android.net.wifi.WifiManager>
<android.view.WindowContentFrameStats: int describeContents()>:<public>:<android.view.WindowContentFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.content.DialogInterface.OnDismissListener: void onDismiss(android.content.DialogInterface)>:<public abstract>:<android.content.DialogInterface.OnDismissListener>
<android.app.LocalActivityManager: void dispatchDestroy(boolean)>:<public>:<android.app.LocalActivityManager>
<android.renderscript.ScriptIntrinsicColorMatrix: void setYUVtoRGB()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>:<public>:<android.media.AudioRecord>
<android.speech.SpeechRecognizer: void cancel()>:<public>:<android.speech.SpeechRecognizer>
<android.hardware.camera2.CameraManager.AvailabilityCallback: void <init>()>:<public>:<android.hardware.camera2.CameraManager.AvailabilityCallback>
<android.media.AudioTrack: int getNativeFrameCount()>:<protected>:<android.media.AudioTrack>
<android.content.pm.ConfigurationInfo: void <init>()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<dalvik.'annotation'.TestTarget: java.lang.String conceptName()>:<public abstract>:<dalvik.annotation.TestTarget:java.lang.annotation.Annotation>
<android.telephony.SmsMessage: java.lang.String getEmailBody()>:<public>:<android.telephony.SmsMessage>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setDisplayName(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>:<public>:<android.app.WallpaperManager>
<android.os.Binder: void finalize()>:<protected>:<android.os.Binder:android.os.IBinder>
<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>:<public static transient>:<android.text.TextUtils>
<android.opengl.GLES11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.animation.LayoutTransition: java.util.List getTransitionListeners()>:<public>:<android.animation.LayoutTransition>
<android.system.Os: int recvfrom(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetSocketAddress)>:<public static>:<android.system.Os>
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener)>:<public>:<android.media.MediaPlayer>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setIntegerPart(java.lang.String)>:<public>:<android.text.style.TtsSpan.DecimalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.view.Window: boolean getAllowEnterTransitionOverlap()>:<public>:<android.view.Window>
<android.view.Window: void setSharedElementReturnTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.graphics.Path: void rMoveTo(float,float)>:<public>:<android.graphics.Path>
<android.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.net.VpnService: android.content.Intent prepare(android.content.Context)>:<public static>:<android.net.VpnService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getItemSelectedListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.accounts.Account: void <clinit>()>:<static>:<android.accounts.Account:android.os.Parcelable>
<android.media.AudioFormat: int getChannelMask()>:<public>:<android.media.AudioFormat>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.nfc.tech.MifareUltralight: void close()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.StaticLayout: int getEllipsisCount(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.speech.RecognitionListener: void onReadyForSpeech(android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<android.widget.AdapterView: long getItemIdAtPosition(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<org.xmlpull.v1.sax2.Driver: void setContentHandler(org.xml.sax.ContentHandler)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.Dialog: void create()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.media.MediaCodec: void <init>()>:<>:<android.media.MediaCodec>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>:<public transient>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.system.OsConstants: int WSTOPSIG(int)>:<public static>:<android.system.OsConstants>
<android.content.Context: int checkCallingUriPermission(android.net.Uri,int)>:<public abstract>:<android.content.Context>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>:<public abstract>:<android.app.FragmentTransaction>
<android.widget.GridView: int getHorizontalSpacing()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.shapes.OvalShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>:<public static>:<android.os.Debug>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: void <init>()>:<>:<android.view.accessibility.AccessibilityNodeInfo.RangeInfo>
<android.app.ProgressDialog: int getSecondaryProgress()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.database.sqlite.SQLiteOpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>:<public>:<android.app.backup.BackupDataOutput>
<android.media.midi.MidiDeviceInfo.PortInfo: java.lang.String getName()>:<public>:<android.media.midi.MidiDeviceInfo.PortInfo>
<android.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Rect: void setEmpty()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void BNNM(android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation,int,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.EdgeEffect: void setColor(int)>:<public>:<android.widget.EdgeEffect>
<android.app.assist.AssistStructure: void <clinit>()>:<static>:<android.app.assist.AssistStructure:android.os.Parcelable>
<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.SensorManager: boolean cancelTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>:<public>:<android.hardware.SensorManager>
<android.media.MediaActionSound: void release()>:<public>:<android.media.MediaActionSound>
<android.animation.PropertyValuesHolder: void <init>()>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.HeaderViewListAdapter: boolean removeHeader(android.view.View)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.content.UriPermission: void <init>()>:<>:<android.content.UriPermission:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>:<public static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void DSYR2K(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.TextView: boolean getIncludeFontPadding()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.R.anim: void <init>()>:<public>:<android.R.anim>
<android.content.ContentValues: void putNull(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.system.Os: java.net.SocketAddress getpeername(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.Canvas: void scale(float,float)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable.Callback)>:<public final>:<android.graphics.drawable.Drawable>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getClassName()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.widget.AlphabetIndexer: void <init>(android.database.Cursor,int,java.lang.CharSequence)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.app.ActivityManager.ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.preference.PreferenceScreen: boolean isOnSameScreenAsChildren()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.widget.Chronometer: void onWindowVisibilityChanged(int)>:<protected>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.content.pm.LauncherApps.Callback: void onPackageRemoved(java.lang.String,android.os.UserHandle)>:<public abstract>:<android.content.pm.LauncherApps.Callback>
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setFractionalPart(java.lang.String)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.database.CursorWrapper: java.lang.String getString(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.media.RemoteControlClient: void setMetadataUpdateListener(android.media.RemoteControlClient.OnMetadataUpdateListener)>:<public>:<android.media.RemoteControlClient>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void setInTouchMode(boolean)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.Drawable.Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.widget.ImageView: void setCropToPadding(boolean)>:<public>:<android.widget.ImageView:android.view.View>
<org.xmlpull.v1.sax2.Driver: java.lang.Object getProperty(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>:<public static>:<android.opengl.EGL14>
<android.view.ViewGroupOverlay: void remove(android.view.View)>:<public>:<android.view.ViewGroupOverlay:android.view.ViewOverlay>
<android.drm.DrmInfo: int getInfoType()>:<public>:<android.drm.DrmInfo>
<android.provider.ContactsContract.ProfileSyncState: void <init>()>:<>:<android.provider.ContactsContract.ProfileSyncState:android.provider.SyncStateContract.Columns>
<android.media.MediaDrm: void removeKeys(byte[])>:<public native>:<android.media.MediaDrm>
<android.view.ViewGroup: boolean getClipChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.EGLDisplay: boolean equals(java.lang.Object)>:<public>:<android.opengl.EGLDisplay:android.opengl.EGLObjectHandle>
<android.media.audiofx.Virtualizer: boolean getSpeakerAngles(int,int,int[])>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<org.json.JSONStringer: org.json.JSONStringer endObject()>:<public>:<org.json.JSONStringer>
<android.widget.GridLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()>:<public>:<android.text.style.MaskFilterSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.app.Fragment: void onDestroyOptionsMenu()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.DigitalClock: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.preference.Preference: void setSelectable(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>:<public final>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.net.IpPrefix: void <init>()>:<>:<android.net.IpPrefix:android.os.Parcelable>
<android.app.ActivityManager.ProcessErrorStateInfo: int describeContents()>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.test.mock.MockContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>:<public>:<android.graphics.drawable.Drawable>
<android.text.style.SuggestionSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceUnregistered(android.net.nsd.NsdServiceInfo)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.content.ClipData.Item: java.lang.String toString()>:<public>:<android.content.ClipData.Item>
<android.telecom.Call.Callback: void onStateChanged(android.telecom.Call,int)>:<public>:<android.telecom.Call.Callback>
<android.telephony.NeighboringCellInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.app.DialogFragment: void onStart()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.assist.AssistContent: android.content.Intent getIntent()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.app.VoiceInteractor.AbortVoiceRequest: void onAbortResult(android.os.Bundle)>:<public>:<android.app.VoiceInteractor.AbortVoiceRequest:android.app.VoiceInteractor.Request>
<android.os.Trace: void endSection()>:<public static>:<android.os.Trace>
<android.preference.ListPreference: java.lang.CharSequence getEntry()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.session.MediaSession: android.media.session.MediaController getController()>:<public>:<android.media.session.MediaSession>
<android.widget.TabWidget: void setDividerDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.provider.Telephony.Threads: void <init>()>:<>:<android.provider.Telephony.Threads:android.provider.Telephony.ThreadsColumns>
<android.app.Dialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.os.CountDownTimer: void onTick(long)>:<public abstract>:<android.os.CountDownTimer>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.transition.TransitionSet: android.transition.TransitionSet setOrdering(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.Uri: java.lang.String getEncodedQuery()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.test.mock.MockContext: int checkCallingOrSelfPermission(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.PopupWindow: void setTouchInterceptor(android.view.View.OnTouchListener)>:<public>:<android.widget.PopupWindow>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeathOnCleartextNetwork()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.text.style.AlignmentSpan.Standard: android.text.Layout.Alignment getAlignment()>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextChange(java.lang.String)>:<public abstract>:<android.widget.SearchView.OnQueryTextListener>
<android.media.audiofx.Visualizer: int getMeasurementMode()>:<public>:<android.media.audiofx.Visualizer>
<android.media.tv.TvInputService.Session: void onTimeShiftSeekTo(long)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.content.CursorLoader: void deliverResult(android.database.Cursor)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.nfc.NdefRecord: byte[] getId()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.content.ComponentName: java.lang.String toString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.os.Parcel: void writeBinderList(java.util.List)>:<public final>:<android.os.Parcel>
<android.media.MediaDataSource: void <init>()>:<public>:<android.media.MediaDataSource:java.io.Closeable>
<android.widget.AbsListView: int getRightPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.graphics.Typeface getTypeface()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.app.ProgressDialog: void setMax(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.drawable.ShapeDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.transition.ArcMotion: void <init>()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>:<public>:<android.content.res.Resources>
<android.media.MediaExtractor: boolean advance()>:<public native>:<android.media.MediaExtractor>
<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>:<public abstract>:<android.content.Context>
<android.view.animation.OvershootInterpolator: void <init>(float)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.BaseInterpolator>
<android.view.Display.Mode: int describeContents()>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.mtp.MtpObjectInfo: int getImagePixWidth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.widget.SimpleAdapter: void setViewBinder(android.widget.SimpleAdapter.ViewBinder)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.widget.TextView: void onAttachedToWindow()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.app.Notification.Builder: android.os.Bundle getExtras()>:<public>:<android.app.Notification.Builder>
<android.graphics.Canvas: void drawRGB(int,int,int)>:<public>:<android.graphics.Canvas>
<android.test.mock.MockPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.MediaRouter.UserRouteInfo: void setName(java.lang.CharSequence)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.widget.TableRow: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: android.media.session.MediaController getMediaController()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.os.ConditionVariable: void <init>()>:<public>:<android.os.ConditionVariable>
<android.content.Context: boolean isRestricted()>:<public>:<android.content.Context>
<android.media.MediaRecorder: void setInputSurface(android.view.Surface)>:<public>:<android.media.MediaRecorder>
<android.content.pm.PathPermission: java.lang.String getReadPermission()>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.content.ClipboardManager: boolean hasPrimaryClip()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.text.SpannableStringInternal: int length()>:<public final>:<android.text.SpannableStringInternal>
<android.net.TrafficStats: int getThreadStatsTag()>:<public static>:<android.net.TrafficStats>
<android.inputmethodservice.AbstractInputMethodService: void <init>()>:<public>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.webkit.WebView.WebViewTransport: android.webkit.WebView getWebView()>:<public synchronized>:<android.webkit.WebView.WebViewTransport>
<android.hardware.Sensor: java.lang.String toString()>:<public>:<android.hardware.Sensor>
<android.media.JetPlayer: boolean queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>:<public>:<android.media.JetPlayer>
<android.service.notification.StatusBarNotification: java.lang.Object clone()>:<public volatile>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.hardware.GeomagneticField: float getZ()>:<public>:<android.hardware.GeomagneticField>
<android.view.accessibility.AccessibilityNodeInfo: void setTextSelection(int,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<org.json.JSONObject: java.lang.String optString(java.lang.String)>:<public>:<org.json.JSONObject>
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.net.rtp.AudioGroup: void clear()>:<public>:<android.net.rtp.AudioGroup>
<android.drm.DrmInfoRequest: java.lang.String getMimeType()>:<public>:<android.drm.DrmInfoRequest>
<android.view.View: int getMeasuredHeight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabHost: void onTouchModeChanged(boolean)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.inputmethod.CursorAnchorInfo: int getCharacterBoundsFlags(int)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.widget.NumberPicker.Formatter: java.lang.String format(int)>:<public abstract>:<android.widget.NumberPicker.Formatter>
<android.text.method.BaseMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.content.ComponentName: android.content.ComponentName createRelative(java.lang.String,java.lang.String)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.graphics.Matrix: boolean postScale(float,float)>:<public>:<android.graphics.Matrix>
<android.widget.ImageButton: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.content.SearchRecentSuggestionsProvider: void <init>()>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.transition.ChangeTransform: java.lang.String[] getTransitionProperties()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.renderscript.Element: android.renderscript.Element PROGRAM_VERTEX(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.Selection: void extendSelection(android.text.Spannable,int)>:<public static final>:<android.text.Selection>
<android.provider.ContactsContract.Groups: android.content.EntityIterator newEntityIterator(android.database.Cursor)>:<public static>:<android.provider.ContactsContract.Groups:android.provider.BaseColumns,android.provider.ContactsContract.GroupsColumns,android.provider.ContactsContract.SyncColumns>
<android.preference.ListPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.MediaDrm: void setPropertyByteArray(java.lang.String,byte[])>:<public native>:<android.media.MediaDrm>
<android.util.AttributeSet: java.lang.String getClassAttribute()>:<public abstract>:<android.util.AttributeSet>
<android.os.BadParcelableException: void <init>(java.lang.Exception)>:<public>:<android.os.BadParcelableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRates()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.accounts.NetworkErrorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.location.GpsSatellite: boolean hasAlmanac()>:<public>:<android.location.GpsSatellite>
<android.media.midi.MidiOutputPort: void finalize()>:<protected>:<android.media.midi.MidiOutputPort:android.media.midi.MidiSender,java.io.Closeable>
<android.content.ContentProvider: void setReadPermission(java.lang.String)>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.hardware.Camera: void reconnect()>:<public final native>:<android.hardware.Camera>
<android.view.View: void setNextFocusForwardId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession.Callback: void onSeekTo(long)>:<public>:<android.media.session.MediaSession.Callback>
<android.telecom.ConnectionService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.preference.DialogPreference: android.view.View onCreateDialogView()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.GridView: int getColumnWidth()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.CalendarView: void setUnfocusedMonthDateColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceAdded(int)>:<public abstract>:<android.hardware.input.InputManager.InputDeviceListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.hardware.Camera.Parameters: java.lang.String getWhiteBalance()>:<public>:<android.hardware.Camera.Parameters>
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.inputmethodservice.InputMethodService: void hideWindow()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.sip.SipProfile: int describeContents()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.database.CursorJoiner: boolean hasNext()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.bluetooth.BluetoothGattCallback: void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.net.http.X509TrustManagerExtensions: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>:<public>:<android.net.http.X509TrustManagerExtensions>
<android.webkit.DateSorter: int getIndex(long)>:<public>:<android.webkit.DateSorter>
<android.widget.AbsListView: void setItemChecked(int,boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES20: void glBlendEquation(int)>:<public static native>:<android.opengl.GLES20>
<android.content.UriPermission: void <clinit>()>:<static>:<android.content.UriPermission:android.os.Parcelable>
<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.service.dreams.DreamService: void wakeUp()>:<public final>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.content.res.ObbInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.view.ViewGroup: void clearChildFocus(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.LayoutTransition: long getStartDelay(int)>:<public>:<android.animation.LayoutTransition>
<android.renderscript.Type: boolean hasFaces()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.mtp.MtpObjectInfo: int getThumbPixHeight()>:<public final>:<android.mtp.MtpObjectInfo>
<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>:<public final>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>:<public final>:<android.os.Handler>
<android.renderscript.ScriptIntrinsicBLAS: void STPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.LayerDrawable: int getBottomPadding()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.provider.MediaStore.Audio.Genres.Members: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Audio.Genres.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.media.browse.MediaBrowser.MediaItem: void <init>(android.media.MediaDescription,int)>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.webkit.CookieManager: void removeExpiredCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.view.View.OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)>:<public abstract>:<android.view.View.OnAttachStateChangeListener>
<android.media.AudioRecord: int getChannelConfiguration()>:<public>:<android.media.AudioRecord>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputConnection: boolean finishComposingText()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.animation.AnimationSet: android.view.animation.Animation clone()>:<protected volatile>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.AsyncQueryHandler.WorkerHandler: void handleMessage(android.os.Message)>:<public>:<android.content.AsyncQueryHandler.WorkerHandler:android.os.Handler>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setSessionId(int)>:<public>:<android.media.AudioTrack.Builder>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo newInstance(java.lang.String,java.lang.String,java.util.List)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeDeviceName(boolean)>:<public>:<android.bluetooth.le.AdvertiseData.Builder>
<android.database.CursorWindow: boolean isLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.media.tv.TvTrackInfo: int getType()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.app.usage.UsageEvents.Event: long getTimeStamp()>:<public>:<android.app.usage.UsageEvents.Event>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Type.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>:<public>:<android.renderscript.Type.Builder>
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.Intent.ShortcutIconResource: android.content.Intent.ShortcutIconResource fromContext(android.content.Context,int)>:<public static>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.telephony.SignalStrength: int getCdmaDbm()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.hardware.Camera.Parameters: int getMaxNumDetectedFaces()>:<public>:<android.hardware.Camera.Parameters>
<android.media.MediaMetadataRetriever: void setDataSource(android.media.MediaDataSource)>:<public>:<android.media.MediaMetadataRetriever>
<android.renderscript.Matrix3f: void transpose()>:<public>:<android.renderscript.Matrix3f>
<android.view.Window: void setWindowAnimations(int)>:<public>:<android.view.Window>
<android.view.WindowManager.LayoutParams: int copyFrom(android.view.WindowManager.LayoutParams)>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.widget.TextView: void setTextScaleX(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.system.Os: void msync(long,long,int)>:<public static>:<android.system.Os>
<android.hardware.TriggerEventListener: void onTrigger(android.hardware.TriggerEvent)>:<public abstract>:<android.hardware.TriggerEventListener>
<android.graphics.Paint.Align: android.graphics.Paint.Align[] values()>:<public static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.location.Address: void writeToParcel(android.os.Parcel,int)>:<public>:<android.location.Address:android.os.Parcelable>
<android.content.Intent: java.lang.Object clone()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Element: android.renderscript.Element SCRIPT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.telecom.InCallService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.xmlpull.v1.sax2.Driver: boolean getFeature(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.content.SyncInfo: int describeContents()>:<public>:<android.content.SyncInfo:android.os.Parcelable>
<android.hardware.usb.UsbDevice: void <clinit>()>:<static>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.view.ViewGroup: void <init>(android.content.Context)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.session.MediaSession.Token: int describeContents()>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.app.Fragment: java.lang.String getString(int)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.CookieSyncManager: void sync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.widget.AdapterView: int getFirstVisiblePosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.media.midi.MidiInputPort: void onFlush()>:<public>:<android.media.midi.MidiInputPort:android.media.midi.MidiReceiver,java.io.Closeable>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>:<public>:<android.media.AsyncPlayer>
<android.telephony.gsm.SmsMessage: boolean isReplyPathPresent()>:<public>:<android.telephony.gsm.SmsMessage>
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: java.lang.String toString()>:<public final>:<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.graphics.Picture: void writeToStream(java.io.OutputStream)>:<public>:<android.graphics.Picture>
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>:<public abstract>:<android.view.Window.Callback>
<android.view.TextureView: void setOpaque(boolean)>:<public>:<android.view.TextureView:android.view.View>
<org.json.JSONArray: void <init>(java.lang.String)>:<public>:<org.json.JSONArray>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.test.mock.MockContext: void startActivities(android.content.Intent[])>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.media.audiofx.Visualizer: int getScalingMode()>:<public>:<android.media.audiofx.Visualizer>
<android.telephony.CellInfoLte: void <clinit>()>:<static>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.util.LruCache: void evictAll()>:<public final>:<android.util.LruCache>
<android.telecom.PhoneAccountHandle: int hashCode()>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.security.keystore.KeyGenParameterSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.TextView: void setSingleLine()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.accessibility.AccessibilityRecord: void <init>()>:<>:<android.view.accessibility.AccessibilityRecord>
<android.widget.ExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.net.SSLSessionCache: void <init>(java.io.File)>:<public>:<android.net.SSLSessionCache>
<android.renderscript.ScriptIntrinsicBLAS: void DTRMM(int,int,int,int,double,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.AdapterViewAnimator: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificate(java.security.cert.X509Certificate)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.view.View: int combineMeasuredStates(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.InsetDrawable: int getOpacity()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.view.animation.CycleInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.BaseInterpolator>
<android.widget.SearchView: void setSubmitButtonEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.media.midi.MidiDevice: void finalize()>:<protected>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.hardware.camera2.CameraManager.TorchCallback: void <init>()>:<public>:<android.hardware.camera2.CameraManager.TorchCallback>
<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.app.MediaRouteActionProvider: void <init>(android.content.Context)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.nfc.NdefRecord: short getTnf()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<junit.framework.TestResult: boolean wasSuccessful()>:<public synchronized>:<junit.framework.TestResult>
<android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.telephony.gsm.GsmCellLocation: void setStateInvalid()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>:<public static>:<android.app.ActivityOptions>
<android.os.Handler: boolean sendEmptyMessage(int)>:<public final>:<android.os.Handler>
<android.app.RemoteInput.Builder: android.app.RemoteInput build()>:<public>:<android.app.RemoteInput.Builder>
<android.content.pm.ComponentInfo: void <init>()>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getSubjectMatch()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.text.style.ScaleXSpan: void <init>(float)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.Toolbar: void setLogoDescription(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.os.Messenger: void <clinit>()>:<static>:<android.os.Messenger:android.os.Parcelable>
<android.view.View: boolean onSetAlpha(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaMetadataEditor: void apply()>:<public abstract>:<android.media.MediaMetadataEditor>
<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent.PointerProperties)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.tv.TvView: void onAttachedToWindow()>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setChannelMask(int)>:<public>:<android.media.AudioFormat.Builder>
<android.content.Context: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public abstract>:<android.content.Context>
<android.media.MediaRouter.RouteInfo: void requestUpdateVolume(int)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.speech.tts.TextToSpeech: java.util.List getEngines()>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView.Tokenizer)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.os.Debug: long getNativeHeapSize()>:<public static native>:<android.os.Debug>
<android.view.Menu: void setQwertyMode(boolean)>:<public abstract>:<android.view.Menu>
<android.graphics.PointF: void negate()>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.view.ViewParent: void onStopNestedScroll(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest:android.net.wifi.p2p.nsd.WifiP2pServiceRequest>
<android.hardware.Camera.Parameters: void remove(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.webkit.WebBackForwardList: java.lang.Object clone()>:<protected volatile>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.nfc.tech.NfcA: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.View: void setOnScrollChangeListener(android.view.View.OnScrollChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.app.ActivityManager: void moveTaskToFront(int,int)>:<public>:<android.app.ActivityManager>
<android.view.ViewStructure: void setAccessibilityFocused(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.app.Activity: void setTitleColor(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.os.Binder:android.os.IBinder>
<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>:<public>:<android.webkit.WebChromeClient>
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES30: void glDrawBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.Animatable2.AnimationCallback: void <init>()>:<public>:<android.graphics.drawable.Animatable2.AnimationCallback>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.Binder:android.os.IBinder>
<android.hardware.camera2.CaptureFailure: int getReason()>:<public>:<android.hardware.camera2.CaptureFailure>
<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>:<public>:<android.widget.PopupWindow>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getDefaultRoute()>:<public>:<android.media.MediaRouter>
<android.preference.PreferenceManager.OnActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)>:<public abstract>:<android.preference.PreferenceManager.OnActivityResultListener>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void <init>()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.test.ActivityInstrumentationTestCase2: void <init>(java.lang.Class)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.hardware.camera2.CaptureFailure: void <init>()>:<>:<android.hardware.camera2.CaptureFailure>
<android.view.animation.AnimationSet: void scaleCurrentDuration(float)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.graphics.Paint: void setTextSkewX(float)>:<public native>:<android.graphics.Paint>
<android.media.session.MediaSessionManager.OnActiveSessionsChangedListener: void onActiveSessionsChanged(java.util.List)>:<public abstract>:<android.media.session.MediaSessionManager.OnActiveSessionsChangedListener>
<android.provider.DocumentsProvider: boolean isChildDocument(java.lang.String,java.lang.String)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.View: void setY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.GradientDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>:<public abstract>:<android.view.LayoutInflater>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>:<public static>:<android.view.LayoutInflater>
<android.widget.Chronometer: android.widget.Chronometer.OnChronometerTickListener getOnChronometerTickListener()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>:<public>:<android.content.res.Resources.Theme>
<android.content.RestrictionEntry: java.lang.String[] getChoiceValues()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<org.json.JSONObject: boolean has(java.lang.String)>:<public>:<org.json.JSONObject>
<android.os.CancellationSignal: void throwIfCanceled()>:<public>:<android.os.CancellationSignal>
<android.media.tv.TvView: void setTimeShiftPositionCallback(android.media.tv.TvView.TimeShiftPositionCallback)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.view.View: boolean isInLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Instrumentation.ActivityMonitor: android.content.IntentFilter getFilter()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.preference.Preference: void setFragment(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Display: java.lang.String getName()>:<public>:<android.view.Display>
<android.location.Address: void setCountryCode(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.opengl.GLES10: void glTranslatef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.os.Vibrator: boolean hasVibrator()>:<public abstract>:<android.os.Vibrator>
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>:<public>:<android.content.res.Resources>
<android.view.ViewGroup: boolean dispatchHoverEvent(android.view.MotionEvent)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.util.MutableFloat: void <init>(float)>:<public>:<android.util.MutableFloat>
<android.view.ViewGroup: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.Intent.FilterComparison: void <init>(android.content.Intent)>:<public>:<android.content.Intent.FilterComparison>
<android.os.Debug: int setGlobalAllocationLimit(int)>:<public static>:<android.os.Debug>
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)>:<public static>:<android.content.res.ObbScanner>
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.Debug.MemoryInfo: int getTotalSharedClean()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>:<public>:<android.view.ViewPropertyAnimator>
<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.widget.ListView: boolean removeFooterView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnCancelListener(android.content.DialogInterface.OnCancelListener)>:<public>:<android.app.AlertDialog.Builder>
<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.view.View: android.os.IBinder getWindowToken()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.CalendarContract.CalendarEntity: void <init>()>:<>:<android.provider.CalendarContract.CalendarEntity:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.CalendarColumns>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.animation.Animator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.print.PrintJobInfo.Builder: void setAttributes(android.print.PrintAttributes)>:<public>:<android.print.PrintJobInfo.Builder>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.media.AudioRecord: int read(byte[],int,int)>:<public>:<android.media.AudioRecord>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.print.PrintAttributes: void <clinit>()>:<static>:<android.print.PrintAttributes:android.os.Parcelable>
<android.transition.VisibilityPropagation: void captureValues(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.renderscript.BaseObj: void destroy()>:<public>:<android.renderscript.BaseObj>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>:<public final>:<android.os.Parcel>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.widget.EdgeEffect: void <init>(android.content.Context)>:<public>:<android.widget.EdgeEffect>
<android.renderscript.Allocation.MipmapControl: void <clinit>()>:<static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.opengl.GLES30: void glGetSynciv(long,int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.InputDevice: void <clinit>()>:<static>:<android.view.InputDevice:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element MATRIX_2X2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage.QuotaUpdater)>:<public>:<android.webkit.WebChromeClient>
<android.widget.AdapterViewFlipper: void setAdapter(android.widget.Adapter)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.method.CharacterPickerDialog: void onCreate(android.os.Bundle)>:<protected>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<android.telecom.PhoneAccount: java.lang.CharSequence getLabel()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.os.Debug.MemoryInfo: java.lang.String getMemoryStat(java.lang.String)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.os.FileObserver: void finalize()>:<protected>:<android.os.FileObserver>
<android.text.StaticLayout.Builder: void finalize()>:<protected>:<android.text.StaticLayout.Builder>
<android.os.PatternMatcher: boolean match(java.lang.String)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.renderscript.Allocation: void setAutoPadding(boolean)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.View: int getTopPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaCodec: void release()>:<public final>:<android.media.MediaCodec>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.util.DisplayMetrics: void <init>()>:<public>:<android.util.DisplayMetrics>
<android.security.keystore.KeyInfo: int getOrigin()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.net.wifi.p2p.WifiP2pManager: void <init>()>:<>:<android.net.wifi.p2p.WifiP2pManager>
<android.media.MediaPlayer: void start()>:<public>:<android.media.MediaPlayer>
<junit.runner.BaseTestRunner: int getPreference(java.lang.String,int)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.HeaderViewListAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.test.TouchUtils: int dragViewTo(android.test.ActivityInstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.view.animation.LayoutAnimationController>
<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.location.Address: java.lang.String getCountryName()>:<public>:<android.location.Address:android.os.Parcelable>
<android.bluetooth.le.ScanRecord: java.util.Map getServiceData()>:<public>:<android.bluetooth.le.ScanRecord>
<android.test.mock.MockCursor: float getFloat(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.SoundPool: void setPriority(int,int)>:<public final native>:<android.media.SoundPool>
<android.media.browse.MediaBrowser.MediaItem: int describeContents()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<junit.framework.TestFailure: java.lang.String toString()>:<public>:<junit.framework.TestFailure>
<android.provider.ContactsContract.SearchSnippets: void <init>()>:<public>:<android.provider.ContactsContract.SearchSnippets>
<android.widget.TableRow: android.widget.TableRow.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.OrientationListener: void onSensorChanged(int,float[])>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.service.voice.AlwaysOnHotwordDetector: boolean startRecognition(int)>:<public>:<android.service.voice.AlwaysOnHotwordDetector>
<android.media.MediaDrm.CryptoSession: void <init>(android.media.MediaDrm)>:<>:<android.media.MediaDrm.CryptoSession>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.preference.ListPreference: int findIndexOfValue(java.lang.String)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.text.Selection: void setSelection(android.text.Spannable,int,int)>:<public static>:<android.text.Selection>
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.View.OnLongClickListener: boolean onLongClick(android.view.View)>:<public abstract>:<android.view.View.OnLongClickListener>
<android.text.StaticLayout: boolean getLineContainsTab(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.media.Rating: int getRatingStyle()>:<public>:<android.media.Rating:android.os.Parcelable>
<android.os.WorkSource: boolean equals(java.lang.Object)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.media.MediaDrm: void restoreKeys(byte[],byte[])>:<public native>:<android.media.MediaDrm>
<android.graphics.drawable.shapes.PathShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>:<public>:<android.os.Binder:android.os.IBinder>
<android.opengl.GLES31Ext: void glEnableiEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.renderscript.FieldPacker: android.renderscript.Int3 subInt3()>:<public>:<android.renderscript.FieldPacker>
<android.telecom.PhoneAccountHandle: android.os.UserHandle getUserHandle()>:<public>:<android.telecom.PhoneAccountHandle:android.os.Parcelable>
<android.view.Display: boolean isValid()>:<public>:<android.view.Display>
<android.text.method.BaseMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status[] values()>:<public static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.media.session.PlaybackState.CustomAction: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.PlaybackState.CustomAction:android.os.Parcelable>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>:<public static>:<android.view.ViewConfiguration>
<android.view.Window: void openPanel(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.content.ClipData: int describeContents()>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.view.View: void postInvalidate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.database.sqlite.SQLiteCursor: void deactivate()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.test.ViewAsserts: void assertHorizontalCenterAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>:<public static>:<android.os.Environment>
<android.widget.ExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.view.View: void setOnTouchListener(android.view.View.OnTouchListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: void setWeekDayTextAppearance(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telephony.CellSignalStrengthGsm: int getLevel()>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.content.pm.PackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.test.suitebuilder.TestMethod: java.lang.String toString()>:<public>:<android.test.suitebuilder.TestMethod>
<android.provider.ContactsContract.Directory: void notifyDirectoryChange(android.content.ContentResolver)>:<public static>:<android.provider.ContactsContract.Directory:android.provider.BaseColumns>
<android.preference.EditTextPreference: boolean shouldDisableDependents()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onLocaleChanged(java.util.Locale)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.service.dreams.DreamService: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.test.MoreAsserts: java.util.regex.MatchResult assertMatchesRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.text.style.ReplacementSpan: void <init>()>:<public>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.printservice.PrintService: void onConnected()>:<protected>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Allocation: void copyFrom(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Notification.Builder: android.app.Notification.Builder setLargeIcon(android.graphics.drawable.Icon)>:<public>:<android.app.Notification.Builder>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.TextView: boolean hasSelection()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.location.LocationProvider: boolean supportsSpeed()>:<public>:<android.location.LocationProvider>
<android.content.ClipDescription: int describeContents()>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.view.View: float getPivotY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.ProxyInfo: android.net.ProxyInfo buildPacProxy(android.net.Uri)>:<public static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Instrumentation>
<android.media.MediaSync: android.media.SyncParams getSyncParams()>:<public native>:<android.media.MediaSync>
<android.test.AndroidTestRunner: void clearTestListeners()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.media.session.MediaController.PlaybackInfo: android.media.AudioAttributes getAudioAttributes()>:<public>:<android.media.session.MediaController.PlaybackInfo>
<android.nfc.tech.NfcF: byte[] getManufacturer()>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result[] values()>:<public static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>:<public final>:<android.os.Parcel>
<android.view.ViewParent: int getTextDirection()>:<public abstract>:<android.view.ViewParent>
<android.database.Cursor: boolean isAfterLast()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.nfc.tech.NfcV: byte getResponseFlags()>:<public>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowBypass()>:<public>:<android.net.VpnService.Builder>
<android.view.View: void setPadding(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo,int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.graphics.Paint: boolean isAntiAlias()>:<public final>:<android.graphics.Paint>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public static>:<android.accounts.AccountManager>
<android.graphics.Canvas: int getMaximumBitmapHeight()>:<public>:<android.graphics.Canvas>
<android.net.NetworkInfo: int getType()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.provider.DocumentsProvider: java.lang.String renameDocument(java.lang.String,java.lang.String)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.graphics.drawable.Drawable: int getMinimumHeight()>:<public>:<android.graphics.drawable.Drawable>
<android.net.sip.SipSession: int getState()>:<public>:<android.net.sip.SipSession>
<android.hardware.camera2.CameraDevice: void close()>:<public abstract>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>:<public abstract>:<android.text.method.TransformationMethod>
<android.widget.PopupMenu: int getGravity()>:<public>:<android.widget.PopupMenu>
<android.R.array: void <init>()>:<public>:<android.R.array>
<android.view.animation.Transformation: void clear()>:<public>:<android.view.animation.Transformation>
<android.test.TouchUtils: void scrollToTop(android.test.ActivityInstrumentationTestCase,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<android.os.PowerManager: void reboot(java.lang.String)>:<public>:<android.os.PowerManager>
<android.view.View: void setNestedScrollingEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TwoLineListItem: void onFinishInflate()>:<protected>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType valueOf(java.lang.String)>:<public static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.provider.Settings.Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>:<public>:<android.media.AudioManager>
<android.renderscript.Script.InvokeID: void <init>()>:<>:<android.renderscript.Script.InvokeID:android.renderscript.BaseObj>
<android.webkit.WebView: android.webkit.WebView.HitTestResult getHitTestResult()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.KeyEvent: boolean isPrintingKey()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.method.HideReturnsTransformationMethod: void <init>()>:<public>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.graphics.Canvas: boolean isHardwareAccelerated()>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.opengl.GLES30: void glGenVertexArrays(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.EdgeEffect: void onRelease()>:<public>:<android.widget.EdgeEffect>
<android.hardware.Camera: void stopPreview()>:<public final>:<android.hardware.Camera>
<android.media.tv.TvContentRating: int hashCode()>:<public>:<android.media.tv.TvContentRating>
<android.hardware.Sensor: void <init>()>:<>:<android.hardware.Sensor>
<android.opengl.GLES30: void glTexStorage2D(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.inputmethodservice.KeyboardView: boolean isProximityCorrectionEnabled()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeLeft()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCustomTitle(android.view.View)>:<public>:<android.app.AlertDialog.Builder>
<android.view.WindowId: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.renderscript.ScriptIntrinsicBLAS: void DSYMM(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>:<public static>:<android.text.TextUtils>
<android.opengl.Matrix: void perspectiveM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)>:<public>:<android.app.ActivityOptions>
<android.telecom.GatewayInfo: int describeContents()>:<public>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.view.animation.Animation: void finalize()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.NumberPicker: float getTopFadingEdgeStrength()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Paint: boolean isDither()>:<public final>:<android.graphics.Paint>
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.wifi.ScanResult: boolean is80211mcResponder()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.media.midi.MidiSender: void <init>()>:<public>:<android.media.midi.MidiSender>
<android.graphics.drawable.TransitionDrawable: boolean isCrossFadeEnabled()>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.Activity: android.view.Window getWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.InputEvent: android.view.InputDevice getDevice()>:<public final>:<android.view.InputEvent:android.os.Parcelable>
<android.media.MediaDrm.MediaDrmStateException: java.lang.String getDiagnosticInfo()>:<public>:<android.media.MediaDrm.MediaDrmStateException:java.lang.IllegalStateException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.WindowAnimationFrameStats: void <clinit>()>:<static>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.view.MotionEvent: void transform(android.graphics.Matrix)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.telecom.Connection: java.lang.String capabilitiesToString(int)>:<public static>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.view.ViewConfiguration: long getDefaultActionModeHideDuration()>:<public static>:<android.view.ViewConfiguration>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>:<public>:<android.app.Notification.Builder>
<android.view.View: void dispatchWindowSystemUiVisiblityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ListPopupWindow>
<android.media.MediaRouter.RouteInfo: boolean isEnabled()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.opengl.GLES30: void glClearBufferuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.ExtractedTextRequest: int describeContents()>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.widget.Toast: void <init>(android.content.Context)>:<public>:<android.widget.Toast>
<android.database.Cursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.ListPopupWindow>
<android.media.PlaybackParams: android.media.PlaybackParams setPitch(float)>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType valueOf(java.lang.String)>:<public static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<junit.framework.Assert: void assertEquals(float,float,float)>:<public static>:<junit.framework.Assert>
<android.graphics.drawable.GradientDrawable: int getAlpha()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.content.ClipboardManager: void removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.view.View: void setFilterTouchesWhenObscured(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Address: void setSubAdminArea(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.service.textservice.SpellCheckerService.Session: java.lang.String getLocale()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.os.Handler: void <init>(android.os.Looper)>:<public>:<android.os.Handler>
<android.hardware.camera2.CaptureRequest.Builder: android.hardware.camera2.CaptureRequest build()>:<public>:<android.hardware.camera2.CaptureRequest.Builder>
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings.ZoomDensity)>:<public abstract>:<android.webkit.WebSettings>
<android.widget.BaseExpandableListAdapter: void onGroupCollapsed(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.bluetooth.le.AdvertiseData: android.util.SparseArray getManufacturerSpecificData()>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getRowCount()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.speech.tts.SynthesisRequest: java.lang.String getVoiceName()>:<public>:<android.speech.tts.SynthesisRequest>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES30: void glDeleteSamplers(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.inputmethodservice.AbstractInputMethodService: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.database.AbstractCursor: void setExtras(android.os.Bundle)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.wifi.ScanResult: int describeContents()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.widget.TextView: int getBreakStrategy()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.AndroidTestCase: void testAndroidTestCaseSetupProperly()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.gesture.GestureOverlayView: int getGestureColor()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockResources: java.lang.String getResourceEntryName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.InputDevice: boolean supportsSource(int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.security.keystore.KeyNotYetValidException: void <init>(java.lang.String)>:<public>:<android.security.keystore.KeyNotYetValidException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.view.animation.AnticipateInterpolator: void <init>(float)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.BaseInterpolator>
<android.graphics.drawable.GradientDrawable: void setColors(int[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.content.pm.PackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>:<public abstract>:<android.content.pm.PackageManager>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.RenderScript: void <init>()>:<>:<android.renderscript.RenderScript>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>:<public final>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.net.wifi.WifiConfiguration.Status: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.Status>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.media.effect.EffectUpdateListener: void onEffectUpdated(android.media.effect.Effect,java.lang.Object)>:<public abstract>:<android.media.effect.EffectUpdateListener>
<android.view.ViewGroup: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.SpannableString: int nextSpanTransition(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)>:<public static>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<android.view.Window: void setVolumeControlStream(int)>:<public abstract>:<android.view.Window>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(float[])>:<public>:<android.graphics.Interpolator>
<android.text.Layout: boolean getLineContainsTab(int)>:<public abstract>:<android.text.Layout>
<android.widget.Toolbar: java.lang.CharSequence getTitle()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)>:<public static>:<android.net.rtp.AudioCodec>
<android.view.Window: void takeKeyEvents(boolean)>:<public abstract>:<android.view.Window>
<android.app.Activity: void setFinishOnTouchOutside(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>:<public>:<android.graphics.Picture>
<android.opengl.ETC1Util.ETC1Texture: int getHeight()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.media.VolumeProvider: int getCurrentVolume()>:<public final>:<android.media.VolumeProvider>
<android.content.SharedPreferences: float getFloat(java.lang.String,float)>:<public abstract>:<android.content.SharedPreferences>
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>:<public static>:<android.text.method.Touch>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.OrdinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.audiofx.PresetReverb.Settings: void <init>()>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.gesture.GestureOverlayView.OnGestureListener: void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.telephony.PhoneNumberUtils: java.lang.String replaceUnicodeDigits(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.CheckedTextView: void setCheckMarkTintList(android.content.res.ColorStateList)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.AlertDialog: void <init>(android.content.Context)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.renderscript.Allocation: void setOnBufferAvailableListener(android.renderscript.Allocation.OnBufferAvailableListener)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element I32_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.BaseAdapter: void notifyDataSetInvalidated()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.hardware.usb.UsbConfiguration: java.lang.String toString()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.content.pm.ConfigurationInfo: int describeContents()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.widget.Scroller: void startScroll(int,int,int,int)>:<public>:<android.widget.Scroller>
<android.content.ContextWrapper: void clearWallpaper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.net.sip.SipSession.Listener: void onCallEstablished(android.net.sip.SipSession,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.Cursor: boolean move(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMinification()>:<public>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.net.Credentials: int getPid()>:<public>:<android.net.Credentials>
<android.telecom.Connection: void setDisconnected(android.telecom.DisconnectCause)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.widget.TabWidget: void setStripEnabled(boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.content.AsyncTaskLoader: void <init>(android.content.Context)>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.inputmethodservice.Keyboard: boolean setShifted(boolean)>:<public>:<android.inputmethodservice.Keyboard>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>:<public final transient>:<android.os.AsyncTask>
<android.renderscript.Allocation: int getUsage()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: void invalidateSelf()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.admin.DevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.CursorLoader: android.database.Cursor loadInBackground()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.media.midi.MidiDeviceService: void onCreate()>:<public>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES31: void glGetBooleani_v(int,int,boolean[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.util.LongSparseArray: java.lang.Object valueAt(int)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.String)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.content.Loader: void onStopLoading()>:<protected>:<android.content.Loader>
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.ActivityUnitTestCase: android.app.Activity startActivity(android.content.Intent,android.os.Bundle,java.lang.Object)>:<protected>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.Fragment: void startActivity(android.content.Intent)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.transition.Transition.TransitionListener: void onTransitionCancel(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.view.View: int getBottomPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.test.AndroidTestRunner: void addTestListener(junit.framework.TestListener)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.view.KeyEvent: java.lang.String toString()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glValidateProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.view.KeyEvent: int getUnicodeChar()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.NetworkInfo: java.lang.String toString()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>:<public>:<android.hardware.camera2.CameraManager>
<android.app.ActionBar: void setHomeActionContentDescription(java.lang.CharSequence)>:<public>:<android.app.ActionBar>
<android.provider.ContactsContract.Intents.Insert: void <init>()>:<public>:<android.provider.ContactsContract.Intents.Insert>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.view.accessibility.AccessibilityRecord: void setScrollY(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.provider.Telephony.Mms.Part: void <init>()>:<>:<android.provider.Telephony.Mms.Part:android.provider.BaseColumns>
<android.telephony.gsm.SmsMessage: java.lang.String getMessageBody()>:<public>:<android.telephony.gsm.SmsMessage>
<android.nfc.NfcAdapter.OnNdefPushCompleteCallback: void onNdefPushComplete(android.nfc.NfcEvent)>:<public abstract>:<android.nfc.NfcAdapter.OnNdefPushCompleteCallback>
<android.graphics.Paint: float getLetterSpacing()>:<public>:<android.graphics.Paint>
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView.OnScrollListener)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.NumberPicker.OnValueChangeListener: void onValueChange(android.widget.NumberPicker,int,int)>:<public abstract>:<android.widget.NumberPicker.OnValueChangeListener>
<android.os.SystemClock: long currentThreadTimeMillis()>:<public static native>:<android.os.SystemClock>
<android.media.MediaRouter: void clearUserRoutes()>:<public>:<android.media.MediaRouter>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator.AnimatorListener)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.MediaPlayer: android.media.PlaybackParams getPlaybackParams()>:<public native>:<android.media.MediaPlayer>
<android.widget.TextView: boolean isInputMethodTarget()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.KeyCharacterMap: boolean isPrintingKey(int)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.test.mock.MockContext: android.content.res.Resources.Theme getTheme()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.media.MediaCodecInfo.AudioCapabilities: int getMaxInputChannelCount()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.text.Layout: int getOffsetForHorizontal(int,float)>:<public>:<android.text.Layout>
<android.graphics.Canvas: void skew(float,float)>:<public>:<android.graphics.Canvas>
<android.widget.DatePicker.OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>:<public abstract>:<android.widget.DatePicker.OnDateChangedListener>
<android.hardware.ConsumerIrManager: void transmit(int,int[])>:<public>:<android.hardware.ConsumerIrManager>
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollY(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>:<public>:<android.telephony.TelephonyManager>
<android.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>:<public abstract>:<android.app.FragmentManager>
<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.telecom.Connection: android.telecom.Connection.VideoProvider getVideoProvider()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.test.RenamingDelegatingContext: java.lang.String getDatabasePrefix()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.Matrix: boolean isIdentity()>:<public>:<android.graphics.Matrix>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.util.AttributeSet: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>:<public abstract>:<android.util.AttributeSet>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newInsert(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>:<public>:<android.bluetooth.le.AdvertiseCallback>
<android.app.Fragment: java.lang.CharSequence getText(int)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.AbsSeekBar: void jumpDrawablesToCurrentState()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.content.ClipData.Item: void <init>(android.content.Intent)>:<public>:<android.content.ClipData.Item>
<android.text.style.EasyEditSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.EasyEditSpan:android.text.ParcelableSpan>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setNotificationVisibility(int)>:<public>:<android.app.DownloadManager.Request>
<android.content.res.Resources: java.io.InputStream openRawResource(int)>:<public>:<android.content.res.Resources>
<android.content.Context: android.graphics.drawable.Drawable getWallpaper()>:<public abstract>:<android.content.Context>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap[] values()>:<public static>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onPress(int)>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.widget.TextView: void setMaxLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Matrix3f: void rotate(float)>:<public>:<android.renderscript.Matrix3f>
<android.test.ApplicationTestCase: void testApplicationTestCaseSetUpProperly()>:<public final>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewGroup.MarginLayoutParams: int getLayoutDirection()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setEncoding(int)>:<public>:<android.media.AudioFormat.Builder>
<android.opengl.GLES20: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES20>
<android.telecom.ConnectionService: void <init>()>:<public>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.hardware.usb.UsbDevice: int getDeviceId()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnKeyListener(android.content.DialogInterface.OnKeyListener)>:<public>:<android.app.AlertDialog.Builder>
<android.service.wallpaper.WallpaperService.Engine: android.view.SurfaceHolder getSurfaceHolder()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: java.lang.String[] databaseList()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.Instrumentation: android.content.Context getContext()>:<public>:<android.app.Instrumentation>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>:<public abstract>:<android.webkit.CookieManager>
<android.system.Os: void fchown(java.io.FileDescriptor,int,int)>:<public static>:<android.system.Os>
<android.database.Cursor: boolean moveToPrevious()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.WebSettings: int getDefaultFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.widget.RelativeLayout: void requestLayout()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.system.Os: void mkdir(java.lang.String,int)>:<public static>:<android.system.Os>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: int getMinFrequency()>:<public>:<android.hardware.ConsumerIrManager.CarrierFrequencyRange>
<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>:<public>:<android.content.res.Resources>
<android.nfc.tech.MifareClassic: void writeBlock(int,byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.media.ToneGenerator: boolean startTone(int)>:<public>:<android.media.ToneGenerator>
<android.service.carrier.CarrierIdentifier: void <clinit>()>:<static>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.widget.Gallery: int computeHorizontalScrollRange()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int)>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.widget.RemoteViews: int getLayoutId()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.animation.Transformation: int getTransformationType()>:<public>:<android.view.animation.Transformation>
<android.media.RemoteController: boolean setSynchronizationMode(int)>:<public>:<android.media.RemoteController>
<android.test.TouchUtils: int dragViewToX(android.test.InstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<android.webkit.WebView: void resumeTimers()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.preference.Preference: boolean shouldCommit()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.effect.Effect: void setParameter(java.lang.String,java.lang.Object)>:<public abstract>:<android.media.effect.Effect>
<android.provider.MediaStore.Audio.Artists: void <init>()>:<public>:<android.provider.MediaStore.Audio.Artists:android.provider.BaseColumns,android.provider.MediaStore.Audio.ArtistColumns>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverMetered(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>:<public static>:<android.content.ContentResolver>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.system.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.drm.DrmInfo: byte[] getData()>:<public>:<android.drm.DrmInfo>
<android.service.voice.AlwaysOnHotwordDetector: void <init>()>:<>:<android.service.voice.AlwaysOnHotwordDetector>
<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)>:<public>:<android.app.WallpaperManager>
<android.os.Build: java.lang.String getRadioVersion()>:<public static>:<android.os.Build>
<android.graphics.drawable.AnimatedStateListDrawable: void addTransition(int,int,android.graphics.drawable.Drawable,boolean)>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>:<public>:<android.content.ContentResolver>
<android.test.LoaderTestCase: void <init>()>:<public>:<android.test.LoaderTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.audiofx.BassBoost: void <init>(int,int)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setName(java.lang.String)>:<public>:<android.print.PrinterInfo.Builder>
<android.app.admin.DevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.net.wifi.WifiEnterpriseConfig.Phase2: void <init>()>:<>:<android.net.wifi.WifiEnterpriseConfig.Phase2>
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage()>:<public>:<android.telecom.TelecomManager>
<android.graphics.drawable.shapes.Shape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.media.RemoteControlClient.OnPlaybackPositionUpdateListener: void onPlaybackPositionUpdate(long)>:<public abstract>:<android.media.RemoteControlClient.OnPlaybackPositionUpdateListener>
<android.graphics.drawable.ScaleDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.content.DialogInterface: void dismiss()>:<public abstract>:<android.content.DialogInterface>
<android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>:<public static>:<android.graphics.Movie>
<android.app.usage.UsageStatsManager: void <init>()>:<>:<android.app.usage.UsageStatsManager>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectAll()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.text.Selection: void removeSelection(android.text.Spannable)>:<public static final>:<android.text.Selection>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()>:<public abstract>:<org.apache.http.params.HttpParams>
<android.text.LoginFilter.PasswordFilterGMail: boolean isAllowed(char)>:<public>:<android.text.LoginFilter.PasswordFilterGMail:android.text.LoginFilter>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.media.audiofx.AutomaticGainControl: void <init>()>:<>:<android.media.audiofx.AutomaticGainControl:android.media.audiofx.AudioEffect>
<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>:<public final>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.os.SystemClock: long elapsedRealtimeNanos()>:<public static native>:<android.os.SystemClock>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.os.Parcel: void readException()>:<public final>:<android.os.Parcel>
<android.webkit.WebView: boolean canGoBackOrForward(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.audiofx.Visualizer: int getCaptureSize()>:<public>:<android.media.audiofx.Visualizer>
<android.telecom.Connection: void setVideoState(int)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.hardware.usb.UsbConfiguration: java.lang.String getName()>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.media.MediaDescription: int describeContents()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.os.ResultReceiver: int describeContents()>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.app.Notification.Action: android.os.Bundle getExtras()>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.util.TimeFormatException: void <init>()>:<>:<android.util.TimeFormatException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telecom.InCallService.VideoCall: void <init>()>:<public>:<android.telecom.InCallService.VideoCall>
<android.os.DropBoxManager: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>:<public>:<android.os.DropBoxManager>
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>:<public>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.view.KeyEvent: void startTracking()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.app.assist.AssistContent: int describeContents()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.database.CursorWindow: void <init>(java.lang.String)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.widget.TextView.OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>:<public abstract>:<android.widget.TextView.OnEditorActionListener>
<android.content.pm.PackageManager: void clearPackagePreferredActivities(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>:<public abstract>:<android.text.SpanWatcher:android.text.NoCopySpan>
<android.widget.TextView: void setBreakStrategy(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.NetworkCapabilities: boolean hasTransport(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.widget.Switch: void draw(android.graphics.Canvas)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.net.wifi.WifiManager: boolean disconnect()>:<public>:<android.net.wifi.WifiManager>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt[] values()>:<public static>:<android.text.TextUtils.TruncateAt:java.lang.Enum>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.Spec,android.widget.GridLayout.Spec)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.textservice.TextServicesManager: void <init>()>:<>:<android.view.textservice.TextServicesManager>
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.media.session.MediaSession.QueueItem: java.lang.String toString()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.text.SpannedString: int nextSpanTransition(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.hardware.Camera: void startFaceDetection()>:<public final>:<android.hardware.Camera>
<android.security.KeyChain: boolean isBoundKeyAlgorithm(java.lang.String)>:<public static>:<android.security.KeyChain>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.renderscript.Type: boolean hasMipmaps()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.widget.CalendarView: void setWeekSeparatorLineColor(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.Camera.Parameters: int getPreviewFormat()>:<public>:<android.hardware.Camera.Parameters>
<android.text.style.ForegroundColorSpan: int getSpanTypeId()>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.provider.Settings.Global: float getFloat(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.hardware.camera2.params.StreamConfigurationMap: java.lang.String toString()>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.renderscript.ScriptIntrinsicBLAS: void DGBMV(int,int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: void sendPickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>:<public>:<android.service.voice.VoiceInteractionSession.PickOptionRequest:android.service.voice.VoiceInteractionSession.Request>
<android.os.MessageQueue: void removeOnFileDescriptorEventListener(java.io.FileDescriptor)>:<public>:<android.os.MessageQueue>
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.view.ViewDebug.ExportedProperty: java.lang.String prefix()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.media.midi.MidiInputPort: void finalize()>:<protected>:<android.media.midi.MidiInputPort:android.media.midi.MidiReceiver,java.io.Closeable>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable()>:<public abstract>:<android.graphics.drawable.Drawable.ConstantState>
<android.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.renderscript.AllocationAdapter: void <init>()>:<>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort.WebMessageCallback,android.os.Handler)>:<public abstract>:<android.webkit.WebMessagePort>
<android.text.util.Rfc822Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.app.Activity: android.content.ComponentName getComponentName()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.ArraySet: int indexOf(java.lang.Object)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.telecom.Connection: boolean getAudioModeIsVoip()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.app.Instrumentation.ActivityMonitor: boolean isBlocking()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.app.Dialog: void <init>(android.content.Context)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader.TileMode)>:<public>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.widget.AbsSeekBar: android.content.res.ColorStateList getThumbTintList()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.View: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void setTag(java.lang.Object)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipAudioCall.Listener: void onCallEnded(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.os.UserHandle: void writeToParcel(android.os.UserHandle,android.os.Parcel)>:<public static>:<android.os.UserHandle:android.os.Parcelable>
<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.hardware.display.DisplayManager: void <init>()>:<>:<android.hardware.display.DisplayManager>
<android.graphics.drawable.AnimatedStateListDrawable: void jumpToCurrentState()>:<public>:<android.graphics.drawable.AnimatedStateListDrawable:android.graphics.drawable.StateListDrawable,android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.telephony.SmsMessage: boolean isStatusReportMessage()>:<public>:<android.telephony.SmsMessage>
<android.opengl.GLSurfaceView.EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<android.view.View: boolean isVerticalScrollBarEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.system.Os: int setsid()>:<public static>:<android.system.Os>
<android.webkit.PermissionRequest: void <init>()>:<public>:<android.webkit.PermissionRequest>
<android.app.NotificationManager.Policy: int describeContents()>:<public>:<android.app.NotificationManager.Policy:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.Event: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Event:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.View: int getSolidColor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.telecom.RemoteConnection.Callback: void onDisconnected(android.telecom.RemoteConnection,android.telecom.DisconnectCause)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDClear()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: boolean post(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputManager: void unregisterCallback(android.media.tv.TvInputManager.TvInputCallback)>:<public>:<android.media.tv.TvInputManager>
<android.telecom.Call: void hold()>:<public>:<android.telecom.Call>
<android.media.tv.TvInputService.Session: void notifyTracksChanged(java.util.List)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.test.mock.MockPackageManager: java.util.List getPreferredPackages(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.renderscript.ScriptGroup.Future: void <init>()>:<>:<android.renderscript.ScriptGroup.Future>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.print.PrintDocumentInfo: void <init>()>:<>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.media.SoundPool: void stop(int)>:<public final native>:<android.media.SoundPool>
<android.media.ImageReader: int getImageFormat()>:<public>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.animation.ObjectAnimator: void start()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.renderscript.Allocation: int getBytesSize()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: void setLayerPaint(android.graphics.Paint)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFormat: java.lang.String toString()>:<public>:<android.media.MediaFormat>
<android.hardware.camera2.CameraCaptureSession: android.hardware.camera2.CameraDevice getDevice()>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.test.RenamingDelegatingContext: boolean deleteFile(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.text.BoringLayout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.telecom.Conference: int getConnectionCapabilities()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.hardware.usb.UsbDeviceConnection: void <init>()>:<>:<android.hardware.usb.UsbDeviceConnection>
<android.widget.DialerFilter: void removeFilterWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaMetadataEditor: int[] getEditableKeys()>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>:<public>:<android.graphics.Matrix>
<android.content.AsyncQueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.text.SpannableString: int getSpanFlags(java.lang.Object)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo build()>:<public>:<android.print.PrintDocumentInfo.Builder>
<android.net.wifi.WifiEnterpriseConfig: void <init>()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.test.ActivityUnitTestCase: void <init>(java.lang.Class)>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.admin.DevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.ProgressBar: int getMax()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.speech.tts.TextToSpeechService: void <init>()>:<public>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.tv.TvInputService.Session: void notifyTimeShiftStatusChanged(int)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.app.Activity: void onAttachFragment(android.app.Fragment)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.BaseAdapter: boolean hasStableIds()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.view.Window: boolean isFloating()>:<public abstract>:<android.view.Window>
<android.test.mock.MockContentProvider: void <init>(android.content.Context)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.app.NativeActivity: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothDevice: int getBondState()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.renderscript.ScriptC: void <init>(int,android.renderscript.RenderScript)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.provider.Contacts.People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.text.style.ImageSpan: java.lang.String getSource()>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.hardware.camera2.params.ColorSpaceTransform: java.lang.String toString()>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setManual(boolean)>:<public>:<android.content.SyncRequest.Builder>
<android.app.admin.DevicePolicyManager: void lockNow()>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.ScriptIntrinsicBLAS: void ZHER2K(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.RestrictionEntry: java.lang.String getTitle()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.renderscript.Matrix2f: void loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.widget.ActionMenuView: void onMeasure(int,int)>:<protected>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.Settings.Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.content.res.TypedArray: int getInt(int,int)>:<public>:<android.content.res.TypedArray>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setIcon(android.graphics.drawable.Icon)>:<public>:<android.telecom.PhoneAccount.Builder>
<android.test.mock.MockPackageManager: void clearPackagePreferredActivities(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.renderscript.ScriptIntrinsicBLAS: void CHBMV(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.text.style.TtsSpan.CardinalBuilder: android.text.style.TtsSpan.CardinalBuilder setNumber(long)>:<public>:<android.text.style.TtsSpan.CardinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.content.pm.ResolveInfo: void <init>()>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.media.MediaMetadata: android.media.MediaDescription getDescription()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onUserStyleChanged(android.view.accessibility.CaptioningManager.CaptionStyle)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.app.Activity: void onPause()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.telecom.RemoteConnection.Callback: void onExtrasChanged(android.telecom.RemoteConnection,android.os.Bundle)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.app.ActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>:<public>:<android.app.ActivityManager>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.telephony.SmsMessage: int getStatusOnSim()>:<public>:<android.telephony.SmsMessage>
<android.net.wifi.WifiInfo: android.net.NetworkInfo.DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.view.KeyEvent: boolean isModifierKey(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.CursorWindow: int getStartPosition()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void CGERU(android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.AbsListView: int getListPaddingRight()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.text.style.SubscriptSpan: int getSpanTypeId()>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>:<public>:<android.media.SoundPool>
<android.renderscript.ScriptIntrinsicBLAS: void DSYMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.print.PrintJobId: void <init>()>:<>:<android.print.PrintJobId:android.os.Parcelable>
<android.widget.DialerFilter: void clearText()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.telecom.RemoteConnection.Callback: void onVoipAudioChanged(android.telecom.RemoteConnection,boolean)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.net.UrlQuerySanitizer.ValueSanitizer: java.lang.String sanitize(java.lang.String)>:<public abstract>:<android.net.UrlQuerySanitizer.ValueSanitizer>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceData(android.os.ParcelUuid,byte[],byte[])>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.media.AudioTimestamp: void <init>()>:<public>:<android.media.AudioTimestamp>
<android.renderscript.Sampler.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Sampler.Builder>
<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.util.Base64: void <init>()>:<>:<android.util.Base64>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall.Listener,int)>:<public>:<android.net.sip.SipManager>
<android.service.restrictions.RestrictionsReceiver: void <init>()>:<public>:<android.service.restrictions.RestrictionsReceiver:android.content.BroadcastReceiver>
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.database.CursorWrapper: void deactivate()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.accessibility.AccessibilityRecord: void setParcelableData(android.os.Parcelable)>:<public>:<android.view.accessibility.AccessibilityRecord>
<junit.framework.ComparisonFailure: java.lang.String getMessage()>:<public>:<junit.framework.ComparisonFailure:junit.framework.AssertionFailedError,java.lang.AssertionError,java.lang.Error,java.lang.Throwable>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.CodecCapabilities createFromProfileLevel(java.lang.String,int,int)>:<public static>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.app.SearchableInfo: int getSettingsDescriptionId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.AbsListView: boolean isStackFromBottom()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.telephony.cdma.CdmaCellLocation: void <init>()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.view.KeyEvent.DispatcherState: void reset()>:<public>:<android.view.KeyEvent.DispatcherState>
<android.graphics.RectF: void <init>()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.Paint: void setAntiAlias(boolean)>:<public native>:<android.graphics.Paint>
<android.view.animation.AlphaAnimation: void <init>(float,float)>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.graphics.PointF: boolean equals(java.lang.Object)>:<public>:<android.graphics.PointF:android.os.Parcelable>
<android.provider.Settings.Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.animation.Animator.AnimatorPauseListener: void onAnimationResume(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorPauseListener>
<android.database.MatrixCursor: int getInt(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.app.Notification.Builder: android.app.Notification.Builder setProgress(int,int,boolean)>:<public>:<android.app.Notification.Builder>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void mark(int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.Drawable>
<android.transition.ChangeBounds: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeBounds:android.transition.Transition>
<android.net.Uri: boolean isHierarchical()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Notification.CarExtender.UnreadConversation: java.lang.String[] getMessages()>:<public>:<android.app.Notification.CarExtender.UnreadConversation>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.widget.ActionMenuView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.tv.TvContentRating: java.lang.String getMainRating()>:<public>:<android.media.tv.TvContentRating>
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>:<public>:<android.telephony.SmsMessage>
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.transition.Explode: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.webkit.URLUtil: void <init>()>:<public>:<android.webkit.URLUtil>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.telephony.CellInfoLte: int describeContents()>:<public>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.preference.MultiSelectListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.telecom.RemoteConnection.VideoProvider: void unregisterCallback(android.telecom.RemoteConnection.VideoProvider.Callback)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.animation.ValueAnimator: long getStartDelay()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.hardware.usb.UsbDevice: java.lang.String toString()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.GridLayout: void onMeasure(int,int)>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.content.CursorLoader: java.lang.String getSortOrder()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.view.Window: int getDefaultFeatures(android.content.Context)>:<public static>:<android.view.Window>
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.location.Criteria: int getHorizontalAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.view.animation.Transformation: java.lang.String toShortString()>:<public>:<android.view.animation.Transformation>
<android.telecom.RemoteConnection: void unregisterCallback(android.telecom.RemoteConnection.Callback)>:<public>:<android.telecom.RemoteConnection>
<android.media.AudioManager: boolean isBluetoothScoOn()>:<public>:<android.media.AudioManager>
<android.test.suitebuilder.TestSuiteBuilder: void <init>(java.lang.Class)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<android.widget.ScrollView: int computeVerticalScrollRange()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageInstaller.Session: void close()>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.content.Loader>
<android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.Network: boolean equals(java.lang.Object)>:<public>:<android.net.Network:android.os.Parcelable>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.View: int getRight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TableLayout: void setColumnShrinkable(int,boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setNumberParts(java.lang.String)>:<public>:<android.text.style.TtsSpan.TelephoneBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender setLargeIcon(android.graphics.Bitmap)>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context,int)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.service.voice.VoiceInteractionSessionService: void onTrimMemory(int)>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>:<public final>:<android.os.Parcel>
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.text.method.ArrowKeyMovementMethod: void <init>()>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.view.Window.Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.media.MediaCodec: android.media.Image getOutputImage(int)>:<public>:<android.media.MediaCodec>
<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.graphics.Path: void rQuadTo(float,float,float,float)>:<public>:<android.graphics.Path>
<android.view.View: void getFocusedRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.NumberPicker: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGatt: java.util.List getServices()>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.view.SubMenu: void clearHeader()>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.view.animation.Animation: int getRepeatCount()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.webkit.WebSettings: void <init>()>:<public>:<android.webkit.WebSettings>
<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>:<public abstract>:<android.util.AttributeSet>
<android.content.ClipDescription: void <init>(android.content.ClipDescription)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.media.MediaCodecInfo: boolean isEncoder()>:<public final>:<android.media.MediaCodecInfo>
<android.telecom.Call: void playDtmfTone(char)>:<public>:<android.telecom.Call>
<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.text.SpannableStringBuilder: java.lang.Appendable append(char)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.test.TouchUtils: void dragViewToBottom(android.test.ActivityInstrumentationTestCase,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<android.graphics.RectF: void <clinit>()>:<static>:<android.graphics.RectF:android.os.Parcelable>
<android.widget.SimpleCursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.bluetooth.BluetoothServerSocket: void close()>:<public>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.os.PowerManager.WakeLock: void setReferenceCounted(boolean)>:<public>:<android.os.PowerManager.WakeLock>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.res.TypedArray: int getIndex(int)>:<public>:<android.content.res.TypedArray>
<android.view.Display: int getRotation()>:<public>:<android.view.Display>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.transition.ChangeTransform: void <init>()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.widget.Scroller: int getDuration()>:<public final>:<android.widget.Scroller>
<org.json.JSONArray: org.json.JSONArray put(int,long)>:<public>:<org.json.JSONArray>
<android.location.Location: float distanceTo(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.TextClock: void onAttachedToWindow()>:<protected>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.content.ContentQueryMap: void <init>(android.database.Cursor,java.lang.String,boolean,android.os.Handler)>:<public>:<android.content.ContentQueryMap:java.util.Observable>
<android.app.TimePickerDialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.media.AudioTrack.Builder>
<android.widget.AutoCompleteTextView: void dismissDropDown()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.sqlite.SQLiteTransactionListener: void onRollback()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setNetworkSpecifier(java.lang.String)>:<public>:<android.net.NetworkRequest.Builder>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getInputFormats()>:<public final>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.SearchableInfo: java.lang.String getSuggestPackage()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelection(java.lang.String,java.lang.String[])>:<public>:<android.content.ContentProviderOperation.Builder>
<android.media.ImageReader: void <init>()>:<>:<android.media.ImageReader:java.lang.AutoCloseable>
<android.net.sip.SipAudioCall: boolean isInCall()>:<public>:<android.net.sip.SipAudioCall>
<android.media.Image.Plane: java.nio.ByteBuffer getBuffer()>:<public abstract>:<android.media.Image.Plane>
<android.util.Patterns: void <clinit>()>:<static>:<android.util.Patterns>
<android.service.dreams.DreamService: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.hardware.camera2.params.Face: java.lang.String toString()>:<public>:<android.hardware.camera2.params.Face>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setPageCount(int)>:<public>:<android.print.PrintDocumentInfo.Builder>
<org.xmlpull.v1.XmlPullParser: int nextTag()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.TextView: void onSelectionChanged(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.util.StringBuilderPrinter: void println(java.lang.String)>:<public>:<android.util.StringBuilderPrinter:android.util.Printer>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>:<public>:<android.view.animation.Transformation>
<android.widget.LinearLayout: void setWeightSum(float)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>:<public>:<android.media.MediaPlayer>
<android.graphics.Region: boolean contains(int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.hardware.Camera.Parameters: boolean isZoomSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public abstract>:<android.text.TextWatcher:android.text.NoCopySpan>
<android.app.Notification: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.transition.TransitionSet: android.transition.Transition addTarget(java.lang.Class)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.inputmethodservice.InputMethodService: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.AnimatorListenerAdapter: void onAnimationResume(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener,android.animation.Animator.AnimatorPauseListener>
<android.widget.VideoView: int getDuration()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.net.wifi.p2p.WifiP2pConfig: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.widget.ExpandableListView: long getSelectedPosition()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.ConnectivityManager.NetworkCallback: void <init>()>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.os.Binder: long clearCallingIdentity()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.media.audiofx.Equalizer: void setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.content.ContextWrapper: java.io.File getFilesDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.animation.ValueAnimator: void setFrameDelay(long)>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.text.SpannableStringBuilder: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.admin.DevicePolicyManager: boolean installKeyPair(android.content.ComponentName,java.security.PrivateKey,java.security.cert.Certificate,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.ActionMenuView: void setOnMenuItemClickListener(android.widget.ActionMenuView.OnMenuItemClickListener)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.printservice.PrintJob: int hashCode()>:<public>:<android.printservice.PrintJob>
<android.telecom.VideoProfile: boolean isPaused(int)>:<public static>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>:<public final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.textservice.TextInfo: int describeContents()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.inputmethodservice.KeyboardView: void onMeasure(int,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.hardware.ConsumerIrManager: void <init>()>:<>:<android.hardware.ConsumerIrManager>
<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.FragmentHostCallback: boolean onHasWindowAnimations()>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.app.Service: void <init>()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>:<public transient>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.nfc.tech.NdefFormatable: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.view.GestureDetector.OnGestureListener: void onLongPress(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.text.method.MovementMethod: boolean canSelectArbitrarily()>:<public abstract>:<android.text.method.MovementMethod>
<android.renderscript.Script: void setVar(int,float)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.text.LoginFilter.PasswordFilterGMail: void <init>()>:<public>:<android.text.LoginFilter.PasswordFilterGMail:android.text.LoginFilter>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.WallpaperManager: void forgetLoadedWallpaper()>:<public>:<android.app.WallpaperManager>
<android.graphics.Path: boolean isRect(android.graphics.RectF)>:<public>:<android.graphics.Path>
<android.widget.HeaderViewListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.media.RingtoneManager: void <init>(android.content.Context)>:<public>:<android.media.RingtoneManager>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.system.Os: void ftruncate(java.io.FileDescriptor,long)>:<public static>:<android.system.Os>
<android.content.pm.PackageManager: boolean isSafeMode()>:<public abstract>:<android.content.pm.PackageManager>
<android.media.midi.MidiDeviceInfo.PortInfo: int getType()>:<public>:<android.media.midi.MidiDeviceInfo.PortInfo>
<android.security.keystore.KeyProtection.Builder: void <init>(int)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.net.nsd.NsdManager.DiscoveryListener: void onStartDiscoveryFailed(java.lang.String,int)>:<public abstract>:<android.net.nsd.NsdManager.DiscoveryListener>
<android.gesture.GestureStroke: android.graphics.Path getPath()>:<public>:<android.gesture.GestureStroke>
<android.renderscript.ScriptGroup: void <init>()>:<>:<android.renderscript.ScriptGroup:android.renderscript.BaseObj>
<android.os.ConditionVariable: void open()>:<public>:<android.os.ConditionVariable>
<android.widget.HorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityRecord: void setCurrentItemIndex(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.telecom.RemoteConnection.VideoProvider: void sendSessionModifyResponse(android.telecom.VideoProfile)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIconGravity(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: android.preference.Preference.OnPreferenceClickListener getOnPreferenceClickListener()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.preference.MultiSelectListPreference: void setEntries(java.lang.CharSequence[])>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>:<protected>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.transition.Explode: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Explode:android.transition.Visibility,android.transition.Transition>
<android.widget.ExpandableListAdapter: long getCombinedChildId(long,long)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.content.SyncAdapterType: int describeContents()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.text.BidiFormatter: void <init>()>:<>:<android.text.BidiFormatter>
<android.view.View: void setElevation(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.ColorDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.SystemUpdatePolicy: int getPolicyType()>:<public>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.app.Notification.Action.WearableExtender: void <init>()>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.view.Display.Mode: float getRefreshRate()>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.transition.TransitionSet: void <init>()>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short2)>:<public>:<android.renderscript.FieldPacker>
<android.app.Notification.Builder: android.app.Notification.Builder setWhen(long)>:<public>:<android.app.Notification.Builder>
<android.graphics.Path: void transform(android.graphics.Matrix)>:<public>:<android.graphics.Path>
<android.content.pm.LabeledIntent: int getLabelResource()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getExitFadeDuration()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.os.Parcel: java.lang.String readString()>:<public final>:<android.os.Parcel>
<android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.media.MediaCodec: android.media.MediaFormat getInputFormat()>:<public final>:<android.media.MediaCodec>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.AnimatorSet: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.database.Cursor: boolean moveToNext()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.Path.Direction: android.graphics.Path.Direction[] values()>:<public static>:<android.graphics.Path.Direction:java.lang.Enum>
<android.app.Activity: boolean showAssist(android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.util.EventLogTags: android.util.EventLogTags.Description get(int)>:<public>:<android.util.EventLogTags>
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>:<public>:<android.media.AudioManager>
<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>:<public>:<android.view.ViewTreeObserver>
<android.text.AlteredCharSequence: void getChars(int,int,char[],int)>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.text.Editable: android.text.Editable delete(int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onReady(android.hardware.camera2.CameraCaptureSession)>:<public>:<android.hardware.camera2.CameraCaptureSession.StateCallback>
<android.view.View: int getLabelFor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.app.backup.BackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupHelper>
<android.graphics.Path: void quadTo(float,float,float,float)>:<public>:<android.graphics.Path>
<android.widget.TextSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: int getFlags()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Activity: boolean releaseInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.text.style.TtsSpan.DateBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>:<public>:<android.text.style.TtsSpan.DateBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,int[],int,int[],int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.preference.Preference: long getPersistedLong(long)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.sqlite.SQLiteCursorDriver: void cursorDeactivated()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.Activity: android.transition.Scene getContentScene()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.RemoteViews: void <clinit>()>:<static>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.os.Vibrator: void vibrate(long)>:<public>:<android.os.Vibrator>
<android.media.session.PlaybackState: android.os.Bundle getExtras()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.util.ArraySet: java.lang.Object valueAt(int)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.widget.ExpandableListView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.transition.ChangeScroll: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.text.method.ArrowKeyMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.KeyCharacterMap.KeyData: void <init>()>:<public>:<android.view.KeyCharacterMap.KeyData>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeEntering(android.content.Context,android.content.Intent,java.lang.String)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.bluetooth.BluetoothAdapter: void <init>()>:<>:<android.bluetooth.BluetoothAdapter>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuidMask()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.media.AudioManager: int getRouting(int)>:<public>:<android.media.AudioManager>
<org.xmlpull.v1.sax2.Driver: void setFeature(java.lang.String,boolean)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntent(android.content.Intent)>:<public>:<android.app.TaskStackBuilder>
<android.widget.SlidingDrawer: void lock()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>:<public>:<android.app.RemoteInput.Builder>
<android.print.PrintJobInfo.Builder: android.print.PrintJobInfo build()>:<public>:<android.print.PrintJobInfo.Builder>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcIn()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.util.LongSparseArray: void append(long,java.lang.Object)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.FieldPacker: boolean subBoolean()>:<public>:<android.renderscript.FieldPacker>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture createTexture(java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator yBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.GradientDrawable: void setGradientType(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<junit.framework.Assert: void assertFalse(boolean)>:<public static>:<junit.framework.Assert>
<android.test.mock.MockContext: java.io.File[] getObbDirs()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.hardware.Camera.Parameters: java.lang.String getFlashMode()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.NumberPicker: void onDetachedFromWindow()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(java.util.UUID)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.app.Dialog: boolean onSearchRequested()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.media.tv.TvContract: android.net.Uri buildProgramUri(long)>:<public static final>:<android.media.tv.TvContract>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.LayerDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.StaleDataException: void <init>()>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.drm.DrmUtils.ExtendedMetadataParser: void <init>()>:<>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.media.tv.TvInputService.Session: void onSetStreamVolume(float)>:<public abstract>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.webkit.WebStorage: void getOrigins(android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.text.style.TextAppearanceSpan: int describeContents()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.telephony.SubscriptionManager: void <init>()>:<>:<android.telephony.SubscriptionManager>
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.util.EventLog.Event: int getThreadId()>:<public>:<android.util.EventLog.Event>
<android.location.Location: void setBearing(float)>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.AbsListView.RecyclerListener: void onMovedToScrapHeap(android.view.View)>:<public abstract>:<android.widget.AbsListView.RecyclerListener>
<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AnalogClock:android.view.View>
<android.widget.ActionMenuView: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Visualizer: void <init>(int)>:<public>:<android.media.audiofx.Visualizer>
<android.view.MenuItem: boolean hasSubMenu()>:<public abstract>:<android.view.MenuItem>
<android.text.style.TabStopSpan.Standard: void <init>(int)>:<public>:<android.text.style.TabStopSpan.Standard:android.text.style.TabStopSpan>
<android.widget.AutoCompleteTextView: int getListSelection()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.JetPlayer.OnJetEventListener: void onJetUserIdUpdate(android.media.JetPlayer,int,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.provider.MediaStore.Video.Media: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Video.Media:android.provider.MediaStore.Video.VideoColumns>
<android.net.nsd.NsdManager.RegistrationListener: void onUnregistrationFailed(android.net.nsd.NsdServiceInfo,int)>:<public abstract>:<android.net.nsd.NsdManager.RegistrationListener>
<android.media.AudioTrack: android.media.AudioDeviceInfo getRoutedDevice()>:<public>:<android.media.AudioTrack>
<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>:<public abstract>:<android.webkit.ValueCallback>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.renderscript.Allocation: void setFromFieldPacker(int,int,int,int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.transition.Transition: android.transition.PathMotion getPathMotion()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>:<public>:<android.view.WindowInsets>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.res.Resources.NotFoundException: void <init>()>:<public>:<android.content.res.Resources.NotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.DialogFragment: android.app.Dialog getDialog()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.FieldPacker: void reset(int)>:<public>:<android.renderscript.FieldPacker>
<android.speech.tts.Voice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.nfc.tech.Ndef: java.lang.String getType()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.provider.Telephony.Mms.Sent: void <init>()>:<>:<android.provider.Telephony.Mms.Sent:android.provider.Telephony.BaseMmsColumns>
<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>:<public static>:<android.webkit.MimeTypeMap>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>:<public static>:<android.webkit.WebViewDatabase>
<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.service.voice.VoiceInteractionSession: void onCloseSystemDialogs()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintScreenTimeout(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.transition.Visibility: void setMode(int)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction.Builder setExtras(android.os.Bundle)>:<public>:<android.media.session.PlaybackState.CustomAction.Builder>
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>:<public>:<android.media.MediaRecorder>
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.StrictHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.widget.ArrayAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.ViewAnimator: void <init>(android.content.Context)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.print.PrintJobInfo: java.lang.String getLabel()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setUsername(java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.view.View: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>:<public abstract>:<android.util.AttributeSet>
<android.widget.ViewAnimator: void showPrevious()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.transition.ChangeClipBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.http.HttpResponseCache: void <init>()>:<>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<junit.framework.TestResult: int runCount()>:<public synchronized>:<junit.framework.TestResult>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.AbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Visualizer.MeasurementPeakRms: void <init>()>:<public>:<android.media.audiofx.Visualizer.MeasurementPeakRms>
<android.os.Parcel: double readDouble()>:<public final>:<android.os.Parcel>
<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera.OnZoomChangeListener)>:<public final>:<android.hardware.Camera>
<android.service.wallpaper.WallpaperService.Engine: boolean isPreview()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.system.Os: void bind(java.io.FileDescriptor,java.net.InetAddress,int)>:<public static>:<android.system.Os>
<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.RectF: float centerY()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.hardware.camera2.CameraCaptureSession: void prepare(android.view.Surface)>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.FragmentController>
<android.content.Loader.OnLoadCanceledListener: void onLoadCanceled(android.content.Loader)>:<public abstract>:<android.content.Loader.OnLoadCanceledListener>
<android.media.MediaMetadataEditor: void addEditableKey(int)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.inputmethodservice.InputMethodService: void sendKeyChar(char)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>:<public abstract>:<android.os.IBinder>
<android.telecom.InCallService.VideoCall.Callback: void onPeerDimensionsChanged(int,int)>:<public abstract>:<android.telecom.InCallService.VideoCall.Callback>
<android.content.Intent: android.content.ComponentName getComponent()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.provider.ContactsContract.Contacts.Entity: void <init>()>:<>:<android.provider.ContactsContract.Contacts.Entity:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.BaseSyncColumns,android.provider.ContactsContract.SyncColumns,android.provider.ContactsContract.DataColumns,android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactStatusColumns,android.provider.ContactsContract.DataUsageStatColumns>
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>:<public>:<android.inputmethodservice.Keyboard>
<android.view.Display.Mode: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.media.MediaSync: android.media.PlaybackParams getPlaybackParams()>:<public native>:<android.media.MediaSync>
<android.widget.ViewFlipper: void startFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: void addPackageToPreferred(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.mock.MockPackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setIntArgument(java.lang.String,int)>:<public>:<android.text.style.TtsSpan.Builder>
<android.service.media.MediaBrowserService: void onCreate()>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.TouchUtils: void dragViewToBottom(android.test.InstrumentationTestCase,android.app.Activity,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.view.Menu: boolean hasVisibleItems()>:<public abstract>:<android.view.Menu>
<android.graphics.Typeface: void <init>()>:<>:<android.graphics.Typeface>
<android.media.midi.MidiReceiver: void send(byte[],int,int)>:<public>:<android.media.midi.MidiReceiver>
<android.text.format.Time: void <init>(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.util.JsonWriter: void flush()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.widget.StackView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>:<public>:<android.net.LocalServerSocket>
<android.view.ViewGroup: int getNestedScrollAxes()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.Assert: void assertEquals(long,long)>:<public static>:<junit.framework.Assert>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.R.transition: void <init>()>:<public>:<android.R.transition>
<android.content.RestrictionEntry: void setSelectedState(boolean)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.hardware.Camera.Parameters: java.util.List getSupportedWhiteBalance()>:<public>:<android.hardware.Camera.Parameters>
<android.location.Criteria: void <init>()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.app.Activity: void closeContextMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.http.SslCertificate.DName: java.lang.String getDName()>:<public>:<android.net.http.SslCertificate.DName>
<android.app.Fragment: android.app.Activity getActivity()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.SearchView: java.lang.CharSequence getQueryHint()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.animation.Animator.AnimatorListener: void onAnimationEnd(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.text.style.SuggestionSpan: int hashCode()>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.location.GpsSatellite: float getSnr()>:<public>:<android.location.GpsSatellite>
<android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>:<public>:<android.bluetooth.le.BluetoothLeScanner>
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.location.Geocoder: void <init>(android.content.Context,java.util.Locale)>:<public>:<android.location.Geocoder>
<android.renderscript.ScriptIntrinsicBLAS: void ZHERK(int,int,double,android.renderscript.Allocation,double,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)>:<public>:<android.media.session.MediaController>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.nfc.NfcAdapter: boolean isEnabled()>:<public>:<android.nfc.NfcAdapter>
<android.app.RemoteInput: void <clinit>()>:<static>:<android.app.RemoteInput:android.os.Parcelable>
<android.view.ActionProvider: void setVisibilityListener(android.view.ActionProvider.VisibilityListener)>:<public>:<android.view.ActionProvider>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(java.lang.Class)>:<public static>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.text.style.URLSpan: void <init>(java.lang.String)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.midi.MidiManager: void openBluetoothDevice(android.bluetooth.BluetoothDevice,android.media.midi.MidiManager.OnDeviceOpenedListener,android.os.Handler)>:<public>:<android.media.midi.MidiManager>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.net.Credentials: int getUid()>:<public>:<android.net.Credentials>
<android.widget.Checkable: boolean isChecked()>:<public abstract>:<android.widget.Checkable>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.DialogFragment: void onStop()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.Script: long getVarJ(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.view.KeyEvent: int normalizeMetaState(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.os.Debug: int getThreadAllocSize()>:<public static>:<android.os.Debug>
<android.telecom.Conference: int getVideoState()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.content.RestrictionEntry: void setIntValue(int)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.text.format.DateUtils: java.lang.String getAMPMString(int)>:<public static>:<android.text.format.DateUtils>
<android.app.backup.BackupAgent: void fullBackupFile(java.io.File,android.app.backup.FullBackupDataOutput)>:<public final>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActionBar: int getHeight()>:<public abstract>:<android.app.ActionBar>
<android.webkit.WebView: int findAll(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)>:<public>:<android.media.session.MediaSession>
<android.speech.tts.Voice: java.util.Locale getLocale()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.view.inputmethod.InputMethodSubtype: int getNameResId()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.util.JsonReader: void <init>(java.io.Reader)>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>:<public>:<android.hardware.display.VirtualDisplay>
<android.util.JsonReader: int nextInt()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.view.ViewGroup: void layout(int,int,int,int)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.text.SpannableStringInternal: void <init>()>:<>:<android.text.SpannableStringInternal>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollEnded()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerScrollListener>
<android.media.browse.MediaBrowser.ItemCallback: void onError(java.lang.String)>:<public>:<android.media.browse.MediaBrowser.ItemCallback>
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.content.SyncResult: boolean hasHardError()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.graphics.Matrix: boolean postRotate(float)>:<public>:<android.graphics.Matrix>
<android.print.PrintJobInfo: int describeContents()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.widget.Toast: void setDuration(int)>:<public>:<android.widget.Toast>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES31Ext: void glPopDebugGroupKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.service.chooser.ChooserTarget: java.lang.CharSequence getTitle()>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.hardware.display.VirtualDisplay: java.lang.String toString()>:<public>:<android.hardware.display.VirtualDisplay>
<android.app.FragmentController: void noteStateNotSaved()>:<public>:<android.app.FragmentController>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>:<public>:<android.app.RemoteInput.Builder>
<android.content.res.TypedArray: boolean hasValue(int)>:<public>:<android.content.res.TypedArray>
<android.view.ViewGroup.LayoutParams: void resolveLayoutDirection(int)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.database.MatrixCursor: int getCount()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.AbsSpinner: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Paint: android.graphics.Paint.Cap getStrokeCap()>:<public>:<android.graphics.Paint>
<android.graphics.Region: int describeContents()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.bluetooth.le.ScanSettings: void <clinit>()>:<static>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<dalvik.system.DexFile: void close()>:<public>:<dalvik.system.DexFile>
<org.json.JSONTokener: void back()>:<public>:<org.json.JSONTokener>
<android.print.pdf.PrintedPdfDocument: int getPageHeight()>:<public>:<android.print.pdf.PrintedPdfDocument:android.graphics.pdf.PdfDocument>
<android.view.InputDevice.MotionRange: float getFuzz()>:<public>:<android.view.InputDevice.MotionRange>
<android.telecom.Call: android.telecom.Call.Details getDetails()>:<public>:<android.telecom.Call>
<android.media.AudioRecord: int setNotificationMarkerPosition(int)>:<public>:<android.media.AudioRecord>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.widget.AbsListView: void dispatchSetPressed(boolean)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer.FrameCallback)>:<public>:<android.view.Choreographer>
<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.telephony.CellSignalStrengthCdma: java.lang.String toString()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.media.audiofx.Virtualizer: boolean canVirtualize(int,int)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.speech.tts.SynthesisRequest: java.lang.String getText()>:<public>:<android.speech.tts.SynthesisRequest>
<android.content.RestrictionEntry: void <init>(java.lang.String,boolean)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.view.ViewGroup: void addView(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.drm.DrmStore.Playback: void <init>()>:<public>:<android.drm.DrmStore.Playback>
<android.graphics.drawable.Drawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int describeContents()>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.print.PrintAttributes: android.print.PrintAttributes.Resolution getResolution()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicBLAS: void SSPMV(int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>:<public static synchronized>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.os.PowerManager: boolean isDeviceIdleMode()>:<public>:<android.os.PowerManager>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjection getMediaProjection(int,android.content.Intent)>:<public>:<android.media.projection.MediaProjectionManager>
<org.xmlpull.v1.XmlSerializer: boolean getFeature(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.graphics.Region: boolean set(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.content.ComponentName: java.lang.String getClassName()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.app.usage.UsageStatsManager: boolean isAppInactive(java.lang.String)>:<public>:<android.app.usage.UsageStatsManager>
<android.graphics.drawable.ShapeDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.view.inputmethod.CompletionInfo: int describeContents()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.widget.RemoteViewsService.RemoteViewsFactory: boolean hasStableIds()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.view.View: java.lang.Object getTag()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockPackageManager: java.lang.String getDefaultBrowserPackageName(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelectionBackReference(int,int)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.printservice.PrintService: android.print.PrinterId generatePrinterId(java.lang.String)>:<public final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.view.Display: void getRectSize(android.graphics.Rect)>:<public>:<android.view.Display>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>:<public abstract>:<android.content.pm.PackageManager>
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.ViewGroup: void removeAllViewsInLayout()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setEncryptionPaddings(java.lang.String[])>:<public transient>:<android.security.keystore.KeyProtection.Builder>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.audiofx.PresetReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.PresetReverb,int,int,short)>:<public abstract>:<android.media.audiofx.PresetReverb.OnParameterChangeListener>
<android.nfc.NfcAdapter: void <init>()>:<>:<android.nfc.NfcAdapter>
<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>:<protected>:<android.view.LayoutInflater>
<android.media.AudioDeviceInfo: int[] getChannelCounts()>:<public>:<android.media.AudioDeviceInfo>
<android.text.style.StrikethroughSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int)>:<public static>:<android.media.ThumbnailUtils>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDestroy()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.AlertDialog.Builder: android.content.Context getContext()>:<public>:<android.app.AlertDialog.Builder>
<android.app.DialogFragment: int show(android.app.FragmentTransaction,java.lang.String)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.preference.PreferenceFragment: void onStop()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.View: void onAnimationEnd()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.util.DisplayMetrics: int hashCode()>:<public>:<android.util.DisplayMetrics>
<android.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.Intent: android.content.Intent setFlags(int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.ApplicationErrorReport.RunningServiceInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.content.ClipData.Item: android.content.Intent getIntent()>:<public>:<android.content.ClipData.Item>
<android.media.MediaDrm.KeyStatus: int getStatusCode()>:<public>:<android.media.MediaDrm.KeyStatus>
<android.test.mock.MockResources: android.content.res.XmlResourceParser getXml(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.media.browse.MediaBrowser.MediaItem: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.test.mock.MockResources: int getInteger(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.preference.PreferenceActivity: android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.test.IsolatedContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.BoringLayout: int getEllipsizedWidth()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.speech.SpeechRecognizer: void destroy()>:<public>:<android.speech.SpeechRecognizer>
<android.renderscript.Allocation: void copyFrom(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.provider.MediaStore.Audio.Media: void <init>()>:<public>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<android.widget.PopupMenu: void inflate(int)>:<public>:<android.widget.PopupMenu>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.TextureView:android.view.View>
<android.text.method.QwertyKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>:<public>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.Surface: android.graphics.Canvas lockHardwareCanvas()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.content.pm.PackageInstaller.SessionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.graphics.Paint: float getStrokeWidth()>:<public native>:<android.graphics.Paint>
<android.service.carrier.CarrierIdentifier: java.lang.String getGid2()>:<public>:<android.service.carrier.CarrierIdentifier:android.os.Parcelable>
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.telecom.RemoteConnection.Callback: void onCallerDisplayNameChanged(android.telecom.RemoteConnection,java.lang.String,int)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.widget.DatePicker: void <init>(android.content.Context)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlias(java.lang.String)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.location.Address: java.lang.String getLocality()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.preference.TwoStatePreference: void onClick()>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.preference.PreferenceFragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification clone()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyLog()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureResultKeys()>:<public>:<android.hardware.camera2.CameraCharacteristics:android.hardware.camera2.CameraMetadata>
<android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.ContextWrapper: java.io.File[] getExternalCacheDirs()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.Switch: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)>:<public>:<android.app.job.JobInfo.Builder>
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.URLUtil: boolean isJavaScriptUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glFogf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES31: void glVertexAttribFormat(int,int,int,boolean,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.RemoteInput: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.app.Activity: void onProvideAssistData(android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.voice.VoiceInteractionService: void onLaunchVoiceAssistFromKeyguard()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar: android.app.ActionBar.Tab getSelectedTab()>:<public abstract>:<android.app.ActionBar>
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.telephony.CellInfoGsm: void <clinit>()>:<static>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.animation.Animator: void removePauseListener(android.animation.Animator.AnimatorPauseListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.AutoCompleteTextView: int getDropDownWidth()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ListPopupWindow>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.KernelID)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>:<public>:<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest:android.service.voice.VoiceInteractionSession.Request>
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>:<public static>:<android.media.ThumbnailUtils>
<android.app.ActivityManager.MemoryInfo: int describeContents()>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.os.UserHandle: void <init>(android.os.Parcel)>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.app.Activity: boolean showDialog(int,android.os.Bundle)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.FieldID)>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.service.textservice.SpellCheckerService.Session: void onCancel()>:<public>:<android.service.textservice.SpellCheckerService.Session>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>:<public>:<android.bluetooth.le.ScanSettings.Builder>
<android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()>:<public>:<android.view.WindowInsets>
<android.telecom.Call.Details: android.telecom.PhoneAccountHandle getAccountHandle()>:<public>:<android.telecom.Call.Details>
<android.view.ScaleGestureDetector: float getFocusY()>:<public>:<android.view.ScaleGestureDetector>
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>:<public static>:<android.nfc.NfcAdapter>
<android.provider.CalendarContract.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentResolver)>:<public static>:<android.provider.CalendarContract.EventsEntity:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.EventsColumns>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.view.TextureView: void setSurfaceTexture(android.graphics.SurfaceTexture)>:<public>:<android.view.TextureView:android.view.View>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setIntegerPart(java.lang.String)>:<public>:<android.text.style.TtsSpan.MoneyBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.view.KeyEvent: int getMaxKeyCode()>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.Rect: void sort()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.sip.SipSession.Listener: void onRingingBack(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.media.AudioTrack: float getMinVolume()>:<public static>:<android.media.AudioTrack>
<android.media.midi.MidiDevice: void <init>()>:<>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.app.ActionBar: void setDisplayShowCustomEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.opengl.GLES31Ext: android.opengl.GLES31Ext.DebugProcKHR glGetDebugMessageCallbackKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.view.View: void dispatchSetPressed(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ViewAsserts: void assertVerticalCenterAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.view.KeyEvent: int getScanCode()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: void setLayoutDirection(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.backup.BackupDataInput: java.lang.String getKey()>:<public>:<android.app.backup.BackupDataInput>
<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterInfo)>:<public>:<android.print.PrinterInfo.Builder>
<android.content.res.AssetManager: void finalize()>:<protected>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.os.StrictMode: void <init>()>:<>:<android.os.StrictMode>
<android.content.ContentProviderResult: void <clinit>()>:<static>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.printservice.PrintDocument: void <init>()>:<>:<android.printservice.PrintDocument>
<android.media.MediaDescription.Builder: android.media.MediaDescription build()>:<public>:<android.media.MediaDescription.Builder>
<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.graphics.Picture: void endRecording()>:<public>:<android.graphics.Picture>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.BroadcastReceiver.PendingResult: void setResultCode(int)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.app.PendingIntent)>:<public>:<android.media.AudioManager>
<android.widget.OverScroller: boolean computeScrollOffset()>:<public>:<android.widget.OverScroller>
<android.graphics.Path: void addRoundRect(float,float,float,float,float[],android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.media.midi.MidiSender: void disconnect(android.media.midi.MidiReceiver)>:<public>:<android.media.midi.MidiSender>
<android.app.Activity: int getRequestedOrientation()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.animation.ValueAnimator: java.lang.Object clone()>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.telecom.RemoteConnection: android.telecom.RemoteConference getConference()>:<public>:<android.telecom.RemoteConnection>
<android.animation.AnimatorSet: void setupEndValues()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.app.ExpandableListActivity: void onContentChanged()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.location.Location: java.lang.String toString()>:<public>:<android.location.Location:android.os.Parcelable>
<android.media.MediaRecorder: void setAudioSamplingRate(int)>:<public>:<android.media.MediaRecorder>
<android.view.ViewStructure: void setFocused(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.VideoView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.content.Intent: java.lang.String getDataString()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.Gravity: int getAbsoluteGravity(int,int)>:<public static>:<android.view.Gravity>
<android.media.midi.MidiDeviceInfo.PortInfo: void <init>()>:<>:<android.media.midi.MidiDeviceInfo.PortInfo>
<android.content.IntentFilter: void addCategory(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.media.MediaCodec: void flush()>:<public final>:<android.media.MediaCodec>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.TextView: void setTextSize(int,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothClass: void <clinit>()>:<static>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.media.midi.MidiOutputPort: void <init>()>:<>:<android.media.midi.MidiOutputPort:android.media.midi.MidiSender,java.io.Closeable>
<android.os.SystemClock: long uptimeMillis()>:<public static native>:<android.os.SystemClock>
<android.hardware.Camera.Parameters: float getFocalLength()>:<public>:<android.hardware.Camera.Parameters>
<android.view.ViewStructure: android.view.ViewStructure newChild(int)>:<public abstract>:<android.view.ViewStructure>
<android.os.Bundle: void <clinit>()>:<static>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.media.MediaCodec.Callback: void onOutputBufferAvailable(android.media.MediaCodec,int,android.media.MediaCodec.BufferInfo)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View.OnFocusChangeListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.test.mock.MockResources: void <init>()>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.RestrictionEntry: void setChoiceValues(android.content.Context,int)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.graphics.drawable.DrawableWrapper: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ActionBar>
<android.widget.Toast: void setGravity(int,int,int)>:<public>:<android.widget.Toast>
<android.content.pm.Signature: int describeContents()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.util.TypedValue: void setTo(android.util.TypedValue)>:<public>:<android.util.TypedValue>
<android.widget.TextView.SavedState: java.lang.String toString()>:<public>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.util.ArrayMap: java.lang.Object keyAt(int)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.widget.Switch: void setThumbTintList(android.content.res.ColorStateList)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>:<public abstract>:<android.view.MenuItem>
<android.content.BroadcastReceiver.PendingResult: void clearAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.view.ViewGroup: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.assist.AssistContent: android.content.ClipData getClipData()>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.nfc.tech.NfcA: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.net.IpPrefix: int describeContents()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.media.MediaRouter.RouteInfo: void <init>()>:<>:<android.media.MediaRouter.RouteInfo>
<android.graphics.drawable.Drawable: void setDither(boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.text.Layout: float getLineWidth(int)>:<public>:<android.text.Layout>
<android.widget.CursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType[] values()>:<public static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.net.Uri: java.util.Set getQueryParameterNames()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.hardware.camera2.CameraCaptureSession: void <init>()>:<public>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.service.restrictions.RestrictionsReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.service.restrictions.RestrictionsReceiver:android.content.BroadcastReceiver>
<android.view.VelocityTracker: float getXVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.os.Process: void killProcess(int)>:<public static final>:<android.os.Process>
<android.content.Intent: int describeContents()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.MediaPlayer.TrackInfo: java.lang.String getLanguage()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.app.Activity: void setProgressBarIndeterminate(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.bluetooth.BluetoothGatt: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.media.PlaybackParams: void <init>()>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.graphics.drawable.ClipDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telecom.RemoteConnection: java.util.List getConferenceableConnections()>:<public>:<android.telecom.RemoteConnection>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.KernelID getKernelID_Separate()>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.speech.tts.Voice: java.util.Set getFeatures()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.ActionBar: java.lang.CharSequence getTitle()>:<public abstract>:<android.app.ActionBar>
<android.transition.TransitionManager: void go(android.transition.Scene)>:<public static>:<android.transition.TransitionManager>
<android.opengl.GLES10: int glGetError()>:<public static native>:<android.opengl.GLES10>
<android.renderscript.ScriptIntrinsicBLAS: void SSYR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.LayerDrawable: int getLayerInsetTop(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.Loader: java.lang.String toString()>:<public>:<android.content.Loader>
<android.media.session.MediaSession: void setRatingType(int)>:<public>:<android.media.session.MediaSession>
<android.renderscript.RSDriverException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSDriverException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TimePicker: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBLAS: void CHEMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.animation.AnimatorSet: boolean isRunning()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.widget.NumberPicker: int getSolidColor()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.transition.Transition: java.lang.String toString()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.service.chooser.ChooserTarget: void <init>(java.lang.CharSequence,android.graphics.drawable.Icon,float,android.content.ComponentName,android.os.Bundle)>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.media.AudioTrack: int setPlaybackRate(int)>:<public>:<android.media.AudioTrack>
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.app.ActionBar.LayoutParams: void <init>(int,int,int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.nfc.tech.NfcB: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener)>:<public>:<android.graphics.SurfaceTexture>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,float[][])>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>:<public>:<android.os.BaseBundle>
<android.hardware.Camera.Parameters: float getExposureCompensationStep()>:<public>:<android.hardware.Camera.Parameters>
<android.test.mock.MockPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.drm.DrmInfoRequest: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmInfoRequest>
<org.xmlpull.v1.XmlPullParser: int getColumnNumber()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.graphics.Matrix: boolean rectStaysRect()>:<public>:<android.graphics.Matrix>
<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>:<public>:<android.graphics.Path>
<android.webkit.WebMessage: void <init>(java.lang.String)>:<public>:<android.webkit.WebMessage>
<android.widget.AbsListView: boolean isFastScrollAlwaysVisible()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.drm.DrmInfo: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmInfo>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.ListPopupWindow: android.widget.ListView getListView()>:<public>:<android.widget.ListPopupWindow>
<android.widget.ListView: void setDividerHeight(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Window.Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.content.Context: void setTheme(int)>:<public abstract>:<android.content.Context>
<android.media.AudioManager: boolean registerRemoteController(android.media.RemoteController)>:<public>:<android.media.AudioManager>
<android.bluetooth.BluetoothGattService: int getInstanceId()>:<public>:<android.bluetooth.BluetoothGattService>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.widget.TextView: void setInputType(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ImageView: void setBaseline(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.view.SurfaceHolder.Callback: void surfaceDestroyed(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.telecom.Connection: void setActive()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setFragmentId(java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.admin.DevicePolicyManager: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.Gallery: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.provider.ContactsContract.StatusUpdates: void <init>()>:<>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.widget.Spinner: void setGravity(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.provider.ContactsContract.Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>:<public>:<android.util.TypedValue>
<android.telecom.Call.Details: java.lang.String capabilitiesToString(int)>:<public static>:<android.telecom.Call.Details>
<android.graphics.Paint.FontMetricsInt: java.lang.String toString()>:<public>:<android.graphics.Paint.FontMetricsInt>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.String getStringValue(int)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.view.textservice.SpellCheckerSubtype: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.view.Window: void closePanel(int)>:<public abstract>:<android.view.Window>
<android.animation.Animator: void <init>()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLES10: void glFrontFace(int)>:<public static native>:<android.opengl.GLES10>
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.view.View.MeasureSpec: int getMode(int)>:<public static>:<android.view.View.MeasureSpec>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder setContactId(long)>:<public>:<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder>
<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>:<public abstract>:<android.text.SpanWatcher:android.text.NoCopySpan>
<android.view.ViewConfiguration: int getTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.text.Editable: android.text.Editable append(char)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentValues: int describeContents()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.print.PrintAttributes.MediaSize: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.MediaSize>
<android.graphics.drawable.LayerDrawable: void setLayerInsetEnd(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.wifi.WifiManager.MulticastLock: java.lang.String toString()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>:<public>:<android.webkit.WebViewClient>
<android.telephony.CellSignalStrengthCdma: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDescription(java.lang.CharSequence)>:<public>:<android.app.DownloadManager.Request>
<android.widget.AdapterViewFlipper: void fyiWillBeAdvancedByHostKThx()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.print.PrintAttributes: int getDuplexMode()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.transition.Transition: void setPathMotion(android.transition.PathMotion)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.widget.ActionMenuView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.transition.Transition: java.lang.String getName()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.AutoCompleteTextView: int getDropDownAnchor()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.format.Time: java.lang.String format2445()>:<public>:<android.text.format.Time>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>:<public>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.preference.DialogPreference: void setDialogTitle(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.media.SoundPool: void autoResume()>:<public final native>:<android.media.SoundPool>
<android.graphics.Point: int hashCode()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.location.Criteria: boolean isAltitudeRequired()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.view.Window: void setTransitionBackgroundFadeDuration(long)>:<public>:<android.view.Window>
<android.widget.TextView: void setSpannableFactory(android.text.Spannable.Factory)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaCrypto: void release()>:<public final native>:<android.media.MediaCrypto>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.ViewDebug.FlagToString: java.lang.String name()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.renderscript.ScriptIntrinsicLUT: void setGreen(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.Fragment: void onAttach(android.app.Activity)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.Toolbar: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.view.View: void bringToFront()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.telephony.CellIdentityGsm: void <init>()>:<>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.nfc.tech.MifareClassic: int getType()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.view.MotionEvent: int getActionButton()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.pm.PackageInstaller.Session: java.lang.String[] getNames()>:<public>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>:<public>:<android.app.KeyguardManager.KeyguardLock>
<android.media.session.MediaController.TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.preference.Preference: void setKey(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.Spinner: android.content.Context getPopupContext()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.net.wifi.p2p.WifiP2pConfig: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>:<public>:<android.app.Notification.Builder>
<android.view.WindowManager.LayoutParams: void <init>(int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.provider.Contacts.Settings: void <clinit>()>:<static>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<junit.framework.TestListener: void startTest(junit.framework.Test)>:<public abstract>:<junit.framework.TestListener>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>:<public static final>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteCancelled()>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>:<public>:<android.media.MediaPlayer>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setCallbackType(int)>:<public>:<android.bluetooth.le.ScanSettings.Builder>
<android.nfc.tech.IsoDep: boolean isConnected()>:<public volatile>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.widget.BaseExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.printservice.PrintJob: boolean isCompleted()>:<public>:<android.printservice.PrintJob>
<android.webkit.WebMessagePort: void <init>()>:<>:<android.webkit.WebMessagePort>
<android.graphics.drawable.LayerDrawable: int getLeftPadding()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ScaleGestureDetector: float getPreviousSpanY()>:<public>:<android.view.ScaleGestureDetector>
<android.content.Intent: void <init>()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera.PreviewCallback)>:<public final>:<android.hardware.Camera>
<android.app.Activity: void onCreate(android.os.Bundle,android.os.PersistableBundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.graphics.Shader.TileMode: void <clinit>()>:<static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.media.midi.MidiManager: void unregisterDeviceCallback(android.media.midi.MidiManager.DeviceCallback)>:<public>:<android.media.midi.MidiManager>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.test.IsolatedContext: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.BaseBundle: double[] getDoubleArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.animation.LayoutTransition: void enableTransitionType(int)>:<public>:<android.animation.LayoutTransition>
<android.app.admin.DevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.View: float getRotationX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: android.os.Handler getHandler()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.RemoteConnection.VideoProvider: void setDisplaySurface(android.view.Surface)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.net.MailTo: java.lang.String toString()>:<public>:<android.net.MailTo>
<android.test.ViewAsserts: void assertLeftAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.text.style.AbsoluteSizeSpan: void <init>(int,boolean)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Parcel: void writeNoException()>:<public final>:<android.os.Parcel>
<android.hardware.usb.UsbDevice: int getInterfaceCount()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.test.TouchUtils: void clickView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.preference.Preference: android.view.View onCreateView(android.view.ViewGroup)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.net.Uri: void <init>()>:<>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpAndSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.telephony.gsm.SmsMessage: long getTimestampMillis()>:<public>:<android.telephony.gsm.SmsMessage>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>:<public>:<android.widget.ListPopupWindow>
<android.os.Messenger: void send(android.os.Message)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>:<public>:<android.hardware.SensorManager>
<android.preference.Preference: void setWidgetLayoutResource(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.animation.LayoutTransition: void <init>()>:<public>:<android.animation.LayoutTransition>
<android.text.method.DigitsKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.Entity.NamedContentValues: void <init>(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.Entity.NamedContentValues>
<android.text.TextPaint: void <init>(int)>:<public>:<android.text.TextPaint:android.graphics.Paint>
<android.view.ViewStructure: void setAlpha(float)>:<public abstract>:<android.view.ViewStructure>
<android.hardware.display.VirtualDisplay.Callback: void onStopped()>:<public>:<android.hardware.display.VirtualDisplay.Callback>
<android.text.method.MetaKeyKeyListener: long adjustMetaAfterKeypress(long)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.test.InstrumentationTestCase: void <init>()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.Adapter: int getItemViewType(int)>:<public abstract>:<android.widget.Adapter>
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.TextView: float getLineSpacingMultiplier()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Script.FieldBase: android.renderscript.Type getType()>:<public>:<android.renderscript.Script.FieldBase>
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>:<public>:<android.content.res.Resources>
<android.speech.tts.UtteranceProgressListener: void onStart(java.lang.String)>:<public abstract>:<android.speech.tts.UtteranceProgressListener>
<android.graphics.drawable.ShapeDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.FragmentController: void dispatchDestroyView()>:<public>:<android.app.FragmentController>
<android.database.Cursor: double getDouble(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.content.BroadcastReceiver: java.lang.String getResultData()>:<public final>:<android.content.BroadcastReceiver>
<android.widget.MediaController.MediaPlayerControl: int getBufferPercentage()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedBy()>:<public>:<android.net.http.SslCertificate>
<android.security.KeyChain: boolean isKeyAlgorithmSupported(java.lang.String)>:<public static>:<android.security.KeyChain>
<android.graphics.PointF: boolean equals(float,float)>:<public final>:<android.graphics.PointF:android.os.Parcelable>
<android.widget.PopupWindow: void setElevation(float)>:<public>:<android.widget.PopupWindow>
<android.media.MediaRecorder: void setVideoFrameRate(int)>:<public native>:<android.media.MediaRecorder>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.nfc.tech.NfcB: void connect()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.hardware.SensorEventListener: void onAccuracyChanged(android.hardware.Sensor,int)>:<public abstract>:<android.hardware.SensorEventListener>
<android.telecom.Connection: java.lang.String getCallerDisplayName()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.telephony.SignalStrength: java.lang.String toString()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.media.AudioDeviceInfo: int[] getChannelIndexMasks()>:<public>:<android.media.AudioDeviceInfo>
<android.text.style.UnderlineSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.app.AlertDialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.graphics.Camera: void restore()>:<public native>:<android.graphics.Camera>
<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>:<public native>:<android.media.MediaMetadataRetriever>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newAssertQuery(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.wifi.WifiManager.WifiLock: boolean isHeld()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.speech.tts.SynthesisRequest: int getCallerUid()>:<public>:<android.speech.tts.SynthesisRequest>
<android.widget.AbsSeekBar: void onMeasure(int,int)>:<protected synchronized>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.accessibility.AccessibilityEvent: void recycle()>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(int,int,int,int)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.view.View: void addFocusables(java.util.ArrayList,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.pdf.PdfDocument.Page: void <init>()>:<>:<android.graphics.pdf.PdfDocument.Page>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.Drawable>
<android.location.Address: java.util.Locale getLocale()>:<public>:<android.location.Address:android.os.Parcelable>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIndents(int[],int[])>:<public>:<android.text.StaticLayout.Builder>
<android.graphics.drawable.VectorDrawable: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.test.TouchUtils: void dragQuarterScreenUp(android.test.InstrumentationTestCase,android.app.Activity)>:<public static>:<android.test.TouchUtils>
<android.view.ScaleGestureDetector.OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.app.Activity: android.app.Activity getParent()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.ConnectivityManager: boolean setProcessDefaultNetwork(android.net.Network)>:<public static>:<android.net.ConnectivityManager>
<android.app.ActionBar: int getSelectedNavigationIndex()>:<public abstract>:<android.app.ActionBar>
<android.graphics.pdf.PdfRenderer.Page: int getHeight()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.text.format.Time: long toMillis(boolean)>:<public>:<android.text.format.Time>
<android.widget.CalendarView: int getWeekNumberColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler,java.lang.String)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.widget.GridView: void layoutChildren()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.DhcpInfo: int describeContents()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.os.PowerManager: boolean isWakeLockLevelSupported(int)>:<public>:<android.os.PowerManager>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.test.mock.MockContentProvider: java.lang.String getType(android.net.Uri)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.os.Debug: int getThreadAllocCount()>:<public static>:<android.os.Debug>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telecom.PhoneAccount: android.telecom.PhoneAccountHandle getAccountHandle()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.view.OrientationListener: void enable()>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.media.midi.MidiDeviceInfo: int getOutputPortCount()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void <init>()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.WebChromeClient.FileChooserParams: boolean isCaptureEnabled()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.text.Layout: int getParagraphRight(int)>:<public final>:<android.text.Layout>
<android.graphics.Point: void set(int,int)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.transition.TransitionManager: void go(android.transition.Scene,android.transition.Transition)>:<public static>:<android.transition.TransitionManager>
<android.service.voice.VoiceInteractionService: void onShutdown()>:<public>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>:<public static>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.hardware.Camera.Parameters: int getPreviewFrameRate()>:<public>:<android.hardware.Camera.Parameters>
<android.test.ViewAsserts: void assertBottomAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.app.usage.ConfigurationStats: long getLastTimeActive()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: boolean isAssistBlocked()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.graphics.drawable.VectorDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.telephony.gsm.SmsMessage: byte[] getPdu()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.app.AlertDialog.Builder: void <init>(android.content.Context,int)>:<public>:<android.app.AlertDialog.Builder>
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>:<public>:<android.view.FocusFinder>
<android.opengl.GLES31Ext: void glDebugMessageCallbackKHR(android.opengl.GLES31Ext.DebugProcKHR)>:<public static native>:<android.opengl.GLES31Ext>
<android.app.ActivityManager.RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.telephony.CellIdentityGsm: int describeContents()>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>:<public>:<android.media.MediaCodec>
<android.media.midi.MidiDevice: android.media.midi.MidiOutputPort openOutputPort(int)>:<public>:<android.media.midi.MidiDevice:java.io.Closeable>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>:<public>:<android.util.Range>
<android.os.BatteryManager: void <init>()>:<>:<android.os.BatteryManager>
<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telephony.TelephonyManager: boolean setLine1NumberForDisplay(java.lang.String,java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.text.util.Rfc822Token: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.renderscript.ScriptIntrinsicBLAS: void <init>()>:<>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.widget.ScrollView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.notification.NotificationListenerService.Ranking: int getRank()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.os.Parcel: void writeByteArray(byte[],int,int)>:<public final>:<android.os.Parcel>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>:<public>:<android.graphics.Canvas>
<android.content.Loader: void unregisterOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)>:<public>:<android.content.Loader>
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.test.AndroidTestRunner: void setTestClassName(java.lang.String,java.lang.String)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.content.ContextWrapper: java.lang.String getSystemServiceName(java.lang.Class)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.text.style.BulletSpan: int getSpanTypeId()>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.app.ApplicationErrorReport: int describeContents()>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.content.Intent)>:<public>:<android.widget.TabHost.TabSpec>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.admin.DevicePolicyManager: void clearUserRestriction(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.Activity: void stopLockTask()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.webkit.WebStorage: void <init>()>:<>:<android.webkit.WebStorage>
<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker.Formatter)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.Window: void clearFlags(int)>:<public>:<android.view.Window>
<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerTop()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.BoringLayout: int getParagraphDirection(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.hardware.camera2.CameraDevice: void <init>()>:<>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.provider.Telephony.Mms.Inbox: void <clinit>()>:<static>:<android.provider.Telephony.Mms.Inbox:android.provider.Telephony.BaseMmsColumns>
<android.test.mock.MockContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.app.FragmentHostCallback: void onInvalidateOptionsMenu()>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteStatement: long executeInsert()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.transition.ArcMotion: float getMinimumVerticalAngle()>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(byte[])>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.hardware.Camera.Parameters: java.util.List getSupportedFlashModes()>:<public>:<android.hardware.Camera.Parameters>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setInProgressLabel(java.lang.CharSequence)>:<public>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.app.WallpaperInfo: java.lang.String getPackageName()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.content.RestrictionEntry: java.lang.String getKey()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.app.NotificationManager: void cancelAll()>:<public>:<android.app.NotificationManager>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.database.Cursor: void setExtras(android.os.Bundle)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.job.JobInfo: android.content.ComponentName getService()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.ProgressDialog: void <init>(android.content.Context,int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.content.IntentFilter: boolean hasDataType(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.LinearLayout: int getDividerPadding()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLU: void <init>()>:<public>:<android.opengl.GLU>
<android.sax.StartElementListener: void start(org.xml.sax.Attributes)>:<public abstract>:<android.sax.StartElementListener>
<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.view.Window: void togglePanel(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.animation.AnimatorSet: void end()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<org.xmlpull.v1.XmlPullParserFactory: boolean isValidating()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.view.animation.Animation: boolean getFillAfter()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.webkit.PermissionRequest: void grant(java.lang.String[])>:<public abstract>:<android.webkit.PermissionRequest>
<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public final>:<android.content.ContentResolver>
<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.preference.ListPreference: void setValue(java.lang.String)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.telephony.TelephonyManager: boolean hasCarrierPrivileges()>:<public>:<android.telephony.TelephonyManager>
<android.view.MotionEvent: int getMetaState()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.RippleDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.provider.UserDictionary.Words: void <clinit>()>:<static>:<android.provider.UserDictionary.Words:android.provider.BaseColumns>
<android.opengl.GLES30: void glDeleteVertexArrays(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telephony.gsm.SmsMessage: int getIndexOnSim()>:<public>:<android.telephony.gsm.SmsMessage>
<android.app.backup.RestoreObserver: void restoreFinished(int)>:<public>:<android.app.backup.RestoreObserver>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>:<public static>:<android.text.TextUtils>
<android.view.View: int[] onCreateDrawableState(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getCount()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.Activity: boolean requestVisibleBehind(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.hardware.Camera.Parameters: java.util.List getZoomRatios()>:<public>:<android.hardware.Camera.Parameters>
<android.net.VpnService.Builder: android.net.VpnService.Builder setBlocking(boolean)>:<public>:<android.net.VpnService.Builder>
<android.telecom.Conference: void setConnectionTime(long)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind valueOf(java.lang.String)>:<public static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<junit.framework.Assert: void assertNotNull(java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telecom.Call.Callback: void onPostDialWait(android.telecom.Call,java.lang.String)>:<public>:<android.telecom.Call.Callback>
<android.nfc.tech.Ndef: void writeNdefMessage(android.nfc.NdefMessage)>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.View: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.BaseKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.telephony.CellSignalStrengthLte: void <init>()>:<>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.opengl.EGL14: boolean eglBindAPI(int)>:<public static native>:<android.opengl.EGL14>
<junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>:<public>:<junit.framework.TestResult>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.renderscript.Matrix3f: void loadScale(float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.os.Bundle: float getFloat(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.BaseBundle: int getInt(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.graphics.drawable.ClipDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.widget.AdapterViewFlipper: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.widget.GridLayout: void <init>(android.content.Context)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.sax.Element: android.sax.Element getChild(java.lang.String)>:<public>:<android.sax.Element>
<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Fragment: void onLowMemory()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>:<public>:<android.app.SharedElementCallback>
<android.widget.AbsListView: void setMultiChoiceModeListener(android.widget.AbsListView.MultiChoiceModeListener)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.ConnectivityManager: boolean requestBandwidthUpdate(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.widget.AbsListView: boolean isInFilterMode()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.Uri.Builder: android.net.Uri.Builder scheme(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getValidOutputFormatsForInput(int)>:<public final>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.widget.ImageSwitcher: void <init>(android.content.Context)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.style.EasyEditSpan: void <init>()>:<public>:<android.text.style.EasyEditSpan:android.text.ParcelableSpan>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.TextView: void onEndBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.CursorWindow: boolean isBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)>:<public static>:<android.media.CameraProfile>
<android.telephony.CellIdentityCdma: int getLongitude()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.String getInstallerPackageName()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.telecom.Connection: void setVideoProvider(android.telecom.Connection.VideoProvider)>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.view.accessibility.CaptioningManager: void <init>()>:<>:<android.view.accessibility.CaptioningManager>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.KeyEvent: int getAction()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.hardware.usb.UsbDevice: java.lang.String getVersion()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.media.JetPlayer.OnJetEventListener: void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.graphics.Rect: void union(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.widget.AbsListView: void onRemoteAdapterDisconnected()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.camera2.CameraCaptureSession: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.provider.MediaStore.Audio.Artists.Albums: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Audio.Artists.Albums:android.provider.MediaStore.Audio.AlbumColumns>
<android.preference.PreferenceGroup: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.os.Debug: void startMethodTracingSampling(java.lang.String,int,int)>:<public static>:<android.os.Debug>
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.Intent: java.lang.String normalizeMimeType(java.lang.String)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.WebIconDatabase.IconListener: void onReceivedIcon(java.lang.String,android.graphics.Bitmap)>:<public abstract>:<android.webkit.WebIconDatabase.IconListener>
<android.database.AbstractCursor: boolean isAfterLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.usage.NetworkStatsManager: void <init>()>:<>:<android.app.usage.NetworkStatsManager>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.lang.String)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.CursorAnchorInfo: void <init>(android.os.Parcel)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.graphics.Path.FillType: android.graphics.Path.FillType valueOf(java.lang.String)>:<public static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.media.audiofx.EnvironmentalReverb: void setDensity(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.AudioDeviceInfo: int[] getChannelMasks()>:<public>:<android.media.AudioDeviceInfo>
<android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification.Action.Builder>
<android.speech.tts.Voice: void <clinit>()>:<static>:<android.speech.tts.Voice:android.os.Parcelable>
<android.webkit.WebView: void onStartTemporaryDetach()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>:<public>:<android.content.res.Resources.Theme>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)>:<public>:<android.widget.PopupWindow>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.net.nsd.NsdServiceInfo: void <init>()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.os.UserManager: boolean isUserRunningOrStopping(android.os.UserHandle)>:<public>:<android.os.UserManager>
<org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.os.Bundle: void putShort(java.lang.String,short)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.animation.ValueAnimator: java.lang.String toString()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.webkit.WebSettings: void setCacheMode(int)>:<public abstract>:<android.webkit.WebSettings>
<android.app.usage.UsageStats: java.lang.String getPackageName()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>:<public static native>:<android.graphics.NinePatch>
<android.hardware.Camera.Parameters: void setSceneMode(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(java.lang.CharSequence)>:<public>:<android.app.AlertDialog.Builder>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.nfc.cardemulation.CardEmulation: boolean setPreferredService(android.app.Activity,android.content.ComponentName)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackType(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.content.ContentProvider: void onTrimMemory(int)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.graphics.ColorMatrix: void <init>(float[])>:<public>:<android.graphics.ColorMatrix>
<android.provider.Telephony.Mms.Intents: void <init>()>:<>:<android.provider.Telephony.Mms.Intents>
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telephony.SmsManager: int getSubscriptionId()>:<public>:<android.telephony.SmsManager>
<android.database.AbstractCursor: boolean isBeforeFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>:<public final>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.GestureDetector.OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>:<public>:<android.bluetooth.le.AdvertiseSettings.Builder>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.webkit.WebSettings: void setMinimumFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile.ServiceListener,int)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.graphics.drawable.PictureDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.test.MoreAsserts: void assertNotEqual(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<android.test.MoreAsserts>
<android.app.ActivityOptions: android.app.ActivityOptions makeTaskLaunchBehind()>:<public static>:<android.app.ActivityOptions>
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>:<public>:<android.graphics.Paint>
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: int generateViewId()>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.media.AudioManager: void setRingerMode(int)>:<public>:<android.media.AudioManager>
<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)>:<public>:<android.speech.tts.TextToSpeech>
<android.view.MotionEvent: float getY(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Notification.WearableExtender: void <init>()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: void offsetLeftAndRight(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.xmlpull.v1.XmlPullParserFactory: void <init>()>:<protected>:<org.xmlpull.v1.XmlPullParserFactory>
<android.app.ActionBar: int getHideOffset()>:<public>:<android.app.ActionBar>
<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerHorizontal()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.util.DisplayMetrics: java.lang.String toString()>:<public>:<android.util.DisplayMetrics>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>:<public>:<android.graphics.Interpolator>
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.telecom.Call.Callback: void <init>()>:<public>:<android.telecom.Call.Callback>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.WallpaperInfo: java.lang.String getServiceName()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbConfiguration getConfiguration(int)>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.view.View: float getElevation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.res.AssetManager: void <init>()>:<>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.app.ActivityManager.AppTask: void <init>()>:<>:<android.app.ActivityManager.AppTask>
<android.app.Instrumentation: void finish(int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public abstract>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.media.browse.MediaBrowser: void unsubscribe(java.lang.String)>:<public>:<android.media.browse.MediaBrowser>
<android.widget.Toolbar: void setTitle(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.os.Parcel: void writeList(java.util.List)>:<public final>:<android.os.Parcel>
<android.widget.AbsListView: int computeVerticalScrollRange()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.style.RelativeSizeSpan: void <init>(float)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.pm.PackageItemInfo.DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.content.pm.PackageItemInfo.DisplayNameComparator:java.util.Comparator>
<android.app.Activity: void onUserInteraction()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.wifi.WifiManager: void setTdlsEnabledWithMacAddress(java.lang.String,boolean)>:<public>:<android.net.wifi.WifiManager>
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.Fragment: boolean getUserVisibleHint()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.content.res.Resources: float getDimension(int)>:<public>:<android.content.res.Resources>
<android.R.bool: void <init>()>:<public>:<android.R.bool>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.Window: void setSharedElementReenterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.ProgressBar: void drawableStateChanged()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Camera: float dotWithNormal(float,float,float)>:<public native>:<android.graphics.Camera>
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Element: android.renderscript.Element.DataKind getDataKind()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.os.Debug: int getGlobalGcInvocationCount()>:<public static>:<android.os.Debug>
<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.DialogFragment: boolean getShowsDialog()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.service.media.CameraPrewarmService: void onCooldown(boolean)>:<public abstract>:<android.service.media.CameraPrewarmService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar: void setSubtitle(int)>:<public abstract>:<android.app.ActionBar>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.view.ViewStructure: void setActivated(boolean)>:<public abstract>:<android.view.ViewStructure>
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String,java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>:<public>:<android.graphics.NinePatch>
<android.transition.TransitionPropagation: java.lang.String[] getPropagationProperties()>:<public abstract>:<android.transition.TransitionPropagation>
<android.net.wifi.WifiManager: boolean disableNetwork(int)>:<public>:<android.net.wifi.WifiManager>
<android.os.IBinder: boolean pingBinder()>:<public abstract>:<android.os.IBinder>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLDebugHelper: javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>:<protected>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.widget.ViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.util.AndroidException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<android.bluetooth.le.ScanFilter: int describeContents()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.database.CursorWindow: int describeContents()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.MediaRouteButton: void showDialog()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.telecom.Call: void unhold()>:<public>:<android.telecom.Call>
<android.widget.DatePicker: void setMinDate(long)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.RelativeLayout: android.widget.RelativeLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.accessibility.AccessibilityEvent: void <init>()>:<>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.media.MediaExtractor: void setDataSource(java.lang.String)>:<public final>:<android.media.MediaExtractor>
<android.transition.Scene: void <init>(android.view.ViewGroup)>:<public>:<android.transition.Scene>
<android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.provider.DocumentsProvider: java.lang.String getType(android.net.Uri)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.graphics.Interpolator.Result: void <clinit>()>:<static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.print.PrinterInfo: android.print.PrinterId getId()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.service.voice.VoiceInteractionSessionService: void <init>()>:<public>:<android.service.voice.VoiceInteractionSessionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<junit.framework.TestCase: void runBare()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.String,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.MediaRouteButton: void setVisibility(int)>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.speech.tts.TextToSpeech: java.util.Set getVoices()>:<public>:<android.speech.tts.TextToSpeech>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace valueOf(java.lang.String)>:<public static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.view.KeyEvent: boolean isCtrlPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.assist.AssistStructure.WindowNode: void <init>()>:<>:<android.app.assist.AssistStructure.WindowNode>
<android.view.ViewGroup: void setTransitionGroup(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.os.DeadObjectException: void <init>(java.lang.String)>:<public>:<android.os.DeadObjectException:android.os.RemoteException,android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.widget.ListView: boolean getItemsCanFocus()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TimePicker: boolean isEnabled()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.String)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.media.MediaRouter.SimpleCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.app.Instrumentation: void stopAllocCounting()>:<public>:<android.app.Instrumentation>
<android.graphics.Rasterizer: void finalize()>:<protected>:<android.graphics.Rasterizer>
<android.telecom.Connection: java.lang.String stateToString(int)>:<public static>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.graphics.drawable.RippleDrawable: void setRadius(int)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.hardware.Camera: android.hardware.Camera.Parameters getParameters()>:<public>:<android.hardware.Camera>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.media.ImageWriter: void <init>()>:<>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.widget.LinearLayout.LayoutParams: void <init>(android.widget.LinearLayout.LayoutParams)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.net.sip.SipSession.Listener: void onRegistrationDone(android.net.sip.SipSession,int)>:<public>:<android.net.sip.SipSession.Listener>
<android.media.tv.TvView.TvInputCallback: void onContentAllowed(java.lang.String)>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.media.MediaExtractor: void finalize()>:<protected>:<android.media.MediaExtractor>
<android.os.Debug: int getGlobalExternalAllocSize()>:<public static>:<android.os.Debug>
<android.widget.CompoundButton.OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>:<public abstract>:<android.widget.CompoundButton.OnCheckedChangeListener>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.view.textservice.TextInfo: void <clinit>()>:<static>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>:<public static>:<android.app.RemoteInput:android.os.Parcelable>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<android.telecom.VideoProfile: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>:<public>:<android.preference.PreferenceManager>
<android.database.CursorWrapper: boolean moveToFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Outline: void setRect(android.graphics.Rect)>:<public>:<android.graphics.Outline>
<android.hardware.Camera: void unlock()>:<public final native>:<android.hardware.Camera>
<android.app.assist.AssistStructure.ViewNode: int getId()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<org.json.JSONObject: java.lang.Object wrap(java.lang.Object)>:<public static>:<org.json.JSONObject>
<android.location.Address: void clearLatitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>:<public>:<android.widget.ListPopupWindow>
<android.app.usage.UsageStats: void add(android.app.usage.UsageStats)>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.widget.ZoomControls: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.session.MediaController.Callback: void onExtrasChanged(android.os.Bundle)>:<public>:<android.media.session.MediaController.Callback>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.preference.PreferenceFragment: void <init>()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.graphics.ColorFilter: void <init>()>:<public>:<android.graphics.ColorFilter>
<android.widget.ViewSwitcher: void <init>(android.content.Context)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.util.LruCache: int size()>:<public final synchronized>:<android.util.LruCache>
<android.widget.NumberPicker: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.ListPreference: java.lang.CharSequence getSummary()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.TextClock: void setFormat12Hour(java.lang.CharSequence)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range[] getSupportedSampleRateRanges()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.view.MotionEvent.PointerCoords: void <init>(android.view.MotionEvent.PointerCoords)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.app.LauncherActivity: void setTitle(int)>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>:<protected>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Type: int getX()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.bluetooth.le.ScanFilter: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.os.Debug: int getGlobalExternalFreedCount()>:<public static>:<android.os.Debug>
<android.view.TextureView: void buildLayer()>:<public>:<android.view.TextureView:android.view.View>
<android.accessibilityservice.AccessibilityService: void onServiceConnected()>:<protected>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<junit.framework.TestFailure: java.lang.Throwable thrownException()>:<public>:<junit.framework.TestFailure>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getInputSizes(int)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.Presentation: android.content.res.Resources getResources()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.nfc.tech.Ndef: boolean canMakeReadOnly()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.os.Debug: void resetGlobalFreedCount()>:<public static>:<android.os.Debug>
<android.app.MediaRouteActionProvider: boolean isVisible()>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.net.Network: void bindSocket(java.net.DatagramSocket)>:<public>:<android.net.Network:android.os.Parcelable>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.view.View: boolean isFocusableInTouchMode()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.wifi.p2p.WifiP2pDevice: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.widget.AbsSeekBar: void drawableStateChanged()>:<protected>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>:<public>:<android.app.SharedElementCallback>
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.os.ParcelUuid: boolean equals(java.lang.Object)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.graphics.drawable.AnimatedVectorDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.os.ParcelFileDescriptor: int detachFd()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.net.sip.SipSession.Listener: void onRegistering(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.os.UserHandle: java.lang.String toString()>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.Window: void setIcon(int)>:<public>:<android.view.Window>
<android.media.VolumeProvider: int getVolumeControl()>:<public final>:<android.media.VolumeProvider>
<android.widget.Adapter: long getItemId(int)>:<public abstract>:<android.widget.Adapter>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int3)>:<public>:<android.renderscript.FieldPacker>
<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)>:<protected>:<android.view.animation.LayoutAnimationController>
<android.view.accessibility.AccessibilityManager: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.view.inputmethod.CursorAnchorInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RingtoneManager: void stopPreviousRingtone()>:<public>:<android.media.RingtoneManager>
<android.app.FragmentController: void doLoaderDestroy()>:<public>:<android.app.FragmentController>
<android.test.PerformanceTestCase: int startPerformance(android.test.PerformanceTestCase.Intermediates)>:<public abstract>:<android.test.PerformanceTestCase>
<android.widget.AbsListView: boolean isPaddingOffsetRequired()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.app.Activity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.res.AssetManager.AssetInputStream: boolean markSupported()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.opengl.GLES20: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.text.TextUtils.SimpleStringSplitter: java.lang.String next()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ImageView:android.view.View>
<android.location.SettingInjectorService: java.lang.String onGetSummary()>:<protected abstract>:<android.location.SettingInjectorService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.os.ParcelUuid: void <clinit>()>:<static>:<android.os.ParcelUuid:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable.Orientation: void <clinit>()>:<static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.text.Selection: void selectAll(android.text.Spannable)>:<public static final>:<android.text.Selection>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int)>:<public>:<android.hardware.display.DisplayManager>
<android.content.ContentUris: android.net.Uri.Builder appendId(android.net.Uri.Builder,long)>:<public static>:<android.content.ContentUris>
<android.media.MediaRecorder: void setVideoEncoder(int)>:<public native>:<android.media.MediaRecorder>
<android.opengl.EGL14: boolean eglGetConfigAttrib(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.database.AbstractCursor: boolean isNull(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>:<public>:<junit.framework.TestFailure>
<android.os.Parcel: void readBooleanArray(boolean[])>:<public final>:<android.os.Parcel>
<android.media.MediaSync.Callback: void onAudioBufferConsumed(android.media.MediaSync,java.nio.ByteBuffer,int)>:<public abstract>:<android.media.MediaSync.Callback>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.media.session.MediaSession.Callback: void onCustomAction(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.Callback>
<android.app.VoiceInteractor: void <init>()>:<>:<android.app.VoiceInteractor>
<android.graphics.Matrix: boolean postRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter.OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])>:<public transient>:<android.nfc.NfcAdapter>
<android.gesture.GestureStore: boolean hasChanged()>:<public>:<android.gesture.GestureStore>
<android.media.MediaRouter.RouteGroup: void requestUpdateVolume(int)>:<public>:<android.media.MediaRouter.RouteGroup:android.media.MediaRouter.RouteInfo>
<android.view.View: int getPaddingRight()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent.PointerProperties: void <init>()>:<public>:<android.view.MotionEvent.PointerProperties>
<android.telecom.RemoteConnection: android.telecom.RemoteConnection.VideoProvider getVideoProvider()>:<public final>:<android.telecom.RemoteConnection>
<android.widget.ExpandableListView: int getPackedPositionGroup(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.test.mock.MockResources: android.content.res.TypedArray obtainTypedArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.net.http.HttpResponseCache: int getHitCount()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.widget.DatePicker: void setFirstDayOfWeek(int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebBackForwardList: void <init>()>:<public>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioSampleRate(int)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.content.pm.ProviderInfo: java.lang.String toString()>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.WindowManager.LayoutParams: void <init>()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.text.Spannable.Factory: android.text.Spannable.Factory getInstance()>:<public static>:<android.text.Spannable.Factory>
<android.preference.PreferenceCategory: boolean shouldDisableDependents()>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>:<public>:<android.app.admin.DevicePolicyManager>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceAddress()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.bluetooth.BluetoothGattServerCallback: void onConnectionStateChange(android.bluetooth.BluetoothDevice,int,int)>:<public>:<android.bluetooth.BluetoothGattServerCallback>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.system.OsConstants: int WEXITSTATUS(int)>:<public static>:<android.system.OsConstants>
<android.media.audiofx.Virtualizer: boolean getStrengthSupported()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setExtra(android.os.Bundle)>:<public final>:<android.media.tv.TvTrackInfo.Builder>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public static>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.net.DhcpInfo: void <init>()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void <init>()>:<public>:<android.hardware.camera2.CameraCaptureSession.CaptureCallback>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void <init>(android.inputmethodservice.AbstractInputMethodService)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.database.DatabaseUtils.InsertHelper: void bindNull(int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.media.VolumeProvider: int getMaxVolume()>:<public final>:<android.media.VolumeProvider>
<android.media.MediaRecorder: void prepare()>:<public>:<android.media.MediaRecorder>
<android.system.Os: int umask(int)>:<public static>:<android.system.Os>
<android.content.ContentProvider: void <init>()>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.content.UriPermission: long getPersistedTime()>:<public>:<android.content.UriPermission:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: boolean isDismissable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.CompoundButton: void toggle()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.provider.ContactsContract.RawContacts: void <init>()>:<>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int,int)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.view.inputmethod.InputMethodSubtype: int describeContents()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.os.ConditionVariable: void <init>(boolean)>:<public>:<android.os.ConditionVariable>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.print.PrintAttributes: void writeToParcel(android.os.Parcel,int)>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.app.VoiceInteractor.PickOptionRequest.Option: int getIndex()>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.bluetooth.BluetoothGattServer: void <init>()>:<>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener)>:<public>:<android.media.JetPlayer>
<android.graphics.Point: boolean equals(java.lang.Object)>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.opengl.EGLDisplay: void <init>()>:<>:<android.opengl.EGLDisplay:android.opengl.EGLObjectHandle>
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>:<public static>:<android.util.Xml>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean bringPointIntoView(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.LinearLayout: boolean isMeasureWithLargestChildEnabled()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.ImageView: void onMeasure(int,int)>:<protected>:<android.widget.ImageView:android.view.View>
<android.text.method.TextKeyListener.Capitalize: android.text.method.TextKeyListener.Capitalize valueOf(java.lang.String)>:<public static>:<android.text.method.TextKeyListener.Capitalize:java.lang.Enum>
<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.test.ServiceTestCase: void tearDown()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.location.Location: float getAccuracy()>:<public>:<android.location.Location:android.os.Parcelable>
<android.preference.Preference: void setLayoutResource(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLU: int gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.bluetooth.BluetoothHeadset: void <init>()>:<>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<org.xmlpull.v1.XmlSerializer: void docdecl(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLException: void <init>(int,java.lang.String)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.AutoCompleteTextView.Validator: boolean isValid(java.lang.CharSequence)>:<public abstract>:<android.widget.AutoCompleteTextView.Validator>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: byte[] getTriggerAudio()>:<public>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.media.MediaRouter.RouteInfo: int getPlaybackStream()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.print.PrintAttributes.Builder: void <init>()>:<public>:<android.print.PrintAttributes.Builder>
<android.telephony.CellLocation: void requestLocationUpdate()>:<public static>:<android.telephony.CellLocation>
<android.widget.ActionMenuView: boolean showOverflowMenu()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.res.TypedArray: float getFraction(int,int,int,float)>:<public>:<android.content.res.TypedArray>
<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.media.MediaRecorder: void reset()>:<public>:<android.media.MediaRecorder>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>:<public final>:<android.content.ContentResolver>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.graphics.drawable.shapes.PathShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.media.MediaRecorder: void start()>:<public native>:<android.media.MediaRecorder>
<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: void setPivotYRelative(boolean)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.widget.TextView: float getRightFadingEdgeStrength()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Bundle: void readFromParcel(android.os.Parcel)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.Activity: void requestPermissions(java.lang.String[],int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.provider.ContactsContract.Groups: void <clinit>()>:<static>:<android.provider.ContactsContract.Groups:android.provider.BaseColumns,android.provider.ContactsContract.GroupsColumns,android.provider.ContactsContract.SyncColumns>
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.View: void setAnimation(android.view.animation.Animation)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.Bundle: float getFloat(java.lang.String,float)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.security.KeyPairGeneratorSpec: android.content.Context getContext()>:<public>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: int getNextFocusForwardId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.app.Fragment: void setReenterTransition(android.transition.Transition)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: int describeContents()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.ActionBar: void setSelectedNavigationItem(int)>:<public abstract>:<android.app.ActionBar>
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.view.animation.AnimationSet: void reset()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.renderscript.ScriptIntrinsicBLAS: void ZHBMV(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>:<public>:<android.telephony.TelephonyManager>
<android.app.assist.AssistContent: void setStructuredData(java.lang.String)>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)>:<public>:<android.media.session.MediaController>
<android.animation.LayoutTransition: void disableTransitionType(int)>:<public>:<android.animation.LayoutTransition>
<android.view.animation.AccelerateInterpolator: void <init>()>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.BaseInterpolator>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.ScriptIntrinsicBlur create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetCurrentDisplay()>:<public static native>:<android.opengl.EGL14>
<android.widget.TableRow: void <init>(android.content.Context)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.service.voice.VoiceInteractionSession: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.app.MediaRouteActionProvider: void setRouteTypes(int)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.test.mock.MockPackageManager: void extendVerificationTimeout(int,int,long)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.database.DatabaseUtils.InsertHelper: void bind(int,long)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.printservice.PrinterDiscoverySession: void <init>()>:<public>:<android.printservice.PrinterDiscoverySession>
<android.webkit.WebSettings.ZoomDensity: void <clinit>()>:<static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.Activity: void postponeEnterTransition()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.FragmentHostCallback: int onGetWindowAnimations()>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int,int,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.bluetooth.BluetoothClass.Device: void <init>()>:<public>:<android.bluetooth.BluetoothClass.Device>
<android.hardware.display.VirtualDisplay.Callback: void onPaused()>:<public>:<android.hardware.display.VirtualDisplay.Callback>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.os.StatFs: int getBlockCount()>:<public>:<android.os.StatFs>
<android.nfc.tech.NfcF: int getTimeout()>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>:<public abstract>:<android.view.Window>
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.CursorWrapper: boolean moveToNext()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asLandscape()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.printservice.PrintService: void onRequestCancelPrintJob(android.printservice.PrintJob)>:<protected abstract>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.DragEvent: float getX()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.nfc.tech.NfcBarcode: void connect()>:<public volatile>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.telephony.CellIdentityWcdma: int describeContents()>:<public>:<android.telephony.CellIdentityWcdma:android.os.Parcelable>
<android.os.Debug.InstructionCount: int globalMethodInvocations()>:<public>:<android.os.Debug.InstructionCount>
<android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.HeaderViewListAdapter: boolean removeFooter(android.view.View)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>:<public>:<android.graphics.drawable.Drawable>
<android.view.MotionEvent: float getPressure()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.print.PrintDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>:<public abstract>:<android.print.PrintDocumentAdapter>
<android.provider.CalendarContract: void <clinit>()>:<static>:<android.provider.CalendarContract>
<android.graphics.drawable.RippleDrawable: android.graphics.Rect getDirtyBounds()>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.widget.RelativeLayout.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.ViewTreeObserver: boolean isAlive()>:<public>:<android.view.ViewTreeObserver>
<android.graphics.drawable.GradientDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.provider.Contacts.Intents: void <init>()>:<public>:<android.provider.Contacts.Intents>
<android.util.JsonToken: android.util.JsonToken valueOf(java.lang.String)>:<public static>:<android.util.JsonToken:java.lang.Enum>
<android.widget.SearchView: void onMeasure(int,int)>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.SlidingDrawer: void onFinishInflate()>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>:<public>:<android.webkit.WebViewClient>
<android.content.SyncRequest.Builder: void <init>()>:<public>:<android.content.SyncRequest.Builder>
<android.net.Uri: java.lang.String getEncodedPath()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.animation.LayoutTransition: boolean isRunning()>:<public>:<android.animation.LayoutTransition>
<android.graphics.Paint.Style: android.graphics.Paint.Style valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Style:java.lang.Enum>
<junit.framework.TestCase: java.lang.String toString()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public>:<android.content.ContentProviderClient>
<android.content.ClipDescription: java.lang.String getMimeType(int)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.view.View: void setBackgroundResource(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: int getShadowColor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.preference.PreferenceGroup: boolean isOnSameScreenAsChildren()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>:<public abstract>:<android.app.ActionBar>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri)>:<public>:<android.content.ClipData.Item>
<android.test.mock.MockPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.renderscript.Int4: void <init>()>:<public>:<android.renderscript.Int4>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.animation.AnimatorSet: void pause()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.widget.ProgressBar: void setMax(int)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.view.GestureDetector.OnGestureListener: boolean onDown(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.os.Bundle: void putFloatArray(java.lang.String,float[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.CheckedTextView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.webkit.WebResourceResponse: java.lang.String getReasonPhrase()>:<public>:<android.webkit.WebResourceResponse>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>:<public>:<android.webkit.ConsoleMessage>
<android.widget.TableLayout: void setShrinkAllColumns(boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts()>:<public>:<android.telecom.TelecomManager>
<android.provider.CalendarContract.Events: void <clinit>()>:<static>:<android.provider.CalendarContract.Events:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>:<public>:<android.gesture.GestureStroke>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.mtp.MtpObjectInfo: int getParent()>:<public final>:<android.mtp.MtpObjectInfo>
<android.util.ArrayMap: void putAll(android.util.ArrayMap)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.widget.ZoomButton: boolean onLongClick(android.view.View)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.content.pm.ProviderInfo: void <init>()>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.text.style.AlignmentSpan.Standard: int describeContents()>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.app.FragmentBreadCrumbs: void setMaxVisible(int)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>:<public>:<android.view.WindowInsets>
<android.app.FragmentManager: void popBackStack(int,int)>:<public abstract>:<android.app.FragmentManager>
<android.animation.LayoutTransition: boolean isChangingLayout()>:<public>:<android.animation.LayoutTransition>
<android.media.SoundPool.Builder: android.media.SoundPool build()>:<public>:<android.media.SoundPool.Builder>
<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.net.NetworkInfo.DetailedState: void <clinit>()>:<static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.speech.tts.UtteranceProgressListener: void <init>()>:<public>:<android.speech.tts.UtteranceProgressListener>
<android.media.audiofx.EnvironmentalReverb: void setParameterListener(android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.os.BatteryManager: boolean isCharging()>:<public>:<android.os.BatteryManager>
<android.media.MediaPlayer: void setDataSource(java.lang.String)>:<public>:<android.media.MediaPlayer>
<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getIdEntry()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.widget.SearchView: int getMaxWidth()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.view.Window: boolean isShortcutKey(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(long)>:<public static final>:<android.media.tv.TvContract>
<android.content.Context: android.content.ContentResolver getContentResolver()>:<public abstract>:<android.content.Context>
<android.media.MediaCodec.OnFrameRenderedListener: void onFrameRendered(android.media.MediaCodec,long,long)>:<public abstract>:<android.media.MediaCodec.OnFrameRenderedListener>
<android.view.inputmethod.ExtractedTextRequest: void <clinit>()>:<static>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.telephony.gsm.SmsMessage: java.lang.String getPseudoSubject()>:<public>:<android.telephony.gsm.SmsMessage>
<android.media.AudioManager: int getVibrateSetting(int)>:<public>:<android.media.AudioManager>
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity getLastActivity()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>:<protected>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat(int)>:<public final>:<android.media.MediaCodec>
<android.widget.ListPopupWindow: void setHorizontalOffset(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>:<public>:<android.widget.PopupWindow>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>:<public abstract>:<android.view.ViewParent>
<android.preference.PreferenceGroup: boolean removePreference(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.content.BroadcastReceiver: boolean isInitialStickyBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.GridView: int getVerticalSpacing()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()>:<public>:<android.widget.PopupMenu>
<android.view.WindowId: boolean isFocused()>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.view.accessibility.AccessibilityRecord: int getToIndex()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,java.lang.String[],java.lang.String)>:<public static>:<android.provider.ContactsContract.QuickContact>
<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ActionProvider: boolean hasSubMenu()>:<public>:<android.view.ActionProvider>
<android.telephony.ServiceState: void setRoaming(boolean)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.animation.Animator: void start()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.text.method.LinkMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.app.FragmentManager: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>:<public abstract>:<android.app.FragmentManager>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(java.lang.CharSequence[],android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.Class)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.system.StructStatVfs: void <init>(long,long,long,long,long,long,long,long,long,long,long)>:<public>:<android.system.StructStatVfs>
<android.view.ViewDebug.HierarchyTraceType: void <clinit>()>:<static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>:<public>:<android.nfc.NfcManager>
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()>:<public>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.media.session.PlaybackState: void <init>()>:<>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.opengl.GLES31Ext: void glBlendEquationSeparateiEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.telecom.TelecomManager: boolean isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)>:<public>:<android.telecom.TelecomManager>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Bitmap: int getRowBytes()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.CompoundButton: void <init>(android.content.Context)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.transition.PatternPathMotion: android.graphics.Path getPatternPath()>:<public>:<android.transition.PatternPathMotion:android.transition.PathMotion>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.InputQueue.Callback: void onInputQueueDestroyed(android.view.InputQueue)>:<public abstract>:<android.view.InputQueue.Callback>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder setReplyAction(android.app.PendingIntent,android.app.RemoteInput)>:<public>:<android.app.Notification.CarExtender.Builder>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(android.util.Property,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.SimpleAdapter: long getItemId(int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.widget.ProgressBar: void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.net.wifi.p2p.WifiP2pConfig: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.test.mock.MockContext: android.graphics.drawable.Drawable peekWallpaper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.util.Rfc822Tokenizer: int findTokenStart(java.lang.CharSequence,int)>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDataSetChanged()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.view.Window: void setStatusBarColor(int)>:<public abstract>:<android.view.Window>
<android.media.MediaRecorder.VideoEncoder: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.VideoEncoder>
<android.animation.Animator: android.animation.Animator setDuration(long)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.os.StrictMode.VmPolicy.Builder: void <init>(android.os.StrictMode.VmPolicy)>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>:<public static>:<android.graphics.Picture>
<android.text.Spannable: void removeSpan(java.lang.Object)>:<public abstract>:<android.text.Spannable:android.text.Spanned>
<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.widget.AbsListView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.webkit.WebView: void saveWebArchive(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.admin.DeviceAdminReceiver: void <init>()>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.renderscript.ScriptIntrinsicBLAS: void CTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.Drawable: void invalidateSelf()>:<public>:<android.graphics.drawable.Drawable>
<android.view.InputDevice: boolean isVirtual()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.media.MediaMetadata: int size()>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.widget.RemoteViewsService: android.widget.RemoteViewsService.RemoteViewsFactory onGetViewFactory(android.content.Intent)>:<public abstract>:<android.widget.RemoteViewsService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.nfc.tech.NfcV: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener,android.os.Looper)>:<public>:<android.media.RemoteController>
<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.provider.ContactsContract.StatusUpdates: void <clinit>()>:<static>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.content.pm.PackageManager.NameNotFoundException: void <init>(java.lang.String)>:<public>:<android.content.pm.PackageManager.NameNotFoundException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.widget.DatePicker: long getMaxDate()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.VectorDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range getBitrateRange()>:<public>:<android.media.MediaCodecInfo.AudioCapabilities>
<android.animation.ObjectAnimator: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.Notification.CarExtender.UnreadConversation: void <init>()>:<>:<android.app.Notification.CarExtender.UnreadConversation>
<android.widget.AbsListView: void <init>(android.content.Context)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.content.res.Resources.NotFoundException: void <init>(java.lang.String)>:<public>:<android.content.res.Resources.NotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.provider.CalendarContract.Events: void <init>()>:<>:<android.provider.CalendarContract.Events:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.view.View: void addTouchables(java.util.ArrayList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.accessibilityservice.AccessibilityService: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.Number)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.hardware.usb.UsbEndpoint: int getAttributes()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.text.method.LinkMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.telecom.Conference: java.lang.String toString()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.media.session.MediaSession.Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaSession.Callback>
<android.view.View: float getX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: int getWeekSeparatorLineColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.usage.UsageEvents: void <init>()>:<>:<android.app.usage.UsageEvents:android.os.Parcelable>
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.HorizontalScrollView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewOutlineProvider: void getOutline(android.view.View,android.graphics.Outline)>:<public abstract>:<android.view.ViewOutlineProvider>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode valueOf(java.lang.String)>:<public static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.media.AudioTrack: int getChannelConfiguration()>:<public>:<android.media.AudioTrack>
<android.graphics.drawable.ScaleDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.service.voice.VoiceInteractionSession: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.graphics.Path)>:<public static>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.graphics.pdf.PdfRenderer.Page: int getWidth()>:<public>:<android.graphics.pdf.PdfRenderer.Page:java.lang.AutoCloseable>
<android.content.IntentFilter: int countDataSchemes()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.bluetooth.le.ScanResult: long getTimestampNanos()>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.view.Window: void setDefaultWindowFormat(int)>:<protected>:<android.view.Window>
<junit.framework.Assert: void assertTrue(boolean)>:<public static>:<junit.framework.Assert>
<android.app.usage.UsageEvents.Event: android.content.res.Configuration getConfiguration()>:<public>:<android.app.usage.UsageEvents.Event>
<android.app.admin.DeviceAdminInfo: boolean isVisible()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.text.style.TextAppearanceSpan: int getSpanTypeId()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.Activity: void setResult(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)>:<public>:<android.media.MediaPlayer>
<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.graphics.Rect:android.os.Parcelable>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.mock.MockCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.AudioTrack: int getBufferSizeInFrames()>:<public>:<android.media.AudioTrack>
<android.content.res.Configuration: int diff(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.text.style.BackgroundColorSpan: int getBackgroundColor()>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>:<public>:<android.os.BaseBundle>
<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.test.mock.MockPackageManager: java.util.List getInstalledPackages(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.ScriptIntrinsicConvolve3x3 create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicConvolve3x3:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.os.Debug: void resetGlobalAllocSize()>:<public static>:<android.os.Debug>
<android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.os.Handler: boolean post(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.graphics.drawable.RippleDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.media.MediaMetadataEditor: void clear()>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>:<public>:<android.content.ContentProviderClient>
<android.media.JetPlayer: boolean triggerClip(int)>:<public>:<android.media.JetPlayer>
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.graphics.Movie: int duration()>:<public native>:<android.graphics.Movie>
<android.app.Notification.WearableExtender: boolean getHintAvoidBackgroundClipping()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.widget.TextView: int getTopPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.AsyncQueryHandler: void cancelOperation(int)>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.app.FragmentController: android.util.ArrayMap retainLoaderNonConfig()>:<public>:<android.app.FragmentController>
<android.app.Service: void onRebind(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.test.ActivityUnitTestCase: int getStartedActivityRequest()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.media.browse.MediaBrowser.MediaItem: android.media.MediaDescription getDescription()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<android.widget.AlphabetIndexer: void setCursor(android.database.Cursor)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.media.audiofx.Equalizer: int getCenterFreq(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.graphics.Outline: void set(android.graphics.Outline)>:<public>:<android.graphics.Outline>
<android.test.TouchUtils: void drag(android.test.ActivityInstrumentationTestCase,float,float,float,float,int)>:<public static>:<android.test.TouchUtils>
<android.view.ViewParent: void focusableViewAvailable(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long4)>:<public>:<android.renderscript.FieldPacker>
<android.media.MediaSync: void flush()>:<public>:<android.media.MediaSync>
<android.os.Parcel: void readIntArray(int[])>:<public final>:<android.os.Parcel>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES31: void glProgramUniform3f(int,int,float,float,float)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>:<public>:<android.view.Display>
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.CursorLoader: void setSelectionArgs(java.lang.String[])>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.view.View: boolean isLayoutRequested()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebSettings: void setMixedContentMode(int)>:<public abstract>:<android.webkit.WebSettings>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>:<public>:<android.view.animation.LayoutAnimationController>
<android.renderscript.FieldPacker: int subI32()>:<public>:<android.renderscript.FieldPacker>
<android.animation.AnimatorSet: android.animation.AnimatorSet.Builder play(android.animation.Animator)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel valueOf(java.lang.String)>:<public static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.test.ApplicationTestCase: android.app.Application getApplication()>:<public>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectFileUriExposure()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.app.AppOpsManager: int checkOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.content.RestrictionEntry: void setAllSelectedStrings(java.lang.String[])>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.os.Binder: void restoreCallingIdentity(long)>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener)>:<public>:<android.view.GestureDetector>
<android.telecom.Connection.VideoProvider: void changeCameraCapabilities(android.telecom.VideoProfile.CameraCapabilities)>:<public>:<android.telecom.Connection.VideoProvider>
<android.view.textservice.SentenceSuggestionsInfo: void <clinit>()>:<static>:<android.view.textservice.SentenceSuggestionsInfo:android.os.Parcelable>
<android.animation.Animator.AnimatorListener: void onAnimationRepeat(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.graphics.pdf.PdfDocument: void <init>()>:<public>:<android.graphics.pdf.PdfDocument>
<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>:<public>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onRelease(int)>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlAndSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)>:<public>:<android.view.textservice.SpellCheckerSession>
<android.graphics.RectF: void union(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.text.Layout: float getLineRight(int)>:<public>:<android.text.Layout>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.text.InputFilter.LengthFilter: int getMax()>:<public>:<android.text.InputFilter.LengthFilter:android.text.InputFilter>
<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.inputmethodservice.InputMethodService: int getInputMethodWindowRecommendedHeight()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.webkit.WebView.VisualStateCallback: void <init>()>:<public>:<android.webkit.WebView.VisualStateCallback>
<android.speech.RecognitionService.Callback: void beginningOfSpeech()>:<public>:<android.speech.RecognitionService.Callback>
<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.text.format.Time: boolean isEpoch(android.text.format.Time)>:<public static>:<android.text.format.Time>
<android.graphics.drawable.RotateDrawable: void setPivotXRelative(boolean)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>:<public static>:<android.webkit.MimeTypeMap>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.session.MediaSession: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.media.session.MediaSession>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long3)>:<public>:<android.renderscript.FieldPacker>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliableSocketPair()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(int)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.Allocation: android.renderscript.Allocation createFromString(android.renderscript.RenderScript,java.lang.String,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>:<public>:<android.os.Vibrator>
<android.os.DropBoxManager.Entry: java.io.InputStream getInputStream()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.net.wifi.WifiManager.WifiLock: void setWorkSource(android.os.WorkSource)>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>:<public>:<android.content.res.Resources>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Canvas: void drawColor(int)>:<public>:<android.graphics.Canvas>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.animation.ValueAnimator: void removeUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<dalvik.system.DexFile: java.lang.String getName()>:<public>:<dalvik.system.DexFile>
<android.renderscript.Element: android.renderscript.Element F16_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.test.ProviderTestCase2: android.test.IsolatedContext getMockContext()>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.view.View: int getVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.lang.String[],int)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<dalvik.system.BaseDexClassLoader: java.lang.Package getPackage(java.lang.String)>:<protected synchronized>:<dalvik.system.BaseDexClassLoader:java.lang.ClassLoader>
<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>:<public abstract>:<android.content.ServiceConnection>
<android.view.View: void setSelected(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.TabActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.content.ContextWrapper: void enforceCallingPermission(java.lang.String,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.TextView: void setTextLocale(java.util.Locale)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler)>:<public static>:<android.text.Html>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<dalvik.system.DexFile: java.util.Enumeration entries()>:<public>:<dalvik.system.DexFile>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.test.AndroidTestRunner: void setInstrumentation(android.app.Instrumentation)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.util.Base64OutputStream: void close()>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater.Factory)>:<public>:<android.view.LayoutInflater>
<android.widget.TwoLineListItem: android.widget.TextView getText1()>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.telecom.Connection.VideoProvider: void onSetDisplaySurface(android.view.Surface)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>:<public abstract>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockPackageManager: int checkSignatures(int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.mock.MockContext: android.graphics.drawable.Drawable getWallpaper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.admin.DeviceAdminReceiver: void onProfileProvisioningComplete(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.content.UriMatcher: void <init>(int)>:<public>:<android.content.UriMatcher>
<android.app.ListActivity: void <init>()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Script.FieldBase: android.renderscript.Element getElement()>:<public>:<android.renderscript.Script.FieldBase>
<android.graphics.drawable.Drawable: int[] getState()>:<public>:<android.graphics.drawable.Drawable>
<android.view.inputmethod.CursorAnchorInfo.Builder: void <init>()>:<public>:<android.view.inputmethod.CursorAnchorInfo.Builder>
<android.graphics.Paint: android.graphics.Paint.FontMetrics getFontMetrics()>:<public>:<android.graphics.Paint>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.Ringtone: void finalize()>:<protected>:<android.media.Ringtone>
<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceManager>
<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)>:<public>:<android.media.JetPlayer>
<android.media.AudioRecord: void stop()>:<public>:<android.media.AudioRecord>
<android.view.Gravity: void <init>()>:<public>:<android.view.Gravity>
<android.telecom.TelecomManager: boolean isInCall()>:<public>:<android.telecom.TelecomManager>
<android.app.Notification.InboxStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.InboxStyle:android.app.Notification.Style>
<android.view.textservice.SuggestionsInfo: int getSequence()>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.p2p.WifiP2pInfo: void <init>()>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.view.Window: void setContainer(android.view.Window)>:<public>:<android.view.Window>
<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.test.mock.MockPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.TimedText: void <init>()>:<>:<android.media.TimedText>
<android.app.job.JobParameters: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.job.JobParameters:android.os.Parcelable>
<android.content.Context: java.lang.String getPackageName()>:<public abstract>:<android.content.Context>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo: void <init>()>:<>:<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo:android.net.wifi.p2p.nsd.WifiP2pServiceInfo>
<android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.content.pm.PackageInstaller.SessionParams: void setInstallLocation(int)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.opengl.GLES10: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES10>
<android.bluetooth.BluetoothAdapter.LeScanCallback: void onLeScan(android.bluetooth.BluetoothDevice,int,byte[])>:<public abstract>:<android.bluetooth.BluetoothAdapter.LeScanCallback>
<android.media.MediaRecorder: void stop()>:<public native>:<android.media.MediaRecorder>
<android.media.tv.TvContract.Programs.Genres: java.lang.String[] decode(java.lang.String)>:<public static>:<android.media.tv.TvContract.Programs.Genres>
<android.net.sip.SipProfile: int getPort()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.view.View: void setLayerType(int,android.graphics.Paint)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBLAS: void SSYRK(int,int,float,android.renderscript.Allocation,float,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isConstantSize()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.telecom.Conference: java.util.List getConferenceableConnections()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.opengl.GLES20: void glDeleteShader(int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.service.voice.VoiceInteractionSession: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating createRating(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>:<public static transient>:<android.media.tv.TvContentRating>
<android.app.Activity: void onRestart()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<org.json.JSONStringer: org.json.JSONStringer value(java.lang.Object)>:<public>:<org.json.JSONStringer>
<android.opengl.GLES30: void glGetSynciv(long,int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public abstract>:<android.view.Window.Callback>
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.drm.ProcessedData: byte[] getData()>:<public>:<android.drm.ProcessedData>
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>:<public>:<android.telephony.SmsMessage>
<android.view.WindowAnimationFrameStats: void <init>()>:<>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.view.OrientationEventListener: void disable()>:<public>:<android.view.OrientationEventListener>
<android.view.View: int getWindowSystemUiVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockContext: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.media.MediaRouter.SimpleCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.telephony.SmsManager: android.os.Bundle getCarrierConfigValues()>:<public>:<android.telephony.SmsManager>
<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase.IconListener)>:<public abstract>:<android.webkit.WebIconDatabase>
<org.json.JSONArray: org.json.JSONArray put(int,double)>:<public>:<org.json.JSONArray>
<android.graphics.Camera: void <init>()>:<public>:<android.graphics.Camera>
<android.media.MediaRouter.RouteCategory: boolean isGroupable()>:<public>:<android.media.MediaRouter.RouteCategory>
<android.app.IntentService: void onHandleIntent(android.content.Intent)>:<protected abstract>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.print.PrinterCapabilitiesInfo: java.lang.String toString()>:<public>:<android.print.PrinterCapabilitiesInfo:android.os.Parcelable>
<android.app.VoiceInteractor.Prompt: java.lang.CharSequence getVoicePromptAt(int)>:<public>:<android.app.VoiceInteractor.Prompt:android.os.Parcelable>
<android.system.Os: java.net.InetAddress inet_pton(int,java.lang.String)>:<public static>:<android.system.Os>
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)>:<public static>:<android.text.format.DateUtils>
<android.nfc.Tag: void <init>()>:<>:<android.nfc.Tag:android.os.Parcelable>
<android.view.View.OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)>:<public abstract>:<android.view.View.OnAttachStateChangeListener>
<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.backup.BackupDataInputStream: int size()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.media.MediaCodecInfo.EncoderCapabilities: void <init>()>:<>:<android.media.MediaCodecInfo.EncoderCapabilities>
<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>:<public final>:<android.view.ViewTreeObserver>
<android.os.Parcel: void writeLongArray(long[])>:<public final>:<android.os.Parcel>
<android.telecom.StatusHints: java.lang.CharSequence getLabel()>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Binder: boolean isBinderAlive()>:<public>:<android.os.Binder:android.os.IBinder>
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.util.SparseIntArray: int indexOfValue(int)>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>:<public>:<android.widget.ImageView:android.view.View>
<android.database.CursorWrapper: long getLong(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord[])>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.content.Entity: android.content.ContentValues getEntityValues()>:<public>:<android.content.Entity>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>:<public>:<android.hardware.SensorManager>
<android.media.MediaSync: void finalize()>:<protected>:<android.media.MediaSync>
<android.service.voice.VoiceInteractionSession: void onRequestPickOption(android.service.voice.VoiceInteractionSession.PickOptionRequest)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.view.View: void setFadingEdgeLength(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.nfc.tech.NfcV: void connect()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.widget.DatePicker: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.Settings.Secure: android.net.Uri getUriFor(java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.transition.Transition: android.transition.Transition removeTarget(android.view.View)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.widget.TableLayout: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Matrix4f: void loadIdentity()>:<public>:<android.renderscript.Matrix4f>
<android.app.KeyguardManager: boolean isKeyguardLocked()>:<public>:<android.app.KeyguardManager>
<android.inputmethodservice.Keyboard: int getKeyHeight()>:<protected>:<android.inputmethodservice.Keyboard>
<android.view.WindowManager: void removeViewImmediate(android.view.View)>:<public abstract>:<android.view.WindowManager:android.view.ViewManager>
<android.graphics.Matrix: void setSinCos(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.graphics.Paint: int getOffsetForAdvance(java.lang.CharSequence,int,int,int,int,boolean,float)>:<public>:<android.graphics.Paint>
<android.media.MediaCodec: void setParameters(android.os.Bundle)>:<public final>:<android.media.MediaCodec>
<android.telephony.IccOpenLogicalChannelResponse: java.lang.String toString()>:<public>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.service.carrier.CarrierMessagingService: void onSendTextSms(java.lang.String,int,java.lang.String,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: void <init>()>:<public>:<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder>
<android.widget.HorizontalScrollView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.transition.TransitionSet: java.lang.Object clone()>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.widget.FilterQueryProvider: android.database.Cursor runQuery(java.lang.CharSequence)>:<public abstract>:<android.widget.FilterQueryProvider>
<android.renderscript.Element: android.renderscript.Element I8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>:<public>:<android.content.res.Resources>
<android.app.ExpandableListActivity: void onGroupExpand(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.text.style.SuggestionSpan: void setFlags(int)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.pm.PackageManager: void verifyPendingInstall(int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.SurfaceView:android.view.View>
<android.util.ArraySet: int hashCode()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.database.AbstractCursor: void checkPosition()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.provider.Contacts.People.Phones: void <init>()>:<>:<android.provider.Contacts.People.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.system.Os: int getpid()>:<public static>:<android.system.Os>
<android.content.pm.PackageInstaller.SessionParams: void setReferrerUri(android.net.Uri)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.Script.KernelID getKernelID()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Path: void addPath(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.graphics.Outline: void setRect(int,int,int,int)>:<public>:<android.graphics.Outline>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.location.Location: void <init>(java.lang.String)>:<public>:<android.location.Location:android.os.Parcelable>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.Paint: void setFakeBoldText(boolean)>:<public native>:<android.graphics.Paint>
<android.animation.LayoutTransition.TransitionListener: void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public abstract>:<android.animation.LayoutTransition.TransitionListener>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.content.pm.ConfigurationInfo: void <clinit>()>:<static>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.renderscript.FieldPacker: byte subI8()>:<public>:<android.renderscript.FieldPacker>
<android.hardware.camera2.params.Face: android.graphics.Point getRightEyePosition()>:<public>:<android.hardware.camera2.params.Face>
<android.app.Fragment: java.lang.String toString()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.text.SpannableString: int hashCode()>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.widget.CalendarView: int getUnfocusedMonthDateColor()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.net.wifi.WifiManager.MulticastLock: void <init>(android.net.wifi.WifiManager)>:<>:<android.net.wifi.WifiManager.MulticastLock>
<android.widget.BaseExpandableListAdapter: boolean isEmpty()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.FragmentController>
<android.view.View: void requestApplyInsets()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public abstract>:<android.text.InputFilter>
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>:<public static>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.app.job.JobInfo: java.lang.String toString()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.content.ContentQueryMap: void finalize()>:<protected>:<android.content.ContentQueryMap:java.util.Observable>
<android.net.rtp.AudioStream: int getDtmfType()>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>:<protected abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.opengl.GLDebugHelper: void <init>()>:<public>:<android.opengl.GLDebugHelper>
<android.view.Window.Callback: void onPanelClosed(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.util.SparseLongArray: void <init>(int)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>:<public abstract>:<android.view.ViewParent>
<android.animation.BidirectionalTypeConverter: android.animation.BidirectionalTypeConverter invert()>:<public>:<android.animation.BidirectionalTypeConverter:android.animation.TypeConverter>
<android.telecom.Call: void mergeConference()>:<public>:<android.telecom.Call>
<android.telephony.CellInfoLte: void <init>()>:<>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.view.ViewConfiguration: int getJumpTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.app.Activity: android.content.ComponentName getCallingActivity()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.os.Message: boolean isAsynchronous()>:<public>:<android.os.Message:android.os.Parcelable>
<android.test.mock.MockPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.util.MutableDouble: void <init>(double)>:<public>:<android.util.MutableDouble>
<android.media.audiofx.Equalizer: short getCurrentPreset()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.app.Activity: void dismissDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.SimpleAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.content.Context: void <init>()>:<public>:<android.content.Context>
<android.net.Proxy: int getPort(android.content.Context)>:<public static final>:<android.net.Proxy>
<android.opengl.EGLSurface: void <init>()>:<>:<android.opengl.EGLSurface:android.opengl.EGLObjectHandle>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.content.Intent: int getFlags()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES31Ext.DebugProcKHR: void onMessage(int,int,int,int,java.lang.String)>:<public abstract>:<android.opengl.GLES31Ext.DebugProcKHR>
<android.app.NotificationManager: void <init>()>:<>:<android.app.NotificationManager>
<android.util.JsonWriter: void setLenient(boolean)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.view.View: void setRotation(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.JsPromptResult: void confirm(java.lang.String)>:<public>:<android.webkit.JsPromptResult:android.webkit.JsResult>
<android.widget.RemoteViews: void setAccessibilityTraversalBefore(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.Switch: void setThumbTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.ContentUris: long parseId(android.net.Uri)>:<public static>:<android.content.ContentUris>
<android.database.CharArrayBuffer: void <init>(int)>:<public>:<android.database.CharArrayBuffer>
<android.service.voice.VoiceInteractionSession: void setKeepAwake(boolean)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.database.DatabaseUtils.InsertHelper: void bind(int,boolean)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.test.mock.MockDialogInterface: void <init>()>:<public>:<android.test.mock.MockDialogInterface:android.content.DialogInterface>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.media.midi.MidiReceiver: void <init>()>:<public>:<android.media.midi.MidiReceiver>
<android.net.Uri.Builder: android.net.Uri.Builder fragment(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.util.JsonReader: void beginArray()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void scrollToBottom(android.test.ActivityInstrumentationTestCase,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter build()>:<public>:<android.text.BidiFormatter.Builder>
<android.graphics.drawable.shapes.Shape: float getWidth()>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.graphics.Path: void offset(float,float)>:<public>:<android.graphics.Path>
<android.webkit.WebView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>:<public>:<org.json.JSONArray>
<android.appwidget.AppWidgetProviderInfo: java.lang.String loadLabel(android.content.pm.PackageManager)>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(android.content.Intent)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.app.Fragment: boolean isRemoving()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.View.MeasureSpec: java.lang.String toString(int)>:<public static>:<android.view.View.MeasureSpec>
<android.telephony.SignalStrength: int describeContents()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.tv.TvView.TvInputCallback: void <init>()>:<public>:<android.media.tv.TvView.TvInputCallback>
<android.provider.ContactsContract.CommonDataKinds.Email: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.app.Dialog: void onStart()>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.net.http.HttpResponseCache: long maxSize()>:<public>:<android.net.http.HttpResponseCache:java.net.ResponseCache,java.io.Closeable>
<android.webkit.WebChromeClient: void <init>()>:<public>:<android.webkit.WebChromeClient>
<android.widget.RemoteViewsService.RemoteViewsFactory: long getItemId(int)>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.content.RestrictionEntry: void <init>(android.os.Parcel)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.util.EventLog: int writeEvent(int,java.lang.String)>:<public static native>:<android.util.EventLog>
<android.content.BroadcastReceiver.PendingResult: void finish()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.os.Parcel: void unmarshall(byte[],int,int)>:<public final>:<android.os.Parcel>
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.app.VoiceInteractor.Request: void <init>()>:<>:<android.app.VoiceInteractor.Request>
<android.app.Instrumentation.ActivityResult: android.content.Intent getResultData()>:<public>:<android.app.Instrumentation.ActivityResult>
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ClickableSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.RemoteViews: void <init>(android.os.Parcel)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public final>:<android.content.ContentResolver>
<android.graphics.Matrix: void mapVectors(float[],float[])>:<public>:<android.graphics.Matrix>
<android.content.ContextWrapper: boolean isRestricted()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.AutoCompleteTextView: void setOnDismissListener(android.widget.AutoCompleteTextView.OnDismissListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.BoringLayout.Metrics: void <init>()>:<public>:<android.text.BoringLayout.Metrics:android.graphics.Paint.FontMetricsInt>
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumerator(long)>:<public>:<android.text.style.TtsSpan.MeasureBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.view.LayoutInflater.Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.view.LayoutInflater.Factory2:android.view.LayoutInflater.Factory>
<android.media.MediaMuxer: void setOrientationHint(int)>:<public>:<android.media.MediaMuxer>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>:<public static>:<android.text.Html>
<android.system.ErrnoException: void <init>(java.lang.String,int)>:<public>:<android.system.ErrnoException:java.lang.Exception,java.lang.Throwable>
<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.widget.ExpandableListView: void onRtlPropertiesChanged(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioManager: void setStreamMute(int,boolean)>:<public>:<android.media.AudioManager>
<android.widget.ImageView: void setBaselineAlignBottom(boolean)>:<public>:<android.widget.ImageView:android.view.View>
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.graphics.pdf.PdfDocument: void writeTo(java.io.OutputStream)>:<public>:<android.graphics.pdf.PdfDocument>
<android.text.AndroidCharacter: void getEastAsianWidths(char[],int,int,byte[])>:<public static native>:<android.text.AndroidCharacter>
<android.app.ActivityOptions: android.app.ActivityOptions makeScaleUpAnimation(android.view.View,int,int,int,int)>:<public static>:<android.app.ActivityOptions>
<android.os.Build.VERSION: void <clinit>()>:<static>:<android.os.Build.VERSION>
<android.app.admin.DevicePolicyManager: boolean setStatusBarDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.telecom.InCallService.VideoCall: void unregisterCallback(android.telecom.InCallService.VideoCall.Callback)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.transition.AutoTransition: void <init>()>:<public>:<android.transition.AutoTransition:android.transition.TransitionSet,android.transition.Transition>
<android.graphics.Canvas: void scale(float,float,float,float)>:<public final>:<android.graphics.Canvas>
<android.widget.RatingBar: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES30: void glGenSamplers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.test.InstrumentationTestSuite: void <init>(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.media.AudioDeviceInfo: int[] getSampleRates()>:<public>:<android.media.AudioDeviceInfo>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar.Tab>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.drm.DrmRights: java.lang.String getMimeType()>:<public>:<android.drm.DrmRights>
<android.text.Editable: void setFilters(android.text.InputFilter[])>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.view.inputmethod.CorrectionInfo: void <clinit>()>:<static>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyA(int,byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.media.AudioRecord: android.media.AudioDeviceInfo getPreferredDevice()>:<public>:<android.media.AudioRecord>
<android.net.wifi.p2p.WifiP2pInfo: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult.Key)>:<public>:<android.hardware.camera2.CaptureResult:android.hardware.camera2.CameraMetadata>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String capabilityToString(int)>:<public static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.view.View: boolean canScrollHorizontally(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.preference.TwoStatePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.RenderScript: void setMessageHandler(android.renderscript.RenderScript.RSMessageHandler)>:<public>:<android.renderscript.RenderScript>
<android.widget.Toolbar: void setLogo(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.view.View: void setWillNotCacheDrawing(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.util.JsonReader: void beginObject()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.provider.MediaStore.Audio: void <init>()>:<public>:<android.provider.MediaStore.Audio>
<android.widget.Toolbar: void setPopupTheme(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.media.MediaCodecInfo.CodecCapabilities: java.lang.String getMimeType()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.system.StructStatVfs: java.lang.String toString()>:<public>:<android.system.StructStatVfs>
<org.xmlpull.v1.XmlPullParser: int getDepth()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.xmlpull.v1.XmlPullParser: int nextToken()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.telephony.CellSignalStrengthGsm: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.CellSignalStrengthGsm:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.widget.TextView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.ThumbnailUtils: void <init>()>:<public>:<android.media.ThumbnailUtils>
<android.nfc.tech.MifareClassic: void setTimeout(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.nfc.NdefMessage: int hashCode()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.gesture.GestureOverlayView: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setErrorMessage(java.lang.CharSequence)>:<public>:<android.media.session.PlaybackState.Builder>
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.widget.CursorTreeAdapter: java.lang.Object getGroup(int)>:<public volatile>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.telephony.gsm.SmsMessage: java.lang.String getOriginatingAddress()>:<public>:<android.telephony.gsm.SmsMessage>
<android.transition.TransitionPropagation: void captureValues(android.transition.TransitionValues)>:<public abstract>:<android.transition.TransitionPropagation>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.util.Rational: long longValue()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.view.View: android.content.Context getContext()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Criteria: void setSpeedAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.os.RecoverySystem: void rebootWipeCache(android.content.Context)>:<public static>:<android.os.RecoverySystem>
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.provider.MediaStore.Audio.Playlists.Members: boolean moveItem(android.content.ContentResolver,long,int,int)>:<public static final>:<android.provider.MediaStore.Audio.Playlists.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener,android.os.Handler)>:<public>:<android.graphics.SurfaceTexture>
<android.widget.Toolbar: void setOnMenuItemClickListener(android.widget.Toolbar.OnMenuItemClickListener)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.net.ConnectivityManager.NetworkCallback: void onAvailable(android.net.Network)>:<public>:<android.net.ConnectivityManager.NetworkCallback>
<android.bluetooth.le.ScanFilter.Builder: void <init>()>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.telephony.ServiceState: void <init>()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.graphics.drawable.PictureDrawable: int getOpacity()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.view.Menu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>:<public abstract>:<android.view.Menu>
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: android.content.SharedPreferences.Editor getEditor()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.widget.Adapter: int getCount()>:<public abstract>:<android.widget.Adapter>
<android.view.MotionEvent: void <init>()>:<>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.mtp.MtpDevice: long getStorageId(int)>:<public>:<android.mtp.MtpDevice>
<android.view.InputEvent: int getSource()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiManager>
<android.app.LauncherActivity: void setTitle(java.lang.CharSequence)>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>:<public native>:<android.media.MediaRecorder>
<android.opengl.GLES31: void glGenProgramPipelines(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.tv.TvView: void timeShiftResume()>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.net.http.SslCertificate.DName: java.lang.String getOName()>:<public>:<android.net.http.SslCertificate.DName>
<android.database.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)>:<public>:<android.database.CrossProcessCursorWrapper:android.database.CursorWrapper,android.database.CrossProcessCursor>
<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence[])>:<public static transient>:<android.text.TextUtils>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt valueOf(java.lang.String)>:<public static>:<android.text.TextUtils.TruncateAt:java.lang.Enum>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.widget.Scroller: int getStartX()>:<public final>:<android.widget.Scroller>
<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.media.tv.TvView: void selectTrack(int,java.lang.String)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo focusSearch(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.ActionBar: int getNavigationMode()>:<public abstract>:<android.app.ActionBar>
<android.provider.Telephony.Threads: long getOrCreateThreadId(android.content.Context,java.util.Set)>:<public static>:<android.provider.Telephony.Threads:android.provider.Telephony.ThreadsColumns>
<android.view.View: boolean onFilterTouchEventForSecurity(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.NeighboringCellInfo: void <init>(int,int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AdapterViewAnimator: int getBaseline()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.Context: void startActivities(android.content.Intent[])>:<public abstract>:<android.content.Context>
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.RectF: void union(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.inputmethodservice.Keyboard.Key: int squaredDistanceFrom(int,int)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.widget.RadioGroup: void <init>(android.content.Context)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context,boolean)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.telephony.CellInfo: java.lang.String toString()>:<public>:<android.telephony.CellInfo:android.os.Parcelable>
<org.json.JSONObject: java.util.Iterator keys()>:<public>:<org.json.JSONObject>
<android.app.ActivityManager.RecentTaskInfo: void <init>()>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.hardware.Camera.CameraInfo: void <init>()>:<public>:<android.hardware.Camera.CameraInfo>
<android.security.KeyChainException: void <init>(java.lang.String)>:<public>:<android.security.KeyChainException:java.lang.Exception,java.lang.Throwable>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder setLimit(int)>:<public>:<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>:<public final>:<android.os.Handler>
<android.bluetooth.le.ScanFilter: boolean equals(java.lang.Object)>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.os.MessageQueue: void <init>()>:<>:<android.os.MessageQueue>
<dalvik.'annotation'.TestTargetClass: java.lang.Class value()>:<public abstract>:<dalvik.annotation.TestTargetClass:java.lang.annotation.Annotation>
<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.ViewManager>
<android.media.RingtoneManager: boolean isDefault(android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.widget.GridView: void setColumnWidth(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.ComponentCallbacks2: void onTrimMemory(int)>:<public abstract>:<android.content.ComponentCallbacks2:android.content.ComponentCallbacks>
<android.test.mock.MockContext: void sendBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.View: void onHoverChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.midi.MidiReceiver: void <init>(int)>:<public>:<android.media.midi.MidiReceiver>
<android.view.View: float getCameraDistance()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void onScrollChanged(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.DocumentsContract: android.net.Uri buildRootsUri(java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.net.NetworkInfo: boolean isRoaming()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setDismissable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.telephony.TelephonyManager: int getSimState()>:<public>:<android.telephony.TelephonyManager>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.TextView: void setLineSpacing(float,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>:<public>:<android.text.Layout>
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.R.interpolator: void <init>()>:<public>:<android.R.interpolator>
<junit.runner.BaseTestRunner: java.lang.String getPreference(java.lang.String)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.content.ActivityNotFoundException: void <init>(java.lang.String)>:<public>:<android.content.ActivityNotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.provider.DocumentsProvider: void deleteDocument(java.lang.String)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.system.Os: boolean access(java.lang.String,int)>:<public static>:<android.system.Os>
<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector createAlwaysOnHotwordDetector(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector.Callback)>:<public final>:<android.service.voice.VoiceInteractionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.SharedElementCallback: void <init>()>:<public>:<android.app.SharedElementCallback>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.View: void setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.transition.SidePropagation: void setPropagationSpeed(float)>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.graphics.Movie: void finalize()>:<protected>:<android.graphics.Movie>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,long[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)>:<public>:<android.sax.Element>
<android.widget.SearchView: int getInputType()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.content.ClipData: int getItemCount()>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.telecom.Call.Details: int getCallProperties()>:<public>:<android.telecom.Call.Details>
<android.renderscript.FieldPacker: android.renderscript.Float4 subFloat4()>:<public>:<android.renderscript.FieldPacker>
<android.content.res.AssetFileDescriptor: long getLength()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.content.pm.PackageInstaller: void <init>()>:<>:<android.content.pm.PackageInstaller>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public abstract>:<android.content.Context>
<android.print.PrintAttributes.Margins: int getTopMils()>:<public>:<android.print.PrintAttributes.Margins>
<android.util.JsonReader: boolean nextBoolean()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.widget.GridLayout: void setOrientation(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.content.Context: java.io.File getExternalCacheDir()>:<public abstract>:<android.content.Context>
<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.media.tv.TvView: void onDetachedFromWindow()>:<protected>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>:<public>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.mtp.MtpObjectInfo: int getFormat()>:<public final>:<android.mtp.MtpObjectInfo>
<android.telephony.ServiceState: void <init>(android.os.Parcel)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.media.TimedText: java.lang.String getText()>:<public>:<android.media.TimedText>
<android.util.SparseLongArray: void removeAt(int)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.widget.PopupWindow: void <init>(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.security.keystore.KeyProtection: java.lang.String[] getSignaturePaddings()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.drawable.AnimatedVectorDrawable: void start()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.test.mock.MockCursor: double getDouble(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.bluetooth.BluetoothServerSocket: void <init>()>:<>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.text.method.LinkMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.text.method.MetaKeyKeyListener: int getMetaState(long)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.app.assist.AssistStructure.WindowNode: int getWidth()>:<public>:<android.app.assist.AssistStructure.WindowNode>
<android.app.UiAutomation: java.util.List getWindows()>:<public>:<android.app.UiAutomation>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.transition.Transition: android.transition.Transition excludeTarget(int,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.text.style.TtsSpan.TextBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.TextBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.AudioTrack: int attachAuxEffect(int)>:<public>:<android.media.AudioTrack>
<android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>:<public>:<android.hardware.fingerprint.FingerprintManager>
<android.widget.TimePicker: void setEnabled(boolean)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)>:<public static>:<android.text.TextUtils>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setIgnoreSettings(boolean)>:<public>:<android.content.SyncRequest.Builder>
<android.widget.ToggleButton: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.view.FrameStats: long getEndTimeNano()>:<public final>:<android.view.FrameStats>
<android.media.session.PlaybackState: float getPlaybackSpeed()>:<public>:<android.media.session.PlaybackState:android.os.Parcelable>
<android.print.PageRange: boolean equals(java.lang.Object)>:<public>:<android.print.PageRange:android.os.Parcelable>
<android.view.WindowManager.LayoutParams: void setTitle(java.lang.CharSequence)>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.opengl.EGLObjectHandle: void <init>(int)>:<protected>:<android.opengl.EGLObjectHandle>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>:<public>:<android.widget.Scroller>
<android.content.Intent: char getCharExtra(java.lang.String,char)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.Gallery: void setGravity(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewGroup: boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.bluetooth.BluetoothGattServer: boolean notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.os.IBinder: java.lang.String getInterfaceDescriptor()>:<public abstract>:<android.os.IBinder>
<android.media.MediaRouter.RouteInfo: void requestSetVolume(int)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintAvoidBackgroundClipping(boolean)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.transition.TransitionValues: void <init>()>:<public>:<android.transition.TransitionValues>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: void <init>(android.content.Context)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: java.lang.String actionToString(int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES31: void glBindProgramPipeline(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.app.VoiceInteractor.PickOptionRequest: void <init>(android.app.VoiceInteractor.Prompt,android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>:<public>:<android.app.VoiceInteractor.PickOptionRequest:android.app.VoiceInteractor.Request>
<android.opengl.GLES30: void glVertexAttribI4iv(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.AudioRecord: void <init>(int,int,int,int,int)>:<public>:<android.media.AudioRecord>
<android.animation.ObjectAnimator: java.lang.String toString()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.app.Dialog: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.media.tv.TvContract.Channels.Logo: void <init>()>:<>:<android.media.tv.TvContract.Channels.Logo>
<android.widget.DatePicker: boolean isEnabled()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.opengl.GLES31: void glVertexAttribBinding(int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaTimestamp: long getAnchorMediaTimeUs()>:<public>:<android.media.MediaTimestamp>
<android.util.AttributeSet: int getAttributeListValue(int,java.lang.String[],int)>:<public abstract>:<android.util.AttributeSet>
<android.graphics.drawable.RotateDrawable: boolean isPivotXRelative()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.telephony.gsm.GsmCellLocation: int getCid()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall.Listener,int)>:<public>:<android.net.sip.SipManager>
<android.hardware.GeomagneticField: float getX()>:<public>:<android.hardware.GeomagneticField>
<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.method.PasswordTransformationMethod: void afterTextChanged(android.text.Editable)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.os.Debug.MemoryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.telecom.VideoProfile.CameraCapabilities: void <clinit>()>:<static>:<android.telecom.VideoProfile.CameraCapabilities:android.os.Parcelable>
<android.graphics.Outline: boolean canClip()>:<public>:<android.graphics.Outline>
<android.view.Window: void setReturnTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.view.ViewConfiguration: int getScaledTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.webkit.WebView: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>:<public abstract>:<android.os.IBinder>
<android.system.OsConstants: void <init>()>:<>:<android.system.OsConstants>
<android.printservice.PrintJob: boolean isQueued()>:<public>:<android.printservice.PrintJob>
<android.webkit.WebMessagePort: void close()>:<public abstract>:<android.webkit.WebMessagePort>
<android.content.pm.FeatureInfo: void <init>()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.widget.CheckedTextView: void drawableHotspotChanged(float,float)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.transition.ChangeTransform: void setReparent(boolean)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.text.method.DateKeyListener: void <clinit>()>:<static>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.database.MatrixCursor: double getDouble(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.Toolbar.LayoutParams: void <init>(int,int)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.net.wifi.WifiManager.MulticastLock: void release()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.media.AudioManager: int getMode()>:<public>:<android.media.AudioManager>
<android.test.MoreAsserts: void assertContentsInAnyOrder(java.lang.String,java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>:<public static>:<android.database.DatabaseUtils>
<android.webkit.GeolocationPermissions: void clearAll()>:<public>:<android.webkit.GeolocationPermissions>
<android.opengl.GLES31: void glBindVertexBuffer(int,int,long,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.View: void setForeground(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>:<public final>:<android.media.MediaFormat>
<android.graphics.drawable.AnimatedVectorDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.media.AudioTrack: void play()>:<public>:<android.media.AudioTrack>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.printservice.PrintService: void onDisconnected()>:<protected>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.view.MotionEvent: float getHistoricalToolMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.sip.SipSession.Listener: void onCalling(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.Fragment: android.transition.Transition getReturnTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.service.notification.StatusBarNotification: void <clinit>()>:<static>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.content.ClipDescription: java.lang.CharSequence getLabel()>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.app.Application: void unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.content.pm.ApplicationInfo: void <init>()>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.webkit.WebSettings: int getMinimumFontSize()>:<public abstract>:<android.webkit.WebSettings>
<android.widget.ImageView: int[] onCreateDrawableState(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.app.ActivityManager.RunningAppProcessInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.os.PowerManager: boolean isScreenOn()>:<public>:<android.os.PowerManager>
<android.view.ActionMode: android.view.Menu getMenu()>:<public abstract>:<android.view.ActionMode>
<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>:<public static>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.test.mock.MockContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.media.AudioTrack: int setStereoVolume(float,float)>:<public>:<android.media.AudioTrack>
<android.media.AudioTrack: int getAudioSessionId()>:<public>:<android.media.AudioTrack>
<android.media.MediaMetadata: android.media.Rating getRating(java.lang.String)>:<public>:<android.media.MediaMetadata:android.os.Parcelable>
<android.widget.DialerFilter: boolean isQwertyKeyboard()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.app.ActivityOptions: void <init>()>:<>:<android.app.ActivityOptions>
<android.app.ProgressDialog: void <init>(android.content.Context)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.renderscript.RenderScript: android.content.Context getApplicationContext()>:<public final>:<android.renderscript.RenderScript>
<android.accessibilityservice.AccessibilityService: void onInterrupt()>:<public abstract>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.CursorTreeAdapter: java.lang.Object getChild(int,int)>:<public volatile>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.ViewFlipper: void onWindowVisibilityChanged(int)>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onDetected(android.service.voice.AlwaysOnHotwordDetector.EventPayload)>:<public abstract>:<android.service.voice.AlwaysOnHotwordDetector.Callback>
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.media.MediaExtractor: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>:<public final>:<android.media.MediaExtractor>
<android.webkit.WebSettings: boolean enableSmoothTransition()>:<public abstract>:<android.webkit.WebSettings>
<android.app.usage.NetworkStats: boolean hasNextBucket()>:<public>:<android.app.usage.NetworkStats:java.lang.AutoCloseable>
<android.text.style.URLSpan: java.lang.String getURL()>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.tv.TvTrackInfo: float getVideoFrameRate()>:<public final>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>:<public static>:<android.accounts.AccountManager>
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.telephony.CellSignalStrengthCdma: void <init>()>:<>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)>:<public>:<android.app.TaskStackBuilder>
<android.telecom.RemoteConnection.Callback: void onConnectionCapabilitiesChanged(android.telecom.RemoteConnection,int)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfig()>:<public>:<android.telephony.CarrierConfigManager>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedClosableObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.telecom.Conference: void setConferenceableConnections(java.util.List)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.preference.PreferenceActivity: boolean hasHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectNetwork()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.view.InputEvent: void <init>()>:<>:<android.view.InputEvent:android.os.Parcelable>
<android.media.MediaFormat: void <init>()>:<public>:<android.media.MediaFormat>
<android.media.audiofx.AcousticEchoCanceler: void <init>()>:<>:<android.media.audiofx.AcousticEchoCanceler:android.media.audiofx.AudioEffect>
<android.speech.RecognizerIntent: void <init>()>:<>:<android.speech.RecognizerIntent>
<android.hardware.camera2.params.BlackLevelPattern: void <init>()>:<>:<android.hardware.camera2.params.BlackLevelPattern>
<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>:<public static>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.Layout: android.text.TextPaint getPaint()>:<public final>:<android.text.Layout>
<android.media.audiofx.PresetReverb: void <init>(int,int)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionInfo)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.media.audiofx.AudioEffect: void <clinit>()>:<static>:<android.media.audiofx.AudioEffect>
<android.widget.DatePicker: boolean getCalendarViewShown()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.service.notification.NotificationListenerService: void onInterruptionFilterChanged(int)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.ViewGroup: void addView(android.view.View,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.admin.DevicePolicyManager: boolean setKeyguardDisabled(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.service.media.MediaBrowserService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.telephony.IccOpenLogicalChannelResponse: int getStatus()>:<public>:<android.telephony.IccOpenLogicalChannelResponse:android.os.Parcelable>
<android.widget.ZoomControls: void setZoomSpeed(long)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ActionMenuView.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewStructure: java.lang.CharSequence getText()>:<public abstract>:<android.view.ViewStructure>
<android.webkit.WebSettings: boolean getSavePassword()>:<public abstract>:<android.webkit.WebSettings>
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.media.browse.MediaBrowser: void <init>(android.content.Context,android.content.ComponentName,android.media.browse.MediaBrowser.ConnectionCallback,android.os.Bundle)>:<public>:<android.media.browse.MediaBrowser>
<android.media.RemoteControlClient.MetadataEditor: void apply()>:<public synchronized>:<android.media.RemoteControlClient.MetadataEditor:android.media.MediaMetadataEditor>
<android.hardware.Camera.Parameters: void setPreviewFrameRate(int)>:<public>:<android.hardware.Camera.Parameters>
<android.preference.ListPreference: void setValueIndex(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.MenuItem: android.view.MenuItem setTitle(int)>:<public abstract>:<android.view.MenuItem>
<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.AsyncPlayer: void stop()>:<public>:<android.media.AsyncPlayer>
<android.media.midi.MidiDeviceInfo: android.media.midi.MidiDeviceInfo.PortInfo[] getPorts()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.nfc.cardemulation.CardEmulation: boolean categoryAllowsForegroundPreference(java.lang.String)>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.preference.PreferenceActivity: void setListFooter(android.view.View)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.AdapterView: int getPositionForView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaCodec: android.media.MediaCodecInfo getCodecInfo()>:<public>:<android.media.MediaCodec>
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.printservice.PrintService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.MoreAsserts: void assertEmpty(java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.view.ViewGroup: void removeViews(int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.provider.MediaStore.Audio.Playlists.Members: void <init>()>:<public>:<android.provider.MediaStore.Audio.Playlists.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.view.ViewGroup.MarginLayoutParams: int getMarginEnd()>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.inputmethodservice.InputMethodService: void onInitializeInterface()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.telecom.RemoteConnection.VideoProvider: void registerCallback(android.telecom.RemoteConnection.VideoProvider.Callback)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.animation.Animator: void addListener(android.animation.Animator.AnimatorListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLES10: void glPointSizex(int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES31: void glUseProgramStages(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.Matrix: boolean equals(java.lang.Object)>:<public>:<android.graphics.Matrix>
<android.nfc.tech.NfcF: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.util.SparseBooleanArray: void delete(int)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.TrafficStats: long getUidTxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.app.Dialog: void hide()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.content.RestrictionEntry: int describeContents()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.text.style.SuggestionSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.animation.PointFEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.content.res.ColorStateList: int describeContents()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.net.wifi.WifiManager: boolean isScanAlwaysAvailable()>:<public>:<android.net.wifi.WifiManager>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String,java.lang.String,int)>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)>:<public static>:<android.opengl.GLUtils>
<android.speech.tts.SynthesisCallback: int done()>:<public abstract>:<android.speech.tts.SynthesisCallback>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.media.MediaSync: android.view.Surface createInputSurface()>:<public final native>:<android.media.MediaSync>
<android.view.View: android.graphics.Bitmap getDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.ConsoleMessage.MessageLevel: void <clinit>()>:<static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.view.OrientationEventListener: void enable()>:<public>:<android.view.OrientationEventListener>
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.assist.AssistStructure.ViewNode: float getAlpha()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.hardware.camera2.CaptureResult.Key: java.lang.String toString()>:<public>:<android.hardware.camera2.CaptureResult.Key>
<android.widget.AdapterView.AdapterContextMenuInfo: void <init>(android.view.View,int,long)>:<public>:<android.widget.AdapterView.AdapterContextMenuInfo:android.view.ContextMenu.ContextMenuInfo>
<android.service.voice.VoiceInteractionSession: void onTaskStarted(android.content.Intent,int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.media.MediaCodecList: void <init>(int)>:<public>:<android.media.MediaCodecList>
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.content.AbstractThreadedSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>:<public abstract>:<android.content.AbstractThreadedSyncAdapter>
<android.opengl.GLES30: void glRenderbufferStorageMultisample(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.IntentFilter: boolean matchAction(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.InputDevice: java.lang.String getName()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.util.MonthDisplayHelper: void nextMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.location.Address: void clearLongitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.os.Debug: void printLoadedClasses(int)>:<public static>:<android.os.Debug>
<android.widget.ScrollView: void smoothScrollTo(int,int)>:<public final>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.assist.AssistStructure.ViewNode: boolean isClickable()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.provider.MediaStore.Audio: java.lang.String keyFor(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio>
<android.content.SyncStats: void <init>(android.os.Parcel)>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.provider.Contacts.Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<android.view.ActionProvider: boolean isVisible()>:<public>:<android.view.ActionProvider>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.TextView: void setEnabled(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.String)>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.Activity: android.app.Application getApplication()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.MediaDrm: java.util.HashMap queryKeyStatus(byte[])>:<public native>:<android.media.MediaDrm>
<android.graphics.NinePatch: android.graphics.Paint getPaint()>:<public>:<android.graphics.NinePatch>
<android.media.MediaRecorder.OnInfoListener: void onInfo(android.media.MediaRecorder,int,int)>:<public abstract>:<android.media.MediaRecorder.OnInfoListener>
<android.content.RestrictionEntry: void setRestrictions(android.content.RestrictionEntry[])>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.graphics.drawable.ColorDrawable: void setColor(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int2)>:<public>:<android.renderscript.FieldPacker>
<android.content.Context: int getWallpaperDesiredMinimumWidth()>:<public abstract>:<android.content.Context>
<android.app.ProgressDialog: boolean isIndeterminate()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.util.SparseBooleanArray: java.lang.Object clone()>:<public volatile>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.text.style.TtsSpan.CardinalBuilder: android.text.style.TtsSpan.CardinalBuilder setNumber(java.lang.String)>:<public>:<android.text.style.TtsSpan.CardinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.view.SurfaceView: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.view.SurfaceView:android.view.View>
<android.app.ActivityManager: void restartPackage(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>:<public static>:<android.text.TextUtils>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence,int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.app.usage.NetworkStats: void <init>()>:<>:<android.app.usage.NetworkStats:java.lang.AutoCloseable>
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.util.JsonWriter: void <init>(java.io.Writer)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token)>:<public>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.app.job.JobService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.text.TextUtils.StringSplitter: void setString(java.lang.String)>:<public abstract>:<android.text.TextUtils.StringSplitter:java.lang.Iterable>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getBadgedIcon(int)>:<public>:<android.content.pm.LauncherActivityInfo>
<android.hardware.SensorManager: float getInclination(float[])>:<public static>:<android.hardware.SensorManager>
<android.service.dreams.DreamService: boolean onSearchRequested()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.net.ConnectivityManager: void reportBadNetwork(android.net.Network)>:<public>:<android.net.ConnectivityManager>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.view.animation.OvershootInterpolator: void <init>()>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.BaseInterpolator>
<android.view.ViewParent: void childDrawableStateChanged(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.widget.RemoteViews: void setIcon(int,java.lang.String,android.graphics.drawable.Icon)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.BitmapDrawable: int getOpacity()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.printservice.PrinterDiscoverySession: boolean isPrinterDiscoveryStarted()>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.bluetooth.BluetoothGattCallback: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>:<public static>:<android.graphics.drawable.Drawable>
<android.test.mock.MockContext: void grantUriPermission(java.lang.String,android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.telephony.CellInfoWcdma: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellInfoWcdma:android.telephony.CellInfo,android.os.Parcelable>
<android.content.pm.Signature: void <init>(byte[])>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.view.Window: boolean getSharedElementsUseOverlay()>:<public>:<android.view.Window>
<android.media.MediaExtractor: int getSampleTrackIndex()>:<public native>:<android.media.MediaExtractor>
<android.app.Activity: void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.View: void setLongClickable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.TouchUtils: void tapView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<junit.framework.TestResult: boolean shouldStop()>:<public synchronized>:<junit.framework.TestResult>
<android.widget.AbsSeekBar: void setThumbOffset(int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setSignaturePaddings(java.lang.String[])>:<public transient>:<android.security.keystore.KeyProtection.Builder>
<android.os.PersistableBundle: void <clinit>()>:<static>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterByStatus(int)>:<public>:<android.app.DownloadManager.Query>
<android.preference.Preference.BaseSavedState: void <clinit>()>:<static>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.os.UserHandle: int hashCode()>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.media.MediaFormat: android.media.MediaFormat createVideoFormat(java.lang.String,int,int)>:<public static final>:<android.media.MediaFormat>
<android.view.accessibility.AccessibilityNodeProvider: void <init>()>:<public>:<android.view.accessibility.AccessibilityNodeProvider>
<android.media.MediaDrm: byte[] getSecureStop(byte[])>:<public native>:<android.media.MediaDrm>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.BitmapDrawable: void setTintList(android.content.res.ColorStateList)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES30: void glDeleteSync(long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.TaskStackBuilder: void startActivities()>:<public>:<android.app.TaskStackBuilder>
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.renderscript.Allocation: void copyFrom(android.renderscript.Allocation)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.test.ApplicationTestCase: void createApplication()>:<protected final>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.media.AudioManager: void setVibrateSetting(int,int)>:<public>:<android.media.AudioManager>
<android.system.Os: java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress)>:<public static>:<android.system.Os>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: long skip(long)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.graphics.Paint: float getRunAdvance(java.lang.CharSequence,int,int,int,int,boolean,int)>:<public>:<android.graphics.Paint>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short3)>:<public>:<android.renderscript.FieldPacker>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBitrateRange()>:<public>:<android.media.MediaCodecInfo.VideoCapabilities>
<android.text.style.LocaleSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.LocaleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.SyncAdapterType: void <clinit>()>:<static>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.SpannableStringInternal: void getChars(int,int,char[],int)>:<public final>:<android.text.SpannableStringInternal>
<android.app.Activity: void openOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telephony.NeighboringCellInfo: int getRssi()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.database.sqlite.SQLiteProgram: void clearBindings()>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.ActionMode: boolean isTitleOptional()>:<public>:<android.view.ActionMode>
<android.renderscript.FieldPacker: short subI16()>:<public>:<android.renderscript.FieldPacker>
<android.util.AndroidException: void <init>(java.lang.String)>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<android.view.ViewDebug.FlagToString: int mask()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.renderscript.Matrix3f: void loadRotate(float,float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicYuvToRGB:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>:<public abstract>:<android.content.Context>
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout.Metrics)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>:<public>:<android.content.res.TypedArray>
<android.opengl.ETC1Util: void <init>()>:<public>:<android.opengl.ETC1Util>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.view.WindowId: boolean equals(java.lang.Object)>:<public>:<android.view.WindowId:android.os.Parcelable>
<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>:<public final>:<android.content.ContentResolver>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.test.TouchUtils: void dragViewToTop(android.test.ActivityInstrumentationTestCase,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.util.AttributeSet: java.lang.String getIdAttribute()>:<public abstract>:<android.util.AttributeSet>
<android.hardware.SensorEventListener: void onSensorChanged(android.hardware.SensorEvent)>:<public abstract>:<android.hardware.SensorEventListener>
<android.inputmethodservice.InputMethodService: void onWindowShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Toolbar: void collapseActionView()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.ServiceInfo: void <clinit>()>:<static>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.gesture.GestureOverlayView: int getOrientation()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.DialerFilter: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.AnimationDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>:<public static>:<android.net.TrafficStats>
<android.webkit.CookieManager: void removeSessionCookie()>:<public abstract>:<android.webkit.CookieManager>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.ImageView: void setSelected(boolean)>:<public>:<android.widget.ImageView:android.view.View>
<android.test.mock.MockResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.ActionBar: void removeTabAt(int)>:<public abstract>:<android.app.ActionBar>
<android.widget.EditText: android.text.Editable getText()>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.media.MediaCodec.Callback: void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat)>:<public abstract>:<android.media.MediaCodec.Callback>
<android.nfc.tech.MifareClassic: byte[] readBlock(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.media.session.MediaController.TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>:<public>:<android.media.session.MediaController.TransportControls>
<android.provider.VoicemailContract.Status: android.net.Uri buildSourceUri(java.lang.String)>:<public static>:<android.provider.VoicemailContract.Status:android.provider.BaseColumns>
<android.webkit.WebSyncManager: void resetSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.Parcel: void writeDoubleArray(double[])>:<public final>:<android.os.Parcel>
<android.transition.PathMotion: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.PathMotion>
<android.app.DialogFragment: void dismissAllowingStateLoss()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.webkit.WebSettings: boolean getDomStorageEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.telephony.TelephonyManager: int getCallState()>:<public>:<android.telephony.TelephonyManager>
<android.renderscript.Script: float getVarF(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config[] values()>:<public static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.util.Range: boolean contains(android.util.Range)>:<public>:<android.util.Range>
<android.widget.AbsListView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.app.Dialog: void setCancelMessage(android.os.Message)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telecom.Connection.VideoProvider: void onSendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.telephony.SmsMessage: boolean isEmail()>:<public>:<android.telephony.SmsMessage>
<junit.framework.Assert: void assertNotNull(java.lang.String,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.text.Html: void <init>()>:<>:<android.text.Html>
<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.webkit.WebStorage.QuotaUpdater: void updateQuota(long)>:<public abstract>:<android.webkit.WebStorage.QuotaUpdater>
<android.service.dreams.DreamService: void setContentView(int)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.location.Address: void setPremises(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.net.http.X509TrustManagerExtensions: void <init>(javax.net.ssl.X509TrustManager)>:<public>:<android.net.http.X509TrustManagerExtensions>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(int)>:<public>:<android.app.AlertDialog.Builder>
<android.util.DisplayMetrics: boolean equals(java.lang.Object)>:<public>:<android.util.DisplayMetrics>
<android.gesture.GestureStore: void setSequenceType(int)>:<public>:<android.gesture.GestureStore>
<android.inputmethodservice.InputMethodService: void onExtractedSelectionChanged(int,int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.hardware.Camera.Parameters: void setJpegThumbnailSize(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.hardware.Camera.FaceDetectionListener: void onFaceDetection(android.hardware.Camera.Face[],android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.FaceDetectionListener>
<android.webkit.WebViewFragment: void onResume()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.view.accessibility.AccessibilityWindowInfo: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.provider.CalendarContract.Reminders: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>:<public static final>:<android.provider.CalendarContract.Reminders:android.provider.BaseColumns,android.provider.CalendarContract.RemindersColumns,android.provider.CalendarContract.EventsColumns>
<android.view.View: float getScaleX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.camera2.params.RggbChannelVector: java.lang.String toString()>:<public>:<android.hardware.camera2.params.RggbChannelVector>
<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>:<public>:<android.media.SoundPool>
<android.os.Debug: int getGlobalAllocSize()>:<public static>:<android.os.Debug>
<android.app.admin.DevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.database.Observable: void registerObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.app.admin.DevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>:<public>:<android.app.admin.DevicePolicyManager>
<android.printservice.PrintService: void <init>()>:<public>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.hardware.camera2.params.InputConfiguration: int getHeight()>:<public>:<android.hardware.camera2.params.InputConfiguration>
<android.test.mock.MockCursor: short getShort(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.preference.RingtonePreference: void onSaveRingtone(android.net.Uri)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.ProgressBar: boolean isIndeterminate()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.app.NativeActivity: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>:<public>:<android.animation.LayoutTransition>
<android.app.UiAutomation.AccessibilityEventFilter: boolean accept(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.app.UiAutomation.AccessibilityEventFilter>
<android.text.method.BaseMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.util.Size: android.util.Size parseSize(java.lang.String)>:<public static>:<android.util.Size>
<android.preference.PreferenceActivity: void startPreferenceFragment(android.app.Fragment,boolean)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.TwoLineListItem: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.AnimationSet: void initialize(int,int,int,int)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.webkit.WebBackForwardList: int getSize()>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.graphics.Bitmap: void setPremultiplied(boolean)>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.bluetooth.le.ScanCallback: void onBatchScanResults(java.util.List)>:<public>:<android.bluetooth.le.ScanCallback>
<android.transition.VisibilityPropagation: int getViewX(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.NinePatch: void finalize()>:<protected>:<android.graphics.NinePatch>
<android.widget.OverScroller: void <init>(android.content.Context)>:<public>:<android.widget.OverScroller>
<android.os.UserManager: boolean isUserAGoat()>:<public>:<android.os.UserManager>
<android.preference.Preference: boolean persistFloat(float)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.database.ContentObservable: void <init>()>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback,android.os.Handler)>:<public>:<android.media.session.MediaSession>
<android.widget.TextView: int getCompoundPaddingStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: void glCompileShader(int)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: void setFeatureDrawableResource(int,int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.LauncherActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>:<public>:<android.hardware.fingerprint.FingerprintManager.CryptoObject>
<android.text.Layout: int getWidth()>:<public final>:<android.text.Layout>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.provider.ContactsContract.CommonDataKinds.Event: int getTypeResource(java.lang.Integer)>:<public static>:<android.provider.ContactsContract.CommonDataKinds.Event:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.ProgressBar: void onAttachedToWindow()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.text.Layout: int getLineEnd(int)>:<public final>:<android.text.Layout>
<android.printservice.PrintService: void attachBaseContext(android.content.Context)>:<protected final>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.AbsListView: void setCacheColorHint(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.provider.Telephony.Sms: void <init>()>:<>:<android.provider.Telephony.Sms:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.net.nsd.NsdManager.ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)>:<public abstract>:<android.net.nsd.NsdManager.ResolveListener>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int,int,int)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.test.mock.MockCursor: void setExtras(android.os.Bundle)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)>:<public static>:<android.view.animation.AnimationUtils>
<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.animation.FloatEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.graphics.Point: boolean equals(int,int)>:<public final>:<android.graphics.Point:android.os.Parcelable>
<android.util.SparseLongArray: void append(int,long)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)>:<public>:<android.hardware.usb.UsbManager>
<android.view.inputmethod.CursorAnchorInfo: int describeContents()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.media.MediaPlayer.OnBufferingUpdateListener: void onBufferingUpdate(android.media.MediaPlayer,int)>:<public abstract>:<android.media.MediaPlayer.OnBufferingUpdateListener>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.Path: boolean isInverseFillType()>:<public>:<android.graphics.Path>
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.Switch: android.graphics.PorterDuff.Mode getTrackTintMode()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.hardware.camera2.params.MeteringRectangle: void <init>(android.graphics.Rect,int)>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[])>:<public>:<android.graphics.NinePatch>
<android.view.InputDevice: int describeContents()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.text.LoginFilter: void onStart()>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.telephony.SubscriptionInfo: java.lang.String getNumber()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.View: boolean isClickable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: void setNavigationBarColor(int)>:<public abstract>:<android.view.Window>
<android.hardware.usb.UsbDevice: int describeContents()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.widget.AdapterViewAnimator: void showNext()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.preference.Preference: void setIcon(android.graphics.drawable.Drawable)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenEnd(java.lang.CharSequence,int)>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.database.CursorJoiner: android.database.CursorJoiner.Result next()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.preference.PreferenceActivity: void onContentChanged()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.speech.tts.TextToSpeech: int setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.speech.tts.TextToSpeech>
<android.util.Xml: void parse(java.io.InputStream,android.util.Xml.Encoding,org.xml.sax.ContentHandler)>:<public static>:<android.util.Xml>
<android.animation.FloatArrayEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public volatile>:<android.animation.FloatArrayEvaluator:android.animation.TypeEvaluator>
<android.content.Intent.ShortcutIconResource: void <init>()>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.speech.tts.UtteranceProgressListener: void onStop(java.lang.String,boolean)>:<public>:<android.speech.tts.UtteranceProgressListener>
<android.widget.TextView: int getCompoundPaddingLeft()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ContentProviderOperation: boolean isReadOperation()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.service.chooser.ChooserTarget: java.lang.String toString()>:<public>:<android.service.chooser.ChooserTarget:android.os.Parcelable>
<android.test.mock.MockCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>:<public>:<android.net.http.SslCertificate>
<android.view.ViewGroup: boolean shouldDelayChildPressedState()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.TextView: float getLetterSpacing()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.view.View: void setScrollContainer(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.gsm.SmsMessage: int getProtocolIdentifier()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.Spinner: void <init>(android.content.Context)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.content.ComponentName: java.lang.String getShortClassName()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.graphics.Bitmap: int getAllocationByteCount()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.net.sip.SipSession: void answerCall(java.lang.String,int)>:<public>:<android.net.sip.SipSession>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.ColorMatrix: void preConcat(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.widget.NumberPicker: int getMinValue()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockCursor: int getInt(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.telephony.CellIdentityCdma: int getBasestationId()>:<public>:<android.telephony.CellIdentityCdma:android.os.Parcelable>
<android.widget.Chronometer: void onDetachedFromWindow()>:<protected>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.content.ContentResolver: void cancelSync(android.content.SyncRequest)>:<public static>:<android.content.ContentResolver>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.util.TypedValue: java.lang.String toString()>:<public>:<android.util.TypedValue>
<android.content.SyncResult: java.lang.String toString()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.print.PrinterInfo: java.lang.String getName()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.system.Os: java.io.FileDescriptor dup(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>:<public final>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.telephony.TelephonyManager: boolean setOperatorBrandOverride(java.lang.String)>:<public>:<android.telephony.TelephonyManager>
<android.graphics.drawable.Animatable: boolean isRunning()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.hardware.Camera.Parameters: void <init>(android.hardware.Camera)>:<>:<android.hardware.Camera.Parameters>
<android.telephony.SmsMessage: boolean isReplyPathPresent()>:<public>:<android.telephony.SmsMessage>
<android.text.style.AlignmentSpan.Standard: void <init>(android.os.Parcel)>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.content.pm.InstrumentationInfo: java.lang.String toString()>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,float[][])>:<public static>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.bluetooth.le.ScanSettings.Builder: void <init>()>:<public>:<android.bluetooth.le.ScanSettings.Builder>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewStructure: void setHint(java.lang.CharSequence)>:<public abstract>:<android.view.ViewStructure>
<android.media.MediaCodecInfo.CodecCapabilities: int getMaxSupportedInstances()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.telecom.ConnectionService: android.telecom.RemoteConnection createRemoteOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>:<public final>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLayoutDirectionChanged(int)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.util.LogPrinter: void println(java.lang.String)>:<public>:<android.util.LogPrinter:android.util.Printer>
<android.net.nsd.NsdServiceInfo: int getPort()>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.telecom.StatusHints: void <clinit>()>:<static>:<android.telecom.StatusHints:android.os.Parcelable>
<android.transition.Transition: boolean canRemoveViews()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.content.res.Resources>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.WallpaperManager: void clear()>:<public>:<android.app.WallpaperManager>
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.UiModeManager: int getNightMode()>:<public>:<android.app.UiModeManager>
<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest getRequest()>:<public>:<android.hardware.camera2.CaptureResult:android.hardware.camera2.CameraMetadata>
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.Path: void addOval(float,float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.database.CursorWindow: int getType(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.preference.PreferenceActivity: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.BroadcastReceiver.PendingResult: boolean getAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.widget.Toolbar: void setTitleTextColor(int)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: int getRepeatCount()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.hardware.camera2.CaptureRequest.Key: boolean equals(java.lang.Object)>:<public final>:<android.hardware.camera2.CaptureRequest.Key>
<android.opengl.EGLContext: void <init>()>:<>:<android.opengl.EGLContext:android.opengl.EGLObjectHandle>
<android.content.pm.PermissionGroupInfo: java.lang.String toString()>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>:<public final>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.app.SearchManager: void onCancel(android.content.DialogInterface)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setDenominator(long)>:<public>:<android.text.style.TtsSpan.FractionBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.media.session.MediaSession.Callback: void onSetRating(android.media.Rating)>:<public>:<android.media.session.MediaSession.Callback>
<android.test.mock.MockContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.accounts.AccountManagerFuture: boolean isDone()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.webkit.WebView: void onMeasure(int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.animation.ObjectAnimator: void setupStartValues()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.net.ProxyInfo: java.lang.String toString()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.sip.SipSession: java.lang.String getLocalIp()>:<public>:<android.net.sip.SipSession>
<android.view.accessibility.AccessibilityWindowInfo: int getId()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint)>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Space:android.view.View>
<android.net.SSLCertificateSocketFactory: void setKeyManagers(javax.net.ssl.KeyManager[])>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.test.mock.MockContext: void startActivities(android.content.Intent[],android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.HorizontalScrollView: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Fragment: android.transition.Transition getReenterTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.AbstractWindowedCursor: boolean hasWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.webkit.WebView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.FragmentController: void dispatchActivityCreated()>:<public>:<android.app.FragmentController>
<android.graphics.drawable.LayerDrawable: void setId(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.gesture.GestureOverlayView: void removeOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceDataUuid()>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setInverseBackgroundForced(boolean)>:<public>:<android.app.AlertDialog.Builder>
<android.location.Address: java.lang.String getSubThoroughfare()>:<public>:<android.location.Address:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.util.ArraySet: void clear()>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.widget.AlphabetIndexer: void onChanged()>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<org.json.JSONArray: org.json.JSONArray put(double)>:<public>:<org.json.JSONArray>
<android.widget.TextView: boolean getShowSoftInputOnFocus()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path,android.graphics.Path.Op)>:<public>:<android.graphics.Path>
<android.view.MenuItem: android.view.SubMenu getSubMenu()>:<public abstract>:<android.view.MenuItem>
<android.webkit.URLUtil: boolean isContentUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.os.Parcel: void writeByte(byte)>:<public final>:<android.os.Parcel>
<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.TestFailure: java.lang.String exceptionMessage()>:<public>:<junit.framework.TestFailure>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)>:<public>:<android.telephony.PhoneStateListener>
<android.test.MoreAsserts: void assertEquals(java.lang.String,java.util.Set,java.util.Set)>:<public static>:<android.test.MoreAsserts>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(android.graphics.Rect)>:<public>:<android.view.WindowInsets>
<android.os.Looper: java.lang.Thread getThread()>:<public>:<android.os.Looper>
<android.mtp.MtpDevice: java.lang.String toString()>:<public>:<android.mtp.MtpDevice>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>:<public final>:<android.os.Handler>
<android.os.Debug: int getBinderLocalObjectCount()>:<public static final native>:<android.os.Debug>
<android.view.View: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLSurfaceView: void onPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.CursorTreeAdapter: void changeCursor(android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.widget.Toolbar: void onMeasure(int,int)>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.database.MergeCursor: void deactivate()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.provider.DocumentsProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.widget.AbsListView: int computeVerticalScrollOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.util.Pair: boolean equals(java.lang.Object)>:<public>:<android.util.Pair>
<android.content.res.Configuration: void setLocale(java.util.Locale)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.KeyCharacterMap: int getKeyboardType()>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.app.assist.AssistStructure: int getWindowNodeCount()>:<public>:<android.app.assist.AssistStructure:android.os.Parcelable>
<android.telecom.ConnectionService: void addConference(android.telecom.Conference)>:<public final>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.telephony.gsm.SmsMessage.SubmitPdu: void <init>()>:<public>:<android.telephony.gsm.SmsMessage.SubmitPdu>
<android.test.TouchUtils: void drag(android.test.InstrumentationTestCase,float,float,float,float,int)>:<public static>:<android.test.TouchUtils>
<android.nfc.Tag: java.lang.String[] getTechList()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.media.AudioFormat: int getEncoding()>:<public>:<android.media.AudioFormat>
<android.text.DynamicLayout: int getLineStart(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.net.wifi.WifiConfiguration.Status: void <init>()>:<>:<android.net.wifi.WifiConfiguration.Status>
<android.view.ViewGroup: void detachViewFromParent(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.Assert: void <init>()>:<protected>:<junit.framework.Assert>
<android.content.AsyncQueryHandler: void startInsert(int,java.lang.Object,android.net.Uri,android.content.ContentValues)>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.media.MediaRouter.UserRouteInfo: void setVolume(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)>:<public>:<android.content.res.Resources>
<android.widget.RemoteViews: void setEmptyView(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.res.Configuration: void setTo(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.drawable.shapes.OvalShape: void <init>()>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.app.Fragment: android.transition.Transition getSharedElementReturnTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.media.AudioRecord: void startRecording()>:<public>:<android.media.AudioRecord>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.net.UrlQuerySanitizer: void <init>()>:<public>:<android.net.UrlQuerySanitizer>
<android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.Window: void makeActive()>:<public final>:<android.view.Window>
<android.content.pm.FeatureGroupInfo: int describeContents()>:<public>:<android.content.pm.FeatureGroupInfo:android.os.Parcelable>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.preference.PreferenceGroup: boolean addPreference(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.inputmethodservice.Keyboard.Key: int[] getCurrentDrawableState()>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.media.MediaCodec: void reset()>:<public final>:<android.media.MediaCodec>
<android.inputmethodservice.InputMethodService: int getBackDisposition()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Parcel: void writeException(java.lang.Exception)>:<public final>:<android.os.Parcel>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean)>:<public static>:<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo>
<android.hardware.usb.UsbDeviceConnection: boolean releaseInterface(android.hardware.usb.UsbInterface)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.location.LocationProvider: boolean requiresNetwork()>:<public>:<android.location.LocationProvider>
<android.opengl.GLES11: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.TabHost: void dispatchWindowFocusChanged(boolean)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextClock: void setFormat24Hour(java.lang.CharSequence)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.ViewStub:android.view.View>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setArgumentsFromDouble(double,int,int)>:<public>:<android.text.style.TtsSpan.DecimalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.os.Looper: void prepareMainLooper()>:<public static>:<android.os.Looper>
<android.view.ViewGroup: void setDescendantFocusability(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.nfc.NdefMessage: java.lang.String toString()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.app.assist.AssistContent: void <clinit>()>:<static>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup create()>:<public>:<android.renderscript.ScriptGroup.Builder>
<android.app.Notification.Builder: android.app.Notification.Builder setExtras(android.os.Bundle)>:<public>:<android.app.Notification.Builder>
<android.graphics.drawable.Icon.OnDrawableLoadedListener: void onDrawableLoaded(android.graphics.drawable.Drawable)>:<public abstract>:<android.graphics.drawable.Icon.OnDrawableLoadedListener>
<android.text.style.LeadingMarginSpan.Standard: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.content.pm.PackageInstaller.SessionParams: void setAppPackageName(java.lang.String)>:<public>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.widget.TextView: void setHorizontallyScrolling(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard.Key)>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.media.Image: android.graphics.Rect getCropRect()>:<public>:<android.media.Image:java.lang.AutoCloseable>
<android.hardware.camera2.params.MeteringRectangle: android.util.Size getSize()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.view.View: void setScrollBarDefaultDelayBeforeFade(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telecom.StatusHints: android.graphics.drawable.Icon getIcon()>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.widget.RelativeLayout.LayoutParams: void addRule(int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.nfc.tech.NfcF: void connect()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.content.pm.InstrumentationInfo: int describeContents()>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.service.dreams.DreamService: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.content.AsyncQueryHandler: android.os.Handler createHandler(android.os.Looper)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePixmapSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.service.notification.NotificationListenerService: void onListenerHintsChanged(int)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>:<public static>:<android.telephony.SmsMessage>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>:<public>:<android.text.BidiFormatter>
<android.text.method.TimeKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.opengl.GLES31Ext: void glBlendBarrierKHR()>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void sendKeyDownUpSync(int)>:<public>:<android.app.Instrumentation>
<android.widget.AutoCompleteTextView: void setListSelection(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.app.Notification: void <init>()>:<public>:<android.app.Notification:android.os.Parcelable>
<junit.framework.TestResult: void stop()>:<public synchronized>:<junit.framework.TestResult>
<android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>:<public>:<android.os.BaseBundle>
<android.media.tv.TvContract.Programs: void <clinit>()>:<static>:<android.media.tv.TvContract.Programs:android.media.tv.TvContract.BaseTvColumns>
<android.view.textservice.TextInfo: void <init>(java.lang.String,int,int)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.telecom.Conference: void setVideoProvider(android.telecom.Connection,android.telecom.Connection.VideoProvider)>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.graphics.Picture: void draw(android.graphics.Canvas)>:<public>:<android.graphics.Picture>
<org.xmlpull.v1.XmlSerializer: int getDepth()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.preference.PreferenceManager.OnActivityDestroyListener: void onActivityDestroy()>:<public abstract>:<android.preference.PreferenceManager.OnActivityDestroyListener>
<android.net.wifi.WifiEnterpriseConfig: void <init>(android.net.wifi.WifiEnterpriseConfig)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[])>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.util.MonthDisplayHelper: int getYear()>:<public>:<android.util.MonthDisplayHelper>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.telephony.PhoneNumberFormattingTextWatcher: void <init>()>:<public>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.telephony.gsm.SmsMessage: java.lang.String getServiceCenterAddress()>:<public>:<android.telephony.gsm.SmsMessage>
<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.text.method.ArrowKeyMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.app.ActivityManager.MemoryInfo: void <init>()>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaPlayer: boolean isPlaying()>:<public native>:<android.media.MediaPlayer>
<android.text.SpannedString: int getSpanEnd(java.lang.Object)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.hardware.Camera.Parameters: int getMaxNumFocusAreas()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.TabHost: void setCurrentTab(int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.telephony.ServiceState: void setStateOff()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.os.FileObserver: void onEvent(int,java.lang.String)>:<public abstract>:<android.os.FileObserver>
<android.test.mock.MockContext: java.io.File[] getExternalCacheDirs()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.telephony.gsm.SmsMessage.MessageClass: android.telephony.gsm.SmsMessage.MessageClass valueOf(java.lang.String)>:<public static>:<android.telephony.gsm.SmsMessage.MessageClass:java.lang.Enum>
<android.widget.LinearLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<org.json.JSONArray: void <init>(java.lang.Object)>:<public>:<org.json.JSONArray>
<android.os.MemoryFile: boolean isPurgingAllowed()>:<public>:<android.os.MemoryFile>
<android.app.Notification.WearableExtender: int getHintScreenTimeout()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.text.style.StyleSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.media.tv.TvView.TimeShiftPositionCallback: void onTimeShiftStartPositionChanged(java.lang.String,long)>:<public>:<android.media.tv.TvView.TimeShiftPositionCallback>
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.webkit.WebView.VisualStateCallback: void onComplete(long)>:<public abstract>:<android.webkit.WebView.VisualStateCallback>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebIconDatabase: void <init>()>:<public>:<android.webkit.WebIconDatabase>
<android.content.pm.Signature: java.lang.String toCharsString()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.content.ContentProvider: void shutdown()>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.view.SoundEffectConstants: void <init>()>:<>:<android.view.SoundEffectConstants>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)>:<public static>:<android.graphics.Typeface>
<android.media.session.MediaController.TransportControls: void pause()>:<public>:<android.media.session.MediaController.TransportControls>
<android.opengl.GLES31Ext: void <init>()>:<>:<android.opengl.GLES31Ext>
<android.os.RemoteException: void <init>(java.lang.String)>:<public>:<android.os.RemoteException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.view.KeyEvent: boolean isScrollLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.FileObserver: void <init>(java.lang.String,int)>:<public>:<android.os.FileObserver>
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowId: void <clinit>()>:<static>:<android.view.WindowId:android.os.Parcelable>
<android.media.MediaPlayer: int getDuration()>:<public native>:<android.media.MediaPlayer>
<android.opengl.GLES30: void glClearBufferiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>:<public static native>:<dalvik.system.DexFile>
<android.media.AudioTrack.OnRoutingChangedListener: void onRoutingChanged(android.media.AudioTrack)>:<public abstract>:<android.media.AudioTrack.OnRoutingChangedListener>
<android.widget.LinearLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getTotalPaddingLeft()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.EditorInfo: int describeContents()>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.media.tv.TvInputService.Session: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.widget.AbsSpinner: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.WebView: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Rect: int centerY()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.widget.AdapterView: void setAdapter(android.widget.Adapter)>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.net.ProxyInfo: java.lang.String getHost()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.database.CursorJoiner: void remove()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.os.Parcel: void readFloatArray(float[])>:<public final>:<android.os.Parcel>
<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.widget.ViewAnimator: android.view.View getCurrentView()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.'annotation'.TargetApi: int value()>:<public abstract>:<android.annotation.TargetApi:java.lang.annotation.Annotation>
<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>:<public final>:<android.media.MediaCodec>
<android.preference.DialogPreference: void onClick()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.Bitmap: void setConfig(android.graphics.Bitmap.Config)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCountMax()>:<public>:<android.telephony.SubscriptionManager>
<android.os.MessageQueue: boolean isIdle()>:<public>:<android.os.MessageQueue>
<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.text.style.RelativeSizeSpan: int describeContents()>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.OverScroller: float getCurrVelocity()>:<public>:<android.widget.OverScroller>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public final>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,int,int,int)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothManager: int getConnectionState(android.bluetooth.BluetoothDevice,int)>:<public>:<android.bluetooth.BluetoothManager>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.media.MediaCodecInfo: void <init>()>:<>:<android.media.MediaCodecInfo>
<android.media.AudioTrack: int write(byte[],int,int,int)>:<public>:<android.media.AudioTrack>
<android.provider.ContactsContract.CommonDataKinds: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds>
<android.net.CaptivePortal: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.CaptivePortal:android.os.Parcelable>
<android.test.mock.MockContext: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.ContextWrapper: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewTreeObserver.OnDrawListener: void onDraw()>:<public abstract>:<android.view.ViewTreeObserver.OnDrawListener>
<android.app.usage.UsageStatsManager: java.util.List queryConfigurations(int,long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.renderscript.Script: void invoke(int)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.Matrix: boolean postSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.app.usage.NetworkStats.Bucket: int getState()>:<public>:<android.app.usage.NetworkStats.Bucket>
<android.text.util.Rfc822Token: void setName(java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.app.Activity: boolean isVoiceInteraction()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.webkit.WebSettings: boolean getDatabaseEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.test.mock.MockCursor: int getColumnCount()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.view.inputmethod.CursorAnchorInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CursorAnchorInfo:android.os.Parcelable>
<android.widget.TextView: int getSelectionEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Notification.Action.WearableExtender: java.lang.Object clone()>:<public volatile>:<android.app.Notification.Action.WearableExtender:android.app.Notification.Action.Extender>
<android.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>:<public abstract>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.view.Window: int getVolumeControlStream()>:<public abstract>:<android.view.Window>
<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>:<public>:<android.app.backup.RestoreObserver>
<android.provider.Contacts.Intents.UI: void <init>()>:<public>:<android.provider.Contacts.Intents.UI>
<android.widget.ExpandableListView: long getSelectedId()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void setSystemUiVisibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsListView: void addTouchables(java.util.ArrayList)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceManager.OnActivityStopListener: void onActivityStop()>:<public abstract>:<android.preference.PreferenceManager.OnActivityStopListener>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>:<public>:<android.content.ContentProviderClient>
<android.util.PrintStreamPrinter: void println(java.lang.String)>:<public>:<android.util.PrintStreamPrinter:android.util.Printer>
<android.hardware.usb.UsbAccessory: int describeContents()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType[] values()>:<public static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.bluetooth.BluetoothGatt: boolean setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.os.Message: void setTarget(android.os.Handler)>:<public>:<android.os.Message:android.os.Parcelable>
<android.app.FragmentTransaction: android.app.FragmentTransaction show(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)>:<public static>:<android.content.IntentFilter:android.os.Parcelable>
<android.media.MediaTimestamp: void <init>()>:<>:<android.media.MediaTimestamp>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.ViewTreeObserver.OnScrollChangedListener: void onScrollChanged()>:<public abstract>:<android.view.ViewTreeObserver.OnScrollChangedListener>
<android.media.audiofx.PresetReverb: void setParameterListener(android.media.audiofx.PresetReverb.OnParameterChangeListener)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.View: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvView: void <init>(android.content.Context)>:<public>:<android.media.tv.TvView:android.view.ViewGroup,android.view.View>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,byte[],int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.hardware.GeomagneticField: void <init>(float,float,float,long)>:<public>:<android.hardware.GeomagneticField>
<android.net.wifi.WifiEnterpriseConfig: void setAnonymousIdentity(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.preference.Preference: void setShouldDisableView(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TextView: void setMinLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.MergeCursor: boolean requery()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.wifi.WifiManager.WpsCallback: void onSucceeded()>:<public abstract>:<android.net.wifi.WifiManager.WpsCallback>
<android.graphics.drawable.AnimationDrawable: void start()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.text.method.DateTimeKeyListener: void <init>()>:<public>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.view.Menu: android.view.MenuItem getItem(int)>:<public abstract>:<android.view.Menu>
<android.provider.SyncStateContract.Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.provider.Settings.Global: long getLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.app.Activity: void onResume()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.app.ActivityManager: int getMemoryClass()>:<public>:<android.app.ActivityManager>
<android.media.AudioTrack: int getNativeOutputSampleRate(int)>:<public static>:<android.media.AudioTrack>
<android.security.keystore.KeyInfo: boolean isUserAuthenticationRequirementEnforcedBySecureHardware()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.media.midi.MidiDeviceService: android.media.midi.MidiReceiver[] onGetInputPortReceivers()>:<public abstract>:<android.media.midi.MidiDeviceService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.opengl.GLES31: void glFramebufferParameteri(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: void <init>()>:<>:<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo>
<android.app.Application.ActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.widget.RatingBar: boolean isIndicator()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.session.MediaSession: void setExtras(android.os.Bundle)>:<public>:<android.media.session.MediaSession>
<android.bluetooth.BluetoothGattService: java.util.UUID getUuid()>:<public>:<android.bluetooth.BluetoothGattService>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.content.ContentProviderClient: android.net.Uri uncanonicalize(android.net.Uri)>:<public final>:<android.content.ContentProviderClient>
<android.widget.SearchView: boolean isQueryRefinementEnabled()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.database.AbstractCursor.SelfContentObserver: void onChange(boolean)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.hardware.usb.UsbConfiguration: android.hardware.usb.UsbInterface getInterface(int)>:<public>:<android.hardware.usb.UsbConfiguration:android.os.Parcelable>
<android.location.Criteria: boolean isCostAllowed()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.content.res.Resources.Theme: void applyStyle(int,boolean)>:<public>:<android.content.res.Resources.Theme>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>:<public>:<android.graphics.Interpolator>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentAction(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.Class)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>:<public static>:<android.os.RecoverySystem>
<android.view.ActionMode.Callback2: void <init>()>:<public>:<android.view.ActionMode.Callback2:android.view.ActionMode.Callback>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebChromeClient: void onPermissionRequestCanceled(android.webkit.PermissionRequest)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.Color: int HSVToColor(float[])>:<public static>:<android.graphics.Color>
<android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.app.admin.DevicePolicyManager: void wipeData(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.MediaMetadataRetriever: void release()>:<public native>:<android.media.MediaMetadataRetriever>
<android.text.Spanned: int getSpanEnd(java.lang.Object)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.ViewGroup: void onNestedScroll(android.view.View,int,int,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.webkit.ClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])>:<public abstract>:<android.webkit.ClientCertRequest>
<android.content.AsyncQueryHandler: void startDelete(int,java.lang.Object,android.net.Uri,java.lang.String,java.lang.String[])>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.media.midi.MidiDeviceInfo: void <clinit>()>:<static>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.os.CancellationSignal: void cancel()>:<public>:<android.os.CancellationSignal>
<android.hardware.Camera.Parameters: java.util.List getMeteringAreas()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.TextView: void append(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.CalendarContract: void <init>()>:<>:<android.provider.CalendarContract>
<android.test.mock.MockCursor: void close()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.net.rtp.AudioGroup: void <init>()>:<public>:<android.net.rtp.AudioGroup>
<android.transition.Scene: void enter()>:<public>:<android.transition.Scene>
<android.text.style.BackgroundColorSpan: int describeContents()>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.webkit.WebView: void stopLoading()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.webkit.DateSorter: void <init>(android.content.Context)>:<public>:<android.webkit.DateSorter>
<android.print.PrintJobId: void <clinit>()>:<static>:<android.print.PrintJobId:android.os.Parcelable>
<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)>:<public static>:<android.os.ParcelUuid:android.os.Parcelable>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler)>:<public>:<android.view.GestureDetector>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.HierarchyTraceType)>:<public static>:<android.view.ViewDebug>
<android.transition.ArcMotion: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.bluetooth.le.ScanSettings: int getScanMode()>:<public>:<android.bluetooth.le.ScanSettings:android.os.Parcelable>
<android.os.BaseBundle: boolean isEmpty()>:<public>:<android.os.BaseBundle>
<android.provider.CalendarContract.CalendarAlerts: void <clinit>()>:<static>:<android.provider.CalendarContract.CalendarAlerts:android.provider.BaseColumns,android.provider.CalendarContract.CalendarAlertsColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.telecom.InCallService.VideoCall: void setDeviceOrientation(int)>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>:<public>:<android.telephony.TelephonyManager>
<android.database.AbstractCursor: boolean move(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>:<public static>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.text.method.SingleLineTransformationMethod: void <init>()>:<public>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.graphics.Paint: int getColor()>:<public native>:<android.graphics.Paint>
<android.widget.VideoView: void setVideoURI(android.net.Uri)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>:<public static>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.database.CursorWrapper: boolean isFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.Window: android.transition.TransitionManager getTransitionManager()>:<public>:<android.view.Window>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.Icon: void <clinit>()>:<static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation build()>:<public>:<android.content.ContentProviderOperation.Builder>
<android.widget.VideoView: void stopPlayback()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES30: void glReadBuffer(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.CursorWindow: void onAllReferencesReleased()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.bluetooth.le.AdvertiseData: boolean getIncludeTxPowerLevel()>:<public>:<android.bluetooth.le.AdvertiseData:android.os.Parcelable>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context,android.content.ComponentName)>:<public static>:<android.speech.SpeechRecognizer>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl valueOf(java.lang.String)>:<public static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.view.inputmethod.InputMethod.SessionCallback: void sessionCreated(android.view.inputmethod.InputMethodSession)>:<public abstract>:<android.view.inputmethod.InputMethod.SessionCallback>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>:<public>:<android.content.ContentProviderClient>
<android.database.DataSetObserver: void onChanged()>:<public>:<android.database.DataSetObserver>
<android.webkit.WebView: boolean pageDown(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDst()>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.util.ArrayMap: int indexOfKey(java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.app.Dialog: void <init>(android.content.Context,int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebMessage: java.lang.String getData()>:<public>:<android.webkit.WebMessage>
<android.view.Display: long getPresentationDeadlineNanos()>:<public>:<android.view.Display>
<android.security.keystore.UserNotAuthenticatedException: void <init>()>:<public>:<android.security.keystore.UserNotAuthenticatedException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewStructure: android.os.Bundle getExtras()>:<public abstract>:<android.view.ViewStructure>
<android.app.ActionBar.TabListener: void onTabReselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.content.MutableContextWrapper: void setBaseContext(android.content.Context)>:<public>:<android.content.MutableContextWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>:<public static>:<android.content.IntentSender:android.os.Parcelable>
<android.graphics.Camera: void translate(float,float,float)>:<public native>:<android.graphics.Camera>
<android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: void <init>(android.content.Context)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaCodec: void setCallback(android.media.MediaCodec.Callback)>:<public>:<android.media.MediaCodec>
<android.graphics.drawable.shapes.RoundRectShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.printservice.PrinterDiscoverySession: void onStartPrinterDiscovery(java.util.List)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<android.test.InstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()>:<protected>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.widget.PopupWindow: void showAsDropDown(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating unflattenFromString(java.lang.String)>:<public static>:<android.media.tv.TvContentRating>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName(android.content.Context)>:<public>:<android.media.MediaRouter.RouteInfo>
<android.widget.AlphabetIndexer: int compare(java.lang.String,java.lang.String)>:<protected>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>:<public>:<android.app.LocalActivityManager>
<android.test.IsolatedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.service.dreams.DreamService: void setScreenBright(boolean)>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.telephony.CellSignalStrengthLte: int getAsuLevel()>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.webkit.ConsoleMessage: void <init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage.MessageLevel)>:<public>:<android.webkit.ConsoleMessage>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.service.voice.VoiceInteractionSession: android.app.Dialog getWindow()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.gesture.GestureOverlayView: void removeAllOnGesturingListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader.TileMode)>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.StateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.media.audiofx.Virtualizer: void <init>(int,int)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.webkit.DateSorter: java.lang.String getLabel(int)>:<public>:<android.webkit.DateSorter>
<android.text.method.BaseMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>:<public>:<android.media.MediaMetadataRetriever>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.Contacts.ContactMethods: java.lang.String encodePredefinedImProtocol(int)>:<public static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.widget.AbsListView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceGroup: void notifyDependencyChange(boolean)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.bluetooth.BluetoothHeadset: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.Path: void rewind()>:<public>:<android.graphics.Path>
<android.view.View: android.view.View findFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.Camera.Parameters: boolean isAutoExposureLockSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.drawable.Drawable>
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()>:<public>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<android.test.InstrumentationTestCase: void runTestOnUiThread(java.lang.Runnable)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.TextView: int getTotalPaddingStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.BaseBundle: void <init>()>:<>:<android.os.BaseBundle>
<android.app.backup.FileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.app.ActivityManager.RecentTaskInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.graphics.Region: void setEmpty()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>:<public>:<android.bluetooth.BluetoothGattCallback>
<android.webkit.WebResourceResponse: int getStatusCode()>:<public>:<android.webkit.WebResourceResponse>
<android.inputmethodservice.KeyboardView: void onDetachedFromWindow()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.nfc.NdefMessage: int describeContents()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetNewHeader()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.Chronometer: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>:<public>:<android.hardware.usb.UsbManager>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setProtocol(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.view.GestureDetector: boolean isLongpressEnabled()>:<public>:<android.view.GestureDetector>
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>:<public>:<android.graphics.Paint>
<android.widget.HorizontalScrollView: boolean shouldDelayChildPressedState()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar.Tab>
<android.graphics.Rect: int height()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.view.ActionMode.Callback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public abstract>:<android.view.ActionMode.Callback>
<android.media.Ringtone: void setStreamType(int)>:<public>:<android.media.Ringtone>
<android.renderscript.Element: android.renderscript.Element I64_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.preference.Preference: void setIcon(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.app.Service: boolean stopSelfResult(int)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View,int,int,int)>:<public>:<android.widget.PopupMenu>
<android.widget.Spinner: void setEnabled(boolean)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.graphics.Region.Op: android.graphics.Region.Op valueOf(java.lang.String)>:<public static>:<android.graphics.Region.Op:java.lang.Enum>
<android.content.BroadcastReceiver.PendingResult: int getResultCode()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.view.View: boolean isEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>:<public>:<android.graphics.Paint>
<android.view.View: boolean showContextMenu()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.TimedText: android.graphics.Rect getBounds()>:<public>:<android.media.TimedText>
<android.telecom.GatewayInfo: java.lang.String getGatewayProviderPackageName()>:<public>:<android.telecom.GatewayInfo:android.os.Parcelable>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>:<public final>:<android.content.ContentProviderClient>
<android.preference.Preference: java.lang.CharSequence getTitle()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.view.ViewGroup: void scheduleLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.ActionBar: void setHideOnContentScrollEnabled(boolean)>:<public>:<android.app.ActionBar>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.test.TouchUtils: int dragViewToX(android.test.ActivityInstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<android.animation.AnimatorSet: void playSequentially(java.util.List)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.session.MediaSession.Callback: void onPlayFromUri(android.net.Uri,android.os.Bundle)>:<public>:<android.media.session.MediaSession.Callback>
<android.content.SearchRecentSuggestionsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)>:<public>:<android.media.AudioManager>
<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.KeyListener>
<android.os.UserManager: void <init>()>:<>:<android.os.UserManager>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.content.Context: android.content.res.Resources getResources()>:<public abstract>:<android.content.Context>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaExtractor: int getTrackCount()>:<public final native>:<android.media.MediaExtractor>
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String toString()>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.view.MotionEvent: void addBatch(long,android.view.MotionEvent.PointerCoords[],int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.OnAccountsUpdateListener: void onAccountsUpdated(android.accounts.Account[])>:<public abstract>:<android.accounts.OnAccountsUpdateListener>
<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.util.SparseLongArray: void clear()>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.security.keystore.KeyInfo: java.lang.String[] getEncryptionPaddings()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.widget.RadioButton: void <init>(android.content.Context)>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.hardware.camera2.CameraCaptureSession: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface.OnKeyListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.ListView: void layoutChildren()>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void onProvideVirtualStructure(android.view.ViewStructure)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBLAS: void STBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.Transition: android.transition.Transition excludeChildren(java.lang.Class,boolean)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.bluetooth.le.AdvertiseSettings: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.IntentFilter: java.util.Iterator typesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.content.ContentQueryMap: java.util.Map getRows()>:<public synchronized>:<android.content.ContentQueryMap:java.util.Observable>
<android.app.DatePickerDialog: void onDateChanged(android.widget.DatePicker,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.content.AsyncQueryHandler: void onInsertComplete(int,java.lang.Object,android.net.Uri)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public final>:<org.apache.http.conn.ssl.AllowAllHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.renderscript.FieldPacker: android.renderscript.Float3 subFloat3()>:<public>:<android.renderscript.FieldPacker>
<android.content.RestrictionEntry: void setDescription(java.lang.String)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>:<public>:<android.graphics.Canvas>
<android.graphics.Paint: boolean isSubpixelText()>:<public final>:<android.graphics.Paint>
<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setOnLongClickListener(android.view.View.OnLongClickListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDropBox()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.system.Os: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)>:<public static>:<android.system.Os>
<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.media.MediaRecorder: void setAudioSource(int)>:<public native>:<android.media.MediaRecorder>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>:<public abstract>:<android.webkit.WebSettings>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.view.VelocityTracker: float getYVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: android.content.Intent getIntent()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.session.MediaSession.QueueItem: int describeContents()>:<public>:<android.media.session.MediaSession.QueueItem:android.os.Parcelable>
<android.content.IntentSender: android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel)>:<public static>:<android.content.IntentSender:android.os.Parcelable>
<android.test.InstrumentationTestSuite: void <init>(java.lang.String,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.view.inputmethod.InputConnection: boolean endBatchEdit()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.widget.TableLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.View: void onDisplayHint(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.speech.tts.TextToSpeech: int isLanguageAvailable(java.util.Locale)>:<public>:<android.speech.tts.TextToSpeech>
<android.util.Range: android.util.Range extend(android.util.Range)>:<public>:<android.util.Range>
<android.database.MergeCursor: boolean onMove(int,int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()>:<public>:<android.mtp.MtpDevice>
<android.location.Criteria: void setAltitudeRequired(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.hardware.camera2.params.InputConfiguration: java.lang.String toString()>:<public>:<android.hardware.camera2.params.InputConfiguration>
<android.widget.AdapterView.OnItemSelectedListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>:<public abstract>:<android.widget.AdapterView.OnItemSelectedListener>
<android.net.LocalSocket: void setSoTimeout(int)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>:<public>:<android.view.ViewConfiguration>
<android.util.PrintWriterPrinter: void println(java.lang.String)>:<public>:<android.util.PrintWriterPrinter:android.util.Printer>
<android.media.MediaExtractor: void release()>:<public final native>:<android.media.MediaExtractor>
<android.animation.Animator.AnimatorPauseListener: void onAnimationPause(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorPauseListener>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToE164(java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.media.AudioDeviceInfo: java.lang.CharSequence getProductName()>:<public>:<android.media.AudioDeviceInfo>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader.TileMode)>:<public>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.content.Context: android.content.res.ColorStateList getColorStateList(int)>:<public final>:<android.content.Context>
<android.graphics.Matrix: void <init>()>:<public>:<android.graphics.Matrix>
<android.telecom.RemoteConnection.Callback: void onStateChanged(android.telecom.RemoteConnection,int)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.text.BidiFormatter.Builder: void <init>(java.util.Locale)>:<public>:<android.text.BidiFormatter.Builder>
<android.view.View: int getImportantForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.rtp.RtpStream: void release()>:<public>:<android.net.rtp.RtpStream>
<android.graphics.Paint: int getAlpha()>:<public native>:<android.graphics.Paint>
<android.media.RingtoneManager: android.database.Cursor getCursor()>:<public>:<android.media.RingtoneManager>
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>:<public>:<android.content.res.TypedArray>
<android.service.carrier.CarrierMessagingService.SendMmsResult: byte[] getSendConfPdu()>:<public>:<android.service.carrier.CarrierMessagingService.SendMmsResult>
<android.media.midi.MidiInputPort: void onSend(byte[],int,int,long)>:<public>:<android.media.midi.MidiInputPort:android.media.midi.MidiReceiver,java.io.Closeable>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.widget.TableLayout: void requestLayout()>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.AnimatedVectorDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.os.Message: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Message:android.os.Parcelable>
<android.app.ListFragment: int getSelectedItemPosition()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.app.assist.AssistStructure: int describeContents()>:<public>:<android.app.assist.AssistStructure:android.os.Parcelable>
<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.EnvironmentalReverb,int,int,int)>:<public abstract>:<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener>
<android.view.textservice.SpellCheckerInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<org.json.JSONObject: java.lang.Object opt(java.lang.String)>:<public>:<org.json.JSONObject>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceUuid(android.os.ParcelUuid)>:<public>:<android.bluetooth.le.AdvertiseData.Builder>
<android.test.LoaderTestCase: java.lang.Object getLoaderResultSynchronously(android.content.Loader)>:<public>:<android.test.LoaderTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.hardware.Camera: void autoFocus(android.hardware.Camera.AutoFocusCallback)>:<public final>:<android.hardware.Camera>
<android.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.transition.TransitionInflater: android.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup)>:<public>:<android.transition.TransitionInflater>
<android.graphics.drawable.AnimatedVectorDrawable: void reset()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.content.pm.LauncherActivityInfo: java.lang.String getName()>:<public>:<android.content.pm.LauncherActivityInfo>
<android.renderscript.ScriptGroup.Builder2: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ScriptGroup.Builder2>
<android.security.keystore.UserNotAuthenticatedException: void <init>(java.lang.String)>:<public>:<android.security.keystore.UserNotAuthenticatedException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.text.SpannableStringInternal: java.lang.String toString()>:<public final>:<android.text.SpannableStringInternal>
<junit.runner.BaseTestRunner: void testFailed(int,junit.framework.Test,java.lang.Throwable)>:<public abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.system.Os: void lchown(java.lang.String,int,int)>:<public static>:<android.system.Os>
<android.preference.Preference: void onPrepareForRemoval()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.opengl.GLES30: void glUniform2uiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit[] values()>:<public static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.media.midi.MidiSender: void onDisconnect(android.media.midi.MidiReceiver)>:<public abstract>:<android.media.midi.MidiSender>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.animation.TimeAnimator: void start()>:<public>:<android.animation.TimeAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.DialerFilter: void onFinishInflate()>:<protected>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.database.Cursor: boolean isBeforeFirst()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setUserAuthenticationValidityDurationSeconds(int)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telecom.Conference: void onUnhold()>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.text.style.LeadingMarginSpan.LeadingMarginSpan2: int getLeadingMarginLineCount()>:<public abstract>:<android.text.style.LeadingMarginSpan.LeadingMarginSpan2:android.text.style.LeadingMarginSpan,android.text.style.WrapTogetherSpan>
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.Drawable>
<android.app.Dialog: void invalidateOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.AbsSeekBar: int getThumbOffset()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.bluetooth.BluetoothGatt: boolean readDescriptor(android.bluetooth.BluetoothGattDescriptor)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.opengl.GLES30: void glGenVertexArrays(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()>:<public>:<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.test.mock.MockContext: java.io.File getExternalCacheDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.bluetooth.BluetoothGattDescriptor: byte[] getValue()>:<public>:<android.bluetooth.BluetoothGattDescriptor>
<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>:<public final>:<android.content.Context>
<android.text.TextUtils: void <init>()>:<>:<android.text.TextUtils>
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>:<public>:<android.graphics.PaintFlagsDrawFilter:android.graphics.DrawFilter>
<android.media.MediaRouter.RouteInfo: int getPlaybackType()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.app.usage.ConfigurationStats: long getFirstTimeStamp()>:<public>:<android.app.usage.ConfigurationStats:android.os.Parcelable>
<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void finalize()>:<protected>:<android.media.MediaPlayer>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(android.graphics.drawable.Drawable)>:<public>:<android.app.AlertDialog.Builder>
<android.location.Address: void setLocality(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType[] values()>:<public static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.net.Uri.Builder: android.net.Uri.Builder appendPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.telephony.CellIdentityLte: int describeContents()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.speech.tts.TextToSpeech: int stop()>:<public>:<android.speech.tts.TextToSpeech>
<android.content.ContentResolver: java.util.List getCurrentSyncs()>:<public static>:<android.content.ContentResolver>
<android.net.wifi.WifiEnterpriseConfig: void setPassword(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.widget.NumberPicker: void <init>(android.content.Context)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils.InsertHelper: void bind(int,float)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.app.DatePickerDialog: void updateDate(int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.provider.Settings.Secure: void <clinit>()>:<static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.os.Debug: int getBinderDeathObjectCount()>:<public static final native>:<android.os.Debug>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setDisallowMetered(boolean)>:<public>:<android.content.SyncRequest.Builder>
<android.transition.VisibilityPropagation: int getViewY(android.transition.TransitionValues)>:<public>:<android.transition.VisibilityPropagation:android.transition.TransitionPropagation>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValue(java.lang.String,java.lang.Object)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.widget.Toolbar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.LinearLayout: void setHorizontalGravity(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.print.PrintManager: void <init>()>:<>:<android.print.PrintManager>
<android.telecom.TelecomManager: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle)>:<public>:<android.telecom.TelecomManager>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.media.audiofx.Visualizer: int getMeasurementPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)>:<public>:<android.media.audiofx.Visualizer>
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()>:<public>:<android.drm.DrmManagerClient>
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.database.MatrixCursor: android.database.MatrixCursor.RowBuilder newRow()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.IntentFilter: java.lang.String getDataScheme(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.hardware.Camera.Parameters: void setWhiteBalance(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.hardware.camera2.CameraDevice: void createConstrainedHighSpeedCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>:<public abstract>:<android.hardware.camera2.CameraDevice:java.lang.AutoCloseable>
<android.widget.ExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.opengl.GLES30: boolean glIsSync(long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.TextView: float getShadowDy()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockContext: java.lang.String getPackageName()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.renderscript.AllocationAdapter: void setFace(android.renderscript.Type.CubemapFace)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.UriMatcher: int match(android.net.Uri)>:<public>:<android.content.UriMatcher>
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>:<public static>:<android.webkit.WebStorage>
<android.transition.SidePropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.SidePropagation:android.transition.VisibilityPropagation,android.transition.TransitionPropagation>
<android.database.MergeCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.widget.AbsSeekBar: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.content.pm.LauncherActivityInfo: long getFirstInstallTime()>:<public>:<android.content.pm.LauncherActivityInfo>
<android.view.ViewStructure: void setFocusable(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.telephony.CellInfo: boolean isRegistered()>:<public>:<android.telephony.CellInfo:android.os.Parcelable>
<android.app.ActivityManager.RunningServiceInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.media.audiofx.Equalizer: void setProperties(android.media.audiofx.Equalizer.Settings)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.transition.Transition: java.util.List getTargets()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.view.accessibility.AccessibilityRecord: void setToIndex(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>:<public>:<android.net.http.SslCertificate>
<android.view.View: void setHasTransientState(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.SmsMessage.MessageClass: android.telephony.SmsMessage.MessageClass[] values()>:<public static>:<android.telephony.SmsMessage.MessageClass:java.lang.Enum>
<android.media.tv.TvInputService.HardwareSession: boolean onSetSurface(android.view.Surface)>:<public final>:<android.media.tv.TvInputService.HardwareSession:android.media.tv.TvInputService.Session>
<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Parcel: float readFloat()>:<public final>:<android.os.Parcel>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.telecom.ConnectionRequest: android.net.Uri getAddress()>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.hardware.ConsumerIrManager: android.hardware.ConsumerIrManager.CarrierFrequencyRange[] getCarrierFrequencies()>:<public>:<android.hardware.ConsumerIrManager>
<android.view.ActionProvider: boolean overridesItemVisibility()>:<public>:<android.view.ActionProvider>
<android.media.SoundPool: void <init>(int,int,int)>:<public>:<android.media.SoundPool>
<android.telecom.Connection.VideoProvider: void handleCallSessionEvent(int)>:<public>:<android.telecom.Connection.VideoProvider>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(long)>:<public>:<android.animation.AnimatorSet.Builder>
<android.telecom.ConnectionRequest: java.lang.String toString()>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.view.Window: android.content.Context getContext()>:<public final>:<android.view.Window>
<android.content.Intent: void removeExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.drm.DrmManagerClient: void setOnErrorListener(android.drm.DrmManagerClient.OnErrorListener)>:<public synchronized>:<android.drm.DrmManagerClient>
<android.widget.RadioGroup: void check(int)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.StatFs: long getBlockCountLong()>:<public>:<android.os.StatFs>
<android.app.FragmentBreadCrumbs: void onMeasure(int,int)>:<protected>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.content.BroadcastReceiver.PendingResult: java.lang.String getResultData()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.view.View: void clearFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Float4: void <init>()>:<public>:<android.renderscript.Float4>
<android.hardware.usb.UsbEndpoint: int getAddress()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.app.Activity: android.app.ActionBar getActionBar()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.mtp.MtpObjectInfo: long getDateModified()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.assist.AssistStructure.ViewNode: int getHeight()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.webkit.WebView: java.lang.String getUrl()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setExtension(java.lang.String)>:<public>:<android.text.style.TtsSpan.TelephoneBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>:<protected synchronized>:<android.widget.ProgressBar:android.view.View>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES30: int glGetUniformBlockIndex(int,java.lang.String)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.widget.ActionMenuView: void setPopupTheme(int)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicBLAS: void CTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.inputmethodservice.Keyboard: int getKeyWidth()>:<protected>:<android.inputmethodservice.Keyboard>
<android.content.RestrictionsManager: android.content.Intent createLocalApprovalIntent()>:<public>:<android.content.RestrictionsManager>
<android.bluetooth.le.ScanRecord: int getAdvertiseFlags()>:<public>:<android.bluetooth.le.ScanRecord>
<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)>:<public>:<android.media.session.MediaSession>
<android.webkit.WebResourceRequest: java.util.Map getRequestHeaders()>:<public abstract>:<android.webkit.WebResourceRequest>
<android.widget.ListPopupWindow: void setPromptView(android.view.View)>:<public>:<android.widget.ListPopupWindow>
<android.transition.ChangeTransform: void setReparentWithOverlay(boolean)>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.app.Fragment.SavedState: void <init>()>:<>:<android.app.Fragment.SavedState:android.os.Parcelable>
<android.hardware.Camera.Parameters: boolean isSmoothZoomSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)>:<public static>:<android.provider.DocumentsContract>
<android.widget.ViewSwitcher: void reset()>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.content.ContentProviderOperation: java.lang.String toString()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.renderscript.AllocationAdapter: void setX(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebSettings: boolean getAllowFileAccess()>:<public abstract>:<android.webkit.WebSettings>
<android.'annotation'.SuppressLint: java.lang.String[] value()>:<public abstract>:<android.annotation.SuppressLint:java.lang.annotation.Annotation>
<android.os.Handler: void <init>()>:<public>:<android.os.Handler>
<android.database.CursorWindow: boolean isString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.ScrollView: int getMaxScrollAmount()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.content.pm.PackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.ContentProviderOperation: void <clinit>()>:<static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.transition.ChangeImageTransform: void <init>()>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.transition.TransitionManager: void transitionTo(android.transition.Scene)>:<public>:<android.transition.TransitionManager>
<android.media.session.MediaSession.Callback: void onPlay()>:<public>:<android.media.session.MediaSession.Callback>
<android.transition.ChangeClipBounds: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.graphics.Region: boolean equals(java.lang.Object)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.TextureView.SurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.view.Window: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.Window>
<android.webkit.WebSettings: void setUseWideViewPort(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.gesture.GestureLibrary: boolean save()>:<public abstract>:<android.gesture.GestureLibrary>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.widget.LinearLayout: void <init>(android.content.Context)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>:<public>:<android.net.http.SslCertificate>
<android.database.AbstractWindowedCursor: boolean isNull(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.util.LongSparseArray: void remove(long)>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.graphics.Matrix: void setRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.text.format.Time: void set(long)>:<public>:<android.text.format.Time>
<android.widget.DialerFilter: void setDigitsWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.method.TextKeyListener: boolean shouldCap(android.text.method.TextKeyListener.Capitalize,java.lang.CharSequence,int)>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.AlarmManager: void <init>()>:<>:<android.app.AlarmManager>
<android.transition.ChangeScroll: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.transition.ChangeScroll:android.transition.Transition>
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothGattServer openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)>:<public>:<android.bluetooth.BluetoothManager>
<android.webkit.CookieSyncManager: void startSync()>:<public>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.graphics.Paint: android.graphics.Shader getShader()>:<public>:<android.graphics.Paint>
<android.widget.SearchView: boolean isIconified()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.telephony.SignalStrength: int getEvdoDbm()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.SurfaceView: void setZOrderOnTop(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(java.lang.String)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.text.style.TtsSpan.DigitsBuilder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.DigitsBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix3f)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.widget.AdapterViewAnimator: void setSelection(int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.media.MediaPlayer: void stop()>:<public>:<android.media.MediaPlayer>
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.animation.LayoutTransition: long getStagger(int)>:<public>:<android.animation.LayoutTransition>
<android.util.Base64InputStream: long skip(long)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>:<public>:<android.net.wifi.WifiManager>
<android.text.SpannableStringBuilder: int getTextWatcherDepth()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.nsd.NsdServiceInfo: void setServiceName(java.lang.String)>:<public>:<android.net.nsd.NsdServiceInfo:android.os.Parcelable>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActiveQueueItemId(long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.webkit.WebSettings: boolean getUseWideViewPort()>:<public abstract>:<android.webkit.WebSettings>
<android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>:<public>:<android.app.Notification.Builder>
<android.app.admin.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.telephony.CellInfoCdma: java.lang.String toString()>:<public>:<android.telephony.CellInfoCdma:android.telephony.CellInfo,android.os.Parcelable>
<org.json.JSONArray: boolean equals(java.lang.Object)>:<public>:<org.json.JSONArray>
<android.app.Dialog: void cancel()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.hardware.camera2.params.MeteringRectangle: int getMeteringWeight()>:<public>:<android.hardware.camera2.params.MeteringRectangle>
<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>:<public>:<android.hardware.camera2.params.TonemapCurve>
<android.provider.Settings.System: android.net.Uri getUriFor(java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>:<public static>:<android.text.StaticLayout.Builder>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: void <init>()>:<>:<android.service.voice.VoiceInteractionSession.PickOptionRequest:android.service.voice.VoiceInteractionSession.Request>
<android.webkit.WebViewClient: void onPageCommitVisible(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.app.WallpaperInfo: int describeContents()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<junit.framework.TestSuite: void <init>(java.lang.Class[],java.lang.String)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.media.MediaPlayer: void deselectTrack(int)>:<public>:<android.media.MediaPlayer>
<android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int[])>:<public transient>:<android.app.Notification.MediaStyle:android.app.Notification.Style>
<android.net.wifi.p2p.WifiP2pManager.ChannelListener: void onChannelDisconnected()>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ChannelListener>
<android.database.AbstractCursor: void finalize()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.widget.VideoView: boolean isPlaying()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setLocation(android.location.Location)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<android.view.textservice.TextInfo: void <init>(android.os.Parcel)>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.widget.Switch: boolean getShowText()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.telecom.RemoteConnection.Callback: void onRingbackRequested(android.telecom.RemoteConnection,boolean)>:<public>:<android.telecom.RemoteConnection.Callback>
<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.text.format.Time: boolean after(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.util.EventLog: void readEvents(int[],java.util.Collection)>:<public static native>:<android.util.EventLog>
<android.os.Environment: java.io.File getDataDirectory()>:<public static>:<android.os.Environment>
<android.widget.SearchView.OnCloseListener: boolean onClose()>:<public abstract>:<android.widget.SearchView.OnCloseListener>
<android.opengl.GLES10: void glStencilMask(int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.RegionIterator: void <init>(android.graphics.Region)>:<public>:<android.graphics.RegionIterator>
<android.content.pm.ResolveInfo: java.lang.String toString()>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.os.Parcel: void writeCharArray(char[])>:<public final>:<android.os.Parcel>
<android.view.View: boolean isVerticalFadingEdgeEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()>:<public>:<android.widget.ListPopupWindow>
<android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>:<public>:<android.location.LocationManager>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>:<public>:<android.transition.Visibility:android.transition.Transition>
<android.widget.CompoundButton: void setChecked(boolean)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.nfc.cardemulation.HostApduService: void onDeactivated(int)>:<public abstract>:<android.nfc.cardemulation.HostApduService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ProgressDialog: void setIndeterminate(boolean)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.widget.AdapterViewFlipper: void showPrevious()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.ScriptIntrinsicBLAS: void CTRSM(int,int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.AudioFormat.Builder: void <init>(android.media.AudioFormat)>:<public>:<android.media.AudioFormat.Builder>
<android.media.MediaDrm.CryptoSession: boolean verify(byte[],byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>:<public static native>:<android.opengl.EGL14>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.transition.ArcMotion: android.graphics.Path getPath(float,float,float,float)>:<public>:<android.transition.ArcMotion:android.transition.PathMotion>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.text.method.DigitsKeyListener: int getInputType()>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer,int)>:<public>:<android.hardware.usb.UsbRequest>
<android.view.ViewConfiguration: void <init>()>:<public>:<android.view.ViewConfiguration>
<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PeerListListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.media.AudioTrack.Builder: android.media.AudioTrack build()>:<public>:<android.media.AudioTrack.Builder>
<android.util.JsonReader: void close()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.view.Choreographer: void postFrameCallback(android.view.Choreographer.FrameCallback)>:<public>:<android.view.Choreographer>
<android.media.MediaPlayer: void setPlaybackParams(android.media.PlaybackParams)>:<public native>:<android.media.MediaPlayer>
<android.renderscript.RenderScript: long getMinorVersion()>:<public static>:<android.renderscript.RenderScript>
<android.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>:<public abstract>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.renderscript.Byte2: void <init>()>:<public>:<android.renderscript.Byte2>
<android.nfc.tech.IsoDep: void connect()>:<public volatile>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.view.Window: android.view.View peekDecorView()>:<public abstract>:<android.view.Window>
<android.view.ViewConfiguration: int getLongPressTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Allocation: void syncAll(int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.media.MediaDrm: void setOnKeyStatusChangeListener(android.media.MediaDrm.OnKeyStatusChangeListener,android.os.Handler)>:<public>:<android.media.MediaDrm>
<android.graphics.drawable.RippleDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.LayoutParams)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.style.SubscriptSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.bluetooth.le.ScanResult: java.lang.String toString()>:<public>:<android.bluetooth.le.ScanResult:android.os.Parcelable>
<android.view.ViewStructure: void setVisibility(int)>:<public abstract>:<android.view.ViewStructure>
<android.widget.OverScroller: void notifyVerticalEdgeReached(int,int,int)>:<public>:<android.widget.OverScroller>
<android.os.Bundle: void putShortArray(java.lang.String,short[])>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.Path: void <init>(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.hardware.usb.UsbRequest: void setClientData(java.lang.Object)>:<public>:<android.hardware.usb.UsbRequest>
<android.media.AudioRecord: int setPositionNotificationPeriod(int)>:<public>:<android.media.AudioRecord>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.telecom.StatusHints: void <init>(java.lang.CharSequence,android.graphics.drawable.Icon,android.os.Bundle)>:<public>:<android.telecom.StatusHints:android.os.Parcelable>
<android.database.sqlite.SQLiteMisuseException: void <init>()>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.JsResult: void cancel()>:<public final>:<android.webkit.JsResult>
<android.telecom.VideoProfile.CameraCapabilities: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telecom.VideoProfile.CameraCapabilities:android.os.Parcelable>
<android.security.keystore.KeyGenParameterSpec: java.lang.String getKeystoreAlias()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.telephony.PhoneStateListener: void onDataActivity(int)>:<public>:<android.telephony.PhoneStateListener>
<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.VectorDrawable: void <init>()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.media.tv.TvInputService.Session: void notifyVideoAvailable()>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.telephony.SignalStrength: int getGsmSignalStrength()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.widget.GridLayout: void setAlignmentMode(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.widget.SimpleAdapter: android.widget.SimpleAdapter.ViewBinder getViewBinder()>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.view.ViewGroup: void onViewAdded(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.AbstractCursor: int getInt(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.bluetooth.BluetoothGatt: boolean writeDescriptor(android.bluetooth.BluetoothGattDescriptor)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.os.Parcel: android.os.Parcel obtain()>:<public static>:<android.os.Parcel>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.Service: void onTrimMemory(int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.view.accessibility.AccessibilityRecord: int getItemCount()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.app.SearchableInfo: boolean shouldIncludeInGlobalSearch()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.test.AssertionFailedError: void <init>(java.lang.String)>:<public>:<android.test.AssertionFailedError:java.lang.Error,java.lang.Throwable>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity[] values()>:<public static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.widget.CompoundButton: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.View: void setVerticalScrollbarPosition(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.SpannableStringBuilder: java.lang.String toString()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.MediaController.MediaPlayerControl: void start()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.inputmethod.ExtractedText: int describeContents()>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.content.ContextWrapper: void setTheme(int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>:<public final>:<android.content.Context>
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.view.View: boolean isSelected()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.ContextMenu: void clearHeader()>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.media.MediaCodec: void setVideoScalingMode(int)>:<public final native>:<android.media.MediaCodec>
<android.webkit.WebView: boolean zoomOut()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.location.Location: void setProvider(java.lang.String)>:<public>:<android.location.Location:android.os.Parcelable>
<android.app.assist.AssistStructure.ViewNode: int getVisibility()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.graphics.drawable.LayerDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.CountDownTimer: android.os.CountDownTimer start()>:<public final synchronized>:<android.os.CountDownTimer>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord,android.nfc.NdefRecord[])>:<public transient>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.view.OrientationListener: void onOrientationChanged(int)>:<public abstract>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.content.SyncAdapterType: java.lang.String toString()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int,boolean)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.widget.Toolbar.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.InflateException: void <init>(java.lang.Throwable)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteTransactionListener: void onCommit()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.view.animation.Animation: boolean willChangeBounds()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.webkit.WebViewClient: void onUnhandledInputEvent(android.webkit.WebView,android.view.InputEvent)>:<public>:<android.webkit.WebViewClient>
<android.app.DialogFragment: boolean isCancelable()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<org.json.JSONStringer: org.json.JSONStringer endArray()>:<public>:<org.json.JSONStringer>
<android.service.media.MediaBrowserService.BrowserRoot: android.os.Bundle getExtras()>:<public>:<android.service.media.MediaBrowserService.BrowserRoot>
<android.os.PatternMatcher: void <clinit>()>:<static>:<android.os.PatternMatcher:android.os.Parcelable>
<android.widget.ExpandableListView: int getPackedPositionChild(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glTranslatex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.provider.Settings.Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession: java.util.List createHighSpeedRequestList(android.hardware.camera2.CaptureRequest)>:<public abstract>:<android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession:android.hardware.camera2.CameraCaptureSession>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeLocale(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.database.sqlite.SQLiteCursor: void close()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>:<public>:<android.widget.TabHost.TabSpec>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.mtp.MtpObjectInfo: int getStorageId()>:<public final>:<android.mtp.MtpObjectInfo>
<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.AudioRecord: int read(short[],int,int,int)>:<public>:<android.media.AudioRecord>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo getCollectionItemInfo()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.provider.CalendarContract.Reminders: void <init>()>:<>:<android.provider.CalendarContract.Reminders:android.provider.BaseColumns,android.provider.CalendarContract.RemindersColumns,android.provider.CalendarContract.EventsColumns>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskWrites()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.text.style.TtsSpan.ElectronicBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setUserAuthenticationRequired(boolean)>:<public>:<android.security.keystore.KeyProtection.Builder>
<android.os.Handler: boolean hasMessages(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.database.Cursor: boolean isClosed()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>:<public>:<android.text.SpannableStringInternal>
<android.location.Location: void dump(android.util.Printer,java.lang.String)>:<public>:<android.location.Location:android.os.Parcelable>
<android.content.pm.ApplicationInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>:<public>:<android.content.pm.ApplicationInfo.DisplayNameComparator:java.util.Comparator>
<android.widget.AbsListView: float getTopFadingEdgeStrength()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateNotBefore(java.util.Date)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>:<public>:<android.text.Layout>
<android.graphics.RectF: int hashCode()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.widget.Switch: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.print.PrintAttributes.MediaSize: void <clinit>()>:<static>:<android.print.PrintAttributes.MediaSize>
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>:<public>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.widget.GridLayout: int getColumnCount()>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.ActionMode: java.lang.CharSequence getTitle()>:<public abstract>:<android.view.ActionMode>
<android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.AbsSeekBar: void onRtlPropertiesChanged(int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.media.MediaExtractor: long getCachedDuration()>:<public native>:<android.media.MediaExtractor>
<android.os.UserHandle: boolean equals(java.lang.Object)>:<public>:<android.os.UserHandle:android.os.Parcelable>
<android.text.style.MetricAffectingSpan: void <init>()>:<public>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>:<public>:<android.graphics.Paint>
<android.preference.TwoStatePreference: boolean isChecked()>:<public>:<android.preference.TwoStatePreference:android.preference.Preference>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.renderscript.Matrix3f: void <init>(float[])>:<public>:<android.renderscript.Matrix3f>
<android.graphics.drawable.LayerDrawable: void setAutoMirrored(boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.media.midi.MidiInputPort: void close()>:<public>:<android.media.midi.MidiInputPort:android.media.midi.MidiReceiver,java.io.Closeable>
<android.app.Activity: void startActivities(android.content.Intent[])>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.nfc.NdefRecord: java.lang.String toMimeType()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(java.util.UUID[],android.bluetooth.BluetoothAdapter.LeScanCallback)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFrameRates()>:<public>:<android.hardware.Camera.Parameters>
<android.view.View: void onWindowVisibilityChanged(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.SyncResult: boolean hasError()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.widget.Scroller: int timePassed()>:<public>:<android.widget.Scroller>
<android.webkit.WebStorage.Origin: long getQuota()>:<public>:<android.webkit.WebStorage.Origin>
<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus.NmeaListener)>:<public>:<android.location.LocationManager>
<android.test.mock.MockContext: int getWallpaperDesiredMinimumWidth()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float,long)>:<public>:<android.media.session.PlaybackState.Builder>
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>:<public>:<android.content.res.TypedArray>
<android.hardware.Camera.Parameters: int getInt(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.media.AudioDeviceInfo: void <init>()>:<>:<android.media.AudioDeviceInfo>
<android.text.method.BaseMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>:<public>:<android.webkit.WebViewClient>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>:<public final>:<android.hardware.Camera>
<android.view.MotionEvent: int getToolType(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.Window.Callback: boolean onMenuOpened(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.net.Uri: android.net.Uri parse(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.view.ViewGroup: void removeView(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.wifi.WifiManager: boolean startScan()>:<public>:<android.net.wifi.WifiManager>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.content.res.Resources>
<android.widget.VideoView: int getAudioSessionId()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.view.MotionEvent: float getHistoricalSize(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>:<public>:<android.net.ConnectivityManager>
<android.bluetooth.le.AdvertiseData.Builder: void <init>()>:<public>:<android.bluetooth.le.AdvertiseData.Builder>
<android.hardware.usb.UsbInterface: void <clinit>()>:<static>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>:<public>:<android.preference.PreferenceManager>
<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.graphics.Matrix: boolean preRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.security.keystore.KeyPermanentlyInvalidatedException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.hardware.Camera.Parameters: float getVerticalViewAngle()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.BitmapFactory.Options: void <init>()>:<public>:<android.graphics.BitmapFactory.Options>
<android.os.Debug.MemoryInfo: void <clinit>()>:<static>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.app.FragmentTransaction: android.app.FragmentTransaction disallowAddToBackStack()>:<public abstract>:<android.app.FragmentTransaction>
<android.media.MediaExtractor: void <init>()>:<public>:<android.media.MediaExtractor>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>:<public static>:<android.graphics.drawable.Drawable>
<android.app.Notification: java.lang.String getSortKey()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.service.wallpaper.WallpaperService.Engine: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: int getMeasuredState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES10: void glLightModelx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.net.sip.SipManager: boolean isIncomingCallIntent(android.content.Intent)>:<public static>:<android.net.sip.SipManager>
<android.net.sip.SipSession.Listener: void onRinging(android.net.sip.SipSession,android.net.sip.SipProfile,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.Cursor: short getShort(int)>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.media.tv.TvContract.Programs.Genres: void <init>()>:<>:<android.media.tv.TvContract.Programs.Genres>
<android.media.MediaMetadataRetriever: void finalize()>:<protected>:<android.media.MediaMetadataRetriever>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)>:<public static>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.ScriptIntrinsicConvolve5x5 create(android.renderscript.RenderScript,android.renderscript.Element)>:<public static>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.RadioGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.test.ApplicationTestCase: void setUp()>:<protected>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Debug: void resetGlobalExternalFreedCount()>:<public static>:<android.os.Debug>
<android.media.AudioTrack: int getChannelCount()>:<public>:<android.media.AudioTrack>
<android.os.ParcelUuid: java.util.UUID getUuid()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.view.TextureView: void onAttachedToWindow()>:<protected>:<android.view.TextureView:android.view.View>
<android.widget.AbsSeekBar: void onDraw(android.graphics.Canvas)>:<protected synchronized>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.graphics.Canvas: void rotate(float)>:<public>:<android.graphics.Canvas>
<android.opengl.GLES20: void glAttachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setMimeType(java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.database.CursorWindow: float getFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener,android.os.Handler)>:<public>:<android.media.AudioRecord>
<android.media.MediaCodec.CryptoException: void <init>(int,java.lang.String)>:<public>:<android.media.MediaCodec.CryptoException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.NetworkCapabilities: int getLinkUpstreamBandwidthKbps()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.app.job.JobScheduler: void cancelAll()>:<public abstract>:<android.app.job.JobScheduler>
<android.view.View: void setOnDragListener(android.view.View.OnDragListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.WindowManager.LayoutParams: boolean mayUseInputMethod(int)>:<public static>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.Matrix3f: void translate(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.inputmethodservice.InputMethodService: void showWindow(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.widget.AdapterView.OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>:<public abstract>:<android.widget.AdapterView.OnItemLongClickListener>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int,int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.renderscript.RenderScript.RSMessageHandler: void <init>()>:<public>:<android.renderscript.RenderScript.RSMessageHandler:java.lang.Runnable>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES10>
<android.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.drm.DrmManagerClient.OnInfoListener: void onInfo(android.drm.DrmManagerClient,android.drm.DrmInfoEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnInfoListener>
<android.content.res.Resources: int getInteger(int)>:<public>:<android.content.res.Resources>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.app.MediaRouteActionProvider: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>:<public>:<android.app.MediaRouteActionProvider:android.view.ActionProvider>
<android.graphics.drawable.Drawable: boolean setLevel(int)>:<public final>:<android.graphics.drawable.Drawable>
<android.service.notification.StatusBarNotification: boolean isClearable()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.widget.ResourceCursorAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.graphics.drawable.DrawableContainer: boolean canApplyTheme()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telephony.CellInfoGsm: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellInfoGsm:android.telephony.CellInfo,android.os.Parcelable>
<android.system.Os: int readv(java.io.FileDescriptor,java.lang.Object[],int[],int[])>:<public static>:<android.system.Os>
<android.widget.ExpandableListView: void <init>(android.content.Context)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>:<public>:<android.content.res.TypedArray>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.net.wifi.WifiConfiguration.KeyMgmt: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.KeyMgmt>
<android.opengl.GLES31Ext: java.lang.String glGetObjectLabelKHR(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.text.style.AbsoluteSizeSpan: int describeContents()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.View: void setOnHoverListener(android.view.View.OnHoverListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.AudioRecord: int getChannelCount()>:<public>:<android.media.AudioRecord>
<org.json.JSONArray: java.lang.String toString()>:<public>:<org.json.JSONArray>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.renderscript.ScriptIntrinsicBLAS: void SGBMV(int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.util.Range: boolean equals(java.lang.Object)>:<public>:<android.util.Range>
<android.content.RestrictionEntry: android.content.RestrictionEntry createBundleEntry(java.lang.String,android.content.RestrictionEntry[])>:<public static>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor getDescriptor()>:<public>:<android.media.audiofx.AudioEffect>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.ImageView: void setAdjustViewBounds(boolean)>:<public>:<android.widget.ImageView:android.view.View>
<android.view.accessibility.AccessibilityRecord: int getAddedCount()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.widget.TextView: void onStartTemporaryDetach()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>:<public>:<android.app.Notification.Builder>
<android.media.MediaRouter: int getRouteCount()>:<public>:<android.media.MediaRouter>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.OverScroller: void forceFinished(boolean)>:<public final>:<android.widget.OverScroller>
<android.graphics.drawable.ColorDrawable: int getAlpha()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.util.Rational: int getNumerator()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>:<public final>:<android.util.LruCache>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setDomain(java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.Gallery.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.util.JsonReader: void endArray()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.midi.MidiOutputPort: void close()>:<public>:<android.media.midi.MidiOutputPort:android.media.midi.MidiSender,java.io.Closeable>
<android.app.Fragment: android.os.Bundle getArguments()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.WebResourceResponse: java.io.InputStream getData()>:<public>:<android.webkit.WebResourceResponse>
<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>:<public abstract>:<android.content.Context>
<android.app.SearchableInfo: int getHintId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.content.pm.PackageInstaller.SessionInfo: float getProgress()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.security.keystore.KeyInfo: java.lang.String[] getDigests()>:<public>:<android.security.keystore.KeyInfo:java.security.spec.KeySpec>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.AudioCapabilities getAudioCapabilities()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.content.pm.ProviderInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.PopupWindow: int getHeight()>:<public>:<android.widget.PopupWindow>
<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>:<public>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.widget.HeaderViewListAdapter: boolean isEmpty()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.ScrollView: boolean isFillViewport()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>:<public>:<android.webkit.WebViewClient>
<android.renderscript.ScriptIntrinsicColorMatrix: void setGreyscale()>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getOpacity()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.widget.Chronometer.OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>:<public abstract>:<android.widget.Chronometer.OnChronometerTickListener>
<android.speech.tts.TextToSpeech: int setPitch(float)>:<public>:<android.speech.tts.TextToSpeech>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.hardware.Camera.Parameters: void getPreviewFpsRange(int[])>:<public>:<android.hardware.Camera.Parameters>
<android.widget.SimpleExpandableListAdapter: android.view.View newGroupView(boolean,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.app.UiAutomation: void <init>()>:<>:<android.app.UiAutomation>
<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.Animator.AnimatorListener: void onAnimationCancel(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.net.ProxyInfo: int hashCode()>:<public>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.VpnService.Builder: android.net.VpnService.Builder setSession(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.database.MergeCursor: boolean isNull(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.graphics.PathEffect: void finalize()>:<protected>:<android.graphics.PathEffect>
<android.telephony.gsm.SmsMessage: boolean isMWISetMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int3)>:<public>:<android.renderscript.FieldPacker>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.database.AbstractCursor: boolean moveToNext()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.pm.PackageItemInfo: void <init>(android.content.pm.PackageItemInfo)>:<public>:<android.content.pm.PackageItemInfo>
<android.os.TokenWatcher: void <init>(android.os.Handler,java.lang.String)>:<public>:<android.os.TokenWatcher>
<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.BaseInterpolator>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>:<public static>:<android.content.ContentResolver>
<android.opengl.GLES31: void <init>()>:<>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.test.mock.MockPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.IntentSender: void <init>()>:<>:<android.content.IntentSender:android.os.Parcelable>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.content.OperationApplicationException: void <init>(java.lang.String,int)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.util.ArrayMap: boolean removeAll(java.util.Collection)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.text.style.SubscriptSpan: int describeContents()>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.animation.Animator: void setStartDelay(long)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.telephony.gsm.GsmCellLocation: java.lang.String toString()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.widget.TextView: void setHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte4)>:<public>:<android.renderscript.FieldPacker>
<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>:<public>:<android.content.res.Resources>
<android.nfc.tech.NfcV: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.widget.AbsListView: int getBottomPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.app.AlertDialog: android.widget.Button getButton(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.Notification.Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification.Action:android.os.Parcelable>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.media.ExifInterface: boolean getLatLong(float[])>:<public>:<android.media.ExifInterface>
<android.graphics.drawable.NinePatchDrawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.location.Address: void setPostalCode(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.TableLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.nfc.NfcAdapter: boolean isNdefPushEnabled()>:<public>:<android.nfc.NfcAdapter>
<android.graphics.Point: void negate()>:<public final>:<android.graphics.Point:android.os.Parcelable>
<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>:<public static>:<android.content.ContentResolver>
<android.test.ProviderTestCase2: android.content.ContentProvider getProvider()>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.EGLExt: boolean eglPresentationTimeANDROID(android.opengl.EGLDisplay,android.opengl.EGLSurface,long)>:<public static native>:<android.opengl.EGLExt>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearPages()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.renderscript.FieldPacker: void subalign(int)>:<public>:<android.renderscript.FieldPacker>
<android.hardware.input.InputManager: void registerInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener,android.os.Handler)>:<public>:<android.hardware.input.InputManager>
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.provider.CalendarContract.EventsEntity: void <clinit>()>:<static>:<android.provider.CalendarContract.EventsEntity:android.provider.BaseColumns,android.provider.CalendarContract.SyncColumns,android.provider.CalendarContract.EventsColumns>
<android.view.KeyEvent: boolean isShiftPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.widget.TextView: void setHyphenationFrequency(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.le.ScanRecord: android.util.SparseArray getManufacturerSpecificData()>:<public>:<android.bluetooth.le.ScanRecord>
<android.view.inputmethod.InputMethodSession: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.view.ViewTreeObserver: void addOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.renderscript.Element: android.renderscript.Element U32_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.RemoteViews: void setImageViewIcon(int,android.graphics.drawable.Icon)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.SyncAdapterType: boolean equals(java.lang.Object)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.app.MediaRouteButton: boolean performClick()>:<public>:<android.app.MediaRouteButton:android.view.View>
<android.net.NetworkCapabilities: int describeContents()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.media.tv.TvInputInfo: void <clinit>()>:<static>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>:<public>:<android.media.AudioManager>
<android.util.LruCache: int evictionCount()>:<public final synchronized>:<android.util.LruCache>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>:<public>:<android.net.wifi.WifiManager>
<android.app.usage.NetworkStats: boolean getNextBucket(android.app.usage.NetworkStats.Bucket)>:<public>:<android.app.usage.NetworkStats:java.lang.AutoCloseable>
<android.media.MediaDescription: android.net.Uri getIconUri()>:<public>:<android.media.MediaDescription:android.os.Parcelable>
<android.database.DataSetObserver: void onInvalidated()>:<public>:<android.database.DataSetObserver>
<android.media.SyncParams: android.media.SyncParams setSyncSource(int)>:<public>:<android.media.SyncParams>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.LocalSocketAddress: java.lang.String getName()>:<public>:<android.net.LocalSocketAddress>
<android.bluetooth.BluetoothGatt: boolean readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<junit.framework.AssertionFailedError: void <init>()>:<public>:<junit.framework.AssertionFailedError:java.lang.AssertionError,java.lang.Error,java.lang.Throwable>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.hardware.fingerprint.FingerprintManager.AuthenticationResult: void <init>()>:<>:<android.hardware.fingerprint.FingerprintManager.AuthenticationResult>
<android.widget.Toolbar.LayoutParams: void <init>(android.widget.Toolbar.LayoutParams)>:<public>:<android.widget.Toolbar.LayoutParams:android.app.ActionBar.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.view.accessibility.AccessibilityWindowInfo: int getType()>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.view.TextureView: boolean isOpaque()>:<public>:<android.view.TextureView:android.view.View>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.graphics.BitmapRegionDecoder: void recycle()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.media.PlaybackParams: void <clinit>()>:<static>:<android.media.PlaybackParams:android.os.Parcelable>
<android.animation.Keyframe: android.animation.Keyframe clone()>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.content.IntentSender: java.lang.String toString()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.text.style.SuggestionSpan: boolean equals(java.lang.Object)>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.renderscript.Short3: void <init>()>:<public>:<android.renderscript.Short3>
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.webkit.CookieSyncManager: void run()>:<public volatile>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.content.pm.PackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>:<public>:<android.net.sip.SipManager>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.drawable.Drawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.Drawable>
<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.provider.Settings.System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.view.Window: void setChildDrawable(int,android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.telephony.gsm.SmsMessage: boolean isMWIClearMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript.Priority)>:<public>:<android.renderscript.RenderScript>
<android.widget.AutoCompleteTextView.Validator: java.lang.CharSequence fixText(java.lang.CharSequence)>:<public abstract>:<android.widget.AutoCompleteTextView.Validator>
<android.widget.PopupWindow: void update(int,int,int,int,boolean)>:<public>:<android.widget.PopupWindow>
<android.test.mock.MockPackageManager: java.util.List getInstalledApplications(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder before(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.media.tv.TvInputInfo: java.lang.CharSequence loadLabel(android.content.Context)>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.view.MenuItem: int getOrder()>:<public abstract>:<android.view.MenuItem>
<android.text.style.DynamicDrawableSpan: void <init>()>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)>:<public>:<android.media.RemoteControlClient>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.text.format.DateFormat: void <init>()>:<public>:<android.text.format.DateFormat>
<android.media.MediaRouter.UserRouteInfo: void setName(int)>:<public>:<android.media.MediaRouter.UserRouteInfo:android.media.MediaRouter.RouteInfo>
<android.graphics.Region: boolean quickReject(int,int,int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.opengl.GLES30: boolean glIsVertexArray(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(int)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.Throwable)>:<public>:<android.hardware.camera2.CameraAccessException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.view.Window: void setFeatureInt(int,int)>:<public abstract>:<android.view.Window>
<android.app.admin.DeviceAdminInfo: java.lang.String toString()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<org.json.JSONStringer: org.json.JSONStringer key(java.lang.String)>:<public>:<org.json.JSONStringer>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButWhitespaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.Entity>
<android.print.PrintAttributes: int describeContents()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.location.Criteria: void setHorizontalAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.preference.Preference: float getPersistedFloat(float)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.test.ActivityTestCase: android.app.Activity getActivity()>:<protected>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewStub: void draw(android.graphics.Canvas)>:<public>:<android.view.ViewStub:android.view.View>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: boolean hasFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: void onSizeChanged(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glPointSize(float)>:<public static native>:<android.opengl.GLES10>
<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest.Key)>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()>:<public static>:<android.security.NetworkSecurityPolicy>
<android.app.ActivityManager.AppTask: void finishAndRemoveTask()>:<public>:<android.app.ActivityManager.AppTask>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.View: android.view.ViewParent getParent()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>:<public abstract>:<android.view.ViewParent>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.Allocation: void destroy()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.animation.ValueAnimator: android.animation.Animator clone()>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.util.LongSparseArray: void clear()>:<public>:<android.util.LongSparseArray:java.lang.Cloneable>
<android.app.ActionBar.Tab: java.lang.CharSequence getText()>:<public abstract>:<android.app.ActionBar.Tab>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.media.session.MediaController.Callback: void onAudioInfoChanged(android.media.session.MediaController.PlaybackInfo)>:<public>:<android.media.session.MediaController.Callback>
<android.preference.PreferenceActivity: void invalidateHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.xmlpull.v1.XmlPullParser: boolean isAttributeDefault(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.test.ProviderTestCase2: android.content.ContentResolver newResolverWithContentProviderFromSql(android.content.Context,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,int,java.lang.String)>:<public static>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.View: boolean isImportantForAccessibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.media.PlaybackParams: android.media.PlaybackParams setAudioFallbackMode(int)>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>:<public final>:<android.media.MediaCodec>
<android.test.mock.MockResources: java.io.InputStream openRawResource(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.RemoteInput: android.os.Bundle getExtras()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.widget.CheckedTextView: void setChecked(boolean)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.hardware.Camera.Parameters: void setZoom(int)>:<public>:<android.hardware.Camera.Parameters>
<android.widget.GridLayout.LayoutParams: boolean equals(java.lang.Object)>:<public>:<android.widget.GridLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera.PreviewCallback)>:<public final>:<android.hardware.Camera>
<android.webkit.CookieManager: java.lang.Object clone()>:<protected>:<android.webkit.CookieManager>
<android.content.res.XmlResourceParser: void close()>:<public abstract>:<android.content.res.XmlResourceParser:org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.AutoCloseable>
<android.database.sqlite.SQLiteOpenHelper: void close()>:<public synchronized>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.Activity: void finishAndRemoveTask()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.TableLayout: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.Environment: java.io.File getRootDirectory()>:<public static>:<android.os.Environment>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.provider.Telephony.Mms.Sent: void <clinit>()>:<static>:<android.provider.Telephony.Mms.Sent:android.provider.Telephony.BaseMmsColumns>
<android.os.RemoteCallbackList: void finishBroadcast()>:<public>:<android.os.RemoteCallbackList>
<android.hardware.camera2.CameraCaptureSession: android.view.Surface getInputSurface()>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.system.Os: void mkfifo(java.lang.String,int)>:<public static>:<android.system.Os>
<android.media.session.MediaController: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.media.session.MediaController>
<android.location.Location: boolean hasSpeed()>:<public>:<android.location.Location:android.os.Parcelable>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.hardware.Sensor: int getMinDelay()>:<public>:<android.hardware.Sensor>
<android.graphics.Movie: android.graphics.Movie decodeByteArray(byte[],int,int)>:<public static native>:<android.graphics.Movie>
<android.widget.Filter.FilterResults: void <init>()>:<public>:<android.widget.Filter.FilterResults>
<android.renderscript.Long3: void <init>(long,long,long)>:<public>:<android.renderscript.Long3>
<android.inputmethodservice.Keyboard.Key: boolean isInside(int,int)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.view.Window: void setUiOptions(int)>:<public>:<android.view.Window>
<android.view.View: int getScrollBarStyle()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.LayerDrawable: boolean isAutoMirrored()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.LinkAddress: int getFlags()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.media.MediaTimestamp: float getMediaClockRate()>:<public>:<android.media.MediaTimestamp>
<android.location.Address: void setLatitude(double)>:<public>:<android.location.Address:android.os.Parcelable>
<android.media.audiofx.AudioEffect: boolean hasControl()>:<public>:<android.media.audiofx.AudioEffect>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>:<public abstract>:<android.view.TextureView.SurfaceTextureListener>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSInvalidStateException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.drm.DrmSupportInfo: void addMimeType(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<android.animation.ValueAnimator: int getRepeatCount()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int,java.util.List)>:<public static>:<android.net.ProxyInfo:android.os.Parcelable>
<android.net.http.SslError: int getPrimaryError()>:<public>:<android.net.http.SslError>
<android.media.MediaDescription.Builder: void <init>()>:<public>:<android.media.MediaDescription.Builder>
<android.app.NativeActivity: void onDestroy()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.text.format.Time: boolean before(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.os.TransactionTooLargeException: void <init>(java.lang.String)>:<public>:<android.os.TransactionTooLargeException:android.os.RemoteException,android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Matrix: void mapVectors(float[])>:<public>:<android.graphics.Matrix>
<android.telecom.RemoteConnection: void stopDtmfTone()>:<public>:<android.telecom.RemoteConnection>
<android.widget.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.nfc.TagLostException: void <init>(java.lang.String)>:<public>:<android.nfc.TagLostException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>:<public abstract>:<android.view.ViewParent>
<android.renderscript.ScriptIntrinsicBLAS: void CTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.view.View: void sendAccessibilityEvent(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.BoringLayout: int getLineDescent(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.opengl.GLES10: void glScalex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.View: int resolveSize(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.Virtualizer.Settings: void <init>()>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.app.ActivityGroup: void <init>(boolean)>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Script: double getVarD(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.opengl.GLES30: void glClearBufferfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.Display.Mode: int getModeId()>:<public>:<android.view.Display.Mode:android.os.Parcelable>
<android.view.accessibility.AccessibilityRecord: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.location.Geocoder: boolean isPresent()>:<public static>:<android.location.Geocoder>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Element: android.renderscript.Element I8_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>:<public>:<android.hardware.display.DisplayManager>
<android.transition.ChangeTransform: boolean getReparentWithOverlay()>:<public>:<android.transition.ChangeTransform:android.transition.Transition>
<android.widget.AbsListView: boolean hasTextFilter()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.RotateDrawable: void setPivotX(float)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader.TileMode)>:<public>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.widget.TextView: int getImeOptions()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RatingBar: void <init>(android.content.Context)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.net.wifi.WifiManager.WifiLock: void release()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.speech.RecognitionListener: void onError(int)>:<public abstract>:<android.speech.RecognitionListener>
<android.content.pm.PackageInstaller.Session: void <init>()>:<>:<android.content.pm.PackageInstaller.Session:java.io.Closeable>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.opengl.GLES31: void glProgramUniform3i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.test.mock.MockContext: void unregisterReceiver(android.content.BroadcastReceiver)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getDigests()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.graphics.Picture: int getWidth()>:<public>:<android.graphics.Picture>
<android.graphics.NinePatch: int getDensity()>:<public>:<android.graphics.NinePatch>
<android.view.ViewStructure: void setSelected(boolean)>:<public abstract>:<android.view.ViewStructure>
<android.app.Activity: int getChangingConfigurations()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.Rational: int hashCode()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.text.method.MultiTapKeyListener: int getInputType()>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.view.animation.Animation: boolean isFillEnabled()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<junit.runner.BaseTestRunner: java.lang.Class loadSuiteClass(java.lang.String)>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.view.View.OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>:<public abstract>:<android.view.View.OnLayoutChangeListener>
<android.test.SyncBaseInstrumentation: void syncProvider(android.net.Uri,java.lang.String,java.lang.String)>:<protected>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewGroup: void onViewRemoved(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.RectF: boolean isEmpty()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.database.CursorWrapper: boolean isLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.sip.SipAudioCall.Listener: void onRinging(android.net.sip.SipAudioCall,android.net.sip.SipProfile)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.os.Debug: void resetGlobalClassInitCount()>:<public static>:<android.os.Debug>
<android.preference.EditTextPreference: void <init>(android.content.Context)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.AudioManager: boolean isVolumeFixed()>:<public>:<android.media.AudioManager>
<android.hardware.usb.UsbInterface: void <init>()>:<>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.telecom.InCallService: boolean onUnbind(android.content.Intent)>:<public>:<android.telecom.InCallService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.media.MediaPlayer: void setSurface(android.view.Surface)>:<public>:<android.media.MediaPlayer>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,java.lang.String)>:<public>:<android.content.ClipData.Item>
<android.print.PrintAttributes.Margins: boolean equals(java.lang.Object)>:<public>:<android.print.PrintAttributes.Margins>
<android.telecom.Conference: void <init>(android.telecom.PhoneAccountHandle)>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.nfc.tech.NfcBarcode: android.nfc.tech.NfcBarcode get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.print.PrintJob: android.print.PrintJobInfo getInfo()>:<public>:<android.print.PrintJob>
<android.app.Instrumentation: void onCreate(android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.hardware.display.VirtualDisplay: android.view.Surface getSurface()>:<public>:<android.hardware.display.VirtualDisplay>
<android.system.Os: void setenv(java.lang.String,java.lang.String,boolean)>:<public static>:<android.system.Os>
<android.content.SyncResult: boolean hasSoftError()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.view.View: void setFitsSystemWindows(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.tv.TvInputInfo: android.content.Intent createSetupIntent()>:<public>:<android.media.tv.TvInputInfo:android.os.Parcelable>
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.media.AudioRecord: int read(float[],int,int,int)>:<public>:<android.media.AudioRecord>
<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebViewFragment: void <init>()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.app.ActivityGroup: void onDestroy()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.SurfaceHolder: void setKeepScreenOn(boolean)>:<public abstract>:<android.view.SurfaceHolder>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.LoaderManager.LoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.AppOpsManager.OnOpChangedListener: void onOpChanged(java.lang.String,java.lang.String)>:<public abstract>:<android.app.AppOpsManager.OnOpChangedListener>
<android.view.animation.LayoutAnimationController: void setDelay(float)>:<public>:<android.view.animation.LayoutAnimationController>
<android.sax.RootElement: void <init>(java.lang.String)>:<public>:<android.sax.RootElement:android.sax.Element>
<android.content.res.AssetManager.AssetInputStream: int read(byte[])>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.opengl.GLES20: void glClearStencil(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.AdapterView: int getSelectedItemPosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment)>:<public static>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.os.IBinder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>:<public abstract>:<android.os.IBinder>
<android.view.View: void scrollTo(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Gallery: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.text.InputFilter.AllCaps: void <init>()>:<public>:<android.text.InputFilter.AllCaps:android.text.InputFilter>
<android.location.Location: void setAccuracy(float)>:<public>:<android.location.Location:android.os.Parcelable>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.renderscript.Element: android.renderscript.Element FONT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.provider.Settings.System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.text.Layout: int getLineVisibleEnd(int)>:<public>:<android.text.Layout>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.os.AsyncTask: void execute(java.lang.Runnable)>:<public static>:<android.os.AsyncTask>
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.test.AndroidTestRunner: void runTest(junit.framework.TestResult)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentProvider: boolean onCreate()>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.content.AsyncQueryHandler: void handleMessage(android.os.Message)>:<public>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.hardware.Camera.Parameters: int getJpegThumbnailQuality()>:<public>:<android.hardware.Camera.Parameters>
<android.view.View: void setTextDirection(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.StateSet: void <clinit>()>:<static>:<android.util.StateSet>
<org.json.JSONObject: void <init>(org.json.JSONTokener)>:<public>:<org.json.JSONObject>
<android.widget.PopupWindow: void <init>()>:<public>:<android.widget.PopupWindow>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDialog()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.net.http.SslCertificate>
<android.media.MediaSync.Callback: void <init>()>:<public>:<android.media.MediaSync.Callback>
<android.widget.PopupWindow: void <init>(android.content.Context)>:<public>:<android.widget.PopupWindow>
<android.app.Instrumentation: android.os.Bundle getBinderCounts()>:<public>:<android.app.Instrumentation>
<android.app.Dialog: void dismiss()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.CheckedTextView: android.content.res.ColorStateList getCheckMarkTintList()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.FragmentManager: void enableDebugLogging(boolean)>:<public static>:<android.app.FragmentManager>
<android.mtp.MtpObjectInfo: int getImagePixDepth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockContext: void setWallpaper(java.io.InputStream)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.MenuItem: boolean isChecked()>:<public abstract>:<android.view.MenuItem>
<android.telecom.Call: void unregisterCallback(android.telecom.Call.Callback)>:<public>:<android.telecom.Call>
<android.widget.RemoteViews: void setViewVisibility(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.FragmentManager: boolean popBackStackImmediate(int,int)>:<public abstract>:<android.app.FragmentManager>
<android.media.session.MediaSession.Token: void <init>()>:<>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.view.animation.LayoutAnimationController: boolean willOverlap()>:<public>:<android.view.animation.LayoutAnimationController>
<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.widget.ProgressBar: void <init>(android.content.Context)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.content.CursorLoader: void <init>(android.content.Context)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.text.method.NumberKeyListener: void <init>()>:<public>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int,boolean)>:<public abstract>:<android.app.ActionBar>
<android.app.DialogFragment: int getTheme()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.drm.DrmManagerClient: void release()>:<public>:<android.drm.DrmManagerClient>
<android.widget.ExpandableListAdapter: java.lang.Object getGroup(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setEmailArguments(java.lang.String,java.lang.String)>:<public>:<android.text.style.TtsSpan.ElectronicBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,int[],int)>:<public static native>:<android.opengl.GLES31Ext>
<android.content.ContentResolver: void removeStatusChangeListener(java.lang.Object)>:<public static>:<android.content.ContentResolver>
<android.telecom.PhoneAccount: int describeContents()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.hardware.Camera.Parameters: int getMaxNumMeteringAreas()>:<public>:<android.hardware.Camera.Parameters>
<android.view.View: void forceLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>:<public abstract>:<android.app.job.JobScheduler>
<android.preference.RingtonePreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.MediaPlayer: int getSelectedTrack(int)>:<public>:<android.media.MediaPlayer>
<android.content.ComponentName: void <clinit>()>:<static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.webkit.WebView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.json.JSONArray: void <init>()>:<public>:<org.json.JSONArray>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.AutoCompleteTextView: boolean isPopupShowing()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.content.pm.PackageItemInfo.DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>:<public final>:<android.content.pm.PackageItemInfo.DisplayNameComparator:java.util.Comparator>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.mtp.MtpDevice: byte[] getObject(int,int)>:<public>:<android.mtp.MtpDevice>
<android.content.ComponentName: int compareTo(java.lang.Object)>:<public volatile>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.view.MotionEvent: float getToolMinor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.SyncResult: java.lang.String toDebugString()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void showInputMethodAndSubtypeEnabler(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.location.Location: void reset()>:<public>:<android.location.Location:android.os.Parcelable>
<android.telephony.CellIdentityLte: int getMnc()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.telephony.SubscriptionInfo: int getIconTint()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.media.browse.MediaBrowser: boolean isConnected()>:<public>:<android.media.browse.MediaBrowser>
<android.renderscript.Element: android.renderscript.Element I16_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.view.animation.GridLayoutAnimationController: boolean willOverlap()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.renderscript.Type: android.renderscript.Type createX(android.renderscript.RenderScript,android.renderscript.Element,int)>:<public static>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.printservice.PrinterDiscoverySession: void removePrinters(java.util.List)>:<public final>:<android.printservice.PrinterDiscoverySession>
<android.provider.VoicemailContract.Voicemails: void <clinit>()>:<static>:<android.provider.VoicemailContract.Voicemails:android.provider.BaseColumns,android.provider.OpenableColumns>
<android.widget.CheckedTextView: int[] onCreateDrawableState(int)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.drawable.Drawable: boolean canApplyTheme()>:<public>:<android.graphics.drawable.Drawable>
<android.view.ViewConfiguration: int getScrollBarSize()>:<public static>:<android.view.ViewConfiguration>
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.ContentProviderClient>
<android.net.CaptivePortal: void reportCaptivePortalDismissed()>:<public>:<android.net.CaptivePortal:android.os.Parcelable>
<android.view.ViewDebug.IntToString: java.lang.String 'to'()>:<public abstract>:<android.view.ViewDebug.IntToString:java.lang.annotation.Annotation>
<android.net.LinkProperties: int describeContents()>:<public>:<android.net.LinkProperties:android.os.Parcelable>
<android.app.job.JobService: boolean onStopJob(android.app.job.JobParameters)>:<public abstract>:<android.app.job.JobService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>:<public abstract>:<android.webkit.WebSettings>
<android.net.wifi.p2p.WifiP2pConfig: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pConfig:android.os.Parcelable>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>:<public static>:<android.widget.Toast>
<android.bluetooth.BluetoothHealthAppConfiguration: void <init>()>:<>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create2D(android.renderscript.RenderScript,android.renderscript.Allocation)>:<public static>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.net.NetworkCapabilities: int hashCode()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>:<public static final>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.ActionMode: void invalidate()>:<public abstract>:<android.view.ActionMode>
<android.os.DropBoxManager.Entry: void close()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.view.Window: void setEnterTransition(android.transition.Transition)>:<public>:<android.view.Window>
<android.telecom.Conference: void destroy()>:<public final>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.renderscript.ScriptIntrinsicLUT: void setRed(int,int)>:<public>:<android.renderscript.ScriptIntrinsicLUT:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.media.ImageWriter: android.media.Image dequeueInputImage()>:<public>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.text.style.ScaleXSpan: int getSpanTypeId()>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.hardware.camera2.CameraCharacteristics.Key: java.lang.String toString()>:<public>:<android.hardware.camera2.CameraCharacteristics.Key>
<android.os.Parcel: int dataPosition()>:<public final>:<android.os.Parcel>
<android.location.LocationProvider: int getAccuracy()>:<public>:<android.location.LocationProvider>
<android.graphics.Bitmap: int getHeight()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.drm.DrmManagerClient: boolean canHandle(android.net.Uri,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)>:<public>:<android.sax.Element>
<android.transition.Slide: int getSlideEdge()>:<public>:<android.transition.Slide:android.transition.Visibility,android.transition.Transition>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<protected>:<android.os.Binder:android.os.IBinder>
<android.widget.ZoomControls: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.animation.Animator: void pause()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.telephony.SmsMessage: int getIndexOnSim()>:<public>:<android.telephony.SmsMessage>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>:<public>:<android.view.MenuInflater>
<android.content.IntentFilter: java.lang.String getAction(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.CalendarView: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ArrayAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.provider.ContactsContract.AggregationExceptions: void <init>()>:<>:<android.provider.ContactsContract.AggregationExceptions:android.provider.BaseColumns>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>:<public>:<android.view.View.AccessibilityDelegate>
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.renderscript.ScriptIntrinsicBLAS: void ZHER2(int,android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.AutoCompleteTextView: void onDisplayHint(int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int)>:<public abstract>:<android.media.audiofx.Visualizer.OnDataCaptureListener>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.media.MediaRecorder: void setCaptureRate(double)>:<public>:<android.media.MediaRecorder>
<android.view.ViewStructure: int addChildCount(int)>:<public abstract>:<android.view.ViewStructure>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>:<public>:<android.net.ConnectivityManager>
<android.net.wifi.WpsInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WpsInfo:android.os.Parcelable>
<android.telecom.Connection: void onCallAudioStateChanged(android.telecom.CallAudioState)>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,java.lang.CharSequence,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.net.wifi.WifiEnterpriseConfig: void setDomainSuffixMatch(java.lang.String)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.media.MediaPlayer.TrackInfo: int describeContents()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.hardware.camera2.CameraCharacteristics.Key: void <init>()>:<>:<android.hardware.camera2.CameraCharacteristics.Key>
<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.SectionIndexer: int getPositionForSection(int)>:<public abstract>:<android.widget.SectionIndexer>
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.DropBoxManager.Entry: void <clinit>()>:<static>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.database.ContentObservable: void notifyChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>:<public>:<android.media.AudioManager>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace[] values()>:<public static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.provider.ContactsContract.CommonDataKinds.Organization: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Organization:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.database.MergeCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.wifi.p2p.WifiP2pManager.GroupInfoListener: void onGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroup)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.GroupInfoListener>
<android.app.AppOpsManager: void finishOp(java.lang.String,int,java.lang.String)>:<public>:<android.app.AppOpsManager>
<android.animation.Animator: void setTarget(java.lang.Object)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()>:<public>:<android.net.sip.SipAudioCall>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.database.AbstractWindowedCursor: double getDouble(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.widget.ListPopupWindow: void setPromptPosition(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.app.KeyguardManager: boolean isDeviceSecure()>:<public>:<android.app.KeyguardManager>
<android.view.View: boolean isLongClickable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.PackageInstaller.SessionCallback: void <init>()>:<public>:<android.content.pm.PackageInstaller.SessionCallback>
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>:<public>:<android.webkit.WebStorage>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)>:<public>:<android.media.AsyncPlayer>
<android.os.Process: int myTid()>:<public static final>:<android.os.Process>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: void setRotationY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.Builder: android.app.Notification.Builder setSubText(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation>
<android.media.midi.MidiDeviceStatus: void <clinit>()>:<static>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.hardware.camera2.CaptureRequest: void <init>()>:<>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.content.ContentResolver: void releasePersistableUriPermission(android.net.Uri,int)>:<public>:<android.content.ContentResolver>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>:<public>:<android.bluetooth.le.BluetoothLeAdvertiser>
<android.drm.DrmManagerClient: android.drm.DrmInfo acquireDrmInfo(android.drm.DrmInfoRequest)>:<public>:<android.drm.DrmManagerClient>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setVisibleInDownloadsUi(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.view.ViewGroup: int indexOfChild(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>:<public final>:<android.content.res.AssetManager:java.lang.AutoCloseable>
<android.widget.ImageView: void setAlpha(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.app.assist.AssistStructure.ViewNode: int getScrollY()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.app.Activity: boolean isChangingConfigurations()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.util.AttributeSet: java.lang.String getAttributeValue(int)>:<public abstract>:<android.util.AttributeSet>
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.os.Process: android.os.UserHandle myUserHandle()>:<public static final>:<android.os.Process>
<android.gesture.GestureOverlayView: void cancelGesture()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.text.method.ArrowKeyMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.Bitmap: void setWidth(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.content.pm.PackageInstaller.SessionCallback: void onProgressChanged(int,float)>:<public abstract>:<android.content.pm.PackageInstaller.SessionCallback>
<android.preference.DialogPreference: void setDialogMessage(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.TextClock: void <init>(android.content.Context)>:<public>:<android.widget.TextClock:android.widget.TextView,android.view.View>
<android.telecom.Connection: void setRinging()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.view.View: void addFocusables(java.util.ArrayList,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>:<public abstract>:<android.transition.PathMotion>
<android.app.Dialog: android.view.Window getWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.speech.tts.SynthesisRequest: java.lang.String getLanguage()>:<public>:<android.speech.tts.SynthesisRequest>
<android.service.voice.VoiceInteractionSession: void onRequestCommand(android.service.voice.VoiceInteractionSession.CommandRequest)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.hardware.camera2.CaptureRequest: java.util.List getKeys()>:<public>:<android.hardware.camera2.CaptureRequest:android.hardware.camera2.CameraMetadata,android.os.Parcelable>
<android.service.voice.VoiceInteractionSession.Request: int getCallingUid()>:<public>:<android.service.voice.VoiceInteractionSession.Request>
<android.graphics.Region: boolean isEmpty()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.util.Range: android.util.Range intersect(android.util.Range)>:<public>:<android.util.Range>
<android.telecom.Call.Details: android.telecom.DisconnectCause getDisconnectCause()>:<public>:<android.telecom.Call.Details>
<android.view.InputDevice: int getProductId()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.graphics.Matrix: void setTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.widget.ListPopupWindow: int getSelectedItemPosition()>:<public>:<android.widget.ListPopupWindow>
<android.drm.ProcessedData: java.lang.String getSubscriptionId()>:<public>:<android.drm.ProcessedData>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telecom.Call.Callback: void onDetailsChanged(android.telecom.Call,android.telecom.Call.Details)>:<public>:<android.telecom.Call.Callback>
<android.graphics.drawable.GradientDrawable: void setShape(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Allocation: void copyTo(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.textservice.TextInfo: int getSequence()>:<public>:<android.view.textservice.TextInfo:android.os.Parcelable>
<android.opengl.GLDebugHelper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.widget.FrameLayout.LayoutParams: void <init>(android.widget.FrameLayout.LayoutParams)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.content.Loader: void registerListener(int,android.content.Loader.OnLoadCompleteListener)>:<public>:<android.content.Loader>
<android.hardware.usb.UsbAccessory: void <init>()>:<>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.renderscript.Script.LaunchOptions: int getZStart()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.print.PrinterInfo: java.lang.String getDescription()>:<public>:<android.print.PrinterInfo:android.os.Parcelable>
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff.Mode)>:<public final>:<android.widget.ImageView:android.view.View>
<android.media.MediaDrm.CryptoSession: byte[] decrypt(byte[],byte[],byte[])>:<public>:<android.media.MediaDrm.CryptoSession>
<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setDeviceName(java.lang.String)>:<public>:<android.bluetooth.le.ScanFilter.Builder>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.telecom.Call.Details: boolean can(int)>:<public>:<android.telecom.Call.Details>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int,long,long,float)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.content.pm.FeatureGroupInfo: void <clinit>()>:<static>:<android.content.pm.FeatureGroupInfo:android.os.Parcelable>
<android.preference.PreferenceGroup: void onPrepareForRemoval()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>:<public>:<android.content.res.Resources>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getBlockModes()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.service.carrier.CarrierMessagingService.SendSmsResult: void <init>(int,int)>:<public>:<android.service.carrier.CarrierMessagingService.SendSmsResult>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.Activity: void openContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES20: void glDetachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)>:<public static>:<android.app.ActivityOptions>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.Paint: boolean isLinearText()>:<public final>:<android.graphics.Paint>
<android.gesture.GestureOverlayView: boolean isGesturing()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.content.SyncInfo: void <init>()>:<>:<android.content.SyncInfo:android.os.Parcelable>
<android.service.carrier.CarrierService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.carrier.CarrierService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.TokenWatcher: boolean isAcquired()>:<public>:<android.os.TokenWatcher>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine)>:<public>:<android.net.PskKeyManager>
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.location.Location: void removeBearing()>:<public>:<android.location.Location:android.os.Parcelable>
<android.opengl.EGL14: boolean eglBindTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>:<public static native>:<android.opengl.EGL14>
<android.provider.VoicemailContract: void <init>()>:<>:<android.provider.VoicemailContract>
<android.telecom.VideoProfile: int getVideoState()>:<public>:<android.telecom.VideoProfile:android.os.Parcelable>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int,android.content.res.Resources.Theme)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>:<public>:<android.telephony.TelephonyManager>
<android.service.media.CameraPrewarmService: void onPrewarm()>:<public abstract>:<android.service.media.CameraPrewarmService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int,int)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.content.UriPermission: int describeContents()>:<public>:<android.content.UriPermission:android.os.Parcelable>
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>:<public>:<android.os.RemoteCallbackList>
<android.speech.tts.UtteranceProgressListener: void onError(java.lang.String)>:<public abstract>:<android.speech.tts.UtteranceProgressListener>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.util.MonthDisplayHelper: int getOffset()>:<public>:<android.util.MonthDisplayHelper>
<android.test.mock.MockPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.Context: int checkPermission(java.lang.String,int,int)>:<public abstract>:<android.content.Context>
<android.util.JsonWriter: android.util.JsonWriter endArray()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.sax.Element: void <init>()>:<>:<android.sax.Element>
<android.gesture.GestureLibrary: void removeGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.graphics.drawable.VectorDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>:<public>:<android.media.RingtoneManager>
<android.drm.DrmSupportInfo: java.lang.String getDescription()>:<public>:<android.drm.DrmSupportInfo>
<junit.framework.TestSuite: java.util.Enumeration tests()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.database.CursorWrapper: double getDouble(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.View: boolean isLayoutDirectionResolved()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>:<public>:<android.provider.DocumentsProvider:android.content.ContentProvider>
<android.inputmethodservice.InputMethodService: void setTheme(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.WallpaperInfo: java.lang.String toString()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>:<public static>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setPort(int)>:<public>:<android.net.sip.SipProfile.Builder>
<android.net.sip.SipAudioCall: void answerCall(int)>:<public>:<android.net.sip.SipAudioCall>
<android.renderscript.Type: int getYuv()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.widget.AbsListView: int getTranscriptMode()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Activity: void setActionBar(android.widget.Toolbar)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.View: void measure(int,int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)>:<public>:<android.net.wifi.p2p.WifiP2pDeviceList:android.os.Parcelable>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureSupported(java.lang.String)>:<public final>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.view.GestureDetector.SimpleOnGestureListener: void onShowPress(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.telecom.ConnectionRequest: int getVideoState()>:<public>:<android.telecom.ConnectionRequest:android.os.Parcelable>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES30: void glProgramBinary(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.location.Location: void setAltitude(double)>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.FrameLayout: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.graphics.Matrix: void setScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.opengl.GLES10: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES10>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbDevice)>:<public>:<android.hardware.usb.UsbManager>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.CharSequence getTitle()>:<public abstract>:<android.webkit.WebChromeClient.FileChooserParams>
<android.widget.ListPopupWindow: boolean isShowing()>:<public>:<android.widget.ListPopupWindow>
<android.view.inputmethod.InputMethodManager: void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[])>:<public>:<android.view.inputmethod.InputMethodManager>
<android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.widget.SimpleCursorTreeAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>:<public abstract>:<android.widget.SimpleCursorTreeAdapter.ViewBinder>
<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSIllegalArgumentException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEditable()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.service.media.CameraPrewarmService: void <init>()>:<public>:<android.service.media.CameraPrewarmService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Camera>
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: boolean canScrollVertically(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent)>:<public>:<android.media.RemoteControlClient>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setStartDate(java.util.Date)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>:<public static>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.database.CursorWindow: byte[] getBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: int checkSignatures(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.hardware.camera2.params.LensShadingMap: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.LensShadingMap>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>:<public abstract>:<android.webkit.WebSettings>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeTxPowerLevel(boolean)>:<public>:<android.bluetooth.le.AdvertiseData.Builder>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo build()>:<public>:<android.print.PrinterInfo.Builder>
<android.opengl.GLES31: void glGenProgramPipelines(int,int[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>:<public abstract>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getIndeterminateTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.text.method.BaseMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>:<public>:<android.app.KeyguardManager>
<android.app.Activity: boolean moveTaskToBack(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.drawable.BitmapDrawable: int getGravity()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.database.MergeCursor: int getCount()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.json.JSONObject: int length()>:<public>:<org.json.JSONObject>
<android.os.FileObserver: void <init>(java.lang.String)>:<public>:<android.os.FileObserver>
<android.graphics.Rect: boolean contains(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.webkit.WebSettings: boolean getBlockNetworkLoads()>:<public abstract>:<android.webkit.WebSettings>
<junit.framework.TestSuite: java.lang.String getName()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.provider.MediaStore: void <init>()>:<public>:<android.provider.MediaStore>
<android.system.Os: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)>:<public static>:<android.system.Os>
<android.content.ContentUris: void <init>()>:<public>:<android.content.ContentUris>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.telecom.RemoteConference: int getState()>:<public final>:<android.telecom.RemoteConference>
<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>:<public>:<android.util.ArrayMap:java.util.Map>
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.util.Log: void <init>()>:<>:<android.util.Log>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)>:<public>:<android.media.AudioAttributes.Builder>
<android.widget.AdapterView: android.widget.Adapter getAdapter()>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>:<public final>:<android.view.accessibility.CaptioningManager>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newSetOperation(android.net.Uri,android.accounts.Account,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.Network: javax.net.SocketFactory getSocketFactory()>:<public>:<android.net.Network:android.os.Parcelable>
<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int)>:<public abstract>:<android.telephony.CellInfo:android.os.Parcelable>
<android.bluetooth.le.AdvertiseCallback: void <init>()>:<public>:<android.bluetooth.le.AdvertiseCallback>
<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.textservice.SpellCheckerSubtype: int getNameResId()>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.renderscript.FieldPacker: android.renderscript.Short2 subShort2()>:<public>:<android.renderscript.FieldPacker>
<android.renderscript.RenderScript.RSErrorHandler: void run()>:<public>:<android.renderscript.RenderScript.RSErrorHandler:java.lang.Runnable>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>:<public final>:<android.graphics.Canvas>
<android.nfc.NfcAdapter: void disableReaderMode(android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.webkit.WebView: void removeJavascriptInterface(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>:<public>:<android.view.textservice.SuggestionsInfo:android.os.Parcelable>
<android.appwidget.AppWidgetProviderInfo: android.os.UserHandle getProfile()>:<public final>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.widget.ListView: void addHeaderView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<org.json.JSONArray: java.lang.String optString(int,java.lang.String)>:<public>:<org.json.JSONArray>
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setUserAuthenticationRequired(boolean)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.test.mock.MockContext: void startActivity(android.content.Intent,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.telecom.RemoteConference: void stopDtmfTone()>:<public>:<android.telecom.RemoteConference>
<android.graphics.drawable.shapes.Shape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Allocation: void copyFrom(android.renderscript.BaseObj[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.StackView: void showNext()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.SharedPreferences.Editor: boolean commit()>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.widget.CursorTreeAdapter: boolean hasStableIds()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>:<public>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.media.browse.MediaBrowser: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.media.browse.MediaBrowser>
<android.text.style.StyleSpan: void <init>(int)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.service.dreams.DreamService: void onDestroy()>:<public>:<android.service.dreams.DreamService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.Window.Callback>
<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebChromeClient>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.security.keystore.KeyProtection: int getPurposes()>:<public>:<android.security.keystore.KeyProtection:java.security.KeyStore.ProtectionParameter>
<android.preference.DialogPreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.database.sqlite.SQLiteDatabase.CursorFactory: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public abstract>:<android.database.sqlite.SQLiteDatabase.CursorFactory>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config valueOf(java.lang.String)>:<public static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.DatePickerDialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)>:<public static>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.view.View: void setTranslationX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle)>:<public>:<android.os.UserManager>
<android.telecom.RemoteConference: android.os.Bundle getExtras()>:<public final>:<android.telecom.RemoteConference>
<android.widget.ArrayAdapter: int getCount()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>:<public static>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.app.ListFragment: void onDestroyView()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.widget.TwoLineListItem: android.widget.TextView getText2()>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.webkit.URLUtil: java.lang.String guessUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.hardware.display.VirtualDisplay: void release()>:<public>:<android.hardware.display.VirtualDisplay>
<android.opengl.GLES31Ext: void glPatchParameteriEXT(int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.provider.Contacts.Groups: void <init>()>:<>:<android.provider.Contacts.Groups:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>:<public>:<android.media.MediaCodec>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float2)>:<public>:<android.renderscript.FieldPacker>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.widget.TextView: boolean moveCursorToVisibleOffset()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TableLayout: void setColumnStretchable(int,boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.location.Criteria: void setSpeedRequired(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.test.TouchUtils: void longClickView(android.test.ActivityInstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,java.lang.CharSequence,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.widget.LinearLayout: void setShowDividers(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.preference.Preference: void <init>(android.content.Context)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.test.mock.MockContext: android.content.Context createConfigurationContext(android.content.res.Configuration)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.text.Layout: int getHeight()>:<public>:<android.text.Layout>
<android.app.TabActivity: void onContentChanged()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Region: boolean set(int,int,int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.view.MotionEvent: float getYPrecision()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.ActivityManager: void clearWatchHeapLimit()>:<public>:<android.app.ActivityManager>
<android.app.TabActivity: void setDefaultTab(int)>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Matrix: boolean preScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.telecom.DisconnectCause: void <clinit>()>:<static>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.text.style.StrikethroughSpan: int getSpanTypeId()>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.transition.PathMotion: void <init>()>:<public>:<android.transition.PathMotion>
<android.os.BaseBundle: java.util.Set keySet()>:<public>:<android.os.BaseBundle>
<android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.DatePicker: long getMinDate()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newUpdate(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.opengl.GLES30: void glDeleteQueries(int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.view.Window: void setCallback(android.view.Window.Callback)>:<public>:<android.view.Window>
<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode.Callback)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.InputDevice.MotionRange: float getResolution()>:<public>:<android.view.InputDevice.MotionRange>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String getMediaId()>:<public>:<android.media.browse.MediaBrowser.MediaItem:android.os.Parcelable>
<org.json.JSONArray: org.json.JSONArray put(int,int)>:<public>:<org.json.JSONArray>
<android.content.ContextWrapper: java.io.File getCodeCacheDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.CharSequence,android.os.Bundle,java.io.File,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.net.TrafficStats: long getUidRxPackets(int)>:<public static>:<android.net.TrafficStats>
<android.widget.NumberPicker: int computeVerticalScrollRange()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncResult:android.os.Parcelable>
<org.json.JSONArray: long getLong(int)>:<public>:<org.json.JSONArray>
<android.net.NetworkCapabilities: int getLinkDownstreamBandwidthKbps()>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<junit.runner.BaseTestRunner: java.util.Properties getPreferences()>:<protected static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.database.sqlite.SQLiteCursor: boolean requery()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)>:<public>:<android.media.JetPlayer>
<android.view.MotionEvent: int getSource()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.pm.PackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.test.mock.MockContext: java.lang.String getPackageCodePath()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.R.mipmap: void <init>()>:<public>:<android.R.mipmap>
<android.util.ArraySet: boolean add(java.lang.Object)>:<public>:<android.util.ArraySet:java.util.Collection,java.util.Set>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)>:<public abstract>:<android.app.Application.ActivityLifecycleCallbacks>
<android.nfc.Tag: void <clinit>()>:<static>:<android.nfc.Tag:android.os.Parcelable>
<android.view.MotionEvent: float getHistoricalY(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.telephony.ServiceState: void setStateOutOfService()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.widget.ActionMenuView: boolean hideOverflowMenu()>:<public>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>:<public abstract>:<android.view.MenuItem>
<android.widget.SlidingDrawer: void setOnDrawerCloseListener(android.widget.SlidingDrawer.OnDrawerCloseListener)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.renderscript.Matrix3f: void loadScale(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.Class,boolean)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.app.ApplicationErrorReport: void <clinit>()>:<static>:<android.app.ApplicationErrorReport:android.os.Parcelable>
<android.net.Uri: int hashCode()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.text.style.RelativeSizeSpan: int getSpanTypeId()>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.database.DatabaseUtils.InsertHelper: long replace(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.View.MeasureSpec: int getSize(int)>:<public static>:<android.view.View.MeasureSpec>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.security.keystore.KeyGenParameterSpec: boolean isRandomizedEncryptionRequired()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.ContentObserver: void onChange(boolean)>:<public>:<android.database.ContentObserver>
<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks2>
<android.content.ContextWrapper: android.content.Context createDisplayContext(android.view.Display)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.TableRow.LayoutParams: void <init>(int)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.AlertDialog.Builder: void <init>(android.content.Context)>:<public>:<android.app.AlertDialog.Builder>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.media.SoundPool.Builder>
<org.xmlpull.v1.XmlSerializer: java.lang.String getNamespace()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.widget.DialerFilter: int getMode()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.nfc.NfcEvent: void <init>()>:<>:<android.nfc.NfcEvent>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ActivityNotFoundException: void <init>()>:<public>:<android.content.ActivityNotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.Loader: void onAbandon()>:<protected>:<android.content.Loader>
<android.graphics.Paint: void reset()>:<public>:<android.graphics.Paint>
<android.os.WorkSource: void <init>()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.view.textservice.SpellCheckerInfo: void <init>()>:<>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.renderscript.Byte4: void <init>()>:<public>:<android.renderscript.Byte4>
<android.graphics.RectF: void <init>(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.Cursor: int getCount()>:<public abstract>:<android.database.Cursor:java.io.Closeable>
<android.graphics.DrawFilter: void finalize()>:<protected>:<android.graphics.DrawFilter>
<android.provider.MediaStore.Images.Media: void <clinit>()>:<static>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onEnabledChanged(boolean)>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.content.res.AssetManager.AssetInputStream: void mark(int)>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.webkit.WebView: boolean canGoForward()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.nfc.tech.MifareClassic: boolean isConnected()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.ViewDebug.FlagToString: boolean outputIf()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.media.midi.MidiManager: android.media.midi.MidiDeviceInfo[] getDevices()>:<public>:<android.media.midi.MidiManager>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>:<public>:<android.app.WallpaperManager>
<android.test.suitebuilder.TestMethod: junit.framework.TestCase createTest()>:<public>:<android.test.suitebuilder.TestMethod>
<android.text.method.MetaKeyKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.view.GestureDetector.OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.view.Window.Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.printservice.PrinterDiscoverySession: void onValidatePrinters(java.util.List)>:<public abstract>:<android.printservice.PrinterDiscoverySession>
<junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.app.job.JobInfo: void <clinit>()>:<static>:<android.app.job.JobInfo:android.os.Parcelable>
<android.app.Notification: java.lang.String toString()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.util.SparseLongArray: long get(int)>:<public>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap.KeyData)>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.view.Display: int getFlags()>:<public>:<android.view.Display>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.app.ActionBar: void setCustomView(android.view.View)>:<public abstract>:<android.app.ActionBar>
<android.widget.PopupWindow: void setExitTransition(android.transition.Transition)>:<public>:<android.widget.PopupWindow>
<android.text.format.Time: void set(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.opengl.GLES20: void glCullFace(int)>:<public static native>:<android.opengl.GLES20>
<android.transition.Fade: void <init>(int)>:<public>:<android.transition.Fade:android.transition.Visibility,android.transition.Transition>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.os.Debug: long getPss()>:<public static native>:<android.os.Debug>
<android.widget.AbsListView: int computeVerticalScrollExtent()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ActionMenuView: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.ActionMenuView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.VideoView: int getBufferPercentage()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.media.AudioRecord.Builder: android.media.AudioRecord.Builder setAudioSource(int)>:<public>:<android.media.AudioRecord.Builder>
<android.opengl.GLES10: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.hardware.SensorEventListener2: void onFlushCompleted(android.hardware.Sensor)>:<public abstract>:<android.hardware.SensorEventListener2:android.hardware.SensorEventListener>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AbsSeekBar: void setSplitTrack(boolean)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener: void onServiceAvailable(int,byte[],android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener>
<android.view.View: void setOverScrollMode(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.WearableExtender: int getCustomContentHeight()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.widget.TabWidget: boolean isStripEnabled()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.provider.ContactsContract.CommonDataKinds.Email: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.TableLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.Instrumentation: void waitForIdle(java.lang.Runnable)>:<public>:<android.app.Instrumentation>
<android.nfc.tech.MifareClassic: int getSize()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.preference.Preference: boolean persistLong(long)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests: void testSuiteConstructionFailed()>:<public>:<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests:junit.framework.TestCase,junit.framework.Assert>
<android.widget.GridView: void smoothScrollByOffset(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.text.style.SuggestionSpan: void <clinit>()>:<static>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.graphics.drawable.RotateDrawable: float getPivotX()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.DrawableWrapper,android.graphics.drawable.Drawable>
<android.hardware.usb.UsbDevice: java.lang.String getProductName()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.widget.CursorAdapter: int getCount()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.content.AsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.view.accessibility.AccessibilityRecord: void setFromIndex(int)>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.test.mock.MockApplication: void onTerminate()>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm[] values()>:<public static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.content.ClipData: android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate)>:<public>:<android.net.http.SslError>
<android.bluetooth.le.ScanFilter: boolean matches(android.bluetooth.le.ScanResult)>:<public>:<android.bluetooth.le.ScanFilter:android.os.Parcelable>
<android.view.WindowId.FocusObserver: void onFocusLost(android.view.WindowId)>:<public abstract>:<android.view.WindowId.FocusObserver>
<android.app.ActivityManager: int addAppTask(android.app.Activity,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>:<public>:<android.app.ActivityManager>
<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.view.View: void setTextAlignment(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.AllowAllHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.text.style.TtsSpan.TextBuilder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.TextBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.widget.AbsSeekBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.OrientationEventListener: void onOrientationChanged(int)>:<public abstract>:<android.view.OrientationEventListener>
<android.media.tv.TvInputService.Session: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.media.tv.TvInputService.Session:android.view.KeyEvent.Callback>
<android.telecom.Call: android.telecom.InCallService.VideoCall getVideoCall()>:<public>:<android.telecom.Call>
<android.view.animation.TranslateAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.content.RestrictionEntry: boolean equals(java.lang.Object)>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<org.json.JSONObject: java.lang.Object remove(java.lang.String)>:<public>:<org.json.JSONObject>
<android.app.Activity: void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>:<public static synchronized>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.renderscript.Matrix3f: void scale(float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotBefore()>:<public>:<android.security.keystore.KeyGenParameterSpec:java.security.spec.AlgorithmParameterSpec>
<android.widget.TextView: int getTotalPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.res.TypedArray: java.lang.String getPositionDescription()>:<public>:<android.content.res.TypedArray>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID)>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.os.Message: void setData(android.os.Bundle)>:<public>:<android.os.Message:android.os.Parcelable>
<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>:<public static>:<android.text.format.DateFormat>
<android.opengl.GLES31Ext: void glObjectLabelKHR(int,int,int,java.lang.String)>:<public static native>:<android.opengl.GLES31Ext>
<android.opengl.GLES10: void glLineWidth(float)>:<public static native>:<android.opengl.GLES10>
<android.database.DatabaseUtils.InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.print.PrintJobId: int describeContents()>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.widget.GridView: int getNumColumns()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Window: void setLocalFocus(boolean,boolean)>:<public>:<android.view.Window>
<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests: void <init>(java.lang.Exception)>:<public>:<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests:junit.framework.TestCase,junit.framework.Assert>
<android.transition.Transition: android.transition.Transition removeTarget(int)>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.net.NetworkInfo.State: void <clinit>()>:<static>:<android.net.NetworkInfo.State:java.lang.Enum>
<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>:<public>:<org.json.JSONObject>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.widget.BaseAdapter: int getItemViewType(int)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.media.AudioTrack: android.media.PlaybackParams getPlaybackParams()>:<public>:<android.media.AudioTrack>
<android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<junit.framework.TestFailure: boolean isFailure()>:<public>:<junit.framework.TestFailure>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.InputDevice.MotionRange: void <init>()>:<>:<android.view.InputDevice.MotionRange>
<android.widget.AbsListView: void onMeasure(int,int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.MediaMetadataEditor: android.graphics.Bitmap getBitmap(int,android.graphics.Bitmap)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.animation.ValueAnimator: void setStartDelay(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.telephony.CellIdentityGsm: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellIdentityGsm:android.os.Parcelable>
<android.view.ViewDebug: void stopRecyclerTracing()>:<public static>:<android.view.ViewDebug>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewSizes()>:<public>:<android.hardware.Camera.Parameters>
<android.text.method.BaseMovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.ResourceCursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.View.BaseSavedState: void <init>(android.os.Parcelable)>:<public>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.speech.tts.TextToSpeech: android.speech.tts.Voice getDefaultVoice()>:<public>:<android.speech.tts.TextToSpeech>
<android.telecom.InCallService.VideoCall: void requestCameraCapabilities()>:<public abstract>:<android.telecom.InCallService.VideoCall>
<android.app.ExpandableListActivity: long getSelectedPosition()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.test.AndroidTestCase: void setUp()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.service.textservice.SpellCheckerService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.textservice.SpellCheckerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>:<public>:<android.hardware.SensorManager>
<android.print.PrintAttributes.MediaSize: java.lang.String toString()>:<public>:<android.print.PrintAttributes.MediaSize>
<android.telephony.SmsMessage: boolean isReplace()>:<public>:<android.telephony.SmsMessage>
<android.hardware.camera2.CameraManager.TorchCallback: void onTorchModeUnavailable(java.lang.String)>:<public>:<android.hardware.camera2.CameraManager.TorchCallback>
<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: float getTouchMinor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Instrumentation: void startProfiling()>:<public>:<android.app.Instrumentation>
<android.app.ApplicationErrorReport.RunningServiceInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.RunningServiceInfo>
<android.telephony.ServiceState: java.lang.String toString()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>:<public static>:<junit.framework.Assert>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.QuickContactBadge: void assignContactUri(android.net.Uri)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.TextView: int length()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.Html.ImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>:<public abstract>:<android.text.Html.ImageGetter>
<android.app.backup.BackupDataInputStream: int read()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.view.View: void setTranslationY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: void setSecondaryProgress(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.telecom.Connection: void <init>()>:<public>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)>:<public>:<android.media.session.MediaSessionManager>
<android.view.inputmethod.InputBinding: int describeContents()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTimeout(int)>:<public>:<android.bluetooth.le.AdvertiseSettings.Builder>
<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>:<public>:<android.view.VelocityTracker>
<android.database.sqlite.SQLiteException: void <init>()>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.NinePatch)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.CompoundButton: int getCompoundPaddingRight()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.webkit.SslErrorHandler: void <init>()>:<>:<android.webkit.SslErrorHandler:android.os.Handler>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.tv.TvTrackInfo: int describeContents()>:<public>:<android.media.tv.TvTrackInfo:android.os.Parcelable>
<android.location.Criteria: void setBearingAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.app.NotificationManager: android.app.NotificationManager.Policy getNotificationPolicy()>:<public>:<android.app.NotificationManager>
<android.webkit.WebSettings: void setAllowFileAccessFromFileURLs(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.preference.RingtonePreference: void onClick()>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProviderClient>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.content.res.TypedArray: void <init>()>:<>:<android.content.res.TypedArray>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,java.lang.String)>:<public>:<android.media.MediaPlayer>
<android.text.Spanned: int getSpanFlags(java.lang.Object)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.view.inputmethod.InputConnectionWrapper: boolean requestCursorUpdates(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.telephony.SubscriptionInfo: java.lang.String getIccId()>:<public>:<android.telephony.SubscriptionInfo:android.os.Parcelable>
<android.widget.HeaderViewListAdapter: int getItemViewType(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.SlidingDrawer: void animateClose()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.print.PrintJobInfo: int getCopies()>:<public>:<android.print.PrintJobInfo:android.os.Parcelable>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.telecom.RemoteConnection: android.telecom.StatusHints getStatusHints()>:<public>:<android.telecom.RemoteConnection>
<android.transition.Transition.TransitionListener: void onTransitionEnd(android.transition.Transition)>:<public abstract>:<android.transition.Transition.TransitionListener>
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.app.Notification.CarExtender: android.graphics.Bitmap getLargeIcon()>:<public>:<android.app.Notification.CarExtender:android.app.Notification.Extender>
<android.preference.RingtonePreference: void onPrepareRingtonePickerIntent(android.content.Intent)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.media.effect.EffectContext: void <init>()>:<>:<android.media.effect.EffectContext>
<android.media.audiofx.EnvironmentalReverb.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.database.AbstractCursor: boolean isLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.graphics.Region: boolean getBounds(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>:<public final>:<android.os.Parcel>
<android.opengl.GLES30: boolean glIsTransformFeedback(int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.content.ComponentName: int describeContents()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.bluetooth.BluetoothHealthAppConfiguration: boolean equals(java.lang.Object)>:<public>:<android.bluetooth.BluetoothHealthAppConfiguration:android.os.Parcelable>
<android.renderscript.RenderScript: void releaseAllContexts()>:<public static>:<android.renderscript.RenderScript>
<android.renderscript.Element: android.renderscript.Element U64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)>:<public>:<android.os.PersistableBundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.provider.Settings.Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.media.AudioManager: int getStreamMaxVolume(int)>:<public>:<android.media.AudioManager>
<android.os.Bundle: int describeContents()>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View.AccessibilityDelegate>
<android.widget.ProgressBar: void setProgressBackgroundTintMode(android.graphics.PorterDuff.Mode)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.app.assist.AssistContent: void setIntent(android.content.Intent)>:<public>:<android.app.assist.AssistContent:android.os.Parcelable>
<android.preference.PreferenceActivity.Header: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.opengl.GLES31Ext: void glTexBufferEXT(int,int,int)>:<public static native>:<android.opengl.GLES31Ext>
<android.graphics.Rect: void union(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>:<public>:<android.telephony.PhoneStateListener>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaFormat: android.media.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)>:<public static final>:<android.media.MediaFormat>
<android.view.MotionEvent: void <clinit>()>:<static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Looper: void quitSafely()>:<public>:<android.os.Looper>
<android.renderscript.FieldPacker: android.renderscript.Short3 subShort3()>:<public>:<android.renderscript.FieldPacker>
<android.telephony.CellSignalStrengthCdma: int describeContents()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)>:<public>:<android.security.KeyPairGeneratorSpec.Builder>
<android.animation.LayoutTransition.TransitionListener: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public abstract>:<android.animation.LayoutTransition.TransitionListener>
<android.view.View: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.ActivityInstrumentationTestCase2: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.Annotation: void <init>(android.os.Parcel)>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.view.View: int getScrollBarFadeDuration()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.app.VoiceInteractor.PickOptionRequest.Option: java.lang.CharSequence getLabel()>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.app.Fragment: int hashCode()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setTransferMode(int)>:<public>:<android.media.AudioTrack.Builder>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setReportDelay(long)>:<public>:<android.bluetooth.le.ScanSettings.Builder>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.media.MediaRouter.RouteInfo: int getSupportedTypes()>:<public>:<android.media.MediaRouter.RouteInfo>
<android.widget.Gallery: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.MotionEvent.PointerCoords: void <init>()>:<public>:<android.view.MotionEvent.PointerCoords>
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.provider.ContactsContract.RawContacts.Data: void <init>()>:<>:<android.provider.ContactsContract.RawContacts.Data:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns>
<android.graphics.drawable.NinePatchDrawable: int getAlpha()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.SimpleAdapter: int getCount()>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.util.SparseLongArray: java.lang.Object clone()>:<public volatile>:<android.util.SparseLongArray:java.lang.Cloneable>
<android.widget.ProgressBar: void onDetachedFromWindow()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.view.MotionEvent: float getRawY()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TextView: void setHintTextColor(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)>:<public>:<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback>
<android.view.DragEvent: android.content.ClipDescription getClipDescription()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TableLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaDescription: void <clinit>()>:<static>:<android.media.MediaDescription:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: int getPaddingMode()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.SignalStrength: int getEvdoEcio()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.printservice.PrintService: void onPrintJobQueued(android.printservice.PrintJob)>:<protected abstract>:<android.printservice.PrintService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>:<public>:<android.media.Ringtone>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>:<public>:<android.graphics.Paint>
<android.content.IntentFilter: java.util.Iterator schemesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.ViewParent: void createContextMenu(android.view.ContextMenu)>:<public abstract>:<android.view.ViewParent>
<android.view.accessibility.AccessibilityRecord: void recycle()>:<public>:<android.view.accessibility.AccessibilityRecord>
<android.service.voice.VoiceInteractionSession: void onTaskFinished(android.content.Intent,int)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.ScaleGestureDetector: float getCurrentSpanX()>:<public>:<android.view.ScaleGestureDetector>
<android.view.accessibility.AccessibilityNodeInfo: void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo.RangeInfo)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.View: int getMinimumHeight()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.DrawableWrapper: int getChangingConfigurations()>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.provider.ContactsContract.Directory: void <clinit>()>:<static>:<android.provider.ContactsContract.Directory:android.provider.BaseColumns>
<android.opengl.GLException: void <init>(int)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.FieldPacker: void addF64(double)>:<public>:<android.renderscript.FieldPacker>
<android.telephony.TelephonyManager: void <init>()>:<>:<android.telephony.TelephonyManager>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.String)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.inputmethodservice.Keyboard: int getHeight()>:<public>:<android.inputmethodservice.Keyboard>
<org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.scheme.SocketFactory>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>:<public>:<android.view.textservice.SpellCheckerInfo:android.os.Parcelable>
<android.media.AudioManager: void playSoundEffect(int)>:<public>:<android.media.AudioManager>
<android.graphics.Path: void setLastPoint(float,float)>:<public>:<android.graphics.Path>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void close()>:<public>:<android.os.ParcelFileDescriptor.AutoCloseInputStream:java.io.FileInputStream,java.io.InputStream>
<junit.framework.TestResult: void <init>()>:<public>:<junit.framework.TestResult>
<android.view.View: java.lang.Object getTag(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Notification.WearableExtender: boolean getHintHideIcon()>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.test.ProviderTestCase2: android.test.mock.MockContentResolver getMockContentResolver()>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomContentHeight(int)>:<public>:<android.app.Notification.WearableExtender:android.app.Notification.Extender>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(android.os.Parcel)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayRemoved(int)>:<public abstract>:<android.hardware.display.DisplayManager.DisplayListener>
<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<android.widget.ListView: android.view.View findViewTraversal(int)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.database.AbstractCursor: boolean moveToFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.provider.Contacts.People: void <init>()>:<>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.appwidget.AppWidgetHost: void onProvidersChanged()>:<protected>:<android.appwidget.AppWidgetHost>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.DigitalClock: void onDetachedFromWindow()>:<protected>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.LinearLayout: void setGravity(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: boolean setDefaultBrowserPackageName(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.AudioManager: boolean isMusicActive()>:<public>:<android.media.AudioManager>
<android.app.Activity: void finishFromChild(android.app.Activity)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.ViewPropertyAnimator: long getStartDelay()>:<public>:<android.view.ViewPropertyAnimator>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)>:<public>:<android.print.PrintAttributes.Builder>
<android.view.View: boolean isTextDirectionResolved()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.system.Os: int read(java.io.FileDescriptor,byte[],int,int)>:<public static>:<android.system.Os>
<android.hardware.camera2.CaptureRequest.Builder: void addTarget(android.view.Surface)>:<public>:<android.hardware.camera2.CaptureRequest.Builder>
<android.view.VelocityTracker: void clear()>:<public>:<android.view.VelocityTracker>
<android.app.Activity: void setIntent(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.graphics.BitmapRegionDecoder: void finalize()>:<protected>:<android.graphics.BitmapRegionDecoder>
<android.util.SparseArray: android.util.SparseArray clone()>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.MenuItem>
<android.content.Loader: void onStartLoading()>:<protected>:<android.content.Loader>
<android.graphics.Canvas: boolean isOpaque()>:<public>:<android.graphics.Canvas>
<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.test.ViewAsserts: void assertHasScreenCoordinates(android.view.View,android.view.View,int,int)>:<public static>:<android.test.ViewAsserts>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsDelay(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>:<public>:<android.content.ContentResolver>
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.text.Layout: void increaseWidthTo(int)>:<public final>:<android.text.Layout>
<android.speech.tts.TextToSpeechService: void onStop()>:<protected abstract>:<android.speech.tts.TextToSpeechService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.content.UriPermission: android.net.Uri getUri()>:<public>:<android.content.UriPermission:android.os.Parcelable>
<android.widget.AlphabetIndexer: java.lang.Object[] getSections()>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.content.IntentFilter: void <init>(java.lang.String)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.graphics.Point: void <init>()>:<public>:<android.graphics.Point:android.os.Parcelable>
<android.bluetooth.BluetoothManager: java.util.List getConnectedDevices(int)>:<public>:<android.bluetooth.BluetoothManager>
<android.opengl.GLES30: void glGetProgramBinary(int,int,int[],int,int[],int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.LoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public abstract>:<android.app.LoaderManager>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<android.os.HandlerThread: boolean quit()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.text.format.Time: int getActualMaximum(int)>:<public>:<android.text.format.Time>
<android.hardware.camera2.params.TonemapCurve: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.TonemapCurve>
<android.telecom.Connection: boolean isRingbackRequested()>:<public final>:<android.telecom.Connection:android.telecom.Conferenceable>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float,float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.BaseInterpolator>
<android.hardware.camera2.params.StreamConfigurationMap: boolean equals(java.lang.Object)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.widget.Advanceable>
<android.service.notification.NotificationListenerService.Ranking: java.lang.String getKey()>:<public>:<android.service.notification.NotificationListenerService.Ranking>
<android.view.ViewGroup: int getDescendantFocusability()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.Transformation: void set(android.view.animation.Transformation)>:<public>:<android.view.animation.Transformation>
<android.opengl.GLES30: void glGenQueries(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>:<public>:<android.app.TaskStackBuilder>
<android.test.mock.MockContext: java.io.File getDatabasePath(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.View: void setHovered(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebSettings: boolean supportZoom()>:<public abstract>:<android.webkit.WebSettings>
<org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.TableLayout.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.Switch: void setChecked(boolean)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.media.tv.TvContentRating: boolean equals(java.lang.Object)>:<public>:<android.media.tv.TvContentRating>
<android.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>:<public>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.net.sip.SipErrorCode: java.lang.String toString(int)>:<public static>:<android.net.sip.SipErrorCode>
<android.hardware.usb.UsbAccessory: int hashCode()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.test.suitebuilder.TestMethod: void <init>(java.lang.reflect.Method,java.lang.Class)>:<public>:<android.test.suitebuilder.TestMethod>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.hardware.usb.UsbDeviceConnection: android.hardware.usb.UsbRequest requestWait()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.util.EventLog: int writeEvent(int,int)>:<public static native>:<android.util.EventLog>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>:<public static>:<android.animation.AnimatorInflater>
<android.widget.TextView: void setTextSize(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.MoreAsserts: java.util.regex.MatchResult assertContainsRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.net.ConnectivityManager: int getNetworkPreference()>:<public>:<android.net.ConnectivityManager>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<android.widget.ListView: int getDividerHeight()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void setRight(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.session.MediaSession.Token: boolean equals(java.lang.Object)>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.media.ResourceBusyException: void <init>(java.lang.String)>:<public>:<android.media.ResourceBusyException:android.media.MediaDrmException,java.lang.Exception,java.lang.Throwable>
<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.content.AsyncTaskLoader: java.lang.Object loadInBackground()>:<public abstract>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.widget.Toolbar: boolean isOverflowMenuShowing()>:<public>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.media.MediaCrypto: void setMediaDrmSession(byte[])>:<public final native>:<android.media.MediaCrypto>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>:<public>:<android.app.TaskStackBuilder>
<android.graphics.Bitmap: void setPixel(int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.hardware.SensorEvent: void <init>()>:<>:<android.hardware.SensorEvent>
<android.view.Window.Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window.Callback>
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.os.StrictMode.ThreadPolicy: void <clinit>()>:<static>:<android.os.StrictMode.ThreadPolicy>
<android.text.SpannableString: void removeSpan(java.lang.Object)>:<public>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.graphics.drawable.LayerDrawable: void setLayerInsetLeft(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.widget.ViewAnimator: void removeAllViews()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.Display: int getState()>:<public>:<android.view.Display>
<android.renderscript.Script: boolean getVarB(int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.util.Range: java.lang.Comparable clamp(java.lang.Comparable)>:<public>:<android.util.Range>
<android.net.LinkAddress: java.lang.String toString()>:<public>:<android.net.LinkAddress:android.os.Parcelable>
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>:<public>:<android.location.LocationManager>
<android.widget.NumberPicker: void setValue(int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.CursorAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable,android.widget.ThemedSpinnerAdapter>
<android.test.ServiceTestCase: void setupService()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.ViewGroup: void endViewTransition(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: void append(java.lang.CharSequence,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,int[],int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.telephony.CellIdentityLte: void <init>()>:<>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.BaseInterpolator>
<android.text.style.StyleSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.webkit.WebView: void zoomBy(float)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.CursorWrapper: boolean move(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.animation.Animator: void end()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.renderscript.Script.LaunchOptions: void <init>()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>:<public>:<android.content.pm.PackageItemInfo>
<android.service.carrier.CarrierMessagingService: void onSendDataSms(byte[],int,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)>:<public>:<android.service.carrier.CarrierMessagingService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.transition.TransitionSet: android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.transition.TransitionSet:android.transition.Transition>
<android.hardware.Camera: boolean enableShutterSound(boolean)>:<public final>:<android.hardware.Camera>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicColorMatrix:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.app.FragmentBreadCrumbs: void onLayout(boolean,int,int,int,int)>:<protected>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.widget.ExpandableListAdapter: long getGroupId(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.os.BaseBundle: double getDouble(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothClass: boolean hasService(int)>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.printservice.PrintJob: boolean start()>:<public>:<android.printservice.PrintJob>
<android.widget.TextView: boolean hasOverlappingRendering()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<dalvik.system.BaseDexClassLoader: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.BaseDexClassLoader:java.lang.ClassLoader>
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.SearchView: void setInputType(int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.CollapsibleActionView>
<android.widget.ImageView: void setMaxHeight(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.content.pm.PackageStats: void <init>(android.content.pm.PackageStats)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.media.ImageWriter: android.media.ImageWriter newInstance(android.view.Surface,int)>:<public static>:<android.media.ImageWriter:java.lang.AutoCloseable>
<android.widget.TextView: void setIncludeFontPadding(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.Telephony.MmsSms: void <init>()>:<>:<android.provider.Telephony.MmsSms:android.provider.BaseColumns>
<android.system.OsConstants: boolean S_ISDIR(int)>:<public static>:<android.system.OsConstants>
<org.json.JSONArray: java.lang.Object remove(int)>:<public>:<org.json.JSONArray>
<android.test.MoreAsserts: void assertNotEmpty(java.lang.String,java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<android.media.MediaMetadataEditor: java.lang.String getString(int,java.lang.String)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllIllegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.text.LoginFilter.UsernameFilterGMail: void <init>()>:<public>:<android.text.LoginFilter.UsernameFilterGMail:android.text.LoginFilter>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasBackgroundColor()>:<public>:<android.view.accessibility.CaptioningManager.CaptionStyle>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.transition.Transition: android.transition.TransitionPropagation getPropagation()>:<public>:<android.transition.Transition:java.lang.Cloneable>
<android.view.Window.Callback: void onAttachedToWindow()>:<public abstract>:<android.view.Window.Callback>
<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>:<public>:<android.view.ViewOverlay>
<android.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)>:<public>:<android.app.FragmentController>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.widget.ViewAnimator: void removeViewInLayout(android.view.View)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.res.Configuration: boolean needNewResources(int,int)>:<public static>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.widget.GridView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setSelected(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.provider.Telephony.Sms.Sent: void <init>()>:<>:<android.provider.Telephony.Sms.Sent:android.provider.BaseColumns,android.provider.Telephony.TextBasedSmsColumns>
<android.widget.LinearLayout: void setOrientation(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>:<public abstract>:<android.webkit.WebSettings>
<android.nfc.FormatException: void <init>(java.lang.String)>:<public>:<android.nfc.FormatException:java.lang.Exception,java.lang.Throwable>
<dalvik.'annotation'.TestTarget: java.lang.Class[] methodArgs()>:<public abstract>:<dalvik.annotation.TestTarget:java.lang.annotation.Annotation>
<android.graphics.drawable.Icon: void loadDrawableAsync(android.content.Context,android.graphics.drawable.Icon.OnDrawableLoadedListener,android.os.Handler)>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.provider.Contacts.Settings: void <init>()>:<>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>:<public>:<android.view.KeyCharacterMap:android.os.Parcelable>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.text.style.SuggestionSpan: int getSpanTypeId()>:<public>:<android.text.style.SuggestionSpan:android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)>:<public static>:<android.text.TextUtils>
<android.view.InputDevice: int getKeyboardType()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.view.KeyEvent: int getMetaState()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>:<public static>:<android.text.format.DateUtils>
<android.telecom.ConnectionService: void onRemoteExistingConnectionAdded(android.telecom.RemoteConnection)>:<public>:<android.telecom.ConnectionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<android.view.WindowInsets: int getStableInsetRight()>:<public>:<android.view.WindowInsets>
<android.content.Intent: android.content.ClipData getClipData()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.net.Network: java.net.URLConnection openConnection(java.net.URL)>:<public>:<android.net.Network:android.os.Parcelable>
<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>:<public>:<android.util.DisplayMetrics>
<android.nfc.tech.MifareUltralight: void setTimeout(int)>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.widget.ListAdapter: boolean areAllItemsEnabled()>:<public abstract>:<android.widget.ListAdapter:android.widget.Adapter>
<android.app.ActivityManager.ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.location.GpsSatellite: float getAzimuth()>:<public>:<android.location.GpsSatellite>
<android.content.Context: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.content.res.Resources: android.content.res.Resources.Theme newTheme()>:<public final>:<android.content.res.Resources>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>:<public static>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.xmlpull.v1.XmlPullParser: java.lang.String getInputEncoding()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.os.BaseBundle: int[] getIntArray(java.lang.String)>:<public>:<android.os.BaseBundle>
<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.MediaSession.Token)>:<public>:<android.media.session.MediaController>
<android.graphics.drawable.LayerDrawable: int findIndexByLayerId(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Element: android.renderscript.Element PROGRAM_RASTER(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.database.MergeCursor: java.lang.String getString(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.os.BaseBundle: int getInt(java.lang.String,int)>:<public>:<android.os.BaseBundle>
<android.os.Process: int getGidForName(java.lang.String)>:<public static final native>:<android.os.Process>
<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public abstract>:<android.app.LoaderManager>
<android.net.Uri: java.lang.String getQuery()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.http.SslError: boolean addError(int)>:<public>:<android.net.http.SslError>
<android.test.RenamingDelegatingContext: void <init>(android.content.Context,android.content.Context,java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.inputmethodservice.KeyboardView: void invalidateKey(int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.test.mock.MockPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.net.LinkAddress: void <clinit>()>:<static>:<android.net.LinkAddress:android.os.Parcelable>
<android.graphics.drawable.DrawableWrapper: boolean onLayoutDirectionChanged(int)>:<public>:<android.graphics.drawable.DrawableWrapper:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.net.http.SslError: java.lang.String getUrl()>:<public>:<android.net.http.SslError>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short4)>:<public>:<android.renderscript.FieldPacker>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController.AnimationParameters: void <init>()>:<public>:<android.view.animation.GridLayoutAnimationController.AnimationParameters:android.view.animation.LayoutAnimationController.AnimationParameters>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: boolean getKeepScreenOn()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.FragmentController>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewParent: boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle)>:<public abstract>:<android.view.ViewParent>
<android.provider.Telephony.Sms.Intents: void <init>()>:<>:<android.provider.Telephony.Sms.Intents>
<android.app.RemoteInput: boolean getAllowFreeFormInput()>:<public>:<android.app.RemoteInput:android.os.Parcelable>
<android.content.IntentFilter: int getPriority()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.TextView: boolean getLinksClickable()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.RemoteController.OnClientUpdateListener: void onClientTransportControlUpdate(int)>:<public abstract>:<android.media.RemoteController.OnClientUpdateListener>
<android.telephony.PhoneNumberUtils: boolean isWellFormedSmsAddress(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.telephony.CellIdentityLte: java.lang.String toString()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.R.animator: void <init>()>:<public>:<android.R.animator>
<android.media.session.MediaSession.Token: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.session.MediaSession.Token:android.os.Parcelable>
<android.media.AudioTrack: int getSampleRate()>:<public>:<android.media.AudioTrack>
<android.bluetooth.BluetoothGatt: void abortReliableWrite(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothGatt:android.bluetooth.BluetoothProfile>
<android.provider.VoicemailContract.Voicemails: android.net.Uri buildSourceUri(java.lang.String)>:<public static>:<android.provider.VoicemailContract.Voicemails:android.provider.BaseColumns,android.provider.OpenableColumns>
<android.renderscript.FieldPacker: android.renderscript.Short4 subShort4()>:<public>:<android.renderscript.FieldPacker>
<android.service.media.MediaBrowserService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.NinePatchDrawable: void getOutline(android.graphics.Outline)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.wifi.WifiManager: boolean is5GHzBandSupported()>:<public>:<android.net.wifi.WifiManager>
<android.provider.Settings.Global: boolean putLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.net.MailTo: void <init>()>:<>:<android.net.MailTo>
<android.app.PendingIntent: java.lang.String toString()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.service.carrier.CarrierMessagingService.SendSmsResult: int getSendStatus()>:<public>:<android.service.carrier.CarrierMessagingService.SendSmsResult>
<android.graphics.drawable.BitmapDrawable: boolean hasMipMap()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.telephony.CellInfoLte: boolean equals(java.lang.Object)>:<public>:<android.telephony.CellInfoLte:android.telephony.CellInfo,android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,android.renderscript.Allocation,int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>:<public>:<android.view.animation.LayoutAnimationController>
<android.media.MediaCodec: void setOnFrameRenderedListener(android.media.MediaCodec.OnFrameRenderedListener,android.os.Handler)>:<public>:<android.media.MediaCodec>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>:<public>:<android.hardware.fingerprint.FingerprintManager.CryptoObject>
<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])>:<public>:<android.bluetooth.BluetoothHealth:android.bluetooth.BluetoothProfile>
<android.util.SparseIntArray: android.util.SparseIntArray clone()>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.preference.Preference: boolean hasKey()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TableRow: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.hardware.camera2.CaptureResult: int getSequenceId()>:<public>:<android.hardware.camera2.CaptureResult:android.hardware.camera2.CameraMetadata>
<android.net.wifi.p2p.WifiP2pGroup: int describeContents()>:<public>:<android.net.wifi.p2p.WifiP2pGroup:android.os.Parcelable>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioManager: void setStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.renderscript.ScriptIntrinsicBLAS: void SSPR2(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.os.Build.VERSION: void <init>()>:<public>:<android.os.Build.VERSION>
<android.view.MenuItem: boolean expandActionView()>:<public abstract>:<android.view.MenuItem>
<android.app.Presentation: void onDisplayRemoved()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.graphics.drawable.VectorDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.VectorDrawable:android.graphics.drawable.Drawable>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int,boolean)>:<public>:<android.hardware.SensorManager>
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: float getRowDelay()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.animation.Animator: android.animation.Animator clone()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.os.Bundle: char getChar(java.lang.String,char)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.widget.ListView: int getMaxScrollAmount()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeath()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.hardware.usb.UsbAccessory: java.lang.String getUri()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context)>:<public static>:<android.speech.SpeechRecognizer>
<android.preference.Preference: java.lang.String getFragment()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.Script.LaunchOptions: int getYStart()>:<public>:<android.renderscript.Script.LaunchOptions>
<android.net.wifi.WifiManager: boolean isWifiEnabled()>:<public>:<android.net.wifi.WifiManager>
<android.content.ClipboardManager: boolean hasText()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addCapability(int)>:<public>:<android.net.NetworkRequest.Builder>
<android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable,java.io.Closeable>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBlend:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.transition.ChangeClipBounds: void captureEndValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeClipBounds:android.transition.Transition>
<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.Layout: int getLineCount()>:<public abstract>:<android.text.Layout>
<android.content.Loader: java.lang.String dataToString(java.lang.Object)>:<public>:<android.content.Loader>
<android.media.MediaPlayer.TrackInfo: android.media.MediaFormat getFormat()>:<public>:<android.media.MediaPlayer.TrackInfo:android.os.Parcelable>
<android.webkit.WebIconDatabase: void open(java.lang.String)>:<public abstract>:<android.webkit.WebIconDatabase>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.service.media.MediaBrowserService: android.media.session.MediaSession.Token getSessionToken()>:<public>:<android.service.media.MediaBrowserService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.method.LinkMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult: void <init>(int,int[])>:<public>:<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult>
<android.speech.tts.UtteranceProgressListener: void onDone(java.lang.String)>:<public abstract>:<android.speech.tts.UtteranceProgressListener>
<android.view.MenuItem: boolean isActionViewExpanded()>:<public abstract>:<android.view.MenuItem>
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.DatePickerDialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.hardware.camera2.DngCreator: void writeInputStream(java.io.OutputStream,android.util.Size,java.io.InputStream,long)>:<public>:<android.hardware.camera2.DngCreator:java.lang.AutoCloseable>
<junit.runner.BaseTestRunner: void startTest(junit.framework.Test)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.hardware.camera2.params.TonemapCurve: java.lang.String toString()>:<public>:<android.hardware.camera2.params.TonemapCurve>
<android.widget.AdapterViewFlipper: void onDetachedFromWindow()>:<protected>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.telephony.gsm.SmsMessage: java.lang.String getEmailBody()>:<public>:<android.telephony.gsm.SmsMessage>
<android.hardware.camera2.CaptureResult.Key: int hashCode()>:<public final>:<android.hardware.camera2.CaptureResult.Key>
<android.view.View: void setOnContextClickListener(android.view.View.OnContextClickListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: void <clinit>()>:<static>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float)>:<public>:<android.media.session.PlaybackState.Builder>
<android.graphics.Color: void RGBToHSV(int,int,int,float[])>:<public static>:<android.graphics.Color>
<android.graphics.Rect: void set(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.app.Dialog: void setTitle(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.WindowAnimationFrameStats: int describeContents()>:<public>:<android.view.WindowAnimationFrameStats:android.view.FrameStats,android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.Layout: float getSpacingAdd()>:<public final>:<android.text.Layout>
<android.graphics.drawable.LayerDrawable: int getLayerInsetBottom(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.Debug.MemoryInfo: java.util.Map getMemoryStats()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.net.LinkAddress: void <init>()>:<>:<android.net.LinkAddress:android.os.Parcelable>
<android.graphics.Matrix: boolean preScale(float,float)>:<public>:<android.graphics.Matrix>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>:<public static>:<android.view.VelocityTracker>
<android.provider.ContactsContract.Directory: void <init>()>:<>:<android.provider.ContactsContract.Directory:android.provider.BaseColumns>
<android.widget.AdapterViewFlipper: void startFlipping()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.IpPrefix: java.lang.String toString()>:<public>:<android.net.IpPrefix:android.os.Parcelable>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void <init>()>:<public>:<android.view.accessibility.CaptioningManager.CaptioningChangeListener>
<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.text.method.BaseMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.os.Debug: void resetGlobalGcInvocationCount()>:<public static>:<android.os.Debug>
<android.graphics.RectF: void union(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.drawable.Icon: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.drawable.Icon:android.os.Parcelable>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long3)>:<public>:<android.renderscript.FieldPacker>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.os.UserHandle,android.content.ComponentName,android.os.Bundle)>:<public>:<android.appwidget.AppWidgetManager>
<android.os.Bundle: void putByte(java.lang.String,byte)>:<public>:<android.os.Bundle:android.os.BaseBundle,java.lang.Cloneable,android.os.Parcelable>
<android.graphics.Paint: void setFontFeatureSettings(java.lang.String)>:<public>:<android.graphics.Paint>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.widget.Gallery: boolean showContextMenuForChild(android.view.View)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.bluetooth.le.AdvertiseSettings: int getMode()>:<public>:<android.bluetooth.le.AdvertiseSettings:android.os.Parcelable>
<android.view.DragEvent: int getAction()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.content.ContentResolver: java.util.List getOutgoingPersistedUriPermissions()>:<public>:<android.content.ContentResolver>
<android.content.OperationApplicationException: void <init>(java.lang.String)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.widget.AbsListView: void setFilterText(java.lang.String)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.AudioTrack: int reloadStaticData()>:<public>:<android.media.AudioTrack>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState build()>:<public>:<android.media.session.PlaybackState.Builder>
<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>:<public>:<android.gesture.GestureStore>
<android.widget.TabWidget: void <init>(android.content.Context)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)>:<public static>:<android.media.MediaPlayer>
<android.graphics.Color: int green(int)>:<public static>:<android.graphics.Color>
<android.content.BroadcastReceiver.PendingResult: void abortBroadcast()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double2)>:<public>:<android.renderscript.FieldPacker>
<android.os.RecoverySystem: void verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)>:<public static>:<android.os.RecoverySystem>
<android.system.Os: int gettid()>:<public static>:<android.system.Os>
<android.test.mock.MockContext: java.io.File[] getExternalFilesDirs(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigPicture(android.graphics.Bitmap)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>:<public final>:<android.view.FocusFinder>
<android.content.pm.PackageManager: boolean addPermission(android.content.pm.PermissionInfo)>:<public abstract>:<android.content.pm.PackageManager>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.graphics.Bitmap: boolean hasAlpha()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFinished(android.print.PageRange[])>:<public>:<android.print.PrintDocumentAdapter.WriteResultCallback>
<android.view.Choreographer: android.view.Choreographer getInstance()>:<public static>:<android.view.Choreographer>
<android.view.accessibility.AccessibilityNodeInfo: void setViewIdResourceName(java.lang.String)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>:<public>:<android.telephony.CarrierConfigManager>
<android.view.SurfaceHolder.Callback: void surfaceCreated(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.view.View: void setFocusableInTouchMode(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureStore: int getSequenceType()>:<public>:<android.gesture.GestureStore>
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Element: android.renderscript.Element U16_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.service.voice.VoiceInteractionSession: void onRequestConfirmation(android.service.voice.VoiceInteractionSession.ConfirmationRequest)>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.hardware.SensorManager: boolean requestTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>:<public>:<android.hardware.SensorManager>
<android.app.VoiceInteractor.Request: void onCancel()>:<public>:<android.app.VoiceInteractor.Request>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>:<public>:<android.graphics.Paint>
<android.view.WindowManager.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources.Theme)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Allocation: void copyTo(java.lang.Object)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int,java.lang.Object[])>:<public transient>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.BaseInterpolator>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>:<public static>:<android.view.accessibility.AccessibilityWindowInfo:android.os.Parcelable>
<android.telephony.CellIdentityLte: int getTac()>:<public>:<android.telephony.CellIdentityLte:android.os.Parcelable>
<android.os.PatternMatcher: void <init>(android.os.Parcel)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.view.View: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Outline: void <init>(android.graphics.Outline)>:<public>:<android.graphics.Outline>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result valueOf(java.lang.String)>:<public static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.view.TextureView: void setLayerType(int,android.graphics.Paint)>:<public>:<android.view.TextureView:android.view.View>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.location.Address: java.lang.String getAdminArea()>:<public>:<android.location.Address:android.os.Parcelable>
<android.renderscript.Double3: void <init>()>:<public>:<android.renderscript.Double3>
<android.view.animation.Animation: void setFillAfter(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.Window.Callback: android.view.View onCreatePanelView(int)>:<public abstract>:<android.view.Window.Callback>
<junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProviderClient>
<android.webkit.WebSettings: void setDefaultFontSize(int)>:<public abstract>:<android.webkit.WebSettings>
<android.renderscript.ScriptIntrinsicBLAS: void ZHPR2(int,android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAllowedApplication(java.lang.String)>:<public>:<android.net.VpnService.Builder>
<android.nfc.tech.NdefFormatable: void formatReadOnly(android.nfc.NdefMessage)>:<public>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.database.DataSetObserver: void <init>()>:<public>:<android.database.DataSetObserver>
<android.text.StaticLayout: int getLineForVertical(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.widget.RatingBar: void setStepSize(float)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.telecom.Conference: void onPlayDtmfTone(char)>:<public>:<android.telecom.Conference:android.telecom.Conferenceable>
<android.graphics.Outline: void setConvexPath(android.graphics.Path)>:<public>:<android.graphics.Outline>
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaPlayer: void reset()>:<public>:<android.media.MediaPlayer>
<android.location.LocationManager: java.util.List getProviders(boolean)>:<public>:<android.location.LocationManager>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,android.os.Bundle,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.provider.Telephony.Mms.Draft: void <clinit>()>:<static>:<android.provider.Telephony.Mms.Draft:android.provider.Telephony.BaseMmsColumns>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbAccessory,android.app.PendingIntent)>:<public>:<android.hardware.usb.UsbManager>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>:<public>:<android.app.ActivityManager>
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.app.usage.UsageStatsManager: java.util.Map queryAndAggregateUsageStats(long,long)>:<public>:<android.app.usage.UsageStatsManager>
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.Window: android.transition.Transition getReenterTransition()>:<public>:<android.view.Window>
<android.util.JsonWriter: boolean isLenient()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.test.mock.MockContext: android.content.res.AssetManager getAssets()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.CharSequence getAppLabel()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.widget.TextView: int getCompoundPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>:<public>:<android.graphics.Path>
<android.service.notification.NotificationListenerService: void setNotificationsShown(java.lang.String[])>:<public final>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.Window: void setClipToOutline(boolean)>:<public>:<android.view.Window>
<android.nfc.cardemulation.CardEmulation: boolean supportsAidPrefixRegistration()>:<public>:<android.nfc.cardemulation.CardEmulation>
<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>:<public>:<android.webkit.WebChromeClient>
<android.app.ApplicationErrorReport.AnrInfo: void <init>()>:<public>:<android.app.ApplicationErrorReport.AnrInfo>
<android.view.MenuItem: char getNumericShortcut()>:<public abstract>:<android.view.MenuItem>
<android.content.pm.PackageInstaller.SessionParams: void <clinit>()>:<static>:<android.content.pm.PackageInstaller.SessionParams:android.os.Parcelable>
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraUnavailable(java.lang.String)>:<public>:<android.hardware.camera2.CameraManager.AvailabilityCallback>
<android.widget.AutoCompleteTextView: void onFilterComplete(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>:<public>:<android.view.ViewPropertyAnimator>
<android.telecom.Call: void disconnect()>:<public>:<android.telecom.Call>
<android.media.tv.TvContract: void <init>()>:<>:<android.media.tv.TvContract>
<android.text.style.TtsSpan.DecimalBuilder: void <init>()>:<public>:<android.text.style.TtsSpan.DecimalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>:<public>:<android.app.Notification.Builder>
<android.test.MoreAsserts: void assertEmpty(java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<android.media.midi.MidiDeviceStatus: boolean isInputPortOpen(int)>:<public>:<android.media.midi.MidiDeviceStatus:android.os.Parcelable>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount build()>:<public>:<android.telecom.PhoneAccount.Builder>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>:<public static>:<android.media.MediaPlayer>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekBackward()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.audiofx.BassBoost: boolean getStrengthSupported()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.transition.ChangeImageTransform: void captureStartValues(android.transition.TransitionValues)>:<public>:<android.transition.ChangeImageTransform:android.transition.Transition>
<android.bluetooth.BluetoothGattCharacteristic: byte[] getValue()>:<public>:<android.bluetooth.BluetoothGattCharacteristic>
<android.os.Message: long getWhen()>:<public>:<android.os.Message:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<org.xmlpull.v1.XmlSerializer: java.lang.String getName()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.inputmethodservice.InputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Paint.Align: android.graphics.Paint.Align valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.text.method.ArrowKeyMovementMethod: boolean canSelectArbitrarily()>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.renderscript.Matrix2f: void loadIdentity()>:<public>:<android.renderscript.Matrix2f>
<android.animation.Keyframe: boolean hasValue()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.app.admin.DevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.SipAddress:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.hardware.camera2.CameraCaptureSession: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>:<public abstract>:<android.hardware.camera2.CameraCaptureSession:java.lang.AutoCloseable>
<android.app.Activity: void onNewIntent(android.content.Intent)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.net.Uri.Builder: java.lang.String toString()>:<public>:<android.net.Uri.Builder>
<android.database.AbstractCursor.SelfContentObserver: void <init>(android.database.AbstractCursor)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.widget.AdapterViewFlipper: void onAttachedToWindow()>:<protected>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: void <init>()>:<>:<android.service.voice.AlwaysOnHotwordDetector.EventPayload>
<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Parcel: void writeSize(android.util.Size)>:<public final>:<android.os.Parcel>
<android.widget.TabWidget: void setEnabled(boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.media.midi.MidiDeviceInfo: boolean equals(java.lang.Object)>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.media.AudioTrack: int getMinBufferSize(int,int,int)>:<public static>:<android.media.AudioTrack>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>:<public>:<android.graphics.PathMeasure>
<android.view.View: boolean willNotDraw()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>:<public>:<android.app.ActivityManager>
<android.content.ClipData: void <clinit>()>:<static>:<android.content.ClipData:android.os.Parcelable>
<android.os.Parcel: void writeTypedList(java.util.List)>:<public final>:<android.os.Parcel>
<android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener: void onDnsSdTxtRecordAvailable(java.lang.String,java.util.Map,android.net.wifi.p2p.WifiP2pDevice)>:<public abstract>:<android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener>
<android.text.ClipboardManager: void <init>()>:<public>:<android.text.ClipboardManager>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTapEvent(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener,android.view.GestureDetector.OnContextClickListener>
<android.renderscript.ScriptIntrinsicBLAS: void SSPR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>:<public>:<android.renderscript.ScriptIntrinsicBLAS:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.animation.PointFEvaluator: void <init>()>:<public>:<android.animation.PointFEvaluator:android.animation.TypeEvaluator>
<android.app.NotificationManager: void setInterruptionFilter(int)>:<public final>:<android.app.NotificationManager>
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb.Settings getProperties()>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.os.Environment: boolean isExternalStorageRemovable()>:<public static>:<android.os.Environment>
<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener)>:<public>:<android.net.wifi.p2p.WifiP2pManager>
<android.app.ApplicationErrorReport.CrashInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.ApplicationErrorReport.CrashInfo>
<android.widget.RelativeLayout: int getGravity()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.Switch:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.test.MoreAsserts: void assertEquals(double[],double[])>:<public static>:<android.test.MoreAsserts>
<android.opengl.GLES31: void glProgramUniform2ui(int,int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.renderscript.Allocation: void setSurface(android.view.Surface)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.media.tv.TvContract: java.lang.String buildInputId(android.content.ComponentName)>:<public static final>:<android.media.tv.TvContract>
<android.provider.UserDictionary: void <clinit>()>:<static>:<android.provider.UserDictionary>
<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>:<public>:<android.net.LocalServerSocket>
<android.app.Presentation: void onDisplayChanged()>:<public>:<android.app.Presentation:android.app.Dialog>
<android.widget.TextView: android.view.ActionMode.Callback getCustomInsertionActionModeCallback()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.style.ScaleXSpan: float getScaleX()>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Toolbar:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable: int getLayoutDirection()>:<public>:<android.graphics.drawable.Drawable>
<android.widget.MediaController.MediaPlayerControl: int getAudioSessionId()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.media.AudioTrack.Builder: void <init>()>:<public>:<android.media.AudioTrack.Builder>
<android.app.DownloadManager: long enqueue(android.app.DownloadManager.Request)>:<public>:<android.app.DownloadManager>
<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.DatePicker: int getMonth()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SlidingDrawer: void open()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodInfo: void <init>(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.location.Address: void <init>(java.util.Locale)>:<public>:<android.location.Address:android.os.Parcelable>
<android.app.Notification.Style: android.app.Notification build()>:<public>:<android.app.Notification.Style>
<android.util.AttributeSet: int getAttributeNameResource(int)>:<public abstract>:<android.util.AttributeSet>
<android.graphics.CornerPathEffect: void <init>(float)>:<public>:<android.graphics.CornerPathEffect:android.graphics.PathEffect>
<android.os.Message: android.os.Bundle getData()>:<public>:<android.os.Message:android.os.Parcelable>
<dalvik.system.DexFile: void <init>(java.io.File)>:<public>:<dalvik.system.DexFile>
<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<org.json.JSONStringer: org.json.JSONStringer object()>:<public>:<org.json.JSONStringer>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.GestureDetector.OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.widget.SimpleExpandableListAdapter: boolean isChildSelectable(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>:<public static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)>:<public>:<android.hardware.camera2.params.StreamConfigurationMap>
<android.os.ParcelUuid: int hashCode()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.webkit.WebView: boolean canGoBack()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.printservice.PrintJob: boolean isFailed()>:<public>:<android.printservice.PrintJob>
<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall.Listener)>:<public>:<android.net.sip.SipAudioCall>
<android.text.style.QuoteSpan: int getSpanTypeId()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.content.pm.PackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>:<public abstract>:<android.content.pm.PackageManager>
<android.preference.Preference: void notifyDependencyChange(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.session.MediaController.TransportControls: void skipToNext()>:<public>:<android.media.session.MediaController.TransportControls>
<android.view.View: boolean performLongClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.Visualizer: int setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)>:<public>:<android.media.audiofx.Visualizer>
<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.graphics.drawable.Drawable: void setAlpha(int)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.preference.SwitchPreference: void setSwitchTextOn(java.lang.CharSequence)>:<public>:<android.preference.SwitchPreference:android.preference.TwoStatePreference,android.preference.Preference>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.nfc.tech.MifareUltralight: int getTimeout()>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.widget.PopupMenu: void setGravity(int)>:<public>:<android.widget.PopupMenu>
<android.renderscript.Matrix4f: void <init>(float[])>:<public>:<android.renderscript.Matrix4f>
<android.app.Activity: void stopManagingCursor(android.database.Cursor)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.view.textservice.SpellCheckerSubtype: void <init>(int,java.lang.String,java.lang.String)>:<public>:<android.view.textservice.SpellCheckerSubtype:android.os.Parcelable>
<android.media.midi.MidiDeviceInfo: int hashCode()>:<public>:<android.media.midi.MidiDeviceInfo:android.os.Parcelable>
<android.widget.TabHost: void setup(android.app.LocalActivityManager)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.le.ScanRecord: byte[] getManufacturerSpecificData(int)>:<public>:<android.bluetooth.le.ScanRecord>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureRequired(java.lang.String)>:<public final>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int)>:<public static>:<android.net.wifi.p2p.nsd.WifiP2pServiceRequest:android.os.Parcelable>
<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder.Callback)>:<public abstract>:<android.view.SurfaceHolder>
<android.media.MediaRouter.SimpleCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>:<public>:<android.media.MediaRouter.SimpleCallback:android.media.MediaRouter.Callback>
<android.util.Rational: float floatValue()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.widget.Toast: void setMargin(float,float)>:<public>:<android.widget.Toast>
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.webkit.WebView: void postWebMessage(android.webkit.WebMessage,android.net.Uri)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.widget.ListPopupWindow: int getVerticalOffset()>:<public>:<android.widget.ListPopupWindow>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>:<public>:<android.os.UserManager>
<android.view.Menu: android.view.MenuItem findItem(int)>:<public abstract>:<android.view.Menu>
<android.test.MoreAsserts: void checkEqualsAndHashCodeMethods(java.lang.Object,java.lang.Object,boolean)>:<public static>:<android.test.MoreAsserts>
<android.app.Notification.Builder: android.app.Notification.Builder setOngoing(boolean)>:<public>:<android.app.Notification.Builder>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable.ConstantState: void <init>()>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.content.Loader: void rollbackContentChanged()>:<public>:<android.content.Loader>
<android.system.OsConstants: java.lang.String gaiName(int)>:<public static>:<android.system.OsConstants>
<org.json.JSONStringer: org.json.JSONStringer value(long)>:<public>:<org.json.JSONStringer>
<android.media.PlaybackParams: int describeContents()>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.widget.SlidingDrawer: void close()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.FieldID getFieldID_Input()>:<public>:<android.renderscript.ScriptIntrinsicHistogram:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebView: void setOverScrollMode(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telecom.Connection.VideoProvider: void onSetPauseImage(android.net.Uri)>:<public abstract>:<android.telecom.Connection.VideoProvider>
<android.widget.GridLayout: void setColumnCount(int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicResize:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.net.LocalSocket: boolean isInputShutdown()>:<public>:<android.net.LocalSocket:java.io.Closeable>
<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)>:<public static>:<android.text.TextUtils>
<android.app.Fragment: boolean isDetached()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.widget.Toast: int getGravity()>:<public>:<android.widget.Toast>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.drm.DrmManagerClient: void setOnEventListener(android.drm.DrmManagerClient.OnEventListener)>:<public synchronized>:<android.drm.DrmManagerClient>
<android.media.RemoteController: android.media.RemoteController.MetadataEditor editMetadata()>:<public>:<android.media.RemoteController>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.media.SoundPool: void setLoop(int,int)>:<public final native>:<android.media.SoundPool>
<android.opengl.GLES10: void glNormal3f(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.app.admin.SystemUpdatePolicy: void <clinit>()>:<static>:<android.app.admin.SystemUpdatePolicy:android.os.Parcelable>
<android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>:<public static>:<android.text.format.DateFormat>
<android.widget.ZoomButtonsController: void setZoomSpeed(long)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.opengl.GLES31: void glMemoryBarrier(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.view.ViewGroup: boolean isTransitionGroup()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.ProgressDialog: int getProgress()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.widget.SlidingDrawer: java.lang.CharSequence getAccessibilityClassName()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.RelativeLayout.LayoutParams: void removeRule(int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.Activity: void setFeatureDrawableAlpha(int,int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.service.voice.VoiceInteractionSession: void onHide()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.media.PlaybackParams: void writeToParcel(android.os.Parcel,int)>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicConvolve5x5:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.print.PrintAttributes: android.print.PrintAttributes.MediaSize getMediaSize()>:<public>:<android.print.PrintAttributes:android.os.Parcelable>
<android.telecom.PhoneAccount: java.util.List getSupportedUriSchemes()>:<public>:<android.telecom.PhoneAccount:android.os.Parcelable>
<android.drm.DrmInfoRequest: int getInfoType()>:<public>:<android.drm.DrmInfoRequest>
<android.util.JsonWriter: android.util.JsonWriter value(double)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.view.ViewTreeObserver: void removeOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.nfc.tech.NfcBarcode: byte[] getBarcode()>:<public>:<android.nfc.tech.NfcBarcode:android.nfc.tech.BasicTagTechnology>
<android.media.FaceDetector.Face: float eyesDistance()>:<public>:<android.media.FaceDetector.Face>
<android.opengl.GLES20: void glGenerateMipmap(int)>:<public static native>:<android.opengl.GLES20>
<android.app.Notification.BigPictureStyle: void <init>(android.app.Notification.Builder)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.widget.PopupWindow: void update(android.view.View,int,int)>:<public>:<android.widget.PopupWindow>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressTintMode()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.app.FragmentHostCallback: boolean onShouldSaveFragmentState(android.app.Fragment)>:<public>:<android.app.FragmentHostCallback:android.app.FragmentContainer>
<android.view.animation.LayoutAnimationController: float getDelay()>:<public>:<android.view.animation.LayoutAnimationController>
<android.provider.CalendarContract.Attendees: void <init>()>:<>:<android.provider.CalendarContract.Attendees:android.provider.BaseColumns,android.provider.CalendarContract.AttendeesColumns,android.provider.CalendarContract.EventsColumns>
<android.provider.MediaStore.Audio.Artists: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Artists:android.provider.BaseColumns,android.provider.MediaStore.Audio.ArtistColumns>
<android.os.Looper: void loop()>:<public static>:<android.os.Looper>
<android.util.SparseArray: void <init>(int)>:<public>:<android.util.SparseArray:java.lang.Cloneable>
<android.speech.tts.Voice: int getLatency()>:<public>:<android.speech.tts.Voice:android.os.Parcelable>
<android.media.MediaFormat: void setInteger(java.lang.String,int)>:<public final>:<android.media.MediaFormat>
<android.app.ActionBar: void setIcon(int)>:<public abstract>:<android.app.ActionBar>
<android.graphics.drawable.LayerDrawable: void setOpacity(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.Contacts.GroupMembership: void <clinit>()>:<static>:<android.provider.Contacts.GroupMembership:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<junit.framework.TestSuite: void addTestSuite(java.lang.Class)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.system.Os: android.system.StructStatVfs fstatvfs(java.io.FileDescriptor)>:<public static>:<android.system.Os>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>:<public>:<android.content.res.TypedArray>
<android.test.mock.MockContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.view.View: void postOnAnimation(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Path.Op: android.graphics.Path.Op valueOf(java.lang.String)>:<public static>:<android.graphics.Path.Op:java.lang.Enum>
<android.app.ActionBar.Tab: android.view.View getCustomView()>:<public abstract>:<android.app.ActionBar.Tab>
<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.Window: void setType(int)>:<public>:<android.view.Window>
<android.opengl.GLES30: void glSamplerParameteri(int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>:<public final>:<android.graphics.drawable.Drawable>
<android.graphics.Rect: float exactCenterX()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.content.Context: java.io.File[] getExternalMediaDirs()>:<public abstract>:<android.content.Context>
<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>:<public>:<android.view.animation.Transformation>
<android.view.View: void buildDrawingCache(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Location: void setLongitude(double)>:<public>:<android.location.Location:android.os.Parcelable>
<android.app.usage.UsageStats: long getLastTimeUsed()>:<public>:<android.app.usage.UsageStats:android.os.Parcelable>
<android.app.VoiceInteractor.PickOptionRequest.Option: java.lang.CharSequence getSynonymAt(int)>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.bluetooth.le.ScanRecord: void <init>()>:<>:<android.bluetooth.le.ScanRecord>
<android.hardware.camera2.params.ColorSpaceTransform: void <init>(android.util.Rational[])>:<public>:<android.hardware.camera2.params.ColorSpaceTransform>
<android.app.assist.AssistStructure.ViewNode: boolean isSelected()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.widget.AbsListView: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.TextView: void setElegantTextHeight(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.wifi.WifiManager: boolean saveConfiguration()>:<public>:<android.net.wifi.WifiManager>
<android.os.Process: int getThreadPriority(int)>:<public static final native>:<android.os.Process>
<android.app.Notification.CarExtender.UnreadConversation: java.lang.String[] getParticipants()>:<public>:<android.app.Notification.CarExtender.UnreadConversation>
<android.opengl.GLES20: void glLinkProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.view.Window: void setBackgroundDrawableResource(int)>:<public>:<android.view.Window>
<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.service.notification.NotificationListenerService.RankingMap: void writeToParcel(android.os.Parcel,int)>:<public>:<android.service.notification.NotificationListenerService.RankingMap:android.os.Parcelable>
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>:<public final>:<android.os.AsyncTask>
<android.telecom.RemoteConnection: void postDialContinue(boolean)>:<public>:<android.telecom.RemoteConnection>
<android.bluetooth.BluetoothGattServer: void close()>:<public>:<android.bluetooth.BluetoothGattServer:android.bluetooth.BluetoothProfile>
<org.json.JSONArray: boolean optBoolean(int,boolean)>:<public>:<org.json.JSONArray>
<android.webkit.WebView: void freeMemory()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.format.Time: long normalize(boolean)>:<public>:<android.text.format.Time>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>:<public static>:<android.text.TextUtils>
<android.text.style.TtsSpan.VerbatimBuilder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.VerbatimBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<android.test.mock.MockContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.util.Log: boolean isLoggable(java.lang.String,int)>:<public static native>:<android.util.Log>
<android.print.PrintDocumentInfo: boolean equals(java.lang.Object)>:<public>:<android.print.PrintDocumentInfo:android.os.Parcelable>
<android.widget.ListView: boolean removeHeaderView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>:<public abstract>:<android.view.Menu>
<android.net.wifi.p2p.WifiP2pDevice: void <clinit>()>:<static>:<android.net.wifi.p2p.WifiP2pDevice:android.os.Parcelable>
<android.webkit.WebView: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.service.voice.VoiceInteractionSession: void hide()>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.text.format.Time: void setToNow()>:<public>:<android.text.format.Time>
<android.bluetooth.BluetoothAdapter: void finalize()>:<protected>:<android.bluetooth.BluetoothAdapter>
<android.media.MediaCodec: android.view.Surface createPersistentInputSurface()>:<public static>:<android.media.MediaCodec>
<android.widget.PopupWindow: boolean isOutsideTouchable()>:<public>:<android.widget.PopupWindow>
<android.net.NetworkCapabilities: boolean hasCapability(int)>:<public>:<android.net.NetworkCapabilities:android.os.Parcelable>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void showSoftInput(int,android.os.ResultReceiver)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.net.wifi.WifiEnterpriseConfig: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.net.rtp.RtpStream: int getLocalPort()>:<public>:<android.net.rtp.RtpStream>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: boolean equals(java.lang.Object)>:<public>:<android.net.wifi.p2p.nsd.WifiP2pServiceInfo:android.os.Parcelable>
<android.os.Environment: java.lang.String getExternalStorageState()>:<public static>:<android.os.Environment>
<android.telephony.CellSignalStrengthCdma: int hashCode()>:<public>:<android.telephony.CellSignalStrengthCdma:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.content.RestrictionEntry: java.lang.String getDescription()>:<public>:<android.content.RestrictionEntry:android.os.Parcelable>
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window.Callback: void onActionModeStarted(android.view.ActionMode)>:<public abstract>:<android.view.Window.Callback>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.drawable.Icon)>:<public>:<android.app.Notification.BigPictureStyle:android.app.Notification.Style>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.content.pm.PackageStats: void <init>(java.lang.String)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.opengl.GLES10: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES10>
<android.app.Instrumentation: void startPerformanceSnapshot()>:<public>:<android.app.Instrumentation>
<android.view.View: void onLayout(boolean,int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewStructure: void setTextStyle(float,int,int,int)>:<public abstract>:<android.view.ViewStructure>
<android.util.Base64InputStream: void close()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.util.Range: int hashCode()>:<public>:<android.util.Range>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setConnectable(boolean)>:<public>:<android.bluetooth.le.AdvertiseSettings.Builder>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContextWrapper: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.media.AudioTrack: int write(float[],int,int,int)>:<public>:<android.media.AudioTrack>
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>:<public>:<android.telephony.PhoneStateListener>
<android.preference.PreferenceGroup: void dispatchSaveInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.provider.Settings.Global: void <clinit>()>:<static>:<android.provider.Settings.Global:android.provider.Settings.NameValueTable>
<android.media.MediaFormat: void setFeatureEnabled(java.lang.String,boolean)>:<public>:<android.media.MediaFormat>
<android.provider.DocumentsContract: void <init>()>:<>:<android.provider.DocumentsContract>
<android.print.PrintAttributes.Resolution: void <init>(java.lang.String,java.lang.String,int,int)>:<public>:<android.print.PrintAttributes.Resolution>
<android.net.wifi.p2p.WifiP2pInfo: java.lang.String toString()>:<public>:<android.net.wifi.p2p.WifiP2pInfo:android.os.Parcelable>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>:<public static>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.media.JetPlayer.OnJetEventListener: void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.app.NativeActivity: void onGlobalLayout()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.opengl.GLU: java.lang.String gluErrorString(int)>:<public static>:<android.opengl.GLU>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayChanged(int)>:<public abstract>:<android.hardware.display.DisplayManager.DisplayListener>
<android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.LeadingMarginSpan.Standard: int getSpanTypeId()>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder setClassInstanceLimit(java.lang.Class,int)>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.os.ConditionVariable: void close()>:<public>:<android.os.ConditionVariable>
<android.util.SparseBooleanArray: int indexOfValue(boolean)>:<public>:<android.util.SparseBooleanArray:java.lang.Cloneable>
<android.opengl.GLES10: void glFogxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection.Callback,android.os.Handler)>:<public>:<android.telecom.RemoteConnection>
<android.telecom.RemoteConnection.VideoProvider: void setDeviceOrientation(int)>:<public>:<android.telecom.RemoteConnection.VideoProvider>
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>:<public>:<android.location.LocationManager>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.security.KeyPairGeneratorSpec: void <init>()>:<>:<android.security.KeyPairGeneratorSpec:java.security.spec.AlgorithmParameterSpec>
<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.graphics.drawable.Drawable: boolean isFilterBitmap()>:<public>:<android.graphics.drawable.Drawable>
<android.view.View: int getForegroundGravity()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>:<public>:<android.app.Notification.Builder>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Picture: int getHeight()>:<public>:<android.graphics.Picture>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)>:<public static>:<android.view.Gravity>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.Window: void setChildInt(int,int)>:<public abstract>:<android.view.Window>
<android.media.AudioAttributes.Builder: void <init>(android.media.AudioAttributes)>:<public>:<android.media.AudioAttributes.Builder>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.widget.MediaController.MediaPlayerControl: boolean canPause()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.preference.Preference: void notifyHierarchyChanged()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.test.AndroidTestRunner: void testStarted(java.lang.String)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>:<public>:<android.security.keystore.KeyGenParameterSpec.Builder>
<android.location.Criteria: void setCostAllowed(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks2>
<android.graphics.drawable.Animatable2.AnimationCallback: void onAnimationStart(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.Animatable2.AnimationCallback>
<android.widget.AbsSeekBar: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.ViewParent: void clearChildFocus(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.os.Parcel: void readBinderArray(android.os.IBinder[])>:<public final>:<android.os.Parcel>
<android.renderscript.Short3: void <init>(short,short,short)>:<public>:<android.renderscript.Short3>
<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.app.Activity: android.net.Uri getReferrer()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks2>
<android.widget.AbsListView.SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>:<public abstract>:<android.widget.AbsListView.SelectionBoundsAdjuster>
<android.media.AudioRecord: int getPositionNotificationPeriod()>:<public>:<android.media.AudioRecord>
<android.gesture.GestureStore: int getOrientationStyle()>:<public>:<android.gesture.GestureStore>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.AnimatedVectorDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Animatable2>
<android.security.keystore.UserNotAuthenticatedException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.security.keystore.UserNotAuthenticatedException:java.security.InvalidKeyException,java.security.KeyException,java.security.GeneralSecurityException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Script: void getVarV(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.animation.ObjectAnimator: void setIntValues(int[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.QuickContactBadge: void setPrioritizedMimeType(java.lang.String)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.app.Fragment: void onDestroyView()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.Throwable)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.TextView: void onEditorAction(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.VoiceInteractor.PickOptionRequest.Option: void setExtras(android.os.Bundle)>:<public>:<android.app.VoiceInteractor.PickOptionRequest.Option:android.os.Parcelable>
<android.util.TypedValue: void <init>()>:<public>:<android.util.TypedValue>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel[] values()>:<public static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.telecom.DisconnectCause: void <init>(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String,int)>:<public>:<android.telecom.DisconnectCause:android.os.Parcelable>
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>:<public abstract>:<android.webkit.WebSettings>
<android.util.TypedValue: float complexToFraction(int,float,float)>:<public static>:<android.util.TypedValue>
<android.view.animation.Animation: void restrictDuration(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.hardware.camera2.CameraManager: void openCamera(java.lang.String,android.hardware.camera2.CameraDevice.StateCallback,android.os.Handler)>:<public>:<android.hardware.camera2.CameraManager>
<android.content.pm.PackageInstaller.SessionInfo: android.graphics.Bitmap getAppIcon()>:<public>:<android.content.pm.PackageInstaller.SessionInfo:android.os.Parcelable>
<android.widget.CheckedTextView: void toggle()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.os.Handler: void dump(android.util.Printer,java.lang.String)>:<public final>:<android.os.Handler>
<android.opengl.GLES31: void glMemoryBarrierByRegion(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.content.ContextWrapper: java.io.File getCacheDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>:<protected>:<android.net.UrlQuerySanitizer>
<android.text.TextUtils.EllipsizeCallback: void ellipsized(int,int)>:<public abstract>:<android.text.TextUtils.EllipsizeCallback>
<android.provider.Contacts.Organizations: void <init>()>:<>:<android.provider.Contacts.Organizations:android.provider.BaseColumns,android.provider.Contacts.OrganizationColumns>
<android.media.audiofx.Equalizer: short getNumberOfPresets()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>:<public>:<android.telephony.PhoneStateListener>
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.pm.Signature: boolean equals(java.lang.Object)>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.content.Context: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.opengl.GLES31: java.lang.String glGetProgramPipelineInfoLog(int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.util.EventLog: int writeEvent(int,long)>:<public static native>:<android.util.EventLog>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.os.IBinder: boolean isBinderAlive()>:<public abstract>:<android.os.IBinder>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>:<public static>:<android.net.TrafficStats>
<android.os.PatternMatcher: void <init>(java.lang.String,int)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.webkit.WebView: void clearClientCertPreferences(java.lang.Runnable)>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.wifi.WifiEnterpriseConfig: int getEapMethod()>:<public>:<android.net.wifi.WifiEnterpriseConfig:android.os.Parcelable>
<android.nfc.tech.NfcA: void <init>()>:<>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.os.TransactionTooLargeException: void <init>()>:<public>:<android.os.TransactionTooLargeException:android.os.RemoteException,android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.GridLayout:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>:<public static native>:<android.opengl.EGL14>
<android.widget.AbsListView: void dispatchDrawableHotspotChanged(float,float)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.ViewConfiguration: int getScaledScrollBarSize()>:<public>:<android.view.ViewConfiguration>
<android.opengl.ETC1Util.ETC1Texture: int getWidth()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>:<public>:<android.view.Window>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(android.view.accessibility.AccessibilityEvent)>:<public static>:<android.view.accessibility.AccessibilityEvent:android.view.accessibility.AccessibilityRecord,android.os.Parcelable>
<android.renderscript.Allocation: void generateMipmaps()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>:<public>:<android.graphics.drawable.RippleDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable>
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.AbstractCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.service.notification.StatusBarNotification: boolean isOngoing()>:<public>:<android.service.notification.StatusBarNotification:android.os.Parcelable>
<android.database.AbstractCursor: double getDouble(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.provider.CalendarContract.Instances: void <clinit>()>:<static>:<android.provider.CalendarContract.Instances:android.provider.BaseColumns,android.provider.CalendarContract.EventsColumns,android.provider.CalendarContract.CalendarColumns>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alphaBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.graphics.Paint: void setARGB(int,int,int,int)>:<public>:<android.graphics.Paint>
<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>:<public>:<android.app.job.JobInfo:android.os.Parcelable>
<android.text.method.DialerKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.SingleLaunchActivityTestCase: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<junit.framework.TestSuite: void <init>(java.lang.Class[])>:<public transient>:<junit.framework.TestSuite:junit.framework.Test>
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.method.BaseKeyListener: void <init>()>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.view.animation.Animation: int getBackgroundColor()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.assist.AssistStructure.ViewNode: int getChildCount()>:<public>:<android.app.assist.AssistStructure.ViewNode>
<android.preference.Preference: java.lang.String toString()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES30: void glWaitSync(long,int,long)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.renderscript.BaseObj: java.lang.String getName()>:<public>:<android.renderscript.BaseObj>
<android.os.Debug.MemoryInfo: int getTotalSwappablePss()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.opengl.EGL14: int eglGetError()>:<public static native>:<android.opengl.EGL14>
<android.opengl.GLES10: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.FragmentController: void dispatchPause()>:<public>:<android.app.FragmentController>
<android.app.Fragment: android.transition.Transition getSharedElementEnterTransition()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks2,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>:<public abstract>:<android.webkit.WebSettings>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)>:<public static native>:<android.opengl.GLES30:android.opengl.GLES20>
<android.graphics.PixelXorXfermode: void <init>(int)>:<public>:<android.graphics.PixelXorXfermode:android.graphics.Xfermode>
<android.provider.MediaStore.Audio.Playlists: void <init>()>:<public>:<android.provider.MediaStore.Audio.Playlists:android.provider.BaseColumns,android.provider.MediaStore.Audio.PlaylistsColumns>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.SipAddress:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putLong(int,long)>:<public synchronized>:<android.media.MediaMetadataEditor>
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: long getDuration()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>:<public>:<android.renderscript.ScriptIntrinsicBlur:android.renderscript.ScriptIntrinsic,android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.PopupWindow: boolean isTouchable()>:<public>:<android.widget.PopupWindow>
<android.content.pm.LabeledIntent: int getIconResource()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.graphics.drawable.LevelListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.view.Menu: void setGroupCheckable(int,boolean,boolean)>:<public abstract>:<android.view.Menu>
<android.view.View: int getVerticalFadingEdgeLength()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.VolumeProvider: void onSetVolumeTo(int)>:<public>:<android.media.VolumeProvider>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaFormat getDefaultFormat()>:<public>:<android.media.MediaCodecInfo.CodecCapabilities>
<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress.Namespace)>:<public>:<android.net.LocalSocketAddress>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.AdapterViewFlipper: int getFlipInterval()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>:<public>:<android.service.notification.NotificationListenerService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: android.view.ViewOverlay getOverlay()>:<public volatile>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.ContentProviderOperation: android.net.Uri getUri()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.preference.ListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.transition.TransitionSet: android.transition.Transition setStartDelay(long)>:<public volatile>:<android.transition.TransitionSet:android.transition.Transition>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>(java.lang.String)>:<public>:<android.text.style.TtsSpan.OrdinalBuilder:android.text.style.TtsSpan.SemioticClassBuilder,android.text.style.TtsSpan.Builder>
<junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.hardware.Camera: void addCallbackBuffer(byte[])>:<public final>:<android.hardware.Camera>
<android.media.PlaybackParams: float getPitch()>:<public>:<android.media.PlaybackParams:android.os.Parcelable>
<android.location.GpsStatus.Listener: void onGpsStatusChanged(int)>:<public abstract>:<android.location.GpsStatus.Listener>
<android.text.style.EasyEditSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.EasyEditSpan:android.text.ParcelableSpan>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.provider.MediaStore.Video.Thumbnails: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.content.SyncRequest.Builder: android.content.SyncRequest build()>:<public>:<android.content.SyncRequest.Builder>
<android.print.PrintJobId: boolean equals(java.lang.Object)>:<public>:<android.print.PrintJobId:android.os.Parcelable>
<android.text.AlteredCharSequence: android.text.AlteredCharSequence make(java.lang.CharSequence,char[],int,int)>:<public static>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.widget.ScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.util.SparseIntArray: java.lang.String toString()>:<public>:<android.util.SparseIntArray:java.lang.Cloneable>
<android.widget.TextView: float getLineSpacingExtra()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.nfc.tech.NfcV: int getMaxTransceiveLength()>:<public>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.telephony.CellSignalStrengthLte: int hashCode()>:<public>:<android.telephony.CellSignalStrengthLte:android.telephony.CellSignalStrength,android.os.Parcelable>
<android.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.ListPopupWindow>
<android.preference.Preference: void onBindView(android.view.View)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>:<public>:<android.view.accessibility.AccessibilityNodeInfo:android.os.Parcelable>
<android.view.animation.AnimationSet: long computeDurationHint()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.test.mock.MockContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.AliasActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.AliasActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.AbsListView: int getCheckedItemCount()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>:<public static>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.telecom.RemoteConnection: void abort()>:<public>:<android.telecom.RemoteConnection>
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.ViewGroup: void childHasTransientStateChanged(android.view.View,boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.util.Rational: boolean isZero()>:<public>:<android.util.Rational:java.lang.Number,java.lang.Comparable>
<android.opengl.GLES31: java.lang.String glGetProgramResourceName(int,int,int)>:<public static native>:<android.opengl.GLES31:android.opengl.GLES30,android.opengl.GLES20>
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.IntentSender: java.lang.String getCreatorPackage()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.graphics.Region: boolean quickContains(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.test.mock.MockPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.IsolatedContext: void sendBroadcast(android.content.Intent)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setBlockModes(java.lang.String[])>:<public transient>:<android.security.keystore.KeyProtection.Builder>
<android.bluetooth.BluetoothGattService: boolean addService(android.bluetooth.BluetoothGattService)>:<public>:<android.bluetooth.BluetoothGattService>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,int)>:<public abstract>:<android.service.textservice.SpellCheckerService.Session>
<android.gesture.Gesture: int getStrokesCount()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.View.OnApplyWindowInsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>:<public abstract>:<android.view.View.OnApplyWindowInsetsListener>
<android.os.Parcel: void recycle()>:<public final>:<android.os.Parcel>
<android.graphics.Bitmap: int getDensity()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.transition.Transition: java.lang.Object clone()>:<public volatile>:<android.transition.Transition:java.lang.Cloneable>
<android.os.PowerManager: boolean isPowerSaveMode()>:<public>:<android.os.PowerManager>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getEnterFadeDuration()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.service.voice.VoiceInteractionSession: boolean[] onGetSupportedCommands(java.lang.String[])>:<public>:<android.service.voice.VoiceInteractionSession:android.view.KeyEvent.Callback,android.content.ComponentCallbacks2>
<android.print.PrintAttributes.Resolution: int getHorizontalDpi()>:<public>:<android.print.PrintAttributes.Resolution>
<android.webkit.WebResourceError: void <init>()>:<>:<android.webkit.WebResourceError>
<android.renderscript.Script.LaunchOptions: int getYEnd()>:<public>:<android.renderscript.Script.LaunchOptions>
