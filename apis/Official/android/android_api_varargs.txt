<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,java.lang.Iterable,java.nio.charset.Charset,java.nio.file.OpenOption...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int...)>
<android.icu.text.UnicodeSet: android.icu.text.UnicodeSet addAll(T...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,V...)>
<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.lang.Object...)>
<java.nio.file.Files: java.lang.Object getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)>
<android.media.tv.TvContract.Programs.Genres: java.lang.String encode(java.lang.String...)>
<android.os.AsyncTask: void publishProgress(Progress...)>
<java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object...)>
<java.nio.file.spi.FileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)>
<java.io.PrintWriter: java.io.PrintWriter printf(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.view.InputDevice: boolean[] hasKeys(int...)>
<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence...)>
<java.util.Map: java.util.Map ofEntries(java.util.Map.Entry...)>
<android.widget.ArrayAdapter: void addAll(T...)>
<java.nio.file.SecureDirectoryStream extends java.nio.file.DirectoryStream: java.nio.channels.SeekableByteChannel newByteChannel(T,java.util.Set,java.nio.file.attribute.FileAttribute...)>
<android.view.textclassifier.TextClassifierEvent.Builder: T setActionIndices(int...)>
<android.icu.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object...)>
<java.nio.file.Files: java.util.stream.Stream find(java.nio.file.Path,int,java.util.function.BiPredicate,java.nio.file.FileVisitOption...)>
<java.nio.file.Files: java.nio.file.Path createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)>
<android.telecom.Connection: void removeExtras(java.lang.String...)>
<android.content.res.Resources: void removeLoaders(android.content.res.loader.ResourcesLoader...)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(Class...)>
<java.nio.file.FileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String...)>
<java.lang.invoke.MethodHandle: java.lang.Object invokeExact(java.lang.Object...)>
<android.widget.BaseAdapter: void setAutofillOptions(java.lang.CharSequence...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(T,android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,V...)>
<java.io.Console: java.lang.String readLine(java.lang.String,java.lang.Object...)>
<java.nio.file.Files: java.io.BufferedWriter newBufferedWriter(java.nio.file.Path,java.nio.file.OpenOption...)>
<java.util.stream.Stream extends java.util.stream.BaseStream: java.util.stream.Stream of(T...)>
<java.util.EnumSet: java.util.EnumSet of(E,E...)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,Class...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,T...)>
<android.icu.text.MeasureFormat: java.lang.String formatMeasures(android.icu.util.Measure...)>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object...)>
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption...)>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String...)>
<android.provider.DeviceConfig: android.provider.DeviceConfig.Properties getProperties(java.lang.String,java.lang.String...)>
<java.nio.file.Files: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)>
<java.nio.file.Files: A readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int...)>
<java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute...)>
<java.nio.file.spi.FileSystemProvider: V getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)>
<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object...)>
<android.service.autofill.FillResponse.Builder: android.service.autofill.FillResponse.Builder setFieldClassificationIds(android.view.autofill.AutofillId...)>
<java.util.concurrent.ForkJoinTask: void invokeAll(java.util.concurrent.ForkJoinTask...)>
<java.nio.file.spi.FileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)>
<java.nio.file.Files: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...)>
<android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String...)>
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,java.lang.Iterable,java.nio.file.OpenOption...)>
<android.animation.ValueAnimator: void setIntValues(int...)>
<java.nio.file.Path: java.nio.file.Path toRealPath(java.nio.file.LinkOption...)>
<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object...)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType insertParameterTypes(int,java.lang.Class...)>
<android.icu.text.Collator: void setReorderCodes(int...)>
<android.app.DownloadManager: int remove(long...)>
<android.icu.text.UnicodeSet: void <init>(int...)>
<java.nio.file.Files: java.util.Set getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption...)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle dropArguments(java.lang.invoke.MethodHandle,int,Class...)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle dropArguments(java.lang.invoke.MethodHandle,int,java.lang.Class...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setEncryptionPaddings(java.lang.String...)>
<java.lang.invoke.MethodHandle: java.lang.Object invoke(java.lang.Object...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(T,android.util.Property,int...)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle insertArguments(java.lang.invoke.MethodHandle,int,java.lang.Object...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float...)>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterById(long...)>
<java.util.stream.LongStream: java.util.stream.LongStream of(long...)>
<java.nio.file.Watchable: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind...)>
<java.nio.file.spi.FileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int...)>
<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)>
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,Iterable,java.nio.file.OpenOption...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setDigests(java.lang.String...)>
<java.nio.file.spi.FileSystemProvider: A readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)>
<java.io.Console: char[] readPassword(java.lang.String,java.lang.Object...)>
<java.nio.file.Files: java.util.stream.Stream walk(java.nio.file.Path,int,java.nio.file.FileVisitOption...)>
<java.util.Objects: int hash(java.lang.Object...)>
<android.content.Context: java.lang.String getString(int,java.lang.Object...)>
<java.nio.file.spi.FileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)>
<android.service.notification.ConditionProviderService: void notifyConditions(android.service.notification.Condition...)>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class...)>
<java.nio.file.spi.FileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)>
<android.webkit.TracingConfig.Builder: android.webkit.TracingConfig.Builder addCategories(int...)>
<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object...)>
<android.content.res.Resources: java.lang.String getQuantityString(@PluralsResint,int,java.lang.Object...)>
<java.nio.file.SecureDirectoryStream extends java.nio.file.DirectoryStream: V getFileAttributeView(T,java.lang.Class,java.nio.file.LinkOption...)>
<java.nio.file.spi.FileSystemProvider: void createSymbolicLink(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute...)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,java.lang.Class...)>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object...)>
<android.os.LocaleList: void <init>(java.util.Locale...)>
<android.content.res.Resources: java.lang.String getString(@StringResint,java.lang.Object...)>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(Class...)>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseBest(CharSequence,java.time.temporal.TemporalQuery...)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup create(java.lang.String,android.renderscript.ScriptGroup.Future...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(T,android.util.Property,float...)>
<java.util.List extends java.util.Collection: java.util.List of(E...)>
<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,Iterable,java.nio.charset.Charset,java.nio.file.OpenOption...)>
<android.util.EventLog: int writeEvent(int,java.lang.Object...)>
<java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector.Characteristics...)>
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.os.Vibrator: boolean areAllPrimitivesSupported(int...)>
<android.media.MediaParser: android.media.MediaParser create(android.media.MediaParser.OutputConsumer,java.lang.String...)>
<java.nio.file.Files: java.nio.file.Path createSymbolicLink(java.nio.file.Path,java.nio.file.Path,java.nio.file.attribute.FileAttribute...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String...)>
<java.nio.file.Files: boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int...)>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,Params...)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture anyOf(java.util.concurrent.CompletableFuture...)>
<android.animation.ValueAnimator: void setFloatValues(float...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int...)>
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class...)>
<android.app.slice.SliceProvider: void <init>(java.lang.String...)>
<java.util.stream.Collector: java.util.stream.Collector of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.stream.Collector.Characteristics...)>
<android.content.res.Resources: void addLoaders(android.content.res.loader.ResourcesLoader...)>
<java.util.Arrays: java.util.List asList(T...)>
<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(T,android.util.Property,int...)>
<android.app.AppOpsManager: java.util.List getOpsForPackage(int,java.lang.String,java.lang.String...)>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord,android.nfc.NdefRecord...)>
<android.service.autofill.Validators: android.service.autofill.Validator and(android.service.autofill.Validator...)>
<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withResolverFields(java.time.temporal.TemporalField...)>
<java.io.PrintStream: java.io.PrintStream printf(java.util.Locale,java.lang.String,java.lang.Object...)>
<java.nio.channels.AsynchronousFileChannel: java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path,java.nio.file.OpenOption...)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setPermissions(java.nio.file.attribute.AclEntryPermission...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int...)>
<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe...)>
<java.io.PrintWriter: java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object...)>
<java.nio.file.SecureDirectoryStream: java.nio.file.SecureDirectoryStream newDirectoryStream(T,java.nio.file.LinkOption...)>
<android.os.Vibrator: int[] areEffectsSupported(int...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,V...)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)>
<android.transition.Transition: void setMatchOrder(int...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(android.util.Property,android.animation.Keyframe...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,T...)>
<android.service.autofill.SaveInfo.Builder: android.service.autofill.SaveInfo.Builder addSanitizer(android.service.autofill.Sanitizer,android.view.autofill.AutofillId...)>
<android.app.Notification.Builder: android.app.Notification.Builder setActions(android.app.Notification.Action...)>
<android.os.AsyncTask: Result doInBackground(Params...)>
<java.nio.file.spi.FileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode...)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addInvoke(android.renderscript.Script.InvokeID,java.lang.Object...)>
<android.os.Vibrator: int areAllEffectsSupported(int...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(T,android.util.Property,android.animation.TypeEvaluator,V...)>
<android.content.Context: java.lang.String getString(@StringResint,java.lang.Object...)>
<java.util.Set extends java.util.Collection: java.util.Set of(E...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe...)>
<java.nio.file.Files: java.nio.file.Path createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute...)>
<android.icu.text.AlphabeticIndex: android.icu.text.AlphabeticIndex addLabels(android.icu.util.ULocale...)>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair...)>
<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object...)>
<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind...)>
<java.nio.file.Files: java.nio.file.Path createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)>
<java.util.logging.Logger: void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.util.ResourceBundle,java.lang.String,java.lang.Object...)>
<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object...)>
<android.text.TextUtils: CharSequence concat(java.lang.CharSequence...)>
<junit.framework.TestSuite: void <init>(java.lang.Class...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object...)>
<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String...)>
<android.animation.PropertyValuesHolder: void setIntValues(int...)>
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object...)>
<java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence...)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,Class...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setSignaturePaddings(java.lang.String...)>
<java.nio.channels.AsynchronousFileChannel: java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,T...)>
<android.view.textclassifier.TextClassifierEvent.Builder: T setScores(float...)>
<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind[],java.nio.file.WatchEvent.Modifier...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder...)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class...)>
<android.app.UiAutomation: void adoptShellPermissionIdentity(java.lang.String...)>
<java.nio.file.SecureDirectoryStream extends java.nio.file.DirectoryStream: java.nio.file.SecureDirectoryStream newDirectoryStream(T,java.nio.file.LinkOption...)>
<java.util.Collections: boolean addAll(java.util.Collection,T...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setDigests(java.lang.String...)>
<android.service.autofill.LuhnChecksumValidator: void <init>(android.view.autofill.AutofillId...)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,Class...)>
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object...)>
<android.icu.text.LocaleDisplayNames: android.icu.text.LocaleDisplayNames getInstance(android.icu.util.ULocale,android.icu.text.DisplayContext...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int...)>
<java.util.stream.Stream: java.util.stream.Stream of(T...)>
<java.nio.file.Files: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)>
<java.nio.file.Files: java.nio.file.Path createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)>
<java.nio.file.Files: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float...)>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity...)>
<java.util.stream.DoubleStream extends java.util.stream.BaseStream: java.util.stream.DoubleStream of(double...)>
<java.nio.file.spi.FileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)>
<java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType appendParameterTypes(java.lang.Class...)>
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object...)>
<android.service.autofill.FillResponse.Builder: android.service.autofill.FillResponse.Builder setIgnoredIds(android.view.autofill.AutofillId...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder...)>
<java.util.Calendar.Builder: java.util.Calendar.Builder setFields(int...)>
<java.nio.file.Files: V getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)>
<android.webkit.TracingConfig.Builder: android.webkit.TracingConfig.Builder addCategories(java.lang.String...)>
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder...)>
<android.icu.text.AlphabeticIndex: android.icu.text.AlphabeticIndex addLabels(java.util.Locale...)>
<java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption...)>
<android.content.integrity.IntegrityFormula: android.content.integrity.IntegrityFormula any(android.content.integrity.IntegrityFormula...)>
<java.nio.file.Files: java.io.BufferedWriter newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption...)>
<android.os.Vibrator: boolean[] arePrimitivesSupported(int...)>
<android.os.AsyncTask: void onProgressUpdate(Progress...)>
<java.lang.String: java.lang.String join(CharSequence,java.lang.CharSequence...)>
<java.nio.file.Files: java.nio.file.Path setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)>
<android.view.textclassifier.TextClassifierEvent.Builder: T setEntityTypes(java.lang.String...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int...)>
<java.nio.file.spi.FileSystemProvider: java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)>
<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture allOf(java.util.concurrent.CompletableFuture...)>
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe...)>
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback,android.app.Activity,android.app.Activity...)>
<java.nio.file.Watchable: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind[],java.nio.file.WatchEvent.Modifier...)>
<java.nio.file.Path extends java.lang.Comparable java.lang.Iterable java.nio.file.Watchable: java.nio.file.Path toRealPath(java.nio.file.LinkOption...)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setBlockModes(java.lang.String...)>
<java.lang.reflect.Constructor: T newInstance(java.lang.Object...)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object...)>
<java.nio.file.SecureDirectoryStream: V getFileAttributeView(T,java.lang.Class,java.nio.file.LinkOption...)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType insertParameterTypes(int,Class...)>
<android.icu.text.MeasureFormat: java.lang.StringBuilder formatMeasures(java.lang.StringBuilder,java.text.FieldPosition,android.icu.util.Measure...)>
<java.util.stream.DoubleStream: java.util.stream.DoubleStream of(double...)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class...)>
<java.util.stream.IntStream extends java.util.stream.BaseStream: java.util.stream.IntStream of(int...)>
<java.io.PrintWriter: java.io.PrintWriter format(java.lang.String,java.lang.Object...)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addKernel(android.renderscript.Script.KernelID,android.renderscript.Type,java.lang.Object...)>
<java.nio.file.Files: java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path,java.nio.file.LinkOption...)>
<java.lang.ProcessBuilder: void <init>(java.lang.String...)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object...)>
<android.icu.text.ListFormatter: java.lang.String format(java.lang.Object...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String...)>
<android.content.integrity.IntegrityFormula: android.content.integrity.IntegrityFormula all(android.content.integrity.IntegrityFormula...)>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating createRating(java.lang.String,java.lang.String,java.lang.String,java.lang.String...)>
<java.lang.invoke.MethodType: java.lang.invoke.MethodType appendParameterTypes(Class...)>
<java.nio.file.Files: java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption...)>
<java.nio.file.Files: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)>
<android.app.Fragment: java.lang.String getString(@StringResint,java.lang.Object...)>
<java.nio.channels.FileChannel: java.nio.channels.FileChannel open(java.nio.file.Path,java.nio.file.OpenOption...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object...)>
<java.nio.file.Files: boolean notExists(java.nio.file.Path,java.nio.file.LinkOption...)>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator...)>
<java.util.stream.LongStream extends java.util.stream.BaseStream: java.util.stream.LongStream of(long...)>
<android.renderscript.ScriptGroup: java.lang.Object[] execute(java.lang.Object...)>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator...)>
<android.animation.PropertyValuesHolder: void setFloatValues(float...)>
<android.service.autofill.Validators: android.service.autofill.Validator or(android.service.autofill.Validator...)>
<java.util.stream.IntStream: java.util.stream.IntStream of(int...)>
<java.nio.file.spi.FileSystemProvider: java.nio.channels.FileChannel newFileChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)>
<java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String...)>
<android.text.TextUtils: CharSequence expandTemplate(CharSequence,java.lang.CharSequence...)>
<android.telecom.Call: void removeExtras(java.lang.String...)>
<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)>
<java.nio.file.spi.FileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setSignaturePaddings(java.lang.String...)>
<java.nio.file.spi.FileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)>
<java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption...)>
<android.icu.text.LocaleDisplayNames: android.icu.text.LocaleDisplayNames getInstance(java.util.Locale,android.icu.text.DisplayContext...)>
<java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandle permuteArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,int...)>
<java.nio.file.Files: java.nio.file.Path move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)>
<android.telecom.Conference: void removeExtras(java.lang.String...)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class...)>
<java.nio.file.SecureDirectoryStream: java.nio.channels.SeekableByteChannel newByteChannel(T,java.util.Set,java.nio.file.attribute.FileAttribute...)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float...)>
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,Class...)>
<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object...)>
<java.io.Console: java.io.Console printf(java.lang.String,java.lang.Object...)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int...)>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String...)>
<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parseBest(java.lang.CharSequence,java.time.temporal.TemporalQuery...)>
<android.os.AsyncTask: android.os.AsyncTask execute(Params...)>
<java.nio.file.Files: long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption...)>
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter.OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity...)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object...)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,V...)>
<java.nio.file.attribute.AclEntry.Builder: java.nio.file.attribute.AclEntry.Builder setFlags(java.nio.file.attribute.AclEntryFlag...)>
<android.view.View: void setAutofillHints(java.lang.String...)>
<java.nio.file.Files: java.util.stream.Stream walk(java.nio.file.Path,java.nio.file.FileVisitOption...)>
