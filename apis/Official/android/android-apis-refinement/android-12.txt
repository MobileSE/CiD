<android.test.ActivityUnitTestCase: int getFinishedActivityRequest()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.StaticLayout: int getEllipsizedWidth()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.renderscript.Allocation: void copyFrom(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void shutdown()>:<public>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.animation.PropertyValuesHolder: void setIntValues(int[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.content.res.AssetManager.AssetInputStream: int read(byte[],int,int)>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.app.Activity: void onAttachedToWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.xmlpull.v1.XmlSerializer: void ignorableWhitespace(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<org.apache.http.protocol.DefaultedHttpContext: org.apache.http.protocol.HttpContext getDefaults()>:<public>:<org.apache.http.protocol.DefaultedHttpContext:org.apache.http.protocol.HttpContext>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>:<public final>:<org.apache.http.conn.scheme.Scheme>
<android.content.ContentProvider: void setWritePermission(java.lang.String)>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<org.apache.http.HttpMessage: org.apache.http.HeaderIterator headerIterator()>:<public abstract>:<org.apache.http.HttpMessage>
<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.text.method.TextKeyListener.Capitalize: void <init>(java.lang.String,int)>:<private>:<android.text.method.TextKeyListener.Capitalize:java.lang.Enum>
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.widget.LinearLayout: int getShowDividers()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedSqlLiteObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.view.View: int getVerticalScrollbarPosition()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.cookie.BasicClientCookie: int getVersion()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.hardware.usb.UsbConstants: void <init>()>:<public>:<android.hardware.usb.UsbConstants>
<org.apache.http.ParseException: void <init>()>:<public>:<org.apache.http.ParseException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.RectF: void <init>(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.location.Address: void setSubThoroughfare(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.opengl.GLES20: int glGetError()>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodSubtype: void <clinit>()>:<static>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>:<public>:<android.media.AudioManager>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.MotionEvent: float getAxisValue(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>:<public static>:<android.text.TextUtils>
<android.appwidget.AppWidgetHost: void deleteHost()>:<public>:<android.appwidget.AppWidgetHost>
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader)>:<protected static final>:<org.apache.http.util.VersionInfo>
<android.app.ActivityManager: java.util.List getRunningServices(int)>:<public>:<android.app.ActivityManager>
<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean)>:<public>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.os.PowerManager.WakeLock: boolean isHeld()>:<public>:<android.os.PowerManager.WakeLock>
<android.hardware.usb.UsbAccessory: boolean equals(java.lang.Object)>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<org.apache.http.entity.SerializableEntity: boolean isStreaming()>:<public>:<org.apache.http.entity.SerializableEntity:org.apache.http.entity.AbstractHttpEntity>
<android.view.ViewParent: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public abstract>:<android.view.ViewParent>
<org.json.JSONArray: java.lang.String getString(int)>:<public>:<org.json.JSONArray>
<org.apache.http.cookie.Cookie: boolean isExpired(java.util.Date)>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.test.ActivityInstrumentationTestCase2: void runTest()>:<protected>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.cookie.BasicExpiresHandler: void <init>(java.lang.String[])>:<public>:<org.apache.http.impl.cookie.BasicExpiresHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ZoomControls: void hide()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>:<public final>:<android.os.Parcel>
<android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newUpdateOperation(android.net.Uri,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.preference.RingtonePreference: void <init>(android.content.Context)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.preference.EditTextPreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.HttpConnectionMetrics: long getResponseCount()>:<public abstract>:<org.apache.http.HttpConnectionMetrics>
<android.widget.Gallery.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>:<public>:<android.telephony.TelephonyManager>
<android.text.method.BaseMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.view.View: void setPivotY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.Gesture: float getLength()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.app.FragmentManager: void popBackStack(java.lang.String,int)>:<public abstract>:<android.app.FragmentManager>
<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.view.View: void dispatchWindowVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.LocalSocketAddress.Namespace: void <clinit>()>:<static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.AnticipateInterpolator: void <init>()>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>:<public>:<android.appwidget.AppWidgetManager>
<android.app.ActivityGroup: void onStop()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.Service: android.app.Application getApplication()>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.preference.CheckBoxPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.renderscript.AllocationAdapter: void subData1D(int,int,short[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.preference.EditTextPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.protocol.BasicHttpProcessor: void clearResponseInterceptors()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>:<public>:<android.graphics.Paint>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Fragment: void onDestroyOptionsMenu()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.test.mock.MockDialogInterface: void dismiss()>:<public>:<android.test.mock.MockDialogInterface:android.content.DialogInterface>
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.AudioFormat: void <init>()>:<public>:<android.media.AudioFormat>
<org.apache.http.entity.FileEntity: java.lang.Object clone()>:<public>:<org.apache.http.entity.FileEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>:<public static final>:<android.webkit.URLUtil>
<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.widget.Adapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.Adapter>
<android.widget.TextView: void cancelLongPress()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.nfc.tech.NfcV: byte getDsfId()>:<public>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.provider.MediaStore.Audio.Genres: void <init>()>:<public>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>:<public final>:<android.content.res.Resources>
<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.app.Activity: android.app.ActionBar getActionBar()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>:<public static>:<android.graphics.Typeface>
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()>:<public static>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.text.method.DateKeyListener: int getInputType()>:<public>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.auth.InvalidCredentialsException:org.apache.http.auth.AuthenticationException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.telephony.SmsMessage.MessageClass: void <clinit>()>:<static>:<android.telephony.SmsMessage.MessageClass:java.lang.Enum>
<org.apache.http.conn.BasicManagedEntity: boolean eofDetected(java.io.InputStream)>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.location.Location: java.lang.String convert(double,int)>:<public static>:<android.location.Location:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.DTDHandler getDTDHandler()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.opengl.ETC1Util.ETC1Texture: void <init>(int,int,java.nio.ByteBuffer)>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.location.Criteria: int getAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.RectF: void set(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.view.ViewConfiguration: int getScaledOverscrollDistance()>:<public>:<android.view.ViewConfiguration>
<android.view.MotionEvent: float getHistoricalTouchMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.service.wallpaper.WallpaperService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager.OnDismissListener)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.DefaultClientConnectionOperator:org.apache.http.conn.ClientConnectionOperator>
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>:<public>:<android.content.ContentProviderClient>
<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>:<public abstract>:<android.view.SurfaceHolder>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.util.Base64InputStream: boolean markSupported()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.media.audiofx.AudioEffect: boolean getEnabled()>:<public>:<android.media.audiofx.AudioEffect>
<android.widget.GridView: void setVerticalSpacing(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.CalendarView: void setEnabled(boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.backup.BackupDataInput: void skipEntityData()>:<public>:<android.app.backup.BackupDataInput>
<android.net.rtp.AudioGroup: void finalize()>:<protected>:<android.net.rtp.AudioGroup>
<android.widget.SpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.SpinnerAdapter:android.widget.Adapter>
<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>:<public>:<android.graphics.Paint>
<android.os.MemoryFile: void finalize()>:<protected>:<android.os.MemoryFile>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReference(java.lang.String,int)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.location.LocationProvider: boolean hasMonetaryCost()>:<public abstract>:<android.location.LocationProvider>
<android.view.ViewGroup: void removeViewsInLayout(int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.widget.TextView: void setText(char[],int,int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.location.Location: int describeContents()>:<public>:<android.location.Location:android.os.Parcelable>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.drm.DrmManagerClient: void finalize()>:<protected>:<android.drm.DrmManagerClient>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<org.apache.http.conn.scheme.Scheme: int resolvePort(int)>:<public final>:<org.apache.http.conn.scheme.Scheme>
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>:<public>:<android.graphics.Interpolator>
<android.text.style.BulletSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.TouchUtils: void scrollToTop(android.test.InstrumentationTestCase,android.app.Activity,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<org.apache.http.auth.InvalidCredentialsException: void <init>()>:<public>:<org.apache.http.auth.InvalidCredentialsException:org.apache.http.auth.AuthenticationException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>:<public>:<android.app.ActivityManager>
<android.widget.PopupWindow: void setClippingEnabled(boolean)>:<public>:<android.widget.PopupWindow>
<android.telephony.PhoneNumberUtils: boolean isDialable(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.String toString()>:<public>:<org.apache.http.impl.conn.tsccm.RefQueueWorker:java.lang.Runnable>
<android.graphics.Rect: boolean contains(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.database.sqlite.SQLiteDoneException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.AbsListView: int getChoiceMode()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceFragment: void addPreferencesFromIntent(android.content.Intent)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.os.Message: void <init>()>:<public>:<android.os.Message:android.os.Parcelable>
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onCreate()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.net.wifi.WifiConfiguration.GroupCipher: void <init>()>:<>:<android.net.wifi.WifiConfiguration.GroupCipher>
<android.mtp.MtpStorageInfo: long getFreeSpace()>:<public final>:<android.mtp.MtpStorageInfo>
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.pm.PackageManager: int getApplicationEnabledSetting(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor.AutoCloseOutputStream:java.io.FileOutputStream,java.io.OutputStream>
<android.widget.TextView: void debug(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>:<public>:<android.graphics.Paint>
<android.view.SurfaceHolder: void setFormat(int)>:<public abstract>:<android.view.SurfaceHolder>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.Menu: void removeGroup(int)>:<public abstract>:<android.view.Menu>
<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int)>:<public>:<org.apache.http.conn.params.ConnPerRouteBean:org.apache.http.conn.params.ConnPerRoute>
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>:<public final>:<android.os.Parcel>
<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>:<public>:<android.view.TouchDelegate>
<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>:<public>:<android.webkit.WebChromeClient>
<android.animation.FloatEvaluator: void <init>()>:<public>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.view.LayoutInflater: android.content.Context getContext()>:<public>:<android.view.LayoutInflater>
<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setY(int)>:<public>:<android.renderscript.Type.Builder>
<android.widget.ProgressBar: void onMeasure(int,int)>:<protected synchronized>:<android.widget.ProgressBar:android.view.View>
<android.app.backup.BackupManager: void dataChanged()>:<public>:<android.app.backup.BackupManager>
<android.renderscript.Mesh.TriangleMeshBuilder: void <init>(android.renderscript.RenderScript,int,int)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.os.Debug: void startMethodTracing()>:<public static>:<android.os.Debug>
<android.app.ActionBar: void setCustomView(android.view.View,android.app.ActionBar.LayoutParams)>:<public abstract>:<android.app.ActionBar>
<android.view.Surface: void setSize(int,int)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>:<public>:<android.app.admin.DevicePolicyManager>
<dalvik.system.DexClassLoader: java.lang.String findLibrary(java.lang.String)>:<protected>:<dalvik.system.DexClassLoader:java.lang.ClassLoader>
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.wifi.WifiManager.WifiLock: void <init>(android.net.wifi.WifiManager)>:<>:<android.net.wifi.WifiManager.WifiLock>
<android.os.SystemClock: boolean setCurrentTimeMillis(long)>:<public static native>:<android.os.SystemClock>
<org.apache.http.io.SessionInputBuffer: boolean isDataAvailable(int)>:<public abstract>:<org.apache.http.io.SessionInputBuffer>
<android.text.style.ReplacementSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>:<public abstract>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.widget.AdapterView: android.view.View getSelectedView()>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.app.Activity: void <init>()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.os.ParcelFormatException: void <init>(java.lang.String)>:<public>:<android.os.ParcelFormatException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ListPopupWindow: void setHeight(int)>:<public>:<android.widget.ListPopupWindow>
<android.accounts.AccountsException: void <init>(java.lang.String)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>:<public abstract>:<android.view.MenuItem>
<android.view.Window: boolean hasFeature(int)>:<public>:<android.view.Window>
<android.graphics.drawable.InsetDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.RotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void shutdown()>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.graphics.drawable.PaintDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<protected>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromPrivateFile(android.content.Context,java.lang.String)>:<public static>:<android.gesture.GestureLibraries>
<org.apache.http.message.BasicHeaderIterator: boolean hasNext()>:<public>:<org.apache.http.message.BasicHeaderIterator:org.apache.http.HeaderIterator>
<android.inputmethodservice.Keyboard.Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>:<public>:<android.inputmethodservice.Keyboard.Row>
<android.os.RecoverySystem: void <init>()>:<public>:<android.os.RecoverySystem>
<android.content.EntityIterator: void reset()>:<public abstract>:<android.content.EntityIterator:java.util.Iterator>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.FaceDetector.Face: float confidence()>:<public>:<android.media.FaceDetector.Face>
<android.graphics.drawable.ScaleDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.protocol.ResponseConnControl: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.ResponseConnControl:org.apache.http.HttpResponseInterceptor>
<android.view.SurfaceHolder: void setFixedSize(int,int)>:<public abstract>:<android.view.SurfaceHolder>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>:<public>:<android.view.ViewTreeObserver>
<android.graphics.BitmapRegionDecoder: int getHeight()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.app.ActivityManager: int getLauncherLargeIconSize()>:<public>:<android.app.ActivityManager>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.animation.ObjectAnimator: void setFloatValues(float[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<org.apache.http.impl.cookie.RFC2109DomainHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2109DomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.widget.TextView.SavedState: void <clinit>()>:<static>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.widget.RemoteViews: java.lang.Object clone()>:<public volatile>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.AbsListView: int pointToPosition(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLUtils: void <init>()>:<>:<android.opengl.GLUtils>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreferredPreviewSizeForVideo()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.Drawable>
<junit.runner.BaseTestRunner: void <init>()>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<org.apache.http.message.BasicHeader: java.lang.String getValue()>:<public>:<org.apache.http.message.BasicHeader:org.apache.http.Header,java.lang.Cloneable>
<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<org.json.JSONTokener: char next(char)>:<public>:<org.json.JSONTokener>
<android.gesture.GesturePoint: void <init>(float,float,long)>:<public>:<android.gesture.GesturePoint>
<android.os.Build: void <clinit>()>:<static>:<android.os.Build>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getViewTypeCount()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.webkit.WebView: void emulateShiftHeld()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()>:<public static>:<android.nfc.NfcAdapter>
<android.preference.PreferenceActivity: void onHeaderClick(android.preference.PreferenceActivity.Header,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>:<public abstract>:<android.content.Context>
<android.os.Bundle: void putDoubleArray(java.lang.String,double[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskWrites()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.text.style.TypefaceSpan: int describeContents()>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.AnalogClock: void onMeasure(int,int)>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>:<public static final>:<android.text.format.DateFormat>
<android.text.Layout: int getLineTop(int)>:<public abstract>:<android.text.Layout>
<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.accounts.Account: java.lang.String toString()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.net.http.AndroidHttpClient: void close()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.provider.ContactsContract.Contacts.Photo: void <init>()>:<>:<android.provider.ContactsContract.Contacts.Photo:android.provider.BaseColumns,android.provider.ContactsContract.DataColumnsWithJoins>
<android.graphics.Color: int argb(int,int,int,int)>:<public static>:<android.graphics.Color>
<android.util.MonthDisplayHelper: boolean isWithinCurrentMonth(int,int)>:<public>:<android.util.MonthDisplayHelper>
<org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<org.apache.http.auth.AuthScope: int match(org.apache.http.auth.AuthScope)>:<public>:<org.apache.http.auth.AuthScope>
<android.app.ActionBar: void setTitle(int)>:<public abstract>:<android.app.ActionBar>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.impl.conn.Wire)>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.view.KeyEvent: int getDeviceId()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.format.Time: void set(int,int,int)>:<public>:<android.text.format.Time>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setTitle(java.lang.CharSequence)>:<public>:<android.app.DownloadManager.Request>
<android.view.View: void setHorizontalScrollBarEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONArray: void <init>(java.util.Collection)>:<public>:<org.json.JSONArray>
<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumWidth()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>:<public final>:<android.os.Parcel>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringInternal>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>:<public static final>:<android.text.format.DateFormat>
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>:<public final>:<android.content.BroadcastReceiver>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: void <init>(int)>:<public>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>:<public static>:<android.content.ContentResolver>
<android.app.Fragment: void onCreate(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.content.ClipDescription: void <clinit>()>:<static>:<android.content.ClipDescription:android.os.Parcelable>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>:<public>:<android.renderscript.FieldPacker>
<android.widget.ImageView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.ImageView:android.view.View>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.util.SparseArray: java.lang.Object get(int)>:<public>:<android.util.SparseArray>
<android.widget.RemoteViews: void showNext(int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.sip.SipErrorCode: void <init>()>:<>:<android.net.sip.SipErrorCode>
<android.content.Intent: java.lang.String getType()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.style.ForegroundColorSpan: int describeContents()>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.widget.SearchView: void setQueryRefinementEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.ComponentName: java.lang.String flattenToString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<org.apache.http.impl.io.HttpRequestWriter: void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.HttpRequestWriter:org.apache.http.impl.io.AbstractMessageWriter>
<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)>:<public synchronized>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.graphics.Path: void finalize()>:<protected>:<android.graphics.Path>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.AllocationAdapter: void copyFrom(float[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<org.apache.http.impl.DefaultHttpResponseFactory: org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.DefaultHttpResponseFactory:org.apache.http.HttpResponseFactory>
<android.net.rtp.AudioStream: void setCodec(android.net.rtp.AudioCodec)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>:<public>:<android.media.AudioManager>
<android.graphics.MaskFilter: void finalize()>:<protected>:<android.graphics.MaskFilter>
<android.net.wifi.SupplicantState: boolean isValidState(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.webkit.WebStorage: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>:<public>:<android.app.NotificationManager>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable,int)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedNetworkTypes(int)>:<public>:<android.app.DownloadManager.Request>
<android.view.View: void onAnimationStart()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.util.Base64: byte[] decode(java.lang.String,int)>:<public static>:<android.util.Base64>
<android.view.View: int getPaddingBottom()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.animation.LayoutTransition: void addTransitionListener(android.animation.LayoutTransition.TransitionListener)>:<public>:<android.animation.LayoutTransition>
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.AudioManager: void setRouting(int,int,int)>:<public>:<android.media.AudioManager>
<android.widget.TableRow.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.ExpandableListView: void setSelectedGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TabWidget: int getChildDrawingOrder(int,int)>:<protected>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<org.json.JSONTokener: void <init>(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.util.Base64OutputStream: void write(byte[],int,int)>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.view.View: void drawableStateChanged()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.HttpConnectionMetricsImpl: long getRequestCount()>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.test.mock.MockCursor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.drm.DrmManagerClient: int removeRights(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.graphics.Bitmap: int getWidth()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.content.SyncContext: void <init>()>:<>:<android.content.SyncContext>
<android.view.ViewDebug: void stopHierarchyTracing()>:<public static>:<android.view.ViewDebug>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.GridLayoutAnimationController: void setDirection(int)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.text.style.TypefaceSpan: java.lang.String getFamily()>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.hardware.Camera.Parameters: int getJpegQuality()>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util.ETC1Texture,java.io.OutputStream)>:<public static>:<android.opengl.ETC1Util>
<android.drm.DrmSupportInfo: boolean equals(java.lang.Object)>:<public>:<android.drm.DrmSupportInfo>
<org.apache.http.impl.SocketHttpServerConnection: void setSocketTimeout(int)>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.renderscript.Script: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Script:android.renderscript.BaseObj>
<org.apache.http.impl.cookie.BasicPathHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BasicPathHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.View: void setTag(int,java.lang.Object)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>:<public>:<android.telephony.SmsMessage>
<android.os.Parcel: double[] createDoubleArray()>:<public final>:<android.os.Parcel>
<android.graphics.Paint.Join: void <clinit>()>:<static>:<android.graphics.Paint.Join:java.lang.Enum>
<android.content.res.Configuration: int compareTo(java.lang.Object)>:<public volatile>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.animation.Animation: void setRepeatCount(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.test.MoreAsserts: void assertNotMatchesRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.app.FragmentManager: void popBackStack()>:<public abstract>:<android.app.FragmentManager>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>:<protected>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>:<public abstract>:<android.os.Parcelable>
<android.text.format.Time: void <init>()>:<public>:<android.text.format.Time>
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>:<public>:<android.media.MediaRecorder>
<android.webkit.WebStorage.Origin: void <init>()>:<>:<android.webkit.WebStorage.Origin>
<android.gesture.GestureOverlayView: void clear(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.sip.SipProfile: java.lang.String getUriString()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.net.SSLCertificateSocketFactory: void <init>(int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.graphics.drawable.InsetDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.RSSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<android.text.style.TypefaceSpan: void <init>(java.lang.String)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State[] values()>:<public static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>:<public abstract>:<android.util.AttributeSet>
<android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.widget.ToggleButton: void drawableStateChanged()>:<protected>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.os.Debug: void resetAllCounts()>:<public static>:<android.os.Debug>
<android.test.TouchUtils: void dragViewToBottom(android.test.InstrumentationTestCase,android.app.Activity,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<android.widget.Checkable: void setChecked(boolean)>:<public abstract>:<android.widget.Checkable>
<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.content.res.AssetFileDescriptor: java.lang.String toString()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.service.wallpaper.WallpaperService: void <init>()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.Uri: java.lang.String getAuthority()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.client.ClientProtocolException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.nfc.tech.MifareClassic: void <clinit>()>:<static>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.content.ClipboardManager: void setText(java.lang.CharSequence)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.animation.AnimatorSet: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>:<public>:<android.hardware.usb.UsbRequest>
<android.widget.CursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.Uri: boolean isOpaque()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>:<public static>:<android.text.Layout>
<android.app.Activity: int getChangingConfigurations()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.res.Resources.Theme: void dump(int,java.lang.String,java.lang.String)>:<public>:<android.content.res.Resources.Theme>
<android.net.sip.SipProfile: boolean getAutoRegistration()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.net.wifi.WifiConfiguration.Protocol: void <init>()>:<>:<android.net.wifi.WifiConfiguration.Protocol>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>:<public>:<android.graphics.Paint>
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>:<public>:<android.content.res.TypedArray>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.inputmethod.EditorInfo: void makeCompatible(int)>:<public final>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.content.pm.PackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.test.mock.MockCursor: java.lang.String getColumnName(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<junit.framework.TestResult: void startTest(junit.framework.Test)>:<public>:<junit.framework.TestResult>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIconAttribute(int)>:<public>:<android.app.AlertDialog.Builder>
<android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(org.apache.http.Header)>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.provider.MediaStore.Audio.Artists.Albums: void <init>()>:<public>:<android.provider.MediaStore.Audio.Artists.Albums:android.provider.MediaStore.Audio.AlbumColumns>
<org.apache.http.entity.BufferedHttpEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.BufferedHttpEntity:org.apache.http.entity.HttpEntityWrapper>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>:<public>:<android.content.pm.PackageManager>
<android.widget.SearchView: boolean isSubmitButtonEnabled()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: boolean fullScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.xmlpull.v1.sax2.Driver: java.lang.String getLocalName(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.auth.NTCredentials: java.lang.String toString()>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl[] values()>:<public static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.database.AbstractCursor: int getType(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.test.mock.MockContext: java.io.File getFilesDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.TextView: int getBottomPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Canvas: void restoreToCount(int)>:<public native>:<android.graphics.Canvas>
<org.apache.commons.logging.Log: boolean isWarnEnabled()>:<public abstract>:<org.apache.commons.logging.Log>
<android.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.telephony.ServiceState: int describeContents()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.animation.AnimatorListenerAdapter: void onAnimationRepeat(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener>
<android.hardware.Camera.Parameters: void setPictureFormat(int)>:<public>:<android.hardware.Camera.Parameters>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind[] values()>:<public static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.net.sip.SipRegistrationListener: void onRegistering(java.lang.String)>:<public abstract>:<android.net.sip.SipRegistrationListener>
<android.widget.ZoomButton: void setEnabled(boolean)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<org.apache.http.message.BasicHeaderElement: boolean equals(java.lang.Object)>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<org.apache.http.impl.cookie.RFC2965Spec: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>:<public>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.TextView: boolean onPreDraw()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.PopupWindow: int getWidth()>:<public>:<android.widget.PopupWindow>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)>:<public>:<android.speech.tts.TextToSpeech>
<android.net.http.SslCertificate.DName: java.lang.String getCName()>:<public>:<android.net.http.SslCertificate.DName>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.BaseAdapter: int getViewTypeCount()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<org.apache.http.protocol.RequestUserAgent: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.RequestUserAgent:org.apache.http.HttpRequestInterceptor>
<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService.Insets)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.HttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>:<public abstract>:<org.apache.http.HttpClientConnection:org.apache.http.HttpConnection>
<android.widget.AbsListView: int getLeftPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.Bitmap: int getScaledWidth(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.opengl.Matrix: float length(float,float,float)>:<public static>:<android.opengl.Matrix>
<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>:<protected>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.os.Bundle: char[] getCharArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.media.AsyncPlayer: void <init>(java.lang.String)>:<public>:<android.media.AsyncPlayer>
<android.renderscript.RenderScriptGL: void setSurface(android.view.SurfaceHolder,int,int)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultTargetAuthenticationHandler:org.apache.http.impl.client.AbstractAuthenticationHandler>
<android.renderscript.Element: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.InputDevice: int getId()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<org.apache.http.impl.DefaultHttpServerConnection: void <init>()>:<public>:<org.apache.http.impl.DefaultHttpServerConnection:org.apache.http.impl.SocketHttpServerConnection,org.apache.http.impl.AbstractHttpServerConnection>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)>:<public static>:<android.gesture.GestureUtils>
<android.database.AbstractCursor.SelfContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.test.mock.MockPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.audiofx.PresetReverb: short getPreset()>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<org.apache.http.impl.client.RoutedRequest: void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>:<public>:<org.apache.http.impl.client.RoutedRequest>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>:<public>:<org.json.JSONObject>
<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>:<public static>:<android.graphics.Typeface>
<android.net.sip.SipProfile: void <clinit>()>:<static>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getProxyHost()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.view.HapticFeedbackConstants: void <init>()>:<>:<android.view.HapticFeedbackConstants>
<android.telephony.gsm.SmsMessage: int getStatus()>:<public>:<android.telephony.gsm.SmsMessage>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpContext createHttpContext()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.message.ParserCursor: int getUpperBound()>:<public>:<org.apache.http.message.ParserCursor>
<org.apache.http.conn.routing.RouteInfo.LayerType: void <init>(java.lang.String,int)>:<private>:<org.apache.http.conn.routing.RouteInfo.LayerType:java.lang.Enum>
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: boolean expectContinue()>:<public>:<org.apache.http.impl.client.EntityEnclosingRequestWrapper:org.apache.http.impl.client.RequestWrapper,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.database.MergeCursor: byte[] getBlob(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setOutboundProxy(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.net.http.SslCertificate.DName: java.lang.String getUName()>:<public>:<android.net.http.SslCertificate.DName>
<android.os.CountDownTimer: void onFinish()>:<public abstract>:<android.os.CountDownTimer>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.auth.AuthState: java.lang.String toString()>:<public>:<org.apache.http.auth.AuthState>
<android.nfc.NdefMessage: void <clinit>()>:<static>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.inputmethod.InputMethodInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.text.BoringLayout: int getBottomPadding()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.app.Instrumentation: void <init>()>:<public>:<android.app.Instrumentation>
<android.database.CursorWindow: void setStartPosition(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.provider.ContactsContract.SyncState: void <clinit>()>:<static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<org.apache.http.conn.routing.BasicRouteDirector: int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>:<protected>:<org.apache.http.conn.routing.BasicRouteDirector:org.apache.http.conn.routing.HttpRouteDirector>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()>:<protected final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.test.mock.MockPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Files>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.renderscript.Allocation: void copyTo(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.os.Process: int myTid()>:<public static final native>:<android.os.Process>
<android.app.backup.BackupDataInputStream: int read(byte[])>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled(java.lang.Thread)>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.text.method.ScrollingMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.renderscript.AllocationAdapter: void setLOD(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<junit.framework.Assert: void assertEquals(boolean,boolean)>:<public static>:<junit.framework.Assert>
<android.content.res.ColorStateList: int getDefaultColor()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>:<public abstract>:<android.content.Context>
<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.SimpleAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.opengl.GLSurfaceView: int getDebugFlags()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.renderscript.Script.FieldBase: android.renderscript.Allocation getAllocation()>:<public>:<android.renderscript.Script.FieldBase>
<android.preference.ListPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.database.DataSetObservable: void notifyInvalidated()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.net.Uri.Builder: android.net.Uri.Builder encodedQuery(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.text.method.NumberKeyListener: boolean ok(char[],char)>:<protected static>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: boolean domainMatch(java.lang.String,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.ApplicationTestCase: void tearDown()>:<protected>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()>:<public final>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.preference.PreferenceScreen: void <init>()>:<>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>:<public final>:<android.os.Handler>
<android.widget.ListPopupWindow: android.view.View getSelectedView()>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.message.BasicHeaderIterator: boolean filterHeader(int)>:<protected>:<org.apache.http.message.BasicHeaderIterator:org.apache.http.HeaderIterator>
<android.graphics.drawable.Drawable: void clearColorFilter()>:<public>:<android.graphics.drawable.Drawable>
<android.opengl.GLES10: void glClearStencil(int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.impl.io.HttpTransportMetricsImpl: void <init>()>:<public>:<org.apache.http.impl.io.HttpTransportMetricsImpl:org.apache.http.io.HttpTransportMetrics>
<android.R.id: void <init>()>:<public>:<android.R.id>
<android.test.AndroidTestRunner: void setContext(android.content.Context)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.widget.ExpandableListAdapter: void onGroupCollapsed(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.content.ContentValues: void remove(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.text.Editable.Factory: android.text.Editable.Factory getInstance()>:<public static>:<android.text.Editable.Factory>
<org.xmlpull.v1.XmlSerializer: void processingInstruction(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.text.method.ScrollingMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.widget.GridView: void <init>(android.content.Context)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.HeterogeneousExpandableList: int getChildType(int,int)>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.view.SurfaceHolder: void setType(int)>:<public abstract>:<android.view.SurfaceHolder>
<android.preference.MultiSelectListPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.net.rtp.AudioGroup: void sendDtmf(int)>:<public>:<android.net.rtp.AudioGroup>
<org.apache.http.HttpConnectionMetrics: void reset()>:<public abstract>:<org.apache.http.HttpConnectionMetrics>
<android.accounts.AccountManagerFuture: boolean isCancelled()>:<public abstract>:<android.accounts.AccountManagerFuture>
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>:<public>:<org.apache.http.client.methods.HttpGet:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.view.animation.Animation: void cancel()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>:<public>:<android.net.LocalSocket>
<android.webkit.WebView: void onAttachedToWindow()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.MotionEvent: float getPressure(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.BroadcastReceiver.PendingResult: void <init>()>:<>:<android.content.BroadcastReceiver.PendingResult>
<android.mtp.MtpObjectInfo: java.lang.String getName()>:<public final>:<android.mtp.MtpObjectInfo>
<org.apache.http.impl.client.AbstractHttpClient: void clearRequestInterceptors()>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.text.method.BaseMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.media.audiofx.EnvironmentalReverb: void setReverbLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[],int,int)>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public abstract>:<android.content.Context>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public>:<android.view.Surface:android.os.Parcelable>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.Cursor: boolean move(int)>:<public abstract>:<android.database.Cursor>
<android.speech.RecognitionService.Callback: void <init>(android.speech.RecognitionService)>:<>:<android.speech.RecognitionService.Callback>
<android.content.SearchRecentSuggestionsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.text.method.BaseMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.ProgramRaster.CullMode: void <init>(java.lang.String,int)>:<private>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.text.StaticLayout: int getLineCount()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(java.lang.String)>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TimePicker: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.Data: void <init>()>:<>:<android.provider.ContactsContract.Data:android.provider.ContactsContract.DataColumnsWithJoins>
<android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>:<public>:<android.media.MediaPlayer>
<android.webkit.WebView: void finalize()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.hardware.Camera: void lock()>:<public final native>:<android.hardware.Camera>
<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int)>:<public>:<android.media.AudioManager>
<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController.MediaPlayerControl)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.VelocityTracker: float getXVelocity()>:<public>:<android.view.VelocityTracker>
<android.provider.ContactsContract: void <clinit>()>:<static>:<android.provider.ContactsContract>
<android.app.FragmentManager: boolean executePendingTransactions()>:<public abstract>:<android.app.FragmentManager>
<android.content.Context: android.os.Looper getMainLooper()>:<public abstract>:<android.content.Context>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: boolean glIsShader(int)>:<public static native>:<android.opengl.GLES20>
<android.preference.DialogPreference: void setNegativeButtonText(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[],int,int)>:<public>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>:<public>:<android.net.http.SslCertificate>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>:<public>:<org.apache.http.auth.AuthState>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,boolean)>:<public abstract>:<android.app.ActionBar>
<android.net.wifi.WifiConfiguration.PairwiseCipher: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.PairwiseCipher>
<org.json.JSONObject: java.lang.String toString()>:<public>:<org.json.JSONObject>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>:<public>:<android.widget.PopupWindow>
<android.content.Intent: void readFromParcel(android.os.Parcel)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.Spinner: void setPromptId(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.ComponentName: java.lang.Object clone()>:<public volatile>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.content.BroadcastReceiver: void setResultData(java.lang.String)>:<public final>:<android.content.BroadcastReceiver>
<android.graphics.PathDashPathEffect.Style: void <init>(java.lang.String,int)>:<private>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.provider.Settings.Secure: void <init>()>:<public>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.graphics.EmbossMaskFilter: void <init>(float[],float,float,float)>:<public>:<android.graphics.EmbossMaskFilter:android.graphics.MaskFilter>
<android.database.sqlite.SQLiteDatabase: int getVersion()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Fragment: android.app.Activity getActivity()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.os.Bundle: java.lang.Object clone()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: void getLocationInWindow(int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.client.RequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.RequestDirector>
<android.os.Bundle: double[] getDoubleArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.media.AudioTrack: void flush()>:<public>:<android.media.AudioTrack>
<org.apache.http.impl.SocketHttpClientConnection: int getLocalPort()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.net.wifi.WifiConfiguration: void <init>()>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.app.Notification.Builder: void <init>(android.content.Context)>:<public>:<android.app.Notification.Builder>
<android.renderscript.RSSurfaceView: void resume()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.widget.PopupWindow: void update(int,int,int,int)>:<public>:<android.widget.PopupWindow>
<android.graphics.Matrix: boolean postSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.renderscript.RSSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getRemotePort()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.view.animation.AnticipateInterpolator: void <init>(float)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator>
<org.apache.http.conn.params.ConnPerRouteBean: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>:<public>:<org.apache.http.conn.params.ConnPerRouteBean:org.apache.http.conn.params.ConnPerRoute>
<android.database.Cursor: int getPosition()>:<public abstract>:<android.database.Cursor>
<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: void setCid(int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>:<public>:<android.widget.PopupWindow>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.renderscript.Int3: void <init>()>:<public>:<android.renderscript.Int3>
<android.preference.MultiSelectListPreference: void setEntries(int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setPointSpriteTexCoordinateReplacement(boolean)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.content.IntentFilter: void <clinit>()>:<static>:<android.content.IntentFilter:android.os.Parcelable>
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.TextView: int getExtendedPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TabWidget: void dispatchDraw(android.graphics.Canvas)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.test.IsolatedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.renderscript.RenderScriptGL: void bindProgramFragment(android.renderscript.ProgramFragment)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.os.PatternMatcher: java.lang.String getPath()>:<public final>:<android.os.PatternMatcher:android.os.Parcelable>
<org.apache.http.conn.routing.RouteTracker: void connectProxy(org.apache.http.HttpHost,boolean)>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.graphics.Path.FillType: android.graphics.Path.FillType[] values()>:<public static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.widget.RemoteViews: void removeAllViews(int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>:<public static>:<org.apache.http.client.utils.URIUtils>
<android.drm.DrmRights: void <init>(android.drm.ProcessedData,java.lang.String)>:<public>:<android.drm.DrmRights>
<org.apache.http.cookie.CookieSpec: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public abstract>:<org.apache.http.cookie.CookieSpec>
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStartTrackingTouch(android.widget.SeekBar)>:<public abstract>:<android.widget.SeekBar.OnSeekBarChangeListener>
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void setEntity(org.apache.http.HttpEntity)>:<public>:<org.apache.http.impl.client.EntityEnclosingRequestWrapper:org.apache.http.impl.client.RequestWrapper,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.view.InputDevice.MotionRange: float getFlat()>:<public>:<android.view.InputDevice.MotionRange>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<junit.framework.Assert: void assertEquals(double,double,double)>:<public static>:<junit.framework.Assert>
<org.apache.http.message.BasicHeader: java.lang.String getName()>:<public>:<org.apache.http.message.BasicHeader:org.apache.http.Header,java.lang.Cloneable>
<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.media.audiofx.AudioEffect: void setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener)>:<public>:<android.media.audiofx.AudioEffect>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(java.lang.CharSequence)>:<public>:<android.app.AlertDialog.Builder>
<android.media.audiofx.BassBoost.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.text.DynamicLayout: int getBottomPadding()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewGroup: android.view.View findFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.graphics.drawable.GradientDrawable.Orientation: android.graphics.drawable.GradientDrawable.Orientation valueOf(java.lang.String)>:<public static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.os.Looper: void prepare()>:<public static final>:<android.os.Looper>
<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.Exception)>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.widget.NumberPicker: void draw(android.graphics.Canvas)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getRemoteAddress()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Gravity: boolean isVertical(int)>:<public static>:<android.view.Gravity>
<android.text.TextUtils: void <clinit>()>:<static>:<android.text.TextUtils>
<android.test.InstrumentationTestRunner: void onStart()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.renderscript.Allocation: void copyFromUnchecked(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.net.MailTo: boolean isMailTo(java.lang.String)>:<public static>:<android.net.MailTo>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>:<public final>:<android.content.res.AssetManager>
<junit.framework.TestResult: int failureCount()>:<public synchronized>:<junit.framework.TestResult>
<android.text.style.StrikethroughSpan: void <init>()>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.net.NetworkInfo.State: void <init>(java.lang.String,int)>:<private>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.view.ActionMode: android.view.MenuInflater getMenuInflater()>:<public abstract>:<android.view.ActionMode>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>:<public>:<android.content.res.Resources>
<android.webkit.WebChromeClient: void onHideCustomView()>:<public>:<android.webkit.WebChromeClient>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer newSerializer()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<org.apache.http.impl.auth.BasicScheme: void <init>()>:<public>:<org.apache.http.impl.auth.BasicScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<org.apache.http.impl.auth.NTLMScheme: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>:<protected>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitCustomSlowCalls()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.text.format.Time: void clear(java.lang.String)>:<public>:<android.text.format.Time>
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.preference.CheckBoxPreference: boolean getDisableDependentsState()>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>:<public>:<android.net.wifi.WifiManager>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int,int)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.hardware.Camera.Parameters: java.util.List getSupportedSceneModes()>:<public>:<android.hardware.Camera.Parameters>
<android.content.SyncStats: void <clinit>()>:<static>:<android.content.SyncStats:android.os.Parcelable>
<android.widget.TableLayout.LayoutParams: void <init>()>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>:<public>:<android.test.mock.MockContentResolver:android.content.ContentResolver>
<android.webkit.WebSettings: void <init>()>:<>:<android.webkit.WebSettings>
<android.view.inputmethod.InputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.app.TimePickerDialog.OnTimeSetListener: void onTimeSet(android.widget.TimePicker,int,int)>:<public abstract>:<android.app.TimePickerDialog.OnTimeSetListener>
<android.webkit.WebSyncManager: void stopSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>:<public>:<android.telephony.TelephonyManager>
<android.os.Debug.MemoryInfo: int describeContents()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>:<public>:<android.os.DropBoxManager>
<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.CommonDataKinds.Relation: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Relation:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.graphics.Point: boolean equals(int,int)>:<public final>:<android.graphics.Point>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void revokeSession(android.view.inputmethod.InputMethodSession)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<org.apache.http.auth.BasicUserPrincipal: java.lang.String toString()>:<public>:<org.apache.http.auth.BasicUserPrincipal:java.security.Principal>
<android.widget.ListPopupWindow: android.view.View getAnchorView()>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.io.SessionOutputBuffer: void write(byte[],int,int)>:<public abstract>:<org.apache.http.io.SessionOutputBuffer>
<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>:<public>:<android.sax.Element>
<android.graphics.Matrix: boolean postTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.text.style.RelativeSizeSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.CursorTreeAdapter: boolean isChildSelectable(int,int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.os.IBinder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>:<public abstract>:<android.os.IBinder>
<android.bluetooth.BluetoothClass.Service: void <init>()>:<public>:<android.bluetooth.BluetoothClass.Service>
<android.content.IntentFilter: android.content.IntentFilter.AuthorityEntry getDataAuthority(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<junit.runner.BaseTestRunner: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.text.LoginFilter.UsernameFilterGeneric: boolean isAllowed(char)>:<public>:<android.text.LoginFilter.UsernameFilterGeneric:android.text.LoginFilter>
<android.graphics.SurfaceTexture: void <init>(int)>:<public>:<android.graphics.SurfaceTexture>
<android.webkit.WebView: int computeHorizontalScrollOffset()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.cookie.CookieSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>:<public abstract>:<org.apache.http.cookie.CookieSpec>
<android.widget.ProgressBar: void setSecondaryProgress(int)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.os.ResultReceiver: void send(int,android.os.Bundle)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.renderscript.ProgramRaster: void <init>()>:<>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.mtp.MtpObjectInfo: int getThumbCompressedSize()>:<public final>:<android.mtp.MtpObjectInfo>
<android.webkit.WebSettings.LayoutAlgorithm: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>:<public>:<android.media.MediaPlayer>
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.app.backup.BackupDataInput: int getDataSize()>:<public>:<android.app.backup.BackupDataInput>
<android.view.inputmethod.InputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.media.audiofx.BassBoost: void setParameterListener(android.media.audiofx.BassBoost.OnParameterChangeListener)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isResponseAvailable(int)>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.app.ActivityManager.RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.media.AudioManager: void setMicrophoneMute(boolean)>:<public>:<android.media.AudioManager>
<android.content.ContentProviderResult: void <init>(int)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.style.ClickableSpan: void <init>()>:<public>:<android.text.style.ClickableSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.provider.ContactsContract.CommonDataKinds.Im: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.inputmethod.InputBinding: int getPid()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<org.apache.http.client.methods.AbortableHttpRequest: void abort()>:<public abstract>:<org.apache.http.client.methods.AbortableHttpRequest>
<org.apache.http.entity.ByteArrayEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.ByteArrayEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>:<public abstract>:<android.text.style.LeadingMarginSpan:android.text.style.ParagraphStyle>
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>:<public>:<android.net.LocalSocket>
<android.media.Ringtone: void play()>:<public>:<android.media.Ringtone>
<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.util.VersionInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<protected>:<org.apache.http.util.VersionInfo>
<android.view.ContextMenu: android.view.ContextMenu setHeaderView(android.view.View)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.widget.ScrollView: void onMeasure(int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.ListFragment: void setListShownNoAnimation(boolean)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.content.ContentValues: java.lang.String toString()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.view.ViewGroup: int getChildDrawingOrder(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebView: boolean canZoomIn()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.RectF: void inset(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.speech.RecognitionService: void onDestroy()>:<public>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.VideoView: void <init>(android.content.Context)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.http.impl.cookie.NetscapeDraftSpec: void <init>()>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.widget.AdapterViewFlipper: void setFlipInterval(int)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.VelocityTracker: void computeCurrentVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.view.animation.TranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.content.SyncResult: void <init>()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.opengl.ETC1: void <init>()>:<public>:<android.opengl.ETC1>
<android.app.Activity: void setTitle(java.lang.CharSequence)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.app.Activity: void takeKeyEvents(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.View: boolean performClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telephony.ServiceState: boolean equals(java.lang.Object)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.mtp.MtpDevice: void finalize()>:<protected>:<android.mtp.MtpDevice>
<android.graphics.Paint: float getStrokeMiter()>:<public native>:<android.graphics.Paint>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AbsListView: void clearChoices()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.hardware.Camera: android.hardware.Camera open(int)>:<public static>:<android.hardware.Camera>
<android.location.Location: boolean hasBearing()>:<public>:<android.location.Location:android.os.Parcelable>
<android.webkit.WebView: void setBackgroundColor(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.conn.params.ConnManagerParams:org.apache.http.conn.params.ConnManagerPNames>
<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>:<public>:<org.apache.http.conn.scheme.SchemeRegistry>
<android.widget.RadioGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.SearchableInfo: java.lang.String getSuggestPath()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.AdapterView: void <init>(android.content.Context)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.SyncContext: android.os.IBinder getSyncContextBinder()>:<public>:<android.content.SyncContext>
<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.UrlQuerySanitizer: void registerParameter(java.lang.String,android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.client.methods.HttpOptions: void <init>(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpOptions:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.graphics.BitmapRegionDecoder: int getWidth()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.content.Loader: void onForceLoad()>:<protected>:<android.content.Loader>
<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.view.View: void setVisibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<org.json.JSONArray: double optDouble(int,double)>:<public>:<org.json.JSONArray>
<android.media.audiofx.BassBoost.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.BassBoost.Settings>
<android.bluetooth.BluetoothClass.Device.Major: void <init>()>:<public>:<android.bluetooth.BluetoothClass.Device.Major>
<android.text.util.Rfc822Token: void setComment(java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>:<public static>:<android.text.format.DateUtils>
<org.apache.http.conn.routing.RouteInfo: org.apache.http.conn.routing.RouteInfo.LayerType getLayerType()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.text.DynamicLayout: int getLineTop(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<junit.runner.BaseTestRunner: void clearStatus()>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)>:<protected>:<android.net.UrlQuerySanitizer>
<android.view.View: boolean isSoundEffectsEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.Wire: void output(java.lang.String)>:<public>:<org.apache.http.impl.conn.Wire>
<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>:<protected>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSErrorHandler getErrorHandler()>:<public>:<android.renderscript.RenderScript>
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>:<public>:<org.apache.http.impl.io.ChunkedInputStream:java.io.InputStream>
<android.opengl.GLES20: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.content.OperationApplicationException: void <init>(java.lang.Throwable)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.view.MotionEvent: int getDeviceId()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<org.apache.http.conn.OperatedClientConnection: org.apache.http.HttpHost getTargetHost()>:<public abstract>:<org.apache.http.conn.OperatedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection>
<org.apache.http.impl.io.IdentityInputStream: int read()>:<public>:<org.apache.http.impl.io.IdentityInputStream:java.io.InputStream>
<android.widget.TabHost: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.params.AbstractHttpParams: boolean isParameterFalse(java.lang.String)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.widget.ListPopupWindow: void setModal(boolean)>:<public>:<android.widget.ListPopupWindow>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public abstract>:<android.view.inputmethod.InputConnection>
<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.Adapter>
<android.graphics.Canvas: int getDensity()>:<public>:<android.graphics.Canvas>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>:<public static>:<android.telephony.gsm.SmsMessage>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.graphics.Region: void <init>()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.util.Xml.Encoding: void <init>(java.lang.String,int)>:<private>:<android.util.Xml.Encoding:java.lang.Enum>
<android.content.Loader: void abandon()>:<public>:<android.content.Loader>
<android.media.FaceDetector.Face: float pose(int)>:<public>:<android.media.FaceDetector.Face>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.view.AbsSavedState: int describeContents()>:<public>:<android.view.AbsSavedState:android.os.Parcelable>
<android.widget.SearchView: void setMaxWidth(int)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<org.json.JSONTokener: char next()>:<public>:<org.json.JSONTokener>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.net.http.AndroidHttpClient: void <init>()>:<>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<org.apache.http.impl.entity.LaxContentLengthStrategy: void <init>()>:<public>:<org.apache.http.impl.entity.LaxContentLengthStrategy:org.apache.http.entity.ContentLengthStrategy>
<android.widget.MediaController: void setEnabled(boolean)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.location.LocationProvider: boolean supportsAltitude()>:<public abstract>:<android.location.LocationProvider>
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>:<public final>:<android.os.Handler>
<junit.runner.Version: void <init>()>:<>:<junit.runner.Version>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getDomain()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>:<public static final>:<android.text.util.Linkify>
<android.widget.GridView: int computeVerticalScrollOffset()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.webkit.WebView.PictureListener: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>:<public abstract>:<android.webkit.WebView.PictureListener>
<junit.framework.ComparisonFailure: java.lang.String getMessage()>:<public>:<junit.framework.ComparisonFailure:junit.framework.AssertionFailedError,java.lang.Error,java.lang.Throwable>
<android.location.Criteria: boolean isSpeedRequired()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.test.ViewAsserts: void assertGroupIntegrity(android.view.ViewGroup)>:<public static>:<android.test.ViewAsserts>
<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.net.NetworkInfo: int describeContents()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.test.suitebuilder.TestMethod: boolean equals(java.lang.Object)>:<public>:<android.test.suitebuilder.TestMethod>
<android.test.AndroidTestCase: void assertReadingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.net.sip.SipManager: boolean isVoipSupported(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.nfc.tech.MifareUltralight: void connect()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.widget.AbsListView: boolean isItemChecked(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()>:<public>:<android.net.sip.SipAudioCall>
<android.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.test.suitebuilder.TestMethod: java.lang.String getName()>:<public>:<android.test.suitebuilder.TestMethod>
<android.webkit.WebView: void setScrollBarStyle(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.provider.ContactsContract.CommonDataKinds.Im: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<junit.framework.TestResult: void addListener(junit.framework.TestListener)>:<public synchronized>:<junit.framework.TestResult>
<org.apache.http.protocol.HttpService: void <init>(org.apache.http.protocol.HttpProcessor,org.apache.http.ConnectionReuseStrategy,org.apache.http.HttpResponseFactory)>:<public>:<org.apache.http.protocol.HttpService>
<org.apache.http.conn.routing.RouteTracker: boolean isTunnelled()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.app.admin.DevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.method.MetaKeyKeyListener: long handleKeyDown(long,int,android.view.KeyEvent)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.database.sqlite.SQLiteOpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.View: void dispatchDisplayHint(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.accounts.AccountsException: void <init>()>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.widget.ExpandableListView: boolean collapseGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.media.AudioTrack: void release()>:<public>:<android.media.AudioTrack>
<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.os.WorkSource: int describeContents()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.view.Menu: android.view.MenuItem add(int,int,int,int)>:<public abstract>:<android.view.Menu>
<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.view.Menu: void setGroupVisible(int,boolean)>:<public abstract>:<android.view.Menu>
<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.protocol.HttpRequestExecutor>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.provider.MediaStore.Video.Media: void <clinit>()>:<static>:<android.provider.MediaStore.Video.Media:android.provider.MediaStore.Video.VideoColumns>
<org.apache.http.protocol.HttpResponseInterceptorList: void clearResponseInterceptors()>:<public abstract>:<org.apache.http.protocol.HttpResponseInterceptorList>
<android.database.sqlite.SQLiteCursor: int getCount()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.view.ViewConfiguration: int getFadingEdgeLength()>:<public static>:<android.view.ViewConfiguration>
<android.hardware.Sensor: int getVersion()>:<public>:<android.hardware.Sensor>
<android.media.SoundPool: void setRate(int,float)>:<public final native>:<android.media.SoundPool>
<android.test.ViewAsserts: void assertLeftAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<org.apache.http.message.BufferedHeader: java.lang.String toString()>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.KeyListener>
<android.widget.SlidingDrawer: void toggle()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.graphics.Rect: java.lang.String toShortString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.hardware.Camera: void startPreview()>:<public final native>:<android.hardware.Camera>
<android.widget.Spinner: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface.OnCancelListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.ActionBar: void show()>:<public abstract>:<android.app.ActionBar>
<android.graphics.drawable.ColorDrawable: int getColor()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.telephony.cdma.CdmaCellLocation: int hashCode()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.content.Context: void revokeUriPermission(android.net.Uri,int)>:<public abstract>:<android.content.Context>
<org.apache.http.conn.params.ConnConnectionParamBean: void setMaxStatusLineGarbage(int)>:<public>:<org.apache.http.conn.params.ConnConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.graphics.drawable.LayerDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.Canvas>
<android.hardware.usb.UsbEndpoint: int describeContents()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.text.method.BaseMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.view.SubMenu: android.view.SubMenu setHeaderView(android.view.View)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.os.Parcel: void finalize()>:<protected>:<android.os.Parcel>
<android.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.view.InputDevice.MotionRange: int getSource()>:<public>:<android.view.InputDevice.MotionRange>
<android.inputmethodservice.InputMethodService: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.Contacts.People: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setProfileName(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.hardware.usb.UsbDevice: int hashCode()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.json.JSONObject: double optDouble(java.lang.String,double)>:<public>:<org.json.JSONObject>
<android.os.Parcel: java.io.Serializable readSerializable()>:<public final>:<android.os.Parcel>
<android.test.TouchUtils: void dragQuarterScreenUp(android.test.ActivityInstrumentationTestCase)>:<public static>:<android.test.TouchUtils>
<android.os.Parcel: long[] createLongArray()>:<public final>:<android.os.Parcel>
<android.os.Parcel: float readFloat()>:<public final native>:<android.os.Parcel>
<android.database.sqlite.SQLiteFullException: void <init>()>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.content.pm.ProviderInfo: void <clinit>()>:<static>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>:<public static>:<android.graphics.BitmapFactory>
<android.opengl.GLSurfaceView: void onAttachedToWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>:<public static>:<android.view.ViewConfiguration>
<android.content.IntentFilter: void addDataPath(java.lang.String,int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element MATRIX_3X3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.View.OnFocusChangeListener: void onFocusChange(android.view.View,boolean)>:<public abstract>:<android.view.View.OnFocusChangeListener>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.PopupWindow>
<android.os.Bundle: int getInt(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.backup.SharedPreferencesBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RectShape clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.widget.TextView: void setEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.RingtonePreference: void onAttachedToHierarchy(android.preference.PreferenceManager)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<org.apache.http.HeaderIterator: boolean hasNext()>:<public abstract>:<org.apache.http.HeaderIterator:java.util.Iterator>
<android.app.TabActivity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.conn.Wire: void output(int)>:<public>:<org.apache.http.impl.conn.Wire>
<android.app.FragmentManager: boolean popBackStackImmediate()>:<public abstract>:<android.app.FragmentManager>
<android.opengl.GLSurfaceView.Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.net.Uri: void <clinit>()>:<static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.conn.MultihomePlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.conn.MultihomePlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.DialogFragment: void <init>()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.RectF: void offsetTo(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>:<static>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.database.sqlite.SQLiteProgram: void native_bind_blob(int,byte[])>:<protected final native>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.test.mock.MockContext: android.content.Context getApplicationContext()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.inputmethod.BaseInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.media.AudioManager: void adjustStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.view.MotionEvent: java.lang.String axisToString(int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.test.mock.MockResources: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.FragmentTransaction: boolean isEmpty()>:<public abstract>:<android.app.FragmentTransaction>
<android.provider.ContactsContract.SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.WebView: void flingScroll(int,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>:<public static>:<android.net.wifi.WifiManager>
<android.sax.Element: void setElementListener(android.sax.ElementListener)>:<public>:<android.sax.Element>
<android.inputmethodservice.KeyboardView: boolean handleBack()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.TextView: void setImeOptions(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.AbstractCursor: android.os.Bundle getExtras()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.inputmethodservice.ExtractEditText: boolean isInputMethodTarget()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)>:<public>:<android.app.KeyguardManager>
<android.content.CursorLoader: void setProjection(java.lang.String[])>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.util.AttributeSet: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>:<public abstract>:<android.util.AttributeSet>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setEnterFadeDuration(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.conn.params.ConnManagerParams:org.apache.http.conn.params.ConnManagerPNames>
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.test.AndroidTestRunner: java.lang.String getTestClassName()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.graphics.SweepGradient: void <init>(float,float,int,int)>:<public>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.graphics.Bitmap.CompressFormat: void <clinit>()>:<static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>:<public>:<android.content.res.Resources>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<junit.framework.TestResult: void run(junit.framework.TestCase)>:<protected>:<junit.framework.TestResult>
<android.media.JetPlayer: boolean queueJetSegment(int,int,int,int,int,byte)>:<public>:<android.media.JetPlayer>
<android.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>:<public abstract>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.widget.ListPopupWindow: void setVerticalOffset(int)>:<public>:<android.widget.ListPopupWindow>
<android.view.accessibility.AccessibilityEvent: int getFromIndex()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.content.ClipDescription: java.lang.String[] filterMimeTypes(java.lang.String)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.view.Surface: void setFreezeTint(int)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.location.Address: void setPhone(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.TextView: int getLineCount()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.MediaStore.Audio.Playlists: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Playlists:android.provider.BaseColumns,android.provider.MediaStore.Audio.PlaylistsColumns>
<android.test.AndroidTestRunner: void runFailed(java.lang.String)>:<protected>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.Window.Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.Window.Callback>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.text.TextUtils.SimpleStringSplitter: boolean hasNext()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.view.View: void setPivotX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<android.animation.ValueAnimator: void setRepeatMode(int)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.hardware.usb.UsbDevice: int getDeviceProtocol()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor clear()>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.graphics.drawable.LayerDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.JetPlayer: int getMaxTracks()>:<public static>:<android.media.JetPlayer>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>:<public static>:<android.view.FocusFinder>
<android.widget.SimpleAdapter.ViewBinder: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)>:<public abstract>:<android.widget.SimpleAdapter.ViewBinder>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getValueSanitizer(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.Bitmap: int describeContents()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.test.mock.MockContext: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.protocol.HTTP: boolean isWhitespace(char)>:<public static>:<org.apache.http.protocol.HTTP>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setFaces(boolean)>:<public>:<android.renderscript.Type.Builder>
<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.database.sqlite.SQLiteCursorDriver: void setBindArguments(java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.net.wifi.WifiManager: boolean reconnect()>:<public>:<android.net.wifi.WifiManager>
<org.apache.http.conn.ManagedClientConnection: void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.location.LocationProvider: java.lang.String getName()>:<public>:<android.location.LocationProvider>
<android.text.method.DigitsKeyListener: void <init>(boolean,boolean)>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.DialerFilter: void onModeChange(int,int)>:<protected>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.Uri.Builder: android.net.Uri.Builder encodedFragment(java.lang.String)>:<public>:<android.net.Uri.Builder>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.media.AudioManager: void <init>()>:<>:<android.media.AudioManager>
<org.apache.http.protocol.HttpRequestHandlerRegistry: void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler)>:<public>:<org.apache.http.protocol.HttpRequestHandlerRegistry:org.apache.http.protocol.HttpRequestHandlerResolver>
<org.apache.http.conn.params.ConnManagerParamBean: void setTimeout(long)>:<public>:<org.apache.http.conn.params.ConnManagerParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.app.AlertDialog: void <init>(android.content.Context,int)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.util.MonthDisplayHelper: int getDayAt(int,int)>:<public>:<android.util.MonthDisplayHelper>
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONArray: org.json.JSONArray put(boolean)>:<public>:<org.json.JSONArray>
<android.app.LoaderManager: void <init>()>:<public>:<android.app.LoaderManager>
<android.graphics.RectF: void sort()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>:<public static final>:<android.provider.Browser>
<android.widget.ViewAnimator: void removeViewsInLayout(int,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Color: int rgb(int,int,int)>:<public static>:<android.graphics.Color>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int)>:<public>:<android.app.Notification.Builder>
<junit.framework.Test: int countTestCases()>:<public abstract>:<junit.framework.Test>
<android.text.style.BulletSpan: int describeContents()>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<org.apache.http.conn.ClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.ClientConnectionOperator>
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>:<protected>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.OverScroller: int getCurrX()>:<public final>:<android.widget.OverScroller>
<android.inputmethodservice.InputMethodService: void onBindInput()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.app.Activity: boolean isTaskRoot()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onPeriodicNotification(android.media.AudioRecord)>:<public abstract>:<android.media.AudioRecord.OnRecordPositionUpdateListener>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.webkit.WebResourceResponse: java.lang.String getEncoding()>:<public>:<android.webkit.WebResourceResponse>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.RingtonePreference: void setRingtoneType(int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: void onAttachedToWindow()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.Window>
<android.app.Activity: void openContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.animation.ValueAnimator: long getCurrentPlayTime()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.telephony.NeighboringCellInfo: void <init>()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.view.View: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.speech.RecognitionListener: void onRmsChanged(float)>:<public abstract>:<android.speech.RecognitionListener>
<android.preference.PreferenceActivity: boolean onIsHidingHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.net.Uri.Builder: android.net.Uri.Builder encodedOpaquePart(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>:<public>:<android.text.Layout>
<android.net.LocalSocket: int getSoTimeout()>:<public>:<android.net.LocalSocket>
<android.content.ContentProviderResult: void <init>(android.net.Uri)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.text.Layout: java.lang.CharSequence getText()>:<public final>:<android.text.Layout>
<org.apache.http.conn.ClientConnectionManager: void shutdown()>:<public abstract>:<org.apache.http.conn.ClientConnectionManager>
<android.widget.AbsListView: boolean isScrollingCacheEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.MotionEvent: float getHistoricalOrientation(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CalendarView: void setFirstDayOfWeek(int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.cookie.RFC2965Spec: void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int)>:<protected>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.renderscript.Type: void destroy()>:<public volatile>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.view.ActionMode: void <init>()>:<public>:<android.view.ActionMode>
<android.database.sqlite.SQLiteTableLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.sip.SipSession: void changeCall(java.lang.String,int)>:<public>:<android.net.sip.SipSession>
<org.apache.http.impl.SocketHttpClientConnection: void <init>()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.provider.SyncStateContract.Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.os.PowerManager: android.os.PowerManager.WakeLock newWakeLock(int,java.lang.String)>:<public>:<android.os.PowerManager>
<android.nfc.tech.Ndef: int getMaxSize()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.accounts.AuthenticatorException: void <init>(java.lang.String)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.app.SearchableInfo: boolean autoUrlDetect()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<org.apache.http.client.CircularRedirectException: void <init>()>:<public>:<org.apache.http.client.CircularRedirectException:org.apache.http.client.RedirectException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.widget.RemoteViews: void showPrevious(int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.webkit.WebView: void clearFormData()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Region: android.graphics.Path getBoundaryPath()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.view.View: boolean requestFocus(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)>:<public static>:<android.text.format.Time>
<android.text.method.ScrollingMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.net.Uri.Builder: android.net.Uri.Builder appendEncodedPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.gesture.GestureOverlayView: void removeAllOnGesturePerformedListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.ActivityManager: boolean isRunningInTestHarness()>:<public static>:<android.app.ActivityManager>
<android.R.xml: void <init>()>:<public>:<android.R.xml>
<android.renderscript.Element: android.renderscript.Element RGBA_5551(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.ListPopupWindow: int getHeight()>:<public>:<android.widget.ListPopupWindow>
<android.content.Context: java.lang.Object getSystemService(java.lang.String)>:<public abstract>:<android.content.Context>
<android.view.View: void createContextMenu(android.view.ContextMenu)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.inputmethodservice.InputMethodService.Insets: void <init>()>:<public>:<android.inputmethodservice.InputMethodService.Insets>
<junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>:<public static>:<junit.framework.TestSuite:junit.framework.Test>
<android.text.format.Time: void setToNow()>:<public native>:<android.text.format.Time>
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.view.KeyEvent: boolean isAltPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>:<public>:<android.webkit.WebViewClient>
<android.webkit.WebSettings: boolean getBuiltInZoomControls()>:<public>:<android.webkit.WebSettings>
<android.content.res.ColorStateList: java.lang.String toString()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.bluetooth.BluetoothDevice: int describeContents()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.opengl.GLES20: void <init>()>:<public>:<android.opengl.GLES20>
<org.apache.http.message.BasicRequestLine: java.lang.Object clone()>:<public>:<org.apache.http.message.BasicRequestLine:org.apache.http.RequestLine,java.lang.Cloneable>
<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.CompletionInfo: long getId()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.os.Debug.InstructionCount: int globalTotal()>:<public>:<android.os.Debug.InstructionCount>
<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.widget.MediaController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.CursorTreeAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<org.apache.http.impl.cookie.RFC2965Spec: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<org.json.JSONStringer: void <init>()>:<public>:<org.json.JSONStringer>
<android.content.SyncStats: int describeContents()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.graphics.Bitmap: int getPixel(int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<org.xmlpull.v1.XmlSerializer: void flush()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>:<public>:<android.webkit.WebViewClient>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.inputmethodservice.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>:<public static native>:<android.opengl.ETC1>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>:<public>:<android.drm.DrmManagerClient>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.HttpMessage: org.apache.http.ProtocolVersion getProtocolVersion()>:<public abstract>:<org.apache.http.HttpMessage>
<android.widget.FrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<org.apache.http.impl.conn.SingleClientConnManager: void revokeConnection()>:<protected>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.IntentSender: int hashCode()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<org.json.JSONArray: int length()>:<public>:<org.json.JSONArray>
<org.apache.http.auth.params.AuthParams: void <init>()>:<>:<org.apache.http.auth.params.AuthParams>
<android.view.MotionEvent: float getSize()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.inputmethodservice.InputMethodService: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.test.mock.MockContext: android.os.Looper getMainLooper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.ActionBar: void setDisplayShowHomeEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.CursorWindow: boolean isFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>:<public static>:<android.webkit.GeolocationPermissions>
<android.database.CursorWindow: void <clinit>()>:<static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.gesture.GestureOverlayView: void removeOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.ColorDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<org.apache.http.ProtocolVersion: int getMinor()>:<public final>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.Drawable>
<android.media.MediaRecorder: void setAudioChannels(int)>:<public>:<android.media.MediaRecorder>
<android.content.Intent: byte getByteExtra(java.lang.String,byte)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Camera: void setLocation(float,float,float)>:<public native>:<android.graphics.Camera>
<android.database.Cursor: boolean isNull(int)>:<public abstract>:<android.database.Cursor>
<android.R.drawable: void <init>()>:<public>:<android.R.drawable>
<android.renderscript.Sampler.Builder: void setMinification(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.text.SpannedString: java.lang.CharSequence subSequence(int,int)>:<public>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<org.apache.http.util.CharArrayBuffer: void ensureCapacity(int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<org.apache.http.impl.io.HttpResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.HttpResponseParser:org.apache.http.impl.io.AbstractMessageParser>
<android.telephony.NeighboringCellInfo: int getPsc()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.telephony.gsm.SmsMessage: boolean isReplace()>:<public>:<android.telephony.gsm.SmsMessage>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void <init>(android.inputmethodservice.AbstractInputMethodService)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.DialogFragment: void onCancel(android.content.DialogInterface)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.text.style.DynamicDrawableSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Instrumentation: android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor,long)>:<public>:<android.app.Instrumentation>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>:<public>:<android.os.RemoteCallbackList>
<android.inputmethodservice.Keyboard.Row: void <init>(android.inputmethodservice.Keyboard)>:<public>:<android.inputmethodservice.Keyboard.Row>
<org.apache.http.protocol.BasicHttpContext: java.lang.Object removeAttribute(java.lang.String)>:<public>:<org.apache.http.protocol.BasicHttpContext:org.apache.http.protocol.HttpContext>
<android.content.ContentProvider: java.lang.String getWritePermission()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<org.apache.http.protocol.SyncBasicHttpContext: void <init>(org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.SyncBasicHttpContext:org.apache.http.protocol.BasicHttpContext>
<org.apache.http.client.UserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.UserTokenHandler>
<android.graphics.drawable.AnimationDrawable: void addFrame(android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.app.ActionBar.Tab: int getPosition()>:<public abstract>:<android.app.ActionBar.Tab>
<android.opengl.GLES10: void glPushMatrix()>:<public static native>:<android.opengl.GLES10>
<android.content.res.AssetManager.AssetInputStream: void reset()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.text.method.DateTimeKeyListener: void <clinit>()>:<static>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.Window: android.view.View getCurrentFocus()>:<public abstract>:<android.view.Window>
<org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public final>:<org.apache.http.conn.ssl.StrictHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.nfc.tech.NfcF: void <init>()>:<>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.widget.VideoView: void seekTo(int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>:<public static>:<org.apache.http.util.LangUtils>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.res.Resources: int[] getIntArray(int)>:<public>:<android.content.res.Resources>
<android.os.Debug: int getGlobalFreedCount()>:<public static>:<android.os.Debug>
<android.widget.TextView: android.text.Editable getEditableText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: void glFrontFace(int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.client.BasicCookieStore: java.util.List getCookies()>:<public synchronized>:<org.apache.http.impl.client.BasicCookieStore:org.apache.http.client.CookieStore>
<android.widget.TabHost.TabSpec: java.lang.String getTag()>:<public>:<android.widget.TabHost.TabSpec>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.app.AlertDialog.Builder>
<org.apache.http.impl.client.RedirectLocations: void add(java.net.URI)>:<public>:<org.apache.http.impl.client.RedirectLocations>
<android.os.Parcel: void setDataCapacity(int)>:<public final native>:<android.os.Parcel>
<android.app.Dialog: void show()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.Gallery: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.content.pm.ProviderInfo: int describeContents()>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.Scroller: void abortAnimation()>:<public>:<android.widget.Scroller>
<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onKey(int,int[])>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.util.MonthDisplayHelper: int getRowOf(int)>:<public>:<android.util.MonthDisplayHelper>
<android.preference.EditTextPreference: java.lang.String getText()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.app.backup.FileBackupHelperBase: void finalize()>:<protected>:<android.app.backup.FileBackupHelperBase>
<android.util.EventLogTags.Description: void <init>()>:<>:<android.util.EventLogTags.Description>
<android.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public abstract>:<android.app.FragmentManager>
<android.widget.ExpandableListView.OnGroupClickListener: boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long)>:<public abstract>:<android.widget.ExpandableListView.OnGroupClickListener>
<android.net.UrlQuerySanitizer: void <init>(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.renderscript.Mesh.Builder: void <init>(android.renderscript.RenderScript,int)>:<public>:<android.renderscript.Mesh.Builder>
<android.text.style.AlignmentSpan.Standard: void <init>(android.text.Layout.Alignment)>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.database.sqlite.SQLiteTransactionListener: void onBegin()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<org.apache.http.message.BasicLineFormatter: void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header)>:<protected>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.graphics.Paint: android.graphics.Paint.Style getStyle()>:<public>:<android.graphics.Paint>
<android.widget.ExpandableListView.OnChildClickListener: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>:<public abstract>:<android.widget.ExpandableListView.OnChildClickListener>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.TextSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: long getHistoricalEventTime(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>:<public>:<android.net.ConnectivityManager>
<org.apache.http.util.ExceptionUtils: void initCause(java.lang.Throwable,java.lang.Throwable)>:<public static>:<org.apache.http.util.ExceptionUtils>
<android.view.ViewGroup.MarginLayoutParams: void <init>(int,int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.preference.Preference: android.content.Context getContext()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.View: void requestLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.DialogInterface.OnKeyListener: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>:<public abstract>:<android.content.DialogInterface.OnKeyListener>
<android.test.InstrumentationTestSuite: void <init>(java.lang.Class,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView.OnGroupCollapseListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.ActivityManager.MemoryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.view.View: boolean dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: void setFillViewport(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void onClick(android.view.View)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)>:<public static>:<android.content.ContentResolver>
<android.view.animation.Animation: void setRepeatMode(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.os.Bundle: java.lang.String getString(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>:<protected>:<org.apache.http.impl.entity.EntityDeserializer>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)>:<public>:<android.media.JetPlayer>
<android.drm.DrmSupportInfo: void setDescription(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getSchemeName()>:<public>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.media.AudioManager: int getStreamVolume(int)>:<public>:<android.media.AudioManager>
<org.apache.http.conn.BasicManagedEntity: void <init>(org.apache.http.HttpEntity,org.apache.http.conn.ManagedClientConnection,boolean)>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.widget.AbsListView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.inputmethod.InputMethodManager: void <init>()>:<>:<android.view.inputmethod.InputMethodManager>
<android.content.SharedPreferences: boolean contains(java.lang.String)>:<public abstract>:<android.content.SharedPreferences>
<android.opengl.GLSurfaceView: void <init>(android.content.Context)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.inputmethod.InputMethodManager: boolean isAcceptingText()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.ViewStub: int getInflatedId()>:<public>:<android.view.ViewStub:android.view.View>
<android.inputmethodservice.InputMethodService: void <init>()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActionBar: android.app.ActionBar.Tab newTab()>:<public abstract>:<android.app.ActionBar>
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.media.audiofx.PresetReverb: void setProperties(android.media.audiofx.PresetReverb.Settings)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>:<public final>:<android.telephony.gsm.SmsManager>
<android.content.res.Resources: int getDimensionPixelOffset(int)>:<public>:<android.content.res.Resources>
<android.webkit.WebSettings: boolean supportZoom()>:<public>:<android.webkit.WebSettings>
<android.os.Messenger: android.os.IBinder getBinder()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.graphics.Region: boolean union(android.graphics.Rect)>:<public final>:<android.graphics.Region:android.os.Parcelable>
<android.util.StateSet: void <init>()>:<>:<android.util.StateSet>
<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)>:<public static>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>:<public static>:<android.graphics.BitmapFactory>
<org.apache.http.impl.client.RedirectLocations: void <init>()>:<public>:<org.apache.http.impl.client.RedirectLocations>
<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.view.MotionEvent: float getRawX()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.Cursor: boolean requery()>:<public abstract>:<android.database.Cursor>
<android.widget.SlidingDrawer: void animateToggle()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.os.Message: java.lang.String toString()>:<public>:<android.os.Message:android.os.Parcelable>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.text.AutoText: void <init>()>:<>:<android.text.AutoText>
<android.widget.TextView: int getBaseline()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.audiofx.EnvironmentalReverb: void setRoomLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<org.apache.http.HttpMessage: void removeHeader(org.apache.http.Header)>:<public abstract>:<org.apache.http.HttpMessage>
<android.provider.Settings.Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>:<public static final>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.test.mock.MockPackageManager: void removePermission(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.nfc.tech.IsoDep: byte[] transceive(byte[])>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<org.apache.http.protocol.HttpRequestInterceptorList: int getRequestInterceptorCount()>:<public abstract>:<org.apache.http.protocol.HttpRequestInterceptorList>
<android.text.BoringLayout: float getLineMax(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.text.BoringLayout: int getEllipsisStart(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.test.TouchUtils: int dragViewToY(android.test.InstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.view.View: void destroyDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.view.inputmethod.InputMethodSession: void finishInput()>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.util.Base64: java.lang.String encodeToString(byte[],int,int,int)>:<public static>:<android.util.Base64>
<android.text.style.ClickableSpan: void onClick(android.view.View)>:<public abstract>:<android.text.style.ClickableSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.graphics.Path: android.graphics.Path.FillType getFillType()>:<public>:<android.graphics.Path>
<org.apache.http.protocol.HttpRequestInterceptorList: void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int)>:<public abstract>:<org.apache.http.protocol.HttpRequestInterceptorList>
<android.telephony.SmsMessage: byte[] getPdu()>:<public>:<android.telephony.SmsMessage>
<org.apache.http.impl.client.AbstractHttpClient: int getRequestInterceptorCount()>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.preference.Preference: boolean shouldDisableDependents()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Window: void setAttributes(android.view.WindowManager.LayoutParams)>:<public>:<android.view.Window>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.ViewTreeObserver.OnPreDrawListener: boolean onPreDraw()>:<public abstract>:<android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style[] values()>:<public static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera.PreviewCallback)>:<public final>:<android.hardware.Camera>
<org.apache.http.impl.conn.IdleConnectionHandler: boolean remove(org.apache.http.HttpConnection)>:<public>:<org.apache.http.impl.conn.IdleConnectionHandler>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.ScaleGestureDetector: long getEventTime()>:<public>:<android.view.ScaleGestureDetector>
<android.media.AudioTrack: void stop()>:<public>:<android.media.AudioTrack>
<android.content.IntentFilter: java.util.Iterator actionsIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.ViewConfiguration: int getScaledOverflingDistance()>:<public>:<android.view.ViewConfiguration>
<android.content.Loader: void onContentChanged()>:<public>:<android.content.Loader>
<android.graphics.Typeface: boolean isBold()>:<public final>:<android.graphics.Typeface>
<android.test.mock.MockContext: void setWallpaper(android.graphics.Bitmap)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<org.apache.http.auth.NTUserPrincipal: java.lang.String getName()>:<public>:<org.apache.http.auth.NTUserPrincipal:java.security.Principal>
<android.util.StateSet: boolean stateSetMatches(int[],int[])>:<public static>:<android.util.StateSet>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationX(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>:<public>:<android.net.wifi.WifiManager>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Type: int getY()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.preference.CheckBoxPreference: void onBindView(android.view.View)>:<protected>:<android.preference.CheckBoxPreference:android.preference.Preference>
<org.json.JSONArray: org.json.JSONArray put(int,boolean)>:<public>:<org.json.JSONArray>
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.renderscript.FieldPacker: void addI32(int)>:<public>:<android.renderscript.FieldPacker>
<android.test.AndroidTestRunner: void setTest(junit.framework.Test)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<org.apache.http.client.methods.HttpHead: void <init>(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpHead:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.renderscript.Allocation.MipmapControl: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider createCredentialsProvider()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.TextView: void setShadowLayer(float,float,float,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>:<public static>:<android.webkit.CookieManager>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>:<public>:<android.os.RemoteCallbackList>
<android.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.media.MediaRecorder: void setVideoSize(int,int)>:<public native>:<android.media.MediaRecorder>
<android.media.AudioManager: boolean isSpeakerphoneOn()>:<public>:<android.media.AudioManager>
<android.content.Context: void startActivity(android.content.Intent)>:<public abstract>:<android.content.Context>
<org.json.JSONArray: boolean getBoolean(int)>:<public>:<org.json.JSONArray>
<android.view.inputmethod.InputMethodSession: void toggleSoftInput(int,int)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.webkit.WebSettings: android.webkit.WebSettings.LayoutAlgorithm getLayoutAlgorithm()>:<public synchronized>:<android.webkit.WebSettings>
<android.graphics.Matrix: void finalize()>:<protected>:<android.graphics.Matrix>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<org.apache.http.entity.AbstractHttpEntity: void setContentType(org.apache.http.Header)>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.os.Debug: void resetThreadAllocSize()>:<public static>:<android.os.Debug>
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaPlayer.OnPreparedListener: void onPrepared(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnPreparedListener>
<android.test.ActivityUnitTestCase: void tearDown()>:<protected>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.StatFs: void finalize()>:<protected>:<android.os.StatFs>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String toString()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.content.res.Configuration: void readFromParcel(android.os.Parcel)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void markReusable()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.speech.RecognitionListener: void onResults(android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.HttpRequestExecutor>
<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>:<public>:<android.content.res.Resources>
<android.text.format.Formatter: void <init>()>:<public>:<android.text.format.Formatter>
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value valueOf(java.lang.String)>:<public static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<org.apache.http.cookie.SetCookie: void setValue(java.lang.String)>:<public abstract>:<org.apache.http.cookie.SetCookie:org.apache.http.cookie.Cookie>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Color: int alpha(int)>:<public static>:<android.graphics.Color>
<android.provider.ContactsContract.Intents: void <init>()>:<public>:<android.provider.ContactsContract.Intents>
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Paint: float getTextScaleX()>:<public native>:<android.graphics.Paint>
<android.content.Intent: int filterHashCode()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>:<public>:<org.apache.http.params.DefaultedHttpParams:org.apache.http.params.AbstractHttpParams>
<android.app.NativeActivity: void surfaceRedrawNeeded(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.CursorWrapper: boolean moveToPrevious()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.os.Bundle: java.lang.ClassLoader getClassLoader()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ProgressBar: void setVisibility(int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.content.Loader: void <init>(android.content.Context)>:<public>:<android.content.Loader>
<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>:<public static>:<android.graphics.Movie>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.RenderScriptGL: void pause()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.graphics.Bitmap: android.graphics.Bitmap.Config getConfig()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.view.animation.Transformation: java.lang.String toString()>:<public>:<android.view.animation.Transformation>
<android.os.Debug: int getBinderSentTransactions()>:<public static native>:<android.os.Debug>
<org.apache.http.impl.client.AbstractHttpClient: void addResponseInterceptor(org.apache.http.HttpResponseInterceptor)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.protocol.BasicHttpProcessor: void addRequestInterceptor(org.apache.http.HttpRequestInterceptor)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.Uri.Builder: android.net.Uri.Builder opaquePart(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.nfc.TagLostException: void <init>()>:<public>:<android.nfc.TagLostException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: void setEllipsize(android.text.TextUtils.TruncateAt)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.PatternMatcher: int describeContents()>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.webkit.CacheManager: android.webkit.CacheManager.CacheResult getCacheFile(java.lang.String,java.util.Map)>:<public static>:<android.webkit.CacheManager>
<android.view.ViewGroup: void measureChildren(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.Animation: float getScaleFactor()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>:<public>:<android.net.ConnectivityManager>
<android.view.Window: boolean hasChildren()>:<public final>:<android.view.Window>
<android.widget.ZoomControls: void <init>(android.content.Context)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.text.AutoText: int getSize(android.view.View)>:<public static>:<android.text.AutoText>
<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.view.ActionMode.Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>:<public abstract>:<android.view.ActionMode.Callback>
<android.text.style.QuoteSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.RenamingDelegatingContext: java.lang.String[] fileList()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.util.JsonWriter: android.util.JsonWriter name(java.lang.String)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.view.View: void getDrawingRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Loader: boolean isStarted()>:<public>:<android.content.Loader>
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.text.Layout: int getLineAscent(int)>:<public final>:<android.text.Layout>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void startAnimation(android.view.animation.Animation)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.impl.io.ChunkedInputStream: void <init>(org.apache.http.io.SessionInputBuffer)>:<public>:<org.apache.http.impl.io.ChunkedInputStream:java.io.InputStream>
<org.xmlpull.v1.XmlSerializer: void cdsect(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.test.mock.MockCursor: int getCount()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.ContentResolver: void <init>(android.content.Context)>:<public>:<android.content.ContentResolver>
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String)>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public abstract>:<android.text.method.MovementMethod>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.sip.SipAudioCall: void attachCall(android.net.sip.SipSession,java.lang.String)>:<public>:<android.net.sip.SipAudioCall>
<android.view.Menu: void removeItem(int)>:<public abstract>:<android.view.Menu>
<android.test.mock.MockContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>:<protected>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.location.Address: java.lang.String getSubLocality()>:<public>:<android.location.Address:android.os.Parcelable>
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>:<public>:<android.speech.tts.TextToSpeech>
<android.view.View: void <clinit>()>:<static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothClass: int getDeviceClass()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.renderscript.Mesh: int getVertexAllocationCount()>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.os.Parcel: void unmarshall(byte[],int,int)>:<public final native>:<android.os.Parcel>
<android.renderscript.Mesh: android.renderscript.Mesh.Primitive getPrimitive(int)>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.view.inputmethod.CompletionInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: int getLac()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.view.KeyEvent.DispatcherState: void reset(java.lang.Object)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener,android.os.Handler)>:<public>:<android.view.GestureDetector>
<android.os.PowerManager.WakeLock: java.lang.String toString()>:<public>:<android.os.PowerManager.WakeLock>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.impl.cookie.RFC2109DomainHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2109DomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.widget.TextView: int getTotalPaddingRight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>:<public static>:<android.text.AutoText>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.conn.ConnectTimeoutException: void <init>()>:<public>:<org.apache.http.conn.ConnectTimeoutException:java.io.InterruptedIOException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>:<public>:<android.widget.ProgressBar:android.view.View>
<org.apache.http.entity.AbstractHttpEntity: void setContentType(java.lang.String)>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.widget.RatingBar: int getNumStars()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.pm.PackageInfo: void <clinit>()>:<static>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getJpegThumbnailSize()>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.RadioButton: void toggle()>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.opengl.GLES20: void glClear(int)>:<public static native>:<android.opengl.GLES20>
<android.app.AlertDialog.Builder: android.app.AlertDialog show()>:<public>:<android.app.AlertDialog.Builder>
<android.app.NotificationManager: void cancel(java.lang.String,int)>:<public>:<android.app.NotificationManager>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>:<public>:<android.hardware.SensorManager>
<android.database.sqlite.SQLiteProgram: void native_finalize()>:<protected final native>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.widget.TextView: int getImeActionId()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.location.LocationListener: void onProviderEnabled(java.lang.String)>:<public abstract>:<android.location.LocationListener>
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>:<public synchronized>:<android.webkit.WebSettings>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int)>:<public abstract>:<android.app.ActionBar>
<android.content.res.AssetManager.AssetInputStream: void <init>(android.content.res.AssetManager)>:<>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.util.JsonReader: boolean isLenient()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.content.pm.PermissionGroupInfo: void <init>()>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>:<public>:<android.sax.Element>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setExitFadeDuration(int)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES20: void glUniform2i(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.OrientationEventListener: void <init>(android.content.Context,int)>:<public>:<android.view.OrientationEventListener>
<android.widget.TextView.SavedState: void <init>()>:<>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.test.AssertionFailedError: void <init>()>:<public>:<android.test.AssertionFailedError:java.lang.Error,java.lang.Throwable>
<android.renderscript.BaseObj: void destroy()>:<public synchronized>:<android.renderscript.BaseObj>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.text.format.Time: int getWeekNumber()>:<public>:<android.text.format.Time>
<android.view.Surface: void show()>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.app.Service: void onCreate()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.widget.ToggleButton: void setChecked(boolean)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.Activity: void setProgressBarVisibility(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.BroadcastReceiver.PendingResult: android.os.Bundle getResultExtras(boolean)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()>:<public final>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.widget.DatePicker: void updateDate(int,int,int)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ExpandableListAdapter: int getChildrenCount(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<org.apache.http.impl.cookie.DateUtils: void <clinit>()>:<static>:<org.apache.http.impl.cookie.DateUtils>
<org.xmlpull.v1.XmlPullParserFactory: void setFeature(java.lang.String,boolean)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.media.AudioTrack: void finalize()>:<protected>:<android.media.AudioTrack>
<android.database.CursorWrapper: android.os.Bundle getExtras()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.test.InstrumentationTestRunner: void <init>()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.graphics.drawable.StateListDrawable: void <init>()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void computeConstantSize()>:<protected>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.Region: boolean quickReject(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<org.apache.http.message.BufferedHeader: int getValuePos()>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<android.util.LogPrinter: void <init>(int,java.lang.String)>:<public>:<android.util.LogPrinter:android.util.Printer>
<android.graphics.Path.Direction: android.graphics.Path.Direction valueOf(java.lang.String)>:<public static>:<android.graphics.Path.Direction:java.lang.Enum>
<android.widget.ListPopupWindow: void <init>(android.content.Context)>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.app.Application: void onTerminate()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.TextView: boolean isPaddingOffsetRequired()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ProgressBar: int getSecondaryProgress()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(int,int)>:<public abstract>:<android.util.AttributeSet>
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>:<public static final>:<android.text.format.DateFormat>
<org.apache.http.protocol.HttpResponseInterceptorList: int getResponseInterceptorCount()>:<public abstract>:<org.apache.http.protocol.HttpResponseInterceptorList>
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<junit.framework.TestListener: void addError(junit.framework.Test,java.lang.Throwable)>:<public abstract>:<junit.framework.TestListener>
<org.apache.http.conn.MultihomePlainSocketFactory: int hashCode()>:<public>:<org.apache.http.conn.MultihomePlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<org.apache.http.entity.HttpEntityWrapper: boolean isRepeatable()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.os.Environment: java.io.File getExternalStorageDirectory()>:<public static>:<android.os.Environment>
<android.view.View: boolean awakenScrollBars(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockCursor: boolean moveToPrevious()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.webkit.WebView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_NONE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.widget.TabHost.TabContentFactory)>:<public>:<android.widget.TabHost.TabSpec>
<android.content.res.ObbInfo: void <clinit>()>:<static>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.os.TokenWatcher: void release(android.os.IBinder)>:<public>:<android.os.TokenWatcher>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.service.wallpaper.WallpaperService.Engine: void onOffsetsChanged(float,float,float,float,int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.ExpandableListView.ExpandableListContextMenuInfo: void <init>(android.view.View,long,long)>:<public>:<android.widget.ExpandableListView.ExpandableListContextMenuInfo:android.view.ContextMenu.ContextMenuInfo>
<android.view.KeyEvent: java.lang.String keyCodeToString(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[])>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<junit.runner.BaseTestRunner: void testEnded(java.lang.String)>:<public abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.util.JsonToken: android.util.JsonToken[] values()>:<public static>:<android.util.JsonToken:java.lang.Enum>
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>:<public>:<android.view.ViewConfiguration>
<org.apache.http.cookie.Cookie: java.lang.String getComment()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>:<public abstract>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.os.AsyncTask: void <clinit>()>:<static>:<android.os.AsyncTask>
<android.location.GpsSatellite: boolean usedInFix()>:<public>:<android.location.GpsSatellite>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Paint: float measureText(java.lang.String,int,int)>:<public>:<android.graphics.Paint>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.drm.DrmInfoRequest: java.util.Iterator iterator()>:<public>:<android.drm.DrmInfoRequest>
<android.inputmethodservice.InputMethodService: void showStatusIcon(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>:<public>:<android.os.Binder:android.os.IBinder>
<android.view.View: void computeScroll()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.entity.StringEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>:<public final>:<android.hardware.Camera>
<org.apache.http.client.params.ClientParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.hardware.Camera.Size: boolean equals(java.lang.Object)>:<public>:<android.hardware.Camera.Size>
<android.provider.Contacts.ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>:<public static final>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.text.style.LineBackgroundSpan: void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int)>:<public abstract>:<android.text.style.LineBackgroundSpan:android.text.style.ParagraphStyle>
<android.graphics.Paint.Join: android.graphics.Paint.Join valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Join:java.lang.Enum>
<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>:<public>:<org.apache.http.message.BasicHttpRequest:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpRequest>
<android.widget.DigitalClock: void <init>(android.content.Context)>:<public>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.content.res.AssetFileDescriptor: int describeContents()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.webkit.WebView.WebViewTransport: void setWebView(android.webkit.WebView)>:<public synchronized>:<android.webkit.WebView.WebViewTransport>
<android.media.MediaPlayer: void attachAuxEffect(int)>:<public native>:<android.media.MediaPlayer>
<android.nfc.NdefRecord: byte[] getType()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.opengl.GLES10: void glClientActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.telephony.gsm.SmsMessage.MessageClass: void <clinit>()>:<static>:<android.telephony.gsm.SmsMessage.MessageClass:java.lang.Enum>
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int)>:<public static>:<android.opengl.ETC1Util>
<android.preference.MultiSelectListPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.text.style.RelativeSizeSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.test.mock.MockContext: int checkUriPermission(android.net.Uri,int,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.provider.Settings.NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>:<public static>:<android.provider.Settings.NameValueTable:android.provider.BaseColumns>
<android.renderscript.Matrix3f: void loadIdentity()>:<public>:<android.renderscript.Matrix3f>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void setEnabled(boolean)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.webkit.WebSyncManager: void <init>(android.content.Context,java.lang.String)>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.widget.RelativeLayout: void setIgnoreGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.apache.http.client.AuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.AuthenticationHandler>
<android.content.pm.ActivityInfo: java.lang.String toString()>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.TabHost: void onDetachedFromWindow()>:<protected>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.KeyguardManager: void <init>()>:<>:<android.app.KeyguardManager>
<android.app.NativeActivity: void <init>()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.MotionEvent: float getX()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.gesture.GestureOverlayView: long getFadeOffset()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: void setFocusable(boolean)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.MediaRecorder: void setOutputFormat(int)>:<public native>:<android.media.MediaRecorder>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyLog()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.widget.Adapter: boolean isEmpty()>:<public abstract>:<android.widget.Adapter>
<android.app.Instrumentation: android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.TabHost: android.view.View getCurrentView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)>:<public static>:<android.graphics.Typeface>
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.apache.http.params.HttpConnectionParamBean: void setLinger(int)>:<public>:<org.apache.http.params.HttpConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.text.format.Time: void set(int,int,int,int,int,int)>:<public>:<android.text.format.Time>
<android.widget.AbsListView: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<org.apache.http.message.AbstractHttpMessage: boolean containsHeader(java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.provider.Contacts.ContactMethods: java.lang.String encodeCustomImProtocol(java.lang.String)>:<public static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.location.Address: void setExtras(android.os.Bundle)>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.EditText: void setEllipsize(android.text.TextUtils.TruncateAt)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.graphics.BlurMaskFilter.Blur: void <clinit>()>:<static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.preference.MultiSelectListPreference: void setValues(java.util.Set)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.animation.Keyframe: java.lang.Object getValue()>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.impl.client.BasicResponseHandler: void <init>()>:<public>:<org.apache.http.impl.client.BasicResponseHandler:org.apache.http.client.ResponseHandler>
<org.apache.http.message.BasicListHeaderIterator: void <init>(java.util.List,java.lang.String)>:<public>:<org.apache.http.message.BasicListHeaderIterator:org.apache.http.HeaderIterator>
<android.gesture.GestureLibrary: void removeEntry(java.lang.String)>:<public>:<android.gesture.GestureLibrary>
<android.media.SoundPool.OnLoadCompleteListener: void onLoadComplete(android.media.SoundPool,int,int)>:<public abstract>:<android.media.SoundPool.OnLoadCompleteListener>
<org.apache.http.client.methods.HttpPut: java.lang.String getMethod()>:<public>:<org.apache.http.client.methods.HttpPut:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.app.Dialog: boolean isShowing()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.ConsoleMessage: java.lang.String message()>:<public>:<android.webkit.ConsoleMessage>
<android.media.audiofx.Equalizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Equalizer,int,int,int,int)>:<public abstract>:<android.media.audiofx.Equalizer.OnParameterChangeListener>
<android.view.View: void cancelLongPress()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>:<public>:<android.util.PrintWriterPrinter:android.util.Printer>
<android.test.PerformanceTestCase.Intermediates: void startTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.content.ComponentName: java.lang.String toShortString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.widget.SimpleExpandableListAdapter: android.view.View newChildView(boolean,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<org.apache.http.conn.routing.RouteInfo: boolean isTunnelled()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_BACK(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<org.apache.http.client.params.AuthPolicy: void <init>()>:<>:<org.apache.http.client.params.AuthPolicy>
<android.mtp.MtpObjectInfo: int getThumbFormat()>:<public final>:<android.mtp.MtpObjectInfo>
<android.bluetooth.BluetoothAdapter: boolean disable()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.animation.LayoutAnimationController.AnimationParameters: void <init>()>:<public>:<android.view.animation.LayoutAnimationController.AnimationParameters>
<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.util.MonthDisplayHelper: void previousMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.app.Notification.Builder: android.app.Notification.Builder setContentText(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.pm.FeatureInfo: void <init>(android.content.pm.FeatureInfo)>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled()>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>:<public>:<android.app.backup.BackupDataInput>
<android.location.Location: android.os.Bundle getExtras()>:<public>:<android.location.Location:android.os.Parcelable>
<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)>:<public static final>:<android.speech.RecognizerIntent>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.view.ViewParent: void requestTransparentRegion(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.widget.ZoomButtonsController.OnZoomListener: void onVisibilityChanged(boolean)>:<public abstract>:<android.widget.ZoomButtonsController.OnZoomListener>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>:<public static>:<android.text.TextUtils>
<android.view.Window.Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public abstract>:<android.view.Window.Callback>
<org.apache.http.entity.BasicHttpEntity: boolean isStreaming()>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.graphics.Shader: void <init>()>:<public>:<android.graphics.Shader>
<android.provider.SearchRecentSuggestions: void <init>(android.content.Context,java.lang.String,int)>:<public>:<android.provider.SearchRecentSuggestions>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>:<public>:<android.view.ViewPropertyAnimator>
<android.speech.RecognitionService.Callback: void readyForSpeech(android.os.Bundle)>:<public>:<android.speech.RecognitionService.Callback>
<android.graphics.Movie: int width()>:<public native>:<android.graphics.Movie>
<android.database.sqlite.SQLiteDatabase: boolean isDatabaseIntegrityOk()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.mtp.MtpDeviceInfo: java.lang.String getVersion()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.graphics.ColorMatrix: void setRotate(int,float)>:<public>:<android.graphics.ColorMatrix>
<android.animation.Keyframe: java.lang.Class getType()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.os.Bundle: void putLongArray(java.lang.String,long[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.cookie.DateUtils: java.lang.String formatDate(java.util.Date,java.lang.String)>:<public static>:<org.apache.http.impl.cookie.DateUtils>
<junit.runner.BaseTestRunner: void setPreferences(java.util.Properties)>:<protected static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.Paint: android.graphics.Paint.Align getTextAlign()>:<public>:<android.graphics.Paint>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.drawable.Drawable>
<android.widget.TextView: void setMaxWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.KeyEvent.Callback: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.graphics.drawable.DrawableContainer: int getOpacity()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.view.KeyEvent: long getDownTime()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void native_bind_long(int,long)>:<protected final native>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.content.IntentSender: java.lang.String getTargetPackage()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.view.animation.ScaleAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.hardware.Camera: void cancelAutoFocus()>:<public final>:<android.hardware.Camera>
<android.os.MemoryFile: int length()>:<public>:<android.os.MemoryFile>
<org.apache.http.impl.cookie.BasicDomainHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.BasicDomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.text.method.TextKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.widget.HorizontalScrollView: void draw(android.graphics.Canvas)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.net.sip.SipAudioCall.Listener: void onError(android.net.sip.SipAudioCall,int,java.lang.String)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.webkit.WebView.HitTestResult: void <init>(android.webkit.WebView)>:<>:<android.webkit.WebView.HitTestResult>
<android.widget.Adapter: int getViewTypeCount()>:<public abstract>:<android.widget.Adapter>
<dalvik.bytecode.OpcodeInfo: void <clinit>()>:<static>:<dalvik.bytecode.OpcodeInfo>
<org.apache.http.entity.StringEntity: boolean isRepeatable()>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.database.AbstractCursor: void <init>()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.KeyEvent: boolean isCanceled()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>:<public>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>:<public>:<android.graphics.Paint>
<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.PackageItemInfo>
<android.widget.TimePicker: boolean is24HourView()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.SearchableInfo: int getInputType()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: void setRssi(int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.view.SurfaceView: void onDetachedFromWindow()>:<protected>:<android.view.SurfaceView:android.view.View>
<org.json.JSONArray: int hashCode()>:<public>:<org.json.JSONArray>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.app.Fragment: void onPause()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.animation.AnimationSet: void setFillBefore(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.TextView: void setMarqueeRepeatLimit(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.MatrixCursor: java.lang.String getString(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: int getBottom()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.UserDictionary.Words: void <init>()>:<public>:<android.provider.UserDictionary.Words:android.provider.BaseColumns>
<android.widget.Scroller: int getCurrY()>:<public final>:<android.widget.Scroller>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.StackView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: android.view.ViewPropertyAnimator animate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.OperatedClientConnection createConnection()>:<public>:<org.apache.http.impl.conn.DefaultClientConnectionOperator:org.apache.http.conn.ClientConnectionOperator>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.content.res.TypedArray: java.lang.String getString(int)>:<public>:<android.content.res.TypedArray>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateSelection(int,int,int,int,int,int)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<org.apache.http.HttpResponse: void setStatusLine(org.apache.http.StatusLine)>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>:<public static>:<android.view.ViewConfiguration>
<android.view.View: void setNextFocusUpId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothProfile: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public abstract>:<android.bluetooth.BluetoothProfile>
<android.widget.StackView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.RectF: float centerX()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.drm.DrmSupportInfo: void <init>()>:<public>:<android.drm.DrmSupportInfo>
<android.view.SurfaceHolder.Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.view.View: int getNextFocusDownId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>:<public synchronized>:<android.webkit.WebSettings>
<android.widget.AbsListView: int getSolidColor()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.ActionBar: int getNavigationItemCount()>:<public abstract>:<android.app.ActionBar>
<android.view.animation.LayoutAnimationController: int getOrder()>:<public>:<android.view.animation.LayoutAnimationController>
<junit.framework.TestCase: void runTest()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader.TileMode)>:<public>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.provider.MediaStore.Images.Thumbnails: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.os.Parcelable.Creator: java.lang.Object createFromParcel(android.os.Parcel)>:<public abstract>:<android.os.Parcelable.Creator>
<android.webkit.WebSettings: void setDefaultFontSize(int)>:<public synchronized>:<android.webkit.WebSettings>
<android.preference.PreferenceGroup: boolean isOrderingAsAdded()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<org.apache.http.impl.client.ClientParamsStack: boolean removeParameter(java.lang.String)>:<public>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.app.Activity: void onPanelClosed(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.SingleClientConnManager.ConnAdapter: void <init>(org.apache.http.impl.conn.SingleClientConnManager,org.apache.http.impl.conn.SingleClientConnManager.PoolEntry,org.apache.http.conn.routing.HttpRoute)>:<protected>:<org.apache.http.impl.conn.SingleClientConnManager.ConnAdapter:org.apache.http.impl.conn.AbstractPooledConnAdapter,org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.widget.PopupWindow: void <init>(android.view.View,int,int,boolean)>:<public>:<android.widget.PopupWindow>
<android.nfc.tech.MifareUltralight: int getType()>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.preference.CheckBoxPreference: void setSummaryOff(int)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Paint: float getTextSkewX()>:<public native>:<android.graphics.Paint>
<android.content.Context: int getWallpaperDesiredMinimumHeight()>:<public abstract>:<android.content.Context>
<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.widget.PopupWindow: int getAnimationStyle()>:<public>:<android.widget.PopupWindow>
<org.apache.http.auth.params.AuthParamBean: void setCredentialCharset(java.lang.String)>:<public>:<org.apache.http.auth.params.AuthParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.widget.ArrayAdapter: void remove(java.lang.Object)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.Activity: int getTitleColor()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.drawable.shapes.Shape: void resize(float,float)>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.mtp.MtpDeviceInfo: void <init>()>:<>:<android.mtp.MtpDeviceInfo>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: void <clinit>()>:<static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<android.mtp.MtpDevice: boolean deleteObject(int)>:<public>:<android.mtp.MtpDevice>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState[] values()>:<public static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.media.audiofx.AudioEffect.Descriptor: void <init>()>:<public>:<android.media.audiofx.AudioEffect.Descriptor>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.media.MediaPlayer: void prepareAsync()>:<public native>:<android.media.MediaPlayer>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeDown()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.widget.ListPopupWindow: int getWidth()>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>:<public>:<android.widget.OverScroller>
<android.test.TouchUtils: int dragViewBy(android.test.InstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.gesture.GesturePoint: java.lang.Object clone()>:<public>:<android.gesture.GesturePoint>
<org.apache.http.util.ByteArrayBuffer: int length()>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.widget.PopupWindow: boolean isSplitTouchEnabled()>:<public>:<android.widget.PopupWindow>
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()>:<public>:<android.telephony.gsm.SmsMessage>
<org.apache.http.client.params.ClientParamBean: void setDefaultHost(org.apache.http.HttpHost)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.renderscript.RenderScript: void destroy()>:<public>:<android.renderscript.RenderScript>
<android.app.ActionBar: void setDisplayOptions(int,int)>:<public abstract>:<android.app.ActionBar>
<org.apache.http.impl.io.SocketOutputBuffer: void <init>(java.net.Socket,int,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.SocketOutputBuffer:org.apache.http.impl.io.AbstractSessionOutputBuffer>
<android.test.TouchUtils: void scrollToBottom(android.test.InstrumentationTestCase,android.app.Activity,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>:<protected>:<android.telephony.ServiceState:android.os.Parcelable>
<android.widget.Spinner: void onClick(android.content.DialogInterface,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.Notification.Builder: android.app.Notification.Builder setContentTitle(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.content.res.Resources: android.content.res.Resources getSystem()>:<public static>:<android.content.res.Resources>
<android.widget.AbsListView: int[] onCreateDrawableState(int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.nfc.tech.MifareClassic: void increment(int,int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.webkit.CookieManager: void <init>()>:<>:<android.webkit.CookieManager>
<android.content.IntentFilter: void addDataScheme(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>:<public final>:<android.os.Handler>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.os.Handler: android.os.Looper getLooper()>:<public final>:<android.os.Handler>
<android.widget.GridView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.accounts.AuthenticatorDescription: void <clinit>()>:<static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.hardware.usb.UsbDeviceConnection: boolean claimInterface(android.hardware.usb.UsbInterface,boolean)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.graphics.Point: void <init>()>:<public>:<android.graphics.Point>
<android.opengl.GLES11: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.location.LocationProvider: void <init>()>:<>:<android.location.LocationProvider>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withExpectedCount(int)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.database.CursorWindow: boolean putDouble(double,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.text.method.TextKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.widget.AbsSpinner: void setSelection(int)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>:<public>:<android.net.sip.SipManager>
<android.os.Parcel: void writeStringArray(java.lang.String[])>:<public final>:<android.os.Parcel>
<android.renderscript.Matrix3f: void loadRotate(float)>:<public>:<android.renderscript.Matrix3f>
<org.apache.http.impl.conn.tsccm.RefQueueWorker: void run()>:<public>:<org.apache.http.impl.conn.tsccm.RefQueueWorker:java.lang.Runnable>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.conn.ProxySelectorRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<android.content.res.Resources: java.lang.CharSequence getText(int)>:<public>:<android.content.res.Resources>
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>:<public>:<android.net.UrlQuerySanitizer>
<android.app.Notification.Builder: android.app.Notification.Builder setLights(int,int,int)>:<public>:<android.app.Notification.Builder>
<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: void setUseWideViewPort(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.test.ActivityInstrumentationTestCase2: void setUp()>:<protected>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.auth.AuthState: void invalidate()>:<public>:<org.apache.http.auth.AuthState>
<android.animation.AnimatorListenerAdapter: void <init>()>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener>
<android.nfc.tech.Ndef: void <init>()>:<>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<org.xmlpull.v1.XmlPullParser: int getLineNumber()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.conn.routing.RouteInfo.TunnelType: org.apache.http.conn.routing.RouteInfo.TunnelType valueOf(java.lang.String)>:<public static>:<org.apache.http.conn.routing.RouteInfo.TunnelType:java.lang.Enum>
<android.provider.ContactsContract.SyncState: void <init>()>:<>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.hardware.Camera.OnZoomChangeListener: void onZoomChange(int,boolean,android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.OnZoomChangeListener>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result[] values()>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.content.Intent.ShortcutIconResource: int describeContents()>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.media.audiofx.AudioEffect: void release()>:<public>:<android.media.audiofx.AudioEffect>
<android.database.CursorWindow: short getShort(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.app.Activity: boolean moveTaskToBack(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.util.CharArrayBuffer: void append(org.apache.http.util.CharArrayBuffer,int,int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.webkit.WebSettings.PluginState: void <clinit>()>:<static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings.RenderPriority)>:<public synchronized>:<android.webkit.WebSettings>
<android.widget.TableLayout: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint,float,float)>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.content.ContentValues: void clear()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<org.apache.http.impl.auth.DigestScheme: void processChallenge(org.apache.http.Header)>:<public>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.media.audiofx.Visualizer: int getSamplingRate()>:<public>:<android.media.audiofx.Visualizer>
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>:<public>:<android.graphics.Path>
<android.media.MediaPlayer: void setAudioSessionId(int)>:<public native>:<android.media.MediaPlayer>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: android.graphics.Shader resize(int,int)>:<public abstract>:<android.graphics.drawable.ShapeDrawable.ShaderFactory>
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.widget.EditText: void setSelection(int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.app.ProgressDialog: int getMax()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Matrix2f: void <init>()>:<public>:<android.renderscript.Matrix2f>
<android.preference.Preference.OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>:<public abstract>:<android.preference.Preference.OnPreferenceChangeListener>
<android.app.Activity: void openOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.test.TouchUtils: int dragViewBy(android.test.ActivityInstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.database.Cursor: boolean moveToPrevious()>:<public abstract>:<android.database.Cursor>
<android.view.View: void dispatchSetSelected(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.DragEvent: void <clinit>()>:<static>:<android.view.DragEvent:android.os.Parcelable>
<android.view.ViewStub.OnInflateListener: void onInflate(android.view.ViewStub,android.view.View)>:<public abstract>:<android.view.ViewStub.OnInflateListener>
<org.apache.http.client.methods.HttpHead: java.lang.String getMethod()>:<public>:<org.apache.http.client.methods.HttpHead:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)>:<public static>:<android.opengl.ETC1Util>
<android.view.inputmethod.InputMethodSession: void updateCursor(android.graphics.Rect)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.View: boolean isHapticFeedbackEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.cookie.CookieOrigin: java.lang.String toString()>:<public>:<org.apache.http.cookie.CookieOrigin>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Notification.Builder: android.app.Notification.Builder setContentInfo(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeUp()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.graphics.drawable.InsetDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()>:<public>:<android.drm.DrmSupportInfo>
<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.app.ListActivity: void setSelection(int)>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.SocketHttpServerConnection: void close()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<junit.framework.TestCase: void setName(java.lang.String)>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.net.sip.SipAudioCall: int getState()>:<public>:<android.net.sip.SipAudioCall>
<android.app.Activity: void registerForContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.PopupWindow: void setSoftInputMode(int)>:<public>:<android.widget.PopupWindow>
<android.view.KeyEvent.DispatcherState: void <init>()>:<public>:<android.view.KeyEvent.DispatcherState>
<android.text.method.MultiTapKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.drm.DrmManagerClient: void <init>(android.content.Context)>:<public>:<android.drm.DrmManagerClient>
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>:<public>:<org.apache.http.auth.MalformedChallengeException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.drm.DrmInfo: void put(java.lang.String,java.lang.Object)>:<public>:<android.drm.DrmInfo>
<android.view.ScaleGestureDetector: long getTimeDelta()>:<public>:<android.view.ScaleGestureDetector>
<org.apache.http.conn.scheme.Scheme: boolean isLayered()>:<public final>:<org.apache.http.conn.scheme.Scheme>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.graphics.AvoidXfermode: void <init>(int,int,android.graphics.AvoidXfermode.Mode)>:<public>:<android.graphics.AvoidXfermode:android.graphics.Xfermode>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void finishInput()>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.text.Layout: int getOffsetToLeftOf(int)>:<public>:<android.text.Layout>
<android.view.accessibility.AccessibilityEvent: void setEventType(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>:<public>:<android.graphics.Paint>
<android.test.RenamingDelegatingContext: void <init>(android.content.Context,java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.preference.PreferenceActivity: void finishPreferencePanel(android.app.Fragment,int,android.content.Intent)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageItemInfo>
<android.widget.TextView: void onBeginBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>:<public>:<android.net.http.SslError>
<android.renderscript.Font.Style: void <clinit>()>:<static>:<android.renderscript.Font.Style:java.lang.Enum>
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.Uri.Builder: android.net.Uri.Builder encodedPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.net.sip.SipManager: boolean isSipWifiOnly(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.graphics.Canvas: void rotate(float,float,float)>:<public final>:<android.graphics.Canvas>
<android.app.DownloadManager.Request: void <init>(android.net.Uri)>:<public>:<android.app.DownloadManager.Request>
<android.nfc.tech.NdefFormatable: void connect()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<org.apache.http.conn.scheme.SchemeRegistry: void setItems(java.util.Map)>:<public synchronized>:<org.apache.http.conn.scheme.SchemeRegistry>
<org.apache.http.impl.conn.DefaultClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.util.SparseIntArray: void <init>(int)>:<public>:<android.util.SparseIntArray>
<org.apache.http.cookie.CookieSpec: java.util.List formatCookies(java.util.List)>:<public abstract>:<org.apache.http.cookie.CookieSpec>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<org.apache.http.message.HeaderGroup: void setHeaders(org.apache.http.Header[])>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<org.apache.http.message.HeaderGroup: void removeHeader(org.apache.http.Header)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: android.view.View findViewById(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.os.PowerManager.WakeLock: void setWorkSource(android.os.WorkSource)>:<public>:<android.os.PowerManager.WakeLock>
<android.nfc.tech.BasicTagTechnology: void connect()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>:<public>:<android.telephony.TelephonyManager>
<android.text.style.ScaleXSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.net.sip.SipException: void <init>()>:<public>:<android.net.sip.SipException:java.lang.Exception,java.lang.Throwable>
<android.widget.TabHost: void <init>(android.content.Context)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.Toast: float getHorizontalMargin()>:<public>:<android.widget.Toast>
<android.drm.DrmRights: void <init>(java.io.File,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>:<public>:<android.graphics.Paint>
<org.xmlpull.v1.XmlSerializer: void comment(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.os.Bundle: void readFromParcel(android.os.Parcel)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int)>:<protected>:<android.renderscript.Script.FieldBase>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[])>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.database.AbstractCursor: void deactivate()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.SpannableStringBuilder: java.lang.Appendable append(java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<org.xmlpull.v1.sax2.Driver: java.lang.String getURI(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.conn.MultihomePlainSocketFactory: void <init>()>:<>:<org.apache.http.conn.MultihomePlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>:<public>:<org.apache.http.client.entity.UrlEncodedFormEntity:org.apache.http.entity.StringEntity,org.apache.http.entity.AbstractHttpEntity>
<android.animation.ValueAnimator: boolean isRunning()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.test.TouchUtils: void dragViewToTop(android.test.InstrumentationTestCase,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<android.view.MotionEvent: float getX(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>:<public>:<android.graphics.Path>
<org.apache.http.auth.AuthState: void setAuthScheme(org.apache.http.auth.AuthScheme)>:<public>:<org.apache.http.auth.AuthState>
<dalvik.'annotation'.TestTarget: java.lang.String methodName()>:<public abstract>:<dalvik.annotation.TestTarget:java.lang.annotation.Annotation>
<android.hardware.usb.UsbInterface: java.lang.String toString()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>:<public>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>:<public static>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.content.res.AssetManager: void close()>:<public>:<android.content.res.AssetManager>
<android.media.AudioRecord: void finalize()>:<protected>:<android.media.AudioRecord>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>:<public>:<android.media.MediaPlayer>
<android.view.View: void setAlpha(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.Camera.Parameters: void setGpsAltitude(double)>:<public>:<android.hardware.Camera.Parameters>
<android.net.TrafficStats: void <init>()>:<public>:<android.net.TrafficStats>
<org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()>:<public>:<org.apache.http.client.protocol.RequestProxyAuthentication:org.apache.http.HttpRequestInterceptor>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.graphics.PathMeasure: float getLength()>:<public>:<android.graphics.PathMeasure>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.view.View.OnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>:<public abstract>:<android.view.View.OnKeyListener>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.sip.SipProfile: java.lang.String getAuthUserName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.impl.cookie.RFC2109SpecFactory: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2109SpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>:<public static final>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.hardware.Camera.Parameters: java.lang.String getAntibanding()>:<public>:<android.hardware.Camera.Parameters>
<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>:<public final native>:<android.os.Parcel>
<android.text.SpannableStringBuilder: char charAt(int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.TestCase: void setUp()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>:<public final>:<android.content.ContentProviderClient>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public static>:<android.content.ContentResolver>
<android.os.StrictMode.ThreadPolicy.Builder: void <init>(android.os.StrictMode.ThreadPolicy)>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.app.ActionBar: void setNavigationMode(int)>:<public abstract>:<android.app.ActionBar>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.net.sip.SipException: void <init>(java.lang.String)>:<public>:<android.net.sip.SipException:java.lang.Exception,java.lang.Throwable>
<android.hardware.Sensor: java.lang.String getVendor()>:<public>:<android.hardware.Sensor>
<android.widget.DialerFilter: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.content.Intent: java.lang.String getPackage()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromResource(android.renderscript.RenderScript,android.content.res.Resources,int)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>:<public final synchronized>:<org.apache.http.conn.scheme.SchemeRegistry>
<android.test.mock.MockContext: void sendBroadcast(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.method.TextKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.util.EventLog: void <init>()>:<>:<android.util.EventLog>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.HttpHost: void <init>(org.apache.http.HttpHost)>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>:<protected final>:<org.apache.http.impl.conn.tsccm.BasicPoolEntry:org.apache.http.impl.conn.AbstractPoolEntry>
<android.app.FragmentManager.OnBackStackChangedListener: void onBackStackChanged()>:<public abstract>:<android.app.FragmentManager.OnBackStackChangedListener>
<org.apache.http.client.methods.HttpHead: void <init>(java.lang.String)>:<public>:<org.apache.http.client.methods.HttpHead:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.net.SSLSessionCache: void <init>(android.content.Context)>:<public>:<android.net.SSLSessionCache>
<android.view.View: void dispatchSetActivated(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<public final>:<android.appwidget.AppWidgetHost>
<android.hardware.usb.UsbRequest: void <init>()>:<public>:<android.hardware.usb.UsbRequest>
<android.opengl.GLES11Ext: void <init>()>:<public>:<android.opengl.GLES11Ext>
<android.mtp.MtpDevice: int[] getStorageIds()>:<public>:<android.mtp.MtpDevice>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.test.SingleLaunchActivityTestCase: void setUp()>:<protected>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.method.PasswordTransformationMethod: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.text.method.TextKeyListener: void release()>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.os.StatFs: void <init>(java.lang.String)>:<public>:<android.os.StatFs>
<org.apache.http.cookie.params.CookieSpecParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.cookie.params.CookieSpecParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.net.wifi.WifiManager.WifiLock: void acquire()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.widget.CursorTreeAdapter: int getChildrenCount(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.provider.ContactsContract.RawContactsEntity: void <init>()>:<>:<android.provider.ContactsContract.RawContactsEntity:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns,android.provider.ContactsContract.RawContactsColumns>
<android.net.Uri.Builder: android.net.Uri.Builder encodedAuthority(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.graphics.PorterDuff: void <init>()>:<public>:<android.graphics.PorterDuff>
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<org.json.JSONArray: int getInt(int)>:<public>:<org.json.JSONArray>
<android.provider.Settings.System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.view.Window: void setContentView(android.view.View)>:<public abstract>:<android.view.Window>
<android.widget.CompoundButton: int[] onCreateDrawableState(int)>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<org.apache.http.impl.DefaultHttpResponseFactory: org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.DefaultHttpResponseFactory:org.apache.http.HttpResponseFactory>
<android.test.mock.MockContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.net.wifi.WifiConfiguration.Protocol: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.Protocol>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setProjection(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.speech.RecognitionListener: void onEndOfSpeech()>:<public abstract>:<android.speech.RecognitionListener>
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>:<public>:<android.media.ExifInterface>
<android.content.ReceiverCallNotAllowedException: void <init>(java.lang.String)>:<public>:<android.content.ReceiverCallNotAllowedException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.entity.StrictContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>:<public>:<org.apache.http.impl.entity.StrictContentLengthStrategy:org.apache.http.entity.ContentLengthStrategy>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>:<public>:<android.appwidget.AppWidgetHost>
<org.apache.http.impl.conn.tsccm.WaitingThread: org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool()>:<public final>:<org.apache.http.impl.conn.tsccm.WaitingThread>
<android.view.ViewGroup: void clearDisappearingChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>:<public>:<android.widget.PopupWindow>
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.view.KeyEvent: int keyCodeFromString(java.lang.String)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.cookie.Cookie: boolean isSecure()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>:<public static>:<android.preference.PreferenceManager>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.pm.PackageManager: void addPackageToPreferred(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.hardware.Camera.Parameters: void unflatten(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector)>:<public>:<org.apache.http.impl.conn.ProxySelectorRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.TelephonyManager: void <clinit>()>:<static>:<android.telephony.TelephonyManager>
<android.view.Window: android.view.View findViewById(int)>:<public>:<android.view.Window>
<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.apache.http.impl.client.RequestWrapper: void incrementExecCount()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.net.Uri: int getPort()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.impl.AbstractHttpClientConnection: void doFlush()>:<protected>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.hardware.Camera.Parameters: void setPreviewSize(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.view.accessibility.AccessibilityEvent: boolean isPassword()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.ProtocolException:org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.text.style.QuoteSpan: int getColor()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.widget.MediaController: void hide()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.CursorAdapter: void changeCursor(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.opengl.GLES10: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES10>
<android.appwidget.AppWidgetProviderInfo: void <clinit>()>:<static>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void reset()>:<public synchronized>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<org.apache.http.cookie.CookieOrigin: boolean isSecure()>:<public>:<org.apache.http.cookie.CookieOrigin>
<android.database.CharArrayBuffer: void <init>(char[])>:<public>:<android.database.CharArrayBuffer>
<org.apache.http.message.BasicTokenIterator: int findNext(int)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.app.WallpaperInfo: android.content.ComponentName getComponent()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.test.ViewAsserts: void assertGroupNotContains(android.view.ViewGroup,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.test.ProviderTestCase: android.content.ContentProvider getProvider()>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.conn.EofSensorInputStream: boolean isReadAllowed()>:<protected>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>:<public static>:<android.text.method.Touch>
<android.widget.RelativeLayout.LayoutParams: int[] getRules()>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.database.StaleDataException: void <init>(java.lang.String)>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityManager: void interrupt()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.os.Handler: android.os.Message obtainMessage(int)>:<public final>:<android.os.Handler>
<android.opengl.GLES20: int glCreateProgram()>:<public static native>:<android.opengl.GLES20>
<android.net.MailTo: java.lang.String getSubject()>:<public>:<android.net.MailTo>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewPropertyAnimator: void <init>()>:<>:<android.view.ViewPropertyAnimator>
<android.net.Uri: boolean isAbsolute()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.test.mock.MockContext: void revokeUriPermission(android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.ViewAsserts: void assertTopAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage.QuotaUpdater)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.drawable.InsetDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.widget.ImageView: void setMaxWidth(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.nfc.tech.NfcA: void connect()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>:<public static>:<android.text.Layout>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.content.Entity: java.util.ArrayList getSubValues()>:<public>:<android.content.Entity>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.renderscript.Matrix4f: void <init>()>:<public>:<android.renderscript.Matrix4f>
<android.os.Parcel: android.os.Bundle readBundle()>:<public final>:<android.os.Parcel>
<org.apache.http.auth.AuthenticationException: void <init>()>:<public>:<org.apache.http.auth.AuthenticationException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.text.style.StyleSpan: int getSpanTypeId()>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<junit.framework.Test: void run(junit.framework.TestResult)>:<public abstract>:<junit.framework.Test>
<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>:<public static>:<android.webkit.WebIconDatabase>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.NativeActivity: void onInputQueueCreated(android.view.InputQueue)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.res.Resources.Theme: void setTo(android.content.res.Resources.Theme)>:<public>:<android.content.res.Resources.Theme>
<junit.framework.TestCase: void tearDown()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<org.apache.http.impl.cookie.BasicClientCookie: int[] getPorts()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.os.Debug: boolean waitingForDebugger()>:<public static>:<android.os.Debug>
<android.media.MediaPlayer.OnCompletionListener: void onCompletion(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnCompletionListener>
<android.widget.AutoCompleteTextView: void performCompletion()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.VideoView: void resume()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.app.backup.SharedPreferencesBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.View: void setMinimumWidth(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[])>:<protected>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.net.sip.SipSession: void register(int)>:<public>:<android.net.sip.SipSession>
<android.os.Debug: void stopNativeTracing()>:<public static>:<android.os.Debug>
<android.webkit.WebView: java.lang.String getOriginalUrl()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.conn.EofSensorWatcher: boolean streamClosed(java.io.InputStream)>:<public abstract>:<org.apache.http.conn.EofSensorWatcher>
<android.nfc.tech.IsoDep: void close()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>:<public>:<org.json.JSONObject>
<android.app.IntentService: void onDestroy()>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.JsResult: void wakeUp()>:<protected final>:<android.webkit.JsResult>
<org.apache.http.message.BasicNameValuePair: boolean equals(java.lang.Object)>:<public>:<org.apache.http.message.BasicNameValuePair:org.apache.http.NameValuePair,java.lang.Cloneable>
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProviderClient>
<android.widget.ListView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>:<public>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.view.MenuItem: android.view.MenuItem setActionView(android.view.View)>:<public abstract>:<android.view.MenuItem>
<org.apache.http.impl.io.ChunkedOutputStream: void <init>(org.apache.http.io.SessionOutputBuffer)>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.database.CursorWindow: long getLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.database.MatrixCursor: void <init>(java.lang.String[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<org.apache.http.HttpServerConnection: void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>:<public abstract>:<org.apache.http.HttpServerConnection:org.apache.http.HttpConnection>
<android.app.LoaderManager: android.content.Loader getLoader(int)>:<public abstract>:<android.app.LoaderManager>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void <init>(android.inputmethodservice.InputMethodService)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>:<public>:<android.net.wifi.WifiManager>
<android.os.Binder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>:<public>:<android.os.Binder:android.os.IBinder>
<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Instrumentation.ActivityMonitor: int getHits()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.view.MotionEvent: long getEventTime()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: int getMeasuredWidthAndState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void flushBuffer()>:<protected>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFpsRange()>:<public>:<android.hardware.Camera.Parameters>
<android.app.ActionBar.OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>:<public abstract>:<android.app.ActionBar.OnMenuVisibilityListener>
<android.hardware.usb.UsbEndpoint: int getInterval()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.widget.Filter: void <init>()>:<public>:<android.widget.Filter>
<android.text.DynamicLayout: int getLineDescent(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.app.WallpaperManager: void setStream(java.io.InputStream)>:<public>:<android.app.WallpaperManager>
<org.xmlpull.v1.sax2.Driver: void setDTDHandler(org.xml.sax.DTDHandler)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.format.Time: java.lang.String format2445()>:<public native>:<android.text.format.Time>
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.accounts.AccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>:<public abstract>:<android.accounts.AccountManagerFuture>
<org.apache.http.conn.params.ConnPerRouteBean: void <init>(int)>:<public>:<org.apache.http.conn.params.ConnPerRouteBean:org.apache.http.conn.params.ConnPerRoute>
<android.renderscript.Matrix4f: void rotate(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.Matrix4f: void loadPerspective(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.ListView: void addFooterView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.LocalActivityManager: void removeAllActivities()>:<public>:<android.app.LocalActivityManager>
<android.graphics.Interpolator: int getValueCount()>:<public final>:<android.graphics.Interpolator>
<android.content.pm.Signature: byte[] toByteArray()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.view.KeyEvent: int getFlags()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.conn.Wire: void input(int)>:<public>:<org.apache.http.impl.conn.Wire>
<android.widget.SearchView: void <init>(android.content.Context)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: float getTouchMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.pm.FeatureInfo: java.lang.String toString()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.IBinder.DeathRecipient: void binderDied()>:<public abstract>:<android.os.IBinder.DeathRecipient>
<android.view.KeyEvent: long getEventTime()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.CursorLoader: java.lang.String[] getSelectionArgs()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<org.apache.http.impl.conn.AbstractClientConnAdapter: javax.net.ssl.SSLSession getSSLSession()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.renderscript.RenderScript: void contextDump()>:<public>:<android.renderscript.RenderScript>
<android.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.AsyncTask: void onPreExecute()>:<protected>:<android.os.AsyncTask>
<android.widget.AdapterView: void setSelection(int)>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.PopupWindow: int getSoftInputMode()>:<public>:<android.widget.PopupWindow>
<android.test.PerformanceTestCase.Intermediates: void finishTiming(boolean)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.inputmethodservice.KeyboardView: void swipeLeft()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.Exception)>:<public>:<android.widget.RemoteViews.ActionException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewGroup: void detachAllViewsFromParent()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES10Ext: void <init>()>:<public>:<android.opengl.GLES10Ext>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.Browser: void clearSearches(android.content.ContentResolver)>:<public static final>:<android.provider.Browser>
<android.test.ActivityInstrumentationTestCase: void <init>(java.lang.String,java.lang.Class,boolean)>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Debug: int getLoadedClassCount()>:<public static>:<android.os.Debug>
<android.graphics.BitmapRegionDecoder: boolean isRecycled()>:<public final>:<android.graphics.BitmapRegionDecoder>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive[] values()>:<public static>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>:<public abstract>:<org.apache.http.params.HttpParams>
<junit.framework.Assert: void assertEquals(char,char)>:<public static>:<junit.framework.Assert>
<android.renderscript.Sampler: void destroy()>:<public volatile>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<org.json.JSONObject: java.lang.String quote(java.lang.String)>:<public static>:<org.json.JSONObject>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.graphics.Rect: boolean contains(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.media.audiofx.EnvironmentalReverb: void <init>(int,int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValues(android.content.ContentValues)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: android.renderscript.ProgramFragmentFixedFunction.Builder.Format valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<android.view.GestureDetector.SimpleOnGestureListener: void <init>()>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.preference.PreferenceFragment: void onActivityResult(int,int,android.content.Intent)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.Window.Callback: void onContentChanged()>:<public abstract>:<android.view.Window.Callback>
<android.text.method.TextKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<org.apache.http.impl.cookie.BasicSecureHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.BasicSecureHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.inputmethodservice.InputMethodService: void setBackDisposition(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.Dialog: void setVolumeControlStream(int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.net.sip.SipAudioCall: void <init>(android.content.Context,android.net.sip.SipProfile)>:<public>:<android.net.sip.SipAudioCall>
<android.widget.DialerFilter: java.lang.CharSequence getDigits()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>:<public>:<android.graphics.Canvas>
<android.view.MotionEvent: float getHistoricalX(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.FrameLayout: void drawableStateChanged()>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo.LayerType getLayerType()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<org.apache.http.message.BasicTokenIterator: void <init>(org.apache.http.HeaderIterator)>:<public>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.view.ScaleGestureDetector: float getCurrentSpanY()>:<public>:<android.view.ScaleGestureDetector>
<android.net.sip.SipManager: android.net.sip.SipManager newInstance(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.animation.TypeEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public abstract>:<android.animation.TypeEvaluator>
<android.content.pm.PackageStats: void <clinit>()>:<static>:<android.content.pm.PackageStats:android.os.Parcelable>
<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.message.BasicHeader:org.apache.http.Header,java.lang.Cloneable>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>:<public static>:<android.appwidget.AppWidgetManager>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.WebView: void clearView()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.IntentFilter.AuthorityEntry: void <init>(java.lang.String,java.lang.String)>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.content.ContentValues: void <init>(android.content.ContentValues)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.util.JsonReader: double nextDouble()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,java.util.HashMap)>:<public>:<android.speech.tts.TextToSpeech>
<org.apache.http.message.BasicHeaderElementIterator: void <init>(org.apache.http.HeaderIterator)>:<public>:<org.apache.http.message.BasicHeaderElementIterator:org.apache.http.HeaderElementIterator>
<android.provider.MediaStore.Audio.Genres: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.auth.AuthenticationException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<org.json.JSONObject: org.json.JSONArray names()>:<public>:<org.json.JSONObject>
<android.media.JetPlayer: void release()>:<public>:<android.media.JetPlayer>
<android.os.Debug: int getGlobalAllocCount()>:<public static>:<android.os.Debug>
<android.content.DialogInterface: void cancel()>:<public abstract>:<android.content.DialogInterface>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>:<public static native>:<android.net.TrafficStats>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float)>:<protected>:<android.text.Layout>
<android.app.LoaderManager.LoaderCallbacks: void onLoaderReset(android.content.Loader)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.speech.RecognitionService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence)>:<public>:<android.content.ClipData.Item>
<android.net.MailTo: java.util.Map getHeaders()>:<public>:<android.net.MailTo>
<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.Context: boolean stopService(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.text.SpannableString: int getSpanStart(java.lang.Object)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.graphics.drawable.DrawableContainer: void setDither(boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.bluetooth.BluetoothDevice: void <init>()>:<>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.os.storage.StorageManager: boolean unmountObb(java.lang.String,boolean,android.os.storage.OnObbStateChangeListener)>:<public>:<android.os.storage.StorageManager>
<android.test.InstrumentationTestCase: void injectInstrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.location.LocationManager: java.util.List getAllProviders()>:<public>:<android.location.LocationManager>
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>:<public>:<android.content.res.Resources>
<android.util.TypedValue: float complexToFloat(int)>:<public static>:<android.util.TypedValue>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.view.ViewGroup: void setPersistentDrawingCache(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.DialerFilter: java.lang.CharSequence getFilterText()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.net.sip.SipAudioCall: void sendDtmf(int)>:<public>:<android.net.sip.SipAudioCall>
<android.app.Instrumentation.ActivityMonitor: android.app.Instrumentation.ActivityResult getResult()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskWrites()>:<public static>:<android.os.StrictMode>
<android.text.InputFilter.LengthFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.InputFilter.LengthFilter:android.text.InputFilter>
<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.Layout: int getTopPadding()>:<public abstract>:<android.text.Layout>
<android.content.Context: java.lang.CharSequence getText(int)>:<public final>:<android.content.Context>
<org.apache.http.HttpHost: void <init>(java.lang.String)>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.RectF)>:<public>:<android.graphics.NinePatch>
<android.content.Intent.ShortcutIconResource: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Dialog: void onBackPressed()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.accessibility.AccessibilityEvent: int describeContents()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.text.style.BackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<org.apache.http.impl.io.ChunkedOutputStream: void close()>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.content.res.TypedArray: int getIndexCount()>:<public>:<android.content.res.TypedArray>
<android.content.Context: void removeStickyBroadcast(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.hardware.Camera.Parameters: void setExposureCompensation(int)>:<public>:<android.hardware.Camera.Parameters>
<android.view.View: int getLayerType()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>:<protected final>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.webkit.WebSettings: int getMinimumLogicalFontSize()>:<public synchronized>:<android.webkit.WebSettings>
<android.os.TokenWatcher: void dump()>:<public>:<android.os.TokenWatcher>
<android.media.MediaScannerConnection.OnScanCompletedListener: void onScanCompleted(java.lang.String,android.net.Uri)>:<public abstract>:<android.media.MediaScannerConnection.OnScanCompletedListener>
<android.opengl.GLES10: void glAlphaFunc(int,float)>:<public static native>:<android.opengl.GLES10>
<android.preference.RingtonePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.telephony.gsm.GsmCellLocation: int getPsc()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.os.Parcel: void writeArray(java.lang.Object[])>:<public final>:<android.os.Parcel>
<android.media.AudioTrack: int getAudioFormat()>:<public>:<android.media.AudioTrack>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.widget.VideoView: void onMeasure(int,int)>:<protected>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.text.method.BaseMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.RatingBar: void setIsIndicator(boolean)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.opengl.GLES10: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebView: void pauseTimers()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.client.params.HttpClientParams: void <init>()>:<>:<org.apache.http.client.params.HttpClientParams>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>:<public>:<org.json.JSONObject>
<android.gesture.GestureOverlayView: int getUncertainGestureColor()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.CacheManager: void <init>()>:<public>:<android.webkit.CacheManager>
<android.app.Notification: android.app.Notification clone()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>:<public synchronized>:<android.webkit.WebSettings>
<android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>:<public static>:<android.gesture.GestureUtils>
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read()>:<public>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<org.xmlpull.v1.XmlSerializer: java.lang.Object getProperty(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap.CompressFormat,int,java.io.OutputStream)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.media.audiofx.AudioEffect: int setEnabled(boolean)>:<public>:<android.media.audiofx.AudioEffect>
<android.widget.TextView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.Camera.Parameters: void setColorEffect(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.location.Address: java.lang.String getAddressLine(int)>:<public>:<android.location.Address:android.os.Parcelable>
<android.app.LocalActivityManager: void dispatchResume()>:<public>:<android.app.LocalActivityManager>
<android.renderscript.Matrix4f: float[] getArray()>:<public>:<android.renderscript.Matrix4f>
<org.apache.http.auth.AuthState: void setCredentials(org.apache.http.auth.Credentials)>:<public>:<org.apache.http.auth.AuthState>
<android.database.Cursor: android.os.Bundle respond(android.os.Bundle)>:<public abstract>:<android.database.Cursor>
<android.net.rtp.AudioStream: void <init>(java.net.InetAddress)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.opengl.GLES10: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.MenuItem: android.view.MenuItem setActionView(int)>:<public abstract>:<android.view.MenuItem>
<android.app.ActivityManager.RunningAppProcessInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<junit.runner.BaseTestRunner: void runFailed(java.lang.String)>:<protected abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<org.apache.http.TokenIterator: java.lang.String nextToken()>:<public abstract>:<org.apache.http.TokenIterator:java.util.Iterator>
<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>:<protected>:<android.view.LayoutInflater>
<android.util.Patterns: void <init>()>:<>:<android.util.Patterns>
<android.widget.AbsListView: int getCheckedItemPosition()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.util.Rfc822Token: java.lang.String quoteComment(java.lang.String)>:<public static>:<android.text.util.Rfc822Token>
<android.text.method.MultiTapKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<org.apache.http.util.ByteArrayBuffer: void setLength(int)>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.provider.ContactsContract.Contacts.AggregationSuggestions: void <init>()>:<>:<android.provider.ContactsContract.Contacts.AggregationSuggestions:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactStatusColumns>
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollStarted()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerScrollListener>
<android.app.UiModeManager: void disableCarMode(int)>:<public>:<android.app.UiModeManager>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<org.apache.http.client.params.HttpClientParams: void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String)>:<public static>:<org.apache.http.client.params.HttpClientParams>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.impl.conn.Wire)>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.impl.client.AbstractHttpClient: void setUserTokenHandler(org.apache.http.client.UserTokenHandler)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.view.View.DragShadowBuilder: android.view.View getView()>:<public final>:<android.view.View.DragShadowBuilder>
<android.renderscript.Program.TextureType: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Program.TextureType:java.lang.Enum>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.gesture.GestureLibrary: void setSequenceType(int)>:<public>:<android.gesture.GestureLibrary>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value[] values()>:<public static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.content.pm.FeatureInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.app.Dialog: android.content.Context getContext()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: void <init>()>:<public>:<android.graphics.drawable.ShapeDrawable.ShaderFactory>
<android.telephony.SmsMessage: boolean isMWIClearMessage()>:<public>:<android.telephony.SmsMessage>
<android.widget.ProgressBar: void setProgress(int)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.view.inputmethod.CorrectionInfo: void <init>(int,java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.view.VelocityTracker: float getYVelocity()>:<public>:<android.view.VelocityTracker>
<android.widget.Gallery: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.JetPlayer: boolean play()>:<public>:<android.media.JetPlayer>
<android.content.pm.LabeledIntent: void <clinit>()>:<static>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.view.View: float getY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.EditTextPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.message.BasicHeaderElement: java.lang.String getName()>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.os.Handler: void <init>(android.os.Handler.Callback)>:<public>:<android.os.Handler>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>:<public final>:<android.util.LruCache>
<org.apache.http.entity.FileEntity: void <init>(java.io.File,java.lang.String)>:<public>:<org.apache.http.entity.FileEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUriForPath(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<org.apache.http.HttpRequestFactory: org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine)>:<public abstract>:<org.apache.http.HttpRequestFactory>
<android.graphics.Canvas: void setDensity(int)>:<public>:<android.graphics.Canvas>
<android.media.audiofx.EnvironmentalReverb: int getDecayTime()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>:<public>:<android.app.Instrumentation>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.media.MediaRecorder: void setVideoSource(int)>:<public native>:<android.media.MediaRecorder>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.app.Activity: void onCreate(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.TextView: void setPadding(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Bitmap: void prepareToDraw()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.DatePicker: void setEnabled(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>:<public>:<org.apache.http.client.ClientProtocolException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.widget.Chronometer: void start()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.nfc.tech.MifareUltralight: boolean isConnected()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()>:<public>:<android.hardware.usb.UsbManager>
<android.widget.PopupWindow: void setTouchable(boolean)>:<public>:<android.widget.PopupWindow>
<android.content.ClipData: android.content.ClipData.Item getItemAt(int)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>:<protected>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.View: boolean onDragEvent(android.view.DragEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ListPopupWindow: boolean isInputMethodNotNeeded()>:<public>:<android.widget.ListPopupWindow>
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status valueOf(java.lang.String)>:<public static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.nfc.tech.MifareUltralight: byte[] readPages(int)>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.graphics.drawable.ClipDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.ComposePathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>:<public>:<android.graphics.ComposePathEffect:android.graphics.PathEffect>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTabListener(android.app.ActionBar.TabListener)>:<public abstract>:<android.app.ActionBar.Tab>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Dialog: void onWindowFocusChanged(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.View: android.view.View findViewById(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.Parcel: int dataCapacity()>:<public final native>:<android.os.Parcel>
<android.net.sip.SipAudioCall.Listener: void onCallBusy(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.app.Application: void <init>()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>:<public static>:<org.apache.http.client.utils.URLEncodedUtils>
<android.widget.HorizontalScrollView: void setOverScrollMode(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.admin.DevicePolicyManager: boolean resetPassword(java.lang.String,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.renderscript.Mesh: void destroy()>:<public volatile>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbShortTitleRes()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.widget.TabWidget: void setRightStripDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.service.wallpaper.WallpaperService.Engine: void setTouchEventsEnabled(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.text.DynamicLayout: int getTopPadding()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthMaskEnabled(boolean)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.impl.cookie.BrowserCompatSpec: void <init>(java.lang.String[])>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>:<public static final>:<android.text.format.DateFormat>
<android.app.Activity: void onResume()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewConfiguration: int getKeyRepeatTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.Uri: boolean isRelative()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ImageView:android.view.View>
<android.content.Context: android.content.res.Resources.Theme getTheme()>:<public abstract>:<android.content.Context>
<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>:<public abstract>:<android.util.AttributeSet>
<android.text.style.StyleSpan: int describeContents()>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.content.pm.PackageManager: java.lang.String[] getSystemSharedLibraryNames()>:<public abstract>:<android.content.pm.PackageManager>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.text.method.ArrowKeyMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.accounts.AccountManagerFuture: boolean cancel(boolean)>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.WindowManager.LayoutParams: int describeContents()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.text.Layout: float getLineMax(int)>:<public>:<android.text.Layout>
<android.content.ContentResolver: boolean getMasterSyncAutomatically()>:<public static>:<android.content.ContentResolver>
<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.renderscript.Font: android.renderscript.Font createFromFile(android.renderscript.RenderScript,android.content.res.Resources,java.io.File,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor>
<android.os.StatFs: int getBlockSize()>:<public native>:<android.os.StatFs>
<android.os.Parcel: void writeStringList(java.util.List)>:<public final>:<android.os.Parcel>
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.util.SparseBooleanArray: void <init>()>:<public>:<android.util.SparseBooleanArray>
<android.text.InputFilter.LengthFilter: void <init>(int)>:<public>:<android.text.InputFilter.LengthFilter:android.text.InputFilter>
<android.webkit.MimeTypeMap: boolean hasExtension(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.content.AsyncTaskLoader: void setUpdateThrottle(long)>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.os.Debug: int getGlobalClassInitTime()>:<public static>:<android.os.Debug>
<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>:<public>:<android.os.TokenWatcher>
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.DialerFilter: void setMode(int)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>:<public abstract>:<org.apache.http.conn.scheme.HostNameResolver>
<org.apache.http.client.methods.HttpDelete: void <init>()>:<public>:<org.apache.http.client.methods.HttpDelete:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.os.Parcel: void writeInt(int)>:<public final native>:<android.os.Parcel>
<org.apache.http.ReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)>:<public abstract>:<org.apache.http.ReasonPhraseCatalog>
<org.xmlpull.v1.sax2.Driver: java.lang.String getPublicId()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>:<public>:<org.apache.http.client.methods.HttpEntityEnclosingRequestBase:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.renderscript.Matrix2f: void load(android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.graphics.PathDashPathEffect: void <init>(android.graphics.Path,float,float,android.graphics.PathDashPathEffect.Style)>:<public>:<android.graphics.PathDashPathEffect:android.graphics.PathEffect>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>:<public abstract>:<android.app.FragmentTransaction>
<org.apache.http.client.CircularRedirectException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.client.CircularRedirectException:org.apache.http.client.RedirectException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(long,java.lang.String)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.renderscript.Matrix3f: void loadTranslate(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.renderscript.Element.Builder: android.renderscript.Element create()>:<public>:<android.renderscript.Element.Builder>
<android.view.MotionEvent: float getHistoricalOrientation(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.res.ColorStateList: void <init>(int[][],int[])>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.text.method.KeyListener: int getInputType()>:<public abstract>:<android.text.method.KeyListener>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.NinePatch>
<android.widget.Filter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>:<protected abstract>:<android.widget.Filter>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.hardware.Camera: void startSmoothZoom(int)>:<public final native>:<android.hardware.Camera>
<android.renderscript.Element: android.renderscript.Element ELEMENT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.view.KeyEvent: char getMatch(char[],int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.CheckBoxPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.util.EventLog: int getTagCode(java.lang.String)>:<public static>:<android.util.EventLog>
<org.apache.http.impl.cookie.RFC2109SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.cookie.RFC2109SpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.os.StrictMode: android.os.StrictMode.VmPolicy getVmPolicy()>:<public static>:<android.os.StrictMode>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.preference.ListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.impl.io.ChunkedInputStream: int read()>:<public>:<org.apache.http.impl.io.ChunkedInputStream:java.io.InputStream>
<android.text.method.NumberKeyListener: char[] getAcceptedChars()>:<protected abstract>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile build()>:<public>:<android.net.sip.SipProfile.Builder>
<android.widget.LinearLayout: boolean isBaselineAligned()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.telephony.SmsMessage: byte[] getUserData()>:<public>:<android.telephony.SmsMessage>
<android.app.LoaderManager: void destroyLoader(int)>:<public abstract>:<android.app.LoaderManager>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String)>:<public>:<android.drm.DrmErrorEvent:android.drm.DrmEvent>
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()>:<public>:<android.hardware.usb.UsbRequest>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentTextureIndex()>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.webkit.WebView: void onSizeChanged(int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.sip.SipSession: void <init>()>:<>:<android.net.sip.SipSession>
<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>:<public static>:<android.graphics.Rect:android.os.Parcelable>
<android.content.Context: java.lang.String getString(int)>:<public final>:<android.content.Context>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>:<public>:<android.graphics.Matrix>
<android.view.View: java.util.ArrayList getTouchables()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.xmlpull.v1.XmlPullParser: boolean isEmptyElementTag()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.util.LruCache: int missCount()>:<public final synchronized>:<android.util.LruCache>
<android.test.MoreAsserts: java.util.regex.MatchResult assertContainsRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.opengl.GLES20: void glHint(int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.AnimationSet: void <init>(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.test.mock.MockContext: boolean deleteFile(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler)>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.TextView: void setPaintFlags(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromFile(android.renderscript.RenderScript,java.lang.String)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.message.BufferedHeader: org.apache.http.HeaderElement[] getElements()>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<android.webkit.CookieSyncManager: void <init>()>:<>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.webkit.WebIconDatabase: void open(java.lang.String)>:<public>:<android.webkit.WebIconDatabase>
<android.os.AsyncTask.Status: void <clinit>()>:<static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.os.AsyncTask: android.os.AsyncTask.Status getStatus()>:<public final>:<android.os.AsyncTask>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.graphics.Canvas: void restore()>:<public native>:<android.graphics.Canvas>
<org.apache.http.HttpMessage: org.apache.http.params.HttpParams getParams()>:<public abstract>:<org.apache.http.HttpMessage>
<junit.framework.TestSuite: void run(junit.framework.TestResult)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.test.ActivityTestCase: void <init>()>:<public>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.drm.DrmEvent: java.lang.String getMessage()>:<public>:<android.drm.DrmEvent>
<android.view.animation.Animation: java.lang.Object clone()>:<protected volatile>:<android.view.animation.Animation:java.lang.Cloneable>
<android.drm.DrmUtils: void <init>()>:<public>:<android.drm.DrmUtils>
<android.text.util.Rfc822Token: java.lang.String getName()>:<public>:<android.text.util.Rfc822Token>
<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>:<public>:<android.webkit.WebViewDatabase>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>:<protected static>:<org.apache.http.impl.cookie.CookieSpecBase:org.apache.http.impl.cookie.AbstractCookieSpec>
<android.widget.TableRow.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.os.Looper: android.os.Looper getMainLooper()>:<public static final synchronized>:<android.os.Looper>
<android.widget.ListAdapter: boolean isEnabled(int)>:<public abstract>:<android.widget.ListAdapter:android.widget.Adapter>
<android.widget.HorizontalScrollView: boolean arrowScroll(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>:<public static>:<android.media.CamcorderProfile>
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher.ViewFactory)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.SpannableStringBuilder: android.text.Editable insert(int,java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.ActionBar: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>:<public>:<android.view.GestureDetector>
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>:<public>:<android.telephony.PhoneStateListener>
<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.ProgressDialog: void setProgress(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.preference.PreferenceActivity: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<junit.framework.Assert: void assertNull(java.lang.String,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.renderscript.Element: android.renderscript.Element createPixel(android.renderscript.RenderScript,android.renderscript.Element.DataType,android.renderscript.Element.DataKind)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.Matrix: java.lang.String toString()>:<public>:<android.graphics.Matrix>
<android.gesture.GestureOverlayView: void removeOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.entity.SerializableEntity: long getContentLength()>:<public>:<org.apache.http.entity.SerializableEntity:org.apache.http.entity.AbstractHttpEntity>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>:<public>:<android.hardware.SensorManager>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getPath()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>:<protected abstract>:<android.database.sqlite.SQLiteClosable>
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.TransitionDrawable: void resetTransition()>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.mtp.MtpStorageInfo: long getMaxCapacity()>:<public final>:<android.mtp.MtpStorageInfo>
<android.renderscript.Element: android.renderscript.Element ALLOCATION(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.client.params.HttpClientParams>
<android.provider.Settings: void <init>()>:<public>:<android.provider.Settings>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Allocation: android.renderscript.Type getType()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.Paint: void setUnderlineText(boolean)>:<public native>:<android.graphics.Paint>
<android.graphics.AvoidXfermode.Mode: void <init>(java.lang.String,int)>:<private>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>:<public abstract>:<org.apache.http.conn.ClientConnectionManager>
<android.util.LruCache: java.lang.String toString()>:<public final synchronized>:<android.util.LruCache>
<android.webkit.WebView: void loadUrl(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.client.utils.URIUtils: void <init>()>:<>:<org.apache.http.client.utils.URIUtils>
<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.xmlpull.v1.XmlPullParser: int getEventType()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.util.FloatMath: void <init>()>:<>:<android.util.FloatMath>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.impl.cookie.BasicClientCookie2: void setDiscard(boolean)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<android.widget.TextView: void setFilters(android.text.InputFilter[])>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: int getTotalPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>:<public>:<android.net.LocalSocket>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.Contacts: void markAsContacted(android.content.ContentResolver,long)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)>:<public static>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu.OnMenuItemClickListener)>:<public>:<android.widget.PopupMenu>
<android.net.sip.SipProfile: boolean getSendKeepAlive()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.app.DialogFragment: void onDismiss(android.content.DialogInterface)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.widget.TextView: void setRawInputType(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>:<public>:<android.graphics.Canvas>
<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.app.Fragment: void setHasOptionsMenu(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.text.style.LineHeightSpan.WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt,android.text.TextPaint)>:<public abstract>:<android.text.style.LineHeightSpan.WithDensity:android.text.style.LineHeightSpan>
<android.net.wifi.WifiManager: boolean removeNetwork(int)>:<public>:<android.net.wifi.WifiManager>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: org.apache.http.HttpEntity getEntity()>:<public>:<org.apache.http.client.methods.HttpEntityEnclosingRequestBase:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.database.Cursor: int getColumnCount()>:<public abstract>:<android.database.Cursor>
<android.app.ListFragment: void setSelection(int)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.drm.DrmManagerClient: int removeRights(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.location.LocationManager: void <init>()>:<>:<android.location.LocationManager>
<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap.KeyData)>:<public>:<android.view.KeyCharacterMap>
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>:<public>:<android.media.MediaRecorder>
<org.xmlpull.v1.sax2.Driver: java.lang.String getQName(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.accounts.AccountsException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.AccountsException:java.lang.Exception,java.lang.Throwable>
<android.app.backup.BackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public abstract>:<android.app.backup.BackupHelper>
<junit.framework.Assert: void assertEquals(java.lang.String,short,short)>:<public static>:<junit.framework.Assert>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaScannerConnection: void connect()>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>:<protected>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.widget.StackView: void <init>(android.content.Context)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.Toast: float getVerticalMargin()>:<public>:<android.widget.Toast>
<android.view.ViewDebug.IntToString: int 'from'()>:<public abstract>:<android.view.ViewDebug.IntToString:java.lang.annotation.Annotation>
<android.widget.AbsListView: void onGlobalLayout()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceFragment: void onCreate(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>:<public>:<android.text.Layout>
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>:<public final>:<android.graphics.NinePatch>
<android.widget.CompoundButton: boolean isChecked()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<org.apache.http.ParseException: void <init>(java.lang.String)>:<public>:<org.apache.http.ParseException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.LocalSocket: boolean isOutputShutdown()>:<public>:<android.net.LocalSocket>
<android.widget.TextView: void setText(int,android.widget.TextView.BufferType)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)>:<public static>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.params.HttpParams: long getLongParameter(java.lang.String,long)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.view.View: int getSystemUiVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.BulletSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.hardware.Camera.PreviewCallback: void onPreviewFrame(byte[],android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.PreviewCallback>
<android.location.Location: boolean hasAltitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.renderscript.Script: void invoke(int,android.renderscript.FieldPacker)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<org.apache.http.NameValuePair: java.lang.String getName()>:<public abstract>:<org.apache.http.NameValuePair>
<android.webkit.WebView: void setNetworkAvailable(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize[] values()>:<public static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>:<public static>:<android.text.format.DateUtils>
<android.renderscript.Matrix2f: void loadScale(float,float)>:<public>:<android.renderscript.Matrix2f>
<org.apache.http.message.BasicLineParser: void <init>(org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.graphics.Interpolator: void reset(int,int)>:<public>:<android.graphics.Interpolator>
<android.app.SearchManager: void onDismiss(android.content.DialogInterface)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.view.ViewGroup: void onLayout(boolean,int,int,int,int)>:<protected abstract>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.GridView: void setNumColumns(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.apache.http.cookie.CookiePathComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<org.apache.http.cookie.CookiePathComparator:java.io.Serializable,java.util.Comparator>
<android.hardware.Camera.Parameters: int getMaxZoom()>:<public>:<android.hardware.Camera.Parameters>
<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>:<public abstract>:<android.view.MenuItem>
<android.view.Surface: boolean isValid()>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()>:<public>:<android.net.rtp.RtpStream>
<android.widget.LinearLayout: void setBaselineAligned(boolean)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<junit.framework.AssertionFailedError: void <init>()>:<public>:<junit.framework.AssertionFailedError:java.lang.Error,java.lang.Throwable>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.ImageView:android.view.View>
<android.content.pm.ApplicationInfo: java.lang.String toString()>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>:<public static>:<android.util.TimeUtils>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.TableRow: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(int,float[])>:<public>:<android.graphics.Interpolator>
<android.nfc.tech.NdefFormatable: void close()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.CacheManager: boolean cacheDisabled()>:<public static>:<android.webkit.CacheManager>
<android.view.animation.OvershootInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.InputEvent: int getDeviceId()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectAll()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.widget.StackView: void advance()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>:<public>:<android.view.ViewTreeObserver>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>:<protected>:<android.inputmethodservice.Keyboard>
<android.test.ActivityInstrumentationTestCase: android.app.Activity getActivity()>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.os.Debug.MemoryInfo: int getTotalPss()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.content.SharedPreferences.Editor: void apply()>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.app.DatePickerDialog.OnDateSetListener: void onDateSet(android.widget.DatePicker,int,int,int)>:<public abstract>:<android.app.DatePickerDialog.OnDateSetListener>
<android.renderscript.Script.FieldBase: void updateAllocation()>:<public>:<android.renderscript.Script.FieldBase>
<junit.framework.TestCase: void run(junit.framework.TestResult)>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.telephony.ServiceState: int hashCode()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.widget.AutoCompleteTextView: int getDropDownHeight()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.nfc.tech.MifareClassic: void close()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.inputmethodservice.ExtractEditText: boolean hasWindowFocus()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.text.style.QuoteSpan: void <init>()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.PerformanceTestCase: boolean isPerformanceOnly()>:<public abstract>:<android.test.PerformanceTestCase>
<android.telephony.gsm.SmsMessage: java.lang.String getEmailFrom()>:<public>:<android.telephony.gsm.SmsMessage>
<android.inputmethodservice.KeyboardView: void onSizeChanged(int,int,int,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.gesture.Gesture: long getID()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.content.pm.PackageInfo: void <init>()>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public abstract>:<android.content.Context>
<android.sax.RootElement: void <init>(java.lang.String,java.lang.String)>:<public>:<android.sax.RootElement:android.sax.Element>
<org.apache.http.impl.conn.IdleConnectionHandler: void closeExpiredConnections()>:<public>:<org.apache.http.impl.conn.IdleConnectionHandler>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>:<public>:<android.accounts.AccountManager>
<android.view.DragEvent: android.content.ClipData getClipData()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.graphics.Paint: void setColor(int)>:<public native>:<android.graphics.Paint>
<android.widget.ViewFlipper: boolean isFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.WindowManager.LayoutParams: void <clinit>()>:<static>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.appwidget.AppWidgetHostView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.params.BasicHttpParams: void clear()>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.os.Debug.InstructionCount: void <init>()>:<public>:<android.os.Debug.InstructionCount>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.UserTokenHandler createUserTokenHandler()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer.OnChronometerTickListener)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>:<public static>:<android.net.ConnectivityManager>
<android.nfc.tech.Ndef: boolean makeReadOnly()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.renderscript.Element: android.renderscript.Element MESH(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.RadioGroup: void clearCheck()>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>:<public final>:<android.accounts.AbstractAccountAuthenticator>
<android.graphics.Matrix: void reset()>:<public>:<android.graphics.Matrix>
<org.apache.http.impl.cookie.BasicPathHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicPathHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.test.suitebuilder.TestSuiteBuilder: java.lang.String getSuiteName()>:<protected>:<android.test.suitebuilder.TestSuiteBuilder>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>:<public>:<android.graphics.Canvas>
<org.apache.http.impl.cookie.RFC2109Spec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.app.Dialog: android.view.View onCreatePanelView(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.message.BasicStatusLine: int getStatusCode()>:<public>:<org.apache.http.message.BasicStatusLine:org.apache.http.StatusLine,java.lang.Cloneable>
<android.app.FragmentBreadCrumbs: void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.UiModeManager: int getCurrentModeType()>:<public>:<android.app.UiModeManager>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.AudioTrack: int setPositionNotificationPeriod(int)>:<public>:<android.media.AudioTrack>
<android.app.ActionBar: void removeTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.location.Location: void distanceBetween(double,double,double,double,float[])>:<public static>:<android.location.Location:android.os.Parcelable>
<android.media.RingtoneManager: boolean getStopPreviousRingtone()>:<public>:<android.media.RingtoneManager>
<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.test.mock.MockContext: int checkCallingPermission(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.inputmethodservice.ExtractEditText: boolean hasFocus()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus.NmeaListener)>:<public>:<android.location.LocationManager>
<android.graphics.BitmapFactory: void <init>()>:<public>:<android.graphics.BitmapFactory>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint.FontMetricsInt)>:<public native>:<android.graphics.Paint>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setVaryingColor(boolean)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.view.KeyEvent: char getDisplayLabel()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setX(int)>:<public>:<android.renderscript.Type.Builder>
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.widget.AbsListView: boolean isTextFilterEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: boolean hasFocusable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.PopupWindow: void setInputMethodMode(int)>:<public>:<android.widget.PopupWindow>
<android.nfc.Tag: java.lang.String toString()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.test.suitebuilder.TestMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>:<public>:<android.test.suitebuilder.TestMethod>
<android.net.LocalSocket: void setReceiveBufferSize(int)>:<public>:<android.net.LocalSocket>
<android.content.ContentValues: int hashCode()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<org.apache.http.impl.client.AbstractHttpClient: void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.view.inputmethod.CorrectionInfo: java.lang.String toString()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void <init>()>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.preference.CheckBoxPreference: java.lang.CharSequence getSummaryOff()>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: boolean getFilterTouchesWhenObscured()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitNetwork()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.widget.TableLayout: void addView(android.view.View,int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.InputDevice: android.view.InputDevice getDevice(int)>:<public static>:<android.view.InputDevice:android.os.Parcelable>
<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.view.View: boolean isScrollbarFadingEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ExpandableListView: int getFlatListPosition(long)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.style.DynamicDrawableSpan: android.graphics.drawable.Drawable getDrawable()>:<public abstract>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.util.SparseArray: java.lang.Object valueAt(int)>:<public>:<android.util.SparseArray>
<android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>:<public static>:<android.bluetooth.BluetoothAdapter>
<org.apache.http.auth.AuthScope: int getPort()>:<public>:<org.apache.http.auth.AuthScope>
<android.text.util.Rfc822Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>:<public static native>:<android.net.TrafficStats>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>:<public>:<android.media.MediaPlayer>
<org.apache.http.impl.io.ChunkedInputStream: void close()>:<public>:<org.apache.http.impl.io.ChunkedInputStream:java.io.InputStream>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<org.apache.http.impl.entity.EntitySerializer: java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage)>:<protected>:<org.apache.http.impl.entity.EntitySerializer>
<org.apache.http.impl.cookie.RFC2109Spec: void <init>(java.lang.String[],boolean)>:<public>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.FragmentTransaction: android.app.FragmentTransaction hide(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.text.Layout: float getPrimaryHorizontal(int)>:<public>:<android.text.Layout>
<android.content.Context: void setWallpaper(java.io.InputStream)>:<public abstract>:<android.content.Context>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Interpolator: int getKeyFrameCount()>:<public final>:<android.graphics.Interpolator>
<android.opengl.Matrix: void transposeM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockContext: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.provider.Contacts.Intents.Insert: void <init>()>:<public>:<android.provider.Contacts.Intents.Insert>
<android.drm.DrmEvent: int getType()>:<public>:<android.drm.DrmEvent>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.lang.String)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.text.format.Time: java.lang.String format3339(boolean)>:<public>:<android.text.format.Time>
<android.net.MailTo: java.lang.String getTo()>:<public>:<android.net.MailTo>
<android.os.Bundle: boolean getBoolean(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public abstract>:<android.content.Context>
<android.view.MenuItem: java.lang.CharSequence getTitle()>:<public abstract>:<android.view.MenuItem>
<org.json.JSONArray: long optLong(int,long)>:<public>:<org.json.JSONArray>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>:<public abstract>:<android.view.WindowManager:android.view.ViewManager>
<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>:<public synchronized>:<org.apache.http.auth.AuthSchemeRegistry>
<android.text.style.RelativeSizeSpan: float getSizeChange()>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Debug: void stopMethodTracing()>:<public static>:<android.os.Debug>
<android.widget.TableLayout: void setColumnCollapsed(int,boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.animation.Animator: void setupEndValues()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.location.Location: float getSpeed()>:<public>:<android.location.Location:android.os.Parcelable>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setPointSpriteEnabled(boolean)>:<public>:<android.renderscript.ProgramRaster.Builder>
<android.widget.OverScroller: void startScroll(int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.view.Window: android.view.Window.Callback getCallback()>:<public final>:<android.view.Window>
<android.graphics.NinePatch: boolean hasAlpha()>:<public final>:<android.graphics.NinePatch>
<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>:<public static>:<org.apache.http.util.EntityUtils>
<android.media.audiofx.EnvironmentalReverb: void setDecayTime(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.CalendarView: void setShowWeekNumber(boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ScrollView: void fling(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.SocketHttpServerConnection: void <init>()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.content.pm.ActivityInfo: void <init>()>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.animation.LinearInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.Interpolator>
<org.apache.http.protocol.HttpService: void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.protocol.HttpService>
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>:<public final>:<android.telephony.gsm.SmsManager>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>:<public>:<android.widget.Scroller>
<org.apache.http.params.HttpParams: double getDoubleParameter(java.lang.String,double)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.graphics.Paint: void setFilterBitmap(boolean)>:<public native>:<android.graphics.Paint>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.preference.DialogPreference: void onDismiss(android.content.DialogInterface)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.test.mock.MockCursor: int getType(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.test.InstrumentationTestCase: void tearDown()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.content.Context: java.lang.String[] databaseList()>:<public abstract>:<android.content.Context>
<android.renderscript.Matrix4f: void transpose()>:<public>:<android.renderscript.Matrix4f>
<android.view.animation.ScaleAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.graphics.drawable.BitmapDrawable: void <init>(java.io.InputStream)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.HorizontalScrollView: int getMaxScrollAmount()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<org.apache.http.message.BufferedHeader: java.lang.Object clone()>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int,int)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>:<public>:<android.media.ExifInterface>
<android.preference.Preference: void onClick()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.app.Activity: void invalidateOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.View: float getPivotX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.test.mock.MockContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.nfc.tech.MifareClassic: void restore(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.InflateException: void <init>()>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener)>:<public>:<android.speech.tts.TextToSpeech>
<android.location.GpsStatus.NmeaListener: void onNmeaReceived(long,java.lang.String)>:<public abstract>:<android.location.GpsStatus.NmeaListener>
<junit.framework.Assert: void assertEquals(byte,byte)>:<public static>:<junit.framework.Assert>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.view.MotionEvent: float getToolMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.HeaderViewListAdapter: int getFootersCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<org.apache.http.conn.routing.RouteTracker: boolean isConnected()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.app.Notification: java.lang.Object clone()>:<public volatile>:<android.app.Notification:android.os.Parcelable>
<android.opengl.GLES10: void glDisable(int)>:<public static native>:<android.opengl.GLES10>
<android.database.AbstractWindowedCursor: boolean isLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.Window>
<android.net.TrafficStats: long getMobileRxPackets()>:<public static native>:<android.net.TrafficStats>
<dalvik.system.DexFile: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.DexFile>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteReadOnlyDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.sip.SipSession: void endCall()>:<public>:<android.net.sip.SipSession>
<android.text.Layout: boolean isSpanned()>:<protected final>:<android.text.Layout>
<org.apache.http.conn.routing.HttpRoute: int getHopCount()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.app.DialogFragment: void onDestroyView()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.graphics.Matrix: boolean preRotate(float)>:<public>:<android.graphics.Matrix>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>:<public>:<android.telephony.SmsManager>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode[] values()>:<public static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.content.Context: void unbindService(android.content.ServiceConnection)>:<public abstract>:<android.content.Context>
<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ListActivity: long getSelectedItemId()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.provider.ContactsContract.CommonDataKinds.Email: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.app.NativeActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.IntentFilter.AuthorityEntry: int getPort()>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.util.Patterns: java.lang.String digitsAndPlusOnly(java.util.regex.Matcher)>:<public static final>:<android.util.Patterns>
<android.view.View: int computeVerticalScrollRange()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.media.audiofx.Visualizer: void release()>:<public>:<android.media.audiofx.Visualizer>
<android.content.res.AssetFileDescriptor: long getStartOffset()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)>:<public>:<android.net.sip.SipAudioCall>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>:<public transient>:<android.content.res.Resources>
<android.os.NetworkOnMainThreadException: void <init>()>:<public>:<android.os.NetworkOnMainThreadException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.SearchableInfo: int getVoiceLanguageModeId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.view.MotionEvent: float getOrientation(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.message.BasicListHeaderIterator: java.lang.Object next()>:<public final>:<org.apache.http.message.BasicListHeaderIterator:org.apache.http.HeaderIterator>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.conn.OperatedClientConnection)>:<protected>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>:<public abstract>:<org.apache.http.HttpEntity>
<android.widget.SimpleAdapter: long getItemId(int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.util.SparseBooleanArray: boolean get(int)>:<public>:<android.util.SparseBooleanArray>
<android.content.AsyncQueryHandler: void startUpdate(int,java.lang.Object,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.ActivityManager.ProcessErrorStateInfo: void <init>()>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.animation.LayoutAnimationController: void setOrder(int)>:<public>:<android.view.animation.LayoutAnimationController>
<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<android.content.ClipDescription: void <init>(java.lang.CharSequence,java.lang.String[])>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.location.LocationManager: void removeTestProvider(java.lang.String)>:<public>:<android.location.LocationManager>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String)>:<public>:<android.drm.DrmInfoEvent:android.drm.DrmEvent>
<android.view.animation.AccelerateInterpolator: void <init>()>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator>
<android.text.TextUtils.TruncateAt: void <clinit>()>:<static>:<android.text.TextUtils.TruncateAt:java.lang.Enum>
<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.MotionEvent: float getXPrecision()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.bluetooth.BluetoothAdapter: boolean isEnabled()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.graphics.Paint.FontMetrics: void <init>()>:<public>:<android.graphics.Paint.FontMetrics>
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.graphics.Camera: void rotateX(float)>:<public native>:<android.graphics.Camera>
<android.database.MatrixCursor.RowBuilder: void <init>(android.database.MatrixCursor)>:<>:<android.database.MatrixCursor.RowBuilder>
<android.widget.TableLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>:<public static>:<android.graphics.Typeface>
<org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)>:<public>:<org.apache.http.params.HttpConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.opengl.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>:<public>:<android.view.ViewConfiguration>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>:<public>:<android.telephony.TelephonyManager>
<android.media.audiofx.Virtualizer: short getRoundedStrength()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Region: android.graphics.Rect getBounds()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.preference.Preference: boolean getShouldDisableView()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.nfc.tech.NdefFormatable: void <init>()>:<>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.graphics.drawable.Drawable.ConstantState: int getChangingConfigurations()>:<public abstract>:<android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.ProgramVertex.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramVertex.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.text.SpannableStringBuilder: int length()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.text.LoginFilter: void onInvalidCharacter(char)>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.os.Debug: void resetThreadAllocCount()>:<public static>:<android.os.Debug>
<android.hardware.usb.UsbDevice: void <init>()>:<>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.renderscript.ProgramRaster.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramRaster.Builder>
<org.xmlpull.v1.XmlPullParser: int next()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.protocol.HttpResponseInterceptorList: void addResponseInterceptor(org.apache.http.HttpResponseInterceptor)>:<public abstract>:<org.apache.http.protocol.HttpResponseInterceptorList>
<android.text.style.AbsoluteSizeSpan: int getSize()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <clinit>()>:<static>:<org.apache.http.impl.cookie.NetscapeDraftHeaderParser>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: void <init>(java.lang.String,int)>:<private>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference: boolean persistString(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.widget.AlphabetIndexer: int getSectionForPosition(int)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.graphics.Paint.Style: void <clinit>()>:<static>:<android.graphics.Paint.Style:java.lang.Enum>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri)>:<public>:<android.app.Notification.Builder>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>:<public>:<android.content.res.Resources>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.text.LoginFilter.UsernameFilterGMail: boolean isAllowed(char)>:<public>:<android.text.LoginFilter.UsernameFilterGMail:android.text.LoginFilter>
<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>:<protected>:<org.apache.http.impl.io.HttpRequestParser:org.apache.http.impl.io.AbstractMessageParser>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.WebSettings.RenderPriority: void <clinit>()>:<static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.opengl.GLES10: void glFinish()>:<public static native>:<android.opengl.GLES10>
<android.content.Intent: java.lang.String resolveType(android.content.Context)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.animation.BounceInterpolator: void <init>()>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator>
<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor,int)>:<public final>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreviewSize()>:<public>:<android.hardware.Camera.Parameters>
<android.net.rtp.AudioGroup: void setMode(int)>:<public>:<android.net.rtp.AudioGroup>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.View: int getPaddingLeft()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<org.apache.http.conn.EofSensorInputStream: void close()>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.view.animation.Animation: boolean getFillBefore()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>:<public>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<org.apache.http.params.HttpProtocolParamBean: void setVersion(org.apache.http.HttpVersion)>:<public>:<org.apache.http.params.HttpProtocolParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()>:<public>:<android.net.rtp.RtpStream>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.HeaderViewListAdapter: void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.app.SearchableInfo: java.lang.String getSuggestSelection()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>:<public>:<android.nfc.NfcAdapter>
<android.view.View: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<junit.framework.TestCase: junit.framework.TestResult run()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.renderscript.Type: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.preference.Preference: void setPersistent(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES20: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>:<public abstract>:<android.content.pm.PackageManager>
<android.drm.DrmSupportInfo: int hashCode()>:<public>:<android.drm.DrmSupportInfo>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.HttpContext createHttpContext()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>:<public static>:<android.net.http.SslCertificate>
<org.apache.http.client.params.ClientParamBean: void setHandleRedirects(boolean)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.widget.TimePicker: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicListHeaderIterator: boolean filterHeader(int)>:<protected>:<org.apache.http.message.BasicListHeaderIterator:org.apache.http.HeaderIterator>
<org.apache.http.client.CookieStore: java.util.List getCookies()>:<public abstract>:<org.apache.http.client.CookieStore>
<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>:<public>:<android.content.ContentResolver>
<org.apache.http.auth.AuthScope: void <init>(org.apache.http.auth.AuthScope)>:<public>:<org.apache.http.auth.AuthScope>
<android.os.PowerManager.WakeLock: void <init>(android.os.PowerManager)>:<>:<android.os.PowerManager.WakeLock>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.test.mock.MockContext: java.lang.String[] fileList()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>:<public>:<android.app.WallpaperManager>
<android.accessibilityservice.AccessibilityService: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: int getHeight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.speech.RecognitionService: void <init>()>:<public>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.AutoCompleteTextView: boolean isPerformingCompletion()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.CalendarView: long getDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt)>:<public static>:<android.text.TextUtils>
<android.graphics.Region: boolean quickReject(android.graphics.Region)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.AudioManager: boolean isWiredHeadsetOn()>:<public>:<android.media.AudioManager>
<android.telephony.SmsMessage: boolean isCphsMwiMessage()>:<public>:<android.telephony.SmsMessage>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,java.lang.Object)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AnalogClock: void onAttachedToWindow()>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.drm.DrmConvertedStatus: void <init>(int,byte[],int)>:<public>:<android.drm.DrmConvertedStatus>
<android.text.Layout: android.text.Layout.Directions getLineDirections(int)>:<public abstract>:<android.text.Layout>
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.View: int getDrawingCacheBackgroundColor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.Paint>
<android.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.widget.ListPopupWindow>
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.widget.ScrollView: void onDetachedFromWindow()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiManager.MulticastLock: void setReferenceCounted(boolean)>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.LoaderManager.LoaderCallbacks: android.content.Loader onCreateLoader(int,android.os.Bundle)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.widget.TextView: void setText(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.LauncherActivity: void onSetContentView()>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.WindowManager.LayoutParams: java.lang.CharSequence getTitle()>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.lang.String)>:<public static>:<org.apache.http.client.utils.URIUtils>
<org.xmlpull.v1.sax2.Driver: int getLineNumber()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.entity.InputStreamEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.InputStreamEntity:org.apache.http.entity.AbstractHttpEntity>
<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>:<static>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.preference.EditTextPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.ConnectionReleaseTrigger: void releaseConnection()>:<public abstract>:<org.apache.http.conn.ConnectionReleaseTrigger>
<android.hardware.usb.UsbDevice: int getVendorId()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.os.ConditionVariable: boolean block(long)>:<public>:<android.os.ConditionVariable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(int)>:<public>:<android.app.AlertDialog.Builder>
<android.graphics.Picture: void <init>(android.graphics.Picture)>:<public>:<android.graphics.Picture>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<org.apache.http.params.HttpProtocolParamBean: void setContentCharset(java.lang.String)>:<public>:<org.apache.http.params.HttpProtocolParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.net.sip.SipProfile.Builder: void <init>(android.net.sip.SipProfile)>:<public>:<android.net.sip.SipProfile.Builder>
<android.text.SpannableString: int getSpanEnd(java.lang.Object)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.hardware.Camera.Parameters: void getFocusDistances(float[])>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode valueOf(java.lang.String)>:<public static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getTestSuite()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.test.mock.MockContext: android.content.res.Resources getResources()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceRedrawNeeded(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.test.ViewAsserts: void assertBottomAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.text.LoginFilter.UsernameFilterGMail: void <init>(boolean)>:<public>:<android.text.LoginFilter.UsernameFilterGMail:android.text.LoginFilter>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.protocol.BasicHttpProcessor copy()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.content.res.ColorStateList: void <clinit>()>:<static>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView.OnChildClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.Camera.Parameters: java.lang.String getFocusMode()>:<public>:<android.hardware.Camera.Parameters>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.view.ViewGroup: void measureChild(android.view.View,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.conn.routing.RouteInfo.LayerType: org.apache.http.conn.routing.RouteInfo.LayerType[] values()>:<public static>:<org.apache.http.conn.routing.RouteInfo.LayerType:java.lang.Enum>
<android.database.DatabaseUtils.InsertHelper: void prepareForReplace()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.graphics.Region: boolean quickContains(int,int,int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.media.MediaPlayer: int getCurrentPosition()>:<public native>:<android.media.MediaPlayer>
<android.view.View: boolean isFocused()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.AbstractHttpServerConnection: void assertOpen()>:<protected abstract>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.Rect: void <init>(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.renderscript.ProgramVertexFixedFunction.Constants: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>:<public static>:<android.telephony.SmsMessage>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>:<public abstract>:<android.text.method.MovementMethod>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.EntityResolver getEntityResolver()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.media.audiofx.EnvironmentalReverb: short getDiffusion()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<org.apache.http.client.methods.AbortableHttpRequest: void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)>:<public abstract>:<org.apache.http.client.methods.AbortableHttpRequest>
<android.provider.SyncStateContract.Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>:<public>:<android.app.Instrumentation>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivity()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.Parcel: float[] createFloatArray()>:<public final>:<android.os.Parcel>
<android.animation.TimeInterpolator: float getInterpolation(float)>:<public abstract>:<android.animation.TimeInterpolator>
<android.content.IntentFilter: boolean hasCategory(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.TabHost.TabSpec: void <init>(android.widget.TabHost)>:<>:<android.widget.TabHost.TabSpec>
<android.provider.Contacts.People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<org.apache.http.impl.client.RequestWrapper: boolean isAborted()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.bluetooth.BluetoothA2dp: void <init>()>:<>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.app.Dialog: void setCancelable(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.View: void setId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.sax.Element: android.sax.Element requireChild(java.lang.String,java.lang.String)>:<public>:<android.sax.Element>
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.media.Ringtone: void <init>()>:<>:<android.media.Ringtone>
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams getDefaults()>:<public>:<org.apache.http.params.DefaultedHttpParams:org.apache.http.params.AbstractHttpParams>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.app.ActivityManager: int getLargeMemoryClass()>:<public>:<android.app.ActivityManager>
<android.content.Context: void setWallpaper(android.graphics.Bitmap)>:<public abstract>:<android.content.Context>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.view.ActionMode.Callback: void onDestroyActionMode(android.view.ActionMode)>:<public abstract>:<android.view.ActionMode.Callback>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.LayoutTransition: void setStagger(int,long)>:<public>:<android.animation.LayoutTransition>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.KeyguardManager: android.app.KeyguardManager.KeyguardLock newKeyguardLock(java.lang.String)>:<public>:<android.app.KeyguardManager>
<org.apache.http.impl.auth.BasicScheme: java.lang.String getSchemeName()>:<public>:<org.apache.http.impl.auth.BasicScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.view.inputmethod.BaseInputConnection: boolean clearMetaKeyStates(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.gesture.GestureOverlayView: void setFadeOffset(long)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.cookie.BasicMaxAgeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicMaxAgeHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.webkit.WebView: void onDetachedFromWindow()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.util.EventLogTags: void <init>(java.io.BufferedReader)>:<public>:<android.util.EventLogTags>
<android.app.backup.RestoreObserver: void restoreStarting(int)>:<public>:<android.app.backup.RestoreObserver>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>:<public synchronized>:<android.database.sqlite.SQLiteOpenHelper>
<android.view.View: boolean isInTouchMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ScrollView: int computeVerticalScrollOffset()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureOverlayView: void setGestureColor(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.rtp.RtpStream: boolean isBusy()>:<public>:<android.net.rtp.RtpStream>
<android.text.method.ScrollingMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.view.LayoutInflater: android.view.LayoutInflater.Filter getFilter()>:<public>:<android.view.LayoutInflater>
<org.apache.http.HttpResponseFactory: org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.HttpResponseFactory>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.util.regex.Pattern)>:<public static>:<android.text.TextUtils>
<android.view.inputmethod.CompletionInfo: int getPosition()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>:<public>:<android.webkit.CookieManager>
<android.app.Dialog: android.app.Activity getOwnerActivity()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.auth.AuthSchemeRegistry: java.util.List getSchemeNames()>:<public synchronized>:<org.apache.http.auth.AuthSchemeRegistry>
<android.animation.Keyframe: void <init>()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.Window: void setLayout(int,int)>:<public>:<android.view.Window>
<android.provider.MediaStore.Audio.Albums: void <init>()>:<public>:<android.provider.MediaStore.Audio.Albums:android.provider.BaseColumns,android.provider.MediaStore.Audio.AlbumColumns>
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>:<public>:<android.widget.PopupWindow>
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<org.apache.http.auth.NTUserPrincipal: java.lang.String getUsername()>:<public>:<org.apache.http.auth.NTUserPrincipal:java.security.Principal>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>:<public>:<android.media.RingtoneManager>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>:<public static>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.widget.Gallery: int computeHorizontalScrollExtent()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.cookie.SetCookie: void setExpiryDate(java.util.Date)>:<public abstract>:<org.apache.http.cookie.SetCookie:org.apache.http.cookie.Cookie>
<android.os.PatternMatcher: int getType()>:<public final>:<android.os.PatternMatcher:android.os.Parcelable>
<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)>:<public>:<android.animation.LayoutTransition>
<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.graphics.Matrix: void setSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.graphics.YuvImage: int getYuvFormat()>:<public>:<android.graphics.YuvImage>
<android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)>:<public static>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.text.Layout: int getParagraphDirection(int)>:<public abstract>:<android.text.Layout>
<android.app.LocalActivityManager: java.lang.String getCurrentId()>:<public>:<android.app.LocalActivityManager>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.hardware.Camera.Parameters: int getMinExposureCompensation()>:<public>:<android.hardware.Camera.Parameters>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.FlagToString[] flagMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<org.xmlpull.v1.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.os.Binder: int getCallingUid()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.content.ContentProvider: void shutdown()>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.media.FaceDetector.Face: void getMidPoint(android.graphics.PointF)>:<public>:<android.media.FaceDetector.Face>
<android.os.MessageQueue: void finalize()>:<protected>:<android.os.MessageQueue>
<android.net.sip.SipProfile: java.lang.String getPassword()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.gesture.Gesture: void writeToParcel(android.os.Parcel,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.widget.TextView: int getExtendedPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AutoCompleteTextView: boolean enoughToFilter()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.test.AndroidTestRunner: java.lang.Class loadSuiteClass(java.lang.String)>:<protected>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.widget.SectionIndexer: int getSectionForPosition(int)>:<public abstract>:<android.widget.SectionIndexer>
<android.gesture.Gesture: void <clinit>()>:<static>:<android.gesture.Gesture:android.os.Parcelable>
<android.hardware.SensorManager: float getAltitude(float,float)>:<public static>:<android.hardware.SensorManager>
<org.apache.http.HttpMessage: org.apache.http.Header[] getHeaders(java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<android.app.PendingIntent: void <init>()>:<>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.Bitmap: int getGenerationId()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<org.apache.http.message.BasicTokenIterator: boolean isTokenSeparator(char)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.webkit.WebSyncManager: void startSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.net.sip.SipProfile: java.lang.String getSipDomain()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>:<public abstract>:<android.content.Context>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<org.apache.http.conn.routing.RouteTracker: void layerProtocol(boolean)>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.sip.SipProfile: java.lang.String getProtocol()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.view.SurfaceView: void onMeasure(int,int)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.content.pm.LabeledIntent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.os.WorkSource: void <clinit>()>:<static>:<android.os.WorkSource:android.os.Parcelable>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.FileA3D.EntryType getEntryType()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.location.Location: double convert(java.lang.String)>:<public static>:<android.location.Location:android.os.Parcelable>
<org.apache.http.params.AbstractHttpParams: boolean isParameterTrue(java.lang.String)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.renderscript.FileA3D: void <init>()>:<>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.content.DialogInterface.OnMultiChoiceClickListener: void onClick(android.content.DialogInterface,int,boolean)>:<public abstract>:<android.content.DialogInterface.OnMultiChoiceClickListener>
<org.apache.http.HttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>:<public abstract>:<org.apache.http.HttpEntityEnclosingRequest:org.apache.http.HttpRequest>
<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLU: int gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.text.Layout: int getEllipsisCount(int)>:<public abstract>:<android.text.Layout>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.webkit.WebView: void invokeZoomPicker()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.Element: android.renderscript.Element TYPE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.HttpInetConnection: int getLocalPort()>:<public abstract>:<org.apache.http.HttpInetConnection:org.apache.http.HttpConnection>
<android.webkit.HttpAuthHandler: void cancel()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>:<public abstract>:<org.apache.http.conn.scheme.SocketFactory>
<org.apache.http.protocol.BasicHttpProcessor: void clearInterceptors()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.app.ActionBar: java.lang.CharSequence getSubtitle()>:<public abstract>:<android.app.ActionBar>
<android.util.Base64: byte[] encode(byte[],int)>:<public static>:<android.util.Base64>
<android.widget.ZoomControls: boolean hasFocus()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.ZoomButtonsController: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<org.apache.http.impl.conn.tsccm.WaitingThread: boolean await(java.util.Date)>:<public>:<org.apache.http.impl.conn.tsccm.WaitingThread>
<android.hardware.usb.UsbAccessory: void <clinit>()>:<static>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>:<public abstract>:<android.content.SharedPreferences>
<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceCreated(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.text.Layout: float getLineLeft(int)>:<public>:<android.text.Layout>
<android.widget.ToggleButton: void <init>(android.content.Context)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>:<public>:<android.webkit.WebIconDatabase>
<android.os.StrictMode.ThreadPolicy: java.lang.String toString()>:<public>:<android.os.StrictMode.ThreadPolicy>
<android.R.dimen: void <init>()>:<public>:<android.R.dimen>
<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.PopupWindow: boolean isAboveAnchor()>:<public>:<android.widget.PopupWindow>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>:<public static final>:<android.text.util.Linkify>
<android.graphics.drawable.DrawableContainer: void setAlpha(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()>:<public static>:<android.provider.MediaStore>
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.CursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.Window: void takeSurface(android.view.SurfaceHolder.Callback2)>:<public abstract>:<android.view.Window>
<android.net.Uri: java.lang.String getPath()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>:<protected>:<android.net.UrlQuerySanitizer>
<android.text.format.Time: boolean parse(java.lang.String)>:<public>:<android.text.format.Time>
<android.content.pm.PathPermission: void <init>(android.os.Parcel)>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float,java.lang.Object)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>:<public>:<android.app.KeyguardManager.KeyguardLock>
<android.mtp.MtpDevice: void close()>:<public>:<android.mtp.MtpDevice>
<android.util.EventLog.Event: void <init>()>:<>:<android.util.EventLog.Event>
<android.widget.DatePicker: int getDayOfMonth()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.AbsListView: void handleDataChanged()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.PackageStats: java.lang.String toString()>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Paint: void setDither(boolean)>:<public native>:<android.graphics.Paint>
<android.content.IntentFilter: void <init>(java.lang.String,java.lang.String)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView.OnItemLongClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.database.sqlite.SQLiteDatabase: void close()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long2)>:<public>:<android.renderscript.FieldPacker>
<android.widget.CursorTreeAdapter: java.lang.String convertToString(android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.os.Bundle: int getInt(java.lang.String,int)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES10: void glMaterialx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebSettings: void setCacheMode(int)>:<public>:<android.webkit.WebSettings>
<android.graphics.Paint.Style: android.graphics.Paint.Style[] values()>:<public static>:<android.graphics.Paint.Style:java.lang.Enum>
<android.preference.DialogPreference: void setPositiveButtonText(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.AutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.ViewGroup: void dispatchSetPressed(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>:<public static>:<android.view.ViewConfiguration>
<android.animation.Animator: java.util.ArrayList getListeners()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.webkit.WebView: boolean showFindDialog(java.lang.String,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.test.mock.MockPackageManager: java.lang.String[] getPackagesForUid(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.app.Activity: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.IntentFilter: int describeContents()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebView: boolean canZoomOut()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.RingtoneManager: boolean getIncludeDrm()>:<public>:<android.media.RingtoneManager>
<org.apache.http.impl.io.HttpTransportMetricsImpl: void incrementBytesTransferred(long)>:<public>:<org.apache.http.impl.io.HttpTransportMetricsImpl:org.apache.http.io.HttpTransportMetrics>
<android.animation.ArgbEvaluator: void <init>()>:<public>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.widget.HorizontalScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase.IconListener)>:<public>:<android.webkit.WebIconDatabase>
<android.renderscript.RenderScript: void setErrorHandler(android.renderscript.RenderScript.RSErrorHandler)>:<public>:<android.renderscript.RenderScript>
<org.apache.http.impl.client.AbstractHttpClient: void setParams(org.apache.http.params.HttpParams)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.NumberPicker: void setEnabled(boolean)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.impl.auth.NTLMEngineException:org.apache.http.auth.AuthenticationException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.os.Message: int describeContents()>:<public>:<android.os.Message:android.os.Parcelable>
<android.text.method.PasswordTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.app.ActionBar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.provider.Settings.SettingNotFoundException: void <init>(java.lang.String)>:<public>:<android.provider.Settings.SettingNotFoundException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.widget.TextView: void setEditableFactory(android.text.Editable.Factory)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.MessageClass getMessageClass()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionClick(int)>:<public abstract>:<android.widget.SearchView.OnSuggestionListener>
<android.app.Fragment: int hashCode()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.text.style.ForegroundColorSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.app.ListFragment: void <init>()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.view.Window: android.content.res.TypedArray getWindowStyle()>:<public final>:<android.view.Window>
<org.apache.http.message.BasicHeaderIterator: int findNext(int)>:<protected>:<org.apache.http.message.BasicHeaderIterator:org.apache.http.HeaderIterator>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>:<public>:<android.graphics.Canvas>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isStale()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>:<public final>:<android.os.Handler>
<android.test.mock.MockCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<org.apache.http.protocol.HttpService: void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse)>:<protected>:<org.apache.http.protocol.HttpService>
<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Messenger:android.os.Parcelable>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()>:<protected>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.animation.Animator.AnimatorListener: void onAnimationStart(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>:<protected static>:<android.text.method.MetaKeyKeyListener>
<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public>:<android.content.ContentProviderClient>
<android.os.Parcel: void readByteArray(byte[])>:<public final>:<android.os.Parcel>
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.TextView: int[] onCreateDrawableState(int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.EditTextPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Chronometer: void stop()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>:<public>:<android.app.WallpaperManager>
<org.apache.http.impl.client.RedirectLocations: boolean contains(java.net.URI)>:<public>:<org.apache.http.impl.client.RedirectLocations>
<android.net.Uri: java.lang.String getLastPathSegment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Notification.Builder: android.app.Notification.Builder setFullScreenIntent(android.app.PendingIntent,boolean)>:<public>:<android.app.Notification.Builder>
<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<org.apache.http.message.LineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.LineParser>
<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.view.ViewConfiguration: int getWindowTouchSlop()>:<public static>:<android.view.ViewConfiguration>
<android.widget.Gallery: int getChildDrawingOrder(int,int)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.graphics.Interpolator: void reset(int)>:<public>:<android.graphics.Interpolator>
<android.view.Menu: boolean isShortcutKey(int,android.view.KeyEvent)>:<public abstract>:<android.view.Menu>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.net.rtp.AudioGroup: int getMode()>:<public>:<android.net.rtp.AudioGroup>
<org.apache.http.conn.routing.HttpRoute: java.lang.Object clone()>:<public>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFormats()>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void flush()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.view.View.MeasureSpec: void <init>()>:<public>:<android.view.View.MeasureSpec>
<android.opengl.GLES10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.net.sip.SipManager: boolean isOpened(java.lang.String)>:<public>:<android.net.sip.SipManager>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.database.MatrixCursor: void addRow(java.lang.Object[])>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.ClipData.Item: void <init>(android.net.Uri)>:<public>:<android.content.ClipData.Item>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.View: float getTranslationX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.nfc.tech.MifareClassic: int blockToSector(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.media.audiofx.BassBoost.Settings: void <init>()>:<public>:<android.media.audiofx.BassBoost.Settings>
<org.apache.http.conn.OperatedClientConnection: boolean isSecure()>:<public abstract>:<org.apache.http.conn.OperatedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.OrientationListener: void onAccuracyChanged(int,int)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState[] values()>:<public static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.SyncStateContract.Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date)>:<public static>:<org.apache.http.impl.cookie.DateUtils>
<android.util.Base64InputStream: void mark(int)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.test.AndroidTestRunner: junit.framework.TestResult getTestResult()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.graphics.RectF: void set(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.content.pm.PackageStats: void <init>(android.os.Parcel)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.widget.RatingBar: void setNumStars(int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.inputmethod.InputBinding: int getUid()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.View: void setScaleX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RadioGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: int getNextFocusLeftId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureLibrary: void setOrientationStyle(int)>:<public>:<android.gesture.GestureLibrary>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void deleteClosedConnections()>:<public abstract>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<org.apache.http.auth.UsernamePasswordCredentials: int hashCode()>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.widget.AbsListView: void setTextFilterEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.HorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<junit.runner.Version: java.lang.String id()>:<public static>:<junit.runner.Version>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>:<public>:<org.apache.http.message.BasicHttpRequest:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpRequest>
<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>:<public>:<android.webkit.WebViewClient>
<org.apache.http.client.methods.HttpTrace: java.lang.String getMethod()>:<public>:<org.apache.http.client.methods.HttpTrace:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.view.Display: void getMetrics(android.util.DisplayMetrics)>:<public>:<android.view.Display>
<android.text.SpannableStringBuilder: android.text.Editable insert(int,java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.renderscript.RenderScript.RSMessageHandler: void run()>:<public>:<android.renderscript.RenderScript.RSMessageHandler:java.lang.Runnable>
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setColor(float,float,float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>:<public static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.media.ToneGenerator: void stopTone()>:<public native>:<android.media.ToneGenerator>
<android.widget.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.client.protocol.ResponseProcessCookies: void <init>()>:<public>:<org.apache.http.client.protocol.ResponseProcessCookies:org.apache.http.HttpResponseInterceptor>
<org.apache.http.entity.EntityTemplate: void <init>(org.apache.http.entity.ContentProducer)>:<public>:<org.apache.http.entity.EntityTemplate:org.apache.http.entity.AbstractHttpEntity>
<android.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListPopupWindow>
<android.os.Bundle: java.lang.Object get(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.inputmethodservice.InputMethodService: void onDestroy()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebStorage: void deleteOrigin(java.lang.String)>:<public>:<android.webkit.WebStorage>
<android.text.Layout: int getLineDescent(int)>:<public abstract>:<android.text.Layout>
<org.apache.http.conn.routing.RouteInfo.LayerType: org.apache.http.conn.routing.RouteInfo.LayerType valueOf(java.lang.String)>:<public static>:<org.apache.http.conn.routing.RouteInfo.LayerType:java.lang.Enum>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.text.format.DateUtils: void <clinit>()>:<static>:<android.text.format.DateUtils>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.TextView: void setHint(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.protocol.DefaultedHttpContext: void setAttribute(java.lang.String,java.lang.Object)>:<public>:<org.apache.http.protocol.DefaultedHttpContext:org.apache.http.protocol.HttpContext>
<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void setFillBefore(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.graphics.Path: void close()>:<public>:<android.graphics.Path>
<android.view.ViewStub: void setVisibility(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.FragmentTransaction: void <init>()>:<public>:<android.app.FragmentTransaction>
<android.opengl.GLES10: void glClear(int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Matrix2f: void set(int,int,float)>:<public>:<android.renderscript.Matrix2f>
<android.view.Window: android.os.Bundle saveHierarchyState()>:<public abstract>:<android.view.Window>
<android.view.View: boolean isSaveFromParentEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>(boolean)>:<public>:<android.text.LoginFilter.UsernameFilterGeneric:android.text.LoginFilter>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>:<public static>:<android.provider.ContactsContract.QuickContact>
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)>:<public>:<android.media.MediaPlayer>
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.animation.AnimationSet: boolean willChangeBounds()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: boolean expectContinue()>:<public>:<org.apache.http.client.methods.HttpEntityEnclosingRequestBase:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.app.Instrumentation: void startAllocCounting()>:<public>:<android.app.Instrumentation>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.telephony.ServiceState: void setIsManualSelection(boolean)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.text.SpannableStringBuilder: android.text.Editable append(java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.NumberPicker.OnScrollListener: void onScrollStateChange(android.widget.NumberPicker,int)>:<public abstract>:<android.widget.NumberPicker.OnScrollListener>
<android.media.audiofx.Visualizer: int getWaveForm(byte[])>:<public>:<android.media.audiofx.Visualizer>
<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.speech.tts.TextToSpeech.Engine: void <init>(android.speech.tts.TextToSpeech)>:<public>:<android.speech.tts.TextToSpeech.Engine>
<android.content.Context: boolean deleteDatabase(java.lang.String)>:<public abstract>:<android.content.Context>
<android.app.SearchableInfo: int describeContents()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<org.json.JSONTokener: java.lang.String toString()>:<public>:<org.json.JSONTokener>
<android.renderscript.Type: android.renderscript.Element getElement()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.hardware.Camera.Parameters: void setPreviewFormat(int)>:<public>:<android.hardware.Camera.Parameters>
<android.view.MenuItem: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>:<public abstract>:<android.view.MenuItem>
<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.drm.ProcessedData: java.lang.String getAccountId()>:<public>:<android.drm.ProcessedData>
<android.location.Address: java.lang.String toString()>:<public>:<android.location.Address:android.os.Parcelable>
<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<org.apache.http.impl.cookie.RFC2109Spec: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>:<public>:<android.graphics.Paint>
<android.view.View: java.util.ArrayList getFocusables(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AdapterView: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ImageView.ScaleType: void <clinit>()>:<static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.SurfaceView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.SurfaceView:android.view.View>
<org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultRedirectHandler:org.apache.http.client.RedirectHandler>
<android.widget.PopupWindow: void setHeight(int)>:<public>:<android.widget.PopupWindow>
<android.util.JsonReader: void nextNull()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.util.JsonToken: void <clinit>()>:<static>:<android.util.JsonToken:java.lang.Enum>
<android.media.ToneGenerator: void finalize()>:<protected>:<android.media.ToneGenerator>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.telephony.SignalStrength: boolean isGsm()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10Ext>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority[] values()>:<public static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.content.pm.ServiceInfo: int describeContents()>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTapEvent(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.content.SyncInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncInfo:android.os.Parcelable>
<android.telephony.SignalStrength: boolean equals(java.lang.Object)>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)>:<public static>:<android.view.animation.AnimationUtils>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setAutoRegistration(boolean)>:<public>:<android.net.sip.SipProfile.Builder>
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>:<public>:<android.app.admin.DevicePolicyManager>
<org.apache.http.message.BasicStatusLine: java.lang.String getReasonPhrase()>:<public>:<org.apache.http.message.BasicStatusLine:org.apache.http.StatusLine,java.lang.Cloneable>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.widget.DialerFilter: void append(java.lang.String)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.view.ActionMode: android.view.View getCustomView()>:<public abstract>:<android.view.ActionMode>
<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>:<public static>:<android.util.Xml>
<android.os.Looper: void prepareMainLooper()>:<public static final>:<android.os.Looper>
<android.preference.PreferenceActivity.Header: int describeContents()>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.preference.PreferenceActivity: void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.IntentFilter: java.util.Iterator categoriesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<android.media.JetPlayer: java.lang.Object clone()>:<public>:<android.media.JetPlayer>
<android.content.Intent: int fillIn(android.content.Intent,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Parcel: void writeMap(java.util.Map)>:<public final>:<android.os.Parcel>
<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<org.apache.http.message.BasicHeaderElement: int hashCode()>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.provider.MediaStore.Audio.Artists: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Artists:android.provider.BaseColumns,android.provider.MediaStore.Audio.ArtistColumns>
<android.telephony.gsm.SmsMessage: int getStatusOnSim()>:<public>:<android.telephony.gsm.SmsMessage>
<android.preference.Preference: android.os.Bundle getExtras()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>:<public static>:<android.app.DownloadManager>
<android.view.View: boolean isInEditMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.IntentService: void onStart(android.content.Intent,int)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>:<public>:<android.appwidget.AppWidgetManager>
<android.R.style: void <init>()>:<public>:<android.R.style>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentConstantIndex()>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>:<public static>:<android.text.method.Touch>
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>:<public>:<android.media.AudioManager>
<android.view.WindowManager.LayoutParams: void <init>(android.os.Parcel)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode[] values()>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<android.telephony.SmsMessage: void <init>()>:<>:<android.telephony.SmsMessage>
<android.inputmethodservice.Keyboard.Key: void onPressed()>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.style.SubscriptSpan: void <init>()>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.QuickContactBadge: void setExcludeMimes(java.lang.String[])>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.nfc.tech.MifareClassic: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.content.CursorLoader: void onStopLoading()>:<protected>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<org.apache.http.impl.cookie.RFC2965SpecFactory: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2965SpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.text.SpannableStringBuilder: android.text.Editable delete(int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.hardware.Sensor: float getPower()>:<public>:<android.hardware.Sensor>
<android.provider.Contacts.ContactMethods: void <init>()>:<>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.net.TrafficStats: long getUidRxPackets(int)>:<public static native>:<android.net.TrafficStats>
<android.view.MotionEvent: int getEdgeFlags()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>:<public>:<android.telephony.SmsManager>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>:<public>:<android.graphics.Paint>
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.message.BasicHeaderElementIterator: java.lang.Object next()>:<public final>:<org.apache.http.message.BasicHeaderElementIterator:org.apache.http.HeaderElementIterator>
<android.view.animation.AnimationSet: void setStartTime(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.os.Process: void setThreadPriority(int,int)>:<public static final native>:<android.os.Process>
<android.content.res.Configuration: int describeContents()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.media.audiofx.Equalizer.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<org.apache.http.impl.io.HttpResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>:<protected>:<org.apache.http.impl.io.HttpResponseParser:org.apache.http.impl.io.AbstractMessageParser>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>:<public final>:<android.content.res.AssetManager>
<android.widget.Toast: void setText(int)>:<public>:<android.widget.Toast>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>:<public>:<android.graphics.Paint>
<org.apache.http.impl.io.HttpTransportMetricsImpl: void setBytesTransferred(long)>:<public>:<org.apache.http.impl.io.HttpTransportMetricsImpl:org.apache.http.io.HttpTransportMetrics>
<org.apache.http.impl.cookie.RFC2109Spec: java.util.List formatCookies(java.util.List)>:<public>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.util.StateSet: boolean stateSetMatches(int[],int)>:<public static>:<android.util.StateSet>
<junit.framework.Assert: void assertEquals(java.lang.String,float,float,float)>:<public static>:<junit.framework.Assert>
<android.graphics.Paint: void setFlags(int)>:<public native>:<android.graphics.Paint>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_NEAREST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.webkit.WebSettings: void setMinimumFontSize(int)>:<public synchronized>:<android.webkit.WebSettings>
<android.graphics.drawable.Drawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.Drawable>
<android.app.UiModeManager: void enableCarMode(int)>:<public>:<android.app.UiModeManager>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>:<public>:<android.accounts.AccountManager>
<android.database.sqlite.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.os.Binder: boolean pingBinder()>:<public>:<android.os.Binder:android.os.IBinder>
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte3)>:<public>:<android.renderscript.FieldPacker>
<org.apache.http.params.HttpProtocolParams: boolean useExpectContinue(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<org.apache.http.conn.routing.RouteTracker: void connectTarget(boolean)>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.widget.TabHost: android.widget.TabHost.TabSpec newTabSpec(java.lang.String)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: boolean isDirty()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.message.HeaderGroup: boolean containsHeader(java.lang.String)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.database.AbstractCursor: boolean requery()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.style.AlignmentSpan: android.text.Layout.Alignment getAlignment()>:<public abstract>:<android.text.style.AlignmentSpan:android.text.style.ParagraphStyle>
<android.text.SpannedString: void <init>(java.lang.CharSequence)>:<public>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpPost:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.inputmethodservice.InputMethodService: void hideStatusIcon()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.Notification.Builder: android.app.Notification.Builder setAutoCancel(boolean)>:<public>:<android.app.Notification.Builder>
<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.os.Debug.MemoryInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.view.ViewGroup: void clearFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onMarkerReached(android.media.AudioTrack)>:<public abstract>:<android.media.AudioTrack.OnPlaybackPositionUpdateListener>
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>:<public>:<android.speech.SpeechRecognizer>
<android.media.FaceDetector: void <init>(int,int,int)>:<public>:<android.media.FaceDetector>
<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.SectionIndexer: java.lang.Object[] getSections()>:<public abstract>:<android.widget.SectionIndexer>
<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>:<public>:<org.apache.http.conn.ConnectTimeoutException:java.io.InterruptedIOException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.view.ViewGroup: void dispatchSystemUiVisibilityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.nfc.tech.NfcB: byte[] getProtocolInfo()>:<public>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<org.apache.http.client.methods.HttpRequestBase: java.lang.String getMethod()>:<public abstract>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.DatePicker: void setSpinnersShown(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.HeaderIterator headerIterator()>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.test.MoreAsserts: void assertEquals(byte[],byte[])>:<public static>:<android.test.MoreAsserts>
<org.apache.http.HttpVersion: void <clinit>()>:<static>:<org.apache.http.HttpVersion:org.apache.http.ProtocolVersion,java.io.Serializable>
<android.provider.ContactsContract.Settings: void <clinit>()>:<static>:<android.provider.ContactsContract.Settings:android.provider.ContactsContract.SettingsColumns>
<android.graphics.drawable.ShapeDrawable: void <init>()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable.Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.renderscript.Script: void setVar(int,int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>:<public>:<org.json.JSONObject>
<android.graphics.drawable.InsetDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.LayoutAnimationController: void start()>:<public>:<android.view.animation.LayoutAnimationController>
<android.graphics.Bitmap: void setDensity(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.widget.AdapterViewFlipper: boolean isFlipping()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.params.HttpConnectionParams: void <init>()>:<>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.nfc.tech.BasicTagTechnology: boolean isConnected()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.app.Notification: int describeContents()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.telephony.TelephonyManager: int getDataState()>:<public>:<android.telephony.TelephonyManager>
<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>:<public final native>:<android.hardware.Camera>
<android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.PorterDuffXfermode:android.graphics.Xfermode>
<android.animation.AnimatorSet: void setupStartValues()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>:<public>:<android.content.ContentResolver>
<android.test.mock.MockCursor: boolean getWantsAllOnMoveCalls()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.database.AbstractWindowedCursor: short getShort(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.graphics.drawable.shapes.Shape: boolean hasAlpha()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.test.MoreAsserts: void assertNotContainsRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.test.MoreAsserts: void assertNotEmpty(java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.renderscript.RenderScript.Priority: void <init>(java.lang.String,int)>:<private>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.graphics.Region: boolean isComplex()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.view.ActionMode.Callback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>:<public abstract>:<android.view.ActionMode.Callback>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)>:<public>:<android.content.ClipData.Item>
<android.app.backup.FileBackupHelperBase: void <init>()>:<>:<android.app.backup.FileBackupHelperBase>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.view.View: int[] mergeDrawableStates(int[],int[])>:<protected static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.location.Criteria: int getSpeedAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<org.apache.http.HttpHost: java.lang.String getSchemeName()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int4)>:<public>:<android.renderscript.FieldPacker>
<android.widget.Gallery: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.os.Handler.Callback: boolean handleMessage(android.os.Message)>:<public abstract>:<android.os.Handler.Callback>
<android.hardware.SensorManager: boolean remapCoordinateSystem(float[],int,int,float[])>:<public static>:<android.hardware.SensorManager>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpRequestFactory createHttpRequestFactory()>:<protected>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<org.apache.http.message.BasicNameValuePair: java.lang.String toString()>:<public>:<org.apache.http.message.BasicNameValuePair:org.apache.http.NameValuePair,java.lang.Cloneable>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener,android.os.Handler)>:<public>:<android.media.JetPlayer>
<android.widget.TextView: int getCompoundDrawablePadding()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.HeterogeneousExpandableList: int getChildTypeCount()>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.location.Criteria: void setVerticalAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.TableLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.NumberPicker: void setMaxValue(int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings.TextSize)>:<public synchronized>:<android.webkit.WebSettings>
<android.text.Spanned: int getSpanStart(java.lang.Object)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>:<public>:<android.app.Instrumentation>
<android.widget.FrameLayout: void onMeasure(int,int)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.database.CursorWrapper: boolean moveToPosition(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.preference.PreferenceActivity: boolean onIsMultiPane()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.app.Dialog: void openOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.text.GetChars: void getChars(int,int,char[],int)>:<public abstract>:<android.text.GetChars:java.lang.CharSequence>
<android.test.mock.MockPackageManager: java.util.List queryIntentServices(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.HorizontalScrollView: void measureChild(android.view.View,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.Editable.Factory: android.text.Editable newEditable(java.lang.CharSequence)>:<public>:<android.text.Editable.Factory>
<android.accessibilityservice.AccessibilityServiceInfo: void <clinit>()>:<static>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<junit.runner.BaseTestRunner: void addError(junit.framework.Test,java.lang.Throwable)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>:<public>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.database.DatabaseUtils.InsertHelper: void bind(int,int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.os.ConditionVariable: void block()>:<public>:<android.os.ConditionVariable>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocation()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<org.apache.http.impl.SocketHttpClientConnection: void setSocketTimeout(int)>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.animation.ValueAnimator: void end()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>:<public static>:<android.os.Messenger:android.os.Parcelable>
<android.content.Loader.ForceLoadContentObserver: void <init>(android.content.Loader)>:<public>:<android.content.Loader.ForceLoadContentObserver:android.database.ContentObserver>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>()>:<public>:<android.graphics.SurfaceTexture.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.preference.PreferenceGroup: void dispatchRestoreInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Font: android.renderscript.Font create(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,android.renderscript.Font.Style,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCancelable(boolean)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.RenderScriptGL: void bindProgramStore(android.renderscript.ProgramStore)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.text.DynamicLayout: android.text.Layout.Directions getLineDirections(int)>:<public final>:<android.text.DynamicLayout:android.text.Layout>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>:<public>:<org.json.JSONObject>
<android.view.ViewGroup: void setPadding(int,int,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.style.BulletSpan: void <init>(int,int)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<org.apache.http.impl.DefaultHttpClientConnection: void <init>()>:<public>:<org.apache.http.impl.DefaultHttpClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection>
<android.net.TrafficStats: long getMobileRxBytes()>:<public static native>:<android.net.TrafficStats>
<org.apache.http.message.HeaderGroup: void clear()>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.webkit.WebView: void requestImageRef(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.String)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<org.apache.http.protocol.BasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)>:<public>:<org.apache.http.protocol.BasicHttpContext:org.apache.http.protocol.HttpContext>
<android.test.ActivityUnitTestCase: int getRequestedOrientation()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.Window.Callback: boolean onSearchRequested()>:<public abstract>:<android.view.Window.Callback>
<android.graphics.ColorMatrix: float[] getArray()>:<public final>:<android.graphics.ColorMatrix>
<android.widget.FrameLayout: void setMeasureAllChildren(boolean)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.graphics.YuvImage: void <init>(byte[],int,int,int,int[])>:<public>:<android.graphics.YuvImage>
<android.view.View.BaseSavedState: void <clinit>()>:<static>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.view.OrientationListener: void <init>(android.content.Context)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.app.FragmentTransaction: boolean isAddToBackStackAllowed()>:<public abstract>:<android.app.FragmentTransaction>
<android.R.color: void <init>()>:<public>:<android.R.color>
<android.animation.ObjectAnimator: android.animation.ValueAnimator setDuration(long)>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.animation.AlphaAnimation: boolean willChangeBounds()>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.text.BoringLayout: int getLineTop(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.Intent: void setSourceBounds(android.graphics.Rect)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.animation.AlphaAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.widget.ViewSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)>:<public static final>:<android.provider.Browser>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.ProviderTestCase2: void tearDown()>:<protected>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.impl.SocketHttpServerConnection: boolean isOpen()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<org.apache.http.HttpMessage: void addHeader(java.lang.String,java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.MotionEvent: int getActionMasked()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.provider.CallLog: void <init>()>:<public>:<android.provider.CallLog>
<android.view.InputDevice.MotionRange: int getAxis()>:<public>:<android.view.InputDevice.MotionRange>
<android.content.Intent: java.lang.String getAction()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh create(boolean)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.animation.Keyframe: void setValue(java.lang.Object)>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.speech.SpeechRecognizer: boolean isRecognitionAvailable(android.content.Context)>:<public static>:<android.speech.SpeechRecognizer>
<android.text.style.TabStopSpan: int getTabStop()>:<public abstract>:<android.text.style.TabStopSpan:android.text.style.ParagraphStyle>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.Drawable>
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.graphics.RegionIterator: boolean next(android.graphics.Rect)>:<public final>:<android.graphics.RegionIterator>
<android.media.audiofx.AudioEffect: int getId()>:<public>:<android.media.audiofx.AudioEffect>
<junit.framework.Assert: void assertEquals(java.lang.String,long,long)>:<public static>:<junit.framework.Assert>
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler getContentHandler()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.view.animation.BounceInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator>
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.PopupWindow: void setWidth(int)>:<public>:<android.widget.PopupWindow>
<android.net.NetworkInfo: boolean isConnected()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.view.View.OnGenericMotionListener: boolean onGenericMotion(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnGenericMotionListener>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>:<public final>:<android.os.Handler>
<android.os.Parcel: java.lang.String readString()>:<public final native>:<android.os.Parcel>
<android.provider.ContactsContract.CommonDataKinds.Im: int getProtocolLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.widget.SimpleCursorTreeAdapter: void setViewBinder(android.widget.SimpleCursorTreeAdapter.ViewBinder)>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean)>:<public>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>:<public>:<android.nfc.NfcAdapter>
<android.view.Window: void setFeatureDrawableAlpha(int,int)>:<public abstract>:<android.view.Window>
<android.graphics.drawable.ShapeDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.database.AbstractWindowedCursor: float getFloat(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.os.Parcel: boolean[] createBooleanArray()>:<public final>:<android.os.Parcel>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.text.SpannableStringBuilder: void <init>()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.AdapterView: void removeAllViews()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.Entity: java.lang.String toString()>:<public>:<android.content.Entity>
<android.appwidget.AppWidgetHostView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.AbstractPoolEntry: void tunnelTarget(boolean,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.IsolatedContext: void <init>(android.content.ContentResolver,android.content.Context)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setCullMode(android.renderscript.ProgramRaster.CullMode)>:<public>:<android.renderscript.ProgramRaster.Builder>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.os.Message: android.os.Bundle peekData()>:<public>:<android.os.Message:android.os.Parcelable>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.widget.RadioGroup: void onFinishInflate()>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.net.wifi.SupplicantState: int describeContents()>:<public>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void <init>()>:<>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.util.SparseBooleanArray: void <init>(int)>:<public>:<android.util.SparseBooleanArray>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.database.AbstractCursor: long getLong(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.os.WorkSource: void <init>(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<org.apache.http.ProtocolException: void <init>(java.lang.String)>:<public>:<org.apache.http.ProtocolException:org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.Display: int getWidth()>:<public native>:<android.view.Display>
<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>:<public static>:<android.os.Debug>
<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView.OnGroupClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.Address: void setUrl(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.util.SparseIntArray: void append(int,int)>:<public>:<android.util.SparseIntArray>
<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.test.ViewAsserts: void assertBaselineAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<org.apache.http.impl.AbstractHttpServerConnection: void sendResponseEntity(org.apache.http.HttpResponse)>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.renderscript.FileA3D.EntryType: void <init>(java.lang.String,int)>:<private>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<android.app.Application: void onCreate()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.renderscript.BaseObj: void finalize()>:<protected>:<android.renderscript.BaseObj>
<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>:<public abstract>:<org.apache.http.HttpRequest:org.apache.http.HttpMessage>
<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ScaleGestureDetector>
<org.apache.http.message.BasicLineFormatter: void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine)>:<protected>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>:<public final synchronized>:<org.apache.http.conn.scheme.SchemeRegistry>
<android.widget.TextView: boolean performLongClick()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.RenamingDelegatingContext: boolean deleteDatabase(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.renderscript.AllocationAdapter: void setZ(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.webkit.WebSettings: boolean getDisplayZoomControls()>:<public>:<android.webkit.WebSettings>
<android.view.View: int getNextFocusRightId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.params.ConnRouteParams: void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost)>:<public static>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)>:<public static>:<android.view.animation.AnimationUtils>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setAuthUserName(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.renderscript.FieldPacker: void addI16(short)>:<public>:<android.renderscript.FieldPacker>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.String)>:<public>:<android.content.IntentSender.SendIntentException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.telephony.ServiceState: int getState()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])>:<public>:<org.apache.http.impl.io.ChunkedInputStream:java.io.InputStream>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.Parcel: void writeLong(long)>:<public final native>:<android.os.Parcel>
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<org.apache.http.entity.AbstractHttpEntity: void <init>()>:<protected>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<junit.runner.BaseTestRunner: java.lang.String truncate(java.lang.String)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)>:<protected>:<org.apache.http.impl.conn.ProxySelectorRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<android.hardware.Camera.Parameters: int getMaxExposureCompensation()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.HorizontalScrollView: void requestLayout()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.opengl.GLES10: void glColorPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.test.mock.MockApplication: void onCreate()>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<android.widget.CheckedTextView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.text.style.ImageSpan: void <init>(android.content.Context,int,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<org.apache.http.entity.BasicHttpEntity: boolean isRepeatable()>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.content.res.AssetFileDescriptor: void <clinit>()>:<static>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<org.apache.http.conn.routing.RouteTracker: int getHopCount()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.app.FragmentManager: int getBackStackEntryCount()>:<public abstract>:<android.app.FragmentManager>
<org.apache.http.impl.conn.AbstractPoolEntry: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute)>:<protected>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.text.Html.TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>:<public abstract>:<android.text.Html.TagHandler>
<android.net.LocalSocket: boolean isClosed()>:<public>:<android.net.LocalSocket>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>:<public>:<android.media.MediaMetadataRetriever>
<android.os.Binder: void <init>()>:<public>:<android.os.Binder:android.os.IBinder>
<android.widget.ExpandableListView.OnGroupExpandListener: void onGroupExpand(int)>:<public abstract>:<android.widget.ExpandableListView.OnGroupExpandListener>
<android.text.method.ArrowKeyMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.conn.ClientConnectionOperator: org.apache.http.conn.OperatedClientConnection createConnection()>:<public abstract>:<org.apache.http.conn.ClientConnectionOperator>
<android.view.View: void onWindowFocusChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<org.apache.http.impl.SocketHttpClientConnection: void assertNotOpen()>:<protected>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<org.apache.http.client.methods.HttpRequestBase: void <init>()>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.text.SpannableStringBuilder: java.lang.Appendable append(java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.content.res.Configuration: void <init>()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>:<public abstract>:<android.view.MenuItem>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder addRequirements(java.util.List)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<android.test.mock.MockContext: void sendStickyBroadcast(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.pm.Signature: void <init>(java.lang.String)>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.widget.TableRow: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.util.ByteArrayBuffer: void append(int)>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.widget.CursorTreeAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.provider.Settings.Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>:<public static synchronized>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.preference.Preference: boolean isSelectable()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.util.TimingLogger: void reset()>:<public>:<android.util.TimingLogger>
<android.content.pm.PackageStats: int describeContents()>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion createProtocolVersion(int,int)>:<protected>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.text.style.LeadingMarginSpan.Standard: void <init>(android.os.Parcel)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.media.AudioTrack: int getStreamType()>:<public>:<android.media.AudioTrack>
<android.os.CountDownTimer: void <init>(long,long)>:<public>:<android.os.CountDownTimer>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.pm.PackageManager: java.util.List getAllPermissionGroups(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.MenuInflater: void <init>(android.content.Context)>:<public>:<android.view.MenuInflater>
<android.view.View: void onStartTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebChromeClient.CustomViewCallback: void onCustomViewHidden()>:<public abstract>:<android.webkit.WebChromeClient.CustomViewCallback>
<android.os.Looper: void <init>()>:<>:<android.os.Looper>
<org.apache.http.conn.routing.HttpRoute: boolean isTunnelled()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.test.InstrumentationTestCase: void sendRepeatedKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.content.res.AssetManager.AssetInputStream: void close()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.app.Activity: java.lang.String getLocalClassName()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.drawable.GradientDrawable: void setSize(int,int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.ColorMatrix: void setScale(float,float,float,float)>:<public>:<android.graphics.ColorMatrix>
<android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.PixelFormat: void <init>()>:<public>:<android.graphics.PixelFormat>
<android.gesture.GestureOverlayView: void onDetachedFromWindow()>:<protected>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: boolean isActive()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.app.NativeActivity: void onStop()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.app.ActivityManager.RunningTaskInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<dalvik.system.PathClassLoader: java.lang.Class findClass(java.lang.String)>:<protected>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getAllTests()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.PorterDuffColorFilter:android.graphics.ColorFilter>
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.Script: void <init>()>:<>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.animation.Animator: long getDuration()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.client.methods.HttpTrace: void <init>(java.lang.String)>:<public>:<org.apache.http.client.methods.HttpTrace:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.database.sqlite.SQLiteTableLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteTableLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.gesture.GestureLibrary: void addGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.text.SpannedString: int getSpanFlags(java.lang.Object)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.impl.conn.DefaultResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.DefaultResponseParser:org.apache.http.impl.io.AbstractMessageParser>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.app.IntentService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.test.mock.MockResources: android.content.res.Configuration getConfiguration()>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.renderscript.Allocation: void destroy()>:<public volatile>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.TimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.os.PowerManager.WakeLock: void finalize()>:<protected>:<android.os.PowerManager.WakeLock>
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>:<public final>:<android.content.res.AssetManager>
<android.database.Cursor: boolean isAfterLast()>:<public abstract>:<android.database.Cursor>
<android.os.Parcel: void readCharArray(char[])>:<public final>:<android.os.Parcel>
<android.util.Base64: byte[] encode(byte[],int,int,int)>:<public static>:<android.util.Base64>
<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>:<public abstract>:<android.view.SurfaceHolder>
<android.widget.VideoView: int getCurrentPosition()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.widget.TextView: boolean didTouchFocusSelect()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)>:<public static>:<android.net.sip.SipManager>
<android.net.http.SslError: boolean hasError(int)>:<public>:<android.net.http.SslError>
<org.apache.http.client.methods.HttpPut: void <init>()>:<public>:<org.apache.http.client.methods.HttpPut:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.text.style.URLSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Bundle: short getShort(java.lang.String,short)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.gesture.Gesture: void <init>()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.View: boolean willNotCacheDrawing()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.framework.TestSuite: java.lang.String toString()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.webkit.WebSettings: int getMinimumFontSize()>:<public synchronized>:<android.webkit.WebSettings>
<android.renderscript.RSSurfaceView: void destroyRenderScriptGL()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.net.LocalServerSocket: void close()>:<public>:<android.net.LocalServerSocket>
<android.renderscript.Script: void setTimeZone(java.lang.String)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.os.Build: void <init>()>:<public>:<android.os.Build>
<android.database.DataSetObservable: void <init>()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AnalogClock:android.view.View>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short3)>:<public>:<android.renderscript.FieldPacker>
<android.gesture.GestureStore: void removeGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.TabWidget: void childDrawableStateChanged(android.view.View)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>:<public static>:<android.os.RecoverySystem>
<org.xmlpull.v1.sax2.Driver: void <init>(org.xmlpull.v1.XmlPullParser)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.view.animation.AccelerateInterpolator: void <init>(float)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator>
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.animation.AnimatorInflater: void <init>()>:<public>:<android.animation.AnimatorInflater>
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.preference.Preference: void onAttachedToActivity()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.webkit.JsResult: void confirm()>:<public final>:<android.webkit.JsResult>
<android.os.AsyncTask: void onCancelled()>:<protected>:<android.os.AsyncTask>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.CursorLoader: void onStartLoading()>:<protected>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.test.SingleLaunchActivityTestCase: void tearDown()>:<protected>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(int)>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.widget.RelativeLayout: void onMeasure(int,int)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.net.rtp.AudioCodec: void <init>()>:<>:<android.net.rtp.AudioCodec>
<android.graphics.RectF: int describeContents()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.LayoutAnimationController>
<org.apache.http.impl.cookie.BasicClientCookie2: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<org.json.JSONObject: java.lang.String toString(int)>:<public>:<org.json.JSONObject>
<android.content.IntentFilter: boolean hasAction(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent.PointerCoords)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<junit.framework.TestFailure: java.lang.String trace()>:<public>:<junit.framework.TestFailure>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.text.AndroidCharacter: void getDirectionalities(char[],byte[],int)>:<public static native>:<android.text.AndroidCharacter>
<android.util.Base64InputStream: int available()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.MenuItem: android.content.Intent getIntent()>:<public abstract>:<android.view.MenuItem>
<android.content.CursorLoader: java.lang.String[] getProjection()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebViewFragment: void onDestroyView()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: int getRepeatMode()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.animation.Animation: void setBackgroundColor(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.TextView: int getGravity()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.backup.FileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>:<public>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<org.apache.http.impl.HttpConnectionMetricsImpl: void incrementRequestCount()>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<org.apache.http.conn.MultihomePlainSocketFactory: java.net.Socket createSocket()>:<public>:<org.apache.http.conn.MultihomePlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewParent: boolean isLayoutRequested()>:<public abstract>:<android.view.ViewParent>
<android.service.wallpaper.WallpaperService.Engine: void onVisibilityChanged(boolean)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ImageView:android.view.View>
<android.view.View: java.lang.CharSequence getContentDescription()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.renderscript.RenderScriptGL: void resume()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.view.ViewGroup: boolean fitSystemWindows(android.graphics.Rect)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.view.animation.Animation: void start()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<org.apache.http.auth.AuthScope: void <init>(java.lang.String,int)>:<public>:<org.apache.http.auth.AuthScope>
<android.view.MotionEvent: void offsetLocation(float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.client.protocol.RequestAddCookies:org.apache.http.HttpRequestInterceptor>
<org.apache.http.cookie.Cookie: java.lang.String getPath()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.app.NativeActivity: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.view.MotionEvent: long getDownTime()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.View: void setActivated(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.Touch: void <init>()>:<>:<android.text.method.Touch>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>:<public static>:<android.text.format.DateUtils>
<android.animation.PropertyValuesHolder: void setFloatValues(float[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.text.DynamicLayout: int getEllipsisStart(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.GeolocationPermissions>
<android.content.pm.PermissionGroupInfo: void <clinit>()>:<static>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.hardware.Camera.Parameters: java.lang.String get(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.shapes.Shape: float getHeight()>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.PendingIntent: void <clinit>()>:<static>:<android.app.PendingIntent:android.os.Parcelable>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.accounts.OperationCanceledException: void <init>(java.lang.String)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Typeface: boolean isItalic()>:<public final>:<android.graphics.Typeface>
<android.telephony.gsm.SmsMessage.MessageClass: android.telephony.gsm.SmsMessage.MessageClass[] values()>:<public static>:<android.telephony.gsm.SmsMessage.MessageClass:java.lang.Enum>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.style.DrawableMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<org.apache.http.cookie.Cookie: int[] getPorts()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.Picture: void <init>()>:<public>:<android.graphics.Picture>
<android.view.WindowManager.LayoutParams: java.lang.String toString()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.text.method.MultiTapKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.widget.LinearLayout: int getBaseline()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getCurrentHintTextColor()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.usb.UsbEndpoint: void <init>()>:<>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.animation.ValueAnimator: void setRepeatCount(int)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.ListView: boolean isOpaque()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.util.SparseArray: void removeAt(int)>:<public>:<android.util.SparseArray>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean,boolean)>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.view.Window: boolean hasSoftInputMode()>:<protected final>:<android.view.Window>
<android.graphics.Color: int parseColor(java.lang.String)>:<public static>:<android.graphics.Color>
<android.widget.SlidingDrawer: void onMeasure(int,int)>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getLocalPort()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<org.apache.http.impl.cookie.RFC2109DomainHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2109DomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.text.style.AbsoluteSizeSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>:<public abstract>:<android.text.TextWatcher:android.text.NoCopySpan>
<android.widget.TabHost: int getCurrentTab()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.HandlerThread: android.os.Looper getLooper()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<junit.framework.TestCase: junit.framework.TestResult createResult()>:<protected>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.widget.StackView: void onMeasure(int,int)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceScreen: void bind(android.widget.ListView)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<org.apache.http.impl.client.AbstractHttpClient: void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<org.apache.http.client.methods.HttpUriRequest: boolean isAborted()>:<public abstract>:<org.apache.http.client.methods.HttpUriRequest:org.apache.http.HttpRequest>
<android.database.MatrixCursor: boolean isNull(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.client.params.HttpClientParams>
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.CursorLoader: void setSortOrder(java.lang.String)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.test.mock.MockCursor: android.os.Bundle getExtras()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>:<public static>:<android.media.ThumbnailUtils>
<android.net.sip.SipManager: void register(android.net.sip.SipProfile,int,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.graphics.Paint: int getFlags()>:<public native>:<android.graphics.Paint>
<android.net.LocalSocket: void close()>:<public>:<android.net.LocalSocket>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.renderscript.ProgramVertex.Builder: android.renderscript.ProgramVertex create()>:<public>:<android.renderscript.ProgramVertex.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.widget.AbsListView: void setSelector(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.client.RedirectHandler: boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.RedirectHandler>
<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<org.json.JSONObject: double getDouble(java.lang.String)>:<public>:<org.json.JSONObject>
<android.graphics.Canvas.EdgeType: void <init>(java.lang.String,int)>:<private>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.app.WallpaperManager: void <init>()>:<>:<android.app.WallpaperManager>
<android.text.util.Rfc822Token: java.lang.String quoteNameIfNecessary(java.lang.String)>:<public static>:<android.text.util.Rfc822Token>
<android.opengl.GLES20: void glStencilMask(int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.conn.MultihomePlainSocketFactory: boolean isSecure(java.net.Socket)>:<public final>:<org.apache.http.conn.MultihomePlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyB(int,byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction.Builder setTextureMatrixEnable(boolean)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>:<public static>:<android.net.wifi.WifiManager>
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.app.AlertDialog: void setView(android.view.View)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.view.KeyCharacterMap: char getNumber(int)>:<public>:<android.view.KeyCharacterMap>
<org.apache.http.conn.ManagedClientConnection: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.media.AudioManager.OnAudioFocusChangeListener: void onAudioFocusChange(int)>:<public abstract>:<android.media.AudioManager.OnAudioFocusChangeListener>
<android.location.GpsSatellite: boolean hasEphemeris()>:<public>:<android.location.GpsSatellite>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeX()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: boolean isFinishing()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.renderscript.Program.BaseProgramBuilder: void <init>(android.renderscript.RenderScript)>:<protected>:<android.renderscript.Program.BaseProgramBuilder>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>:<public>:<android.app.ActivityManager>
<android.content.AsyncQueryHandler.WorkerArgs: void <init>()>:<protected>:<android.content.AsyncQueryHandler.WorkerArgs>
<android.widget.OverScroller: int getStartY()>:<public final>:<android.widget.OverScroller>
<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.content.res.AssetManager.AssetInputStream: int read()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.text.format.Formatter: java.lang.String formatIpAddress(int)>:<public static>:<android.text.format.Formatter>
<android.view.Surface: void <init>()>:<>:<android.view.Surface:android.os.Parcelable>
<android.preference.Preference: void setDefaultValue(java.lang.Object)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.speech.RecognitionService.Callback: void results(android.os.Bundle)>:<public>:<android.speech.RecognitionService.Callback>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint.FontMetrics)>:<public native>:<android.graphics.Paint>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>:<public>:<android.app.Instrumentation>
<android.util.JsonWriter: android.util.JsonWriter endObject()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.provider.Contacts.Photos: void <init>()>:<>:<android.provider.Contacts.Photos:android.provider.BaseColumns,android.provider.Contacts.PhotosColumns>
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader.TileMode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.provider.ContactsContract.RawContacts: void <clinit>()>:<static>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.content.res.AssetManager: void finalize()>:<protected>:<android.content.res.AssetManager>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType valueOf(java.lang.String)>:<public static>:<android.renderscript.Program.TextureType:java.lang.Enum>
<android.webkit.CacheManager.CacheResult: java.lang.String getContentDisposition()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.graphics.Paint.Cap: void <clinit>()>:<static>:<android.graphics.Paint.Cap:java.lang.Enum>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.impl.conn.AbstractPoolEntry)>:<protected>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>:<public abstract>:<android.content.Context>
<android.text.style.TypefaceSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine)>:<public>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.os.Debug: void waitForDebugger()>:<public static>:<android.os.Debug>
<android.database.CursorWrapper: boolean isBeforeFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.apache.http.HttpMessage: void addHeader(org.apache.http.Header)>:<public abstract>:<org.apache.http.HttpMessage>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.nfc.NdefMessage: void <init>(byte[])>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.gesture.GestureStore: void save(java.io.OutputStream)>:<public>:<android.gesture.GestureStore>
<android.view.View: android.view.View findViewWithTag(java.lang.Object)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.SearchableInfo: int getVoiceLanguageId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.RectF: void offset(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.Handler: void handleMessage(android.os.Message)>:<public>:<android.os.Handler>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.message.BasicHttpEntityEnclosingRequest:org.apache.http.message.BasicHttpRequest,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.view.ScaleGestureDetector: float getPreviousSpanX()>:<public>:<android.view.ScaleGestureDetector>
<org.apache.http.util.VersionInfo: java.lang.String getModule()>:<public final>:<org.apache.http.util.VersionInfo>
<android.os.ParcelUuid: java.lang.String toString()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>:<public>:<android.content.res.Resources>
<org.apache.http.impl.cookie.BrowserCompatSpec: org.apache.http.Header getVersionHeader()>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.graphics.Region: void translate(int,int,android.graphics.Region)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.app.Fragment: void registerForContextMenu(android.view.View)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.os.Message: java.lang.Runnable getCallback()>:<public>:<android.os.Message:android.os.Parcelable>
<org.apache.http.util.CharArrayBuffer: void append(char[],int,int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.os.Messenger: boolean equals(java.lang.Object)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.View: float getRotationY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.provider.Settings.Secure: boolean isLocationProviderEnabled(android.content.ContentResolver,java.lang.String)>:<public static final>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.view.View: void postInvalidate(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabWidget: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.speech.RecognizerResultsIntent: void <init>()>:<>:<android.speech.RecognizerResultsIntent>
<android.content.res.AssetManager.AssetInputStream: int getAssetInt()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.content.BroadcastReceiver: void <init>()>:<public>:<android.content.BroadcastReceiver>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.QwertyKeyListener: int getInputType()>:<public>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.apache.http.conn.ssl.X509HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<android.webkit.WebView: android.graphics.Picture capturePicture()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.drawable.TransitionDrawable: void startTransition(int)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: void setSubpixelText(boolean)>:<public native>:<android.graphics.Paint>
<org.apache.http.protocol.BasicHttpProcessor: void <init>()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.test.InstrumentationTestCase: void sendKeys(java.lang.String)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.util.TimeUtils: void <init>()>:<>:<android.util.TimeUtils>
<org.apache.http.impl.cookie.BrowserCompatSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>:<public final transient>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>:<public static>:<android.text.TextUtils>
<dalvik.system.DexFile: dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int)>:<public static>:<dalvik.system.DexFile>
<android.webkit.WebView.HitTestResult: java.lang.String getExtra()>:<public>:<android.webkit.WebView.HitTestResult>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType valueOf(java.lang.String)>:<public static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.os.Looper: void setMessageLogging(android.util.Printer)>:<public>:<android.os.Looper>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.view.Window: void setSoftInputMode(int)>:<public>:<android.view.Window>
<android.app.NativeActivity: void onPause()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.Activity: void setTitle(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.os.Debug: void resetGlobalAllocCount()>:<public static>:<android.os.Debug>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.conn.ProxySelectorRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<android.test.ActivityTestCase: void setActivity(android.app.Activity)>:<protected>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewGroup: boolean isMotionEventSplittingEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>:<public>:<android.webkit.CookieManager>
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultProxyAuthenticationHandler:org.apache.http.impl.client.AbstractAuthenticationHandler>
<android.widget.Chronometer: void setFormat(java.lang.String)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>:<public>:<android.graphics.Canvas>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: void setScrollbarFadingEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipManager: void unregister(android.net.sip.SipProfile,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.bluetooth.BluetoothDevice: int hashCode()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.test.IsolatedContext: void unregisterReceiver(android.content.BroadcastReceiver)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.os.Message: android.os.Message obtain(android.os.Message)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>:<public abstract>:<android.view.MenuItem>
<android.app.Dialog: void openContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.KeyguardManager.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>:<public abstract>:<android.app.KeyguardManager.OnKeyguardExitResult>
<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.net.wifi.WifiInfo: int getIpAddress()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.content.res.Configuration: void <init>(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.client.CookieStore: boolean clearExpired(java.util.Date)>:<public abstract>:<org.apache.http.client.CookieStore>
<org.apache.http.conn.ManagedClientConnection: void setIdleDuration(long,java.util.concurrent.TimeUnit)>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.text.format.Time: long toMillis(boolean)>:<public native>:<android.text.format.Time>
<android.animation.ObjectAnimator: java.lang.String getPropertyName()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.content.IntentFilter: void addDataType(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.media.audiofx.Visualizer: int setCaptureSize(int)>:<public>:<android.media.audiofx.Visualizer>
<android.hardware.usb.UsbManager: void <init>()>:<>:<android.hardware.usb.UsbManager>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.DropBoxManager.Entry: int describeContents()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>:<public>:<org.apache.http.conn.ConnectionPoolTimeoutException:org.apache.http.conn.ConnectTimeoutException,java.io.InterruptedIOException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.test.ProviderTestCase: android.content.ContentResolver newResolverWithContentProviderFromSql(android.content.Context,java.lang.Class,java.lang.String,java.lang.String,int,java.lang.String)>:<public static>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.message.BasicLineFormatter: void <clinit>()>:<static>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.widget.AbsSpinner: void setSelection(int,boolean)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: boolean isDrawingCacheEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<org.apache.http.HttpResponse: void setStatusCode(int)>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.renderscript.ProgramStore.BlendSrcFunc: void <init>(java.lang.String,int)>:<private>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<org.apache.http.conn.routing.RouteTracker: void tunnelTarget(boolean)>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.widget.AbsListView: void setStackFromBottom(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.nfc.NdefRecord: byte[] toByteArray()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.widget.ExpandableListAdapter: boolean isChildSelectable(int,int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.widget.SlidingDrawer: boolean isMoving()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.ListPopupWindow: int getInputMethodMode()>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.Header: java.lang.String getName()>:<public abstract>:<org.apache.http.Header>
<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.nfc.tech.IsoDep: void setTimeout(int)>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.text.style.IconMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.ViewConfiguration: long getZoomControlsTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.os.Debug: long threadCpuTimeNanos()>:<public static>:<android.os.Debug>
<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,boolean)>:<public>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.widget.PopupWindow: boolean isClippingEnabled()>:<public>:<android.widget.PopupWindow>
<android.widget.ScrollView: void draw(android.graphics.Canvas)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.backup.BackupManager: void dataChanged(java.lang.String)>:<public static>:<android.app.backup.BackupManager>
<android.webkit.URLUtil: boolean isAboutUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<org.apache.http.conn.routing.RouteInfo: java.net.InetAddress getLocalAddress()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.mock.MockContentProvider: boolean onCreate()>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.WindowManager.LayoutParams: void <init>(int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void init(java.io.OutputStream,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>:<public>:<android.webkit.WebChromeClient>
<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>:<protected>:<android.util.LruCache>
<android.text.style.DynamicDrawableSpan: void <init>(int)>:<protected>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.opengl.GLES20: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES20>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.test.MoreAsserts: void assertNotMatchesRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.database.sqlite.SQLiteQuery: void close()>:<public>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.widget.SlidingDrawer.OnDrawerCloseListener: void onDrawerClosed()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerCloseListener>
<android.location.Address: java.lang.String getSubAdminArea()>:<public>:<android.location.Address:android.os.Parcelable>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>:<public static>:<android.media.MediaPlayer>
<android.graphics.Paint: boolean isFakeBoldText()>:<public final>:<android.graphics.Paint>
<android.renderscript.Element.DataKind: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.media.MediaMetadataRetriever: void <init>()>:<public>:<android.media.MediaMetadataRetriever>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: android.content.pm.PackageManager getPackageManager()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.client.AuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.AuthenticationHandler>
<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>:<public>:<android.webkit.WebChromeClient>
<android.location.LocationProvider: boolean supportsBearing()>:<public abstract>:<android.location.LocationProvider>
<android.database.ContentObserver: boolean deliverSelfNotifications()>:<public>:<android.database.ContentObserver>
<android.widget.AbsoluteLayout: void onMeasure(int,int)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.widget.NumberPicker: int getValue()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.Menu: android.view.SubMenu addSubMenu(java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType[] values()>:<public static>:<android.widget.TextView.BufferType:java.lang.Enum>
<android.content.BroadcastReceiver.PendingResult: void setResult(int,java.lang.String,android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.graphics.Point: void offset(int,int)>:<public final>:<android.graphics.Point>
<android.test.MoreAsserts: void assertNotContainsRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header)>:<public abstract>:<org.apache.http.message.LineFormatter>
<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>:<public abstract>:<org.apache.http.Header>
<android.net.Uri.Builder: android.net.Uri.Builder authority(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.RadioGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>:<protected final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.animation.Transformation: float getAlpha()>:<public>:<android.view.animation.Transformation>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.test.mock.MockContext: android.content.pm.ApplicationInfo getApplicationInfo()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.SubMenu: android.view.SubMenu setIcon(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.preference.Preference: boolean callChangeListener(java.lang.Object)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.Intent: void <init>(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL createRenderScriptGL(android.renderscript.RenderScriptGL.SurfaceConfig)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.Menu: android.view.MenuItem add(int)>:<public abstract>:<android.view.Menu>
<org.apache.http.protocol.ResponseDate: void <init>()>:<public>:<org.apache.http.protocol.ResponseDate:org.apache.http.HttpResponseInterceptor>
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.gesture.Gesture: int describeContents()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.location.Address: java.lang.String getPhone()>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.ViewParent: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public abstract>:<android.view.ViewParent>
<junit.framework.Assert: void assertEquals(short,short)>:<public static>:<junit.framework.Assert>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.ObbScanner: void <init>()>:<>:<android.content.res.ObbScanner>
<android.os.Debug: int getGlobalExternalAllocCount()>:<public static>:<android.os.Debug>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo.TunnelType getTunnelType()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.telephony.NeighboringCellInfo: void <clinit>()>:<static>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.os.Messenger: int describeContents()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.test.AndroidTestCase: void <init>()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(int)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.bluetooth.BluetoothDevice: void <clinit>()>:<static>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<org.apache.http.HttpMessage: org.apache.http.HeaderIterator headerIterator(java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)>:<public>:<android.mtp.MtpDevice>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.renderscript.FileA3D.EntryType: void <clinit>()>:<static>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<org.apache.commons.logging.Log: boolean isInfoEnabled()>:<public abstract>:<org.apache.commons.logging.Log>
<android.database.Cursor: int getCount()>:<public abstract>:<android.database.Cursor>
<org.apache.http.impl.conn.Wire: boolean enabled()>:<public>:<org.apache.http.impl.conn.Wire>
<android.test.ActivityUnitTestCase: android.content.Intent getStartedActivityIntent()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.impl.auth.BasicScheme: boolean isComplete()>:<public>:<org.apache.http.impl.auth.BasicScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive valueOf(java.lang.String)>:<public static>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<android.preference.CheckBoxPreference: boolean shouldDisableDependents()>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.widget.CalendarView: long getMinDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.IntentSender.SendIntentException: void <init>()>:<public>:<android.content.IntentSender.SendIntentException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.text.util.Rfc822Token: java.lang.String toString()>:<public>:<android.text.util.Rfc822Token>
<android.media.audiofx.Equalizer: short[] getBandLevelRange()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.widget.ZoomControls: void show()>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.AudioEffect.Descriptor: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.media.audiofx.AudioEffect.Descriptor>
<org.apache.http.message.ParserCursor: boolean atEnd()>:<public>:<org.apache.http.message.ParserCursor>
<android.text.method.MetaKeyKeyListener: long clearMetaKeyState(long,int)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.os.ParcelFileDescriptor: void finalize()>:<protected>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.widget.TabHost: void clearAllTabs()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.ParcelFileDescriptor: java.lang.String toString()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.impl.cookie.NetscapeDraftSpecFactory: void <init>()>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpecFactory:org.apache.http.cookie.CookieSpecFactory>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>:<public final>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.DatabaseUtils.InsertHelper: long insert(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isEnabled()>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)>:<public static>:<android.text.TextUtils>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.DialerFilter: java.lang.CharSequence getLetters()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.text.method.CharacterPickerDialog: void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean)>:<public>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.provider.ContactsContract.CommonDataKinds.Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Relation:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.bluetooth.BluetoothAdapter: int getState()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.telephony.CellLocation: void <init>()>:<public>:<android.telephony.CellLocation>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int[])>:<public static transient>:<android.view.ViewDebug>
<android.widget.TextView: android.text.TextUtils.TruncateAt getEllipsize()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.CursorWindow: void clear()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.Phone: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.database.AbstractCursor: boolean onMove(int,int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.TouchUtils: void <init>()>:<public>:<android.test.TouchUtils>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech.OnUtteranceCompletedListener)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.TextView: java.lang.String getPrivateImeOptions()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void setSocketTimeout(int)>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>:<public static>:<android.content.ContentResolver>
<org.apache.http.impl.SocketHttpClientConnection: java.net.Socket getSocket()>:<protected>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.widget.ListPopupWindow: void setAnchorView(android.view.View)>:<public>:<android.widget.ListPopupWindow>
<android.database.CursorJoiner: void <init>(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<org.json.JSONArray: void <init>(org.json.JSONTokener)>:<public>:<org.json.JSONArray>
<org.apache.http.HttpRequestInterceptor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.HttpRequestInterceptor>
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.webkit.WebView: void destroy()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.ConnectivityManager: void <init>()>:<>:<android.net.ConnectivityManager>
<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<org.apache.http.cookie.CookieIdentityComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<org.apache.http.cookie.CookieIdentityComparator:java.io.Serializable,java.util.Comparator>
<android.hardware.Camera.Parameters: void setJpegThumbnailQuality(int)>:<public>:<android.hardware.Camera.Parameters>
<android.content.SyncAdapterType: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.content.CursorLoader: void setUri(android.net.Uri)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<org.apache.http.message.BasicTokenIterator: java.lang.Object next()>:<public final>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.app.backup.BackupManager: void <init>(android.content.Context)>:<public>:<android.app.backup.BackupManager>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>:<public>:<android.graphics.Canvas>
<android.content.Intent.FilterComparison: int hashCode()>:<public>:<android.content.Intent.FilterComparison>
<org.apache.http.params.BasicHttpParams: void copyParams(org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.widget.Gallery: void onShowPress(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.PixelFormat: void getPixelFormatInfo(int,android.graphics.PixelFormat)>:<public static native>:<android.graphics.PixelFormat>
<android.app.ListFragment: void setListShown(boolean)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.text.method.ScrollingMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.hardware.usb.UsbEndpoint: void <clinit>()>:<static>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.text.Layout.Directions: void <init>()>:<>:<android.text.Layout.Directions>
<android.graphics.Color: int blue(int)>:<public static>:<android.graphics.Color>
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.graphics.Path: void addPath(android.graphics.Path,float,float)>:<public>:<android.graphics.Path>
<org.apache.http.impl.cookie.BasicCommentHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.BasicCommentHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.widget.AdapterViewFlipper: void showNext()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.shapes.PathShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>:<public>:<android.content.res.Resources>
<org.apache.http.HttpHost: java.lang.String getHostName()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.provider.SyncStateContract.Helpers: android.net.Uri insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.view.View: float getTranslationY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.SpannableStringBuilder: android.text.Editable replace(int,int,java.lang.CharSequence)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.mtp.MtpDevice: int getDeviceId()>:<public>:<android.mtp.MtpDevice>
<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.view.Window: void <init>(android.content.Context)>:<public>:<android.view.Window>
<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>:<public abstract>:<android.view.MenuItem>
<org.apache.http.impl.auth.DigestSchemeFactory: void <init>()>:<public>:<org.apache.http.impl.auth.DigestSchemeFactory:org.apache.http.auth.AuthSchemeFactory>
<android.os.ParcelUuid: void <init>(java.util.UUID)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<org.apache.http.protocol.RequestTargetHost: void <init>()>:<public>:<org.apache.http.protocol.RequestTargetHost:org.apache.http.HttpRequestInterceptor>
<android.speech.RecognitionService: void onCancel(android.speech.RecognitionService.Callback)>:<protected abstract>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>:<public>:<android.media.AudioTrack>
<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public abstract>:<android.database.Cursor>
<android.app.Activity: int getRequestedOrientation()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float,boolean)>:<public>:<android.widget.OverScroller>
<android.widget.TextView: void clearComposingText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AdapterView: void removeViewAt(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.renderscript.Font.Style: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Font.Style:java.lang.Enum>
<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.JetPlayer: boolean setMuteFlags(int,boolean)>:<public>:<android.media.JetPlayer>
<android.test.mock.MockResources: java.lang.String getString(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.AbsSavedState: void <clinit>()>:<static>:<android.view.AbsSavedState:android.os.Parcelable>
<org.apache.http.client.NonRepeatableRequestException: void <init>(java.lang.String)>:<public>:<org.apache.http.client.NonRepeatableRequestException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>:<public abstract>:<org.apache.http.StatusLine>
<android.view.View: void onDraw(android.graphics.Canvas)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: boolean getDefaultEditable()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void displayCompletions(android.view.inputmethod.CompletionInfo[])>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.telephony.SignalStrength: int hashCode()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.speech.RecognitionService.Callback: void rmsChanged(float)>:<public>:<android.speech.RecognitionService.Callback>
<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>:<public abstract>:<org.apache.commons.logging.Log>
<org.apache.http.impl.client.DefaultRedirectHandler: boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultRedirectHandler:org.apache.http.client.RedirectHandler>
<android.hardware.Camera: void finalize()>:<protected>:<android.hardware.Camera>
<android.text.style.StrikethroughSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.test.mock.MockPackageManager: boolean hasSystemFeature(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.hardware.Camera.Parameters: void setPictureSize(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.view.Window.Callback: void onWindowFocusChanged(boolean)>:<public abstract>:<android.view.Window.Callback>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.content.Intent: java.lang.String toURI()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: void jumpDrawablesToCurrentState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>:<public>:<android.media.MediaPlayer>
<android.os.Process: long getElapsedCpuTime()>:<public static final native>:<android.os.Process>
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.provider.Browser.BookmarkColumns: void <init>()>:<public>:<android.provider.Browser.BookmarkColumns:android.provider.BaseColumns>
<android.view.KeyEvent.Callback: boolean onKeyUp(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.provider.Settings.System: void <clinit>()>:<static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.Scroller: int getFinalY()>:<public final>:<android.widget.Scroller>
<junit.runner.BaseTestRunner: void setPreference(java.lang.String,java.lang.String)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.R.string: void <init>()>:<public>:<android.R.string>
<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.net.Uri: java.lang.String getScheme()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.widget.TextView: void drawableStateChanged()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.impl.auth.RFC2617Scheme: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>:<protected>:<org.apache.http.impl.auth.RFC2617Scheme:org.apache.http.impl.auth.AuthSchemeBase>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponseFactory createHttpResponseFactory()>:<protected>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.content.Loader.ForceLoadContentObserver: boolean deliverSelfNotifications()>:<public>:<android.content.Loader.ForceLoadContentObserver:android.database.ContentObserver>
<android.net.wifi.WifiManager: int getWifiState()>:<public>:<android.net.wifi.WifiManager>
<android.graphics.AvoidXfermode.Mode: void <clinit>()>:<static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLES10: void glFogfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>:<public static>:<android.webkit.CacheManager>
<org.xmlpull.v1.XmlSerializer: void endDocument()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.conn.DefaultClientConnectionOperator:org.apache.http.conn.ClientConnectionOperator>
<android.app.PendingIntent.OnFinished: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.app.PendingIntent.OnFinished>
<android.text.BoringLayout: android.text.Layout.Directions getLineDirections(int)>:<public final>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.view.inputmethod.CorrectionInfo: int describeContents()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.app.backup.BackupDataInputStream: void <init>()>:<>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.media.JetPlayer.OnJetEventListener: void onJetPauseUpdate(android.media.JetPlayer,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>:<public>:<android.drm.DrmManagerClient>
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.util.AndroidRuntimeException: void <init>()>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.Context: java.io.File getDatabasePath(java.lang.String)>:<public abstract>:<android.content.Context>
<android.telephony.SmsMessage: android.telephony.SmsMessage.MessageClass getMessageClass()>:<public>:<android.telephony.SmsMessage>
<org.apache.http.ProtocolVersion: org.apache.http.ProtocolVersion forVersion(int,int)>:<public>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<org.apache.http.impl.client.BasicCookieStore: void addCookie(org.apache.http.cookie.Cookie)>:<public synchronized>:<org.apache.http.impl.client.BasicCookieStore:org.apache.http.client.CookieStore>
<android.webkit.CookieManager: void removeAllCookie()>:<public>:<android.webkit.CookieManager>
<android.opengl.GLES20: boolean glIsBuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: int getScrollY()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Program: void bindTexture(android.renderscript.Allocation,int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<org.apache.http.conn.BasicEofSensorWatcher: boolean eofDetected(java.io.InputStream)>:<public>:<org.apache.http.conn.BasicEofSensorWatcher:org.apache.http.conn.EofSensorWatcher>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<public>:<android.drm.DrmInfoEvent:android.drm.DrmEvent>
<android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.database.MergeCursor: int getInt(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.view.accessibility.AccessibilityEvent: int getRemovedCount()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.provider.Contacts.Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>:<public static>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<android.view.KeyEvent: int getKeyCode()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RelativeLayout: void setGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<org.apache.http.message.BasicHeaderElement: int getParameterCount()>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.widget.OverScroller: int getStartX()>:<public final>:<android.widget.OverScroller>
<org.apache.http.params.AbstractHttpParams: void <init>()>:<protected>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.app.ActionBar.LayoutParams: void <init>(int,int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.renderscript.ProgramVertex: void <init>()>:<>:<android.renderscript.ProgramVertex:android.renderscript.Program,android.renderscript.BaseObj>
<android.test.mock.MockContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.RegionIterator: void finalize()>:<protected>:<android.graphics.RegionIterator>
<android.hardware.Camera.Size: void <init>(android.hardware.Camera,int,int)>:<public>:<android.hardware.Camera.Size>
<android.provider.Contacts: void <clinit>()>:<static>:<android.provider.Contacts>
<android.widget.SlidingDrawer: android.view.View getContent()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.media.ExifInterface: boolean hasThumbnail()>:<public>:<android.media.ExifInterface>
<android.preference.RingtonePreference: void setShowDefault(boolean)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES20>
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.provider.ContactsContract.CommonDataKinds.Website: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Website:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<org.apache.http.auth.NTCredentials: boolean equals(java.lang.Object)>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.app.Activity: void onContentChanged()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.audiofx.PresetReverb.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.view.accessibility.AccessibilityEvent: android.os.Parcelable getParcelableData()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.graphics.Paint: android.graphics.Paint.Join getStrokeJoin()>:<public>:<android.graphics.Paint>
<android.opengl.GLSurfaceView.EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<org.apache.http.impl.SocketHttpClientConnection: int getRemotePort()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.widget.Adapter: java.lang.Object getItem(int)>:<public abstract>:<android.widget.Adapter>
<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.rtp.RtpStream: int getRemotePort()>:<public>:<android.net.rtp.RtpStream>
<android.widget.AutoCompleteTextView: int getThreshold()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AbsListView: int getListPaddingBottom()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>:<public static>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<junit.framework.TestResult: void endTest(junit.framework.Test)>:<public>:<junit.framework.TestResult>
<android.text.method.BaseMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.ImageView: void setImageURI(android.net.Uri)>:<public>:<android.widget.ImageView:android.view.View>
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>:<public>:<android.sax.RootElement:android.sax.Element>
<android.widget.ListView: int getFooterViewsCount()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Data:android.provider.ContactsContract.DataColumnsWithJoins>
<android.os.WorkSource: void clear()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)>:<public>:<org.apache.http.protocol.BasicHttpContext:org.apache.http.protocol.HttpContext>
<org.apache.http.RequestLine: java.lang.String getMethod()>:<public abstract>:<org.apache.http.RequestLine>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.view.Window: void setGravity(int)>:<public>:<android.view.Window>
<android.preference.DialogPreference: void onClick(android.content.DialogInterface,int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.preference.Preference: boolean isEnabled()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.AbsSpinner: int pointToPosition(int,int)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>:<public native>:<android.media.MediaMetadataRetriever>
<android.widget.AbsListView.OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>:<public abstract>:<android.widget.AbsListView.OnScrollListener>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.renderscript.Matrix2f: float[] getArray()>:<public>:<android.renderscript.Matrix2f>
<org.apache.http.conn.params.ConnPerRoute: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>:<public abstract>:<org.apache.http.conn.params.ConnPerRoute>
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)>:<public>:<android.media.MediaMetadataRetriever>
<org.apache.http.message.AbstractHttpMessage: void addHeader(org.apache.http.Header)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.HttpRoute toRoute()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.database.CursorWrapper: int getPosition()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.BaseExpandableListAdapter: void notifyDataSetChanged()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<org.apache.http.conn.routing.HttpRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.conn.routing.HttpRoutePlanner>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>:<public>:<android.preference.PreferenceManager>
<org.apache.http.util.CharArrayBuffer: int indexOf(int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.widget.PopupWindow: void <init>(int,int)>:<public>:<android.widget.PopupWindow>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceDisconnected(int)>:<public abstract>:<android.bluetooth.BluetoothProfile.ServiceListener>
<org.xmlpull.v1.sax2.Driver: java.lang.String getSystemId()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.LocalActivityManager: void dispatchStop()>:<public>:<android.app.LocalActivityManager>
<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>:<public>:<android.content.res.Resources>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>:<public abstract>:<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.app.FragmentBreadCrumbs: void setActivity(android.app.Activity)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.text.TextUtils.SimpleStringSplitter: void setString(java.lang.String)>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.widget.Filter: java.lang.CharSequence convertResultToString(java.lang.Object)>:<public>:<android.widget.Filter>
<android.content.pm.ServiceInfo: void <init>()>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>:<public final>:<android.view.AbsSavedState:android.os.Parcelable>
<android.view.animation.Animation: void setFillEnabled(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.hardware.usb.UsbEndpoint: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.graphics.Canvas.VertexMode: void <clinit>()>:<static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)>:<public>:<android.net.sip.SipManager>
<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>:<public>:<android.speech.tts.TextToSpeech>
<org.apache.http.impl.client.RequestWrapper: void setProtocolVersion(org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.net.wifi.WifiManager.WifiLock: java.lang.String toString()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.nfc.tech.NfcA: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.hardware.Sensor: int getType()>:<public>:<android.hardware.Sensor>
<android.text.format.Time: boolean parse3339(java.lang.String)>:<public>:<android.text.format.Time>
<android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ProgressBar: void incrementProgressBy(int)>:<public final synchronized>:<android.widget.ProgressBar:android.view.View>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.Window.Callback: boolean onCreatePanelMenu(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String)>:<public static>:<junit.framework.Assert>
<android.test.mock.MockContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.lang.String)>:<public static>:<android.gesture.GestureLibraries>
<android.widget.TableRow: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])>:<public static>:<org.apache.http.util.EncodingUtils>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>:<public static>:<android.database.DatabaseUtils>
<android.media.AudioManager: void loadSoundEffects()>:<public>:<android.media.AudioManager>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.usb.UsbEndpoint: java.lang.String toString()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<org.apache.http.message.BufferedHeader: java.lang.String getName()>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<org.apache.http.conn.EofSensorInputStream: int read(byte[])>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.webkit.WebView: void reload()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>:<public>:<android.content.ContentProviderClient>
<android.webkit.WebSettings: int getDefaultFontSize()>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public final>:<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<org.apache.http.impl.SocketHttpServerConnection: void shutdown()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Matrix.ScaleToFit: void <clinit>()>:<static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.widget.AdapterViewAnimator: int getBaseline()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ArrayAdapter: int getCount()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.http.conn.routing.RouteTracker: java.lang.Object clone()>:<public>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.os.Handler: void removeMessages(int)>:<public final>:<android.os.Handler>
<android.test.mock.MockContext: void clearWallpaper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.TabWidget: void setLeftStripDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.widget.ListView: void setSelectionFromTop(int,int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ZoomButtonsController: android.view.View getZoomControls()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.text.style.UnderlineSpan: int describeContents()>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.MotionEvent: void setAction(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebView: void onResume()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.test.SingleLaunchActivityTestCase: void testActivityTestCaseSetUpProperly()>:<public>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<junit.framework.TestResult: java.util.Enumeration errors()>:<public synchronized>:<junit.framework.TestResult>
<android.opengl.GLES10: void glClearDepthx(int)>:<public static native>:<android.opengl.GLES10>
<android.app.Dialog: void setContentView(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.animation.ObjectAnimator: java.lang.Object getTarget()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.net.wifi.WifiConfiguration.KeyMgmt: void <init>()>:<>:<android.net.wifi.WifiConfiguration.KeyMgmt>
<android.preference.MultiSelectListPreference: void setEntryValues(int)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.ScaleGestureDetector: float getScaleFactor()>:<public>:<android.view.ScaleGestureDetector>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.client.methods.HttpPost: void <init>()>:<public>:<org.apache.http.client.methods.HttpPost:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.animation.ValueAnimator: void removeAllUpdateListeners()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path,int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<org.apache.http.message.BasicLineParser: boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.widget.TextView: void setInputExtras(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Intent: java.util.Set getCategories()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.inputmethodservice.Keyboard: void setHorizontalGap(int)>:<protected>:<android.inputmethodservice.Keyboard>
<android.test.RenamingDelegatingContext: java.io.File getCacheDir()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(int)>:<public>:<android.app.AlertDialog.Builder>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.TabHost: void setup()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.res.Resources.Theme: void <init>(android.content.res.Resources)>:<>:<android.content.res.Resources.Theme>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] mapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.telephony.PhoneNumberUtils: boolean is12Key(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.RenderScript: void finish()>:<public>:<android.renderscript.RenderScript>
<org.apache.http.cookie.SetCookie2: void setDiscard(boolean)>:<public abstract>:<org.apache.http.cookie.SetCookie2:org.apache.http.cookie.SetCookie>
<android.os.Parcel: int dataAvail()>:<public final native>:<android.os.Parcel>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>:<public>:<org.json.JSONObject>
<android.preference.PreferenceFragment: void onDestroyView()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<org.apache.http.protocol.UriPatternMatcher: boolean matchUriRequestPattern(java.lang.String,java.lang.String)>:<protected>:<org.apache.http.protocol.UriPatternMatcher>
<org.apache.http.impl.conn.tsccm.PoolEntryRequest: void abortRequest()>:<public abstract>:<org.apache.http.impl.conn.tsccm.PoolEntryRequest>
<android.provider.Contacts.Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>:<public static final>:<android.provider.Contacts.Organizations:android.provider.BaseColumns,android.provider.Contacts.OrganizationColumns>
<android.media.JetPlayer: void <init>()>:<>:<android.media.JetPlayer>
<android.hardware.Sensor: java.lang.String getName()>:<public>:<android.hardware.Sensor>
<android.text.Html: java.lang.String toHtml(android.text.Spanned)>:<public static>:<android.text.Html>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>:<public>:<android.app.WallpaperManager>
<android.provider.Settings.NameValueTable: void <init>()>:<public>:<android.provider.Settings.NameValueTable:android.provider.BaseColumns>
<android.net.sip.SipSession.Listener: void onRegistrationTimeout(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.hardware.Camera.Parameters: java.lang.String getSceneMode()>:<public>:<android.hardware.Camera.Parameters>
<android.content.IntentFilter: java.lang.String getCategory(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.os.Parcel: void <clinit>()>:<static>:<android.os.Parcel>
<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.Header[] getFooters()>:<public>:<org.apache.http.impl.io.ChunkedInputStream:java.io.InputStream>
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.AbsSavedState:android.os.Parcelable>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setModelview(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.AdapterView: void addView(android.view.View,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.Window: boolean performPanelIdentifierAction(int,int,int)>:<public abstract>:<android.view.Window>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteLeastUsedEntry()>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.view.ViewDebug.ExportedProperty: boolean resolveId()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.gesture.GestureStore: java.util.Set getGestureEntries()>:<public>:<android.gesture.GestureStore>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getItemClickListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.app.Activity: void finish()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>:<public static native>:<android.opengl.Visibility>
<android.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.ListPopupWindow>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.params.HttpProtocolParams: java.lang.String getContentCharset(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.content.res.Resources: void flushLayoutCache()>:<public final>:<android.content.res.Resources>
<org.apache.http.HttpException: void <init>(java.lang.String)>:<public>:<org.apache.http.HttpException:java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<org.apache.http.util.CharArrayBuffer: int capacity()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.widget.TableRow: int getVirtualChildCount()>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>:<public static>:<android.widget.Toast>
<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker.OnValueChangeListener)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.animation.LayoutTransition: void setDuration(long)>:<public>:<android.animation.LayoutTransition>
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.impl.AbstractHttpClientConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.sip.SipRegistrationListener: void onRegistrationFailed(java.lang.String,int,java.lang.String)>:<public abstract>:<android.net.sip.SipRegistrationListener>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.animation.Animation: int getRepeatMode()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.hardware.Camera: android.hardware.Camera open()>:<public static>:<android.hardware.Camera>
<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.PackageItemInfo>
<android.view.inputmethod.InputMethodInfo: int describeContents()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.animation.Animation: long computeDurationHint()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.View: void dispatchSystemUiVisibilityChanged(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebView: void documentHasImages(android.os.Message)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.client.methods.HttpRequestBase: void abort()>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>:<public>:<android.text.style.CharacterStyle>
<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter.FilterListener)>:<public final>:<android.widget.Filter>
<android.webkit.GeolocationPermissions: void getOrigins(android.webkit.ValueCallback)>:<public>:<android.webkit.GeolocationPermissions>
<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.app.Dialog: void onDetachedFromWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setColor(int,int)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue.IdleHandler)>:<public final>:<android.os.MessageQueue>
<android.app.Service: void stopSelf(int)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.test.mock.MockDialogInterface: void cancel()>:<public>:<android.test.mock.MockDialogInterface:android.content.DialogInterface>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReferences(android.content.ContentValues)>:<public>:<android.content.ContentProviderOperation.Builder>
<org.apache.http.message.HeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.HeaderValueParser>
<android.os.Bundle: void clear()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.test.FlakyTest: int tolerance()>:<public abstract>:<android.test.FlakyTest:java.lang.annotation.Annotation>
<org.apache.http.protocol.BasicHttpProcessor: void removeRequestInterceptorByClass(java.lang.Class)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.inputmethodservice.Keyboard.Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>:<public>:<android.inputmethodservice.Keyboard.Key>
<org.apache.http.conn.scheme.PlainSocketFactory: void <init>()>:<public>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.nfc.tech.MifareClassic: void <init>()>:<>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>:<public>:<android.graphics.Canvas>
<android.view.animation.Animation: long getStartOffset()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.os.StrictMode.VmPolicy: void <init>()>:<>:<android.os.StrictMode.VmPolicy>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.CompoundButton: void drawableStateChanged()>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.util.JsonWriter: android.util.JsonWriter value(boolean)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.opengl.GLES10: void glLoadIdentity()>:<public static native>:<android.opengl.GLES10>
<android.view.ActionMode: java.lang.CharSequence getSubtitle()>:<public abstract>:<android.view.ActionMode>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.ScrollView: boolean isSmoothScrollingEnabled()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.method.ArrowKeyMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>:<public>:<android.location.Geocoder>
<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.telephony.SmsMessage.SubmitPdu: void <init>()>:<>:<android.telephony.SmsMessage.SubmitPdu>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>:<public abstract>:<android.content.Context>
<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.widget.AutoCompleteTextView: void clearListSelection()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.res.TypedArray: int getLayoutDimension(int,int)>:<public>:<android.content.res.TypedArray>
<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<android.inputmethodservice.InputMethodService: void onFinishInput()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.view.View: void setScrollBarStyle(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_NONE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<org.json.JSONObject: boolean optBoolean(java.lang.String)>:<public>:<org.json.JSONObject>
<android.os.Bundle: void putDouble(java.lang.String,double)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.location.Address: boolean hasLatitude()>:<public>:<android.location.Address:android.os.Parcelable>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<org.apache.http.impl.entity.EntitySerializer: void <init>(org.apache.http.entity.ContentLengthStrategy)>:<public>:<org.apache.http.impl.entity.EntitySerializer>
<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.PopupWindow: void <init>(android.view.View,int,int)>:<public>:<android.widget.PopupWindow>
<android.content.SearchRecentSuggestionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.view.ViewGroup: int getChildCount()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.os.Looper: android.os.Looper myLooper()>:<public static final>:<android.os.Looper>
<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.text.style.MaskFilterSpan: void <init>(android.graphics.MaskFilter)>:<public>:<android.text.style.MaskFilterSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.renderscript.Type.CubemapFace: void <clinit>()>:<static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.view.ViewTreeObserver: void <init>()>:<>:<android.view.ViewTreeObserver>
<android.text.method.MetaKeyKeyListener: long resetLockedMeta(long)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.widget.HorizontalScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long)>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<org.apache.http.client.methods.HttpOptions: java.lang.String getMethod()>:<public>:<org.apache.http.client.methods.HttpOptions:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.util.Linkify.MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>:<public abstract>:<android.text.util.Linkify.MatchFilter>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getAttribute(java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.net.ConnectivityManager: void setNetworkPreference(int)>:<public>:<android.net.ConnectivityManager>
<android.app.Notification: void <init>(android.os.Parcel)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.content.Loader.ForceLoadContentObserver: void onChange(boolean)>:<public>:<android.content.Loader.ForceLoadContentObserver:android.database.ContentObserver>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>()>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.AbsListView: void onTouchModeChanged(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.DropBoxManager.Entry: int getFlags()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.widget.RatingBar: void onMeasure(int,int)>:<protected synchronized>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>:<public>:<android.graphics.Path>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>:<public static>:<android.text.TextUtils>
<android.app.backup.BackupAgent: void <init>()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Binder: void flushPendingCommands()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<org.apache.http.conn.OperatedClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>:<public abstract>:<org.apache.http.conn.OperatedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<org.apache.http.protocol.UriPatternMatcher: void <init>()>:<public>:<org.apache.http.protocol.UriPatternMatcher>
<org.apache.http.entity.SerializableEntity: void <init>(java.io.Serializable,boolean)>:<public>:<org.apache.http.entity.SerializableEntity:org.apache.http.entity.AbstractHttpEntity>
<android.widget.AdapterView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.net.sip.SipAudioCall: boolean isMuted()>:<public>:<android.net.sip.SipAudioCall>
<android.content.pm.ComponentInfo: int getIconResource()>:<public final>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.widget.ArrayAdapter: void setDropDownViewResource(int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.media.audiofx.Virtualizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Virtualizer,int,int,short)>:<public abstract>:<android.media.audiofx.Virtualizer.OnParameterChangeListener>
<android.mtp.MtpStorageInfo: java.lang.String getDescription()>:<public final>:<android.mtp.MtpStorageInfo>
<android.widget.Gallery: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.drawable.LayerDrawable: int getOpacity()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumHeight()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.widget.ViewSwitcher.ViewFactory: android.view.View makeView()>:<public abstract>:<android.widget.ViewSwitcher.ViewFactory>
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<org.apache.http.impl.conn.SingleClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>:<public>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.WebViewDatabase: boolean hasFormData()>:<public>:<android.webkit.WebViewDatabase>
<org.apache.http.protocol.HttpContext: java.lang.Object removeAttribute(java.lang.String)>:<public abstract>:<org.apache.http.protocol.HttpContext>
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap.Config,boolean)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.view.View: void draw(android.graphics.Canvas)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.framework.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<junit.framework.ComparisonFailure:junit.framework.AssertionFailedError,java.lang.Error,java.lang.Throwable>
<android.telephony.ServiceState: boolean getIsManualSelection()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.widget.AnalogClock: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.animation.AnimatorSet: void start()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteBlobTooBigException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.StatFs: void restat(java.lang.String)>:<public>:<android.os.StatFs>
<android.text.LoginFilter: boolean isAllowed(char)>:<public abstract>:<android.text.LoginFilter:android.text.InputFilter>
<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.app.NativeActivity: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.content.Context: java.lang.ClassLoader getClassLoader()>:<public abstract>:<android.content.Context>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.graphics.ColorMatrix: void <init>(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Shader>
<android.text.method.ReplacementTransformationMethod: char[] getOriginal()>:<protected abstract>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<org.apache.http.auth.AuthState: void <init>()>:<public>:<org.apache.http.auth.AuthState>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<org.xmlpull.v1.XmlPullParserException: int getLineNumber()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.view.MotionEvent.PointerCoords: void clear()>:<public>:<android.view.MotionEvent.PointerCoords>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.test.mock.MockResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>:<public>:<android.graphics.Paint>
<org.apache.http.HttpHost: java.lang.String toHostString()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<org.apache.http.client.params.ClientParamBean: void setRejectRelativeRedirect(boolean)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.text.style.BackgroundColorSpan: int getSpanTypeId()>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>:<public static>:<android.preference.PreferenceManager>
<android.preference.EditTextPreference: android.widget.EditText getEditText()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.webkit.CacheManager: boolean endCacheTransaction()>:<public static>:<android.webkit.CacheManager>
<android.view.DragEvent: float getY()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.util.Log: int i(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.database.CursorJoiner: java.lang.Object next()>:<public volatile>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.hardware.usb.UsbDeviceConnection: void close()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>:<public>:<org.json.JSONObject>
<android.net.sip.SipRegistrationListener: void onRegistrationDone(java.lang.String,long)>:<public abstract>:<android.net.sip.SipRegistrationListener>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isRevoked()>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.preference.CheckBoxPreference: void onClick()>:<protected>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.drm.DrmInfo: void <init>(int,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmInfo>
<org.apache.http.impl.cookie.BasicCommentHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicCommentHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.preference.Preference: android.preference.Preference findPreferenceInHierarchy(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.message.HeaderGroup: org.apache.http.HeaderIterator iterator(java.lang.String)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>:<public abstract>:<android.app.FragmentManager>
<android.graphics.Movie: int height()>:<public native>:<android.graphics.Movie>
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public abstract>:<android.content.Context>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.view.animation.AnimationUtils: void <init>()>:<public>:<android.view.animation.AnimationUtils>
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameter(int)>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.text.style.TabStopSpan.Standard: int getTabStop()>:<public>:<android.text.style.TabStopSpan.Standard:android.text.style.TabStopSpan>
<android.test.AndroidTestCase: void assertActivityRequiresPermission(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.client.HttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.HttpClient>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.speech.tts.TextToSpeech: int playSilence(long,int,java.util.HashMap)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.TextView: java.lang.CharSequence getHint()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.AbsListView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.IntentSender: int describeContents()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestHeader(org.apache.http.HttpRequest)>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.app.AlertDialog: android.widget.ListView getListView()>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.media.MediaPlayer: void pause()>:<public>:<android.media.MediaPlayer>
<android.gesture.Gesture: android.graphics.Path toPath()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace valueOf(java.lang.String)>:<public static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority[] values()>:<public static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int)>:<public abstract>:<android.media.audiofx.Visualizer.OnDataCaptureListener>
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.MotionEvent: float getToolMajor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void close()>:<public>:<android.os.ParcelFileDescriptor.AutoCloseOutputStream:java.io.FileOutputStream,java.io.OutputStream>
<android.content.res.Resources: void finishPreloading()>:<public final>:<android.content.res.Resources>
<android.view.KeyCharacterMap: char getMatch(int,char[],int)>:<public>:<android.view.KeyCharacterMap>
<android.drm.DrmRights: java.lang.String getSubscriptionId()>:<public>:<android.drm.DrmRights>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.MotionEvent: int findPointerIndex(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Activity: void setFinishOnTouchOutside(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.Instrumentation.ActivityResult: int getResultCode()>:<public>:<android.app.Instrumentation.ActivityResult>
<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.app.Service: void <init>()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.HorizontalScrollView: void addView(android.view.View)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingStarted(android.gesture.GestureOverlayView)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturingListener>
<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder.Callback)>:<public abstract>:<android.view.SurfaceHolder>
<org.apache.http.message.BasicLineFormatter: java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter)>:<public static final>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.widget.CheckedTextView: void <init>(android.content.Context)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<junit.framework.TestSuite: int countTestCases()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.widget.TableLayout: android.widget.TableLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.hardware.usb.UsbRequest: boolean cancel()>:<public>:<android.hardware.usb.UsbRequest>
<android.widget.ImageView: void setImageLevel(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.test.ActivityInstrumentationTestCase: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Debug: void dumpHprofData(java.lang.String)>:<public static>:<android.os.Debug>
<org.apache.http.impl.cookie.RFC2965SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.cookie.RFC2965SpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.text.TextUtils.SimpleStringSplitter: void remove()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.widget.ImageView: int getBaseline()>:<public>:<android.widget.ImageView:android.view.View>
<android.view.ViewDebug.HierarchyTraceType: void <init>(java.lang.String,int)>:<private>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.provider.Contacts.People.Extensions: void <init>()>:<>:<android.provider.Contacts.People.Extensions:android.provider.BaseColumns,android.provider.Contacts.ExtensionsColumns>
<org.apache.http.HttpHost: int getPort()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.LayoutAnimationController: boolean isDone()>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.Chronometer: java.lang.String getFormat()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.app.Dialog: android.app.ActionBar getActionBar()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.location.LocationProvider: boolean requiresCell()>:<public abstract>:<android.location.LocationProvider>
<org.apache.http.impl.SocketHttpClientConnection: boolean isOpen()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>:<public static>:<android.os.Messenger:android.os.Parcelable>
<android.widget.ImageView: void setImageResource(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.provider.MediaStore.Images.Thumbnails: void <init>()>:<public>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>:<public final>:<android.hardware.Camera>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.suitebuilder.TestMethod: void <init>(junit.framework.TestCase)>:<public>:<android.test.suitebuilder.TestMethod>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void setState(java.lang.Object)>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.hardware.usb.UsbDevice: int getDeviceSubclass()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.widget.Spinner: boolean performClick()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.location.GpsSatellite: int getPrn()>:<public>:<android.location.GpsSatellite>
<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>:<public static>:<org.apache.http.util.EncodingUtils>
<org.apache.http.impl.auth.AuthSchemeBase: boolean isProxy()>:<public>:<org.apache.http.impl.auth.AuthSchemeBase:org.apache.http.auth.AuthScheme>
<android.os.Parcel: void enforceInterface(java.lang.String)>:<public final native>:<android.os.Parcel>
<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener: boolean onBreadCrumbClick(android.app.FragmentManager.BackStackEntry,int)>:<public abstract>:<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener>
<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.preference.PreferenceActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.MotionEvent: float getAxisValue(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.HandlerThread: void <init>(java.lang.String,int)>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.provider.ContactsContract.CommonDataKinds.Relation: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Relation:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.ContextWrapper: java.lang.String getPackageName()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.gesture.GestureOverlayView: boolean isFadeEnabled()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsSpinner: int getCount()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.Drawable>
<android.telephony.NeighboringCellInfo: int getCid()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.graphics.drawable.PictureDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.message.BasicLineParser: void <init>()>:<public>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>:<public static synchronized>:<android.webkit.WebViewDatabase>
<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.ServiceState: void setState(int)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.provider.MediaStore.Images.Media: void <init>()>:<public>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.graphics.Rect: void set(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>:<public>:<android.media.MediaMetadataRetriever>
<android.renderscript.Element: android.renderscript.Element BOOLEAN(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.media.audiofx.Visualizer: int getMaxCaptureRate()>:<public static native>:<android.media.audiofx.Visualizer>
<android.view.inputmethod.EditorInfo: void <clinit>()>:<static>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.app.ActivityManager.MemoryInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<org.apache.http.message.BasicHeaderElement: java.lang.String toString()>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<org.apache.http.protocol.BasicHttpProcessor: void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<org.apache.http.conn.BasicManagedEntity: void consumeContent()>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.TouchDelegate>
<android.graphics.drawable.PictureDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.text.Layout: float getSpacingMultiplier()>:<public final>:<android.text.Layout>
<android.app.Dialog: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.Scroller: boolean isFinished()>:<public final>:<android.widget.Scroller>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat valueOf(java.lang.String)>:<public static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.media.SoundPool: void pause(int)>:<public final native>:<android.media.SoundPool>
<android.app.ActionBar: void setSubtitle(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.gesture.GestureOverlayView.OnGesturePerformedListener: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturePerformedListener>
<android.view.animation.Animation: void startNow()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.text.method.ArrowKeyMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.opengl.GLSurfaceView: void setDebugFlags(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.Surface: void setOrientation(int,int)>:<public static>:<android.view.Surface:android.os.Parcelable>
<junit.framework.TestCase: void <init>(java.lang.String)>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.app.Instrumentation: void onDestroy()>:<public>:<android.app.Instrumentation>
<android.widget.TableLayout: boolean isColumnCollapsed(int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.QuickContactBadge: void setImageToDefault()>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.ListView.FixedViewInfo: void <init>(android.widget.ListView)>:<public>:<android.widget.ListView.FixedViewInfo>
<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setWillNotDraw(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.cookie.ClientCookie: java.lang.String getAttribute(java.lang.String)>:<public abstract>:<org.apache.http.cookie.ClientCookie:org.apache.http.cookie.Cookie>
<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.PeriodicSync: boolean equals(java.lang.Object)>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<org.apache.http.client.protocol.RequestDefaultHeaders: void <init>()>:<public>:<org.apache.http.client.protocol.RequestDefaultHeaders:org.apache.http.HttpRequestInterceptor>
<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>:<public>:<org.apache.http.entity.ByteArrayEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.view.animation.AnimationSet: long getStartTime()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<org.apache.http.client.methods.HttpHead: void <init>()>:<public>:<org.apache.http.client.methods.HttpHead:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public abstract>:<android.text.method.MovementMethod>
<org.apache.http.protocol.HttpRequestHandlerRegistry: void <init>()>:<public>:<org.apache.http.protocol.HttpRequestHandlerRegistry:org.apache.http.protocol.HttpRequestHandlerResolver>
<android.webkit.WebSettings: void setNavDump(boolean)>:<public>:<android.webkit.WebSettings>
<android.content.Context: void sendBroadcast(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.test.ViewAsserts: void assertOffScreenBelow(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.widget.EditText: void <init>(android.content.Context)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.net.LocalSocket: boolean isBound()>:<public synchronized>:<android.net.LocalSocket>
<android.telephony.cdma.CdmaCellLocation: void fillInNotifierBundle(android.os.Bundle)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.hardware.usb.UsbDevice: int getProductId()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.test.RenamingDelegatingContext: java.io.File getDatabasePath(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<junit.framework.TestResult: void removeListener(junit.framework.TestListener)>:<public synchronized>:<junit.framework.TestResult>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.Menu: android.view.SubMenu addSubMenu(int)>:<public abstract>:<android.view.Menu>
<android.test.RenamingDelegatingContext: java.io.FileInputStream openFileInput(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.renderscript.Float3: void <init>()>:<public>:<android.renderscript.Float3>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Path: void reset()>:<public>:<android.graphics.Path>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>:<public abstract>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.graphics.Canvas: int getHeight()>:<public native>:<android.graphics.Canvas>
<android.test.mock.MockContext: java.lang.String[] databaseList()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.HorizontalScrollView: void <init>(android.content.Context)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.NumberPicker: void scrollBy(int,int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void setZAdjustment(int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.provider.MediaStore.Images.Thumbnails: void <clinit>()>:<static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>:<public>:<android.location.LocationManager>
<android.os.AsyncTask: java.lang.Object get()>:<public final>:<android.os.AsyncTask>
<android.widget.CalendarView: long getMaxDate()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference: android.preference.Preference.OnPreferenceChangeListener getOnPreferenceChangeListener()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.LinearLayout: void onMeasure(int,int)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.test.mock.MockContext: void <init>()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>:<public static>:<android.telephony.PhoneNumberUtils>
<org.apache.http.message.HeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.HeaderValueParser>
<android.widget.AbsSpinner: void onMeasure(int,int)>:<protected>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>:<public>:<android.location.LocationManager>
<android.Manifest.permission_group: void <init>()>:<public>:<android.Manifest.permission_group>
<android.os.Debug: boolean isDebuggerConnected()>:<public static>:<android.os.Debug>
<org.apache.http.client.params.HttpClientParams: void setAuthenticating(org.apache.http.params.HttpParams,boolean)>:<public static>:<org.apache.http.client.params.HttpClientParams>
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.os.Binder:android.os.IBinder>
<android.renderscript.RenderScriptGL: void <init>(android.content.Context,android.renderscript.RenderScriptGL.SurfaceConfig)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>:<public>:<android.view.ViewConfiguration>
<android.os.Debug: void startNativeTracing()>:<public static>:<android.os.Debug>
<android.text.util.Rfc822Token: java.lang.String getComment()>:<public>:<android.text.util.Rfc822Token>
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.webkit.WebView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.ContextWrapper: void startActivities(android.content.Intent[])>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.text.DynamicLayout: int getEllipsisCount(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.app.DownloadManager: int remove(long[])>:<public transient>:<android.app.DownloadManager>
<android.animation.Animator: void cancel()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.ListPopupWindow: int getPromptPosition()>:<public>:<android.widget.ListPopupWindow>
<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)>:<public>:<android.app.Instrumentation>
<android.widget.LinearLayout: int getOrientation()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.renderscript.ProgramVertexFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.util.SparseArray: void <init>(int)>:<public>:<android.util.SparseArray>
<android.app.ActionBar: android.view.View getCustomView()>:<public abstract>:<android.app.ActionBar>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.webkit.WebHistoryItem: java.lang.String getUrl()>:<public>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.nfc.tech.NfcF: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.os.Parcel: void readDoubleArray(double[])>:<public final>:<android.os.Parcel>
<android.widget.TextView: int getLeftPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.format.Time: java.lang.String format(java.lang.String)>:<public>:<android.text.format.Time>
<org.apache.http.protocol.HttpService: void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier)>:<public>:<org.apache.http.protocol.HttpService>
<android.app.UiModeManager: void <init>()>:<>:<android.app.UiModeManager>
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>:<public>:<android.media.RingtoneManager>
<android.widget.AbsListView: android.view.View getSelectedView()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.ProgramVertexFixedFunction: void <init>()>:<>:<android.renderscript.ProgramVertexFixedFunction:android.renderscript.ProgramVertex,android.renderscript.Program,android.renderscript.BaseObj>
<android.graphics.drawable.AnimationDrawable: void <init>()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.speech.RecognitionService.Callback: void endOfSpeech()>:<public>:<android.speech.RecognitionService.Callback>
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.impl.AbstractHttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.widget.EditText: void extendSelection(int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.widget.CalendarView: void setDate(long,boolean,boolean)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.UrlQuerySanitizer: void clear()>:<protected>:<android.net.UrlQuerySanitizer>
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost.Settings getProperties()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.content.res.TypedArray: float getDimension(int,float)>:<public>:<android.content.res.TypedArray>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>:<public static final>:<android.text.util.Linkify>
<android.content.ComponentName: int hashCode()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.webkit.WebView: void <init>(android.content.Context)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.database.CursorWindow: boolean putLong(long,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newDelete(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView.OnGroupExpandListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>:<public>:<android.media.AudioTrack>
<android.graphics.Point: void set(int,int)>:<public>:<android.graphics.Point>
<org.apache.http.entity.EntityTemplate: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.EntityTemplate:org.apache.http.entity.AbstractHttpEntity>
<android.widget.TabWidget: void setCurrentTab(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.webkit.WebView: void clearSslPreferences()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.DownloadManager.Query: void <init>()>:<public>:<android.app.DownloadManager.Query>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.app.LoaderManager: void enableDebugLogging(boolean)>:<public static>:<android.app.LoaderManager>
<android.opengl.GLES20: int glCreateShader(int)>:<public static native>:<android.opengl.GLES20>
<android.content.Context: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.net.Uri: java.util.List getPathSegments()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.util.LruCache: int putCount()>:<public final synchronized>:<android.util.LruCache>
<android.graphics.drawable.Drawable: boolean isVisible()>:<public final>:<android.graphics.drawable.Drawable>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.AsyncTask: void <init>()>:<public>:<android.os.AsyncTask>
<org.apache.http.HttpMessage: org.apache.http.Header getLastHeader(java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>:<public>:<android.hardware.usb.UsbManager>
<android.graphics.PointF: void negate()>:<public final>:<android.graphics.PointF>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.preference.DialogPreference: android.app.Dialog getDialog()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.HttpRequestExecutor>
<android.R.layout: void <init>()>:<public>:<android.R.layout>
<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>:<public final>:<android.content.ContentResolver>
<org.apache.http.impl.auth.NTLMScheme: boolean isConnectionBased()>:<public>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.util.JsonWriter: void close()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.graphics.YuvImage: int getHeight()>:<public>:<android.graphics.YuvImage>
<android.view.ViewGroup: void dispatchSetActivated(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.DialogPreference: void setDialogIcon(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.test.ActivityUnitTestCase: android.app.Activity getActivity()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.MotionEvent: float getY()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.provider.ContactsContract.RawContacts: android.content.EntityIterator newEntityIterator(android.database.Cursor)>:<public static>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.widget.ExpandableListAdapter: boolean areAllItemsEnabled()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView.OnKeyboardActionListener getOnKeyboardActionListener()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<org.apache.http.conn.routing.RouteInfo.LayerType: void <clinit>()>:<static>:<org.apache.http.conn.routing.RouteInfo.LayerType:java.lang.Enum>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: java.lang.String readLine()>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.test.mock.MockContext: void removeStickyBroadcast(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.webkit.URLUtil: boolean isHttpUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.test.InstrumentationTestRunner: void onCreate(android.os.Bundle)>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.provider.SearchRecentSuggestions: void <clinit>()>:<static>:<android.provider.SearchRecentSuggestions>
<android.view.View.OnClickListener: void onClick(android.view.View)>:<public abstract>:<android.view.View.OnClickListener>
<android.text.method.TextKeyListener: void clear(android.text.Editable)>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.webkit.WebHistoryItem: int getId()>:<public>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.text.BoringLayout: int getHeight()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.net.sip.SipAudioCall: void startAudio()>:<public>:<android.net.sip.SipAudioCall>
<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.os.Parcel: int[] createIntArray()>:<public final>:<android.os.Parcel>
<android.graphics.drawable.ShapeDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<org.apache.http.impl.client.RedirectLocations: boolean remove(java.net.URI)>:<public>:<org.apache.http.impl.client.RedirectLocations>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode valueOf(java.lang.String)>:<public static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.widget.TextView: android.text.style.URLSpan[] getUrls()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.mtp.MtpDevice: void <init>(android.hardware.usb.UsbDevice)>:<public>:<android.mtp.MtpDevice>
<android.os.Parcel: void readStringList(java.util.List)>:<public final>:<android.os.Parcel>
<android.content.SyncStats: void clear()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>:<public static>:<android.opengl.GLUtils>
<android.widget.ExpandableListView.OnGroupCollapseListener: void onGroupCollapse(int)>:<public abstract>:<android.widget.ExpandableListView.OnGroupCollapseListener>
<android.text.method.BaseMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.database.CursorJoiner.Result: void <init>(java.lang.String,int)>:<private>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.text.style.SubscriptSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>:<public static>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int)>:<public>:<android.appwidget.AppWidgetHost>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor remove(java.lang.String)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.database.AbstractCursor: java.lang.String getString(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.os.Bundle: void putChar(java.lang.String,char)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ListView: long[] getCheckItemIds()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.PopupWindow: void setAnimationStyle(int)>:<public>:<android.widget.PopupWindow>
<android.view.LayoutInflater.Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.view.LayoutInflater.Factory>
<android.telephony.PhoneNumberUtils: boolean isISODigit(char)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.renderscript.Float4: void <init>(float,float,float,float)>:<public>:<android.renderscript.Float4>
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback)>:<public>:<android.os.Handler>
<android.app.admin.DeviceAdminInfo: void <clinit>()>:<static>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.app.ActionBar: int getTabCount()>:<public abstract>:<android.app.ActionBar>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.view.ViewGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.view.ViewGroup.LayoutParams>
<android.widget.GridView: void setStretchMode(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<org.apache.http.params.DefaultedHttpParams: boolean removeParameter(java.lang.String)>:<public>:<org.apache.http.params.DefaultedHttpParams:org.apache.http.params.AbstractHttpParams>
<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.SeekBar: void <init>(android.content.Context)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.MediaPlayer: void prepare()>:<public native>:<android.media.MediaPlayer>
<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getHopTarget(int)>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.view.View: void setBottom(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.HorizontalScrollView: void smoothScrollTo(int,int)>:<public final>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.DefaultClientConnection: void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<org.apache.http.message.BufferedHeader: java.lang.String getValue()>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<android.os.WorkSource: boolean remove(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.app.Fragment: void <init>()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.GradientDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.webkit.WebView: void goBackOrForward(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.DecelerateInterpolator: void <init>(float)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator>
<android.text.method.LinkMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.mtp.MtpStorageInfo: void <init>()>:<>:<android.mtp.MtpStorageInfo>
<android.app.admin.DeviceAdminReceiver: java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteDoneException: void <init>()>:<public>:<android.database.sqlite.SQLiteDoneException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.AudioTrack: int getPlaybackRate()>:<public>:<android.media.AudioTrack>
<android.service.wallpaper.WallpaperService: void onDestroy()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.conn.routing.BasicRouteDirector: void <init>()>:<public>:<org.apache.http.conn.routing.BasicRouteDirector:org.apache.http.conn.routing.HttpRouteDirector>
<android.text.method.MetaKeyKeyListener: void <init>()>:<public>:<android.text.method.MetaKeyKeyListener>
<android.database.SQLException: void <init>()>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.ComponentName: boolean equals(java.lang.Object)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.app.Dialog: void takeKeyEvents(boolean)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.GLU>
<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.res.Resources: float getFraction(int,int,int)>:<public>:<android.content.res.Resources>
<android.test.mock.MockCursor: boolean isNull(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>:<public final>:<android.content.AbstractThreadedSyncAdapter>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getCommentURL()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.test.AndroidTestRunner: void setInstrumentaiton(android.app.Instrumentation)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.gesture.GestureStroke: java.lang.Object clone()>:<public>:<android.gesture.GestureStroke>
<android.view.View: boolean checkInputConnectionProxy(android.view.View)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.audiofx.AudioEffect.OnControlStatusChangeListener: void onControlStatusChange(android.media.audiofx.AudioEffect,boolean)>:<public abstract>:<android.media.audiofx.AudioEffect.OnControlStatusChangeListener>
<android.renderscript.Font: void <init>()>:<>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>:<public final synchronized>:<org.apache.http.conn.scheme.SchemeRegistry>
<android.text.InputFilter.AllCaps: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.InputFilter.AllCaps:android.text.InputFilter>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>:<protected>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>:<public final>:<android.os.Parcel>
<android.widget.AdapterViewAnimator: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: void <init>()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.bluetooth.BluetoothAdapter: int getScanMode()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.widget.TextView: void setCursorVisible(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.renderscript.Allocation: void copyFromUnchecked(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.MotionEvent.PointerCoords: void copyFrom(android.view.MotionEvent.PointerCoords)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix3f)>:<public>:<android.renderscript.FieldPacker>
<android.app.Activity: int getTaskId()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.util.Log: int w(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.widget.CheckedTextView: boolean isChecked()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.telephony.SmsMessage: int getStatusOnIcc()>:<public>:<android.telephony.SmsMessage>
<android.app.LauncherActivity: java.util.List onQueryPackageManager(android.content.Intent)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.NumberPicker: void onAttachedToWindow()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.Contacts: void <init>()>:<>:<android.provider.Contacts>
<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<org.apache.http.client.methods.HttpPost: java.lang.String getMethod()>:<public>:<org.apache.http.client.methods.HttpPost:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.graphics.Bitmap.Config: void <init>(java.lang.String,int)>:<private>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.view.View: int[] getDrawableState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public final>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.nfc.NdefRecord: int describeContents()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.opengl.GLES11: void glPointSizePointerOES(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)>:<public>:<org.apache.http.params.HttpProtocolParamBean:org.apache.http.params.HttpAbstractParamBean>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>:<public>:<org.json.JSONObject>
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void flush()>:<public>:<org.apache.http.impl.conn.LoggingSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<org.apache.http.entity.SerializableEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.SerializableEntity:org.apache.http.entity.AbstractHttpEntity>
<org.apache.http.HttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int)>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.MaskFilter: void <init>()>:<public>:<android.graphics.MaskFilter>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskReads()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.util.EventLog.Event: int getTag()>:<public>:<android.util.EventLog.Event>
<android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.gesture.GestureStore: java.util.ArrayList recognize(android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.view.Window: int getForcedWindowFlags()>:<protected final>:<android.view.Window>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.ClipDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>:<public>:<android.hardware.SensorManager>
<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.ByteArrayEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.provider.Settings.Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.app.Dialog: void setContentView(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES20: void glUseProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.app.SearchableInfo: int getVoicePromptTextId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.StackView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.widget.CalendarView: void setMinDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<dalvik.system.PathClassLoader: java.util.Enumeration findResources(java.lang.String)>:<protected>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<android.widget.TextView: boolean onCheckIsTextEditor()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<junit.framework.TestSuite: void <init>(java.lang.String)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.content.ContextWrapper: android.content.Context getBaseContext()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.drm.DrmInfoStatus: void <init>(int,int,android.drm.ProcessedData,java.lang.String)>:<public>:<android.drm.DrmInfoStatus>
<org.json.JSONTokener: java.lang.Object nextValue()>:<public>:<org.json.JSONTokener>
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.view.ViewDebug.CapturedViewProperty: boolean retrieveReturn()>:<public abstract>:<android.view.ViewDebug.CapturedViewProperty:java.lang.annotation.Annotation>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.media.AudioRecord: int read(short[],int,int)>:<public>:<android.media.AudioRecord>
<org.apache.http.HttpException: void <init>()>:<public>:<org.apache.http.HttpException:java.lang.Exception,java.lang.Throwable>
<android.app.ActionBar: void setCustomView(int)>:<public abstract>:<android.app.ActionBar>
<android.content.pm.LabeledIntent: void readFromParcel(android.os.Parcel)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)>:<protected>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.util.AndroidException: void <init>(java.lang.Exception)>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<android.widget.ScrollView: boolean pageScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.RectF: boolean contains(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<org.apache.http.impl.NoConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.NoConnectionReuseStrategy:org.apache.http.ConnectionReuseStrategy>
<android.graphics.Color: void colorToHSV(int,float[])>:<public static>:<android.graphics.Color>
<android.webkit.WebSettings.TextSize: void <clinit>()>:<static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.content.CursorLoader: void setSelection(java.lang.String)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<org.apache.http.impl.cookie.BasicExpiresHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicExpiresHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.widget.RatingBar: float getRating()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public abstract>:<android.app.LoaderManager>
<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>:<protected>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<org.apache.http.entity.StringEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)>:<public>:<android.mtp.MtpDevice>
<org.apache.http.entity.StringEntity: boolean isStreaming()>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.net.wifi.SupplicantState: void <init>(java.lang.String,int)>:<private>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.content.SharedPreferences.OnSharedPreferenceChangeListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>:<public abstract>:<android.content.SharedPreferences.OnSharedPreferenceChangeListener>
<android.net.NetworkInfo: boolean isAvailable()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element RGB_888(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.ViewGroup: android.view.View getChildAt(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.client.methods.HttpUriRequest: java.lang.String getMethod()>:<public abstract>:<org.apache.http.client.methods.HttpUriRequest:org.apache.http.HttpRequest>
<android.widget.BaseAdapter: boolean isEmpty()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.media.AudioManager: void playSoundEffect(int,float)>:<public>:<android.media.AudioManager>
<android.view.Window: void onActive()>:<protected abstract>:<android.view.Window>
<android.bluetooth.BluetoothClass: java.lang.String toString()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>:<public abstract>:<android.text.method.TransformationMethod>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo.LayerType getLayerType()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String[])>:<public transient>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.widget.HeaderViewListAdapter: boolean hasStableIds()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(int)>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.app.ActivityManager.RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.ExpandableListActivity: void <init>()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.net.wifi.WifiManager.MulticastLock: void finalize()>:<protected>:<android.net.wifi.WifiManager.MulticastLock>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.graphics.Paint: float getFontSpacing()>:<public>:<android.graphics.Paint>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>()>:<public>:<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.conn.routing.RouteTracker: void tunnelProxy(org.apache.http.HttpHost,boolean)>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskReads()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>:<public>:<android.graphics.NinePatch>
<android.util.JsonReader: void skipValue()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.text.style.TypefaceSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<android.widget.TableLayout: void <init>(android.content.Context)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>:<public>:<android.gesture.GestureStroke>
<android.test.mock.MockPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.Context: java.lang.String getPackageCodePath()>:<public abstract>:<android.content.Context>
<android.widget.GridView: void setSelection(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>:<public static>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>:<public>:<android.view.inputmethod.InputMethodManager>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void unmarkReusable()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.text.Annotation: int getSpanTypeId()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.widget.HorizontalScrollView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: int getSaveCount()>:<public native>:<android.graphics.Canvas>
<android.database.SQLException: void <init>(java.lang.String)>:<public>:<android.database.SQLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.test.AndroidTestRunner: void testEnded(java.lang.String)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.location.Address: void setCountryName(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.util.AttributeSet: java.lang.String getAttributeName(int)>:<public abstract>:<android.util.AttributeSet>
<org.apache.http.impl.cookie.RFC2109Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.database.MergeCursor: void close()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.os.Debug: void getMemoryInfo(android.os.Debug.MemoryInfo)>:<public static native>:<android.os.Debug>
<android.app.Fragment: boolean isAdded()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.view.InflateException: void <init>(java.lang.String)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.MailTo: java.lang.String getCc()>:<public>:<android.net.MailTo>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>:<public>:<android.view.FocusFinder>
<android.text.util.Rfc822Token: boolean equals(java.lang.Object)>:<public>:<android.text.util.Rfc822Token>
<org.apache.http.auth.Credentials: java.lang.String getPassword()>:<public abstract>:<org.apache.http.auth.Credentials>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType valueOf(java.lang.String)>:<public static>:<android.widget.TextView.BufferType:java.lang.Enum>
<android.widget.FrameLayout: void draw(android.graphics.Canvas)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.impl.auth.BasicScheme: boolean isConnectionBased()>:<public>:<org.apache.http.impl.auth.BasicScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>:<public abstract>:<org.apache.http.HttpEntity>
<android.widget.QuickContactBadge: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.content.ClipData: android.content.ClipDescription getDescription()>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.renderscript.ProgramStore.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.preference.RingtonePreference: android.net.Uri onRestoreRingtone()>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.location.Criteria: int getVerticalAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<org.apache.http.impl.io.IdentityInputStream: int available()>:<public>:<org.apache.http.impl.io.IdentityInputStream:java.io.InputStream>
<android.drm.DrmStore.Action: void <init>()>:<public>:<android.drm.DrmStore.Action>
<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>:<public abstract>:<android.view.MenuItem>
<android.view.InputDevice: int[] getDeviceIds()>:<public static>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.RelativeLayout: void setHorizontalGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.provider.Contacts.People: void markAsContacted(android.content.ContentResolver,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.hardware.usb.UsbRequest: void finalize()>:<protected>:<android.hardware.usb.UsbRequest>
<org.apache.http.impl.AbstractHttpClientConnection: void <init>()>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>:<public>:<android.view.ViewPropertyAnimator>
<org.json.JSONTokener: boolean more()>:<public>:<org.json.JSONTokener>
<android.content.res.AssetFileDescriptor: long getDeclaredLength()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>:<protected>:<android.content.ContextWrapper:android.content.Context>
<android.view.KeyCharacterMap: void finalize()>:<protected>:<android.view.KeyCharacterMap>
<android.view.MotionEvent: int getHistorySize()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.RemoteCallbackList: int beginBroadcast()>:<public>:<android.os.RemoteCallbackList>
<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.net.NetworkInfo: boolean isFailover()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.graphics.Matrix: void setSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String)>:<public>:<android.renderscript.Element.Builder>
<android.preference.ListPreference: void <init>(android.content.Context)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>:<public static>:<android.view.KeyCharacterMap>
<android.inputmethodservice.KeyboardView: void swipeRight()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.graphics.Typeface: int getStyle()>:<public>:<android.graphics.Typeface>
<android.graphics.SurfaceTexture: void updateTexImage()>:<public>:<android.graphics.SurfaceTexture>
<android.widget.AbsListView: void requestLayout()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: int getLeftPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Script: void setVar(int,boolean)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor.AutoCloseInputStream:java.io.FileInputStream,java.io.InputStream>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.view.View.DragShadowBuilder: void <init>()>:<public>:<android.view.View.DragShadowBuilder>
<org.apache.http.params.HttpProtocolParamBean: void setUserAgent(java.lang.String)>:<public>:<org.apache.http.params.HttpProtocolParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.renderscript.Program: void <init>()>:<>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.view.KeyEvent: boolean isFunctionPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<org.apache.http.protocol.HttpService: void setHttpProcessor(org.apache.http.protocol.HttpProcessor)>:<public>:<org.apache.http.protocol.HttpService>
<android.view.View: boolean isHorizontalFadingEdgeEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.Ringtone: void stop()>:<public>:<android.media.Ringtone>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.content.ContentProviderClient>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeathOnNetwork()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.test.MoreAsserts: void assertEmpty(java.lang.String,java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>:<public static>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<org.apache.http.impl.client.BasicResponseHandler: java.lang.String handleResponse(org.apache.http.HttpResponse)>:<public>:<org.apache.http.impl.client.BasicResponseHandler:org.apache.http.client.ResponseHandler>
<android.view.ViewGroup: boolean hasFocusable()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.LocalSocket: java.io.InputStream getInputStream()>:<public>:<android.net.LocalSocket>
<org.json.JSONTokener: char skipTo(char)>:<public>:<org.json.JSONTokener>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.BadParcelableException: void <init>(java.lang.String)>:<public>:<android.os.BadParcelableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.media.JetPlayer: boolean pause()>:<public>:<android.media.JetPlayer>
<android.app.TimePickerDialog: void updateTime(int,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.widget.RemoteViews: java.lang.String getPackage()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.webkit.WebSettings: android.webkit.WebSettings.TextSize getTextSize()>:<public synchronized>:<android.webkit.WebSettings>
<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.Interpolator>
<android.test.mock.MockCursor: boolean moveToNext()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.Scroller: void extendDuration(int)>:<public>:<android.widget.Scroller>
<android.content.pm.PackageInfo: int describeContents()>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.widget.AdapterView: void addView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.net.UrlQuerySanitizer: void registerParameters(java.lang.String[],android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Element: boolean isComplex()>:<public>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.text.method.CharacterPickerDialog: void onClick(android.view.View)>:<public>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>:<public static>:<android.content.ContentUris>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.animation.ValueAnimator.AnimatorUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>:<public abstract>:<android.animation.ValueAnimator.AnimatorUpdateListener>
<android.graphics.Paint: void setLinearText(boolean)>:<public native>:<android.graphics.Paint>
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.SimpleCursorTreeAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>:<protected>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.content.ContentProviderOperation: boolean isYieldAllowed()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.renderscript.RenderScript.Priority: void <clinit>()>:<static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.media.MediaScannerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<org.apache.http.util.CharArrayBuffer: char charAt(int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.os.Debug: void changeDebugPort(int)>:<public static>:<android.os.Debug>
<android.widget.ImageView: void setImageState(int[],boolean)>:<public>:<android.widget.ImageView:android.view.View>
<org.apache.http.impl.io.AbstractSessionInputBuffer: boolean hasBufferedData()>:<protected>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.hardware.usb.UsbDevice: int getDeviceClass()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.service.wallpaper.WallpaperService.Engine: void onDesiredSizeChanged(int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.os.AsyncTask: boolean isCancelled()>:<public final>:<android.os.AsyncTask>
<android.os.Binder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>:<public>:<android.os.Binder:android.os.IBinder>
<android.renderscript.Matrix3f: float[] getArray()>:<public>:<android.renderscript.Matrix3f>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void toggleSoftInput(int,int)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<org.apache.http.entity.BasicHttpEntity: void consumeContent()>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>:<public>:<android.app.WallpaperManager>
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL getRenderScriptGL()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.content.SyncAdapterType: boolean supportsUploading()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.app.ListActivity: int getSelectedItemPosition()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.telephony.PhoneStateListener: void <init>()>:<public>:<android.telephony.PhoneStateListener>
<android.os.Bundle: short getShort(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.util.TypedValue: java.lang.CharSequence coerceToString()>:<public final>:<android.util.TypedValue>
<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>:<public abstract>:<android.view.ViewParent>
<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.media.audiofx.Equalizer: short getBandLevel(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.view.ViewConfiguration: int getTouchSlop()>:<public static>:<android.view.ViewConfiguration>
<org.apache.http.impl.DefaultHttpResponseFactory: java.util.Locale determineLocale(org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.DefaultHttpResponseFactory:org.apache.http.HttpResponseFactory>
<android.animation.ValueAnimator: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.BaseObj getObject()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.app.LauncherActivity: void <init>()>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.animation.Animation: void setStartTime(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.content.ContentValues: void <init>()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.widget.CursorTreeAdapter: long getGroupId(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.test.mock.MockContext: java.io.File getDir(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>:<public static native>:<android.net.TrafficStats>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setShowRunningNotification(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.animation.Animator: void setupStartValues()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.view.View: void setClickable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.util.AttributeSet: float getAttributeFloatValue(int,float)>:<public abstract>:<android.util.AttributeSet>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AnalogClock:android.view.View>
<android.widget.SlidingDrawer: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.os.Bundle: long getLong(java.lang.String,long)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.media.AudioTrack: int write(short[],int,int)>:<public>:<android.media.AudioTrack>
<android.view.animation.AnimationSet: void setFillAfter(boolean)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<org.apache.http.conn.params.ConnRouteParams: void <init>()>:<>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost getTargetHost()>:<public final>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.media.audiofx.Visualizer: int[] getCaptureSizeRange()>:<public static native>:<android.media.audiofx.Visualizer>
<android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.SurfaceTexture: void finalize()>:<protected>:<android.graphics.SurfaceTexture>
<android.view.View: boolean isActivated()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: float getHistoricalPressure(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebView: void computeScroll()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getRealm()>:<public>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.inputmethodservice.KeyboardView: void onDraw(android.graphics.Canvas)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.service.wallpaper.WallpaperService.Engine: boolean isVisible()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.database.AbstractWindowedCursor: void <init>()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.Instrumentation: android.content.Context getTargetContext()>:<public>:<android.app.Instrumentation>
<android.widget.ListView: int getHeaderViewsCount()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void setAuxEffectSendLevel(float)>:<public native>:<android.media.MediaPlayer>
<android.renderscript.Element: android.renderscript.Element RGBA_4444(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>:<public static>:<android.opengl.Matrix>
<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.drawable.ColorDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.view.animation.AlphaAnimation: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.media.CamcorderProfile: boolean hasProfile(int,int)>:<public static>:<android.media.CamcorderProfile>
<android.widget.TextView: void setTextIsSelectable(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Notification.Builder: android.app.Notification getNotification()>:<public>:<android.app.Notification.Builder>
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.DrawableContainer: boolean isStateful()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulAndAngleBracketsLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>:<public>:<android.graphics.Paint>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.audiofx.Equalizer.Settings: void <init>()>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.runner.BaseTestRunner: void savePreferences()>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.test.mock.MockContext: java.io.FileInputStream openFileInput(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.media.AudioTrack: float getMaxVolume()>:<public static>:<android.media.AudioTrack>
<android.view.InputQueue.Callback: void onInputQueueCreated(android.view.InputQueue)>:<public abstract>:<android.view.InputQueue.Callback>
<android.os.Bundle: float getFloat(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.Instrumentation: void removeMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<org.apache.http.io.SessionOutputBuffer: void write(int)>:<public abstract>:<org.apache.http.io.SessionOutputBuffer>
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.ViewGroup: void detachViewsFromParent(int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ListView: void <init>(android.content.Context)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.inputmethodservice.ExtractEditText: boolean performClick()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.database.DatabaseUtils.InsertHelper: int getColumnIndex(java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.nfc.tech.Ndef: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>:<public static>:<android.view.SoundEffectConstants>
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.impl.entity.EntitySerializer createEntitySerializer()>:<protected>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<org.apache.http.cookie.CookieSpec: int getVersion()>:<public abstract>:<org.apache.http.cookie.CookieSpec>
<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>:<public static>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.Region: void translate(int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.ListView: void smoothScrollToPosition(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicHttpResponse: java.util.Locale getLocale()>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<org.apache.http.HttpResponseInterceptor: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.HttpResponseInterceptor>
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Activity: void stopManagingCursor(android.database.Cursor)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.test.MoreAsserts: void assertAssignableFrom(java.lang.Class,java.lang.Object)>:<public static>:<android.test.MoreAsserts>
<android.view.View: void setOnGenericMotionListener(android.view.View.OnGenericMotionListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.client.AbstractHttpClient: void removeRequestInterceptorByClass(java.lang.Class)>:<public>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.app.ListActivity: void onContentChanged()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.database.CursorWindow: void freeLastRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.content.ContentValues: void <clinit>()>:<static>:<android.content.ContentValues:android.os.Parcelable>
<android.content.Intent: boolean filterEquals(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.OverScroller: int getCurrY()>:<public final>:<android.widget.OverScroller>
<android.test.ViewAsserts: void assertOnScreen(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.test.IsolatedContext: java.io.File getFilesDir()>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.NinePatchDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.View: boolean performHapticFeedback(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWrapper: int getCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.ProgressBar: void postInvalidate()>:<public>:<android.widget.ProgressBar:android.view.View>
<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.app.ActionBar: android.app.ActionBar.Tab getTabAt(int)>:<public abstract>:<android.app.ActionBar>
<android.media.MediaRecorder: void <init>()>:<public>:<android.media.MediaRecorder>
<android.os.PowerManager.WakeLock: void acquire(long)>:<public>:<android.os.PowerManager.WakeLock>
<org.apache.http.HttpConnectionMetrics: long getSentBytesCount()>:<public abstract>:<org.apache.http.HttpConnectionMetrics>
<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()>:<public volatile>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>:<public static native>:<android.opengl.GLES10>
<android.widget.DialerFilter: void <init>(android.content.Context)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.HorizontalScrollView: boolean fullScroll(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.NativeActivity: void onInputQueueDestroyed(android.view.InputQueue)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.widget.TextView: void setMaxEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.app.ActivityGroup: void <init>()>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<org.apache.http.util.CharArrayBuffer: void <init>(int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcelable)>:<public>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.test.mock.MockResources: android.content.res.ColorStateList getColorStateList(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.webkit.CookieSyncManager: void resetSync()>:<public volatile>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.graphics.drawable.LevelListDrawable: void addLevel(int,int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>:<public>:<android.os.MemoryFile>
<android.view.animation.Animation: boolean hasStarted()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.AbsSavedState: void <init>(android.os.Parcelable)>:<protected>:<android.view.AbsSavedState:android.os.Parcelable>
<android.view.Display: int getDisplayId()>:<public>:<android.view.Display>
<android.graphics.Matrix: void setRotate(float)>:<public>:<android.graphics.Matrix>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.text.style.SuperscriptSpan: void <init>()>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.animation.ObjectAnimator: android.animation.ValueAnimator clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.view.ViewParent: android.view.ViewParent getParent()>:<public abstract>:<android.view.ViewParent>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage.MessageLevel messageLevel()>:<public>:<android.webkit.ConsoleMessage>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.graphics.Matrix: void setScale(float,float)>:<public>:<android.graphics.Matrix>
<android.drm.DrmManagerClient.OnEventListener: void onEvent(android.drm.DrmManagerClient,android.drm.DrmEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnEventListener>
<android.nfc.NdefMessage: byte[] toByteArray()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.content.Context: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>:<public abstract>:<android.content.Context>
<org.apache.http.conn.params.ConnRouteParamBean: void setLocalAddress(java.net.InetAddress)>:<public>:<org.apache.http.conn.params.ConnRouteParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.graphics.Path: void lineTo(float,float)>:<public>:<android.graphics.Path>
<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<org.json.JSONArray: org.json.JSONArray put(int)>:<public>:<org.json.JSONArray>
<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.content.IntentFilter: boolean hasDataAuthority(android.net.Uri)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.app.ActivityManager.ProcessErrorStateInfo: void <clinit>()>:<static>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>:<public final>:<android.os.Handler>
<org.apache.http.impl.conn.SingleClientConnManager.PoolEntry: void <init>(org.apache.http.impl.conn.SingleClientConnManager)>:<protected>:<org.apache.http.impl.conn.SingleClientConnManager.PoolEntry:org.apache.http.impl.conn.AbstractPoolEntry>
<android.app.TimePickerDialog: void onClick(android.content.DialogInterface,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.widget.ListView: void setHeaderDividersEnabled(boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.Location: void removeAltitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.provider.ContactsContract.CommonDataKinds.Nickname: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Nickname:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>:<public static>:<android.media.RingtoneManager>
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>:<public abstract>:<android.content.Context>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.StateListDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.bluetooth.BluetoothAssignedNumbers: void <init>()>:<>:<android.bluetooth.BluetoothAssignedNumbers>
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>:<public>:<android.app.LocalActivityManager>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>:<public>:<android.media.RingtoneManager>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.inputmethodservice.Keyboard: int getVerticalGap()>:<protected>:<android.inputmethodservice.Keyboard>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.Drawable>
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.graphics.Path.FillType: void <clinit>()>:<static>:<android.graphics.Path.FillType:java.lang.Enum>
<org.apache.http.message.BasicHeaderValueFormatter: boolean isSeparator(char)>:<protected>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.text.method.BaseMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.app.Activity: void closeContextMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.Paint: void <init>(int)>:<public>:<android.graphics.Paint>
<android.widget.Adapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.Adapter>
<android.webkit.WebViewFragment: void onPause()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.view.View: android.graphics.Matrix getMatrix()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.Contacts.Organizations: void <clinit>()>:<static>:<android.provider.Contacts.Organizations:android.provider.BaseColumns,android.provider.Contacts.OrganizationColumns>
<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)>:<public static>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.content.Intent: android.net.Uri getData()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.widget.OverScroller: int getFinalX()>:<public final>:<android.widget.OverScroller>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.preference.PreferenceFragment: void addPreferencesFromResource(int)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<org.json.JSONArray: java.lang.String optString(int)>:<public>:<org.json.JSONArray>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>:<public>:<android.telephony.TelephonyManager>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>:<public>:<android.graphics.Movie>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.accounts.Account: int describeContents()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipAudioCall: void endCall()>:<public>:<android.net.sip.SipAudioCall>
<android.graphics.PathDashPathEffect.Style: void <clinit>()>:<static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>:<public>:<android.location.LocationManager>
<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.widget.ImageView: void drawableStateChanged()>:<protected>:<android.widget.ImageView:android.view.View>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.webkit.WebView: int getContentHeight()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.location.Address: int getMaxAddressLineIndex()>:<public>:<android.location.Address:android.os.Parcelable>
<android.text.BoringLayout: boolean getLineContainsTab(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.RatingBar.OnRatingBarChangeListener: void onRatingChanged(android.widget.RatingBar,float,boolean)>:<public abstract>:<android.widget.RatingBar.OnRatingBarChangeListener>
<android.view.Menu: void setGroupEnabled(int,boolean)>:<public abstract>:<android.view.Menu>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.pm.InstrumentationInfo: void <init>()>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.view.ViewGroup: void startViewTransition(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.conn.SingleClientConnManager: void finalize()>:<protected>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.view.ViewDebug: void <init>()>:<public>:<android.view.ViewDebug>
<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera.CameraInfo)>:<public static native>:<android.hardware.Camera>
<android.test.MoreAsserts: void assertEquals(java.lang.Object[],java.lang.Object[])>:<public static>:<android.test.MoreAsserts>
<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)>:<public static>:<android.view.ViewDebug>
<android.view.View.MeasureSpec: int makeMeasureSpec(int,int)>:<public static>:<android.view.View.MeasureSpec>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.widget.ListView: void setSelectionAfterHeaderView()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>:<public>:<android.content.res.TypedArray>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public abstract>:<org.apache.http.cookie.CookieAttributeHandler>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,int)>:<public>:<android.app.Notification.Builder>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.widget.Chronometer: long getBase()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.renderscript.Element: android.renderscript.Element I64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.util.JsonReader: boolean hasNext()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.database.CursorWrapper: int getType(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.content.ComponentName: int compareTo(android.content.ComponentName)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.app.SearchManager.OnCancelListener: void onCancel()>:<public abstract>:<android.app.SearchManager.OnCancelListener>
<android.view.inputmethod.InputMethodSubtype: int hashCode()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)>:<public>:<android.media.AudioTrack>
<org.apache.http.conn.ManagedClientConnection: javax.net.ssl.SSLSession getSSLSession()>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.widget.AbsoluteLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void swipeUp()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.test.RenamingDelegatingContext: void makeExistingFilesAndDbsAccessible()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.method.LinkMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.webkit.WebView: void onScrollChanged(int,int,int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.Annotation: int describeContents()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.widget.MediaController: void setAnchorView(android.view.View)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.Xfermode)>:<public>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.graphics.Bitmap: void <init>()>:<>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.RectF: boolean intersects(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getLastHeader(java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.widget.TabHost: void sendAccessibilityEvent(int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ViewAnimator: int getBaseline()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ProgramVertexFixedFunction: void bindConstants(android.renderscript.ProgramVertexFixedFunction.Constants)>:<public>:<android.renderscript.ProgramVertexFixedFunction:android.renderscript.ProgramVertex,android.renderscript.Program,android.renderscript.BaseObj>
<android.view.SubMenu: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>:<public final>:<android.os.Parcel>
<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.net.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.net.sip.SipException:java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>:<public final>:<org.apache.http.impl.client.RoutedRequest>
<android.location.Address: java.lang.String getFeatureName()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.ZoomButton: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: void <init>()>:<public>:<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:org.apache.http.conn.ConnectionKeepAliveStrategy>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setMipmaps(boolean)>:<public>:<android.renderscript.Type.Builder>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>:<public final>:<android.graphics.drawable.Drawable>
<android.os.Debug: void resetGlobalExternalFreedSize()>:<public static>:<android.os.Debug>
<android.content.res.ObbInfo: int describeContents()>:<public>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.widget.ViewFlipper: void stopFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.Contacts.People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.test.mock.MockPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.MultiAutoCompleteTextView.Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.renderscript.ProgramFragment: void <init>()>:<>:<android.renderscript.ProgramFragment:android.renderscript.Program,android.renderscript.BaseObj>
<android.os.RemoteCallbackList: void <init>()>:<public>:<android.os.RemoteCallbackList>
<android.widget.RelativeLayout.LayoutParams: void addRule(int,int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<org.apache.http.cookie.SetCookie: void setComment(java.lang.String)>:<public abstract>:<org.apache.http.cookie.SetCookie:org.apache.http.cookie.Cookie>
<android.gesture.GestureLibrary: int getOrientationStyle()>:<public>:<android.gesture.GestureLibrary>
<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>:<public final>:<android.telephony.gsm.SmsManager>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Matrix3f: void scale(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewStub:android.view.View>
<android.text.style.LeadingMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public abstract>:<android.text.style.LeadingMarginSpan:android.text.style.ParagraphStyle>
<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.DragEvent: void <init>()>:<>:<android.view.DragEvent:android.os.Parcelable>
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>:<public static final>:<android.text.Selection>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>()>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>:<public final>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.view.ViewConfiguration: int getEdgeSlop()>:<public static>:<android.view.ViewConfiguration>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(android.view.View)>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.AlertDialog: void setIconAttribute(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>:<public static>:<android.media.RingtoneManager>
<android.content.ContextWrapper: android.content.res.Resources getResources()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.os.storage.StorageManager: void <init>()>:<>:<android.os.storage.StorageManager>
<android.database.CursorWrapper: float getFloat(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.content.Intent: boolean hasCategory(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.mtp.MtpObjectInfo: int getThumbPixWidth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.text.method.ScrollingMovementMethod: void <init>()>:<public>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.provider.ContactsContract.RawContacts.Entity: void <init>()>:<>:<android.provider.ContactsContract.RawContacts.Entity:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns>
<android.content.ComponentCallbacks: void onLowMemory()>:<public abstract>:<android.content.ComponentCallbacks>
<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String)>:<public>:<org.apache.http.auth.InvalidCredentialsException:org.apache.http.auth.AuthenticationException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.telephony.SmsMessage: int[] calculateLength(java.lang.String,boolean)>:<public static>:<android.telephony.SmsMessage>
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>:<protected>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.text.Editable: void clear()>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>:<public abstract>:<android.view.Window>
<android.os.TokenWatcher: void acquired()>:<public abstract>:<android.os.TokenWatcher>
<org.apache.http.impl.DefaultHttpClientConnection: java.lang.String toString()>:<public>:<org.apache.http.impl.DefaultHttpClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection>
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>:<public abstract>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.MediaPlayer.OnSeekCompleteListener: void onSeekComplete(android.media.MediaPlayer)>:<public abstract>:<android.media.MediaPlayer.OnSeekCompleteListener>
<android.preference.PreferenceScreen: android.app.Dialog getDialog()>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.widget.TextView: int computeVerticalScrollRange()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.MotionEvent: int axisFromString(java.lang.String)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>:<public>:<android.telephony.PhoneStateListener>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.bluetooth.BluetoothAdapter: java.lang.String getName()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.HorizontalScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Matrix3f: void set(int,int,float)>:<public>:<android.renderscript.Matrix3f>
<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<org.apache.http.protocol.HttpRequestInterceptorList: void addRequestInterceptor(org.apache.http.HttpRequestInterceptor)>:<public abstract>:<org.apache.http.protocol.HttpRequestInterceptorList>
<android.text.method.BaseMovementMethod: boolean canSelectArbitrarily()>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.widget.TextView: void setTextColor(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.InputEvent: void <clinit>()>:<static>:<android.view.InputEvent:android.os.Parcelable>
<android.app.LauncherActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Interpolator: void finalize()>:<protected>:<android.graphics.Interpolator>
<android.gesture.GestureStroke: android.gesture.OrientedBoundingBox computeOrientedBoundingBox()>:<public>:<android.gesture.GestureStroke>
<android.content.pm.PackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>:<public final>:<android.content.res.AssetManager>
<android.util.MonthDisplayHelper: void <init>(int,int,int)>:<public>:<android.util.MonthDisplayHelper>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.pm.ConfigurationInfo: void <init>(android.content.pm.ConfigurationInfo)>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<org.apache.http.impl.conn.Wire: void <init>(org.apache.commons.logging.Log)>:<public>:<org.apache.http.impl.conn.Wire>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,java.lang.String)>:<public>:<android.app.AlertDialog.Builder>
<android.view.MenuItem: android.view.View getActionView()>:<public abstract>:<android.view.MenuItem>
<android.os.Bundle: void remove(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.AdapterViewAnimator: void onMeasure(int,int)>:<protected>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.AllocationAdapter: void copyFrom(android.graphics.Bitmap)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.net.http.SslError: java.lang.String toString()>:<public>:<android.net.http.SslError>
<android.content.pm.PackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.MediaPlayer.OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnErrorListener>
<android.view.Surface: void readFromParcel(android.os.Parcel)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.widget.AbsListView: void clearTextFilter()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.animation.Animation: boolean isInitialized()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser)>:<public static final>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.webkit.WebStorage.Origin: long getUsage()>:<public>:<android.webkit.WebStorage.Origin>
<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>:<public>:<org.json.JSONObject>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>:<public>:<android.accounts.AccountManager>
<android.widget.VideoView: boolean canPause()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>(java.lang.String)>:<public>:<android.content.IntentFilter.MalformedMimeTypeException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.provider.ContactsContract.CommonDataKinds.Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Organization:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<org.apache.http.message.HeaderGroup: org.apache.http.message.HeaderGroup copy()>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>:<public static>:<android.graphics.BitmapFactory>
<android.media.AudioRecord: void release()>:<public>:<android.media.AudioRecord>
<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.content.ContextWrapper: void <init>(android.content.Context)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.provider.ContactsContract: void <init>()>:<public>:<android.provider.ContactsContract>
<android.location.Address: android.os.Bundle getExtras()>:<public>:<android.location.Address:android.os.Parcelable>
<android.util.SparseBooleanArray: int indexOfValue(boolean)>:<public>:<android.util.SparseBooleanArray>
<org.apache.http.impl.SocketHttpServerConnection: java.net.Socket getSocket()>:<protected>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<org.xmlpull.v1.XmlPullParser: boolean isWhitespace()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.graphics.Rect: void union(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.renderscript.Type.Builder: android.renderscript.Type create()>:<public>:<android.renderscript.Type.Builder>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.PopupWindow>
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>:<public>:<android.location.Geocoder>
<android.content.SyncAdapterType: boolean isUserVisible()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.renderscript.BaseObj: void setName(java.lang.String)>:<public>:<android.renderscript.BaseObj>
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.graphics.Rect: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)>:<public>:<android.net.UrlQuerySanitizer>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.sip.SipManager: void open(android.net.sip.SipProfile)>:<public>:<android.net.sip.SipManager>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setVerticalScrollBarEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.app.Activity: java.lang.String getCallingPackage()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.Paint: void clearShadowLayer()>:<public>:<android.graphics.Paint>
<android.telephony.TelephonyManager: boolean isNetworkRoaming()>:<public>:<android.telephony.TelephonyManager>
<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>:<public>:<android.location.LocationManager>
<android.app.Notification.Builder: android.app.Notification.Builder setContent(android.widget.RemoteViews)>:<public>:<android.app.Notification.Builder>
<android.app.TabActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public abstract>:<android.database.Cursor>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView: void setRenderMode(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<org.apache.http.protocol.BasicHttpProcessor: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.content.IntentFilter: boolean hasDataPath(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onText(java.lang.CharSequence)>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.database.CursorWindow: int getInt(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebStorage: void <init>()>:<public>:<android.webkit.WebStorage>
<android.os.HandlerThread: void <init>(java.lang.String)>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.os.Parcel: void writeFloatArray(float[])>:<public final>:<android.os.Parcel>
<android.app.FragmentManager: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public abstract>:<android.app.FragmentManager>
<android.animation.LayoutTransition: long getDuration(int)>:<public>:<android.animation.LayoutTransition>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.content.pm.InstrumentationInfo: void <clinit>()>:<static>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.RelativeLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.text.format.Time: java.lang.String toString()>:<public native>:<android.text.format.Time>
<android.telephony.gsm.GsmCellLocation: int hashCode()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.telephony.gsm.SmsMessage: boolean isEmail()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.TextView: int getRightPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.speech.tts.TextToSpeech: int setSpeechRate(float)>:<public>:<android.speech.tts.TextToSpeech>
<org.apache.http.conn.scheme.Scheme: java.lang.String toString()>:<public final>:<org.apache.http.conn.scheme.Scheme>
<android.text.method.TextKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void shutdown()>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.database.AbstractCursor: short getShort(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.Filter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>:<protected abstract>:<android.widget.Filter>
<junit.framework.Assert: void assertEquals(int,int)>:<public static>:<junit.framework.Assert>
<android.text.Selection: void <init>()>:<>:<android.text.Selection>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.sip.SipSession: void makeCall(android.net.sip.SipProfile,java.lang.String,int)>:<public>:<android.net.sip.SipSession>
<android.widget.TextView: void setLinkTextColor(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2965PortAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>:<public transient>:<android.content.res.Resources>
<android.graphics.RectF: float height()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.apache.http.conn.ssl.SSLSocketFactory: boolean isSecure(java.net.Socket)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.webkit.WebView: android.view.View getZoomControls()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureSizes()>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>:<public final>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.database.DatabaseUtils.InsertHelper: void bind(int,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.widget.AdapterView.OnItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public abstract>:<android.widget.AdapterView.OnItemClickListener>
<android.graphics.drawable.ScaleDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: void goForward()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.MimeTypeMap: boolean hasMimeType(java.lang.String)>:<public>:<android.webkit.MimeTypeMap>
<android.app.backup.SharedPreferencesBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.SharedPreferencesBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.view.ViewStub: android.view.View inflate()>:<public>:<android.view.ViewStub:android.view.View>
<android.view.Menu: boolean performIdentifierAction(int,int)>:<public abstract>:<android.view.Menu>
<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothClass: boolean equals(java.lang.Object)>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.opengl.GLES20: void glStencilOp(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.animation.Animator: long getStartDelay()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<junit.framework.Assert: void assertNull(java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.view.animation.Animation: void setDetachWallpaper(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.renderscript.AllocationAdapter: void setY(int)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.location.Address: void <clinit>()>:<static>:<android.location.Address:android.os.Parcelable>
<android.os.AsyncTask: void onPostExecute(java.lang.Object)>:<protected>:<android.os.AsyncTask>
<android.mtp.MtpObjectInfo: void <init>()>:<>:<android.mtp.MtpObjectInfo>
<android.webkit.WebSettings.LayoutAlgorithm: void <clinit>()>:<static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<org.apache.http.HttpMessage: void setHeader(org.apache.http.Header)>:<public abstract>:<org.apache.http.HttpMessage>
<android.text.method.ArrowKeyMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>:<public static>:<android.util.Log>
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>:<public>:<android.graphics.Matrix>
<android.provider.Contacts.People.ContactMethods: void <init>()>:<>:<android.provider.Contacts.People.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.renderscript.AllocationAdapter: void copyFrom(int[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.widget.Toast: void setText(java.lang.CharSequence)>:<public>:<android.widget.Toast>
<android.graphics.Path: void moveTo(float,float)>:<public>:<android.graphics.Path>
<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>:<public abstract>:<org.apache.http.StatusLine>
<android.util.JsonToken: void <init>(java.lang.String,int)>:<private>:<android.util.JsonToken:java.lang.Enum>
<android.media.Ringtone: int getStreamType()>:<public>:<android.media.Ringtone>
<android.view.inputmethod.InputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.test.AndroidTestRunner: java.util.List getTestCases()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.os.Parcel: byte[] marshall()>:<public final native>:<android.os.Parcel>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>:<public>:<android.graphics.Paint>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<junit.framework.Protectable: void protect()>:<public abstract>:<junit.framework.Protectable>
<org.apache.http.conn.routing.HttpRoute: boolean isSecure()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.widget.AbsListView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.Toast: void show()>:<public>:<android.widget.Toast>
<android.webkit.DownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>:<public abstract>:<android.webkit.DownloadListener>
<android.nfc.tech.Ndef: void close()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.widget.ViewFlipper: void <init>(android.content.Context)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Scroller: void setFinalX(int)>:<public>:<android.widget.Scroller>
<android.widget.TableLayout: void onMeasure(int,int)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Bitmap: boolean isMutable()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.animation.Animation: int getZAdjustment()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<org.apache.http.impl.cookie.BasicDomainHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicDomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.net.LocalSocket: int getSendBufferSize()>:<public>:<android.net.LocalSocket>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>:<public>:<android.telephony.PhoneStateListener>
<android.test.mock.MockPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromFile(android.renderscript.RenderScript,java.io.File)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.renderscript.Sampler.Value: void <clinit>()>:<static>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glViewport(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.animation.AnimatorSet: android.animation.Animator clone()>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.WindowManager.LayoutParams: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: boolean isDataAvailable(int)>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.net.wifi.ScanResult: void <init>()>:<>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.graphics.RectF: boolean contains(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.animation.Keyframe: java.lang.Object clone()>:<public volatile>:<android.animation.Keyframe:java.lang.Cloneable>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>:<public>:<org.json.JSONObject>
<android.net.sip.SipAudioCall.Listener: void onChanged(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.nfc.tech.NfcF: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<org.apache.http.impl.io.IdentityInputStream: void <init>(org.apache.http.io.SessionInputBuffer)>:<public>:<org.apache.http.impl.io.IdentityInputStream:java.io.InputStream>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.graphics.drawable.TransitionDrawable: void reverseTransition(int)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.SpannableStringBuilder: android.text.Editable append(char)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.Gallery: void setSpacing(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<org.apache.http.HttpException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.HttpException:java.lang.Exception,java.lang.Throwable>
<android.inputmethodservice.InputMethodService: void onExtractedTextClicked()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Color: void <init>()>:<public>:<android.graphics.Color>
<android.widget.AlphabetIndexer: int getPositionForSection(int)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<org.apache.commons.logging.Log: boolean isErrorEnabled()>:<public abstract>:<org.apache.commons.logging.Log>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isStateful()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.PointF: float length(float,float)>:<public static>:<android.graphics.PointF>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.Service: void onRebind(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<org.apache.http.message.BasicHttpResponse: void setReasonPhrase(java.lang.String)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultTargetAuthenticationHandler:org.apache.http.impl.client.AbstractAuthenticationHandler>
<android.inputmethodservice.Keyboard: int getMinWidth()>:<public>:<android.inputmethodservice.Keyboard>
<org.apache.http.impl.SocketHttpServerConnection: int getSocketTimeout()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.renderscript.Matrix4f: boolean inverseTranspose()>:<public>:<android.renderscript.Matrix4f>
<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>:<public>:<android.os.DropBoxManager>
<android.test.ViewAsserts: void <init>()>:<>:<android.test.ViewAsserts>
<android.widget.FrameLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void handleLostEntry(org.apache.http.conn.routing.HttpRoute)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.view.ViewDebug.ExportedProperty: boolean deepExport()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.widget.Scroller: int getCurrX()>:<public final>:<android.widget.Scroller>
<android.graphics.YuvImage: int getWidth()>:<public>:<android.graphics.YuvImage>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStopTrackingTouch(android.widget.SeekBar)>:<public abstract>:<android.widget.SeekBar.OnSeekBarChangeListener>
<android.graphics.RectF: void set(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.os.Parcel: void readLongArray(long[])>:<public final>:<android.os.Parcel>
<android.test.mock.MockCursor: boolean isAfterLast()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.VideoView: boolean canSeekForward()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.os.DropBoxManager: void <init>()>:<protected>:<android.os.DropBoxManager>
<android.os.Messenger: void <init>(android.os.IBinder)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.provider.Contacts.ContactMethods: java.lang.Object decodeImProtocol(java.lang.String)>:<public static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.widget.AnalogClock: void <init>(android.content.Context)>:<public>:<android.widget.AnalogClock:android.view.View>
<android.util.SparseBooleanArray: int size()>:<public>:<android.util.SparseBooleanArray>
<org.apache.http.cookie.CookieSpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.cookie.CookieSpecFactory>
<android.net.wifi.WifiManager: boolean pingSupplicant()>:<public>:<android.net.wifi.WifiManager>
<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringInternal>
<android.test.mock.MockContentProvider: void <init>(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PathPermission[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>:<public>:<android.webkit.WebSettings>
<android.widget.SlidingDrawer: android.view.View getHandle()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.app.Notification.Builder: android.app.Notification.Builder setDefaults(int)>:<public>:<android.app.Notification.Builder>
<android.widget.TableLayout: boolean isColumnShrinkable(int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.RawContactsEntity: void <clinit>()>:<static>:<android.provider.ContactsContract.RawContactsEntity:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns,android.provider.ContactsContract.RawContactsColumns>
<android.text.AlteredCharSequence: char charAt(int)>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.AnimatorListenerAdapter: void onAnimationEnd(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener>
<org.apache.http.cookie.CookieOrigin: int getPort()>:<public>:<org.apache.http.cookie.CookieOrigin>
<android.os.FileObserver: void startWatching()>:<public>:<android.os.FileObserver>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.Region.Op: void <init>(java.lang.String,int)>:<private>:<android.graphics.Region.Op:java.lang.Enum>
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<public>:<android.drm.DrmErrorEvent:android.drm.DrmEvent>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])>:<public static>:<android.gesture.GestureUtils>
<android.view.ActionMode: void setSubtitle(int)>:<public abstract>:<android.view.ActionMode>
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.view.SurfaceHolder: void setSizeFromLayout()>:<public abstract>:<android.view.SurfaceHolder>
<android.util.TypedValue: float getFloat()>:<public final>:<android.util.TypedValue>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(android.view.View)>:<public>:<android.widget.TabHost.TabSpec>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.Rect getConstantPadding()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.widget.AdapterView: int getCount()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.test.mock.MockCursor: boolean moveToFirst()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>:<public abstract>:<android.view.MenuItem>
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<junit.framework.Assert: void assertEquals(java.lang.String,double,double,double)>:<public static>:<junit.framework.Assert>
<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Paint: void set(android.graphics.Paint)>:<public>:<android.graphics.Paint>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>:<public>:<android.widget.PopupWindow>
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.View: void setScaleY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntries()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.view.KeyEvent: boolean hasModifiers(int)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,android.os.ParcelFileDescriptor,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<org.apache.http.cookie.CookieAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public abstract>:<org.apache.http.cookie.CookieAttributeHandler>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ExpandableListAdapter: java.lang.Object getChild(int,int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.provider.MediaStore.Audio.Media: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.PreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.renderscript.Element.DataType: void <clinit>()>:<static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.text.SpannableStringBuilder: void clearSpans()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.AdapterView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<org.apache.http.client.methods.HttpRequestBase: void setURI(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.test.mock.MockPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.apache.http.impl.io.HttpResponseWriter: void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.HttpResponseWriter:org.apache.http.impl.io.AbstractMessageWriter>
<android.media.AudioManager: void adjustVolume(int,int)>:<public>:<android.media.AudioManager>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.test.TouchUtils: void dragViewToBottom(android.test.ActivityInstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMax()>:<public>:<org.apache.http.conn.params.ConnPerRouteBean:org.apache.http.conn.params.ConnPerRoute>
<android.webkit.WebView: boolean performLongClick()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.nfc.tech.TagTechnology: boolean isConnected()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<android.net.LocalServerSocket: android.net.LocalSocket accept()>:<public>:<android.net.LocalServerSocket>
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<org.apache.http.protocol.ResponseServer: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.ResponseServer:org.apache.http.HttpResponseInterceptor>
<android.view.inputmethod.ExtractedText: void <clinit>()>:<static>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.content.pm.ActivityInfo: int getThemeResource()>:<public final>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.util.Pair: int hashCode()>:<public>:<android.util.Pair>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>:<public static>:<android.text.format.DateUtils>
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.StatusUpdates: int getPresenceIconResourceId(int)>:<public static final>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.hardware.Sensor: float getMaximumRange()>:<public>:<android.hardware.Sensor>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>:<public final>:<android.os.Parcel>
<android.provider.ContactsContract.CommonDataKinds.Phone: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.pm.ResolveInfo: void <clinit>()>:<static>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<org.apache.http.impl.HttpConnectionMetricsImpl: void incrementResponseCount()>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CompoundButton: boolean performClick()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.renderscript.FieldPacker: void addF32(float)>:<public>:<android.renderscript.FieldPacker>
<android.os.Debug: int getBinderProxyObjectCount()>:<public static final native>:<android.os.Debug>
<android.view.MotionEvent: int getAction()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Message: void recycle()>:<public>:<android.os.Message:android.os.Parcelable>
<android.content.ContentValues: java.util.Set keySet()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<org.apache.http.message.BasicHeaderValueFormatter: java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter)>:<public static final>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<org.apache.http.impl.auth.NTLMEngine>
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void dragViewToTop(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Message: void <clinit>()>:<static>:<android.os.Message:android.os.Parcelable>
<android.os.AsyncTask: boolean cancel(boolean)>:<public final>:<android.os.AsyncTask>
<android.webkit.SslErrorHandler: void cancel()>:<public>:<android.webkit.SslErrorHandler:android.os.Handler>
<org.apache.http.protocol.BasicHttpProcessor: void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface.OnCancelListener)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.graphics.drawable.NinePatchDrawable: int getOpacity()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.SurfaceView: void onAttachedToWindow()>:<protected>:<android.view.SurfaceView:android.view.View>
<android.graphics.drawable.shapes.RectShape: void <init>()>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.renderscript.Short4: void <init>()>:<public>:<android.renderscript.Short4>
<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>:<protected>:<org.apache.http.impl.auth.RFC2617Scheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<org.apache.http.io.SessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>:<public abstract>:<org.apache.http.io.SessionInputBuffer>
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView.Validator)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.app.Instrumentation: boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor,int)>:<public>:<android.app.Instrumentation>
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>:<public>:<android.view.KeyCharacterMap>
<org.apache.http.HttpHost: java.lang.Object clone()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.graphics.drawable.TransitionDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.test.InstrumentationTestCase: void injectInsrumentation(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.CursorTreeAdapter: long getChildId(int,int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.app.ActivityGroup: void onResume()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Bitmap: void eraseColor(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode[] values()>:<public static>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.widget.Button: void <init>(android.content.Context)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<org.apache.http.impl.SocketHttpServerConnection: org.apache.http.io.SessionInputBuffer createHttpDataReceiver(java.net.Socket,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.widget.Filter.FilterListener: void onFilterComplete(int)>:<public abstract>:<android.widget.Filter.FilterListener>
<android.test.mock.MockCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>:<public static native>:<android.opengl.GLES20>
<junit.framework.Assert: void assertFalse(java.lang.String,boolean)>:<public static>:<junit.framework.Assert>
<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<org.apache.http.HttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.os.Debug: void startMethodTracing(java.lang.String,int)>:<public static>:<android.os.Debug>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.drm.DrmStore.DrmObjectType: void <init>()>:<public>:<android.drm.DrmStore.DrmObjectType>
<android.os.Parcel: byte[] createByteArray()>:<public final native>:<android.os.Parcel>
<android.location.Location: void writeToParcel(android.os.Parcel,int)>:<public>:<android.location.Location:android.os.Parcelable>
<android.database.sqlite.SQLiteMisuseException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.AutoCompleteTextView: void onAttachedToWindow()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.animation.AnimationSet: long getDuration()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.text.AlteredCharSequence: int length()>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.util.LruCache: void <init>(int)>:<public>:<android.util.LruCache>
<android.webkit.URLUtil: boolean isHttpsUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.content.SyncAdapterType: boolean allowParallelSyncs()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.hardware.GeomagneticField: float getDeclination()>:<public>:<android.hardware.GeomagneticField>
<android.widget.Gallery: void dispatchSetSelected(boolean)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.net.http.AndroidHttpClient: void finalize()>:<protected>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode[] values()>:<public static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getLoadingView()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<junit.runner.BaseTestRunner: void testStarted(java.lang.String)>:<public abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.database.AbstractWindowedCursor: boolean isString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setVariablePadding(boolean)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.database.AbstractCursor: float getFloat(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.nfc.tech.NfcA: void close()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.graphics.drawable.ColorDrawable: void <init>(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.net.rtp.RtpStream: void setMode(int)>:<public>:<android.net.rtp.RtpStream>
<android.view.View: int getLeft()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.client.AbstractHttpClient: void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.text.format.DateUtils: void <init>()>:<public>:<android.text.format.DateUtils>
<android.telephony.TelephonyManager: boolean hasIccCard()>:<public>:<android.telephony.TelephonyManager>
<org.apache.http.MalformedChunkCodingException: void <init>(java.lang.String)>:<public>:<org.apache.http.MalformedChunkCodingException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.entity.BufferedHttpEntity: boolean isStreaming()>:<public>:<org.apache.http.entity.BufferedHttpEntity:org.apache.http.entity.HttpEntityWrapper>
<org.apache.http.conn.routing.RouteTracker: void <init>(org.apache.http.HttpHost,java.net.InetAddress)>:<public>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.test.mock.MockCursor: void <init>()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<org.apache.http.impl.client.AbstractHttpClient: void clearResponseInterceptors()>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.content.Loader: android.content.Context getContext()>:<public>:<android.content.Loader>
<android.renderscript.Element.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Element.Builder>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.ListPopupWindow: boolean isModal()>:<public>:<android.widget.ListPopupWindow>
<android.app.Activity: void setResult(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)>:<public>:<org.apache.http.conn.params.ConnRouteParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>:<public>:<android.app.LocalActivityManager>
<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()>:<public>:<android.net.rtp.AudioGroup>
<android.widget.Gallery: void setAnimationDuration(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.webkit.WebResourceResponse: java.lang.String getMimeType()>:<public>:<android.webkit.WebResourceResponse>
<android.preference.Preference: void setDependency(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES10: void glEnable(int)>:<public static native>:<android.opengl.GLES10>
<android.os.Bundle: void putInt(java.lang.String,int)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.os.Bundle: boolean containsKey(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>:<public>:<android.speech.SpeechRecognizer>
<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.text.method.MultiTapKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbTitleRes()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.text.method.ScrollingMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.widget.ProgressBar: int getProgress()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>:<public static>:<android.util.Base64>
<android.graphics.drawable.Drawable: void jumpToCurrentState()>:<public>:<android.graphics.drawable.Drawable>
<android.view.View.OnDragListener: boolean onDrag(android.view.View,android.view.DragEvent)>:<public abstract>:<android.view.View.OnDragListener>
<android.nfc.tech.NfcV: void close()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>:<public>:<android.os.DropBoxManager>
<android.widget.ScrollView: void addView(android.view.View)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.drm.DrmInfoRequest: void <init>(int,java.lang.String)>:<public>:<android.drm.DrmInfoRequest>
<android.util.Xml: android.util.Xml.Encoding findEncodingByName(java.lang.String)>:<public static>:<android.util.Xml>
<org.apache.http.client.CredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)>:<public abstract>:<org.apache.http.client.CredentialsProvider>
<android.content.Intent: void <clinit>()>:<static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.RectF: void roundOut(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.nfc.tech.MifareClassic: int sectorToBlock(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.text.format.Formatter: java.lang.String formatShortFileSize(android.content.Context,long)>:<public static>:<android.text.format.Formatter>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode valueOf(java.lang.String)>:<public static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.test.ApplicationTestCase: void terminateApplication()>:<protected final>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AdapterView: android.widget.AdapterView.OnItemLongClickListener getOnItemLongClickListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.os.Debug: void resetThreadExternalAllocSize()>:<public static>:<android.os.Debug>
<android.text.style.LeadingMarginSpan.Standard: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.widget.ViewAnimator: void removeViews(int,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebBackForwardList: int getSize()>:<public synchronized>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.view.View: void invalidate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.message.BasicHeaderValueFormatter: boolean isUnsafe(char)>:<protected>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.util.Config: void <init>()>:<>:<android.util.Config>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.view.ViewConfiguration: int getKeyRepeatDelay()>:<public static>:<android.view.ViewConfiguration>
<android.database.Cursor: double getDouble(int)>:<public abstract>:<android.database.Cursor>
<android.opengl.GLES10: void <init>()>:<public>:<android.opengl.GLES10>
<android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element.DataType,int)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.ProgressBar: void incrementSecondaryProgressBy(int)>:<public final synchronized>:<android.widget.ProgressBar:android.view.View>
<android.renderscript.FieldPacker: void addBoolean(boolean)>:<public>:<android.renderscript.FieldPacker>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine getStatusLine()>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<org.xmlpull.v1.sax2.Driver: int getLength()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>:<public>:<android.telephony.SmsManager>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.test.mock.MockResources: android.util.DisplayMetrics getDisplayMetrics()>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.Instrumentation: void start()>:<public>:<android.app.Instrumentation>
<org.apache.http.NameValuePair: java.lang.String getValue()>:<public abstract>:<org.apache.http.NameValuePair>
<android.widget.NumberPicker: int getMaxValue()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.CheckBoxPreference: boolean isChecked()>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[])>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.widget.OverScroller: void notifyHorizontalEdgeReached(int,int,int)>:<public>:<android.widget.OverScroller>
<android.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.RelativeLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursor(android.graphics.Rect)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.net.sip.SipAudioCall: void sendDtmf(int,android.os.Message)>:<public>:<android.net.sip.SipAudioCall>
<android.location.Address: void setAddressLine(int,java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.os.IBinder,int,int)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.telephony.PhoneNumberUtils: void <init>()>:<public>:<android.telephony.PhoneNumberUtils>
<android.widget.TableLayout: void addView(android.view.View)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: boolean hasFocus()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.Annotation: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>:<public>:<android.graphics.Canvas>
<android.os.Bundle: void <init>(int)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.WebSettings: int getDefaultFixedFontSize()>:<public synchronized>:<android.webkit.WebSettings>
<android.media.MediaScannerConnection: void disconnect()>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.view.View: int getSuggestedMinimumWidth()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.SmsMessage.MessageClass: void <init>(java.lang.String,int)>:<private>:<android.telephony.SmsMessage.MessageClass:java.lang.Enum>
<android.hardware.Camera.ErrorCallback: void onError(int,android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.ErrorCallback>
<android.widget.ZoomButtonsController: boolean isVisible()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.widget.DigitalClock: void onAttachedToWindow()>:<protected>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>:<public>:<android.net.ConnectivityManager>
<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>:<public>:<android.location.LocationProvider>
<android.content.Context: android.content.ComponentName startService(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.view.View.OnSystemUiVisibilityChangeListener: void onSystemUiVisibilityChange(int)>:<public abstract>:<android.view.View.OnSystemUiVisibilityChangeListener>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.os.Parcel: void <init>()>:<>:<android.os.Parcel>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>:<protected final>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)>:<public static>:<android.view.ViewDebug>
<android.content.ClipboardManager: java.lang.CharSequence getText()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.view.ViewConfiguration: int getPressedStateDuration()>:<public static>:<android.view.ViewConfiguration>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>:<public>:<android.graphics.Path>
<android.test.mock.MockContext: void startActivity(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.util.Printer: void println(java.lang.String)>:<public abstract>:<android.util.Printer>
<android.renderscript.Allocation: void <init>()>:<>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.Gallery.LayoutParams: void <init>(int,int)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.app.ActionBar.OnNavigationListener: boolean onNavigationItemSelected(int,long)>:<public abstract>:<android.app.ActionBar.OnNavigationListener>
<org.apache.http.impl.conn.DefaultHttpRoutePlanner: void <init>(org.apache.http.conn.scheme.SchemeRegistry)>:<public>:<org.apache.http.impl.conn.DefaultHttpRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>:<public static>:<android.util.Xml>
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)>:<public static>:<org.apache.http.util.EncodingUtils>
<android.net.rtp.RtpStream: void finalize()>:<protected>:<android.net.rtp.RtpStream>
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator>
<junit.framework.TestCase: java.lang.String getName()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.view.View: void setMeasuredDimension(int,int)>:<protected final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: char getMatch(char[])>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>:<public>:<org.apache.http.client.methods.HttpPut:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.widget.AbsoluteLayout.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.os.Message: android.os.Message obtain(android.os.Handler)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.graphics.Movie: void <init>()>:<>:<android.graphics.Movie>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)>:<public static>:<android.text.style.CharacterStyle>
<android.app.ExpandableListActivity: long getSelectedId()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.widget.ZoomButtonsController: boolean isAutoDismissed()>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.gesture.GestureOverlayView: void addOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>:<public>:<org.json.JSONArray>
<android.test.mock.MockResources: void getValue(java.lang.String,android.util.TypedValue,boolean)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()>:<public>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.preference.CheckBoxPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.widget.MediaController.MediaPlayerControl: void seekTo(int)>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.test.AndroidTestCase: void assertWritingContentUriRequiresPermission(android.net.Uri,java.lang.String)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.database.MergeCursor: long getLong(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.view.ViewGroup: void drawableStateChanged()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.preference.MultiSelectListPreference: void setEntryValues(java.lang.CharSequence[])>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<junit.runner.BaseTestRunner: java.lang.String elapsedTimeAsString(long)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.view.Window: boolean performContextMenuIdentifierAction(int,int)>:<public abstract>:<android.view.Window>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.view.Surface: void <clinit>()>:<static>:<android.view.Surface:android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.os.MemoryFile: void <init>(java.lang.String,int)>:<public>:<android.os.MemoryFile>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.rtp.RtpStream: int getMode()>:<public>:<android.net.rtp.RtpStream>
<android.app.Instrumentation: void waitForIdleSync()>:<public>:<android.app.Instrumentation>
<android.app.Instrumentation: void onStart()>:<public>:<android.app.Instrumentation>
<android.content.IntentFilter: int countCategories()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.text.DynamicLayout: boolean getLineContainsTab(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.inputmethodservice.Keyboard: void setVerticalGap(int)>:<protected>:<android.inputmethodservice.Keyboard>
<android.os.AsyncTask: void publishProgress(java.lang.Object[])>:<protected final transient>:<android.os.AsyncTask>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.widget.ListPopupWindow: int getSoftInputMode()>:<public>:<android.widget.ListPopupWindow>
<android.widget.DialerFilter: void setFilterWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.content.Context: java.io.File getObbDir()>:<public abstract>:<android.content.Context>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.message.BasicHttpEntityEnclosingRequest:org.apache.http.message.BasicHttpRequest,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.text.method.ReplacementTransformationMethod: void <init>()>:<public>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.test.mock.MockResources: java.lang.CharSequence getText(int,java.lang.CharSequence)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.R.plurals: void <init>()>:<public>:<android.R.plurals>
<android.renderscript.Sampler: void <init>()>:<>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost)>:<public>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.widget.ViewAnimator: void showNext()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)>:<public>:<android.gesture.GestureStore>
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.widget.TableLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.audiofx.Visualizer: boolean getEnabled()>:<public>:<android.media.audiofx.Visualizer>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>:<public static>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>:<public static>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>:<protected>:<android.util.LruCache>
<android.hardware.Camera.Parameters: java.util.List getSupportedColorEffects()>:<public>:<android.hardware.Camera.Parameters>
<android.view.KeyEvent: void <init>(int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.net.wifi.WifiConfiguration.GroupCipher: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.GroupCipher>
<android.media.MediaRecorder.VideoSource: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.VideoSource>
<android.content.pm.ResolveInfo.DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.content.pm.ResolveInfo.DisplayNameComparator:java.util.Comparator>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: boolean markSupported()>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.text.style.URLSpan: int describeContents()>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.opengl.GLES20: void glFlush()>:<public static native>:<android.opengl.GLES20>
<android.provider.ContactsContract.Contacts: void <clinit>()>:<static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.app.Service: void finalize()>:<protected>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewGroup: void dispatchSetSelected(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.cookie.BasicClientCookie2: int[] getPorts()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<android.net.sip.SipProfile: java.lang.String getUserName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Button:android.widget.TextView,android.view.View>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.view.SurfaceHolder: android.view.Surface getSurface()>:<public abstract>:<android.view.SurfaceHolder>
<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.preference.Preference: java.lang.String getKey()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.Path: void set(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.telephony.gsm.SmsMessage: boolean isCphsMwiMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.app.ActivityManager.RunningTaskInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.app.Fragment.InstantiationException: void <init>(java.lang.String,java.lang.Exception)>:<public>:<android.app.Fragment.InstantiationException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.BroadcastReceiver.PendingResult: void setResultData(java.lang.String)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.view.ViewGroup: int getPersistentDrawingCache()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.message.BasicHeaderElementIterator: void <init>(org.apache.http.HeaderIterator,org.apache.http.message.HeaderValueParser)>:<public>:<org.apache.http.message.BasicHeaderElementIterator:org.apache.http.HeaderElementIterator>
<android.inputmethodservice.Keyboard: void setKeyWidth(int)>:<protected>:<android.inputmethodservice.Keyboard>
<org.apache.http.HttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>:<public abstract>:<org.apache.http.HttpClientConnection:org.apache.http.HttpConnection>
<android.animation.Animator: boolean isRunning()>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.TrafficStats: long getTotalRxPackets()>:<public static native>:<android.net.TrafficStats>
<android.view.Surface: void finalize()>:<protected>:<android.view.Surface:android.os.Parcelable>
<android.view.InputDevice: int getSources()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.content.OperationApplicationException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.VideoView: boolean canSeekBackward()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicHeader: java.lang.String toString()>:<public>:<org.apache.http.message.BasicHeader:org.apache.http.Header,java.lang.Cloneable>
<org.apache.http.message.BasicHeaderValueParser: void <init>()>:<public>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.os.Bundle: java.util.Set keySet()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.test.mock.MockResources: java.lang.String getString(int,java.lang.Object[])>:<public transient>:<android.test.mock.MockResources:android.content.res.Resources>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void attachToken(android.os.IBinder)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.Manifest: void <init>()>:<public>:<android.Manifest>
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>:<public>:<android.media.MediaRecorder>
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.res.Configuration: int hashCode()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.opengl.Visibility: void <init>()>:<public>:<android.opengl.Visibility>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.mtp.MtpObjectInfo: int getAssociationDesc()>:<public final>:<android.mtp.MtpObjectInfo>
<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>:<protected>:<android.net.UrlQuerySanitizer>
<android.test.AndroidTestRunner: junit.framework.TestResult createTestResult()>:<protected>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>:<public>:<android.graphics.NinePatch>
<android.webkit.GeolocationPermissions: void <init>()>:<public>:<android.webkit.GeolocationPermissions>
<android.os.IInterface: android.os.IBinder asBinder()>:<public abstract>:<android.os.IInterface>
<android.content.pm.ResolveInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>:<public>:<android.content.pm.ResolveInfo.DisplayNameComparator:java.util.Comparator>
<org.apache.http.impl.auth.DigestSchemeFactory: org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.auth.DigestSchemeFactory:org.apache.http.auth.AuthSchemeFactory>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.webkit.WebView: int computeVerticalScrollOffset()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaPlayer: int getVideoWidth()>:<public native>:<android.media.MediaPlayer>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>:<public>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.content.ContentProviderResult: void <init>(android.os.Parcel)>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.widget.Scroller: void <init>(android.content.Context)>:<public>:<android.widget.Scroller>
<android.graphics.Point: void negate()>:<public final>:<android.graphics.Point>
<android.content.pm.PackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: int getVerticalScrollbarWidth()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Instrumentation: void sendStringSync(java.lang.String)>:<public>:<android.app.Instrumentation>
<android.provider.MediaStore.Audio.Playlists.Members: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Audio.Playlists.Members:android.provider.MediaStore.Audio.AudioColumns>
<org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.text.style.TextAppearanceSpan: int getTextSize()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[])>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.util.Log: int d(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.test.AndroidTestCase: android.content.Context getContext()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.location.Address: java.lang.String getPostalCode()>:<public>:<android.location.Address:android.os.Parcelable>
<android.util.SparseIntArray: void clear()>:<public>:<android.util.SparseIntArray>
<android.test.ComparisonFailure: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.ComparisonFailure:android.test.AssertionFailedError,java.lang.Error,java.lang.Throwable>
<android.renderscript.Program.TextureType: void <clinit>()>:<static>:<android.renderscript.Program.TextureType:java.lang.Enum>
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: boolean isRequestSentRetryEnabled()>:<public>:<org.apache.http.impl.client.DefaultHttpRequestRetryHandler:org.apache.http.client.HttpRequestRetryHandler>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>()>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.view.inputmethod.InputMethodSession.EventCallback: void finishedEvent(int,boolean)>:<public abstract>:<android.view.inputmethod.InputMethodSession.EventCallback>
<android.util.SparseIntArray: int indexOfKey(int)>:<public>:<android.util.SparseIntArray>
<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.AbstractAuthenticationHandler:org.apache.http.client.AuthenticationHandler>
<android.preference.Preference: void setIntent(android.content.Intent)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.net.LocalSocket: void shutdownInput()>:<public>:<android.net.LocalSocket>
<android.app.Activity: void setTitleColor(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>:<public abstract>:<org.apache.http.protocol.HttpContext>
<android.media.audiofx.BassBoost: void setProperties(android.media.audiofx.BassBoost.Settings)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebChromeClient: void onGeolocationPermissionsHidePrompt()>:<public>:<android.webkit.WebChromeClient>
<android.widget.TimePicker: void <init>(android.content.Context)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.pm.ResolveInfo.DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>:<public final>:<android.content.pm.ResolveInfo.DisplayNameComparator:java.util.Comparator>
<android.app.Notification.Builder: android.app.Notification.Builder setDeleteIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.text.style.TypefaceSpan: int getSpanTypeId()>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.mtp.MtpObjectInfo: int getAssociationType()>:<public final>:<android.mtp.MtpObjectInfo>
<android.util.JsonReader: java.lang.String nextString()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.content.ContentProvider: void onLowMemory()>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.MultiSelectListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.util.SparseIntArray: int keyAt(int)>:<public>:<android.util.SparseIntArray>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.ParcelFileDescriptor: int getFd()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.widget.Gallery: void onLongPress(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.gesture.GestureLibrary: boolean load()>:<public abstract>:<android.gesture.GestureLibrary>
<android.view.WindowManager.BadTokenException: void <init>()>:<public>:<android.view.WindowManager.BadTokenException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.WallpaperManager: void setResource(int)>:<public>:<android.app.WallpaperManager>
<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<junit.framework.TestResult: void addError(junit.framework.Test,java.lang.Throwable)>:<public synchronized>:<junit.framework.TestResult>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.widget.NumberPicker: void setMinValue(int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicHeaderElementIterator: void remove()>:<public>:<org.apache.http.message.BasicHeaderElementIterator:org.apache.http.HeaderElementIterator>
<android.database.sqlite.SQLiteAccessPermException: void <init>()>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>:<public static>:<android.graphics.Typeface>
<android.util.JsonWriter: android.util.JsonWriter nullValue()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<org.apache.http.impl.SocketHttpClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.view.Surface.OutOfResourcesException: void <init>(java.lang.String)>:<public>:<android.view.Surface.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.test.mock.MockCursor: long getLong(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.AbsListView: void smoothScrollToPosition(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.conn.EofSensorInputStream: void checkClose()>:<protected>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.test.mock.MockContext: java.lang.String getPackageResourcePath()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.ActivityUnitTestCase: void setUp()>:<protected>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.test.mock.MockCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser)>:<public static final>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.database.AbstractCursor: android.net.Uri getNotificationUri()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.Window: void setContentView(int)>:<public abstract>:<android.view.Window>
<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.ImageView.ScaleType: void <init>(java.lang.String,int)>:<private>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.widget.PopupWindow.OnDismissListener: void onDismiss()>:<public abstract>:<android.widget.PopupWindow.OnDismissListener>
<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.AbstractCursor: int getColumnCount()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.nfc.tech.MifareUltralight: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.util.Base64InputStream: void reset()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<org.apache.http.impl.EnglishReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)>:<public>:<org.apache.http.impl.EnglishReasonPhraseCatalog:org.apache.http.ReasonPhraseCatalog>
<android.opengl.GLES10: void glFogx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteProgram: void compile(java.lang.String,boolean)>:<protected>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.backup.BackupAgent: void onDestroy()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.text.StaticLayout: int getLineTop(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<org.apache.http.impl.io.ContentLengthOutputStream: void close()>:<public>:<org.apache.http.impl.io.ContentLengthOutputStream:java.io.OutputStream>
<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)>:<public static>:<android.provider.MediaStore>
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera.ErrorCallback)>:<public final>:<android.hardware.Camera>
<android.view.View.DragShadowBuilder: void onDrawShadow(android.graphics.Canvas)>:<public>:<android.view.View.DragShadowBuilder>
<android.content.ContentQueryMap: void close()>:<public synchronized>:<android.content.ContentQueryMap:java.util.Observable>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.os.Debug: void resetThreadExternalAllocCount()>:<public static>:<android.os.Debug>
<android.graphics.drawable.shapes.ArcShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.ArcShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.graphics.Paint.Align: void <init>(java.lang.String,int)>:<private>:<android.graphics.Paint.Align:java.lang.Enum>
<android.accessibilityservice.AccessibilityServiceInfo: void <init>()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.media.audiofx.Equalizer.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.Equalizer.Settings>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>:<public final transient>:<android.os.AsyncTask>
<android.renderscript.ProgramStore.DepthFunc: void <clinit>()>:<static>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.FieldPacker: void addU8(short)>:<public>:<android.renderscript.FieldPacker>
<android.hardware.usb.UsbInterface: int getId()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.json.JSONObject: void <init>()>:<public>:<org.json.JSONObject>
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.content.pm.PackageManager: void removePackageFromPreferred(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession.Listener)>:<public>:<android.net.sip.SipManager>
<android.opengl.GLES20: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaPlayer.OnVideoSizeChangedListener: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnVideoSizeChangedListener>
<android.view.Window: int getFeatures()>:<protected final>:<android.view.Window>
<android.widget.AdapterViewFlipper: boolean isAutoStart()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.provider.Settings.System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<org.apache.http.protocol.RequestContent: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.RequestContent:org.apache.http.HttpRequestInterceptor>
<android.test.mock.MockResources: java.lang.CharSequence getQuantityText(int,int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.content.Intent: java.lang.String getScheme()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.preference.Preference: void saveHierarchyState(android.os.Bundle)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.appwidget.AppWidgetProviderInfo: void <init>()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.os.Message: android.os.Handler getTarget()>:<public>:<android.os.Message:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void <init>()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>:<public>:<android.graphics.SweepGradient:android.graphics.Shader>
<android.location.Criteria: void <clinit>()>:<static>:<android.location.Criteria:android.os.Parcelable>
<android.test.mock.MockCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.os.Debug.MemoryInfo: int getTotalPrivateDirty()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<org.apache.http.params.HttpConnectionParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.params.HttpConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.widget.AbsListView: void smoothScrollBy(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.MemoryFile: boolean allowPurging(boolean)>:<public synchronized>:<android.os.MemoryFile>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>:<public static>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.util.MonthDisplayHelper: int getFirstDayOfMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.widget.ExpandableListAdapter: long getCombinedGroupId(long)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<org.apache.http.io.HttpMessageParser: org.apache.http.HttpMessage parse()>:<public abstract>:<org.apache.http.io.HttpMessageParser>
<android.content.Context: int checkCallingPermission(java.lang.String)>:<public abstract>:<android.content.Context>
<android.hardware.Camera.Parameters: int getPictureFormat()>:<public>:<android.hardware.Camera.Parameters>
<android.app.SearchManager.OnDismissListener: void onDismiss()>:<public abstract>:<android.app.SearchManager.OnDismissListener>
<android.view.ViewGroup.MarginLayoutParams: void setMargins(int,int,int,int)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.app.ProgressDialog: void incrementProgressBy(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.Parcel: void writeIntArray(int[])>:<public final>:<android.os.Parcel>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.content.CursorLoader: void deliverResult(java.lang.Object)>:<public volatile>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewConfiguration: int getScrollBarFadeDuration()>:<public static>:<android.view.ViewConfiguration>
<android.os.Debug: int getGlobalFreedSize()>:<public static>:<android.os.Debug>
<android.app.Dialog: void onContentChanged()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>:<public abstract>:<org.apache.http.auth.Credentials>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.View: void invalidate(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.test.mock.MockResources: int getDimensionPixelOffset(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.text.style.SuperscriptSpan: int describeContents()>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.Fragment: java.lang.CharSequence getText(int)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.drm.DrmInfo: java.util.Iterator iterator()>:<public>:<android.drm.DrmInfo>
<android.app.SearchableInfo: int getSuggestThreshold()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.util.Base64: byte[] decode(byte[],int,int,int)>:<public static>:<android.util.Base64>
<android.widget.GridView: int getStretchMode()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.Configuration: void <clinit>()>:<static>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.opengl.GLES11: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Service: void onStart(android.content.Intent,int)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.graphics.Rect: int width()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<junit.framework.Assert: void assertEquals(java.lang.String,int,int)>:<public static>:<junit.framework.Assert>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>:<public>:<android.media.ExifInterface>
<android.app.backup.FileBackupHelperBase: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FileBackupHelperBase>
<android.content.Intent: android.graphics.Rect getSourceBounds()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.WebSettings: boolean getAllowContentAccess()>:<public>:<android.webkit.WebSettings>
<android.database.CursorJoiner.Result: void <clinit>()>:<static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<android.renderscript.RSSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View.OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>:<public abstract>:<android.view.View.OnTouchListener>
<android.widget.Toast: int getXOffset()>:<public>:<android.widget.Toast>
<android.graphics.Paint.FontMetricsInt: void <init>()>:<public>:<android.graphics.Paint.FontMetricsInt>
<android.widget.ListPopupWindow: void setInputMethodMode(int)>:<public>:<android.widget.ListPopupWindow>
<android.animation.PropertyValuesHolder: java.lang.Object clone()>:<public volatile>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.VelocityTracker: void <init>()>:<>:<android.view.VelocityTracker>
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>:<protected>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.KeyEvent.DispatcherState: void performedLongPress(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.content.BroadcastReceiver.PendingResult: void setResultExtras(android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)>:<public static>:<android.text.TextUtils>
<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>:<public>:<org.apache.http.message.BasicStatusLine:org.apache.http.StatusLine,java.lang.Cloneable>
<android.renderscript.FileA3D.IndexEntry: java.lang.String getName()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater.Factory2)>:<public>:<android.view.LayoutInflater>
<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>:<public>:<android.webkit.WebChromeClient>
<android.content.pm.PackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>:<public abstract>:<android.content.pm.PackageManager>
<org.apache.http.client.params.ClientParamBean: void setDefaultHeaders(java.util.Collection)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<org.json.JSONArray: boolean optBoolean(int)>:<public>:<org.json.JSONArray>
<android.database.AbstractCursor: boolean moveToPrevious()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.AutoCompleteTextView: void setThreshold(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.os.PatternMatcher: java.lang.String toString()>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.view.Surface: void setMatrix(float,float,float,float)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>:<public>:<android.location.LocationManager>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>:<public>:<android.media.Ringtone>
<org.apache.http.protocol.HttpRequestHandlerResolver: org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String)>:<public abstract>:<org.apache.http.protocol.HttpRequestHandlerResolver>
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)>:<public>:<android.os.TokenWatcher>
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] getParameters()>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.widget.RemoteViewsService: android.os.IBinder onBind(android.content.Intent)>:<public>:<android.widget.RemoteViewsService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.xmlpull.v1.sax2.Driver: void setProperty(java.lang.String,java.lang.Object)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.widget.QuickContactBadge: void drawableStateChanged()>:<protected>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat[] values()>:<public static>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<org.apache.http.util.VersionInfo: java.lang.String getClassloader()>:<public final>:<org.apache.http.util.VersionInfo>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setPassword(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()>:<public static>:<android.media.JetPlayer>
<android.content.ContentProviderOperation: void <init>()>:<>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.view.ActionMode: void setSubtitle(java.lang.CharSequence)>:<public abstract>:<android.view.ActionMode>
<android.speech.RecognitionService.Callback: void partialResults(android.os.Bundle)>:<public>:<android.speech.RecognitionService.Callback>
<android.widget.AbsListView: int getListPaddingTop()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteClosedConnections()>:<public>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.net.LocalServerSocket>
<org.apache.http.conn.BasicManagedEntity: void releaseConnection()>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.widget.TableLayout: boolean isColumnStretchable(int)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.animation.Animator: java.lang.Object clone()>:<public volatile>:<android.animation.Animator:java.lang.Cloneable>
<android.app.NativeActivity: void onWindowFocusChanged(boolean)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.preference.PreferenceManager: void <init>()>:<>:<android.preference.PreferenceManager>
<android.view.View: void getHitRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>:<public final>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>:<public abstract>:<android.content.Context>
<android.location.Location: double getAltitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.text.util.Rfc822Token: int hashCode()>:<public>:<android.text.util.Rfc822Token>
<android.widget.AbsListView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.io.HttpTransportMetrics: void reset()>:<public abstract>:<org.apache.http.io.HttpTransportMetrics>
<android.widget.HorizontalScrollView: void computeScroll()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_FRONT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.preference.PreferenceActivity: void onDestroy()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>:<public>:<android.webkit.WebSettings>
<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.graphics.Paint.Join: void <init>(java.lang.String,int)>:<private>:<android.graphics.Paint.Join:java.lang.Enum>
<org.apache.http.cookie.SetCookie: void setVersion(int)>:<public abstract>:<org.apache.http.cookie.SetCookie:org.apache.http.cookie.Cookie>
<android.content.ComponentName: java.lang.String flattenToShortString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.widget.TextView: void setGravity(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.res.AssetFileDescriptor: void close()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.os.Bundle: char getChar(java.lang.String,char)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>:<public>:<android.app.Instrumentation>
<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>:<protected>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.app.Activity: void onDestroy()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<org.apache.http.impl.entity.StrictContentLengthStrategy: void <init>()>:<public>:<org.apache.http.impl.entity.StrictContentLengthStrategy:org.apache.http.entity.ContentLengthStrategy>
<android.test.ServiceTestCase: void shutdownService()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.util.FloatMath: float ceil(float)>:<public static native>:<android.util.FloatMath>
<android.hardware.Camera.ShutterCallback: void onShutter()>:<public abstract>:<android.hardware.Camera.ShutterCallback>
<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>:<public abstract>:<android.content.ServiceConnection>
<android.nfc.tech.Ndef: boolean isWritable()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.SurfaceView:android.view.View>
<android.graphics.ColorMatrix: void setYUV2RGB()>:<public>:<android.graphics.ColorMatrix>
<android.view.animation.Animation: void <init>()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.content.pm.PermissionInfo: void <init>()>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.MediaController.MediaPlayerControl: int getDuration()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES11: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>:<protected>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.widget.OverScroller: void startScroll(int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.app.DialogFragment: void onDetach()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.location.Criteria: int describeContents()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.SipAddress:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.ContentProviderOperation: int describeContents()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.util.MonthDisplayHelper: int getColumnOf(int)>:<public>:<android.util.MonthDisplayHelper>
<android.widget.DatePicker: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>:<public static>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.webkit.WebView: int getProgress()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.io.SessionInputBuffer: java.lang.String readLine()>:<public abstract>:<org.apache.http.io.SessionInputBuffer>
<android.text.BoringLayout: int getLineStart(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.media.CamcorderProfile: boolean hasProfile(int)>:<public static>:<android.media.CamcorderProfile>
<android.preference.PreferenceActivity.Header: void <clinit>()>:<static>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.test.MoreAsserts: java.util.regex.MatchResult assertMatchesRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<dalvik.system.DexClassLoader: java.net.URL findResource(java.lang.String)>:<protected>:<dalvik.system.DexClassLoader:java.lang.ClassLoader>
<android.util.Xml.Encoding: void <clinit>()>:<static>:<android.util.Xml.Encoding:java.lang.Enum>
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public final>:<android.content.ContentResolver>
<junit.framework.TestSuite: void <init>()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.graphics.ColorMatrix: void reset()>:<public>:<android.graphics.ColorMatrix>
<android.media.AudioRecord: int getSampleRate()>:<public>:<android.media.AudioRecord>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>:<public static>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void revokeSelf()>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.database.MatrixCursor: void <init>(java.lang.String[],int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<org.apache.http.impl.auth.DigestScheme: boolean isComplete()>:<public>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>:<public>:<org.json.JSONObject>
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>:<public final>:<android.telephony.gsm.SmsManager>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>:<protected>:<android.database.sqlite.SQLiteClosable>
<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.view.MotionEvent: java.lang.String toString()>:<public>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.util.CharArrayBuffer: boolean isEmpty()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.test.TestSuiteProvider: junit.framework.TestSuite getTestSuite()>:<public abstract>:<android.test.TestSuiteProvider>
<android.text.method.ReplacementTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>:<public>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.test.mock.MockContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser)>:<public static final>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.ExifInterface: void saveAttributes()>:<public>:<android.media.ExifInterface>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.message.BasicLineParser: void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<protected>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.widget.PopupWindow: boolean isShowing()>:<public>:<android.widget.PopupWindow>
<android.app.Fragment: void onDetach()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.preference.PreferenceActivity: void switchToHeader(android.preference.PreferenceActivity.Header)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.message.AbstractHttpMessage: void setHeaders(org.apache.http.Header[])>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.graphics.Paint: float getTextSize()>:<public native>:<android.graphics.Paint>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEvent(int)>:<public abstract>:<android.view.accessibility.AccessibilityEventSource>
<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Parcel: void setDataPosition(int)>:<public final native>:<android.os.Parcel>
<org.json.JSONObject: void <init>(java.util.Map)>:<public>:<org.json.JSONObject>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>:<public>:<android.media.RingtoneManager>
<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>:<public>:<android.net.LocalSocket>
<android.widget.TextView: void onDetachedFromWindow()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur[] values()>:<public static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.util.DebugUtils: boolean isObjectSelected(java.lang.Object)>:<public static>:<android.util.DebugUtils>
<android.test.mock.MockCursor: boolean moveToLast()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean,org.apache.http.conn.routing.RouteInfo.TunnelType,org.apache.http.conn.routing.RouteInfo.LayerType)>:<public>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.os.Debug: void enableEmulatorTraceOutput()>:<public static>:<android.os.Debug>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withYieldAllowed(boolean)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>:<public static>:<android.text.TextUtils>
<android.widget.ResourceCursorAdapter: void setViewResource(int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.widget.FrameLayout: void setForegroundGravity(int)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.util.CharArrayBuffer: int indexOf(int,int,int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.app.ActionBar.Tab: void select()>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.AliasActivity: void <init>()>:<public>:<android.app.AliasActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>:<public>:<android.app.admin.DevicePolicyManager>
<org.apache.http.impl.conn.SingleClientConnManager: void shutdown()>:<public>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.content.IntentFilter.AuthorityEntry: java.lang.String getHost()>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.widget.ViewSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory2 getFactory2()>:<public final>:<android.view.LayoutInflater>
<android.graphics.Rect: void <init>()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<org.json.JSONObject: void <clinit>()>:<static>:<org.json.JSONObject>
<android.content.res.Configuration: boolean equals(java.lang.Object)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.os.DeadObjectException: void <init>()>:<public>:<android.os.DeadObjectException:android.os.RemoteException,android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.widget.TabHost.TabContentFactory: android.view.View createTabContent(java.lang.String)>:<public abstract>:<android.widget.TabHost.TabContentFactory>
<android.hardware.SensorManager: void <init>()>:<>:<android.hardware.SensorManager>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLES20: void glFinish()>:<public static native>:<android.opengl.GLES20>
<android.view.View: android.content.res.Resources getResources()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.client.protocol.RequestTargetAuthentication: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.client.protocol.RequestTargetAuthentication:org.apache.http.HttpRequestInterceptor>
<android.bluetooth.BluetoothClass: int hashCode()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.content.pm.PackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenStart(java.lang.CharSequence,int)>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.net.sip.SipSession.Listener: void onError(android.net.sip.SipSession,int,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.net.ParseException: void <init>()>:<>:<android.net.ParseException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.test.mock.MockPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>:<public final>:<android.view.ViewTreeObserver>
<org.apache.http.impl.cookie.CookieSpecBase: void <init>()>:<public>:<org.apache.http.impl.cookie.CookieSpecBase:org.apache.http.impl.cookie.AbstractCookieSpec>
<org.apache.http.message.BasicHeaderValueFormatter: void <clinit>()>:<static>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.test.mock.MockPackageManager: java.util.List getAllPermissionGroups(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.Interpolator>
<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)>:<public>:<android.nfc.NfcAdapter>
<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.graphics.drawable.PaintDrawable: void <init>(int)>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.preference.PreferenceActivity: void onStop()>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<org.apache.http.message.HeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean)>:<public abstract>:<org.apache.http.message.HeaderValueFormatter>
<android.util.Base64InputStream: void <init>(java.io.InputStream,int)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.location.Location: void setTime(long)>:<public>:<android.location.Location:android.os.Parcelable>
<android.drm.DrmManagerClient: int acquireRights(android.drm.DrmInfoRequest)>:<public>:<android.drm.DrmManagerClient>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>:<public abstract>:<android.gesture.GestureOverlayView.OnGesturingListener>
<android.widget.AbsListView: void drawableStateChanged()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.util.SparseBooleanArray: void clear()>:<public>:<android.util.SparseBooleanArray>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.SearchManager: void stopSearch()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType valueOf(java.lang.String)>:<public static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.UnsupportedHttpVersionException: void <init>(java.lang.String)>:<public>:<org.apache.http.UnsupportedHttpVersionException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.inputmethodservice.InputMethodService: void onUnbindInput()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES20>
<android.test.MoreAsserts: void checkEqualsAndHashCodeMethods(java.lang.String,java.lang.Object,java.lang.Object,boolean)>:<public static>:<android.test.MoreAsserts>
<org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.location.LocationListener: void onProviderDisabled(java.lang.String)>:<public abstract>:<android.location.LocationListener>
<android.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.media.audiofx.BassBoost: short getRoundedStrength()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.net.sip.SipProfile.Builder: void <init>(java.lang.String,java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.app.Activity: android.view.WindowManager getWindowManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.text.format.DateUtils: boolean isToday(long)>:<public static>:<android.text.format.DateUtils>
<android.inputmethodservice.InputMethodService: void onWindowHidden()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.cookie.AbstractCookieAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.AbstractCookieAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<org.apache.http.ProtocolVersion: boolean greaterEquals(org.apache.http.ProtocolVersion)>:<public final>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.view.Display: int getPixelFormat()>:<public>:<android.view.Display>
<android.widget.CursorTreeAdapter: void setChildrenCursor(int,android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.Gallery: boolean showContextMenu()>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.bluetooth.BluetoothClass: void <init>()>:<>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.view.ViewGroup: void detachViewFromParent(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short2)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.WallpaperInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.content.Loader: boolean takeContentChanged()>:<public>:<android.content.Loader>
<android.net.NetworkInfo: java.lang.String getTypeName()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.Element: android.renderscript.Element RGBA_8888(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.graphics.drawable.GradientDrawable.Orientation: android.graphics.drawable.GradientDrawable.Orientation[] values()>:<public static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void setIdleDuration(long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<org.apache.http.cookie.Cookie: int getVersion()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Region: boolean isRect()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.audiofx.BassBoost: void setStrength(short)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.os.Handler: java.lang.String toString()>:<public>:<android.os.Handler>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.webkit.ConsoleMessage.MessageLevel: void <init>(java.lang.String,int)>:<private>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>:<public static>:<android.telephony.SmsMessage>
<org.apache.http.auth.AuthScope: int hashCode()>:<public>:<org.apache.http.auth.AuthScope>
<android.opengl.GLES10: void glMatrixMode(int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.cookie.CookieIdentityComparator: int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie)>:<public>:<org.apache.http.cookie.CookieIdentityComparator:java.io.Serializable,java.util.Comparator>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.app.ListFragment: void setEmptyText(java.lang.CharSequence)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.Builder>
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.database.Observable: void <init>()>:<public>:<android.database.Observable>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener)>:<public>:<android.view.ScaleGestureDetector>
<android.opengl.GLES20: void glDrawElements(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.net.UrlQuerySanitizer.ParameterValuePair: void <init>(android.net.UrlQuerySanitizer,java.lang.String,java.lang.String)>:<public>:<android.net.UrlQuerySanitizer.ParameterValuePair>
<android.test.mock.MockCursor: boolean move(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.BroadcastReceiver: int getResultCode()>:<public final>:<android.content.BroadcastReceiver>
<android.location.Location: void set(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.TabHost.OnTabChangeListener: void onTabChanged(java.lang.String)>:<public abstract>:<android.widget.TabHost.OnTabChangeListener>
<android.app.Dialog: void setTitle(java.lang.CharSequence)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.SimpleExpandableListAdapter: boolean hasStableIds()>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.renderscript.FileA3D: void destroy()>:<public volatile>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.AlphabetIndexer: void onInvalidated()>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.graphics.Xfermode: void finalize()>:<protected>:<android.graphics.Xfermode>
<org.apache.http.client.RedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.RedirectHandler>
<android.view.View: void postInvalidateDelayed(long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.app.FragmentManager.BackStackEntry: int getId()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<android.opengl.GLES10: void glMaterialf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.Object)>:<public>:<android.database.MatrixCursor.RowBuilder>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<org.apache.http.impl.conn.AbstractPoolEntry: void setState(java.lang.Object)>:<public>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.json.JSONObject: long getLong(java.lang.String)>:<public>:<org.json.JSONObject>
<android.net.wifi.WifiManager.WifiLock: void setReferenceCounted(boolean)>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.media.AudioRecord: int getNotificationMarkerPosition()>:<public>:<android.media.AudioRecord>
<android.renderscript.Matrix2f: void loadRotate(float)>:<public>:<android.renderscript.Matrix2f>
<org.apache.http.impl.client.AbstractHttpClient: void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.text.method.DateKeyListener: void <init>()>:<public>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.app.TabActivity: void onPostCreate(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog create()>:<public>:<android.app.AlertDialog.Builder>
<android.view.InputEvent: int describeContents()>:<public>:<android.view.InputEvent:android.os.Parcelable>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.text.ClipboardManager: java.lang.CharSequence getText()>:<public abstract>:<android.text.ClipboardManager>
<android.content.Intent: double getDoubleExtra(java.lang.String,double)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.WebSettings: boolean getSavePassword()>:<public>:<android.webkit.WebSettings>
<org.json.JSONException: void <init>(java.lang.String)>:<public>:<org.json.JSONException:java.lang.Exception,java.lang.Throwable>
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>:<public>:<android.media.SoundPool>
<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ListView: void onFinishInflate()>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.TypedArray: android.content.res.Resources getResources()>:<public>:<android.content.res.TypedArray>
<android.net.sip.SipSession.Listener: void <init>()>:<public>:<android.net.sip.SipSession.Listener>
<android.content.pm.ApplicationInfo.DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.content.pm.ApplicationInfo.DisplayNameComparator:java.util.Comparator>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: java.lang.Object getState()>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>:<protected>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.widget.AbsSeekBar: void <init>(android.content.Context)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.Orientation,int[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<org.json.JSONTokener: java.lang.String nextString(char)>:<public>:<org.json.JSONTokener>
<android.database.Observable: void unregisterAll()>:<public>:<android.database.Observable>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>:<public abstract>:<android.view.SurfaceHolder>
<android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: float getHistoricalY(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)>:<public>:<android.media.AudioRecord>
<android.renderscript.Mesh.Primitive: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<org.apache.http.impl.cookie.BestMatchSpec: java.util.List formatCookies(java.util.List)>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<android.widget.HeaderViewListAdapter: int getCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.AdapterViewAnimator: void advance()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>:<public abstract>:<org.apache.http.conn.scheme.LayeredSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<org.apache.http.util.CharArrayBuffer: void append(org.apache.http.util.ByteArrayBuffer,int,int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.app.ActionBar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.TabWidget: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<org.apache.http.protocol.RequestExpectContinue: void <init>()>:<public>:<org.apache.http.protocol.RequestExpectContinue:org.apache.http.HttpRequestInterceptor>
<android.app.ProgressDialog: void onStart()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.Activity: void onDetachedFromWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.SoundPool: void resume(int)>:<public final native>:<android.media.SoundPool>
<android.view.inputmethod.InputMethodInfo: void <clinit>()>:<static>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.os.Parcel: byte readByte()>:<public final>:<android.os.Parcel>
<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType1Msg(java.lang.String,java.lang.String)>:<public abstract>:<org.apache.http.impl.auth.NTLMEngine>
<android.app.LauncherActivity.IconResizer: void <init>(android.app.LauncherActivity)>:<public>:<android.app.LauncherActivity.IconResizer>
<android.media.MediaScannerConnection: void onServiceDisconnected(android.content.ComponentName)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addTexture(android.renderscript.Program.TextureType)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.text.SpannedString: int getSpanStart(java.lang.Object)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.media.audiofx.EnvironmentalReverb: void setDiffusion(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.opengl.GLES10: void glNormal3x(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.app.Fragment: boolean isInLayout()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.view.View: void setDrawingCacheEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.Animation.AnimationListener: void onAnimationEnd(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.text.method.BaseMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.GridView: void setHorizontalSpacing(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.Address: void setLongitude(double)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.View: float getLeftFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseExpandableListAdapter: void onGroupExpanded(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.accounts.Account: boolean equals(java.lang.Object)>:<public>:<android.accounts.Account:android.os.Parcelable>
<org.apache.http.protocol.UriPatternMatcher: void unregister(java.lang.String)>:<public>:<org.apache.http.protocol.UriPatternMatcher>
<org.apache.http.impl.cookie.DateUtils: java.lang.String formatDate(java.util.Date)>:<public static>:<org.apache.http.impl.cookie.DateUtils>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>:<public>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.text.style.RasterizerSpan: void <init>(android.graphics.Rasterizer)>:<public>:<android.text.style.RasterizerSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<org.apache.http.impl.cookie.RFC2109Spec: org.apache.http.Header getVersionHeader()>:<public>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>:<public abstract>:<org.apache.http.auth.AuthScheme>
<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>:<public>:<android.app.Instrumentation>
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.AbsListView: void setFastScrollEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.EditText: boolean getDefaultEditable()>:<protected>:<android.widget.EditText:android.widget.TextView,android.view.View>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>:<protected>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.test.ActivityInstrumentationTestCase: void testActivityTestCaseSetUpProperly()>:<public>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.widget.TextView.SavedState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.test.SingleLaunchActivityTestCase: android.app.Activity getActivity()>:<public>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.Window: void addFlags(int)>:<public>:<android.view.Window>
<android.widget.NumberPicker: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Rect: int describeContents()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.inputmethodservice.KeyboardView: void closing()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.RatingBar: void setMax(int)>:<public synchronized>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.test.ActivityInstrumentationTestCase2: void setActivityIntent(android.content.Intent)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>:<public transient>:<android.animation.AnimatorSet:android.animation.Animator>
<android.animation.AnimatorListenerAdapter: void onAnimationCancel(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener>
<android.view.MenuItem: android.view.MenuItem setShortcut(char,char)>:<public abstract>:<android.view.MenuItem>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.text.util.Rfc822Tokenizer: void tokenize(java.lang.CharSequence,java.util.Collection)>:<public static>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.view.MenuItem: char getAlphabeticShortcut()>:<public abstract>:<android.view.MenuItem>
<android.graphics.drawable.ScaleDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.KeyCharacterMap: int get(int,int)>:<public>:<android.view.KeyCharacterMap>
<org.apache.http.impl.DefaultHttpRequestFactory: void <init>()>:<public>:<org.apache.http.impl.DefaultHttpRequestFactory:org.apache.http.HttpRequestFactory>
<android.graphics.ColorFilter: void finalize()>:<protected>:<android.graphics.ColorFilter>
<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>:<public>:<org.json.JSONArray>
<android.text.style.StyleSpan: int getStyle()>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.location.Address: java.lang.String getThoroughfare()>:<public>:<android.location.Address:android.os.Parcelable>
<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.protocol.HttpRequestInterceptorList: void setInterceptors(java.util.List)>:<public abstract>:<org.apache.http.protocol.HttpRequestInterceptorList>
<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.KeyEvent.Callback: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.net.Uri: android.net.Uri.Builder buildUpon()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State valueOf(java.lang.String)>:<public static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.nfc.tech.NfcB: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.renderscript.Type: int getZ()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<org.apache.http.impl.client.TunnelRefusedException: void <init>(java.lang.String,org.apache.http.HttpResponse)>:<public>:<org.apache.http.impl.client.TunnelRefusedException:org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.PeriodicSync: int describeContents()>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.view.KeyEvent: int getDeadChar(int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>()>:<public>:<android.view.SurfaceHolder.BadSurfaceTypeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.ContextThemeWrapper: void <init>()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.renderscript.FieldPacker: void addI8(byte)>:<public>:<android.renderscript.FieldPacker>
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()>:<public static>:<android.net.rtp.AudioCodec>
<android.content.SharedPreferences: android.content.SharedPreferences.Editor edit()>:<public abstract>:<android.content.SharedPreferences>
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.test.mock.MockPackageManager: int checkPermission(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.CursorTreeAdapter: void notifyDataSetInvalidated()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>:<public static native>:<android.net.TrafficStats>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPictureSize()>:<public>:<android.hardware.Camera.Parameters>
<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Dialog: void registerForContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<org.apache.http.cookie.CookieIdentityComparator: void <init>()>:<public>:<org.apache.http.cookie.CookieIdentityComparator:java.io.Serializable,java.util.Comparator>
<org.apache.http.message.BasicHeaderValueFormatter: void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean)>:<protected>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.CursorWrapper: void close()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.apache.http.client.params.CookiePolicy: void <init>()>:<>:<org.apache.http.client.params.CookiePolicy>
<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.net.LocalSocket>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void flush()>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.opengl.GLES10: void glShadeModel(int)>:<public static native>:<android.opengl.GLES10>
<android.widget.CompoundButton: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.nfc.tech.TagTechnology: android.nfc.Tag getTag()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.Intent: void removeCategory(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.HttpResponse: void setLocale(java.util.Locale)>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.media.audiofx.PresetReverb.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.widget.TextView: int getCurrentTextColor()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.ActionBar.Tab: java.lang.Object getTag()>:<public abstract>:<android.app.ActionBar.Tab>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>:<public>:<android.app.ActivityManager>
<android.webkit.GeolocationPermissions.Callback: void invoke(java.lang.String,boolean,boolean)>:<public abstract>:<android.webkit.GeolocationPermissions.Callback>
<android.graphics.drawable.GradientDrawable: void setColor(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockResources: java.lang.CharSequence getText(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.app.Notification.Builder: android.app.Notification.Builder setVibrate(long[])>:<public>:<android.app.Notification.Builder>
<android.widget.TextView: void setMinEms(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.Drawable: int getOpacity()>:<public abstract>:<android.graphics.drawable.Drawable>
<android.widget.RatingBar: void setRating(float)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View: int computeVerticalScrollExtent()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer.Settings getProperties()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.view.Window.Callback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public abstract>:<android.view.Window.Callback>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.animation.FloatEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public>:<android.animation.FloatEvaluator:android.animation.TypeEvaluator>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.net.wifi.WifiConfiguration.PairwiseCipher: void <init>()>:<>:<android.net.wifi.WifiConfiguration.PairwiseCipher>
<org.apache.http.impl.HttpConnectionMetricsImpl: long getResponseCount()>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.nfc.tech.IsoDep: void <init>()>:<>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator iterator()>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager.OnCancelListener)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.ListPopupWindow>
<android.content.Loader: int getId()>:<public>:<android.content.Loader>
<android.content.Context: java.lang.String[] fileList()>:<public abstract>:<android.content.Context>
<android.view.ViewGroup: void dispatchVisibilityChanged(android.view.View,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekForward()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace[] values()>:<public static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.util.DebugUtils: void <init>()>:<>:<android.util.DebugUtils>
<android.content.res.AssetManager.AssetInputStream: long skip(long)>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.renderscript.Sampler.Builder: void setAnisotropy(float)>:<public>:<android.renderscript.Sampler.Builder>
<android.widget.ImageView: void clearColorFilter()>:<public final>:<android.widget.ImageView:android.view.View>
<android.database.CursorWindow: void <init>(boolean)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.NumberPicker: void setOnScrollListener(android.widget.NumberPicker.OnScrollListener)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable.Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<android.widget.ListView: void setCacheColorHint(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder includeAllPackagesUnderHere()>:<public final>:<android.test.suitebuilder.TestSuiteBuilder>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.provider.Settings.System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.database.MergeCursor: double getDouble(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.webkit.WebSettings: boolean getBlockNetworkLoads()>:<public synchronized>:<android.webkit.WebSettings>
<android.preference.Preference: java.lang.String getDependency()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.util.SparseBooleanArray: void put(int,boolean)>:<public>:<android.util.SparseBooleanArray>
<android.telephony.ServiceState: void <clinit>()>:<static>:<android.telephony.ServiceState:android.os.Parcelable>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)>:<public>:<android.drm.DrmManagerClient>
<android.database.DatabaseUtils.InsertHelper: void bind(int,double)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.app.FragmentBreadCrumbs: void setTitle(java.lang.CharSequence,java.lang.CharSequence)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.graphics.Rect: void offset(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.test.mock.MockPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.util.SparseArray: int keyAt(int)>:<public>:<android.util.SparseArray>
<android.content.BroadcastReceiver: boolean isOrderedBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.widget.CursorTreeAdapter: int getGroupCount()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<org.apache.http.message.AbstractHttpMessage: void removeHeaders(java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.view.MotionEvent: float getHistoricalToolMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.CursorLoader: void onCanceled(java.lang.Object)>:<public volatile>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.os.Debug: long getNativeHeapAllocatedSize()>:<public static native>:<android.os.Debug>
<android.view.View: int getRightPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ServiceTestCase: void setUp()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.AsyncTask: java.lang.Object doInBackground(java.lang.Object[])>:<protected abstract transient>:<android.os.AsyncTask>
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>:<public>:<android.webkit.WebSettings>
<android.content.ComponentName: java.lang.String getPackageName()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.media.AudioManager: void setMode(int)>:<public>:<android.media.AudioManager>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.PopupMenu.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.widget.PopupMenu.OnMenuItemClickListener>
<android.view.View: void getLocationOnScreen(int[])>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.SuperscriptSpan: int getSpanTypeId()>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.AdapterViewFlipper: void onWindowVisibilityChanged(int)>:<protected>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: void setIntValues(int[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.AbsSpinner: void <init>(android.content.Context)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>:<public static final>:<android.provider.Browser>
<junit.framework.TestSuite: void setName(java.lang.String)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectActivityLeaks()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.test.suitebuilder.TestMethod: java.lang.String getEnclosingClassname()>:<public>:<android.test.suitebuilder.TestMethod>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.AbsListView.MultiChoiceModeListener: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>:<public abstract>:<android.widget.AbsListView.MultiChoiceModeListener:android.view.ActionMode.Callback>
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.R.attr: void <init>()>:<public>:<android.R.attr>
<android.content.SharedPreferences: int getInt(java.lang.String,int)>:<public abstract>:<android.content.SharedPreferences>
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>:<public>:<android.hardware.usb.UsbManager>
<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<org.json.JSONArray: int optInt(int,int)>:<public>:<org.json.JSONArray>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect)>:<public>:<android.graphics.NinePatch>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>:<public>:<android.view.animation.LayoutAnimationController>
<android.database.sqlite.SQLiteProgram: void bindNull(int)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.widget.SearchView: void onMeasure(int,int)>:<protected>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.app.Activity: void showDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>:<public>:<android.graphics.drawable.Drawable>
<android.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>:<public static final>:<android.text.util.Linkify>
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.graphics.Rect: float exactCenterY()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<android.preference.Preference.OnPreferenceClickListener: boolean onPreferenceClick(android.preference.Preference)>:<public abstract>:<android.preference.Preference.OnPreferenceClickListener>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.text.style.UnderlineSpan: void <init>()>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.webkit.WebSettings: boolean enableSmoothTransition()>:<public>:<android.webkit.WebSettings>
<android.preference.PreferenceGroup: void onAttachedToActivity()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.graphics.LayerRasterizer: void <init>()>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.app.Fragment: java.lang.String getTag()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.RectF: void round(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>:<public>:<android.speech.tts.TextToSpeech>
<android.hardware.GeomagneticField: float getFieldStrength()>:<public>:<android.hardware.GeomagneticField>
<android.renderscript.Float2: void <init>(float,float)>:<public>:<android.renderscript.Float2>
<org.apache.http.conn.ManagedClientConnection: boolean isSecure()>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<org.apache.http.cookie.params.CookieSpecParamBean: void setSingleHeader(boolean)>:<public>:<org.apache.http.cookie.params.CookieSpecParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.widget.ScrollView: boolean arrowScroll(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Fragment: boolean isRemoving()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>:<public>:<android.net.LocalSocket>
<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>:<public>:<org.apache.http.impl.client.TunnelRefusedException:org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.widget.VideoView: int resolveAdjustedSize(int,int)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantWidth()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.FileDescriptor,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.view.inputmethod.InputMethod: void unbindInput()>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.app.admin.DeviceAdminReceiver: void onEnabled(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.net.wifi.WifiManager: java.util.List getScanResults()>:<public>:<android.net.wifi.WifiManager>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.Picture: void finalize()>:<protected>:<android.graphics.Picture>
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.Paint: void setAlpha(int)>:<public native>:<android.graphics.Paint>
<android.hardware.GeomagneticField: float getHorizontalStrength()>:<public>:<android.hardware.GeomagneticField>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur valueOf(java.lang.String)>:<public static>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.content.pm.PackageManager: void removePermission(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: boolean isDuplicateParentStateEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.ListPreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.conn.routing.RouteInfo.TunnelType: void <init>(java.lang.String,int)>:<private>:<org.apache.http.conn.routing.RouteInfo.TunnelType:java.lang.Enum>
<android.net.LocalSocket: void setSendBufferSize(int)>:<public>:<android.net.LocalSocket>
<android.app.ListFragment: long getSelectedItemId()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.hardware.Camera: void release()>:<public final>:<android.hardware.Camera>
<android.widget.ExpandableListAdapter: long getChildId(int,int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.text.StaticLayout: int getLineStart(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.view.InputDevice.MotionRange: float getMax()>:<public>:<android.view.InputDevice.MotionRange>
<android.widget.TimePicker.OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>:<public abstract>:<android.widget.TimePicker.OnTimeChangedListener>
<android.content.res.TypedArray: int getInteger(int,int)>:<public>:<android.content.res.TypedArray>
<android.widget.PopupMenu: android.view.Menu getMenu()>:<public>:<android.widget.PopupMenu>
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.media.AudioTrack: int getNotificationMarkerPosition()>:<public>:<android.media.AudioTrack>
<org.apache.http.client.HttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.HttpClient>
<android.util.StateSet: boolean isWildCard(int[])>:<public static>:<android.util.StateSet>
<android.renderscript.Element: android.renderscript.Element U32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.Fragment: void onStop()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.net.wifi.WifiManager.MulticastLock: void acquire()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.Dialog: int getVolumeControlStream()>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.impl.conn.AbstractPoolEntry: void shutdownEntry()>:<protected>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.widget.Toast: void setView(android.view.View)>:<public>:<android.widget.Toast>
<android.test.mock.MockPackageManager: java.lang.String getNameForUid(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.os.Build.VERSION_CODES: void <init>()>:<public>:<android.os.Build.VERSION_CODES>
<android.os.Looper: java.lang.String toString()>:<public>:<android.os.Looper>
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.preference.Preference: void setTitle(java.lang.CharSequence)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.pm.PermissionInfo: void <clinit>()>:<static>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.Float3: void <init>(float,float,float)>:<public>:<android.renderscript.Float3>
<android.graphics.Interpolator: void <init>(int,int)>:<public>:<android.graphics.Interpolator>
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.text.Layout: int getBottomPadding()>:<public abstract>:<android.text.Layout>
<android.animation.ValueAnimator: void setFloatValues(float[])>:<public transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.View: void setFocusable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputDevice: java.util.List getMotionRanges()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.ListView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiInfo: int getNetworkId()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.Drawable>
<android.text.style.ForegroundColorSpan: void <init>(int)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.util.Base64DataException: void <init>(java.lang.String)>:<public>:<android.util.Base64DataException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.net.wifi.WifiInfo: int describeContents()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser)>:<public static final>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.util.JsonReader: long nextLong()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.test.mock.MockCursor: byte[] getBlob(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.MediaController: void setPrevNextListeners(android.view.View.OnClickListener,android.view.View.OnClickListener)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer()>:<protected>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.opengl.GLSurfaceView: int getRenderMode()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>:<public static>:<android.view.animation.AnimationUtils>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.content.res.TypedArray: int length()>:<public>:<android.content.res.TypedArray>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.Rect: void inset(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.PopupWindow: void update()>:<public>:<android.widget.PopupWindow>
<android.widget.HeaderViewListAdapter: int getViewTypeCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.opengl.GLES10: void glFlush()>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Long4: void <init>()>:<public>:<android.renderscript.Long4>
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.renderscript.Matrix2f: float get(int,int)>:<public>:<android.renderscript.Matrix2f>
<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>:<public>:<android.view.ViewTreeObserver>
<android.os.Vibrator: void <init>()>:<>:<android.os.Vibrator>
<org.apache.http.HttpEntity: java.io.InputStream getContent()>:<public abstract>:<org.apache.http.HttpEntity>
<android.preference.Preference: boolean shouldPersist()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.Allocation: void copyTo(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.text.Layout: int getOffsetToRightOf(int)>:<public>:<android.text.Layout>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>:<protected>:<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:org.apache.http.impl.conn.AbstractPooledConnAdapter,org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.database.sqlite.SQLiteConstraintException: void <init>()>:<public>:<android.database.sqlite.SQLiteConstraintException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object)>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.animation.ValueAnimator: float getAnimatedFraction()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.MediaPlayer: void release()>:<public>:<android.media.MediaPlayer>
<android.test.ServiceTestCase: android.app.Application getApplication()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>:<public static>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.test.TouchUtils: int dragViewTo(android.test.InstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.text.format.Time: java.lang.String getCurrentTimezone()>:<public static>:<android.text.format.Time>
<android.graphics.Paint: float ascent()>:<public native>:<android.graphics.Paint>
<org.apache.http.client.HttpRequestRetryHandler: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.HttpRequestRetryHandler>
<android.app.AlertDialog: void setCustomTitle(android.view.View)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<org.apache.http.impl.conn.tsccm.RefQueueHandler: void handleReference(java.lang.ref.Reference)>:<public abstract>:<org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.os.Binder: int getCallingPid()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<org.apache.http.impl.io.IdentityInputStream: int read(byte[],int,int)>:<public>:<org.apache.http.impl.io.IdentityInputStream:java.io.InputStream>
<android.graphics.PointF: boolean equals(float,float)>:<public final>:<android.graphics.PointF>
<android.app.Service: boolean stopSelfResult(int)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.test.ApplicationTestCase: void <init>(java.lang.Class)>:<public>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.AndroidCharacter: boolean mirror(char[],int,int)>:<public static native>:<android.text.AndroidCharacter>
<android.provider.ContactsContract.Data: void <clinit>()>:<static>:<android.provider.ContactsContract.Data:android.provider.ContactsContract.DataColumnsWithJoins>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.MediaController: boolean isShowing()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentProvider: java.lang.String getReadPermission()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.view.KeyEvent: char getNumber()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.MessageQueue.IdleHandler: boolean queueIdle()>:<public abstract>:<android.os.MessageQueue.IdleHandler>
<android.graphics.drawable.PictureDrawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.view.animation.Animation.Description: void <init>()>:<protected>:<android.view.animation.Animation.Description>
<android.location.Address: void setSubLocality(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.webkit.CacheManager.CacheResult: java.io.InputStream getInputStream()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.widget.TextView: boolean onSetAlpha(int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.MatrixCursor: short getShort(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.res.AssetManager.AssetInputStream: void finalize()>:<protected>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.speech.RecognitionListener: void onBufferReceived(byte[])>:<public abstract>:<android.speech.RecognitionListener>
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.os.ParcelFileDescriptor: int describeContents()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>:<public>:<android.content.res.Resources>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.content.Context: android.content.Context getApplicationContext()>:<public abstract>:<android.content.Context>
<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.os.SystemClock: void <init>()>:<>:<android.os.SystemClock>
<android.net.sip.SipManager: void <init>()>:<>:<android.net.sip.SipManager>
<android.util.AttributeSet: int getStyleAttribute()>:<public abstract>:<android.util.AttributeSet>
<android.util.SparseBooleanArray: int keyAt(int)>:<public>:<android.util.SparseBooleanArray>
<android.test.MoreAsserts: void assertEquals(java.lang.String,java.lang.Object[],java.lang.Object[])>:<public static>:<android.test.MoreAsserts>
<android.app.TabActivity: android.widget.TabHost getTabHost()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.JsPromptResult: void <init>()>:<>:<android.webkit.JsPromptResult:android.webkit.JsResult>
<org.apache.http.HttpVersion: void <init>(int,int)>:<public>:<org.apache.http.HttpVersion:org.apache.http.ProtocolVersion,java.io.Serializable>
<android.view.Window: boolean isActive()>:<public final>:<android.view.Window>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface.OnShowListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>:<protected>:<android.view.LayoutInflater>
<junit.framework.TestListener: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>:<public abstract>:<junit.framework.TestListener>
<android.util.TimingLogger: void <init>(java.lang.String,java.lang.String)>:<public>:<android.util.TimingLogger>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTag(java.lang.Object)>:<public abstract>:<android.app.ActionBar.Tab>
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.os.Message: void copyFrom(android.os.Message)>:<public>:<android.os.Message:android.os.Parcelable>
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>:<public static>:<android.provider.ContactsContract.QuickContact>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.renderscript.Allocation: void copyFrom(android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantHeight()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>:<public abstract>:<android.database.Cursor>
<android.widget.AbsoluteLayout: void <init>(android.content.Context)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.widget.ImageView: boolean onSetAlpha(int)>:<protected>:<android.widget.ImageView:android.view.View>
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>:<public static>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.commons.logging.Log: void trace(java.lang.Object)>:<public abstract>:<org.apache.commons.logging.Log>
<android.content.res.AssetManager.AssetInputStream: int available()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.os.Bundle: void putFloatArray(java.lang.String,float[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.test.InstrumentationTestCase: void runTest()>:<protected>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>:<public static>:<android.appwidget.AppWidgetHost>
<android.gesture.Gesture: java.util.ArrayList getStrokes()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.view.accessibility.AccessibilityManager: void <init>()>:<>:<android.view.accessibility.AccessibilityManager>
<android.widget.ScrollView: void scrollTo(int,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>:<public>:<android.webkit.WebSettings>
<android.text.format.DateUtils: java.lang.CharSequence formatSameDayTime(long,long,int,int)>:<public static final>:<android.text.format.DateUtils>
<android.inputmethodservice.KeyboardView: boolean isPreviewEnabled()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<org.apache.http.impl.io.ChunkedOutputStream: void finish()>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.widget.AbsListView: android.widget.AbsListView.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>:<public>:<android.os.Binder:android.os.IBinder>
<android.text.method.BaseMovementMethod: void <init>()>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.os.StatFs: int getBlockCount()>:<public native>:<android.os.StatFs>
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.preference.Preference: android.content.Intent getIntent()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.ContentValues: java.lang.Object get(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<org.json.JSONArray: long optLong(int)>:<public>:<org.json.JSONArray>
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.drm.DrmManagerClient: void setOnInfoListener(android.drm.DrmManagerClient.OnInfoListener)>:<public synchronized>:<android.drm.DrmManagerClient>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.util.Xml: void <init>()>:<>:<android.util.Xml>
<android.widget.TextView: void setText(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)>:<public static final>:<android.util.Patterns>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.graphics.drawable.GradientDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: java.lang.String getDatabasePath()>:<public synchronized>:<android.webkit.WebSettings>
<android.widget.AbsListView: void setVelocityScale(float)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.nfc.Tag: int describeContents()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<org.apache.http.entity.SerializableEntity: boolean isRepeatable()>:<public>:<org.apache.http.entity.SerializableEntity:org.apache.http.entity.AbstractHttpEntity>
<android.os.Parcel: char[] createCharArray()>:<public final>:<android.os.Parcel>
<android.widget.BaseAdapter: void notifyDataSetChanged()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.test.MoreAsserts: void assertEquals(int[],int[])>:<public static>:<android.test.MoreAsserts>
<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder.OnErrorListener)>:<public>:<android.media.MediaRecorder>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)>:<public static>:<android.text.format.DateUtils>
<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView: int getListPaddingLeft()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.TokenWatcher: void released()>:<public abstract>:<android.os.TokenWatcher>
<android.opengl.GLES20: void glReleaseShaderCompiler()>:<public static native>:<android.opengl.GLES20>
<android.util.LruCache: int hitCount()>:<public final synchronized>:<android.util.LruCache>
<android.inputmethodservice.InputMethodService: boolean isShowInputRequested()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>:<public>:<android.net.wifi.WifiManager>
<android.nfc.tech.NfcV: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.view.ViewGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.os.Message: android.os.Message obtain()>:<public static>:<android.os.Message:android.os.Parcelable>
<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>:<public static final>:<android.telephony.gsm.SmsManager>
<org.apache.http.conn.ssl.AbstractVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<org.apache.http.impl.conn.tsccm.RefQueueWorker: void shutdown()>:<public>:<org.apache.http.impl.conn.tsccm.RefQueueWorker:java.lang.Runnable>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.app.ActionBar: void setDisplayUseLogoEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<org.apache.http.client.NonRepeatableRequestException: void <init>()>:<public>:<org.apache.http.client.NonRepeatableRequestException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.test.mock.MockContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.SocketHttpServerConnection: org.apache.http.io.SessionOutputBuffer createHttpDataTransmitter(java.net.Socket,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.ActionBar: int getDisplayOptions()>:<public abstract>:<android.app.ActionBar>
<android.util.Xml.Encoding: android.util.Xml.Encoding valueOf(java.lang.String)>:<public static>:<android.util.Xml.Encoding:java.lang.Enum>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.test.RenamingDelegatingContext: android.content.ContentProvider providerWithRenamedContext(java.lang.Class,android.content.Context,java.lang.String)>:<public static>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<org.apache.http.message.ParserCursor: java.lang.String toString()>:<public>:<org.apache.http.message.ParserCursor>
<org.apache.http.impl.cookie.BasicClientCookie: void setVersion(int)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<org.apache.http.impl.client.BasicCredentialsProvider: void <init>()>:<public>:<org.apache.http.impl.client.BasicCredentialsProvider:org.apache.http.client.CredentialsProvider>
<android.view.KeyEvent: void <clinit>()>:<static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.speech.SpeechRecognizer: void stopListening()>:<public>:<android.speech.SpeechRecognizer>
<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.auth.params.AuthParams>
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<org.apache.http.impl.AbstractHttpClientConnection: boolean isResponseAvailable(int)>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onMarkerReached(android.media.AudioRecord)>:<public abstract>:<android.media.AudioRecord.OnRecordPositionUpdateListener>
<android.app.ActivityManager.RecentTaskInfo: int describeContents()>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<org.apache.http.HttpEntity: void writeTo(java.io.OutputStream)>:<public abstract>:<org.apache.http.HttpEntity>
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.os.Bundle: float[] getFloatArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.impl.client.RequestWrapper: boolean isRepeatable()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public static>:<android.text.method.Touch>
<android.view.ContextThemeWrapper: void setTheme(int)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.widget.AbsListView.LayoutParams: void <init>(int,int)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.widget.AutoCompleteTextView: void onDetachedFromWindow()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.Preference: int getLayoutResource()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.preference.PreferenceFragment: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.location.Address: boolean hasLongitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.RadioGroup.OnCheckedChangeListener: void onCheckedChanged(android.widget.RadioGroup,int)>:<public abstract>:<android.widget.RadioGroup.OnCheckedChangeListener>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.method.TextKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setColorMaskEnabled(boolean,boolean,boolean,boolean)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.R: void <init>()>:<public>:<android.R>
<android.nfc.tech.NfcF: byte[] getSystemCode()>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>:<public static>:<android.text.format.DateUtils>
<android.widget.DatePicker: void setMaxDate(long)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.gesture.Gesture: android.graphics.Path toPath(int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt,boolean,android.text.TextUtils.EllipsizeCallback)>:<public static>:<android.text.TextUtils>
<android.widget.RemoteViews: void setDisplayedChild(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.SyncResult: void <clinit>()>:<static>:<android.content.SyncResult:android.os.Parcelable>
<android.media.audiofx.Visualizer: void finalize()>:<protected>:<android.media.audiofx.Visualizer>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.sax.EndTextElementListener: void end(java.lang.String)>:<public abstract>:<android.sax.EndTextElementListener>
<android.view.View: boolean isHardwareAccelerated()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Criteria: void setBearingRequired(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.NumberPicker: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>:<public>:<android.appwidget.AppWidgetHost>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntryValues()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>:<public>:<android.view.LayoutInflater>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.EditorInfo: void <init>()>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.os.ParcelFileDescriptor: long getStatSize()>:<public native>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<org.apache.http.impl.cookie.NetscapeDraftSpec: void <init>(java.lang.String[])>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.location.GpsStatus: java.lang.Iterable getSatellites()>:<public>:<android.location.GpsStatus>
<org.json.JSONObject: int optInt(java.lang.String)>:<public>:<org.json.JSONObject>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.telephony.SmsMessage: int getIndexOnIcc()>:<public>:<android.telephony.SmsMessage>
<org.apache.http.impl.cookie.RFC2109Spec: void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int)>:<protected>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.util.SparseIntArray: void removeAt(int)>:<public>:<android.util.SparseIntArray>
<android.text.AndroidCharacter: char getMirror(char)>:<public static native>:<android.text.AndroidCharacter>
<android.view.KeyEvent.DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.view.ViewConfiguration: int getScrollDefaultDelay()>:<public static>:<android.view.ViewConfiguration>
<android.database.sqlite.SQLiteClosable: void releaseReference()>:<public>:<android.database.sqlite.SQLiteClosable>
<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>:<public>:<android.os.DropBoxManager>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.AdapterView: int getLastVisiblePosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>:<protected final>:<org.apache.http.impl.conn.tsccm.BasicPoolEntry:org.apache.http.impl.conn.AbstractPoolEntry>
<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Program: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.app.Activity: void onPostCreate(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.webkit.WebStorage: void deleteAllData()>:<public>:<android.webkit.WebStorage>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glBlendFunc(int,int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.os.AsyncTask.Status: void <init>(java.lang.String,int)>:<private>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(byte[],int,int,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<org.apache.http.conn.scheme.Scheme: boolean equals(java.lang.Object)>:<public final>:<org.apache.http.conn.scheme.Scheme>
<org.apache.http.conn.EofSensorWatcher: boolean streamAbort(java.io.InputStream)>:<public abstract>:<org.apache.http.conn.EofSensorWatcher>
<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>:<protected>:<android.os.ResultReceiver:android.os.Parcelable>
<android.widget.CompoundButton: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.SearchView: java.lang.CharSequence getQuery()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void hideSoftInput(int,android.os.ResultReceiver)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.mtp.MtpObjectInfo: java.lang.String getKeywords()>:<public final>:<android.mtp.MtpObjectInfo>
<org.apache.http.auth.MalformedChallengeException: void <init>()>:<public>:<org.apache.http.auth.MalformedChallengeException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.widget.RatingBar: android.widget.RatingBar.OnRatingBarChangeListener getOnRatingBarChangeListener()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>:<public>:<org.json.JSONObject>
<android.app.NativeActivity: void onResume()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>:<public native>:<android.media.MediaPlayer>
<org.json.JSONArray: java.lang.String join(java.lang.String)>:<public>:<org.json.JSONArray>
<android.test.SyncBaseInstrumentation: void cancelSyncsandDisableAutoSync()>:<protected>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>:<public abstract>:<org.apache.http.client.HttpClient>
<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.location.Address: java.lang.String getCountryCode()>:<public>:<android.location.Address:android.os.Parcelable>
<android.graphics.Bitmap: void <clinit>()>:<static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.Debug: long getNativeHeapFreeSize()>:<public static native>:<android.os.Debug>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int,int)>:<public>:<android.app.Notification.Builder>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener)>:<public>:<android.view.GestureDetector>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>:<public>:<android.graphics.Canvas>
<org.apache.http.message.BasicTokenIterator: void remove()>:<public final>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.apache.http.conn.params.ConnRouteParamBean: void setDefaultProxy(org.apache.http.HttpHost)>:<public>:<org.apache.http.conn.params.ConnRouteParamBean:org.apache.http.params.HttpAbstractParamBean>
<junit.framework.TestSuite: void <init>(java.lang.Class,java.lang.String)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.content.SyncStats: java.lang.String toString()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: void <init>()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.ViewAsserts: void assertGroupContains(android.view.ViewGroup,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>:<protected transient>:<android.os.AsyncTask>
<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<org.apache.http.auth.AuthScheme: java.lang.String getRealm()>:<public abstract>:<org.apache.http.auth.AuthScheme>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.DiscretePathEffect: void <init>(float,float)>:<public>:<android.graphics.DiscretePathEffect:android.graphics.PathEffect>
<org.apache.http.message.BasicHeaderValueFormatter: int estimateNameValuePairLen(org.apache.http.NameValuePair)>:<protected>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.SlidingDrawer: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES10: void glDepthRangex(int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.Window.Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window.Callback>
<org.apache.http.message.BasicListHeaderIterator: void remove()>:<public>:<org.apache.http.message.BasicListHeaderIterator:org.apache.http.HeaderIterator>
<android.webkit.WebSettings: boolean getJavaScriptEnabled()>:<public synchronized>:<android.webkit.WebSettings>
<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.app.ActionBar.Tab: void <init>()>:<public>:<android.app.ActionBar.Tab>
<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener: void onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)>:<public abstract>:<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener>
<android.telephony.gsm.SmsMessage: int[] calculateLength(java.lang.String,boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.CursorTreeAdapter: void setGroupCursor(android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.media.audiofx.AudioEffect: void finalize()>:<protected>:<android.media.audiofx.AudioEffect>
<android.widget.TextView: void onFinishTemporaryDetach()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.TrafficStats: long getTotalTxPackets()>:<public static native>:<android.net.TrafficStats>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.media.AudioRecord: int getState()>:<public>:<android.media.AudioRecord>
<android.content.ContentProvider.PipeDataWriter: void writeDataToPipe(android.os.ParcelFileDescriptor,android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)>:<public abstract>:<android.content.ContentProvider.PipeDataWriter>
<android.provider.MediaStore.Video.Media: void <init>()>:<public>:<android.provider.MediaStore.Video.Media:android.provider.MediaStore.Video.VideoColumns>
<android.test.ServiceTestCase: void startService(android.content.Intent)>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.json.JSONArray: java.lang.Object opt(int)>:<public>:<org.json.JSONArray>
<android.test.mock.MockContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<org.apache.http.auth.NTUserPrincipal: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.auth.NTUserPrincipal:java.security.Principal>
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.app.Activity: int getWallpaperDesiredMinimumHeight()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.SoundPool: void finalize()>:<protected>:<android.media.SoundPool>
<android.hardware.Camera.Parameters: float getHorizontalViewAngle()>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()>:<protected>:<org.apache.http.impl.cookie.AbstractCookieSpec:org.apache.http.cookie.CookieSpec>
<junit.framework.TestCase: void <init>()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.view.View: int getWindowVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.bluetooth.BluetoothAdapter: boolean enable()>:<public>:<android.bluetooth.BluetoothAdapter>
<org.apache.http.entity.BufferedHttpEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.BufferedHttpEntity:org.apache.http.entity.HttpEntityWrapper>
<android.media.AudioManager: void startBluetoothSco()>:<public>:<android.media.AudioManager>
<android.view.animation.Animation: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.hardware.usb.UsbRequest: boolean initialize(android.hardware.usb.UsbDeviceConnection,android.hardware.usb.UsbEndpoint)>:<public>:<android.hardware.usb.UsbRequest>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>:<public static>:<android.text.TextUtils>
<org.apache.http.ConnectionClosedException: void <init>(java.lang.String)>:<public>:<org.apache.http.ConnectionClosedException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isOpen()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>:<public>:<android.location.LocationManager>
<android.view.View: android.view.TouchDelegate getTouchDelegate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.entity.BasicHttpEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.util.JsonReader: android.util.JsonToken peek()>:<public>:<android.util.JsonReader:java.io.Closeable>
<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List)>:<public>:<org.apache.http.client.entity.UrlEncodedFormEntity:org.apache.http.entity.StringEntity,org.apache.http.entity.AbstractHttpEntity>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[],int,int)>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.os.StrictMode: void noteSlowCall(java.lang.String)>:<public static>:<android.os.StrictMode>
<android.webkit.CacheManager.CacheResult: java.io.OutputStream getOutputStream()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromRawResource(android.content.Context,int)>:<public static>:<android.gesture.GestureLibraries>
<android.view.View: void setSaveFromParentEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.xmlpull.v1.XmlPullParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.net.Proxy: java.lang.String getDefaultHost()>:<public static final>:<android.net.Proxy>
<android.text.method.DialerKeyListener: int getInputType()>:<public>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>:<protected>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<org.apache.http.HttpEntityEnclosingRequest: boolean expectContinue()>:<public abstract>:<org.apache.http.HttpEntityEnclosingRequest:org.apache.http.HttpRequest>
<android.widget.VideoView: void start()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.animation.ValueAnimator: void setCurrentPlayTime(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<org.apache.http.impl.io.AbstractMessageWriter: void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.AbstractMessageWriter:org.apache.http.io.HttpMessageWriter>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<junit.framework.TestFailure: junit.framework.Test failedTest()>:<public>:<junit.framework.TestFailure>
<android.text.Layout.Alignment: void <clinit>()>:<static>:<android.text.Layout.Alignment:java.lang.Enum>
<android.view.Window: void takeInputQueue(android.view.InputQueue.Callback)>:<public abstract>:<android.view.Window>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<org.apache.http.entity.EntityTemplate: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.EntityTemplate:org.apache.http.entity.AbstractHttpEntity>
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentType()>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<org.apache.http.impl.auth.BasicSchemeFactory: org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.auth.BasicSchemeFactory:org.apache.http.auth.AuthSchemeFactory>
<android.database.Cursor: long getLong(int)>:<public abstract>:<android.database.Cursor>
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Program.BaseProgramBuilder: void initProgram(android.renderscript.Program)>:<protected>:<android.renderscript.Program.BaseProgramBuilder>
<android.media.SoundPool: int load(java.lang.String,int)>:<public>:<android.media.SoundPool>
<android.view.View: void onFinishTemporaryDetach()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>:<public final>:<org.apache.http.conn.scheme.Scheme>
<android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskReads()>:<public static>:<android.os.StrictMode>
<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.app.ActionBar: void <init>()>:<public>:<android.app.ActionBar>
<android.content.pm.Signature: void <clinit>()>:<static>:<android.content.pm.Signature:android.os.Parcelable>
<android.preference.PreferenceActivity: void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.app.ProgressDialog: void onStop()>:<protected>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.content.ClipDescription: boolean compareMimeTypes(java.lang.String,java.lang.String)>:<public static>:<android.content.ClipDescription:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.SpannableStringBuilder: android.text.Editable append(java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.net.TrafficStats: long getUidRxBytes(int)>:<public static native>:<android.net.TrafficStats>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.Scroller: void setFriction(float)>:<public final>:<android.widget.Scroller>
<android.content.SyncAdapterType: void <init>(android.os.Parcel)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>:<public>:<android.accounts.AbstractAccountAuthenticator>
<android.test.mock.MockPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.telephony.SmsMessage: android.telephony.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>:<public static>:<android.telephony.SmsMessage>
<org.xmlpull.v1.sax2.Driver: int getColumnNumber()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.view.MenuItem: boolean isCheckable()>:<public abstract>:<android.view.MenuItem>
<android.app.ActivityManager.RecentTaskInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.view.View: void scrollBy(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.R.menu: void <init>()>:<public>:<android.R.menu>
<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.content.res.XmlResourceParser: void close()>:<public abstract>:<android.content.res.XmlResourceParser:org.xmlpull.v1.XmlPullParser,android.util.AttributeSet>
<android.util.AttributeSet: java.lang.String getPositionDescription()>:<public abstract>:<android.util.AttributeSet>
<android.media.audiofx.Visualizer: int setEnabled(boolean)>:<public>:<android.media.audiofx.Visualizer>
<android.hardware.Camera.Parameters: void setRotation(int)>:<public>:<android.hardware.Camera.Parameters>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>:<public static>:<android.renderscript.RenderScript>
<android.provider.ContactsContract.RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore create()>:<public>:<android.renderscript.ProgramStore.Builder>
<android.widget.AbsListView: int getCacheColorHint()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.telephony.NeighboringCellInfo: void <init>(android.os.Parcel)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.util.MalformedJsonException: void <init>(java.lang.String)>:<public>:<android.util.MalformedJsonException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>:<public static>:<android.text.TextUtils>
<android.content.Intent: long getLongExtra(java.lang.String,long)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.Menu: void clear()>:<public abstract>:<android.view.Menu>
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)>:<public>:<android.sax.Element>
<android.telephony.gsm.SmsMessage: boolean isStatusReportMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.animation.ObjectAnimator: void <init>()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.os.Parcel: void readBinderList(java.util.List)>:<public final>:<android.os.Parcel>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.view.View: void setMinimumHeight(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.renderscript.FieldPacker: void addU64(long)>:<public>:<android.renderscript.FieldPacker>
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Files>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.Filter: void filter(java.lang.CharSequence)>:<public final>:<android.widget.Filter>
<android.view.View: void offsetTopAndBottom(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.ManagedClientConnection: void tunnelTarget(boolean,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.webkit.WebViewFragment: android.webkit.WebView getWebView()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.gesture.GestureOverlayView: void draw(android.graphics.Canvas)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)>:<public>:<android.hardware.SensorManager>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float4)>:<public>:<android.renderscript.FieldPacker>
<android.content.res.ColorStateList: int getColorForState(int[],int)>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11: void glPointParameterf(int,float)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.HorizontalScrollView: void setFillViewport(boolean)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date getExpiryDate()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)>:<public>:<org.apache.http.params.HttpConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.view.View: android.view.animation.Animation getAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.StaticLayout: android.text.Layout.Directions getLineDirections(int)>:<public final>:<android.text.StaticLayout:android.text.Layout>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.PopupWindow>
<android.view.ViewGroup: boolean isAnimationCacheEnabled()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>:<protected>:<android.drm.DrmEvent>
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: float getAlpha()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebHistoryItem: void <init>()>:<>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.renderscript.Script: void setVar(int,long)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<junit.framework.Assert: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>:<public>:<android.telephony.PhoneStateListener>
<org.apache.http.params.BasicHttpParams: boolean isParameterSetLocally(java.lang.String)>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.nfc.tech.MifareUltralight: void writePage(int,byte[])>:<public>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.animation.AnimatorSet: void <init>()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.util.SparseBooleanArray: void append(int,boolean)>:<public>:<android.util.SparseBooleanArray>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.FieldPacker: void reset()>:<public>:<android.renderscript.FieldPacker>
<android.text.style.TextAppearanceSpan: int getTextStyle()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.nfc.tech.NfcF: void close()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.widget.ListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: void start()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.database.sqlite.SQLiteCursor: void finalize()>:<protected>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.nfc.tech.NfcA: byte[] getAtqa()>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()>:<public>:<org.apache.http.conn.ConnectionPoolTimeoutException:org.apache.http.conn.ConnectTimeoutException,java.io.InterruptedIOException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.client.utils.URLEncodedUtils: boolean isEncoded(org.apache.http.HttpEntity)>:<public static>:<org.apache.http.client.utils.URLEncodedUtils>
<android.text.Editable: void clearSpans()>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.widget.CalendarView: boolean getShowWeekNumber()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>:<public>:<android.webkit.WebChromeClient>
<android.app.ActivityManager.RunningServiceInfo: int describeContents()>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])>:<public static>:<android.hardware.SensorManager>
<org.json.JSONArray: org.json.JSONArray put(long)>:<public>:<org.json.JSONArray>
<org.apache.http.impl.auth.NTLMEngineException: void <init>()>:<public>:<org.apache.http.impl.auth.NTLMEngineException:org.apache.http.auth.AuthenticationException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.view.animation.AnimationSet: void setDuration(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.content.pm.ApplicationInfo: int describeContents()>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.hardware.Camera.Parameters: void setGpsProcessingMethod(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.graphics.SurfaceTexture.OnFrameAvailableListener: void onFrameAvailable(android.graphics.SurfaceTexture)>:<public abstract>:<android.graphics.SurfaceTexture.OnFrameAvailableListener>
<android.telephony.SmsMessage: android.telephony.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>:<public static>:<android.telephony.SmsMessage>
<android.provider.ContactsContract.AggregationExceptions: void <clinit>()>:<static>:<android.provider.ContactsContract.AggregationExceptions:android.provider.BaseColumns>
<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>:<public abstract>:<android.content.Context>
<android.text.method.DialerKeyListener: void <clinit>()>:<static>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.renderscript.FileA3D.IndexEntry: void <init>()>:<>:<android.renderscript.FileA3D.IndexEntry>
<org.apache.http.conn.params.ConnRouteParams: void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute)>:<public static>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<android.hardware.SensorListener: void onSensorChanged(int,float[])>:<public abstract>:<android.hardware.SensorListener>
<android.content.pm.Signature: int hashCode()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.style.URLSpan: int getSpanTypeId()>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.provider.SyncStateContract.Helpers: void <init>()>:<public>:<android.provider.SyncStateContract.Helpers>
<android.drm.DrmManagerClient: int removeAllRights()>:<public>:<android.drm.DrmManagerClient>
<android.media.audiofx.Equalizer: void usePreset(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.view.InputDevice: java.lang.String toString()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.app.ActionBar: void removeAllTabs()>:<public abstract>:<android.app.ActionBar>
<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: void <init>()>:<public>:<org.apache.http.impl.cookie.NetscapeDraftHeaderParser>
<android.bluetooth.BluetoothSocket: void <init>()>:<>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.content.Context: boolean deleteFile(java.lang.String)>:<public abstract>:<android.content.Context>
<android.graphics.Bitmap: int getByteCount()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.os.Looper: void dump(android.util.Printer,java.lang.String)>:<public>:<android.os.Looper>
<android.renderscript.Element: android.renderscript.Element I16(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.Window.Callback: void onDetachedFromWindow()>:<public abstract>:<android.view.Window.Callback>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<org.apache.http.impl.client.RequestWrapper: void abort()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<org.apache.http.client.CircularRedirectException: void <init>(java.lang.String)>:<public>:<org.apache.http.client.CircularRedirectException:org.apache.http.client.RedirectException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.hardware.usb.UsbEndpoint: int getType()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.widget.AbsListView.LayoutParams: void <init>(int,int,int)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.webkit.WebView: void setInitialScale(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.speech.RecognitionService: void onStartListening(android.content.Intent,android.speech.RecognitionService.Callback)>:<protected abstract>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<dalvik.bytecode.OpcodeInfo: void <init>()>:<>:<dalvik.bytecode.OpcodeInfo>
<android.app.ActivityManager.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>:<public>:<android.webkit.WebViewDatabase>
<android.preference.DialogPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Element,int)>:<public>:<android.renderscript.Mesh.Builder>
<org.apache.http.impl.conn.tsccm.WaitingThread: void <init>(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>:<public>:<org.apache.http.impl.conn.tsccm.WaitingThread>
<android.view.MotionEvent: void setLocation(float,float)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ToggleButton: void onFinishInflate()>:<protected>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>:<public>:<android.telephony.TelephonyManager>
<android.provider.ContactsContract.SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.text.method.DialerKeyListener: void <init>()>:<public>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.animation.RotateAnimation: void applyTransformation(float,android.view.animation.Transformation)>:<protected>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<android.location.Location: void removeAccuracy()>:<public>:<android.location.Location:android.os.Parcelable>
<android.preference.RingtonePreference: boolean getShowDefault()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.graphics.PointF: void <init>(float,float)>:<public>:<android.graphics.PointF>
<android.os.Debug: int getThreadGcInvocationCount()>:<public static>:<android.os.Debug>
<android.content.Context: void sendStickyBroadcast(android.content.Intent)>:<public abstract>:<android.content.Context>
<android.widget.AdapterView: void removeView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.accessibilityservice.AccessibilityService: void <init>()>:<public>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ProgressBar: void setIndeterminate(boolean)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.location.Location: void setLatitude(double)>:<public>:<android.location.Location:android.os.Parcelable>
<android.view.View: int getId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: boolean isShown()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.provider.ContactsContract.SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>:<public static>:<android.provider.ContactsContract.SyncState:android.provider.SyncStateContract.Columns>
<android.widget.AbsListView: void onAttachedToWindow()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getRemoteAddress()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Type,android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.Builder>
<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>:<public abstract>:<android.text.Spannable:android.text.Spanned>
<android.view.LayoutInflater.Filter: boolean onLoadClass(java.lang.Class)>:<public abstract>:<android.view.LayoutInflater.Filter>
<android.widget.EditText: void selectAll()>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.test.mock.MockPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.mock.MockCursor: java.lang.String getString(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void <init>(org.apache.http.conn.routing.HttpRoute,int)>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.text.format.Time: void <init>(java.lang.String)>:<public>:<android.text.format.Time>
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.test.mock.MockContext: int checkPermission(java.lang.String,int,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.renderscript.Matrix2f: void scale(float,float)>:<public>:<android.renderscript.Matrix2f>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread)>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>:<public>:<android.view.SurfaceView:android.view.View>
<android.preference.DialogPreference: void showDialog(android.os.Bundle)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<junit.framework.TestSuite: void addTest(junit.framework.Test)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: void setDrawingCacheBackgroundColor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.provider.MediaStore.Video.Thumbnails: void <clinit>()>:<static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.media.CamcorderProfile: void <init>()>:<>:<android.media.CamcorderProfile>
<org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.HttpService>
<android.provider.Contacts.Groups: void <clinit>()>:<static>:<android.provider.Contacts.Groups:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.media.JetPlayer: void finalize()>:<protected>:<android.media.JetPlayer>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDitherEnabled(boolean)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.text.AndroidCharacter: int getEastAsianWidth(char)>:<public static native>:<android.text.AndroidCharacter>
<android.text.style.QuoteSpan: void <init>(int)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.webkit.WebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions.Callback)>:<public>:<android.webkit.WebChromeClient>
<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.location.LocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>:<public abstract>:<android.location.LocationListener>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,java.lang.String[],int[],int,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.telephony.ServiceState: boolean getRoaming()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>:<public>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.database.MergeCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.preference.ListPreference: void setEntryValues(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.database.CursorWindow: boolean putNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.HorizontalScrollView: void onMeasure(int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.Intent: android.os.Bundle getExtras()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>:<public static>:<android.util.TimeUtils>
<android.mtp.MtpConstants: void <init>()>:<public>:<android.mtp.MtpConstants>
<android.widget.ListPopupWindow: void dismiss()>:<public>:<android.widget.ListPopupWindow>
<android.net.wifi.WifiInfo: void <init>()>:<>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.app.WallpaperManager: int getDesiredMinimumWidth()>:<public>:<android.app.WallpaperManager>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Notification.Builder: android.app.Notification.Builder setLargeIcon(android.graphics.Bitmap)>:<public>:<android.app.Notification.Builder>
<org.apache.http.HttpConnection: boolean isStale()>:<public abstract>:<org.apache.http.HttpConnection>
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.view.MenuItem: int getItemId()>:<public abstract>:<android.view.MenuItem>
<android.accounts.AccountAuthenticatorResponse: void <clinit>()>:<static>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float,android.graphics.Paint)>:<public native>:<android.graphics.Movie>
<android.test.mock.MockContext: void enforceCallingPermission(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.StatFs: int getFreeBlocks()>:<public native>:<android.os.StatFs>
<android.net.rtp.AudioStream: boolean isBusy()>:<public final>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<org.apache.http.cookie.params.CookieSpecParamBean: void setDatePatterns(java.util.Collection)>:<public>:<org.apache.http.cookie.params.CookieSpecParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte2)>:<public>:<android.renderscript.FieldPacker>
<android.widget.TextView: android.graphics.Typeface getTypeface()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.test.mock.MockCursor: boolean isFirst()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage)>:<public>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.animation.AnimatorSet: java.lang.Object clone()>:<public volatile>:<android.animation.AnimatorSet:android.animation.Animator>
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>:<public>:<android.speech.tts.TextToSpeech>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleasedFromContainer()>:<protected>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.ActionBar.Tab: android.graphics.drawable.Drawable getIcon()>:<public abstract>:<android.app.ActionBar.Tab>
<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.graphics.RectF: java.lang.String toString()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>:<public static>:<android.text.TextUtils>
<android.app.DialogFragment: void dismiss()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.renderscript.Script: void bindAllocation(android.renderscript.Allocation,int)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.os.Debug: int getThreadExternalAllocCount()>:<public static>:<android.os.Debug>
<android.graphics.drawable.LayerDrawable: int getId(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>:<public>:<android.graphics.Paint>
<android.renderscript.ProgramStore.BlendDstFunc: void <clinit>()>:<static>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)>:<public static final>:<org.apache.http.util.VersionInfo>
<android.os.Process: int getUidForName(java.lang.String)>:<public static final native>:<android.os.Process>
<android.os.Debug: int getGlobalClassInitCount()>:<public static>:<android.os.Debug>
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.view.ViewStub: void onMeasure(int,int)>:<protected>:<android.view.ViewStub:android.view.View>
<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.Checkable: void toggle()>:<public abstract>:<android.widget.Checkable>
<android.provider.Contacts.GroupMembership: void <init>()>:<>:<android.provider.Contacts.GroupMembership:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>:<public>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.hardware.Sensor: float getResolution()>:<public>:<android.hardware.Sensor>
<android.widget.TextView: void setMinWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.view.View: boolean awakenScrollBars(int,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.DhcpInfo: java.lang.String toString()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.os.ResultReceiver: void <clinit>()>:<static>:<android.os.ResultReceiver:android.os.Parcelable>
<android.telephony.gsm.GsmCellLocation: void <init>()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.app.AlarmManager: void setTimeZone(java.lang.String)>:<public>:<android.app.AlarmManager>
<android.view.animation.Animation: void scaleCurrentDuration(float)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.BaseExpandableListAdapter: void notifyDataSetInvalidated()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost)>:<public static>:<org.apache.http.client.utils.URIUtils>
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String toString()>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.hardware.Camera: void setDisplayOrientation(int)>:<public final native>:<android.hardware.Camera>
<android.os.PowerManager: void <init>()>:<>:<android.os.PowerManager>
<android.content.AsyncQueryHandler.WorkerHandler: void <init>(android.content.AsyncQueryHandler,android.os.Looper)>:<public>:<android.content.AsyncQueryHandler.WorkerHandler:android.os.Handler>
<android.webkit.WebSyncManager: void onSyncInit()>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.IntentFilter: void <init>(android.content.IntentFilter)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.util.EventLog.Event: long getTimeNanos()>:<public>:<android.util.EventLog.Event>
<android.graphics.Camera: void rotateY(float)>:<public native>:<android.graphics.Camera>
<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine)>:<public abstract>:<org.apache.http.message.LineFormatter>
<android.widget.DialerFilter: void setLettersWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>:<public abstract>:<org.apache.http.client.HttpClient>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.text.Layout.Alignment: android.text.Layout.Alignment[] values()>:<public static>:<android.text.Layout.Alignment:java.lang.Enum>
<android.text.AlteredCharSequence: java.lang.String toString()>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getSocketTimeout()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.media.RingtoneManager: int inferStreamType()>:<public>:<android.media.RingtoneManager>
<android.graphics.PorterDuff.Mode: void <clinit>()>:<static>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.view.MenuItem: void setShowAsAction(int)>:<public abstract>:<android.view.MenuItem>
<android.widget.Gallery: int computeHorizontalScrollOffset()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String)>:<protected>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<org.apache.http.impl.io.ContentLengthOutputStream: void write(int)>:<public>:<org.apache.http.impl.io.ContentLengthOutputStream:java.io.OutputStream>
<android.view.inputmethod.CorrectionInfo: int getOffset()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.media.AudioTrack: int getPlaybackHeadPosition()>:<public>:<android.media.AudioTrack>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>:<public static native>:<android.opengl.GLES10>
<android.widget.RelativeLayout: int getBaseline()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.R.fraction: void <init>()>:<public>:<android.R.fraction>
<android.test.mock.MockContentResolver: void <init>()>:<public>:<android.test.mock.MockContentResolver:android.content.ContentResolver>
<android.view.KeyEvent: boolean isMetaPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.renderscript.Matrix3f: void loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.webkit.WebView: void onWindowFocusChanged(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.test.MoreAsserts: void assertNotEmpty(java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<android.content.CursorLoader: java.lang.String getSelection()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>:<public static>:<android.view.animation.AnimationUtils>
<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.MediaRecorder: void setMaxDuration(int)>:<public native>:<android.media.MediaRecorder>
<org.json.JSONTokener: void skipPast(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.view.ViewStub: void <init>(android.content.Context)>:<public>:<android.view.ViewStub:android.view.View>
<org.apache.http.impl.cookie.BrowserCompatSpec: java.util.List formatCookies(java.util.List)>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.util.Base64: byte[] decode(byte[],int)>:<public static>:<android.util.Base64>
<android.location.Criteria: boolean isBearingRequired()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.net.sip.SipAudioCall.Listener: void <init>()>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>:<public native>:<android.graphics.Canvas>
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.app.ProgressDialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.nfc.tech.MifareClassic: int getSectorCount()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.widget.Chronometer: void <init>(android.content.Context)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.util.AttributeSet: int getAttributeIntValue(int,int)>:<public abstract>:<android.util.AttributeSet>
<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<org.apache.http.entity.ByteArrayEntity: java.lang.Object clone()>:<public>:<org.apache.http.entity.ByteArrayEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.TextView: boolean isTextSelectable()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: long getDrawingTime()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.AbstractCursor: int getCount()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.animation.Animation: android.view.animation.Animation clone()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.TextView: void setSelectAllOnFocus(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.widget.Spinner: void <init>(android.content.Context,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.view.Surface: void freeze()>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>:<public static>:<android.database.DatabaseUtils>
<android.app.admin.DeviceAdminInfo: int describeContents()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()>:<public>:<android.drm.DrmSupportInfo>
<android.text.style.RasterizerSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.RasterizerSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.RedirectHandler createRedirectHandler()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.content.pm.Signature: char[] toChars(char[],int[])>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.os.storage.OnObbStateChangeListener: void <init>()>:<public>:<android.os.storage.OnObbStateChangeListener>
<org.apache.http.impl.io.AbstractMessageWriter: void writeHeadLine(org.apache.http.HttpMessage)>:<protected abstract>:<org.apache.http.impl.io.AbstractMessageWriter:org.apache.http.io.HttpMessageWriter>
<android.test.mock.MockPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer.Settings getProperties()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>:<public abstract>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.net.wifi.SupplicantState: void <clinit>()>:<static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.app.Notification.Builder: android.app.Notification.Builder setOnlyAlertOnce(boolean)>:<public>:<android.app.Notification.Builder>
<android.graphics.Xfermode: void <init>()>:<public>:<android.graphics.Xfermode>
<android.app.backup.BackupDataInput: void <init>()>:<>:<android.app.backup.BackupDataInput>
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>:<public static>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.gesture.GestureStore: void <init>()>:<public>:<android.gesture.GestureStore>
<android.renderscript.Long3: void <init>()>:<public>:<android.renderscript.Long3>
<android.text.util.Rfc822Tokenizer: void <init>()>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<org.apache.http.impl.io.ChunkedOutputStream: void write(int)>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onPeriodicNotification(android.media.AudioTrack)>:<public abstract>:<android.media.AudioTrack.OnPlaybackPositionUpdateListener>
<android.renderscript.Matrix3f: void multiply(android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.widget.TextSwitcher: void <init>(android.content.Context)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Dialog: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.conn.EofSensorWatcher: boolean eofDetected(java.io.InputStream)>:<public abstract>:<org.apache.http.conn.EofSensorWatcher>
<android.test.MoreAsserts: void assertContentsInOrder(java.lang.String,java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.mock.MockContext: int checkCallingUriPermission(android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getLocalAddress()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()>:<public>:<android.gesture.GestureLibrary>
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipProfile: java.lang.String getProfileName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.graphics.PointF: float length()>:<public final>:<android.graphics.PointF>
<android.view.animation.GridLayoutAnimationController: int getDirection()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.test.MoreAsserts: void assertEquals(java.lang.String,int[],int[])>:<public static>:<android.test.MoreAsserts>
<android.util.EventLogTags: android.util.EventLogTags.Description get(java.lang.String)>:<public>:<android.util.EventLogTags>
<android.gesture.GestureLibrary: boolean isReadOnly()>:<public>:<android.gesture.GestureLibrary>
<android.preference.DialogPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.MoreAsserts: void <init>()>:<>:<android.test.MoreAsserts>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)>:<public abstract>:<android.widget.SearchView.OnQueryTextListener>
<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TableRow.LayoutParams: void <init>()>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<org.apache.http.protocol.ResponseContent: void <init>()>:<public>:<org.apache.http.protocol.ResponseContent:org.apache.http.HttpResponseInterceptor>
<android.hardware.Camera: int getNumberOfCameras()>:<public static native>:<android.hardware.Camera>
<android.webkit.WebChromeClient: boolean onJsTimeout()>:<public>:<android.webkit.WebChromeClient>
<android.util.FloatMath: float cos(float)>:<public static native>:<android.util.FloatMath>
<android.renderscript.Matrix3f: void load(android.renderscript.Matrix3f)>:<public>:<android.renderscript.Matrix3f>
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>:<public>:<android.webkit.WebChromeClient>
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>:<public static>:<android.text.format.DateUtils>
<android.app.SearchableInfo: void <clinit>()>:<static>:<android.app.SearchableInfo:android.os.Parcelable>
<org.apache.http.conn.scheme.SchemeRegistry: java.util.List getSchemeNames()>:<public final synchronized>:<org.apache.http.conn.scheme.SchemeRegistry>
<android.provider.AlarmClock: void <init>()>:<public>:<android.provider.AlarmClock>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>:<public>:<android.graphics.Canvas>
<org.apache.http.util.CharArrayBuffer: char[] toCharArray()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: void <init>()>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>:<public abstract>:<android.content.SharedPreferences>
<android.net.sip.SipSession.State: void <init>()>:<>:<android.net.sip.SipSession.State>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus convertData(int,byte[])>:<public>:<android.drm.DrmManagerClient>
<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>:<public abstract>:<android.view.MenuItem>
<android.widget.MediaController: void show()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Region: boolean set(android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.drm.DrmRights: byte[] getData()>:<public>:<android.drm.DrmRights>
<android.util.EventLog.Event: int getProcessId()>:<public>:<android.util.EventLog.Event>
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>:<public static>:<android.text.format.DateUtils>
<android.renderscript.Sampler.Builder: android.renderscript.Sampler create()>:<public>:<android.renderscript.Sampler.Builder>
<org.apache.http.message.AbstractHttpMessage: void setHeader(java.lang.String,java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.text.style.StrikethroughSpan: int describeContents()>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.widget.AnalogClock: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.AnalogClock:android.view.View>
<android.animation.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public>:<android.animation.ArgbEvaluator:android.animation.TypeEvaluator>
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<org.json.JSONArray: org.json.JSONObject toJSONObject(org.json.JSONArray)>:<public>:<org.json.JSONArray>
<android.renderscript.Element: android.renderscript.Element SAMPLER(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.impl.conn.IdleConnectionHandler: void <init>()>:<public>:<org.apache.http.impl.conn.IdleConnectionHandler>
<android.os.Handler: void dispatchMessage(android.os.Message)>:<public>:<android.os.Handler>
<org.apache.http.impl.cookie.RFC2109VersionHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2109VersionHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.database.DataSetObservable: void notifyChanged()>:<public>:<android.database.DataSetObservable:android.database.Observable>
<android.renderscript.AllocationAdapter: void subData1D(int,int,int[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.animation.ValueAnimator: void reverse()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.provider.Browser: void requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase.IconListener)>:<public static final>:<android.provider.Browser>
<android.app.ActionBar: void setDisplayOptions(int)>:<public abstract>:<android.app.ActionBar>
<android.content.Intent: java.lang.String toUri(int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.animation.AnimatorSet.Builder: void <init>(android.animation.AnimatorSet)>:<>:<android.animation.AnimatorSet.Builder>
<android.media.MediaPlayer: void setLooping(boolean)>:<public native>:<android.media.MediaPlayer>
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Paint: boolean isStrikeThruText()>:<public final>:<android.graphics.Paint>
<android.app.Dialog: android.view.View findViewById(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public abstract>:<android.content.Context>
<android.widget.ListPopupWindow: void clearListSelection()>:<public>:<android.widget.ListPopupWindow>
<android.view.View: float getRightFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View.BaseSavedState: void <init>(android.os.Parcel)>:<public>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<org.apache.http.message.BasicHttpResponse: org.apache.http.ProtocolVersion getProtocolVersion()>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.text.style.LeadingMarginSpan.Standard: int describeContents()>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.database.Cursor: byte[] getBlob(int)>:<public abstract>:<android.database.Cursor>
<android.telephony.gsm.SmsMessage.SubmitPdu: java.lang.String toString()>:<public>:<android.telephony.gsm.SmsMessage.SubmitPdu>
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int getRetryCount()>:<public>:<org.apache.http.impl.client.DefaultHttpRequestRetryHandler:org.apache.http.client.HttpRequestRetryHandler>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.GeolocationPermissions: void clear(java.lang.String)>:<public>:<android.webkit.GeolocationPermissions>
<android.util.JsonReader: void setLenient(boolean)>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setConstantSize(boolean)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Instrumentation.ActivityResult: void <init>(int,android.content.Intent)>:<public>:<android.app.Instrumentation.ActivityResult>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.util.TimingLogger: void addSplit(java.lang.String)>:<public>:<android.util.TimingLogger>
<android.graphics.drawable.Drawable: boolean setState(int[])>:<public>:<android.graphics.drawable.Drawable>
<org.apache.http.client.protocol.ClientContextConfigurer: void setAuthSchemePref(java.util.List)>:<public>:<org.apache.http.client.protocol.ClientContextConfigurer:org.apache.http.client.protocol.ClientContext>
<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.text.Layout: void draw(android.graphics.Canvas)>:<public>:<android.text.Layout>
<android.database.MatrixCursor: float getFloat(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.net.rtp.RtpStream: void <init>()>:<>:<android.net.rtp.RtpStream>
<android.content.ComponentCallbacks: void onConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.content.ComponentCallbacks>
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public>:<android.accounts.AccountManager>
<android.animation.Keyframe: void setFraction(float)>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.mtp.MtpObjectInfo: int getImagePixHeight()>:<public final>:<android.mtp.MtpObjectInfo>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothProfile: java.util.List getConnectedDevices()>:<public abstract>:<android.bluetooth.BluetoothProfile>
<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.graphics.Paint: float measureText(char[],int,int)>:<public>:<android.graphics.Paint>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.widget.AbsSpinner: android.view.View getSelectedView()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.conn.EofSensorInputStream: void checkEOF(int)>:<protected>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.widget.AbsSeekBar: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<org.apache.http.params.HttpAbstractParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.params.HttpAbstractParamBean>
<android.graphics.ImageFormat: void <init>()>:<public>:<android.graphics.ImageFormat>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.accounts.AuthenticatorDescription: int describeContents()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.View: int resolveSizeAndState(int,int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.MultiSelectListPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.database.CursorWindow: double getDouble(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.PluginStub: android.view.View getEmbeddedView(int,android.content.Context)>:<public abstract>:<android.webkit.PluginStub>
<android.text.style.ForegroundColorSpan: int getForegroundColor()>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<org.apache.http.util.VersionInfo: java.lang.String getRelease()>:<public final>:<org.apache.http.util.VersionInfo>
<android.renderscript.ProgramStore.BlendSrcFunc: void <clinit>()>:<static>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<android.view.animation.Transformation: void setTransformationType(int)>:<public>:<android.view.animation.Transformation>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>:<public static>:<android.util.Xml>
<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpResponseInterceptor)>:<public final>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>:<public static final>:<android.provider.Browser>
<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.gesture.GestureStore: void removeEntry(java.lang.String)>:<public>:<android.gesture.GestureStore>
<org.apache.http.message.BasicTokenIterator: boolean isWhitespace(char)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.database.CursorWrapper: boolean isAfterLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.renderscript.Long2: void <init>()>:<public>:<android.renderscript.Long2>
<android.content.EntityIterator: void close()>:<public abstract>:<android.content.EntityIterator:java.util.Iterator>
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.widget.PopupWindow: void setContentView(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.widget.TextView: float getLeftFadingEdgeStrength()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockResources: int getDimensionPixelSize(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getRemoteAddress()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,float,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.graphics.drawable.Drawable: boolean isStateful()>:<public>:<android.graphics.drawable.Drawable>
<android.os.PowerManager.WakeLock: void release()>:<public>:<android.os.PowerManager.WakeLock>
<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View.OnCreateContextMenuListener: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public abstract>:<android.view.View.OnCreateContextMenuListener>
<android.widget.ScrollView: void <init>(android.content.Context)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: void setVisible(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.test.InstrumentationTestRunner: java.lang.ClassLoader getLoader()>:<public>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.app.Service: void onDestroy()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.widget.HorizontalScrollView: boolean pageScroll(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<org.apache.http.impl.cookie.CookieSpecBase: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.CookieSpecBase:org.apache.http.impl.cookie.AbstractCookieSpec>
<android.webkit.URLUtil: byte[] decode(byte[])>:<public static>:<android.webkit.URLUtil>
<org.apache.http.impl.conn.SingleClientConnManager: void closeIdleConnections(long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.view.KeyEvent: void <init>(android.view.KeyEvent)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Service: void stopSelf()>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<org.apache.http.conn.ClientConnectionManager: void closeExpiredConnections()>:<public abstract>:<org.apache.http.conn.ClientConnectionManager>
<android.webkit.CacheManager.CacheResult: java.lang.String getEncoding()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.widget.HorizontalScrollView: void addView(android.view.View,int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.style.URLSpan: void onClick(android.view.View)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.database.Cursor>
<android.hardware.Camera.Parameters: void setAntibanding(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.HttpClient>
<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.os.Debug.MemoryInfo: int getTotalSharedDirty()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.content.CursorLoader: void onCanceled(android.database.Cursor)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.app.IntentService: void <init>(java.lang.String)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.KeyEvent: boolean isNumLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewGroup: boolean addStatesFromChildren()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<org.apache.http.conn.ConnectionReleaseTrigger: void abortConnection()>:<public abstract>:<org.apache.http.conn.ConnectionReleaseTrigger>
<android.widget.ImageView: void setScaleType(android.widget.ImageView.ScaleType)>:<public>:<android.widget.ImageView:android.view.View>
<android.content.IntentFilter: boolean hasDataScheme(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.ViewGroup: void dispatchDisplayHint(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.json.JSONObject: org.json.JSONObject accumulate(java.lang.String,java.lang.Object)>:<public>:<org.json.JSONObject>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>:<public final>:<android.view.animation.LayoutAnimationController>
<android.widget.ViewFlipper: boolean isAutoStart()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.ImageView: void <init>(android.content.Context)>:<public>:<android.widget.ImageView:android.view.View>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View)>:<public>:<android.app.AlertDialog.Builder>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl:android.view.inputmethod.InputMethod>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>:<public final>:<org.apache.http.impl.client.RoutedRequest>
<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.database.sqlite.SQLiteQuery: void <init>()>:<>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.webkit.WebHistoryItem: java.lang.String getTitle()>:<public>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.database.Cursor: int getType(int)>:<public abstract>:<android.database.Cursor>
<android.media.ExifInterface: byte[] getThumbnail()>:<public>:<android.media.ExifInterface>
<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.message.BasicHttpRequest:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpRequest>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChildCount()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.database.CursorWindow: boolean setNumColumns(int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.Window: android.view.WindowManager getWindowManager()>:<public>:<android.view.Window>
<org.xmlpull.v1.XmlPullParserFactory: void setValidating(boolean)>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.net.MailTo: android.net.MailTo parse(java.lang.String)>:<public static>:<android.net.MailTo>
<android.widget.RemoteViews: void <init>(java.lang.String,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumHeight()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.test.RenamingDelegatingContext: java.lang.String[] databaseList()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.view.KeyCharacterMap: char getMatch(int,char[])>:<public>:<android.view.KeyCharacterMap>
<android.app.Activity: void setResult(int,android.content.Intent)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.style.SuperscriptSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Path.Direction: void <clinit>()>:<static>:<android.graphics.Path.Direction:java.lang.Enum>
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.content.Context: java.lang.String getPackageResourcePath()>:<public abstract>:<android.content.Context>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>:<protected>:<android.inputmethodservice.Keyboard>
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.graphics.Rect: boolean isEmpty()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.animation.ValueAnimator: void <init>()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.gesture.GestureOverlayView: int getGestureStrokeType()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.AndroidTestCase: void setContext(android.content.Context)>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewGroup: void removeViewInLayout(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.AlarmManager: void setTime(long)>:<public>:<android.app.AlarmManager>
<android.database.Cursor: boolean getWantsAllOnMoveCalls()>:<public abstract>:<android.database.Cursor>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.test.mock.MockResources: java.lang.String getResourcePackageName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>:<public abstract>:<android.view.Menu>
<android.widget.ListView: void setItemsCanFocus(boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>:<public static>:<android.app.WallpaperManager>
<android.graphics.drawable.LayerDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.telephony.SignalStrength: int getEvdoSnr()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.text.Layout: int getLineForOffset(int)>:<public>:<android.text.Layout>
<android.animation.ObjectAnimator: void setupEndValues()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RemoteViews: int describeContents()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.Uri: java.lang.String getEncodedFragment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.media.JetPlayer: boolean closeJetFile()>:<public>:<android.media.JetPlayer>
<android.os.Parcel: void writeBooleanArray(boolean[])>:<public final>:<android.os.Parcel>
<android.opengl.GLES20: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES20>
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.app.Fragment: void onAttach(android.app.Activity)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.gesture.GestureLibrary: java.util.ArrayList recognize(android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.widget.AnalogClock: void onDetachedFromWindow()>:<protected>:<android.widget.AnalogClock:android.view.View>
<junit.runner.BaseTestRunner: boolean inVAJava()>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.database.sqlite.SQLiteStatement: void <init>()>:<>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.HeterogeneousExpandableList: int getGroupTypeCount()>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>:<public>:<android.graphics.Paint>
<org.apache.http.impl.SocketHttpServerConnection: int getLocalPort()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.BitmapRegionDecoder: void <init>()>:<>:<android.graphics.BitmapRegionDecoder>
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.util.AttributeSet: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>:<public abstract>:<android.util.AttributeSet>
<org.apache.http.impl.client.BasicCookieStore: void addCookies(org.apache.http.cookie.Cookie[])>:<public synchronized>:<org.apache.http.impl.client.BasicCookieStore:org.apache.http.client.CookieStore>
<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.AdapterView.OnItemSelectedListener: void onNothingSelected(android.widget.AdapterView)>:<public abstract>:<android.widget.AdapterView.OnItemSelectedListener>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>:<public>:<android.location.LocationManager>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.content.AsyncQueryHandler: void onUpdateComplete(int,java.lang.Object,int)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>:<public static synchronized>:<android.bluetooth.BluetoothAdapter>
<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>:<public>:<android.app.ActivityManager>
<org.apache.http.conn.routing.RouteTracker: boolean isSecure()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.util.LruCache: int createCount()>:<public final synchronized>:<android.util.LruCache>
<android.test.SyncBaseInstrumentation: void <init>()>:<public>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.impl.auth.AuthSchemeBase: void <init>()>:<public>:<org.apache.http.impl.auth.AuthSchemeBase:org.apache.http.auth.AuthScheme>
<android.text.style.CharacterStyle: void updateDrawState(android.text.TextPaint)>:<public abstract>:<android.text.style.CharacterStyle>
<org.apache.http.conn.routing.BasicRouteDirector: int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>:<public>:<org.apache.http.conn.routing.BasicRouteDirector:org.apache.http.conn.routing.HttpRouteDirector>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.speech.RecognitionListener: void onBeginningOfSpeech()>:<public abstract>:<android.speech.RecognitionListener>
<android.database.MergeCursor: void <init>(android.database.Cursor[])>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>:<public>:<android.bluetooth.BluetoothAdapter>
<org.apache.http.protocol.HttpService: void setParams(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.protocol.HttpService>
<android.os.Debug: int setAllocationLimit(int)>:<public static>:<android.os.Debug>
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.SubMenu: android.view.MenuItem getItem()>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.location.Criteria: void setPowerRequirement(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.app.DialogFragment: void onCreate(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.text.method.ScrollingMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.HeaderIterator headerIterator(java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.app.Activity: android.content.ComponentName getComponentName()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.os.PowerManager.WakeLock: void acquire()>:<public>:<android.os.PowerManager.WakeLock>
<org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>:<public static>:<org.apache.http.client.params.HttpClientParams>
<android.os.StrictMode.VmPolicy: java.lang.String toString()>:<public>:<android.os.StrictMode.VmPolicy>
<android.preference.Preference: android.os.Bundle peekExtras()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.Matrix4f: void loadOrthoWindow(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.text.Annotation: java.lang.String getKey()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType[] values()>:<public static>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<org.apache.http.entity.EntityTemplate: long getContentLength()>:<public>:<org.apache.http.entity.EntityTemplate:org.apache.http.entity.AbstractHttpEntity>
<android.content.MutableContextWrapper: void <init>(android.content.Context)>:<public>:<android.content.MutableContextWrapper:android.content.ContextWrapper,android.content.Context>
<android.test.IsolatedContext: java.util.List getAndClearBroadcastIntents()>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.app.Activity: void onWindowFocusChanged(boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public abstract>:<android.content.Context>
<android.view.animation.AnimationSet: java.util.List getAnimations()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.nfc.NfcManager: void <init>()>:<>:<android.nfc.NfcManager>
<android.os.MemoryFile: java.io.InputStream getInputStream()>:<public>:<android.os.MemoryFile>
<android.test.mock.MockContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.InputMethodSession: void updateSelection(int,int,int,int,int,int)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.test.mock.MockContext: boolean isRestricted()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.ActivityTestCase: void scrubClass(java.lang.Class)>:<protected>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.impl.cookie.BasicClientCookie: boolean containsAttribute(java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>:<public>:<android.content.res.Resources>
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>:<public>:<android.net.UrlQuerySanitizer>
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.provider.Browser: void <clinit>()>:<static>:<android.provider.Browser>
<org.apache.http.auth.AuthScheme: boolean isComplete()>:<public abstract>:<org.apache.http.auth.AuthScheme>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: org.apache.http.HttpEntity getEntity()>:<public>:<org.apache.http.impl.client.EntityEnclosingRequestWrapper:org.apache.http.impl.client.RequestWrapper,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telephony.PhoneNumberUtils: boolean compare(android.content.Context,java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.accounts.AuthenticatorDescription: int hashCode()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.view.InputDevice: void <init>()>:<>:<android.view.InputDevice:android.os.Parcelable>
<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)>:<public>:<android.util.MonthDisplayHelper>
<android.view.animation.Animation: long getStartTime()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.WallpaperManager: int getDesiredMinimumHeight()>:<public>:<android.app.WallpaperManager>
<android.test.mock.MockResources: java.lang.String[] getStringArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.drm.DrmStore.RightsStatus: void <init>()>:<public>:<android.drm.DrmStore.RightsStatus>
<android.test.IsolatedContext: android.content.ContentResolver getContentResolver()>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.os.Parcelable.Creator: java.lang.Object[] newArray(int)>:<public abstract>:<android.os.Parcelable.Creator>
<android.view.View: int getMeasuredHeightAndState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: int getCompoundPaddingRight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.message.HeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean)>:<public abstract>:<org.apache.http.message.HeaderValueFormatter>
<android.content.IntentSender: boolean equals(java.lang.Object)>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.telephony.gsm.SmsMessage: void <init>()>:<public>:<android.telephony.gsm.SmsMessage>
<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.MediaPlayer: void seekTo(int)>:<public native>:<android.media.MediaPlayer>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>()>:<public>:<android.content.IntentFilter.MalformedMimeTypeException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.widget.AbsListView.OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>:<public abstract>:<android.widget.AbsListView.OnScrollListener>
<android.widget.AbsSpinner: void requestLayout()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.webkit.CacheManager.CacheResult: void <init>()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float,float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator>
<android.widget.EditText: void setSelection(int,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbDeviceConnection openDevice(android.hardware.usb.UsbDevice)>:<public>:<android.hardware.usb.UsbManager>
<org.apache.http.client.protocol.ClientContextConfigurer: void setCookieStore(org.apache.http.client.CookieStore)>:<public>:<org.apache.http.client.protocol.ClientContextConfigurer:org.apache.http.client.protocol.ClientContext>
<android.view.View: void setKeepScreenOn(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.app.ActivityManager.RunningTaskInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>:<public>:<android.media.AudioTrack>
<android.widget.SearchView: void setOnSuggestionListener(android.widget.SearchView.OnSuggestionListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.io.ContentLengthInputStream: void <init>(org.apache.http.io.SessionInputBuffer,long)>:<public>:<org.apache.http.impl.io.ContentLengthInputStream:java.io.InputStream>
<org.apache.http.util.CharArrayBuffer: void append(java.lang.Object)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.content.pm.ConfigurationInfo: java.lang.String toString()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<junit.runner.BaseTestRunner: void endTest(junit.framework.Test)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.text.method.KeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>:<public abstract>:<android.text.method.KeyListener>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public abstract>:<android.view.accessibility.AccessibilityEventSource>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.Surface: int describeContents()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.ImageView: boolean getBaselineAlignBottom()>:<public>:<android.widget.ImageView:android.view.View>
<android.app.Fragment: android.view.View getView()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.view.OrientationListener: void disable()>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.LocalActivityManager: void dispatchPause(boolean)>:<public>:<android.app.LocalActivityManager>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>:<public>:<android.view.ViewConfiguration>
<android.app.Activity: android.content.ComponentName getCallingActivity()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>:<public abstract>:<android.view.ViewParent>
<android.inputmethodservice.ExtractEditText: boolean isFocused()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.widget.Gallery: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>:<public static>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable.Creator)>:<public final>:<android.os.Parcel>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.text.util.Rfc822Token: void setAddress(java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.view.WindowManager.BadTokenException: void <init>(java.lang.String)>:<public>:<android.view.WindowManager.BadTokenException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator xBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES20>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>:<public final>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.opengl.GLES10: void glScalef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Element: void destroy()>:<public volatile>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>:<protected>:<org.apache.http.impl.conn.DefaultResponseParser:org.apache.http.impl.io.AbstractMessageParser>
<android.database.MergeCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.nfc.tech.NfcB: void <init>()>:<>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<org.json.JSONObject: boolean isNull(java.lang.String)>:<public>:<org.json.JSONObject>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>:<public>:<android.util.SparseArray>
<org.apache.http.message.HeaderGroup: void updateHeader(org.apache.http.Header)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.test.mock.MockContext: java.lang.ClassLoader getClassLoader()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.widget.PopupWindow: boolean isFocusable()>:<public>:<android.widget.PopupWindow>
<android.graphics.Matrix: void setValues(float[])>:<public>:<android.graphics.Matrix>
<android.speech.tts.TextToSpeech: boolean isSpeaking()>:<public>:<android.speech.tts.TextToSpeech>
<android.os.Handler: boolean hasMessages(int)>:<public final>:<android.os.Handler>
<android.content.OperationApplicationException: void <init>(int)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.ClipDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.mock.MockContext: boolean stopService(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.RecoverySystem.ProgressListener: void onProgress(int)>:<public abstract>:<android.os.RecoverySystem.ProgressListener>
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.MatrixCursor: long getLong(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.widget.Gallery: boolean onDown(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.View: int getDefaultSize(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: void setLeft(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.content.ContentProviderClient: boolean release()>:<public>:<android.content.ContentProviderClient>
<org.apache.http.protocol.HTTP: void <init>()>:<>:<org.apache.http.protocol.HTTP>
<android.telephony.TelephonyManager: int getDataActivity()>:<public>:<android.telephony.TelephonyManager>
<android.text.util.Linkify: void <init>()>:<public>:<android.text.util.Linkify>
<android.os.Parcel: void writeSerializable(java.io.Serializable)>:<public final>:<android.os.Parcel>
<org.apache.http.impl.cookie.BasicDomainHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BasicDomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.widget.PopupWindow: void dismiss()>:<public>:<android.widget.PopupWindow>
<android.os.Debug: void resetThreadGcInvocationCount()>:<public static>:<android.os.Debug>
<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.location.LocationProvider: int getPowerRequirement()>:<public abstract>:<android.location.LocationProvider>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.Instrumentation: void endPerformanceSnapshot()>:<public>:<android.app.Instrumentation>
<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>:<public abstract>:<android.view.Window>
<android.view.Window: void restoreHierarchyState(android.os.Bundle)>:<public abstract>:<android.view.Window>
<android.net.LocalSocket: java.lang.String toString()>:<public>:<android.net.LocalSocket>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.util.SparseBooleanArray: int indexOfKey(int)>:<public>:<android.util.SparseBooleanArray>
<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.app.WallpaperManager>
<org.apache.http.client.utils.URLEncodedUtils: void <init>()>:<public>:<org.apache.http.client.utils.URLEncodedUtils>
<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<org.apache.http.impl.client.BasicCookieStore: boolean clearExpired(java.util.Date)>:<public synchronized>:<org.apache.http.impl.client.BasicCookieStore:org.apache.http.client.CookieStore>
<android.preference.MultiSelectListPreference: java.util.Set getValues()>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.TextView.BufferType: void <init>(java.lang.String,int)>:<private>:<android.widget.TextView.BufferType:java.lang.Enum>
<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>:<public native>:<android.graphics.Canvas>
<android.webkit.WebChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)>:<public>:<android.webkit.WebChromeClient>
<android.text.TextUtils.SimpleStringSplitter: java.util.Iterator iterator()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDropBox()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onMediaScannerConnected()>:<public abstract>:<android.media.MediaScannerConnection.MediaScannerConnectionClient:android.media.MediaScannerConnection.OnScanCompletedListener>
<android.content.DialogInterface.OnClickListener: void onClick(android.content.DialogInterface,int)>:<public abstract>:<android.content.DialogInterface.OnClickListener>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(android.content.res.Resources,int)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.speech.tts.TextToSpeech: void shutdown()>:<public>:<android.speech.tts.TextToSpeech>
<android.text.StaticLayout: int getBottomPadding()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.text.method.ReplacementTransformationMethod: char[] getReplacement()>:<protected abstract>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Canvas.EdgeType: void <clinit>()>:<static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.DefaultClientConnectionOperator:org.apache.http.conn.ClientConnectionOperator>
<android.app.ListActivity: void onDestroy()>:<protected>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.ViewConfiguration: int getScaledEdgeSlop()>:<public>:<android.view.ViewConfiguration>
<org.apache.http.client.params.ClientParamBean: void setCookiePolicy(java.lang.String)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.graphics.drawable.PaintDrawable: void <init>()>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.inputmethodservice.InputMethodService: void onCreate()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>:<public static native>:<android.net.TrafficStats>
<android.content.pm.ActivityInfo: int describeContents()>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.gesture.GestureStore: void addGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureStore>
<android.location.Location: void <clinit>()>:<static>:<android.location.Location:android.os.Parcelable>
<org.apache.http.HttpConnection: int getSocketTimeout()>:<public abstract>:<org.apache.http.HttpConnection>
<android.widget.TextView: android.text.TextPaint getPaint()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.suitebuilder.TestMethod: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.suitebuilder.TestMethod>
<android.content.ComponentName: android.content.ComponentName clone()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.net.Uri: java.lang.String getUserInfo()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebSettings: void setPluginsEnabled(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.view.Gravity: boolean isHorizontal(int)>:<public static>:<android.view.Gravity>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.graphics.drawable.AnimationDrawable: void run()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.content.Loader: void startLoading()>:<public final>:<android.content.Loader>
<android.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)>:<public abstract>:<android.app.FragmentManager>
<android.widget.AbsListView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.RFC2965PortAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.gesture.GestureOverlayView: void removeAllOnGestureListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.client.methods.HttpDelete: void <init>(java.lang.String)>:<public>:<org.apache.http.client.methods.HttpDelete:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>(java.lang.String)>:<public>:<android.graphics.SurfaceTexture.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.view.MotionEvent: void finalize()>:<protected>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.shapes.RectShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.widget.ViewAnimator: void removeViewAt(int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MenuItem: android.view.MenuItem setIcon(int)>:<public abstract>:<android.view.MenuItem>
<junit.runner.BaseTestRunner: boolean useReloadingTestSuiteLoader()>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.ZoomButton: void setZoomSpeed(long)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>:<public final>:<android.content.BroadcastReceiver>
<android.hardware.Camera.Parameters: void removeGpsData()>:<public>:<android.hardware.Camera.Parameters>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onScanCompleted(java.lang.String,android.net.Uri)>:<public abstract>:<android.media.MediaScannerConnection.MediaScannerConnectionClient:android.media.MediaScannerConnection.OnScanCompletedListener>
<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>:<public>:<android.database.CursorIndexOutOfBoundsException:java.lang.IndexOutOfBoundsException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.TabActivity: void <init>()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.accessibility.AccessibilityEvent: void setCurrentItemIndex(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.net.sip.SipAudioCall: boolean isOnHold()>:<public>:<android.net.sip.SipAudioCall>
<android.content.Intent: boolean hasFileDescriptors()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.inputmethod.InputMethodSubtype: int getIconResId()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.graphics.Region.Op: android.graphics.Region.Op[] values()>:<public static>:<android.graphics.Region.Op:java.lang.Enum>
<android.hardware.Camera.Size: int hashCode()>:<public>:<android.hardware.Camera.Size>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.mtp.MtpDevice: boolean open(android.hardware.usb.UsbDeviceConnection)>:<public>:<android.mtp.MtpDevice>
<org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.AbstractCookieAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.provider.Settings.System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>:<public>:<android.accounts.AccountManager>
<android.widget.BaseExpandableListAdapter: int getGroupType(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.graphics.drawable.RotateDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.FragmentTransaction: int commitAllowingStateLoss()>:<public abstract>:<android.app.FragmentTransaction>
<android.view.SurfaceView: void onWindowVisibilityChanged(int)>:<protected>:<android.view.SurfaceView:android.view.View>
<android.app.Service: void startForeground(int,android.app.Notification)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.view.View: void onFinishInflate()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.message.BasicNameValuePair: java.lang.Object clone()>:<public>:<org.apache.http.message.BasicNameValuePair:org.apache.http.NameValuePair,java.lang.Cloneable>
<android.widget.ViewFlipper: void setFlipInterval(int)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService.Engine: void onDestroy()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.media.SoundPool: void setVolume(int,float,float)>:<public final native>:<android.media.SoundPool>
<android.text.TextUtils: boolean isGraphic(char)>:<public static>:<android.text.TextUtils>
<android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>:<public static>:<android.util.Pair>
<android.view.View: void setNextFocusRightId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: void setLinksClickable(boolean)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ClipboardManager: void addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.widget.SimpleCursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.graphics.drawable.ClipDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Paint: void setStrokeMiter(float)>:<public native>:<android.graphics.Paint>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result valueOf(java.lang.String)>:<public static>:<android.database.CursorJoiner.Result:java.lang.Enum>
<org.apache.http.impl.io.AbstractSessionInputBuffer: void init(java.io.InputStream,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.graphics.Region: void <init>(int,int,int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocalPath()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.test.mock.MockContext: java.io.File getExternalFilesDir(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.Parcel: void writeByteArray(byte[])>:<public final>:<android.os.Parcel>
<android.widget.AbsListView: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.suitebuilder.TestSuiteBuilder: void <init>(java.lang.String,java.lang.ClassLoader)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams copy()>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()>:<public>:<org.apache.http.impl.conn.tsccm.WaitingThreadAborter>
<android.graphics.drawable.shapes.PathShape: void <init>(android.graphics.Path,float,float)>:<public>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.content.ContentProvider: android.content.Context getContext()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.net.LocalSocketAddress: void <init>(java.lang.String)>:<public>:<android.net.LocalSocketAddress>
<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.text.method.LinkMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.graphics.Rasterizer: void <init>()>:<public>:<android.graphics.Rasterizer>
<android.preference.Preference: boolean getPersistedBoolean(boolean)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.webkit.WebView: java.lang.String getTitle()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES10: void glCullFace(int)>:<public static native>:<android.opengl.GLES10>
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.view.LayoutInflater: void <init>(android.content.Context)>:<protected>:<android.view.LayoutInflater>
<android.net.sip.SipAudioCall.Listener: void onReadyToCall(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.media.SoundPool: void autoPause()>:<public final native>:<android.media.SoundPool>
<org.apache.http.impl.auth.DigestScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>:<public>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<junit.runner.TestSuiteLoader: java.lang.Class reload(java.lang.Class)>:<public abstract>:<junit.runner.TestSuiteLoader>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.graphics.Matrix: boolean preSkew(float,float)>:<public>:<android.graphics.Matrix>
<android.widget.AbsListView: void setOverScrollMode(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.mock.MockPackageManager: void removePackageFromPreferred(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.preference.CheckBoxPreference: java.lang.CharSequence getSummaryOn()>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.provider.ContactsContract.StatusUpdates: int getPresencePrecedence(int)>:<public static final>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>:<public>:<android.view.VelocityTracker>
<android.nfc.tech.TagTechnology: void close()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getName()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.audiofx.PresetReverb: void setPreset(short)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.media.audiofx.Equalizer: short getNumberOfBands()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.opengl.GLES20: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES20>
<android.location.Location: double getLongitude()>:<public>:<android.location.Location:android.os.Parcelable>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void handleReference(java.lang.ref.Reference)>:<public>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.widget.ResourceCursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>:<public static>:<android.content.ContentResolver>
<org.apache.http.impl.conn.SingleClientConnManager.PoolEntry: void close()>:<protected>:<org.apache.http.impl.conn.SingleClientConnManager.PoolEntry:org.apache.http.impl.conn.AbstractPoolEntry>
<org.apache.http.auth.BasicUserPrincipal: int hashCode()>:<public>:<org.apache.http.auth.BasicUserPrincipal:java.security.Principal>
<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.test.MoreAsserts: void assertNotEqual(java.lang.Object,java.lang.Object)>:<public static>:<android.test.MoreAsserts>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.media.audiofx.Equalizer: short getBand(int)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>:<public abstract>:<android.content.Context>
<android.widget.TabWidget: void focusCurrentTab(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void closeIdleConnections(long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.widget.HorizontalScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLES10: void glClearDepthf(float)>:<public static native>:<android.opengl.GLES10>
<android.content.Context: android.graphics.drawable.Drawable peekWallpaper()>:<public abstract>:<android.content.Context>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.content.Intent.FilterComparison: boolean equals(java.lang.Object)>:<public>:<android.content.Intent.FilterComparison>
<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.app.ActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>:<public abstract>:<android.app.ActionBar>
<android.app.Fragment: void onDestroy()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<org.json.JSONArray: org.json.JSONArray optJSONArray(int)>:<public>:<org.json.JSONArray>
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.DialogInterface.OnShowListener: void onShow(android.content.DialogInterface)>:<public abstract>:<android.content.DialogInterface.OnShowListener>
<android.util.AttributeSet: int getAttributeResourceValue(int,int)>:<public abstract>:<android.util.AttributeSet>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.os.StrictMode: void setVmPolicy(android.os.StrictMode.VmPolicy)>:<public static>:<android.os.StrictMode>
<android.widget.CheckedTextView: void drawableStateChanged()>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.CursorTreeAdapter: void onGroupCollapsed(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.View: android.view.ViewGroup.LayoutParams getLayoutParams()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>:<public static native>:<android.opengl.GLES20>
<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.provider.Contacts.Phones: void <clinit>()>:<static>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.view.animation.Transformation: void <init>()>:<public>:<android.view.animation.Transformation>
<android.widget.StackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Animatable: void start()>:<public abstract>:<android.graphics.drawable.Animatable>
<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer)>:<protected>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.util.LruCache: java.util.Map snapshot()>:<public final synchronized>:<android.util.LruCache>
<android.app.Dialog: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.media.AudioTrack: int getPositionNotificationPeriod()>:<public>:<android.media.AudioTrack>
<com.android.internal.util.Predicate: boolean apply(java.lang.Object)>:<public abstract>:<com.android.internal.util.Predicate>
<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>:<public>:<android.content.res.Resources>
<android.provider.Contacts.People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.database.CursorWrapper: boolean requery()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.ZoomButtonsController: void setFocusable(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>:<public static>:<android.media.RingtoneManager>
<android.widget.MediaController.MediaPlayerControl: void pause()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.auth.NTUserPrincipal: java.lang.String toString()>:<public>:<org.apache.http.auth.NTUserPrincipal:java.security.Principal>
<android.renderscript.Int2: void <init>()>:<public>:<android.renderscript.Int2>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.preference.PreferenceActivity: void <init>()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.telephony.gsm.GsmCellLocation: void <init>(android.os.Bundle)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.test.mock.MockCursor: int getColumnIndexOrThrow(java.lang.String)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.renderscript.Mesh: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>:<public static final>:<android.provider.Browser>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>:<public static native>:<android.net.TrafficStats>
<android.widget.Toast: android.view.View getView()>:<public>:<android.widget.Toast>
<android.content.res.Resources: boolean getBoolean(int)>:<public>:<android.content.res.Resources>
<android.view.View: boolean isSaveEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RatingBar: float getStepSize()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.view.View: void setTop(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewParent: void requestLayout()>:<public abstract>:<android.view.ViewParent>
<android.graphics.drawable.RotateDrawable: void <init>()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.os.Binder: void joinThreadPool()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.media.FaceDetector: int findFaces(android.graphics.Bitmap,android.media.FaceDetector.Face[])>:<public>:<android.media.FaceDetector>
<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.content.Loader: void stopLoading()>:<public>:<android.content.Loader>
<android.hardware.Camera.Parameters: void setGpsLongitude(double)>:<public>:<android.hardware.Camera.Parameters>
<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.animation.ObjectAnimator: java.lang.Object clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.location.Location: void setExtras(android.os.Bundle)>:<public>:<android.location.Location:android.os.Parcelable>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverRoaming(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.test.ServiceTestCase: void testServiceTestCaseSetUpProperly()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<junit.framework.Assert: void assertSame(java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.content.Intent.ShortcutIconResource: java.lang.String toString()>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.TextView: void setError(java.lang.CharSequence)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>:<protected static>:<org.apache.http.impl.cookie.CookieSpecBase:org.apache.http.impl.cookie.AbstractCookieSpec>
<android.content.Intent: boolean hasExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.nfc.NdefRecord: byte[] getPayload()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.hardware.Camera.Parameters: void setJpegQuality(int)>:<public>:<android.hardware.Camera.Parameters>
<android.content.ClipData: void <init>(android.content.ClipDescription,android.content.ClipData.Item)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.BounceInterpolator:android.view.animation.Interpolator>
<org.apache.http.impl.io.HttpTransportMetricsImpl: void reset()>:<public>:<org.apache.http.impl.io.HttpTransportMetricsImpl:org.apache.http.io.HttpTransportMetrics>
<android.gesture.GestureOverlayView: boolean isEventsInterceptionEnabled()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.method.TimeKeyListener: void <init>()>:<public>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.text.SpannableStringInternal: char charAt(int)>:<public final>:<android.text.SpannableStringInternal>
<android.graphics.drawable.AnimationDrawable: boolean isRunning()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.protocol.SyncBasicHttpContext: java.lang.Object getAttribute(java.lang.String)>:<public synchronized>:<org.apache.http.protocol.SyncBasicHttpContext:org.apache.http.protocol.BasicHttpContext>
<android.widget.ZoomButton: void <init>(android.content.Context)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.widget.AbsListView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.AbsListView.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.os.Bundle: void putShortArray(java.lang.String,short[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.content.pm.ApplicationInfo.DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>:<public final>:<android.content.pm.ApplicationInfo.DisplayNameComparator:java.util.Comparator>
<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine)>:<public abstract>:<org.apache.http.message.LineFormatter>
<android.net.sip.SipAudioCall.Listener: void onRingingBack(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.media.AudioManager: void stopBluetoothSco()>:<public>:<android.media.AudioManager>
<android.bluetooth.BluetoothDevice: java.lang.String getName()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>:<protected>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glDisableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.mtp.MtpDevice: boolean importFile(int,java.lang.String)>:<public>:<android.mtp.MtpDevice>
<android.text.Layout: int getEllipsizedWidth()>:<public>:<android.text.Layout>
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable.ShaderFactory)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: void onLowMemory()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.accounts.Account: int hashCode()>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.drm.DrmUtils: android.drm.DrmUtils.ExtendedMetadataParser getExtendedMetadataParser(byte[])>:<public static>:<android.drm.DrmUtils>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.TextView: void setLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>:<public>:<android.text.method.ReplacementTransformationMethod:android.text.method.TransformationMethod>
<android.database.AbstractWindowedCursor: int getType(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<org.apache.commons.logging.Log: void info(java.lang.Object,java.lang.Throwable)>:<public abstract>:<org.apache.commons.logging.Log>
<android.widget.BaseExpandableListAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.view.View: int computeVerticalScrollOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)>:<public>:<android.drm.DrmManagerClient>
<android.text.Layout.Alignment: android.text.Layout.Alignment valueOf(java.lang.String)>:<public static>:<android.text.Layout.Alignment:java.lang.Enum>
<android.view.ViewGroup: void debug(int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.protocol.BasicHttpContext: void <init>(org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.BasicHttpContext:org.apache.http.protocol.HttpContext>
<org.apache.http.conn.EofSensorInputStream: void <init>(java.io.InputStream,org.apache.http.conn.EofSensorWatcher)>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.app.ActionBar.TabListener: void onTabSelected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.hardware.usb.UsbInterface: int describeContents()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.graphics.Shader: void finalize()>:<protected>:<android.graphics.Shader>
<android.media.audiofx.Virtualizer.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.view.MotionEvent: float getToolMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.mtp.MtpObjectInfo: int getObjectHandle()>:<public final>:<android.mtp.MtpObjectInfo>
<android.content.ContentResolver: void cancelSync(android.net.Uri)>:<public>:<android.content.ContentResolver>
<android.drm.DrmSupportInfo: void addFileSuffix(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.PopupWindow: void setOutsideTouchable(boolean)>:<public>:<android.widget.PopupWindow>
<android.content.DialogInterface.OnCancelListener: void onCancel(android.content.DialogInterface)>:<public abstract>:<android.content.DialogInterface.OnCancelListener>
<android.provider.ContactsContract.CommonDataKinds.Photo: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Photo:android.provider.ContactsContract.DataColumnsWithJoins>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Shader>
<android.database.DatabaseUtils.InsertHelper: void close()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.TextView: void endBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.database.sqlite.SQLiteAbortException: void <init>()>:<public>:<android.database.sqlite.SQLiteAbortException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>:<public synchronized>:<android.webkit.WebSettings>
<android.text.style.ImageSpan: void <init>(android.content.Context,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Activity: void removeDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>:<public>:<android.content.res.Resources.Theme>
<android.view.View: void setBackgroundColor(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public>:<android.graphics.BitmapRegionDecoder>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.io.FileDescriptor)>:<public>:<android.media.MediaRecorder>
<android.renderscript.Sampler.Value: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Sampler.Value:java.lang.Enum>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence)>:<public>:<android.widget.TabHost.TabSpec>
<android.widget.CheckedTextView: void setPadding(int,int,int,int)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.nfc.NdefRecord: void <init>(byte[])>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<org.apache.http.entity.HttpEntityWrapper: boolean isChunked()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.view.animation.DecelerateInterpolator: void <init>()>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<org.apache.http.conn.BasicManagedEntity: void releaseManagedConnection()>:<protected>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.view.animation.AnimationSet: void setRepeatMode(int)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.NumberPicker: float getBottomFadingEdgeStrength()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.webkit.CookieManager: boolean allowFileSchemeCookies()>:<public static>:<android.webkit.CookieManager>
<android.media.AudioManager: void unloadSoundEffects()>:<public>:<android.media.AudioManager>
<android.widget.Chronometer: void setBase(long)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.text.StaticLayout: int getLineDescent(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<junit.framework.TestResult: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)>:<public synchronized>:<junit.framework.TestResult>
<org.apache.http.auth.AuthScope: void <clinit>()>:<static>:<org.apache.http.auth.AuthScope>
<org.json.JSONArray: double getDouble(int)>:<public>:<org.json.JSONArray>
<org.json.JSONTokener: java.lang.String next(int)>:<public>:<org.json.JSONTokener>
<android.provider.ContactsContract.CommonDataKinds.StructuredName: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.StructuredName:android.provider.ContactsContract.DataColumnsWithJoins>
<android.content.Intent: android.content.Intent addFlags(int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.test.mock.MockCursor: boolean isBeforeFirst()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.gesture.GestureOverlayView: void setGestureVisible(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: void startActivity(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.database.DatabaseUtils.InsertHelper: void bind(int,byte[])>:<public>:<android.database.DatabaseUtils.InsertHelper>
<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<org.xmlpull.v1.sax2.Driver: void setEntityResolver(org.xml.sax.EntityResolver)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.content.res.ObbInfo: void <init>()>:<>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.os.StrictMode.ThreadPolicy.Builder: void <init>()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.os.Parcelable: int describeContents()>:<public abstract>:<android.os.Parcelable>
<android.widget.ListView: void smoothScrollByOffset(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.location.LocationListener: void onLocationChanged(android.location.Location)>:<public abstract>:<android.location.LocationListener>
<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>:<public>:<android.view.LayoutInflater>
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>:<public synchronized>:<android.webkit.WebSettings>
<android.hardware.Camera.Parameters: void set(java.lang.String,int)>:<public>:<android.hardware.Camera.Parameters>
<android.net.Uri.Builder: android.net.Uri.Builder clearQuery()>:<public>:<android.net.Uri.Builder>
<android.view.KeyEvent: boolean isTracking()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)>:<public>:<android.animation.LayoutTransition>
<android.preference.Preference: int getOrder()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.graphics.Camera: void rotateZ(float)>:<public native>:<android.graphics.Camera>
<android.content.pm.PermissionGroupInfo: int describeContents()>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.app.Fragment: java.lang.String toString()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<junit.runner.BaseTestRunner: boolean showStackRaw()>:<protected static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.view.Window: android.view.WindowManager.LayoutParams getAttributes()>:<public final>:<android.view.Window>
<android.location.GpsStatus: void <init>()>:<>:<android.location.GpsStatus>
<android.widget.PopupMenu: void show()>:<public>:<android.widget.PopupMenu>
<android.webkit.WebStorage: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.test.mock.MockContext: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.StaticLayout: int getParagraphDirection(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[])>:<public>:<org.apache.http.impl.io.IdentityOutputStream:java.io.OutputStream>
<android.view.ScaleGestureDetector: boolean isInProgress()>:<public>:<android.view.ScaleGestureDetector>
<android.preference.DialogPreference: void onActivityDestroy()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter.ViewBinder getViewBinder()>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.app.Service: void onLowMemory()>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.widget.TextView: android.view.ActionMode.Callback getCustomSelectionActionModeCallback()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>:<public>:<android.media.MediaMetadataRetriever>
<android.view.animation.Animation.AnimationListener: void onAnimationRepeat(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<org.json.JSONTokener: java.lang.String nextTo(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.view.View: boolean requestFocus()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>:<public>:<android.net.wifi.WifiManager>
<android.util.EventLog: java.lang.String getTagName(int)>:<public static>:<android.util.EventLog>
<android.webkit.WebView: void findNext(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.View: int getSuggestedMinimumHeight()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb.Settings getProperties()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.TextView: java.lang.CharSequence getError()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.AndroidTestRunner: void testFailed(int,junit.framework.Test,java.lang.Throwable)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>:<public static>:<android.app.Instrumentation>
<android.renderscript.AllocationAdapter: void subData2D(int,int,int,int,float[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.location.Location: void removeSpeed()>:<public>:<android.location.Location:android.os.Parcelable>
<org.apache.http.impl.cookie.BasicClientCookie2: boolean isExpired(java.util.Date)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<android.app.ActionBar: void hide()>:<public abstract>:<android.app.ActionBar>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>:<public final>:<android.os.Parcel>
<android.view.animation.LinearInterpolator: void <init>()>:<public>:<android.view.animation.LinearInterpolator:android.view.animation.Interpolator>
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String,java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.conn.BasicEofSensorWatcher: void <init>(org.apache.http.conn.ManagedClientConnection,boolean)>:<public>:<org.apache.http.conn.BasicEofSensorWatcher:org.apache.http.conn.EofSensorWatcher>
<android.app.Activity: android.app.Application getApplication()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.ViewGroup: android.view.View getFocusedChild()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.ActivityManager: java.util.List getProcessesInErrorState()>:<public>:<android.app.ActivityManager>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.os.SystemClock: void sleep(long)>:<public static>:<android.os.SystemClock>
<android.net.sip.SipAudioCall: void makeCall(android.net.sip.SipProfile,android.net.sip.SipSession,int)>:<public>:<android.net.sip.SipAudioCall>
<android.hardware.usb.UsbDevice: boolean equals(java.lang.Object)>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.Dialog: void onAttachedToWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.appwidget.AppWidgetHost: void stopListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>:<public static>:<android.graphics.BitmapFactory>
<android.view.View: float getBottomFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.LinearLayout: void setMeasureWithLargestChildEnabled(boolean)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getAutoLinkMask()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.CallLog: void <clinit>()>:<static>:<android.provider.CallLog>
<android.gesture.GestureOverlayView: void setGestureStrokeType(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.view.View: void removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType[] values()>:<public static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.os.DropBoxManager.Entry: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.content.BroadcastReceiver: void abortBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void receiveResponseEntity(org.apache.http.HttpResponse)>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.telephony.gsm.SmsMessage: int[] calculateLength(java.lang.CharSequence,boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.content.IntentFilter: void addAction(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)>:<public static>:<android.database.DatabaseUtils>
<android.app.DialogFragment: void onAttach(android.app.Activity)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.graphics.Point: java.lang.String toString()>:<public>:<android.graphics.Point>
<android.webkit.WebView: void clearCache(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.Context: java.io.File getDir(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.util.TypedValue: java.lang.String coerceToString(int,int)>:<public static final>:<android.util.TypedValue>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>:<public final>:<android.os.Parcel>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()>:<public>:<android.test.suitebuilder.TestMethod>
<android.test.mock.MockPackageManager: boolean isSafeMode()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.AbstractHttpClient: void setCredentialsProvider(org.apache.http.client.CredentialsProvider)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.renderscript.Matrix4f: void scale(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<org.apache.http.protocol.BasicHttpProcessor: void clearRequestInterceptors()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.text.Layout: android.text.Layout.Alignment getAlignment()>:<public final>:<android.text.Layout>
<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>:<public abstract>:<org.apache.commons.logging.Log>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<android.graphics.RectF: boolean contains(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.telephony.cdma.CdmaCellLocation: java.lang.String toString()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.test.mock.MockContentProvider: void <init>()>:<protected>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.renderscript.AllocationAdapter: void readData(int[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler getErrorHandler()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.text.Layout: int getParagraphLeft(int)>:<public final>:<android.text.Layout>
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<org.apache.http.HttpInetConnection: java.net.InetAddress getRemoteAddress()>:<public abstract>:<org.apache.http.HttpInetConnection:org.apache.http.HttpConnection>
<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<org.apache.http.ProtocolVersion: boolean isComparable(org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.content.SyncResult: boolean madeSomeProgress()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.inputmethodservice.KeyboardView: boolean isShifted()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.test.TouchUtils: void dragViewToTop(android.test.ActivityInstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<org.apache.http.HttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>:<public abstract>:<org.apache.http.HttpEntityEnclosingRequest:org.apache.http.HttpRequest>
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isSecure()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.widget.Gallery: void setCallbackDuringFling(boolean)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.Point: void <init>(android.graphics.Point)>:<public>:<android.graphics.Point>
<android.inputmethodservice.ExtractEditText: void onSelectionChanged(int,int)>:<protected>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>:<public static>:<android.gesture.GestureUtils>
<android.content.AsyncQueryHandler: void <init>(android.content.ContentResolver)>:<public>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.telephony.gsm.SmsMessage: byte[] getUserData()>:<public>:<android.telephony.gsm.SmsMessage>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.renderscript.Element: android.renderscript.Element PROGRAM_STORE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element F64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultProxyAuthenticationHandler:org.apache.http.impl.client.AbstractAuthenticationHandler>
<android.view.accessibility.AccessibilityEvent: void setRemovedCount(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.opengl.GLSurfaceView: void setPreserveEGLContextOnPause(boolean)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.speech.tts.TextToSpeech.OnUtteranceCompletedListener: void onUtteranceCompleted(java.lang.String)>:<public abstract>:<android.speech.tts.TextToSpeech.OnUtteranceCompletedListener>
<org.apache.http.impl.cookie.BasicClientCookie: void setValue(java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<org.apache.http.impl.SocketHttpServerConnection: void assertOpen()>:<protected>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.opengl.GLES20: void glLineWidth(float)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.auth.NTCredentials: java.security.Principal getUserPrincipal()>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.method.TextKeyListener.Capitalize: android.text.method.TextKeyListener.Capitalize[] values()>:<public static>:<android.text.method.TextKeyListener.Capitalize:java.lang.Enum>
<android.net.sip.SipAudioCall: void holdCall(int)>:<public>:<android.net.sip.SipAudioCall>
<android.app.Dialog: void setDismissMessage(android.os.Message)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.view.View: boolean isHorizontalScrollBarEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style valueOf(java.lang.String)>:<public static>:<android.graphics.PathDashPathEffect.Style:java.lang.Enum>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Region: void <init>(android.graphics.Region)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.graphics.NinePatch: int getWidth()>:<public>:<android.graphics.NinePatch>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.app.NativeActivity: void onStart()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransition(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.preference.CheckBoxPreference: void setSummaryOn(java.lang.CharSequence)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<org.apache.http.HeaderElement: java.lang.String getName()>:<public abstract>:<org.apache.http.HeaderElement>
<android.net.rtp.AudioStream: void setDtmfType(int)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.mtp.MtpDevice: long getParent(int)>:<public>:<android.mtp.MtpDevice>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.preference.ListPreference: void setEntries(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.test.mock.MockPackageManager: java.lang.String[] getSystemSharedLibraryNames()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.ListView: void setSelection(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Rect: java.lang.String toString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.text.Layout: int getLineForVertical(int)>:<public>:<android.text.Layout>
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)>:<public>:<android.renderscript.Matrix4f>
<android.graphics.drawable.GradientDrawable.Orientation: void <init>(java.lang.String,int)>:<private>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.accounts.NetworkErrorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.media.AudioRecord: int getAudioSource()>:<public>:<android.media.AudioRecord>
<android.test.mock.MockCursor: boolean moveToPosition(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.inputmethodservice.Keyboard.Key: void onReleased(boolean)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.util.PrintStreamPrinter: void <init>(java.io.PrintStream)>:<public>:<android.util.PrintStreamPrinter:android.util.Printer>
<android.content.Context: void clearWallpaper()>:<public abstract>:<android.content.Context>
<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>:<public synchronized>:<android.content.ContentQueryMap:java.util.Observable>
<android.widget.HorizontalScrollView: boolean isSmoothScrollingEnabled()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.Editable.Factory: void <init>()>:<public>:<android.text.Editable.Factory>
<org.xmlpull.v1.XmlPullParser: void <clinit>()>:<static>:<org.xmlpull.v1.XmlPullParser>
<android.media.audiofx.Equalizer: void setBandLevel(short,short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.preference.PreferenceActivity: boolean isMultiPane()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.auth.AuthSchemeRegistry: void setItems(java.util.Map)>:<public synchronized>:<org.apache.http.auth.AuthSchemeRegistry>
<android.widget.MultiAutoCompleteTextView: boolean enoughToFilter()>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.test.MoreAsserts: void assertEmpty(java.lang.String,java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.text.style.AbsoluteSizeSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.gesture.GestureOverlayView: void cancelClearAnimation()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.app.SearchableInfo: int getVoiceMaxResults()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.EditText: java.lang.CharSequence getText()>:<public volatile>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.widget.LinearLayout: void setVerticalGravity(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: int getPosition()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.preference.EditTextPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.content.res.TypedArray: void recycle()>:<public>:<android.content.res.TypedArray>
<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.nfc.NdefRecord: void writeToParcel(android.os.Parcel,int)>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.SearchManager: void <init>()>:<>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<org.json.JSONStringer: org.json.JSONStringer value(boolean)>:<public>:<org.json.JSONStringer>
<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)>:<public>:<org.apache.http.impl.conn.tsccm.WaitingThreadAborter>
<android.renderscript.Allocation: void copyFromUnchecked(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.ViewTreeObserver.OnTouchModeChangeListener: void onTouchModeChanged(boolean)>:<public abstract>:<android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.util.Base64InputStream: int read(byte[],int,int)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.provider.SearchRecentSuggestions: void saveRecentQuery(java.lang.String,java.lang.String)>:<public>:<android.provider.SearchRecentSuggestions>
<android.mtp.MtpObjectInfo: int getProtectionStatus()>:<public final>:<android.mtp.MtpObjectInfo>
<android.util.AttributeSet: int getAttributeIntValue(java.lang.String,java.lang.String,int)>:<public abstract>:<android.util.AttributeSet>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>:<public static>:<android.text.format.DateUtils>
<android.renderscript.FieldPacker: void addU32(long)>:<public>:<android.renderscript.FieldPacker>
<android.telephony.TelephonyManager: int getNetworkType()>:<public>:<android.telephony.TelephonyManager>
<android.graphics.RectF: void <init>(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.test.MoreAsserts: void assertEquals(java.lang.String,byte[],byte[])>:<public static>:<android.test.MoreAsserts>
<android.view.Window: void setFormat(int)>:<public>:<android.view.Window>
<org.apache.http.impl.SocketHttpClientConnection: int getSocketTimeout()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.webkit.WebStorage.Origin: java.lang.String getOrigin()>:<public>:<android.webkit.WebStorage.Origin>
<android.net.Uri: java.lang.String getFragment()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.hardware.GeomagneticField: float getY()>:<public>:<android.hardware.GeomagneticField>
<android.database.CursorWrapper: short getShort(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.animation.Animation: void reset()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.IntentService: void onCreate()>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.media.AudioManager: int getRingerMode()>:<public>:<android.media.AudioManager>
<android.widget.TextView: void onMeasure(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.wifi.WifiConfiguration: int describeContents()>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<android.content.ContextWrapper: void revokeUriPermission(android.net.Uri,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>:<public>:<org.apache.http.auth.AuthState>
<android.content.AsyncTaskLoader: void onForceLoad()>:<protected>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.ProgressDialog: void incrementSecondaryProgressBy(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.webkit.WebViewClient: void <init>()>:<public>:<android.webkit.WebViewClient>
<org.apache.http.HttpHost: boolean equals(java.lang.Object)>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.inputmethodservice.Keyboard: void setKeyHeight(int)>:<protected>:<android.inputmethodservice.Keyboard>
<junit.framework.TestSuite: void <init>(java.lang.Class)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.util.JsonReader: java.lang.String toString()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.view.inputmethod.InputConnectionWrapper: boolean finishComposingText()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>:<public synchronized>:<org.apache.http.auth.AuthSchemeRegistry>
<android.content.ContentProviderOperation: boolean isWriteOperation()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.AbstractMessageParser:org.apache.http.io.HttpMessageParser>
<android.app.Dialog: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.net.Proxy: void <init>()>:<public>:<android.net.Proxy>
<android.graphics.Camera: void finalize()>:<protected>:<android.graphics.Camera>
<android.view.View: int getHorizontalScrollbarHeight()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String)>:<protected>:<android.drm.DrmEvent>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.io.File,int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.provider.Settings.NameValueTable: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>:<protected static>:<android.provider.Settings.NameValueTable:android.provider.BaseColumns>
<android.database.AbstractCursor: boolean isClosed()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.content.Loader.OnLoadCompleteListener: void onLoadComplete(android.content.Loader,java.lang.Object)>:<public abstract>:<android.content.Loader.OnLoadCompleteListener>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getProxyHost()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.opengl.GLES10: void glLightf(int,int,float)>:<public static native>:<android.opengl.GLES10>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.graphics.Rect: boolean intersect(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<org.apache.http.HeaderElement: java.lang.String getValue()>:<public abstract>:<org.apache.http.HeaderElement>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.provider.ContactsContract.CommonDataKinds.Phone: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureFormats()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>:<public>:<android.graphics.Paint>
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.database.Cursor: int getColumnIndex(java.lang.String)>:<public abstract>:<android.database.Cursor>
<android.app.PendingIntent: int hashCode()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>:<public>:<android.view.ViewTreeObserver>
<org.apache.http.client.protocol.RequestTargetAuthentication: void <init>()>:<public>:<org.apache.http.client.protocol.RequestTargetAuthentication:org.apache.http.HttpRequestInterceptor>
<android.content.res.AssetManager: java.lang.String[] getLocales()>:<public final native>:<android.content.res.AssetManager>
<android.renderscript.ProgramFragmentFixedFunction: void <init>()>:<>:<android.renderscript.ProgramFragmentFixedFunction:android.renderscript.ProgramFragment,android.renderscript.Program,android.renderscript.BaseObj>
<android.graphics.drawable.shapes.RoundRectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.provider.ContactsContract.CommonDataKinds.Organization: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Organization:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.provider.SearchRecentSuggestions: void truncateHistory(android.content.ContentResolver,int)>:<protected>:<android.provider.SearchRecentSuggestions>
<android.test.MoreAsserts: void assertEquals(java.util.Set,java.util.Set)>:<public static>:<android.test.MoreAsserts>
<android.renderscript.Element.DataType: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.renderscript.Short2: void <init>()>:<public>:<android.renderscript.Short2>
<android.drm.DrmInfo: void <init>(int,byte[],java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.view.OrientationEventListener: void <init>(android.content.Context)>:<public>:<android.view.OrientationEventListener>
<android.graphics.PathMeasure: void <init>()>:<public>:<android.graphics.PathMeasure>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.speech.RecognitionService.Callback: void bufferReceived(byte[])>:<public>:<android.speech.RecognitionService.Callback>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>:<public abstract>:<android.text.SpanWatcher:android.text.NoCopySpan>
<android.test.RenamingDelegatingContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.ListPopupWindow: void setAnimationStyle(int)>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.text.Selection: void setSelection(android.text.Spannable,int)>:<public static final>:<android.text.Selection>
<android.text.style.UnderlineSpan: int getSpanTypeId()>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.opengl.GLSurfaceView.GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)>:<public abstract>:<android.opengl.GLSurfaceView.GLWrapper>
<android.view.SurfaceHolder.Callback2: void surfaceRedrawNeeded(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback2:android.view.SurfaceHolder.Callback>
<android.sax.Element: android.sax.Element requireChild(java.lang.String)>:<public>:<android.sax.Element>
<android.graphics.PathMeasure: boolean nextContour()>:<public>:<android.graphics.PathMeasure>
<android.webkit.WebView: void goBack()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.Allocation: void copyFrom(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLES20: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void setOnKeyListener(android.view.View.OnKeyListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int,int)>:<protected>:<android.renderscript.Script.FieldBase>
<android.inputmethodservice.InputMethodService: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>:<protected>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.Cursor: java.lang.String getString(int)>:<public abstract>:<android.database.Cursor>
<android.content.pm.PackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.graphics.Region: void <clinit>()>:<static>:<android.graphics.Region:android.os.Parcelable>
<android.widget.ExpandableListView: boolean isGroupExpanded(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>:<public abstract>:<android.text.TextWatcher:android.text.NoCopySpan>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.widget.ListPopupWindow: void setWidth(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference: int getPersistedInt(int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<org.json.JSONTokener: int dehexchar(char)>:<public static>:<org.json.JSONTokener>
<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.inputmethodservice.AbstractInputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.webkit.SslErrorHandler: void proceed()>:<public>:<android.webkit.SslErrorHandler:android.os.Handler>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo.TunnelType getTunnelType()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,int)>:<public static>:<android.provider.UserDictionary.Words:android.provider.BaseColumns>
<org.apache.http.entity.AbstractHttpEntity: void consumeContent()>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.text.TextUtils.SimpleStringSplitter: void <init>(char)>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<org.json.JSONObject: long optLong(java.lang.String,long)>:<public>:<org.json.JSONObject>
<android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.telephony.gsm.SmsMessage: boolean isMwiDontStore()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.PopupWindow: android.view.View getContentView()>:<public>:<android.widget.PopupWindow>
<org.apache.http.message.BasicHeaderElement: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.provider.CallLog.Calls: void <clinit>()>:<static>:<android.provider.CallLog.Calls:android.provider.BaseColumns>
<android.widget.BaseAdapter: boolean isEnabled(int)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.graphics.Color: int HSVToColor(int,float[])>:<public static>:<android.graphics.Color>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>:<public>:<android.view.LayoutInflater>
<android.database.sqlite.SQLiteDatabase: void finalize()>:<protected>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.AbsSeekBar: int getKeyProgressIncrement()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.content.ClipData.Item: java.lang.CharSequence getText()>:<public>:<android.content.ClipData.Item>
<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>:<public final>:<android.os.Binder:android.os.IBinder>
<android.view.MenuItem: boolean isVisible()>:<public abstract>:<android.view.MenuItem>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.Contacts.Phones: void <init>()>:<>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver.PendingResult goAsync()>:<public final>:<android.content.BroadcastReceiver>
<android.net.sip.SipProfile.Builder: void <init>(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.app.Activity: int getVolumeControlStream()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.View: int getScrollX()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>:<public>:<android.app.Notification.Builder>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int4)>:<public>:<android.renderscript.FieldPacker>
<android.os.AsyncTask: void onCancelled(java.lang.Object)>:<protected>:<android.os.AsyncTask>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.AbsListView: void draw(android.graphics.Canvas)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.wifi.WifiConfiguration.AuthAlgorithm: void <init>()>:<>:<android.net.wifi.WifiConfiguration.AuthAlgorithm>
<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.app.WallpaperInfo: void <clinit>()>:<static>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void prepareForInsert()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<org.apache.http.message.BasicTokenIterator: boolean isTokenChar(char)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.opengl.GLES10: void glNormalPointer(int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.graphics.PointF: void offset(float,float)>:<public final>:<android.graphics.PointF>
<android.telephony.gsm.GsmCellLocation: boolean equals(java.lang.Object)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.text.util.Linkify: void <clinit>()>:<static>:<android.text.util.Linkify>
<android.widget.SimpleExpandableListAdapter: int getGroupCount()>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.renderscript.Byte3: void <init>()>:<public>:<android.renderscript.Byte3>
<android.graphics.Camera: void applyToCanvas(android.graphics.Canvas)>:<public>:<android.graphics.Camera>
<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.os.Parcel: java.lang.String[] createStringArray()>:<public final>:<android.os.Parcel>
<android.content.Intent: int getIntExtra(java.lang.String,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.MailTo: java.lang.String getBody()>:<public>:<android.net.MailTo>
<android.preference.DialogPreference: void onDialogClosed(boolean)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.Toast: int getYOffset()>:<public>:<android.widget.Toast>
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>:<protected>:<org.apache.http.impl.cookie.AbstractCookieSpec:org.apache.http.cookie.CookieSpec>
<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.AbsListView: int getTopPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.ArrayAdapter: void sort(java.util.Comparator)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>:<protected>:<android.view.animation.LayoutAnimationController>
<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>:<public>:<android.webkit.WebViewClient>
<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.ZoomButton: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.text.BoringLayout: int getTopPadding()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.preference.PreferenceActivity.Header: void readFromParcel(android.os.Parcel)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header)>:<public>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.net.wifi.WifiConfiguration: java.lang.String toString()>:<public>:<android.net.wifi.WifiConfiguration:android.os.Parcelable>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.lang.Object clone()>:<public>:<org.apache.http.client.methods.HttpEntityEnclosingRequestBase:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.preference.PreferenceManager: int getSharedPreferencesMode()>:<public>:<android.preference.PreferenceManager>
<android.text.method.TimeKeyListener: void <clinit>()>:<static>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[],int,int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.telephony.SmsMessage: boolean isMWISetMessage()>:<public>:<android.telephony.SmsMessage>
<android.view.OrientationListener: void <init>(android.content.Context,int)>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.location.Location: void <init>(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>:<public>:<android.view.Window>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.telephony.SmsMessage: int getStatus()>:<public>:<android.telephony.SmsMessage>
<android.os.Handler: void removeMessages(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.graphics.Picture: int getHeight()>:<public native>:<android.graphics.Picture>
<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()>:<public final>:<android.mtp.MtpStorageInfo>
<android.os.Message: android.os.Message obtain(android.os.Handler,int)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()>:<public>:<android.text.style.RasterizerSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<org.apache.http.message.HeaderGroup: org.apache.http.Header getCondensedHeader(java.lang.String)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.net.Uri: java.lang.String getEncodedAuthority()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.view.View: void onDetachedFromWindow()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.ParcelableSpan: int getSpanTypeId()>:<public abstract>:<android.text.ParcelableSpan:android.os.Parcelable>
<android.graphics.Rect: java.lang.String flattenToString()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.view.View: int getWindowAttachCount()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: android.view.View getCurrentFocus()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)>:<public>:<android.webkit.WebChromeClient>
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>:<public static>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: void setCompoundDrawablePadding(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.CacheManager.CacheResult: java.lang.String getMimeType()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.FieldPacker: byte[] getData()>:<public final>:<android.renderscript.FieldPacker>
<org.apache.http.impl.io.ContentLengthOutputStream: void <init>(org.apache.http.io.SessionOutputBuffer,long)>:<public>:<org.apache.http.impl.io.ContentLengthOutputStream:java.io.OutputStream>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.webkit.MimeTypeMap: void <init>()>:<>:<android.webkit.MimeTypeMap>
<android.widget.RemoteViews: void setScrollPosition(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()>:<public>:<android.net.UrlQuerySanitizer>
<android.content.ContextWrapper: java.lang.String[] fileList()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.hardware.Camera.AutoFocusCallback: void onAutoFocus(boolean,android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.AutoFocusCallback>
<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.accessibility.AccessibilityEvent: int getCurrentItemIndex()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState valueOf(java.lang.String)>:<public static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<org.apache.http.message.BasicHttpResponse: void setEntity(org.apache.http.HttpEntity)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.content.ContentProviderOperation: android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[],int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.net.Uri: int compareTo(java.lang.Object)>:<public volatile>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.net.Uri.Builder: android.net.Uri build()>:<public>:<android.net.Uri.Builder>
<android.provider.CallLog.Calls: java.lang.String getLastOutgoingCall(android.content.Context)>:<public static>:<android.provider.CallLog.Calls:android.provider.BaseColumns>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.text.Layout: float getSecondaryHorizontal(int)>:<public>:<android.text.Layout>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.ViewGroup: boolean canAnimate()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ScrollView: void computeScroll()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.protocol.ResponseConnControl: void <init>()>:<public>:<org.apache.http.protocol.ResponseConnControl:org.apache.http.HttpResponseInterceptor>
<android.os.Parcel: android.os.Parcel obtain(int)>:<protected static final>:<android.os.Parcel>
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>:<public>:<android.content.res.Resources>
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>:<public>:<android.app.WallpaperManager>
<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<org.apache.http.HttpEntity: boolean isRepeatable()>:<public abstract>:<org.apache.http.HttpEntity>
<android.view.View: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.widget.RemoteViews: void setImageViewResource(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.telephony.NeighboringCellInfo: int getNetworkType()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<org.apache.http.util.ExceptionUtils: void <init>()>:<>:<org.apache.http.util.ExceptionUtils>
<android.database.CursorWrapper: boolean moveToLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.MediaController: void <init>(android.content.Context,boolean)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.message.BasicTokenIterator: java.lang.String createToken(java.lang.String,int,int)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.gesture.OrientedBoundingBox: void <init>()>:<>:<android.gesture.OrientedBoundingBox>
<android.view.ViewGroup: void onAnimationEnd()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView.OnKeyboardActionListener)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.renderscript.Element: android.renderscript.Element I32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>:<public>:<android.os.storage.StorageManager>
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: void setDrawingCacheQuality(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Spinner: void onDetachedFromWindow()>:<protected>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap.KeyData)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewGroup.OnHierarchyChangeListener>
<org.json.JSONObject: int optInt(java.lang.String,int)>:<public>:<org.json.JSONObject>
<android.webkit.WebView: int computeVerticalScrollExtent()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.BoringLayout: int getLineCount()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.app.Activity: void setSecondaryProgress(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.SyncAdapterType: boolean isAlwaysSyncable()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>:<public>:<android.graphics.PathMeasure>
<android.location.Location: boolean hasAccuracy()>:<public>:<android.location.Location:android.os.Parcelable>
<android.database.MatrixCursor: int getType(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.renderscript.FieldPacker: void skip(int)>:<public>:<android.renderscript.FieldPacker>
<android.content.Loader: boolean isReset()>:<public>:<android.content.Loader>
<android.service.wallpaper.WallpaperService.Engine: void onCreate(android.view.SurfaceHolder)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.widget.LinearLayout: float getWeightSum()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.AbstractHttpClient: void removeResponseInterceptorByClass(java.lang.Class)>:<public>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>:<public>:<android.appwidget.AppWidgetManager>
<junit.framework.TestResult: int errorCount()>:<public synchronized>:<junit.framework.TestResult>
<android.os.HandlerThread: void run()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.view.View: boolean isPressed()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ViewAnimator: void setDisplayedChild(int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.LauncherActivity.ListItem: void <init>()>:<public>:<android.app.LauncherActivity.ListItem>
<android.view.animation.Transformation: void setAlpha(float)>:<public>:<android.view.animation.Transformation>
<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiManager>
<android.widget.VideoView: void suspend()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.webkit.WebView: void clearMatches()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.SlidingDrawer: void animateOpen()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.os.Bundle: void putLong(java.lang.String,long)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>:<public abstract>:<android.app.FragmentTransaction>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority valueOf(java.lang.String)>:<public static>:<android.renderscript.RenderScript.Priority:java.lang.Enum>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>:<public>:<android.graphics.Paint>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>()>:<public>:<android.text.LoginFilter.UsernameFilterGeneric:android.text.LoginFilter>
<android.widget.CalendarView: void setDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.xmlpull.v1.XmlSerializer: void entityRef(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.mtp.MtpDevice: java.lang.String getDeviceName()>:<public>:<android.mtp.MtpDevice>
<android.telephony.SmsMessage: boolean isMwiDontStore()>:<public>:<android.telephony.SmsMessage>
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Debug: void startMethodTracing(java.lang.String)>:<public static>:<android.os.Debug>
<android.accounts.AccountManagerCallback: void run(android.accounts.AccountManagerFuture)>:<public abstract>:<android.accounts.AccountManagerCallback>
<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>:<public abstract>:<android.database.sqlite.SQLiteOpenHelper>
<android.graphics.Point: void <init>(int,int)>:<public>:<android.graphics.Point>
<org.apache.http.message.HeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean)>:<public abstract>:<org.apache.http.message.HeaderValueFormatter>
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.net.sip.SipProfile: java.lang.String getDisplayName()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>:<public final>:<android.graphics.drawable.Drawable>
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: boolean awakenScrollBars()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Paint: void setStrokeWidth(float)>:<public native>:<android.graphics.Paint>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>:<public>:<android.graphics.Paint>
<android.test.mock.MockResources: android.content.res.XmlResourceParser getLayout(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.test.RenamingDelegatingContext: android.content.ContentProvider providerWithRenamedContext(java.lang.Class,android.content.Context,java.lang.String,boolean)>:<public static>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean)>:<public>:<android.content.AbstractThreadedSyncAdapter>
<org.apache.http.auth.params.AuthParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.auth.params.AuthParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.test.AndroidTestCase: void scrubClass(java.lang.Class)>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.NinePatch)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.media.audiofx.Virtualizer: void setParameterListener(android.media.audiofx.Virtualizer.OnParameterChangeListener)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<org.apache.http.impl.io.AbstractSessionInputBuffer: int fillBuffer()>:<protected>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.database.CursorWrapper: boolean isClosed()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Rect: boolean equals(java.lang.Object)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.ViewFlipper: void onDetachedFromWindow()>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.ExtractedText: void <init>()>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<org.apache.http.util.CharArrayBuffer: void append(org.apache.http.util.CharArrayBuffer)>:<public>:<org.apache.http.util.CharArrayBuffer>
<junit.framework.Assert: void assertEquals(java.lang.String,char,char)>:<public static>:<junit.framework.Assert>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.util.SparseIntArray: int get(int)>:<public>:<android.util.SparseIntArray>
<android.graphics.Matrix: void getValues(float[])>:<public>:<android.graphics.Matrix>
<android.os.SystemClock: long elapsedRealtime()>:<public static native>:<android.os.SystemClock>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>:<public abstract>:<android.database.Cursor>
<android.provider.MediaStore.Audio.Albums: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Albums:android.provider.BaseColumns,android.provider.MediaStore.Audio.AlbumColumns>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>:<public static synchronized>:<android.webkit.CookieManager>
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>:<public>:<android.graphics.SurfaceTexture>
<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.StatusLine)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.provider.MediaStore.Video.Thumbnails: void <init>()>:<public>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.text.method.ArrowKeyMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.content.res.Resources: android.graphics.Movie getMovie(int)>:<public>:<android.content.res.Resources>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.drm.DrmRights: java.lang.String getAccountId()>:<public>:<android.drm.DrmRights>
<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.content.Loader: void unregisterListener(android.content.Loader.OnLoadCompleteListener)>:<public>:<android.content.Loader>
<org.apache.http.conn.scheme.PlainSocketFactory: int hashCode()>:<public>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.ExpandableListAdapter: void onGroupExpanded(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.animation.AnimatorSet: long getStartDelay()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.app.Dialog: void closeOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.text.style.DrawableMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.view.View: android.view.View getRootView()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.test.mock.MockContext: android.content.Context createPackageContext(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.util.JsonWriter: void setIndent(java.lang.String)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy build()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.os.Debug: int getGlobalExternalFreedSize()>:<public static>:<android.os.Debug>
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>:<public>:<android.widget.ImageView:android.view.View>
<org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)>:<public static>:<org.apache.http.conn.params.ConnManagerParams:org.apache.http.conn.params.ConnManagerPNames>
<android.widget.CalendarView: void setMaxDate(long)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>:<public>:<android.media.ExifInterface>
<android.widget.HorizontalScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ActivityUnitTestCase: void setApplication(android.app.Application)>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Looper: void quit()>:<public>:<android.os.Looper>
<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.content.res.Configuration: void setToDefaults()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.app.admin.DeviceAdminReceiver: void onDisabled(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.webkit.WebSyncManager: void sync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.widget.GridView: int computeVerticalScrollRange()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.telephony.TelephonyManager: int getPhoneType()>:<public>:<android.telephony.TelephonyManager>
<android.widget.HorizontalScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.params.AbstractHttpParams: double getDoubleParameter(java.lang.String,double)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<org.apache.http.client.methods.HttpGet: void <init>()>:<public>:<org.apache.http.client.methods.HttpGet:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.graphics.RectF: void setEmpty()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.ActivityGroup: void onCreate(android.os.Bundle)>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.test.InstrumentationTestSuite: void addTestSuite(java.lang.Class)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.renderscript.Matrix2f: void multiply(android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.util.Log: int println(int,java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.view.Surface: void unlockCanvas(android.graphics.Canvas)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element A_8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.Toast: void cancel()>:<public>:<android.widget.Toast>
<android.drm.DrmEvent: int getUniqueId()>:<public>:<android.drm.DrmEvent>
<org.apache.http.params.AbstractHttpParams: long getLongParameter(java.lang.String,long)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.impl.DefaultHttpRequestFactory: org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine)>:<public>:<org.apache.http.impl.DefaultHttpRequestFactory:org.apache.http.HttpRequestFactory>
<android.text.format.Time: long normalize(boolean)>:<public native>:<android.text.format.Time>
<android.os.Vibrator: void cancel()>:<public>:<android.os.Vibrator>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.DragEvent: java.lang.Object getLocalState()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.speech.RecognitionService: void onStopListening(android.speech.RecognitionService.Callback)>:<protected abstract>:<android.speech.RecognitionService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.io.IdentityOutputStream: void <init>(org.apache.http.io.SessionOutputBuffer)>:<public>:<org.apache.http.impl.io.IdentityOutputStream:java.io.OutputStream>
<android.widget.CursorAdapter: void onContentChanged()>:<protected>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite build()>:<public final>:<android.test.suitebuilder.TestSuiteBuilder>
<android.webkit.WebSettings: boolean getNavDump()>:<public>:<android.webkit.WebSettings>
<android.widget.RelativeLayout: void setVerticalGravity(int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>:<public static native>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ContentValues: boolean equals(java.lang.Object)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<org.apache.http.util.LangUtils: int hashCode(int,int)>:<public static>:<org.apache.http.util.LangUtils>
<org.json.JSONObject: java.lang.String numberToString(java.lang.Number)>:<public static>:<org.json.JSONObject>
<android.widget.TabHost: void addTab(android.widget.TabHost.TabSpec)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.res.ObbInfo: java.lang.String toString()>:<public>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.database.Cursor: void deactivate()>:<public abstract>:<android.database.Cursor>
<android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus.Listener)>:<public>:<android.location.LocationManager>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType[] values()>:<public static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>:<public abstract>:<org.apache.http.conn.scheme.SocketFactory>
<org.apache.http.protocol.HttpRequestHandlerRegistry: void setHandlers(java.util.Map)>:<public>:<org.apache.http.protocol.HttpRequestHandlerRegistry:org.apache.http.protocol.HttpRequestHandlerResolver>
<android.util.TimingLogger: void dumpToLog()>:<public>:<android.util.TimingLogger>
<android.graphics.Paint.Align: void <clinit>()>:<static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.view.ViewStub: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.view.ViewStub:android.view.View>
<android.view.KeyEvent: boolean isSymPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.LayoutTransition: void setStartDelay(int,long)>:<public>:<android.animation.LayoutTransition>
<android.widget.AbsListView: void reclaimViews(java.util.List)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.CursorAdapter: int getCount()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.protocol.RequestConnControl: void <init>()>:<public>:<org.apache.http.protocol.RequestConnControl:org.apache.http.HttpRequestInterceptor>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()>:<public final>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: int read(byte[],int,int)>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>:<public static>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.widget.AbsListView: boolean isFastScrollEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Activity: boolean onSearchRequested()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder.OnInfoListener)>:<public>:<android.media.MediaRecorder>
<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.cookie.CookiePathComparator: int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie)>:<public>:<org.apache.http.cookie.CookiePathComparator:java.io.Serializable,java.util.Comparator>
<android.widget.TextView.BufferType: void <clinit>()>:<static>:<android.widget.TextView.BufferType:java.lang.Enum>
<android.opengl.GLES20: void glPolygonOffset(float,float)>:<public static native>:<android.opengl.GLES20>
<android.os.DropBoxManager.Entry: java.lang.String getTag()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<org.apache.http.util.CharArrayBuffer: void clear()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.widget.AdapterView: android.view.View getEmptyView()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.view.KeyEvent: java.lang.String getCharacters()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.SlidingDrawer: void setOnDrawerOpenListener(android.widget.SlidingDrawer.OnDrawerOpenListener)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>:<public>:<org.apache.http.impl.client.DefaultHttpRequestRetryHandler:org.apache.http.client.HttpRequestRetryHandler>
<android.content.SyncStats: void <init>()>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>:<public>:<android.app.LocalActivityManager>
<android.webkit.ConsoleMessage: int lineNumber()>:<public>:<android.webkit.ConsoleMessage>
<android.content.ContentValues: boolean containsKey(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.net.wifi.WifiInfo: int getRssi()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.GeolocationPermissions: void allow(java.lang.String)>:<public>:<android.webkit.GeolocationPermissions>
<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.text.style.LeadingMarginSpan.Standard: int getLeadingMargin(boolean)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterById(long[])>:<public transient>:<android.app.DownloadManager.Query>
<android.widget.TextView: void beginBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TableLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode[] values()>:<public static>:<android.graphics.AvoidXfermode.Mode:java.lang.Enum>
<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.json.JSONArray: boolean isNull(int)>:<public>:<org.json.JSONArray>
<org.apache.http.conn.ClientConnectionRequest: void abortRequest()>:<public abstract>:<org.apache.http.conn.ClientConnectionRequest>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.impl.cookie.BestMatchSpec: void <init>(java.lang.String[],boolean)>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<android.os.Bundle: void putShort(java.lang.String,short)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActivityManager.RunningServiceInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.app.ProgressDialog: void setProgressStyle(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<junit.runner.TestSuiteLoader: java.lang.Class load(java.lang.String)>:<public abstract>:<junit.runner.TestSuiteLoader>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>:<public static>:<android.media.CamcorderProfile>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.Mesh getMesh()>:<public>:<android.renderscript.FileA3D.IndexEntry>
<android.content.res.ColorStateList: boolean isStateful()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.backup.BackupAgentHelper: void addHelper(java.lang.String,android.app.backup.BackupHelper)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebView: boolean zoomIn()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.HttpConnection: void shutdown()>:<public abstract>:<org.apache.http.HttpConnection>
<android.widget.ScrollView: void requestLayout()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>:<public>:<android.location.LocationManager>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.widget.DatePicker: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.Debug: int getThreadExternalAllocSize()>:<public static>:<android.os.Debug>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.graphics.Matrix: float mapRadius(float)>:<public>:<android.graphics.Matrix>
<android.webkit.WebView: void clearHistory()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.impl.cookie.BasicClientCookie2: java.lang.Object clone()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<android.mtp.MtpDeviceInfo: java.lang.String getModel()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine)>:<public>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.text.Annotation: java.lang.String getValue()>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.test.mock.MockContext: int getWallpaperDesiredMinimumHeight()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: boolean expectContinue()>:<public>:<org.apache.http.message.BasicHttpEntityEnclosingRequest:org.apache.http.message.BasicHttpRequest,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.app.KeyguardManager.KeyguardLock: void <init>(android.app.KeyguardManager)>:<>:<android.app.KeyguardManager.KeyguardLock>
<android.content.Loader: boolean isAbandoned()>:<public>:<android.content.Loader>
<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.view.View: void onMeasure(int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: boolean persistInt(int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.util.SparseBooleanArray: void delete(int)>:<public>:<android.util.SparseBooleanArray>
<android.widget.TableRow.LayoutParams: void <init>(int,int)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>:<public>:<android.media.MediaPlayer>
<android.widget.CompoundButton: void setButtonDrawable(int)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float)>:<public>:<android.widget.OverScroller>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>:<public abstract>:<org.apache.http.conn.ssl.X509HostnameVerifier:javax.net.ssl.HostnameVerifier>
<android.net.TrafficStats: long getTotalTxBytes()>:<public static native>:<android.net.TrafficStats>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)>:<public static>:<android.text.TextUtils>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Instrumentation: android.content.ComponentName getComponentName()>:<public>:<android.app.Instrumentation>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.CacheManager.CacheResult: void setEncoding(java.lang.String)>:<public>:<android.webkit.CacheManager.CacheResult>
<android.os.storage.OnObbStateChangeListener: void onObbStateChange(java.lang.String,int)>:<public>:<android.os.storage.OnObbStateChangeListener>
<android.net.rtp.AudioStream: void join(android.net.rtp.AudioGroup)>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.os.Parcel: void readStringArray(java.lang.String[])>:<public final>:<android.os.Parcel>
<android.test.TouchUtils: int dragViewToY(android.test.ActivityInstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<org.apache.http.protocol.HttpResponseInterceptorList: void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int)>:<public abstract>:<org.apache.http.protocol.HttpResponseInterceptorList>
<android.mtp.MtpObjectInfo: int getCompressedSize()>:<public final>:<android.mtp.MtpObjectInfo>
<android.net.Uri: java.lang.String toString()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.media.AudioRecord: int getAudioFormat()>:<public>:<android.media.AudioRecord>
<android.preference.PreferenceActivity: void onBuildHeaders(java.util.List)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.graphics.Path: boolean isEmpty()>:<public>:<android.graphics.Path>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>:<public>:<android.media.MediaMetadataRetriever>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.test.mock.MockPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.provider.UserDictionary: void <init>()>:<public>:<android.provider.UserDictionary>
<android.content.ContentValues: void put(java.lang.String,byte[])>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.renderscript.Matrix4f: float get(int,int)>:<public>:<android.renderscript.Matrix4f>
<android.view.KeyEvent: void setSource(int)>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Parcel: void writeValue(java.lang.Object)>:<public final>:<android.os.Parcel>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.ContentQueryMap: void requery()>:<public>:<android.content.ContentQueryMap:java.util.Observable>
<android.test.mock.MockCursor: int getPosition()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.MotionEvent: int getPointerCount()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.renderscript.Matrix4f: boolean inverse()>:<public>:<android.renderscript.Matrix4f>
<android.preference.Preference: boolean isPersistent()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.Allocation: void resize(int)>:<public synchronized>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable.ShaderFactory getShaderFactory()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView: void afterTextChanged(android.text.Editable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.impl.client.AbstractHttpClient: void setCookieStore(org.apache.http.client.CookieStore)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.provider.CallLog.Calls: void <init>()>:<public>:<android.provider.CallLog.Calls:android.provider.BaseColumns>
<android.database.CursorWindow: void finalize()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.TableRow: void onMeasure(int,int)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.ProviderTestCase: void tearDown()>:<protected>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int,int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.os.Bundle: java.lang.String toString()>:<public synchronized>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.client.params.ClientParamBean: void setHandleAuthentication(boolean)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.test.mock.MockResources: android.content.res.XmlResourceParser getAnimation(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.content.res.Resources.Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>:<public>:<android.content.res.Resources.Theme>
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<org.apache.http.auth.AuthScope: java.lang.String getRealm()>:<public>:<org.apache.http.auth.AuthScope>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int,int)>:<public>:<android.media.AudioTrack>
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.View: void refreshDrawableState()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyEvent: int getModifierMetaStateMask()>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.telephony.SmsManager: void <init>()>:<>:<android.telephony.SmsManager>
<android.os.RemoteCallbackList: void kill()>:<public>:<android.os.RemoteCallbackList>
<android.os.Process: boolean supportsProcesses()>:<public static final native>:<android.os.Process>
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.renderscript.Font: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.app.NativeActivity: void onLowMemory()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>:<public>:<android.app.LocalActivityManager>
<android.accounts.AccountManager: void <init>()>:<>:<android.accounts.AccountManager>
<android.media.AudioManager: boolean shouldVibrate(int)>:<public>:<android.media.AudioManager>
<android.test.TouchUtils: void dragQuarterScreenDown(android.test.InstrumentationTestCase,android.app.Activity)>:<public static>:<android.test.TouchUtils>
<org.apache.http.NoHttpResponseException: void <init>(java.lang.String)>:<public>:<org.apache.http.NoHttpResponseException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.provider.MediaStore.Audio.Genres.Members: void <init>()>:<public>:<android.provider.MediaStore.Audio.Genres.Members:android.provider.MediaStore.Audio.AudioColumns>
<org.apache.http.impl.cookie.BasicClientCookie: void setExpiryDate(java.util.Date)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.app.backup.BackupAgent: void onCreate()>:<public>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.content.Context: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<org.apache.http.entity.InputStreamEntity: boolean isRepeatable()>:<public>:<org.apache.http.entity.InputStreamEntity:org.apache.http.entity.AbstractHttpEntity>
<org.apache.http.impl.cookie.BrowserCompatSpec: int getVersion()>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getHopTarget(int)>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<org.apache.http.entity.HttpEntityWrapper: void consumeContent()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.net.NetworkInfo.DetailedState: void <init>(java.lang.String,int)>:<private>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.text.style.TextAppearanceSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.apache.http.impl.auth.DigestScheme: void overrideParamter(java.lang.String,java.lang.String)>:<public>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.opengl.Matrix: void translateM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.text.LoginFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.widget.NumberPicker: boolean getWrapSelectorWheel()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.bluetooth.BluetoothDevice: java.lang.String toString()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>:<public>:<android.telephony.SmsManager>
<android.provider.Contacts.Extensions: void <init>()>:<>:<android.provider.Contacts.Extensions:android.provider.BaseColumns,android.provider.Contacts.ExtensionsColumns>
<android.media.RingtoneManager: void setType(int)>:<public>:<android.media.RingtoneManager>
<android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>:<public static native>:<android.text.format.Time>
<android.widget.TabWidget: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.content.Intent.FilterComparison: android.content.Intent getIntent()>:<public>:<android.content.Intent.FilterComparison>
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.view.ActionMode: void setCustomView(android.view.View)>:<public abstract>:<android.view.ActionMode>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.UiModeManager: void setNightMode(int)>:<public>:<android.app.UiModeManager>
<android.util.SparseIntArray: void delete(int)>:<public>:<android.util.SparseIntArray>
<android.media.ExifInterface: void <init>(java.lang.String)>:<public>:<android.media.ExifInterface>
<android.hardware.usb.UsbInterface: int getEndpointCount()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AccelerateInterpolator:android.view.animation.Interpolator>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.content.ContextWrapper: java.io.File getObbDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage.SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>:<public static>:<android.telephony.gsm.SmsMessage>
<android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<junit.framework.TestCase: int countTestCases()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.mtp.MtpObjectInfo: int getSequenceNumber()>:<public final>:<android.mtp.MtpObjectInfo>
<android.test.SyncBaseInstrumentation: void setUp()>:<protected>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.protocol.HttpRequestHandlerRegistry: void unregister(java.lang.String)>:<public>:<org.apache.http.protocol.HttpRequestHandlerRegistry:org.apache.http.protocol.HttpRequestHandlerResolver>
<android.widget.ListPopupWindow: boolean performItemClick(int)>:<public>:<android.widget.ListPopupWindow>
<android.view.ViewGroup: android.view.animation.Animation.AnimationListener getLayoutAnimationListener()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.HttpHost: void <init>(java.lang.String,int)>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.content.ContextWrapper: android.content.res.Resources.Theme getTheme()>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.test.ServiceTestCase: android.app.Service getService()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.Window: int getLocalFeatures()>:<protected final>:<android.view.Window>
<org.apache.http.protocol.RequestExpectContinue: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.RequestExpectContinue:org.apache.http.HttpRequestInterceptor>
<android.content.AsyncTaskLoader: boolean cancelLoad()>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<org.apache.http.impl.io.AbstractSessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>:<public>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.app.Activity: java.lang.CharSequence getTitle()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetInitialHeader()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.os.Handler: boolean sendMessage(android.os.Message)>:<public final>:<android.os.Handler>
<android.text.style.CharacterStyle: void <init>()>:<public>:<android.text.style.CharacterStyle>
<org.apache.http.impl.cookie.BestMatchSpec: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabHost: android.view.View getCurrentTabView()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.media.MediaRecorder.AudioEncoder: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.AudioEncoder>
<android.text.DynamicLayout: int getLineCount()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.webkit.JsResult: void <init>()>:<>:<android.webkit.JsResult>
<org.apache.http.HeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>:<public abstract>:<org.apache.http.HeaderElement>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setTexture(android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode,android.renderscript.ProgramFragmentFixedFunction.Builder.Format,int)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.widget.AbsSpinner: void setAdapter(android.widget.Adapter)>:<public volatile>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>:<public final>:<android.os.Handler>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>:<public static>:<android.graphics.BitmapFactory>
<android.accounts.AccountAuthenticatorActivity: void finish()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureLibraries: void <init>()>:<>:<android.gesture.GestureLibraries>
<android.os.Message: void sendToTarget()>:<public>:<android.os.Message:android.os.Parcelable>
<android.hardware.usb.UsbAccessory: java.lang.String getModel()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.content.SearchRecentSuggestionsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.provider.Contacts.ContactMethods: void <clinit>()>:<static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.view.View: void setSaveEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>:<public static>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<junit.runner.BaseTestRunner: void setLoading(boolean)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<org.apache.http.impl.SocketHttpServerConnection: void assertNotOpen()>:<protected>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<org.apache.http.impl.cookie.NetscapeDraftSpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.app.NativeActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.app.Activity: void setIntent(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.protocol.HttpDateGenerator: void <init>()>:<public>:<org.apache.http.protocol.HttpDateGenerator>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int available()>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.graphics.Path: void incReserve(int)>:<public>:<android.graphics.Path>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void closeExpiredConnections()>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>:<public>:<android.webkit.WebChromeClient>
<android.content.pm.PackageItemInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo.DisplayNameComparator:java.util.Comparator>
<org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>:<public>:<org.apache.http.params.DefaultedHttpParams:org.apache.http.params.AbstractHttpParams>
<org.apache.http.MalformedChunkCodingException: void <init>()>:<public>:<org.apache.http.MalformedChunkCodingException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getRealm()>:<public>:<org.apache.http.impl.auth.RFC2617Scheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.media.CameraProfile: void <init>()>:<public>:<android.media.CameraProfile>
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.MediaController.MediaPlayerControl: int getCurrentPosition()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.net.TrafficStats: long getTotalRxBytes()>:<public static native>:<android.net.TrafficStats>
<android.test.mock.MockPackageManager: int[] getPackageGids(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.app.ActivityManager: int getLauncherLargeIconDensity()>:<public>:<android.app.ActivityManager>
<junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)>:<public static>:<junit.framework.TestSuite:junit.framework.Test>
<android.os.Parcel: int dataPosition()>:<public final native>:<android.os.Parcel>
<android.util.AttributeSet: int getIdAttributeResourceValue(int)>:<public abstract>:<android.util.AttributeSet>
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.graphics.PointF: void <init>(android.graphics.Point)>:<public>:<android.graphics.PointF>
<org.apache.http.HttpEntity: void consumeContent()>:<public abstract>:<org.apache.http.HttpEntity>
<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>:<public>:<android.content.res.TypedArray>
<org.apache.http.protocol.BasicHttpProcessor: void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor)>:<protected>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.widget.TextView: int getLineHeight()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>:<public static final>:<android.text.util.Linkify>
<android.database.CrossProcessCursor: boolean onMove(int,int)>:<public abstract>:<android.database.CrossProcessCursor:android.database.Cursor>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.test.ActivityUnitTestCase: boolean isFinishCalled()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.Scroller: void forceFinished(boolean)>:<public final>:<android.widget.Scroller>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.Shape clone()>:<public volatile>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.util.JsonReader: java.lang.String nextName()>:<public>:<android.util.JsonReader:java.io.Closeable>
<org.apache.http.HeaderIterator: org.apache.http.Header nextHeader()>:<public abstract>:<org.apache.http.HeaderIterator:java.util.Iterator>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode.ThreadPolicy)>:<public static>:<android.os.StrictMode>
<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.text.style.AbsoluteSizeSpan: boolean getDip()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.media.MediaScannerConnection: boolean isConnected()>:<public synchronized>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.widget.ExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.widget.Gallery: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.gesture.Prediction: java.lang.String toString()>:<public>:<android.gesture.Prediction>
<android.net.sip.SipAudioCall.Listener: void onCallEstablished(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas()>:<public abstract>:<android.view.SurfaceHolder>
<android.view.View: void clearAnimation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: boolean persistBoolean(boolean)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.content.ContextWrapper: void enforcePermission(java.lang.String,int,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.message.BasicListHeaderIterator: int findNext(int)>:<protected>:<org.apache.http.message.BasicListHeaderIterator:org.apache.http.HeaderIterator>
<android.database.DefaultDatabaseErrorHandler: void <init>()>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>:<public>:<android.content.BroadcastReceiver>
<android.graphics.Movie: boolean isOpaque()>:<public native>:<android.graphics.Movie>
<android.test.mock.MockPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.io.File)>:<public static>:<android.gesture.GestureLibraries>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>:<public static final>:<android.text.format.DateFormat>
<android.renderscript.Script: void setVar(int,double)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<org.apache.http.message.HeaderGroup: void <init>()>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CalendarView: int getFirstDayOfWeek()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.AbstractWindowedCursor: void checkPosition()>:<protected>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.content.Intent: java.lang.String toString()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.Paint: void finalize()>:<protected>:<android.graphics.Paint>
<android.content.ContentProviderOperation.Builder: void <init>()>:<>:<android.content.ContentProviderOperation.Builder>
<android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<org.json.JSONArray: java.lang.String toString(int)>:<public>:<org.json.JSONArray>
<android.inputmethodservice.Keyboard: int getHorizontalGap()>:<protected>:<android.inputmethodservice.Keyboard>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.database.CursorWindow: int getNumRows()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.test.ViewAsserts: void assertRightAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>:<public>:<android.app.LocalActivityManager>
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>:<public>:<android.location.LocationManager>
<android.content.pm.PackageItemInfo: void <init>(android.os.Parcel)>:<protected>:<android.content.pm.PackageItemInfo>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>:<public>:<android.telephony.TelephonyManager>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri,int)>:<public>:<android.drm.DrmManagerClient>
<android.database.CursorWindow: java.lang.String getString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.content.Intent: android.content.Intent setType(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.AlteredCharSequence: java.lang.CharSequence subSequence(int,int)>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Type)>:<public>:<android.renderscript.Mesh.Builder>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.preference.Preference: void setEnabled(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.message.BasicHeaderIterator: org.apache.http.Header nextHeader()>:<public>:<org.apache.http.message.BasicHeaderIterator:org.apache.http.HeaderIterator>
<org.apache.http.impl.cookie.RFC2109Spec: int getVersion()>:<public>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.view.inputmethod.InputBinding: void <clinit>()>:<static>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>:<public abstract>:<org.apache.http.FormattedHeader:org.apache.http.Header>
<android.app.IntentService: void setIntentRedelivery(boolean)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.telephony.SmsMessage: java.lang.String getMessageBody()>:<public>:<android.telephony.SmsMessage>
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.View: int computeHorizontalScrollRange()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONObject: int getInt(java.lang.String)>:<public>:<org.json.JSONObject>
<android.app.FragmentManager: android.app.Fragment findFragmentById(int)>:<public abstract>:<android.app.FragmentManager>
<android.database.Cursor: boolean isBeforeFirst()>:<public abstract>:<android.database.Cursor>
<android.database.CursorWrapper: int getColumnCount()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.Drawable: int getMinimumWidth()>:<public>:<android.graphics.drawable.Drawable>
<org.json.JSONTokener: char nextClean()>:<public>:<org.json.JSONTokener>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.view.KeyEvent.DispatcherState: void handleUpEvent(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String)>:<public synchronized>:<org.apache.http.cookie.CookieSpecRegistry>
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.CommonDataKinds.GroupMembership: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.GroupMembership:android.provider.ContactsContract.DataColumnsWithJoins>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory getFactory()>:<public final>:<android.view.LayoutInflater>
<android.view.accessibility.AccessibilityEvent: boolean isEnabled()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>:<public static final>:<android.text.format.DateFormat>
<org.json.JSONObject: void <init>(java.lang.String)>:<public>:<org.json.JSONObject>
<org.apache.http.entity.FileEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.entity.FileEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.text.method.CharacterPickerDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>:<public>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<android.widget.ScrollView: void setOverScrollMode(int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.CacheManager.CacheResult: long getExpires()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.view.ViewGroup: void setClipToPadding(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.view.View: void setCameraDistance(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent.PointerCoords)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.entity.InputStreamEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.InputStreamEntity:org.apache.http.entity.AbstractHttpEntity>
<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.Manifest.permission: void <init>()>:<public>:<android.Manifest.permission>
<android.speech.SpeechRecognizer: void <init>()>:<>:<android.speech.SpeechRecognizer>
<org.apache.http.auth.AuthSchemeRegistry: void unregister(java.lang.String)>:<public synchronized>:<org.apache.http.auth.AuthSchemeRegistry>
<org.apache.http.impl.conn.tsccm.WaitingThread: void interrupt()>:<public>:<org.apache.http.impl.conn.tsccm.WaitingThread>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeath()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.widget.RelativeLayout: void <init>(android.content.Context)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.text.format.Time: void set(long)>:<public native>:<android.text.format.Time>
<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.AbstractWindowedCursor: long getLong(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.hardware.Camera.Parameters: java.util.List getSupportedFocusModes()>:<public>:<android.hardware.Camera.Parameters>
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall.Listener)>:<public>:<android.net.sip.SipManager>
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.AdapterView: void setEmptyView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.app.Activity: void setContentView(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.io.SessionOutputBuffer: void flush()>:<public abstract>:<org.apache.http.io.SessionOutputBuffer>
<android.view.animation.RotateAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<org.apache.http.io.SessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>:<public abstract>:<org.apache.http.io.SessionOutputBuffer>
<android.app.TimePickerDialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.database.sqlite.SQLiteDiskIOException: void <init>()>:<public>:<android.database.sqlite.SQLiteDiskIOException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.hardware.usb.UsbEndpoint: int getDirection()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<org.apache.http.util.ByteArrayBuffer: void <init>(int)>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.app.Fragment: boolean equals(java.lang.Object)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.widget.QuickContactBadge: void setMode(int)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.GridView: int computeVerticalScrollExtent()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewParent: void bringChildToFront(android.view.View)>:<public abstract>:<android.view.ViewParent>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>:<public>:<org.json.JSONObject>
<android.widget.MediaController: void onFinishInflate()>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.Drawable[])>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.style.AbsoluteSizeSpan: void <init>(int)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.content.ContentProvider: void setReadPermission(java.lang.String)>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.text.style.SuperscriptSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.SuperscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.res.Resources: int getColor(int)>:<public>:<android.content.res.Resources>
<android.test.ProviderTestCase: android.test.mock.MockContentResolver getMockContentResolver()>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.provider.MediaStore.Audio.Albums: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Albums:android.provider.BaseColumns,android.provider.MediaStore.Audio.AlbumColumns>
<android.view.View: boolean isPaddingOffsetRequired()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.BaseAdapter: void <init>()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<org.apache.http.protocol.DefaultedHttpContext: void <init>(org.apache.http.protocol.HttpContext,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.DefaultedHttpContext:org.apache.http.protocol.HttpContext>
<android.widget.AbsListView: void layoutChildren()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.conn.routing.RouteTracker: void <init>(org.apache.http.conn.routing.HttpRoute)>:<public>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.preference.PreferenceScreen: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>:<public>:<android.app.WallpaperManager>
<android.graphics.DrawFilter: void <init>()>:<public>:<android.graphics.DrawFilter>
<android.renderscript.RenderScriptGL: void bindProgramRaster(android.renderscript.ProgramRaster)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.database.Cursor: boolean moveToPosition(int)>:<public abstract>:<android.database.Cursor>
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>:<public>:<android.app.Instrumentation>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>:<public abstract>:<android.os.IBinder>
<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.util.MonthDisplayHelper: int getMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>:<public static>:<android.net.http.SslCertificate>
<android.test.mock.MockCursor: int getColumnIndex(java.lang.String)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.provider.ContactsContract.CommonDataKinds.Note: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Note:android.provider.ContactsContract.DataColumnsWithJoins>
<android.widget.TabHost: void onAttachedToWindow()>:<protected>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.HeaderViewListAdapter: int getHeadersCount()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.view.animation.CycleInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator>
<android.provider.MediaStore.Audio.Playlists: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Playlists:android.provider.BaseColumns,android.provider.MediaStore.Audio.PlaylistsColumns>
<android.opengl.GLES10: void glLightModelf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: boolean isFocusable()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)>:<public static>:<android.opengl.GLU>
<org.apache.http.impl.client.DefaultRequestDirector: void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.graphics.Region: void finalize()>:<protected>:<android.graphics.Region:android.os.Parcelable>
<android.net.sip.SipSession.Listener: void onCallEnded(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.media.AudioTrack: int write(byte[],int,int)>:<public>:<android.media.AudioTrack>
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>:<public static final>:<android.database.DatabaseUtils>
<android.view.MotionEvent: float getHistoricalTouchMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AbsListView: void smoothScrollToPosition(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Im:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.net.LocalServerSocket: void <init>(java.lang.String)>:<public>:<android.net.LocalServerSocket>
<android.telephony.SignalStrength: void <init>()>:<>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String,int)>:<public>:<android.renderscript.Element.Builder>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>:<public>:<android.telephony.TelephonyManager>
<dalvik.system.DexFile: void finalize()>:<protected>:<dalvik.system.DexFile>
<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.view.MotionEvent.PointerCoords: void setAxisValue(int,float)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.TypefaceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.test.PerformanceTestCase.Intermediates: void setInternalIterations(int)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<org.apache.http.conn.routing.RouteInfo: org.apache.http.HttpHost getTargetHost()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.database.AbstractCursor: boolean moveToPosition(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)>:<public static>:<android.text.format.Time>
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.database.AbstractCursor: boolean moveToLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.Display: void <init>()>:<>:<android.view.Display>
<junit.framework.Assert: void fail()>:<public static>:<junit.framework.Assert>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double)>:<public>:<org.apache.http.params.AbstractHttpParams:org.apache.http.params.HttpParams>
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.graphics.SumPathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>:<public>:<android.graphics.SumPathEffect:android.graphics.PathEffect>
<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.protocol.HttpRequestExecutor>
<org.apache.http.impl.cookie.NetscapeDomainHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.NetscapeDomainHandler:org.apache.http.impl.cookie.BasicDomainHandler>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)>:<public>:<org.apache.http.client.methods.HttpEntityEnclosingRequestBase:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.nfc.tech.NfcB: boolean isConnected()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.nfc.tech.NfcA: short getSak()>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.content.pm.PackageInfo: java.lang.String toString()>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.app.ActivityManager: void <init>()>:<>:<android.app.ActivityManager>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,int,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<org.apache.http.impl.cookie.BasicClientCookie2: void setCommentURL(java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<org.apache.http.message.BasicTokenIterator: int findTokenSeparator(int)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>:<public final synchronized>:<org.apache.http.conn.scheme.SchemeRegistry>
<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: int computeHorizontalScrollExtent()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.Uri: boolean equals(java.lang.Object)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.conn.EofSensorInputStream: int available()>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.hardware.SensorManager: void getAngleChange(float[],float[],float[])>:<public static>:<android.hardware.SensorManager>
<org.apache.http.conn.scheme.Scheme: int hashCode()>:<public>:<org.apache.http.conn.scheme.Scheme>
<android.util.SparseArray: void setValueAt(int,java.lang.Object)>:<public>:<android.util.SparseArray>
<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.preference.RingtonePreference: boolean onActivityResult(int,int,android.content.Intent)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.database.CursorWrapper: int getInt(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.mtp.MtpStorageInfo: int getStorageId()>:<public final>:<android.mtp.MtpStorageInfo>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUnregisteredParameterValueSanitizer()>:<public>:<android.net.UrlQuerySanitizer>
<android.text.method.DateTimeKeyListener: int getInputType()>:<public>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.database.sqlite.SQLiteStatement: void execute()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.widget.AbsListView: void setTranscriptMode(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.admin.DevicePolicyManager: void <init>()>:<>:<android.app.admin.DevicePolicyManager>
<android.database.sqlite.SQLiteDatabase: boolean enableWriteAheadLogging()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.TextView: int getCompoundPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.ContentProviderResult: int describeContents()>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.text.Selection: void <clinit>()>:<static>:<android.text.Selection>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>:<public>:<android.graphics.Matrix>
<android.opengl.GLES20: void glEnable(int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub.OnInflateListener)>:<public>:<android.view.ViewStub:android.view.View>
<android.hardware.Camera.Parameters: java.util.List getSupportedVideoSizes()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.TextView: android.text.Layout getLayout()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.protocol.BasicHttpProcessor: void removeResponseInterceptorByClass(java.lang.Class)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.AbsListView: void setChoiceMode(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumWidth()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.media.ToneGenerator: void release()>:<public native>:<android.media.ToneGenerator>
<android.test.ServiceTestCase: android.os.IBinder bindService(android.content.Intent)>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.service.wallpaper.WallpaperService: void onCreate()>:<public>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.app.Instrumentation: void sendCharacterSync(int)>:<public>:<android.app.Instrumentation>
<android.widget.QuickContactBadge: void <init>(android.content.Context)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>:<public>:<android.net.http.SslError>
<android.view.MotionEvent: float getTouchMajor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.ETC1Util: boolean isETC1Supported()>:<public static>:<android.opengl.ETC1Util>
<android.database.ContentObservable: void registerObserver(java.lang.Object)>:<public volatile>:<android.database.ContentObservable:android.database.Observable>
<android.text.BoringLayout: int getEllipsisCount(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<org.apache.http.conn.BasicManagedEntity: boolean isRepeatable()>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.location.Location: double getLatitude()>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.AbsListView: void onDetachedFromWindow()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.Activity: void onBackPressed()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.text.BoringLayout: void ellipsized(int,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenStart(java.lang.CharSequence,int)>:<public abstract>:<android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.ProgressDialog: void setProgressPercentFormat(java.text.NumberFormat)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<org.apache.http.protocol.UriPatternMatcher: void setHandlers(java.util.Map)>:<public>:<org.apache.http.protocol.UriPatternMatcher>
<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.graphics.drawable.Animatable: void stop()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.net.sip.SipSession: java.lang.String getCallId()>:<public>:<android.net.sip.SipSession>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.ListPopupWindow: int getHorizontalOffset()>:<public>:<android.widget.ListPopupWindow>
<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)>:<public>:<android.media.JetPlayer>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Typeface: void <clinit>()>:<static>:<android.graphics.Typeface>
<android.util.TypedValue: float getFraction(float,float)>:<public>:<android.util.TypedValue>
<android.net.Credentials: int getGid()>:<public>:<android.net.Credentials>
<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>:<public>:<android.media.AudioManager>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)>:<public>:<android.net.LocalSocket>
<android.net.sip.SipSession.Listener: void onRegistrationFailed(android.net.sip.SipSession,int,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.content.ClipData.Item: java.lang.CharSequence coerceToText(android.content.Context)>:<public>:<android.content.ClipData.Item>
<org.apache.http.conn.OperatedClientConnection: java.net.Socket getSocket()>:<public abstract>:<org.apache.http.conn.OperatedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection>
<android.preference.Preference: int compareTo(java.lang.Object)>:<public volatile>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES10: void glEnableClientState(int)>:<public static native>:<android.opengl.GLES10>
<android.widget.ScrollView: void addView(android.view.View,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>:<public native>:<android.media.MediaMetadataRetriever>
<android.text.Spannable.Factory: void <init>()>:<public>:<android.text.Spannable.Factory>
<android.webkit.WebSettings: void setSaveFormData(boolean)>:<public>:<android.webkit.WebSettings>
<org.apache.http.impl.io.ChunkedOutputStream: void flushCache()>:<protected>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.drm.DrmUtils.ExtendedMetadataParser: java.lang.String get(java.lang.String)>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.ImageView:android.view.View>
<android.os.Debug: void resetGlobalClassInitTime()>:<public static>:<android.os.Debug>
<android.test.ServiceTestCase: void <init>(java.lang.Class)>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>:<protected>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>:<public final>:<android.content.res.AssetManager>
<android.content.Intent: float getFloatExtra(java.lang.String,float)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.KeyEvent: int getSource()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.style.UnderlineSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.text.DynamicLayout: int getEllipsizedWidth()>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.webkit.WebView: boolean pageUp(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLSurfaceView.EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>:<public abstract>:<android.opengl.GLSurfaceView.EGLConfigChooser>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>:<public>:<android.hardware.SensorManager>
<android.view.View: boolean requestFocusFromTouch()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.message.BasicLineParser: void <clinit>()>:<static>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.view.Surface: java.lang.String toString()>:<public>:<android.view.Surface:android.os.Parcelable>
<android.view.View: void setEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.Dialog: boolean requestWindowFeature(int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.os.Messenger: int hashCode()>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitAll()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.webkit.WebSyncManager: java.lang.Object clone()>:<protected>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit valueOf(java.lang.String)>:<public static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<org.apache.http.impl.conn.tsccm.WaitingThread: java.util.concurrent.locks.Condition getCondition()>:<public final>:<org.apache.http.impl.conn.tsccm.WaitingThread>
<android.widget.GridView: void setGravity(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.backup.BackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupAgent:android.content.ContextWrapper,android.content.Context>
<android.content.ContentProviderResult: java.lang.String toString()>:<public>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.accounts.Account: void <init>(android.os.Parcel)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.view.MenuItem: boolean isEnabled()>:<public abstract>:<android.view.MenuItem>
<android.widget.RadioGroup: android.widget.RadioGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.bluetooth.BluetoothSocket: void connect()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.content.pm.ActivityInfo: void <clinit>()>:<static>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<junit.runner.BaseTestRunner: junit.runner.TestSuiteLoader getLoader()>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>:<public final>:<android.os.Handler>
<android.database.AbstractWindowedCursor: int getInt(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getValue()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebResourceResponse: void setData(java.io.InputStream)>:<public>:<android.webkit.WebResourceResponse>
<android.view.MotionEvent: float getSize(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: int getMeasuredWidth()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.cookie.NetscapeDraftSpec: org.apache.http.Header getVersionHeader()>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.auth.NTUserPrincipal: boolean equals(java.lang.Object)>:<public>:<org.apache.http.auth.NTUserPrincipal:java.security.Principal>
<android.graphics.Rect: boolean intersect(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.TextView: void setScroller(android.widget.Scroller)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.BroadcastReceiver: void clearAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.R.raw: void <init>()>:<public>:<android.R.raw>
<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.widget.TextView: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<org.json.JSONStringer: java.lang.String toString()>:<public>:<org.json.JSONStringer>
<android.view.View: float getTopFadingEdgeStrength()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.SurfaceView: void draw(android.graphics.Canvas)>:<public>:<android.view.SurfaceView:android.view.View>
<org.apache.http.impl.client.AbstractHttpClient: int getResponseInterceptorCount()>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.content.res.TypedArray: java.lang.String toString()>:<public>:<android.content.res.TypedArray>
<org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.media.audiofx.EnvironmentalReverb: void setProperties(android.media.audiofx.EnvironmentalReverb.Settings)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.preference.Preference: void setSummary(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.conn.ssl.StrictHostnameVerifier: java.lang.String toString()>:<public final>:<org.apache.http.conn.ssl.StrictHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.media.AudioManager: boolean isMicrophoneMute()>:<public>:<android.media.AudioManager>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<org.apache.http.HttpResponse: void setReasonPhrase(java.lang.String)>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)>:<public>:<org.apache.http.params.HttpConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.media.SoundPool: int load(android.content.Context,int,int)>:<public>:<android.media.SoundPool>
<android.text.method.PasswordTransformationMethod: void <init>()>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.app.Notification.Builder: android.app.Notification.Builder setNumber(int)>:<public>:<android.app.Notification.Builder>
<dalvik.system.DexFile: void <init>(java.lang.String)>:<public>:<dalvik.system.DexFile>
<android.view.accessibility.AccessibilityEvent: void setAddedCount(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.media.FaceDetector.Face: void <init>(android.media.FaceDetector)>:<>:<android.media.FaceDetector.Face>
<android.media.audiofx.BassBoost.OnParameterChangeListener: void onParameterChange(android.media.audiofx.BassBoost,int,int,short)>:<public abstract>:<android.media.audiofx.BassBoost.OnParameterChangeListener>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.text.Layout: int getLineBaseline(int)>:<public final>:<android.text.Layout>
<org.apache.http.ProtocolVersion: int getMajor()>:<public final>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.test.mock.MockResources: int[] getIntArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.test.mock.MockPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.apache.http.auth.AuthSchemeRegistry: void <init>()>:<public>:<org.apache.http.auth.AuthSchemeRegistry>
<android.graphics.YuvImage: int[] getStrides()>:<public>:<android.graphics.YuvImage>
<android.view.ActionMode: void finish()>:<public abstract>:<android.view.ActionMode>
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>:<public>:<android.text.SpannableStringInternal>
<android.content.pm.ComponentInfo: boolean isEnabled()>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.util.StateSet: int[] trimStateSet(int[],int)>:<public static>:<android.util.StateSet>
<android.location.LocationProvider: boolean supportsSpeed()>:<public abstract>:<android.location.LocationProvider>
<android.view.View: android.graphics.drawable.Drawable getBackground()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.util.Rfc822Token: java.lang.String quoteName(java.lang.String)>:<public static>:<android.text.util.Rfc822Token>
<android.content.ContentValues: int size()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<org.apache.http.protocol.SyncBasicHttpContext: java.lang.Object removeAttribute(java.lang.String)>:<public synchronized>:<org.apache.http.protocol.SyncBasicHttpContext:org.apache.http.protocol.BasicHttpContext>
<android.net.rtp.AudioCodec: void <clinit>()>:<static>:<android.net.rtp.AudioCodec>
<android.app.Activity: void dismissDialog(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.Activity: android.view.View onCreatePanelView(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.net.TrafficStats: long getUidTxBytes(int)>:<public static native>:<android.net.TrafficStats>
<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.bluetooth.BluetoothClass: void writeToParcel(android.os.Parcel,int)>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.preference.PreferenceFragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.hardware.Camera: void setParameters(android.hardware.Camera.Parameters)>:<public>:<android.hardware.Camera>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>:<public>:<android.net.http.SslCertificate>
<android.content.ClipData.Item: android.net.Uri getUri()>:<public>:<android.content.ClipData.Item>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.apache.http.impl.cookie.BasicPathHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.BasicPathHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>:<public static>:<android.content.ContentResolver>
<android.widget.PopupWindow: int getInputMethodMode()>:<public>:<android.widget.PopupWindow>
<org.apache.commons.logging.Log: boolean isDebugEnabled()>:<public abstract>:<org.apache.commons.logging.Log>
<org.xmlpull.v1.sax2.Driver: void <init>()>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.view.View: int getWidth()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.style.BackgroundColorSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>:<public abstract>:<org.apache.http.client.methods.HttpUriRequest:org.apache.http.HttpRequest>
<android.view.View: boolean onCheckIsTextEditor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.TextKeyListener.Capitalize: void <clinit>()>:<static>:<android.text.method.TextKeyListener.Capitalize:java.lang.Enum>
<org.apache.http.HttpServerConnection: void sendResponseHeader(org.apache.http.HttpResponse)>:<public abstract>:<org.apache.http.HttpServerConnection:org.apache.http.HttpConnection>
<android.content.pm.PermissionInfo: java.lang.String toString()>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.net.Proxy: int getDefaultPort()>:<public static final>:<android.net.Proxy>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>:<public final>:<android.content.Context>
<android.graphics.Rect: int centerX()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.appwidget.AppWidgetHost: void startListening()>:<public>:<android.appwidget.AppWidgetHost>
<android.location.Address: java.lang.String getPremises()>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.View: int computeHorizontalScrollOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.StaticLayout: int getTopPadding()>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canConstantState()>:<public synchronized>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.content.pm.PathPermission: java.lang.String getWritePermission()>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Fragment: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.widget.ViewSwitcher: android.view.View getNextView()>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: int getVideoHeight()>:<public native>:<android.media.MediaPlayer>
<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged(boolean)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.SearchView: void setIconified(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int)>:<public static>:<android.gesture.GestureUtils>
<android.view.MenuItem: int getGroupId()>:<public abstract>:<android.view.MenuItem>
<org.apache.http.impl.conn.IdleConnectionHandler: void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.IdleConnectionHandler>
<android.content.pm.FeatureInfo: void <clinit>()>:<static>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation.AnimationListener)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.LauncherActivity.IconResizer: android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable)>:<public>:<android.app.LauncherActivity.IconResizer>
<android.app.LauncherActivity: java.util.List makeListItems()>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Bitmap: void setHasAlpha(boolean)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.PathEffect: void <init>()>:<public>:<android.graphics.PathEffect>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>:<public static>:<org.xmlpull.v1.XmlPullParserFactory>
<android.view.ScaleGestureDetector: float getPreviousSpan()>:<public>:<android.view.ScaleGestureDetector>
<org.apache.http.message.BasicHeaderValueFormatter: java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter)>:<public static final>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler,boolean)>:<public>:<android.view.GestureDetector>
<android.inputmethodservice.Keyboard: java.util.List getKeys()>:<public>:<android.inputmethodservice.Keyboard>
<android.opengl.Matrix: void setIdentityM(float[],int)>:<public static>:<android.opengl.Matrix>
<android.graphics.drawable.shapes.ArcShape: void <init>(float,float)>:<public>:<android.graphics.drawable.shapes.ArcShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<org.apache.http.protocol.HttpResponseInterceptorList: void setInterceptors(java.util.List)>:<public abstract>:<org.apache.http.protocol.HttpResponseInterceptorList>
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLSurfaceView: void requestRender()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.SurfaceView: void setVisibility(int)>:<public>:<android.view.SurfaceView:android.view.View>
<org.apache.http.entity.ByteArrayEntity: boolean isRepeatable()>:<public>:<org.apache.http.entity.ByteArrayEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>:<public>:<android.net.ConnectivityManager>
<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.PopupWindow>
<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>:<public static final>:<android.provider.Browser>
<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>:<public>:<android.location.LocationManager>
<android.content.res.Resources.Theme: void finalize()>:<protected>:<android.content.res.Resources.Theme>
<android.widget.ListPopupWindow: void setContentWidth(int)>:<public>:<android.widget.ListPopupWindow>
<android.test.InstrumentationTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.animation.OvershootInterpolator: void <init>(float)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator>
<android.widget.CursorAdapter: long getItemId(int)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.text.style.AlignmentSpan.Standard: int getSpanTypeId()>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.accounts.AuthenticatorException: void <init>()>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>:<public>:<android.telephony.TelephonyManager>
<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.test.mock.MockResources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.app.DialogFragment: void setCancelable(boolean)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>:<public>:<android.widget.PopupMenu>
<android.widget.ExpandableListAdapter: int getGroupCount()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.app.SearchableInfo: boolean queryAfterZeroResults()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<org.apache.http.message.HeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.HeaderValueParser>
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>:<public static>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRecorder.OutputFormat: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.OutputFormat>
<android.widget.TimePicker: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.CursorWrapper: boolean isNull(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.view.Window: void setFeatureDrawableResource(int,int)>:<public abstract>:<android.view.Window>
<org.apache.http.impl.client.AbstractHttpClient: void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.telephony.gsm.GsmCellLocation: int getLac()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>:<public static final>:<android.text.Selection>
<android.media.audiofx.AudioEffect: void <init>()>:<>:<android.media.audiofx.AudioEffect>
<android.location.Location: float bearingTo(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.webkit.WebSettings.PluginState: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>:<public>:<org.json.JSONArray>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>:<public static native>:<android.opengl.GLES10Ext>
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>:<public>:<android.content.res.Resources>
<android.media.MediaPlayer: void <init>()>:<public>:<android.media.MediaPlayer>
<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>:<public static>:<android.util.Xml>
<org.apache.http.auth.params.AuthParams: void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String)>:<public static>:<org.apache.http.auth.params.AuthParams>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.content.Intent: void <init>(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.ProtocolVersion: java.lang.Object clone()>:<public>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.widget.Spinner: int getBaseline()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.text.Editable: android.text.InputFilter[] getFilters()>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.text.util.Rfc822Token: java.lang.String getAddress()>:<public>:<android.text.util.Rfc822Token>
<android.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit)>:<public final>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.provider.MediaStore.Images.Media: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.app.DialogFragment: void setStyle(int,int)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>:<public static>:<android.opengl.GLUtils>
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: void <init>()>:<public>:<org.apache.http.impl.client.DefaultTargetAuthenticationHandler:org.apache.http.impl.client.AbstractAuthenticationHandler>
<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<org.apache.http.impl.auth.DigestScheme: void <init>()>:<public>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.content.res.AssetManager: void <init>()>:<>:<android.content.res.AssetManager>
<android.view.ScaleGestureDetector: float getCurrentSpan()>:<public>:<android.view.ScaleGestureDetector>
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)>:<public static>:<org.apache.http.client.utils.URLEncodedUtils>
<org.apache.http.conn.util.InetAddressUtils: void <init>()>:<>:<org.apache.http.conn.util.InetAddressUtils>
<android.app.DialogFragment: void setShowsDialog(boolean)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.widget.Adapter: boolean hasStableIds()>:<public abstract>:<android.widget.Adapter>
<android.test.mock.MockResources: float getDimension(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.media.AudioRecord: int getRecordingState()>:<public>:<android.media.AudioRecord>
<android.graphics.Movie: boolean setTime(int)>:<public native>:<android.graphics.Movie>
<android.view.ViewGroup: void removeViewAt(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.media.AudioTrack: int setNotificationMarkerPosition(int)>:<public>:<android.media.AudioTrack>
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>:<public static>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>:<public>:<android.preference.PreferenceManager>
<android.opengl.GLES20: void glDeleteProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.app.Activity: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>:<public abstract>:<android.content.SharedPreferences>
<android.hardware.Camera.Parameters: int getZoom()>:<public>:<android.hardware.Camera.Parameters>
<android.nfc.tech.MifareClassic: void connect()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.location.Address: java.lang.String getUrl()>:<public>:<android.location.Address:android.os.Parcelable>
<android.animation.Animator: void removeAllListeners()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.nfc.tech.NdefFormatable: boolean isConnected()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.view.ViewDebug.RecyclerTraceType: void <clinit>()>:<static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.app.Fragment: void onHiddenChanged(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.view.View: boolean performHapticFeedback(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.ArrowKeyMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public final>:<android.content.ContentResolver>
<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.location.LocationProvider: int getAccuracy()>:<public abstract>:<android.location.LocationProvider>
<android.text.SpannableStringBuilder: void clear()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.wifi.ScanResult: java.lang.String toString()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>:<public>:<android.graphics.Path>
<android.widget.AbsListView: void onDisplayHint(int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.mock.MockPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.ViewConfiguration: float getScrollFriction()>:<public static>:<android.view.ViewConfiguration>
<android.util.EventLog: int writeEvent(int,java.lang.Object[])>:<public static native transient>:<android.util.EventLog>
<android.text.method.DigitsKeyListener: void <init>()>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.VideoView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)>:<protected>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.view.View: void setSoundEffectsEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.Signature: char[] toChars()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.graphics.Paint: float descent()>:<public native>:<android.graphics.Paint>
<dalvik.system.DexClassLoader: java.lang.Class findClass(java.lang.String)>:<protected>:<dalvik.system.DexClassLoader:java.lang.ClassLoader>
<android.app.Activity: void onStart()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>:<public>:<android.webkit.WebSettings>
<android.util.MonthDisplayHelper: void <init>(int,int)>:<public>:<android.util.MonthDisplayHelper>
<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.widget.GridView: void smoothScrollToPosition(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.ActionBar: boolean isShowing()>:<public abstract>:<android.app.ActionBar>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectCustomSlowCalls()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.widget.HorizontalScrollView: void scrollTo(int,int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.protocol.HttpService: org.apache.http.params.HttpParams getParams()>:<public>:<org.apache.http.protocol.HttpService>
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()>:<protected>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.gesture.Gesture: java.lang.Object clone()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.text.LoginFilter: void <init>()>:<>:<android.text.LoginFilter:android.text.InputFilter>
<android.graphics.Region.Op: void <clinit>()>:<static>:<android.graphics.Region.Op:java.lang.Enum>
<android.opengl.GLSurfaceView: void onResume()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.test.mock.MockPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.text.method.BaseMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.provider.ContactsContract.PhoneLookup: void <clinit>()>:<static>:<android.provider.ContactsContract.PhoneLookup:android.provider.BaseColumns,android.provider.ContactsContract.PhoneLookupColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns>
<android.webkit.WebSettings.ZoomDensity: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.webkit.WebView.WebViewTransport: void <init>(android.webkit.WebView)>:<public>:<android.webkit.WebView.WebViewTransport>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.apache.http.protocol.RequestDate: void <init>()>:<public>:<org.apache.http.protocol.RequestDate:org.apache.http.HttpRequestInterceptor>
<android.os.Parcel: android.os.IBinder readStrongBinder()>:<public final native>:<android.os.Parcel>
<android.graphics.Interpolator: void <init>(int)>:<public>:<android.graphics.Interpolator>
<junit.framework.TestSuite: int testCount()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.os.Debug: void startAllocCounting()>:<public static>:<android.os.Debug>
<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.renderscript.ProgramFragment.Builder: android.renderscript.ProgramFragment create()>:<public>:<android.renderscript.ProgramFragment.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.widget.OverScroller: boolean isOverScrolled()>:<public>:<android.widget.OverScroller>
<org.apache.http.client.CredentialsProvider: void clear()>:<public abstract>:<org.apache.http.client.CredentialsProvider>
<android.app.ExpandableListActivity: void setSelectedGroup(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<org.json.JSONObject: long optLong(java.lang.String)>:<public>:<org.json.JSONObject>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>:<public transient>:<android.animation.AnimatorSet:android.animation.Animator>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String,java.lang.String[])>:<public static>:<org.apache.http.impl.cookie.DateUtils>
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>:<public>:<android.inputmethodservice.Keyboard>
<android.widget.ListPopupWindow: void setSelection(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.ZoomButtonsController.OnZoomListener: void onZoom(boolean)>:<public abstract>:<android.widget.ZoomButtonsController.OnZoomListener>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<org.apache.http.entity.AbstractHttpEntity: boolean isChunked()>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)>:<public>:<android.drm.DrmInfoRequest>
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.method.ScrollingMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.view.ViewDebug.RecyclerTraceType: void <init>(java.lang.String,int)>:<private>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.widget.TextView: int computeVerticalScrollExtent()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>:<public>:<android.bluetooth.BluetoothAdapter>
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>:<public static final>:<android.text.util.Linkify>
<android.content.ClipboardManager: void <init>()>:<>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.View: void invalidate(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.DialogPreference: int getDialogLayoutResource()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.inputmethodservice.Keyboard.Key: void <init>(android.inputmethodservice.Keyboard.Row)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>:<public final native>:<android.os.Parcel>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<org.apache.http.message.BasicHeaderValueFormatter: int estimateHeaderElementLen(org.apache.http.HeaderElement)>:<protected>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>:<public static>:<org.apache.http.client.utils.URIUtils>
<android.speech.RecognitionListener: void onEvent(int,android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<android.app.PendingIntent: java.lang.String getTargetPackage()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.renderscript.FieldPacker: void <init>(int)>:<public>:<android.renderscript.FieldPacker>
<android.renderscript.Type: int getCount()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.renderscript.Element: android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.NetworkInfo: void <init>()>:<>:<android.net.NetworkInfo:android.os.Parcelable>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.webkit.WebView: void setPictureListener(android.webkit.WebView.PictureListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.Interpolator>
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.hardware.Camera.Parameters: java.lang.String flatten()>:<public>:<android.hardware.Camera.Parameters>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.test.ViewAsserts: void assertOffScreenAbove(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.app.FragmentManager: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>:<public abstract>:<android.app.FragmentManager>
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>:<public static native>:<android.opengl.Visibility>
<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.gesture.GestureStore: void setOrientationStyle(int)>:<public>:<android.gesture.GestureStore>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>:<public>:<org.apache.http.auth.AuthState>
<android.text.style.ScaleXSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ListActivity: android.widget.ListView getListView()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.ApplicationTestCase: android.content.Context getSystemContext()>:<public>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>:<public final>:<android.view.LayoutInflater>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>:<public>:<android.graphics.Canvas>
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.graphics.Color: int red(int)>:<public static>:<android.graphics.Color>
<org.apache.http.conn.util.InetAddressUtils: boolean isIPv4Address(java.lang.String)>:<public static>:<org.apache.http.conn.util.InetAddressUtils>
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getParameter(java.lang.String)>:<public>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.net.sip.SipSession: void setListener(android.net.sip.SipSession.Listener)>:<public>:<android.net.sip.SipSession>
<android.graphics.drawable.ClipDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.Animation.AnimationListener: void onAnimationStart(android.view.animation.Animation)>:<public abstract>:<android.view.animation.Animation.AnimationListener>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>:<public>:<android.location.LocationManager>
<android.opengl.GLES10: void glPixelStorei(int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.AbstractHttpServerConnection: void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.provider.ContactsContract.Presence: void <init>()>:<public>:<android.provider.ContactsContract.Presence:android.provider.ContactsContract.StatusUpdates>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>:<public>:<android.view.LayoutInflater>
<android.test.mock.MockApplication: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<org.apache.http.protocol.HttpRequestExecutor: boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse)>:<protected>:<org.apache.http.protocol.HttpRequestExecutor>
<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>:<public final>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.graphics.Rect: boolean intersects(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setSendKeepAlive(boolean)>:<public>:<android.net.sip.SipProfile.Builder>
<android.view.KeyEvent: boolean isSystem()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.animation.Animation: boolean getDetachWallpaper()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<org.json.JSONStringer: org.json.JSONStringer value(double)>:<public>:<org.json.JSONStringer>
<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.Matrix: java.lang.String toShortString()>:<public>:<android.graphics.Matrix>
<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)>:<public static>:<android.text.TextUtils>
<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>:<public abstract>:<org.apache.http.conn.ClientConnectionManager>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getContentDescription()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.net.sip.SipSession: boolean isInCall()>:<public>:<android.net.sip.SipSession>
<android.view.accessibility.AccessibilityEvent: void setPassword(boolean)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.content.IntentFilter: int countDataPaths()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.ViewGroup: void startLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.net.http.SslCertificate: java.lang.String toString()>:<public>:<android.net.http.SslCertificate>
<android.widget.TableLayout: boolean isStretchAllColumns()>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.View: void dispatchWindowFocusChanged(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>:<public>:<android.telephony.SmsMessage>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.renderscript.Matrix4f: void loadScale(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.util.JsonWriter: android.util.JsonWriter beginArray()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.widget.ListPopupWindow: long getSelectedItemId()>:<public>:<android.widget.ListPopupWindow>
<android.test.mock.MockContext: boolean deleteDatabase(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.conn.BasicManagedEntity: void writeTo(java.io.OutputStream)>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.test.mock.MockCursor: boolean isClosed()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.test.AndroidTestRunner: void runTest()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.content.IntentFilter: int countDataTypes()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.apache.http.impl.io.ContentLengthInputStream: long skip(long)>:<public>:<org.apache.http.impl.io.ContentLengthInputStream:java.io.InputStream>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcel)>:<public>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<android.graphics.Canvas: void <init>()>:<public>:<android.graphics.Canvas>
<android.view.ScaleGestureDetector: float getFocusX()>:<public>:<android.view.ScaleGestureDetector>
<org.apache.http.client.methods.HttpRequestBase: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.database.Cursor: boolean isClosed()>:<public abstract>:<android.database.Cursor>
<android.inputmethodservice.ExtractEditText: void startInternalChanges()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.test.mock.MockContext: java.io.File getCacheDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.client.methods.HttpPut: void <init>(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpPut:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.nfc.tech.NfcB: void close()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.net.sip.SipSession: void unregister()>:<public>:<android.net.sip.SipSession>
<android.graphics.Camera: void rotate(float,float,float)>:<public native>:<android.graphics.Camera>
<android.provider.ContactsContract.CommonDataKinds.Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>:<public static>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<org.apache.http.impl.cookie.RFC2109DomainHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2109DomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.location.Address: void setAdminArea(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.GradientDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.StrictMode.ThreadPolicy: void <init>()>:<>:<android.os.StrictMode.ThreadPolicy>
<android.opengl.GLES11: void <init>()>:<public>:<android.opengl.GLES11:android.opengl.GLES10>
<android.view.View: void addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabWidget: int getTabCount()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.graphics.Paint: boolean isFilterBitmap()>:<public final>:<android.graphics.Paint>
<android.test.suitebuilder.TestMethod: int hashCode()>:<public>:<android.test.suitebuilder.TestMethod>
<android.media.Ringtone: boolean isPlaying()>:<public>:<android.media.Ringtone>
<android.database.CursorJoiner: java.util.Iterator iterator()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.view.KeyCharacterMap: boolean deviceHasKey(int)>:<public static>:<android.view.KeyCharacterMap>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.widget.DatePicker: boolean getSpinnersShown()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void dragQuarterScreenDown(android.test.ActivityInstrumentationTestCase)>:<public static>:<android.test.TouchUtils>
<android.util.SparseIntArray: int indexOfValue(int)>:<public>:<android.util.SparseIntArray>
<android.renderscript.FieldPacker: void align(int)>:<public>:<android.renderscript.FieldPacker>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc[] values()>:<public static>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>:<public>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.view.inputmethod.InputConnectionWrapper: boolean clearMetaKeyStates(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.DatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public abstract>:<android.database.DatabaseErrorHandler>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>:<public>:<android.graphics.Paint>
<android.preference.PreferenceFragment: void onDestroy()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.Camera.Parameters: int getExposureCompensation()>:<public>:<android.hardware.Camera.Parameters>
<android.database.Observable: void unregisterObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.Uri.Builder: android.net.Uri.Builder appendQueryParameter(java.lang.String,java.lang.String)>:<public>:<android.net.Uri.Builder>
<org.apache.http.impl.cookie.BasicSecureHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BasicSecureHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.graphics.Paint: void <init>()>:<public>:<android.graphics.Paint>
<android.appwidget.AppWidgetProvider: void <init>()>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.graphics.drawable.BitmapDrawable: void <init>(java.lang.String)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public abstract>:<android.content.BroadcastReceiver>
<android.content.pm.PackageManager: void <init>()>:<public>:<android.content.pm.PackageManager>
<android.renderscript.Element: android.renderscript.Element PROGRAM_FRAGMENT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.view.inputmethod.CompletionInfo: void <clinit>()>:<static>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>:<public>:<android.net.LocalSocket>
<android.renderscript.FieldPacker: void addU16(int)>:<public>:<android.renderscript.FieldPacker>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>:<public static native>:<android.opengl.ETC1>
<android.graphics.Matrix: void set(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<android.util.TimingLogger: void reset(java.lang.String,java.lang.String)>:<public>:<android.util.TimingLogger>
<android.widget.AbsListView: float getBottomFadingEdgeStrength()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.KeyCharacterMap: int getModifierBehavior()>:<public>:<android.view.KeyCharacterMap>
<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<org.apache.http.impl.HttpConnectionMetricsImpl: java.lang.Object getMetric(java.lang.String)>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.graphics.Point: int hashCode()>:<public>:<android.graphics.Point>
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>:<public static final>:<android.database.DatabaseUtils>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.database.sqlite.SQLiteAccessPermException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteAccessPermException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>:<public>:<android.content.UriMatcher>
<android.content.SyncAdapterType: int hashCode()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.webkit.DateSorter: long getBoundary(int)>:<public>:<android.webkit.DateSorter>
<android.widget.TabWidget: void addView(android.view.View)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.animation.AnimatorSet: void setStartDelay(long)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.opengl.GLES10: void glPopMatrix()>:<public static native>:<android.opengl.GLES10>
<android.view.animation.AnimationSet: void restrictDuration(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.sax.Element: java.lang.String toString()>:<public>:<android.sax.Element>
<android.os.DropBoxManager.Entry: java.lang.String getText(int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.widget.TextView: void setWidth(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read()>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<org.apache.http.conn.routing.RouteTracker: int hashCode()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.text.Layout: int getLineStart(int)>:<public abstract>:<android.text.Layout>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>:<public>:<android.database.sqlite.SQLiteOpenHelper>
<android.app.Fragment: void onLowMemory()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.content.res.TypedArray: int getResourceId(int,int)>:<public>:<android.content.res.TypedArray>
<android.text.style.IconMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.widget.VideoView: void pause()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.app.ActionBar.LayoutParams: void <init>(int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.graphics.Path: void <init>()>:<public>:<android.graphics.Path>
<org.apache.http.impl.cookie.RFC2109VersionHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2109VersionHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>:<public>:<org.json.JSONArray>
<org.apache.http.protocol.RequestConnControl: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.RequestConnControl:org.apache.http.HttpRequestInterceptor>
<android.content.IntentFilter: int countActions()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.content.SharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>:<public abstract>:<android.content.SharedPreferences>
<android.test.mock.MockContext: java.io.File getFileStreamPath(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.conn.ManagedClientConnection: org.apache.http.conn.routing.HttpRoute getRoute()>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.nfc.tech.MifareClassic: void decrement(int,int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>:<public static>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.content.SharedPreferences: java.util.Map getAll()>:<public abstract>:<android.content.SharedPreferences>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.app.Notification: void <clinit>()>:<static>:<android.app.Notification:android.os.Parcelable>
<android.test.ViewAsserts: void assertRightAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<org.apache.http.client.HttpResponseException: int getStatusCode()>:<public>:<org.apache.http.client.HttpResponseException:org.apache.http.client.ClientProtocolException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeY()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.os.Looper: android.os.MessageQueue myQueue()>:<public static final>:<android.os.Looper>
<android.widget.Gallery: boolean onSingleTapUp(android.view.MotionEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.bluetooth.BluetoothSocket: void close()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.util.JsonWriter: android.util.JsonWriter beginObject()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.renderscript.RenderScriptGL: int getHeight()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.widget.DialerFilter: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.PixelFormat: boolean formatHasAlpha(int)>:<public static>:<android.graphics.PixelFormat>
<android.gesture.GestureLibrary: void <init>()>:<protected>:<android.gesture.GestureLibrary>
<org.apache.http.entity.BufferedHttpEntity: boolean isChunked()>:<public>:<org.apache.http.entity.BufferedHttpEntity:org.apache.http.entity.HttpEntityWrapper>
<android.os.Debug: void resetGlobalExternalAllocCount()>:<public static>:<android.os.Debug>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.gesture.GestureOverlayView: void setOrientation(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ContextThemeWrapper: android.content.res.Resources.Theme getTheme()>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.renderscript.Matrix3f: void <init>()>:<public>:<android.renderscript.Matrix3f>
<org.apache.http.client.methods.HttpUriRequest: void abort()>:<public abstract>:<org.apache.http.client.methods.HttpUriRequest:org.apache.http.HttpRequest>
<android.widget.TextView: int getPaintFlags()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.MoreAsserts: void assertEquals(java.lang.String,double[],double[])>:<public static>:<android.test.MoreAsserts>
<android.view.Menu: int size()>:<public abstract>:<android.view.Menu>
<android.util.LruCache: java.lang.Object remove(java.lang.Object)>:<public final>:<android.util.LruCache>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()>:<public>:<android.net.UrlQuerySanitizer>
<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void growArray(int,int)>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getUserName()>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.text.StaticLayout: int getEllipsisStart(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.os.Debug.MemoryInfo: void <init>()>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.content.pm.ApplicationInfo: void <clinit>()>:<static>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.apache.http.impl.cookie.NetscapeDomainHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.NetscapeDomainHandler:org.apache.http.impl.cookie.BasicDomainHandler>
<android.database.MergeCursor: short getShort(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.provider.MediaStore.Images: void <init>()>:<public>:<android.provider.MediaStore.Images>
<android.view.MotionEvent: float getHistoricalPressure(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.util.Log: int v(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.view.InputDevice.MotionRange: float getRange()>:<public>:<android.view.InputDevice.MotionRange>
<android.preference.Preference: java.lang.CharSequence getSummary()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.service.wallpaper.WallpaperService.Engine: void <init>(android.service.wallpaper.WallpaperService)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.net.sip.SipProfile: java.lang.String getProxyAddress()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<org.apache.http.impl.io.HttpResponseWriter: void writeHeadLine(org.apache.http.HttpMessage)>:<protected>:<org.apache.http.impl.io.HttpResponseWriter:org.apache.http.impl.io.AbstractMessageWriter>
<android.util.Base64InputStream: int read()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.hardware.Camera.Parameters: java.util.List getSupportedAntibanding()>:<public>:<android.hardware.Camera.Parameters>
<android.media.audiofx.EnvironmentalReverb: void setRoomHFLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.media.JetPlayer: boolean clearQueue()>:<public>:<android.media.JetPlayer>
<android.net.Uri.Builder: android.net.Uri.Builder path(java.lang.String)>:<public>:<android.net.Uri.Builder>
<org.apache.http.cookie.CookieSpecRegistry: java.util.List getSpecNames()>:<public synchronized>:<org.apache.http.cookie.CookieSpecRegistry>
<android.animation.ObjectAnimator: android.animation.Animator clone()>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.content.ContentValues: void <init>(int)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.widget.ImageSwitcher: void setImageResource(int)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.util.SparseIntArray: int size()>:<public>:<android.util.SparseIntArray>
<android.preference.RingtonePreference: int getRingtoneType()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.ViewDebug.FlagToString: int equals()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.animation.AnimatorSet: void cancel()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short4)>:<public>:<android.renderscript.FieldPacker>
<android.hardware.Camera.Parameters: java.lang.String getColorEffect()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.webkit.WebSettings: void setSavePassword(boolean)>:<public>:<android.webkit.WebSettings>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>:<public>:<android.media.AudioManager>
<android.telephony.SmsMessage.SubmitPdu: java.lang.String toString()>:<public>:<android.telephony.SmsMessage.SubmitPdu>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentEncoding()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.graphics.drawable.RotateDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.RectF: float width()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.inputmethodservice.KeyboardView: void invalidateAllKeys()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.BaseExpandableListAdapter: void <init>()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<org.apache.http.protocol.HttpRequestHandler: void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.protocol.HttpRequestHandler>
<android.text.ClipboardManager: boolean hasText()>:<public abstract>:<android.text.ClipboardManager>
<android.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar.OnNavigationListener)>:<public abstract>:<android.app.ActionBar>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.client.AbstractHttpClient: void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.os.WorkSource: void set(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser)>:<public static>:<org.apache.http.impl.io.AbstractMessageParser:org.apache.http.io.HttpMessageParser>
<org.apache.http.conn.util.InetAddressUtils: boolean isIPv6StdAddress(java.lang.String)>:<public static>:<org.apache.http.conn.util.InetAddressUtils>
<android.database.Cursor: boolean moveToFirst()>:<public abstract>:<android.database.Cursor>
<android.provider.ContactsContract.CommonDataKinds.Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Phone:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.content.Loader: void onReset()>:<protected>:<android.content.Loader>
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: boolean isRepeatable()>:<public>:<org.apache.http.impl.client.EntityEnclosingRequestWrapper:org.apache.http.impl.client.RequestWrapper,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.MultiAutoCompleteTextView: void performValidation()>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>:<public>:<android.content.res.Resources>
<android.accounts.AccountAuthenticatorActivity: void <init>()>:<public>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.SurfaceView: void <init>(android.content.Context)>:<public>:<android.view.SurfaceView:android.view.View>
<android.graphics.Canvas.VertexMode: void <init>(java.lang.String,int)>:<private>:<android.graphics.Canvas.VertexMode:java.lang.Enum>
<android.widget.NumberPicker: void computeScroll()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.animation.AnimatorSet: long getDuration()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.appwidget.AppWidgetManager: void <init>()>:<>:<android.appwidget.AppWidgetManager>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<org.apache.commons.logging.Log: void warn(java.lang.Object)>:<public abstract>:<org.apache.commons.logging.Log>
<android.graphics.Matrix: void setSinCos(float,float)>:<public>:<android.graphics.Matrix>
<android.widget.AbsListView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.View: boolean isOpaque()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AdapterView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>:<public final>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.app.Dialog: void unregisterForContextMenu(android.view.View)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.DialerFilter: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.net.rtp.RtpStream: void associate(java.net.InetAddress,int)>:<public>:<android.net.rtp.RtpStream>
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.Gallery: void <init>(android.content.Context)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<org.apache.http.conn.routing.RouteTracker: java.lang.String toString()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.test.mock.MockContext: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>:<public>:<android.media.AudioManager>
<android.widget.VideoView: void setVideoPath(java.lang.String)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.Window: android.view.LayoutInflater getLayoutInflater()>:<public abstract>:<android.view.Window>
<org.xmlpull.v1.sax2.Driver: void parse(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.WebSettings: int getCacheMode()>:<public>:<android.webkit.WebSettings>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.MenuItem>
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.net.sip.SipAudioCall: void toggleMute()>:<public>:<android.net.sip.SipAudioCall>
<android.os.WorkSource: boolean diff(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.widget.AbsListView: void onFilterComplete(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.gesture.GestureOverlayView: void setGesture(android.gesture.Gesture)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setNextFocusLeftId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentVertexTypeIndex()>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.util.EventLogTags: void <init>()>:<public>:<android.util.EventLogTags>
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>:<public static>:<android.telephony.CellLocation>
<android.view.ViewGroup: void addView(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.protocol.HttpRequestInterceptorList: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>:<public abstract>:<org.apache.http.protocol.HttpRequestInterceptorList>
<android.net.sip.SipSession.Listener: void onCallBusy(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.client.RedirectException: void <init>()>:<public>:<org.apache.http.client.RedirectException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.graphics.YuvImage: byte[] getYuvData()>:<public>:<android.graphics.YuvImage>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.preference.ListPreference: java.lang.String getValue()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.NumberPicker: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()>:<public final>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.widget.AbsListView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>:<public>:<android.graphics.drawable.Drawable>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder addRequirements(com.android.internal.util.Predicate[])>:<public final transient>:<android.test.suitebuilder.TestSuiteBuilder>
<android.test.mock.MockResources: void getValue(int,android.util.TypedValue,boolean)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.HeterogeneousExpandableList: int getGroupType(int)>:<public abstract>:<android.widget.HeterogeneousExpandableList>
<android.test.AndroidTestCase: void tearDown()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc[] values()>:<public static>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>:<public>:<android.content.res.Resources>
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>:<public>:<android.os.storage.StorageManager>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.ViewBinder getViewBinder()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>:<public>:<android.location.LocationManager>
<android.view.ViewStub: int getLayoutResource()>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.SlidingDrawer: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.opengl.GLSurfaceView: void onDetachedFromWindow()>:<protected>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.TextView: void setMaxHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.InputMethodSubtype: void <init>()>:<>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.app.DialogFragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<org.apache.http.client.CredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)>:<public abstract>:<org.apache.http.client.CredentialsProvider>
<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>:<public static>:<android.content.ContentResolver>
<android.renderscript.ProgramFragment.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramFragment.Builder:android.renderscript.Program.BaseProgramBuilder>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ExpandableListAdapter: boolean hasStableIds()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.widget.ArrayAdapter: long getItemId(int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()>:<public>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.location.Location: java.lang.String getProvider()>:<public>:<android.location.Location:android.os.Parcelable>
<android.view.animation.AnimationSet: void setStartOffset(long)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.graphics.Path: void toggleInverseFillType()>:<public>:<android.graphics.Path>
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>:<public synchronized>:<android.webkit.WebSettings>
<android.database.ContentObservable: void dispatchChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.bluetooth.BluetoothAdapter: void closeProfileProxy(int,android.bluetooth.BluetoothProfile)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.view.MotionEvent: int getActionIndex()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.CalendarView.OnDateChangeListener: void onSelectedDayChange(android.widget.CalendarView,int,int,int)>:<public abstract>:<android.widget.CalendarView.OnDateChangeListener>
<android.graphics.Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.TableLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.mtp.MtpObjectInfo: long getDateCreated()>:<public final>:<android.mtp.MtpObjectInfo>
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.conn.EofSensorInputStream: int read()>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.view.KeyEvent: boolean isGamepadButton(int)>:<public static final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.inputmethodservice.InputMethodService: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: android.view.View.OnFocusChangeListener getOnFocusChangeListener()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteProgram: void native_bind_double(int,double)>:<protected final native>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.app.FragmentManager: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>:<public abstract>:<android.app.FragmentManager>
<android.webkit.WebView: void enablePlatformNotifications()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.cookie.CookieSpecRegistry: void setItems(java.util.Map)>:<public synchronized>:<org.apache.http.cookie.CookieSpecRegistry>
<android.view.View: void setDuplicateParentStateEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSMessageHandler getMessageHandler()>:<public>:<android.renderscript.RenderScript>
<org.apache.commons.logging.Log: void fatal(java.lang.Object,java.lang.Throwable)>:<public abstract>:<org.apache.commons.logging.Log>
<android.media.MediaRecorder: void setAudioEncoder(int)>:<public native>:<android.media.MediaRecorder>
<android.database.CursorWindow: boolean isNull(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.Gallery: void setUnselectedAlpha(float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>:<public static final>:<android.database.DatabaseUtils>
<android.app.FragmentBreadCrumbs: void onBackStackChanged()>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.webkit.CacheManager: boolean startCacheTransaction()>:<public static>:<android.webkit.CacheManager>
<android.provider.MediaStore.Video: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Video>
<android.test.ProviderTestCase: android.test.IsolatedContext getMockContext()>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewStub: void setLayoutResource(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.Scroller: int getStartY()>:<public final>:<android.widget.Scroller>
<android.renderscript.RenderScript.RSErrorHandler: void <init>()>:<public>:<android.renderscript.RenderScript.RSErrorHandler:java.lang.Runnable>
<android.app.PendingIntent: int describeContents()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.app.PendingIntent: void cancel()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>:<public>:<android.content.res.TypedArray>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>:<public>:<android.location.LocationManager>
<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>:<public abstract>:<android.view.MenuItem>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.content.BroadcastReceiver: boolean getAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.inputmethodservice.ExtractEditText: boolean onTextContextMenuItem(int)>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.LinearLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>:<public>:<android.graphics.Paint>
<org.xmlpull.v1.sax2.Driver: void setErrorHandler(org.xml.sax.ErrorHandler)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.util.StringBuilderPrinter: void <init>(java.lang.StringBuilder)>:<public>:<android.util.StringBuilderPrinter:android.util.Printer>
<android.graphics.Paint.Join: android.graphics.Paint.Join[] values()>:<public static>:<android.graphics.Paint.Join:java.lang.Enum>
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String,java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.database.MatrixCursor: void addRow(java.lang.Iterable)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.apache.http.client.methods.HttpGet: java.lang.String getMethod()>:<public>:<org.apache.http.client.methods.HttpGet:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.view.GestureDetector.OnGestureListener: void onShowPress(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>:<public>:<android.preference.PreferenceManager>
<org.apache.http.impl.AbstractHttpServerConnection: void sendResponseHeader(org.apache.http.HttpResponse)>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.test.MoreAsserts: void assertContentsInAnyOrder(java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.app.ProgressDialog: void setSecondaryProgress(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.Environment: void <init>()>:<public>:<android.os.Environment>
<org.apache.http.HttpClientConnection: void flush()>:<public abstract>:<org.apache.http.HttpClientConnection:org.apache.http.HttpConnection>
<android.webkit.WebSyncManager: void run()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.renderscript.Script.FieldBase: void <init>()>:<protected>:<android.renderscript.Script.FieldBase>
<org.apache.http.io.SessionInputBuffer: int read()>:<public abstract>:<org.apache.http.io.SessionInputBuffer>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface.OnDismissListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.location.Location: float getBearing()>:<public>:<android.location.Location:android.os.Parcelable>
<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>:<public final>:<android.content.ContentResolver>
<android.view.ViewGroup: void bringChildToFront(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<org.apache.http.client.utils.URIUtils: java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>:<public static>:<org.apache.http.client.utils.URIUtils>
<android.media.audiofx.AudioEffect: void setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener)>:<public>:<android.media.audiofx.AudioEffect>
<android.view.ViewGroup: void removeAllViews()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.webkit.WebViewDatabase: void <init>()>:<>:<android.webkit.WebViewDatabase>
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>:<public final>:<android.os.Parcel>
<android.opengl.GLES20: void glDisable(int)>:<public static native>:<android.opengl.GLES20>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>:<public abstract>:<android.bluetooth.BluetoothProfile.ServiceListener>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>:<public static>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.content.IntentFilter: java.lang.String getDataType(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.ExpandableListActivity: void onGroupCollapse(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.app.ActivityManager.RunningServiceInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.MotionEvent: float getTouchMajor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.Activity: void startActivities(android.content.Intent[])>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.SlidingDrawer: void unlock()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.view.View: int getTop()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.client.BasicCredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)>:<public synchronized>:<org.apache.http.impl.client.BasicCredentialsProvider:org.apache.http.client.CredentialsProvider>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.text.method.MetaKeyKeyListener: long handleKeyUp(long,int,android.view.KeyEvent)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.app.ActionBar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.WebHistoryItem: java.lang.Object clone()>:<protected volatile>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.view.View: android.view.View focusSearch(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.message.AbstractHttpMessage: void removeHeader(org.apache.http.Header)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.widget.RemoteViewsService: void <init>()>:<public>:<android.widget.RemoteViewsService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request addRequestHeader(java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.content.ContentProviderOperation: java.lang.String[] resolveSelectionArgsBackReferences(android.content.ContentProviderResult[],int)>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.view.animation.AnimationSet: boolean willChangeTransformationMatrix()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.app.Activity: boolean requestWindowFeature(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.test.InstrumentationTestCase: void sendKeys(int[])>:<public transient>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.PendingIntent: void send()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryEffects()>:<public static>:<android.media.audiofx.AudioEffect>
<org.json.JSONObject: org.json.JSONArray toJSONArray(org.json.JSONArray)>:<public>:<org.json.JSONObject>
<android.os.Debug: void resetGlobalExternalAllocSize()>:<public static>:<android.os.Debug>
<android.view.View.DragShadowBuilder: void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)>:<public>:<android.view.View.DragShadowBuilder>
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.ActivityManager.RunningTaskInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)>:<public>:<android.speech.tts.TextToSpeech>
<android.webkit.WebViewDatabase: void clearFormData()>:<public>:<android.webkit.WebViewDatabase>
<android.widget.TextView: float getTextSize()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ListPopupWindow: int getAnimationStyle()>:<public>:<android.widget.ListPopupWindow>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.view.accessibility.AccessibilityEvent: long getEventTime()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.content.pm.PackageItemInfo: void <init>()>:<public>:<android.content.pm.PackageItemInfo>
<android.app.Service: void stopForeground(boolean)>:<public final>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.widget.OverScroller: void abortAnimation()>:<public>:<android.widget.OverScroller>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc[] values()>:<public static>:<android.renderscript.ProgramStore.BlendSrcFunc:java.lang.Enum>
<android.graphics.Typeface: void finalize()>:<protected>:<android.graphics.Typeface>
<android.graphics.drawable.ColorDrawable: void <init>()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<dalvik.system.PathClassLoader: java.lang.Package getPackage(java.lang.String)>:<protected>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentResolver>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>:<public final transient>:<android.content.Context>
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()>:<protected>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.content.BroadcastReceiver: boolean getDebugUnregister()>:<public final>:<android.content.BroadcastReceiver>
<android.view.View: void setHapticFeedbackEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<org.apache.http.impl.client.RequestWrapper: void <init>(org.apache.http.HttpRequest)>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.widget.AbsListView: long[] getCheckedItemIds()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.webkit.WebView: int computeHorizontalScrollRange()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.message.HeaderGroup: org.apache.http.HeaderIterator iterator()>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator>
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>:<public static final>:<android.text.format.DateFormat>
<android.database.sqlite.SQLiteQuery: java.lang.String toString()>:<public>:<android.database.sqlite.SQLiteQuery:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>:<public static>:<org.apache.http.util.LangUtils>
<android.widget.Gallery: void dispatchSetPressed(boolean)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.widget.AdapterView: boolean canAnimate()>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer)>:<public>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.view.View: void buildLayer()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.Bundle: void <clinit>()>:<static>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addConstant(android.renderscript.Type)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.hardware.usb.UsbAccessory: java.lang.String toString()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.graphics.PorterDuff.Mode: void <init>(java.lang.String,int)>:<private>:<android.graphics.PorterDuff.Mode:java.lang.Enum>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void <init>(android.inputmethodservice.InputMethodService)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.test.mock.MockResources: int getColor(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.speech.RecognitionListener: void onPartialResults(android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<org.apache.http.cookie.Cookie: java.lang.String getValue()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.location.Criteria: int getPowerRequirement()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>:<public>:<android.view.animation.LayoutAnimationController>
<android.opengl.GLES20: void glUniform2f(int,float,float)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.nfc.tech.TagTechnology: void connect()>:<public abstract>:<android.nfc.tech.TagTechnology:java.io.Closeable>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager.Query)>:<public>:<android.app.DownloadManager>
<org.apache.http.ProtocolVersion: boolean equals(java.lang.Object)>:<public final>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.bluetooth.BluetoothProfile: java.util.List getDevicesMatchingConnectionStates(int[])>:<public abstract>:<android.bluetooth.BluetoothProfile>
<android.app.LauncherActivity: android.content.Intent getTargetIntent()>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.conn.Wire: void output(java.io.InputStream)>:<public>:<org.apache.http.impl.conn.Wire>
<android.view.OrientationEventListener: boolean canDetectOrientation()>:<public>:<android.view.OrientationEventListener>
<org.apache.http.impl.DefaultHttpResponseFactory: void <init>()>:<public>:<org.apache.http.impl.DefaultHttpResponseFactory:org.apache.http.HttpResponseFactory>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType valueOf(java.lang.String)>:<public static>:<android.view.ViewDebug.RecyclerTraceType:java.lang.Enum>
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.animation.LayoutTransition: void removeChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.graphics.Bitmap: int getScaledHeight(int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.database.sqlite.SQLiteProgram: void <init>()>:<>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.widget.ImageButton: boolean onSetAlpha(int)>:<protected>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewTreeObserver.OnGlobalFocusChangeListener: void onGlobalFocusChanged(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewTreeObserver.OnGlobalFocusChangeListener>
<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>:<public>:<org.apache.http.auth.AuthState>
<android.database.CursorWindow: boolean allocRow()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.location.Criteria: int getBearingAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.location.Address: void setThoroughfare(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.View: void setNextFocusDownId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.AndroidTestRunner: void <init>()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<dalvik.system.PathClassLoader: java.net.URL findResource(java.lang.String)>:<protected>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<android.renderscript.FieldPacker: void addObj(android.renderscript.BaseObj)>:<public>:<android.renderscript.FieldPacker>
<android.net.NetworkInfo: java.lang.String getReason()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.ViewManager>
<android.gesture.GestureOverlayView: void <init>(android.content.Context)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioTrack: void pause()>:<public>:<android.media.AudioTrack>
<android.renderscript.Matrix4f: void set(int,int,float)>:<public>:<android.renderscript.Matrix4f>
<android.hardware.Camera.Parameters: void setPreviewFpsRange(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.opengl.GLES10: void glLightx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int,int)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<org.apache.http.impl.conn.DefaultHttpRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.conn.DefaultHttpRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<android.widget.Gallery: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<org.apache.http.protocol.HttpRequestInterceptorList: void clearRequestInterceptors()>:<public abstract>:<org.apache.http.protocol.HttpRequestInterceptorList>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>:<public>:<android.graphics.Paint>
<android.database.MergeCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>:<public abstract>:<org.apache.http.client.HttpClient>
<org.apache.http.message.BasicHeaderElement: java.lang.String getValue()>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<org.apache.http.client.protocol.RequestDefaultHeaders: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.client.protocol.RequestDefaultHeaders:org.apache.http.HttpRequestInterceptor>
<android.graphics.ColorMatrix: void set(float[])>:<public>:<android.graphics.ColorMatrix>
<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>:<public>:<android.app.WallpaperManager>
<android.view.accessibility.AccessibilityEvent: void setParcelableData(android.os.Parcelable)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.widget.TableLayout: void setStretchAllColumns(boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.MergeCursor: float getFloat(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void close()>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.net.Uri: java.lang.String decode(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Instrumentation: boolean invokeMenuActionSync(android.app.Activity,int,int)>:<public>:<android.app.Instrumentation>
<android.preference.PreferenceGroup: int getPreferenceCount()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.widget.TextView: void setHighlightColor(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Sampler.Builder: void setWrapT(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.text.LoginFilter.PasswordFilterGMail: void <init>(boolean)>:<public>:<android.text.LoginFilter.PasswordFilterGMail:android.text.LoginFilter>
<android.preference.PreferenceCategory: boolean isEnabled()>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.widget.Spinner: void onMeasure(int,int)>:<protected>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.Window.Callback: void onActionModeFinished(android.view.ActionMode)>:<public abstract>:<android.view.Window.Callback>
<android.graphics.Bitmap.Config: void <clinit>()>:<static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>:<protected>:<org.apache.http.impl.client.AbstractAuthenticationHandler:org.apache.http.client.AuthenticationHandler>
<android.text.method.MovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.gesture.Prediction: void <init>()>:<>:<android.gesture.Prediction>
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.Window: android.view.Window getContainer()>:<public final>:<android.view.Window>
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<org.xmlpull.v1.XmlPullParserFactory: boolean isNamespaceAware()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.view.ViewGroup.LayoutParams: void <init>(int,int)>:<public>:<android.view.ViewGroup.LayoutParams>
<android.test.mock.MockCursor: boolean isLast()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.ListPopupWindow: void setSoftInputMode(int)>:<public>:<android.widget.ListPopupWindow>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>:<public final>:<android.os.Parcel>
<android.view.KeyEvent: boolean hasNoModifiers()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Debug: void resetGlobalFreedSize()>:<public static>:<android.os.Debug>
<android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.app.backup.FileBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public volatile>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.renderscript.Matrix3f: float get(int,int)>:<public>:<android.renderscript.Matrix3f>
<android.test.mock.MockPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.webkit.WebView: void postUrl(java.lang.String,byte[])>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.ClipData: void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData.Item)>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.gesture.GestureStore: void load(java.io.InputStream)>:<public>:<android.gesture.GestureStore>
<org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)>:<public>:<org.apache.http.conn.params.ConnManagerParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.net.wifi.WifiManager.WifiLock: void finalize()>:<protected>:<android.net.wifi.WifiManager.WifiLock>
<android.app.PendingIntent: void send(int)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<org.apache.http.protocol.HttpResponseInterceptorList: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>:<public abstract>:<org.apache.http.protocol.HttpResponseInterceptorList>
<android.animation.Keyframe: float getFraction()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>:<protected>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>:<public static>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView.RecyclerListener)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>:<public>:<android.graphics.drawable.Drawable>
<android.telephony.SignalStrength: int getCdmaEcio()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.ViewTreeObserver.OnGlobalLayoutListener: void onGlobalLayout()>:<public abstract>:<android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.util.SparseArray: void <init>()>:<public>:<android.util.SparseArray>
<org.apache.http.entity.InputStreamEntity: long getContentLength()>:<public>:<org.apache.http.entity.InputStreamEntity:org.apache.http.entity.AbstractHttpEntity>
<org.apache.http.MethodNotSupportedException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.MethodNotSupportedException:org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.os.HandlerThread: int getThreadId()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.PopupMenu: void dismiss()>:<public>:<android.widget.PopupMenu>
<android.app.SearchableInfo: int getImeOptions()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.text.method.ScrollingMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpResponse receiveResponseHeader()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.widget.AbsListView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<org.json.JSONTokener: org.json.JSONException syntaxError(java.lang.String)>:<public>:<org.json.JSONTokener>
<android.util.DisplayMetrics: void setToDefaults()>:<public>:<android.util.DisplayMetrics>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.content.ClipboardManager.OnPrimaryClipChangedListener: void onPrimaryClipChanged()>:<public abstract>:<android.content.ClipboardManager.OnPrimaryClipChangedListener>
<android.content.Intent: short getShortExtra(java.lang.String,short)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.preference.DialogPreference: void setDialogLayoutResource(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.drawable.DrawableContainer: void jumpToCurrentState()>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ListPopupWindow: void show()>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()>:<public>:<org.apache.http.impl.cookie.AbstractCookieSpec:org.apache.http.cookie.CookieSpec>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.String)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.view.Display: int getOrientation()>:<public native>:<android.view.Display>
<android.opengl.ETC1Util.ETC1Texture: java.nio.ByteBuffer getData()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.widget.QuickContactBadge: void onClick(android.view.View)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.widget.TableLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.app.backup.BackupDataInput: boolean readNextHeader()>:<public>:<android.app.backup.BackupDataInput>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.renderscript.ProgramVertex.Builder: android.renderscript.ProgramVertex.Builder addInput(android.renderscript.Element)>:<public>:<android.renderscript.ProgramVertex.Builder:android.renderscript.Program.BaseProgramBuilder>
<org.apache.http.message.BasicHeaderValueParser: void <clinit>()>:<static>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.graphics.ColorMatrix: void setSaturation(float)>:<public>:<android.graphics.ColorMatrix>
<android.content.CursorLoader: android.net.Uri getUri()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.nfc.NdefRecord: void <init>(short,byte[],byte[],byte[])>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.widget.AbsListView: int getVerticalScrollbarWidth()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.GestureDetector.SimpleOnGestureListener: void onShowPress(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.test.mock.MockContext: java.io.File getObbDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.Paint: void setStrikeThruText(boolean)>:<public native>:<android.graphics.Paint>
<android.view.MotionEvent: float getOrientation()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.hardware.Camera.Parameters: void setGpsTimestamp(long)>:<public>:<android.hardware.Camera.Parameters>
<android.widget.SeekBar.OnSeekBarChangeListener: void onProgressChanged(android.widget.SeekBar,int,boolean)>:<public abstract>:<android.widget.SeekBar.OnSeekBarChangeListener>
<android.view.animation.Animation: boolean hasEnded()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.cookie.MalformedCookieException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.client.methods.HttpTrace: void <init>(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpTrace:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.media.audiofx.EnvironmentalReverb: short getDensity()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.os.Process: void <init>()>:<public>:<android.os.Process>
<android.text.format.Time: int getJulianDay(long,long)>:<public static>:<android.text.format.Time>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatatypeMismatchException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Paint: void <init>(android.graphics.Paint)>:<public>:<android.graphics.Paint>
<android.provider.Settings.System: void <init>()>:<public>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.widget.ExpandableListAdapter: boolean isEmpty()>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.widget.AbsListView: long pointToRowId(int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.conn.routing.RouteTracker: boolean isLayered()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<org.apache.http.impl.cookie.DateParseException: void <init>()>:<public>:<org.apache.http.impl.cookie.DateParseException:java.lang.Exception,java.lang.Throwable>
<android.renderscript.Element: android.renderscript.Element RGB_565(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>:<public static>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.hardware.Camera: void stopSmoothZoom()>:<public final native>:<android.hardware.Camera>
<org.apache.http.io.SessionInputBuffer: int read(byte[])>:<public abstract>:<org.apache.http.io.SessionInputBuffer>
<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.HeaderViewListAdapter: boolean isEnabled(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.ClipData: void addItem(android.content.ClipData.Item)>:<public>:<android.content.ClipData:android.os.Parcelable>
<org.apache.http.client.protocol.ClientContextConfigurer: void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry)>:<public>:<org.apache.http.client.protocol.ClientContextConfigurer:org.apache.http.client.protocol.ClientContext>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>:<public>:<android.app.Instrumentation>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.provider.Browser: void <init>()>:<public>:<android.provider.Browser>
<android.test.TouchUtils: void longClickView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES10: void glLogicOp(int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Element.DataKind: void <clinit>()>:<static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<android.app.ActivityManager: boolean isUserAMonkey()>:<public static>:<android.app.ActivityManager>
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.text.method.DateKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.telephony.SmsMessage.MessageClass: android.telephony.SmsMessage.MessageClass valueOf(java.lang.String)>:<public static>:<android.telephony.SmsMessage.MessageClass:java.lang.Enum>
<android.widget.TableRow: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView: void setFriction(float)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.SimpleAdapter: int getCount()>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.content.ContentValues: void putAll(android.content.ContentValues)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.app.Activity: boolean showDialog(int,android.os.Bundle)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>:<public static native>:<android.opengl.ETC1>
<android.appwidget.AppWidgetHost: void clearViews()>:<protected>:<android.appwidget.AppWidgetHost>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.MotionEvent: void recycle()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.AbsSavedState: void <init>(android.os.Parcel)>:<protected>:<android.view.AbsSavedState:android.os.Parcelable>
<android.text.util.Linkify.TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>:<public abstract>:<android.text.util.Linkify.TransformFilter>
<android.text.AlteredCharSequence: void <init>()>:<>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<org.apache.http.client.protocol.ClientContextConfigurer: void <init>(org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.client.protocol.ClientContextConfigurer:org.apache.http.client.protocol.ClientContext>
<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_TEST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<org.apache.http.impl.io.ChunkedOutputStream: void flush()>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.widget.HorizontalScrollView: void fling(int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder named(java.lang.String)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<android.media.audiofx.Virtualizer.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>:<public>:<android.hardware.SensorManager>
<android.text.DynamicLayout: int getParagraphDirection(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.net.sip.SipAudioCall.Listener: void onCallHeld(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.location.Location: void setSpeed(float)>:<public>:<android.location.Location:android.os.Parcelable>
<android.view.View: int getNextFocusUpId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebSettings: boolean getDomStorageEnabled()>:<public synchronized>:<android.webkit.WebSettings>
<android.webkit.WebView: void onPause()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>:<public>:<org.apache.http.impl.io.IdentityOutputStream:java.io.OutputStream>
<android.service.wallpaper.WallpaperService.Engine: void onTouchEvent(android.view.MotionEvent)>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>:<public>:<android.telephony.TelephonyManager>
<android.app.backup.RestoreObserver: void <init>()>:<public>:<android.app.backup.RestoreObserver>
<android.test.RenamingDelegatingContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayOriginatingAddress()>:<public>:<android.telephony.gsm.SmsMessage>
<android.content.res.Resources: int getDimensionPixelSize(int)>:<public>:<android.content.res.Resources>
<android.app.TimePickerDialog: void onTimeChanged(android.widget.TimePicker,int,int)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>:<public>:<android.accounts.AccountAuthenticatorResponse:android.os.Parcelable>
<android.widget.Toast: int getDuration()>:<public>:<android.widget.Toast>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.NoCopySpan.Concrete: void <init>()>:<public>:<android.text.NoCopySpan.Concrete:android.text.NoCopySpan>
<android.view.ViewStub: void <init>(android.content.Context,int)>:<public>:<android.view.ViewStub:android.view.View>
<org.apache.http.client.methods.HttpOptions: java.util.Set getAllowedMethods(org.apache.http.HttpResponse)>:<public>:<org.apache.http.client.methods.HttpOptions:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.webkit.WebSettings: void setPluginsPath(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.hardware.Camera.Parameters: java.util.List getSupportedJpegThumbnailSizes()>:<public>:<android.hardware.Camera.Parameters>
<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>:<public>:<android.content.res.Resources>
<org.apache.http.auth.NTCredentials: java.lang.String getPassword()>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>:<public>:<android.graphics.Paint>
<android.net.sip.SipManager: boolean isApiSupported(android.content.Context)>:<public static>:<android.net.sip.SipManager>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.test.ActivityUnitTestCase: void setActivityContext(android.content.Context)>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.opengl.GLES20: boolean glIsProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.os.Debug: void stopAllocCounting()>:<public static>:<android.os.Debug>
<android.location.GpsSatellite: void <init>()>:<>:<android.location.GpsSatellite>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>:<public>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsoluteLayout:android.view.ViewGroup,android.view.View>
<android.nfc.FormatException: void <init>()>:<public>:<android.nfc.FormatException:java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteProgram: void native_bind_string(int,java.lang.String)>:<protected final native>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.provider.SearchRecentSuggestions: void clearHistory()>:<public>:<android.provider.SearchRecentSuggestions>
<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.location.Address: void setFeatureName(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.hardware.usb.UsbRequest: void close()>:<public>:<android.hardware.usb.UsbRequest>
<android.text.TextPaint: void <init>()>:<public>:<android.text.TextPaint:android.graphics.Paint>
<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.hardware.usb.UsbInterface: int getInterfaceClass()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder includePackages(java.lang.String[])>:<public transient>:<android.test.suitebuilder.TestSuiteBuilder>
<org.json.JSONTokener: java.lang.String nextTo(char)>:<public>:<org.json.JSONTokener>
<android.webkit.WebSettings: boolean getUseDoubleTree()>:<public synchronized>:<android.webkit.WebSettings>
<android.view.SurfaceHolder: boolean isCreating()>:<public abstract>:<android.view.SurfaceHolder>
<android.view.InputQueue: void <init>()>:<>:<android.view.InputQueue>
<android.view.MotionEvent: float getHistoricalSize(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.AudioTrack: int getState()>:<public>:<android.media.AudioTrack>
<org.apache.http.conn.params.ConnManagerParamBean: void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean)>:<public>:<org.apache.http.conn.params.ConnManagerParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.view.KeyEvent.DispatcherState: boolean isTracking(android.view.KeyEvent)>:<public>:<android.view.KeyEvent.DispatcherState>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseCorruptException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.RotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,java.lang.ref.ReferenceQueue)>:<public>:<org.apache.http.impl.conn.tsccm.BasicPoolEntry:org.apache.http.impl.conn.AbstractPoolEntry>
<android.app.Notification.Builder: android.app.Notification.Builder setContentIntent(android.app.PendingIntent)>:<public>:<android.app.Notification.Builder>
<android.renderscript.Matrix4f: void translate(float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmUtils.ExtendedMetadataParser>
<android.opengl.GLES20: void glGetShaderSource(int,int,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<android.view.FocusFinder: void <init>()>:<>:<android.view.FocusFinder>
<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.graphics.DashPathEffect: void <init>(float[],float)>:<public>:<android.graphics.DashPathEffect:android.graphics.PathEffect>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.shapes.RectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.ViewAnimator: int getDisplayedChild()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.test.ServiceTestCase: void setApplication(android.app.Application)>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.SimpleCursorAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>:<public abstract>:<android.widget.SimpleCursorAdapter.ViewBinder>
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: void onCreateContextMenu(android.view.ContextMenu)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Context: java.io.File getCacheDir()>:<public abstract>:<android.content.Context>
<android.opengl.GLES10: void glDepthRangef(float,float)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.gesture.GestureStroke: void clearPath()>:<public>:<android.gesture.GestureStroke>
<org.apache.http.impl.io.ChunkedOutputStream: void flushCacheWithAppend(byte[],int,int)>:<protected>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<android.renderscript.BaseObj: void <init>()>:<>:<android.renderscript.BaseObj>
<org.apache.http.client.methods.HttpDelete: void <init>(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpDelete:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: void <clinit>()>:<static>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.widget.RemoteViews: void setTextColor(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.WrapperListAdapter: android.widget.ListAdapter getWrappedAdapter()>:<public abstract>:<android.widget.WrapperListAdapter:android.widget.ListAdapter>
<android.provider.ContactsContract.QuickContact: void <init>()>:<public>:<android.provider.ContactsContract.QuickContact>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedTo()>:<public>:<android.net.http.SslCertificate>
<android.net.LocalSocket: boolean isInputShutdown()>:<public>:<android.net.LocalSocket>
<android.net.NetworkInfo: int getSubtype()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.drm.DrmStore: void <init>()>:<public>:<android.drm.DrmStore>
<android.telephony.gsm.SmsManager: void <init>()>:<>:<android.telephony.gsm.SmsManager>
<junit.runner.BaseTestRunner: java.lang.String extractClassName(java.lang.String)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.ContentProviderClient>
<android.animation.IntEvaluator: void <init>()>:<public>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.content.OperationApplicationException: void <init>()>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.view.GestureDetector>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.util.Base64OutputStream: void write(int)>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.nfc.NdefRecord: void <clinit>()>:<static>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: int getOpacity()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.MotionEvent.PointerCoords: float getAxisValue(int)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.content.IntentSender: void <clinit>()>:<static>:<android.content.IntentSender:android.os.Parcelable>
<android.os.MemoryFile: int readBytes(byte[],int,int,int)>:<public>:<android.os.MemoryFile>
<android.widget.HorizontalScrollView: boolean isFillViewport()>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.renderscript.RenderScriptGL: void bindProgramVertex(android.renderscript.ProgramVertex)>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.provider.Browser.SearchColumns: void <init>()>:<public>:<android.provider.Browser.SearchColumns:android.provider.BaseColumns>
<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)>:<public>:<android.mtp.MtpDevice>
<android.text.method.LinkMovementMethod: void <init>()>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.widget.TimePicker: int getBaseline()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.nfc.tech.MifareClassic: int getBlockCount()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.apache.http.protocol.BasicHttpProcessor: java.lang.Object clone()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>:<public>:<org.apache.http.impl.io.ContentLengthOutputStream:java.io.OutputStream>
<android.provider.ContactsContract.Settings: void <init>()>:<>:<android.provider.ContactsContract.Settings:android.provider.ContactsContract.SettingsColumns>
<android.renderscript.Sampler: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.provider.Settings.System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.database.AbstractCursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.widget.Filterable: android.widget.Filter getFilter()>:<public abstract>:<android.widget.Filterable>
<org.apache.http.impl.io.AbstractMessageWriter: void write(org.apache.http.HttpMessage)>:<public>:<org.apache.http.impl.io.AbstractMessageWriter:org.apache.http.io.HttpMessageWriter>
<org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.widget.MediaController: void <init>(android.content.Context)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockCursor: void deactivate()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ComparisonFailure: java.lang.String getMessage()>:<public>:<android.test.ComparisonFailure:android.test.AssertionFailedError,java.lang.Error,java.lang.Throwable>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType valueOf(java.lang.String)>:<public static>:<android.renderscript.FileA3D.EntryType:java.lang.Enum>
<android.view.Menu: void close()>:<public abstract>:<android.view.Menu>
<android.gesture.GestureOverlayView: void addOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TextView: int getInputType()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: int getApplicationEnabledSetting(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.preference.PreferenceCategory: void <init>(android.content.Context)>:<public>:<android.preference.PreferenceCategory:android.preference.PreferenceGroup,android.preference.Preference>
<android.provider.ContactsContract.Contacts.Data: void <init>()>:<>:<android.provider.ContactsContract.Contacts.Data:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns>
<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.View.DragShadowBuilder: void <init>(android.view.View)>:<public>:<android.view.View.DragShadowBuilder>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>:<public>:<android.location.Geocoder>
<org.apache.http.util.LangUtils: void <init>()>:<>:<org.apache.http.util.LangUtils>
<android.text.format.Time: void switchTimezone(java.lang.String)>:<public native>:<android.text.format.Time>
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>:<public>:<org.apache.http.impl.io.ContentLengthInputStream:java.io.InputStream>
<android.text.style.MaskFilterSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.MaskFilterSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.media.MediaRecorder.OnErrorListener: void onError(android.media.MediaRecorder,int,int)>:<public abstract>:<android.media.MediaRecorder.OnErrorListener>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.View: void setRotationX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.Preference: void setOrder(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.Matrix3f: void rotate(float,float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.text.style.BackgroundColorSpan: void <init>(int)>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>(java.lang.String)>:<public>:<android.view.SurfaceHolder.BadSurfaceTypeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.Cursor: float getFloat(int)>:<public abstract>:<android.database.Cursor>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int)>:<public abstract>:<android.app.FragmentTransaction>
<android.location.GpsStatus: int getTimeToFirstFix()>:<public>:<android.location.GpsStatus>
<android.app.DatePickerDialog: void onClick(android.content.DialogInterface,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.text.style.BulletSpan: void <init>(int)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.media.audiofx.Equalizer: void <init>(int,int)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>:<public static>:<android.text.format.Formatter>
<android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.gesture.GestureOverlayView: boolean isGestureVisible()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.Layout: android.text.Layout.Alignment getParagraphAlignment(int)>:<public final>:<android.text.Layout>
<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.util.Xml.Encoding: android.util.Xml.Encoding[] values()>:<public static>:<android.util.Xml.Encoding:java.lang.Enum>
<org.apache.http.entity.EntityTemplate: boolean isRepeatable()>:<public>:<org.apache.http.entity.EntityTemplate:org.apache.http.entity.AbstractHttpEntity>
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>:<public synchronized>:<android.webkit.WebSettings>
<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.net.sip.SipProfile: void <init>()>:<>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.app.ActivityGroup: void onPause()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix2f)>:<public>:<android.renderscript.FieldPacker>
<android.content.IntentFilter.AuthorityEntry: int match(android.net.Uri)>:<public>:<android.content.IntentFilter.AuthorityEntry>
<android.webkit.WebView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.CursorAdapter: boolean hasStableIds()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.util.SparseArray: void remove(int)>:<public>:<android.util.SparseArray>
<android.renderscript.FieldPacker: void addI64(long)>:<public>:<android.renderscript.FieldPacker>
<android.media.MediaPlayer: boolean isLooping()>:<public native>:<android.media.MediaPlayer>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.media.AudioManager: void setStreamSolo(int,boolean)>:<public>:<android.media.AudioManager>
<org.apache.http.impl.cookie.BestMatchSpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.cookie.BestMatchSpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.hardware.Camera.Parameters: void setGpsLatitude(double)>:<public>:<android.hardware.Camera.Parameters>
<android.net.UrlQuerySanitizer: boolean hasParameter(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.hardware.SensorListener: void onAccuracyChanged(int,int)>:<public abstract>:<android.hardware.SensorListener>
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.app.NativeActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.widget.HeaderViewListAdapter: long getItemId(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.webkit.WebSettings: boolean supportMultipleWindows()>:<public synchronized>:<android.webkit.WebSettings>
<android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.animation.ValueAnimator: long getFrameDelay()>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.Renderer>
<android.content.ContextWrapper: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.xmlpull.v1.XmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.os.Debug.InstructionCount: boolean resetAndStart()>:<public>:<android.os.Debug.InstructionCount>
<android.content.BroadcastReceiver: void setResultCode(int)>:<public final>:<android.content.BroadcastReceiver>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.TableRow: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.cookie.BasicClientCookie: void setSecure(boolean)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.test.mock.MockResources: java.lang.String getResourceTypeName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.inputmethodservice.InputMethodService: void updateInputViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.util.LruCache: int maxSize()>:<public final synchronized>:<android.util.LruCache>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.view.Window: void setFlags(int,int)>:<public>:<android.view.Window>
<org.apache.http.util.ByteArrayBuffer: int capacity()>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.graphics.Path.Direction: void <init>(java.lang.String,int)>:<private>:<android.graphics.Path.Direction:java.lang.Enum>
<android.test.mock.MockContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>:<public>:<android.test.mock.MockContentResolver:android.content.ContentResolver>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransitionStyle(int)>:<public abstract>:<android.app.FragmentTransaction>
<org.apache.http.auth.UsernamePasswordCredentials: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>:<public abstract>:<android.content.SharedPreferences>
<android.graphics.drawable.Drawable: void <init>()>:<public>:<android.graphics.drawable.Drawable>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.view.Window.Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>:<public>:<org.apache.http.cookie.MalformedCookieException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: boolean isLongPress()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>:<public>:<android.util.Pair>
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.apache.http.HttpServerConnection: void flush()>:<public abstract>:<org.apache.http.HttpServerConnection:org.apache.http.HttpConnection>
<android.widget.ImageButton: void <init>(android.content.Context)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)>:<public>:<android.webkit.WebResourceResponse>
<android.util.JsonWriter: android.util.JsonWriter value(long)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChangingConfigurations()>:<public>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void detach()>:<protected>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<org.apache.http.client.methods.HttpOptions: void <init>(java.lang.String)>:<public>:<org.apache.http.client.methods.HttpOptions:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>:<public>:<android.content.res.TypedArray>
<android.util.EventLog.Event: java.lang.Object getData()>:<public synchronized>:<android.util.EventLog.Event>
<android.graphics.drawable.AnimationDrawable: void stop()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.content.IntentFilter: java.util.Iterator pathsIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.View: android.os.IBinder getApplicationWindowToken()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Path: void offset(float,float,android.graphics.Path)>:<public>:<android.graphics.Path>
<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoutes(java.util.Map)>:<public>:<org.apache.http.conn.params.ConnPerRouteBean:org.apache.http.conn.params.ConnPerRoute>
<android.renderscript.ProgramStore: void setName(java.lang.String)>:<public volatile>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.view.MotionEvent: void setEdgeFlags(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.MovementMethod>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.inputmethod.InputMethodInfo: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.drm.ProcessedData: void <init>()>:<>:<android.drm.ProcessedData>
<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PackageInfo:android.os.Parcelable>
<android.widget.TextView: int computeHorizontalScrollRange()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>:<public>:<org.apache.http.message.BufferedHeader:org.apache.http.FormattedHeader,java.lang.Cloneable>
<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.opengl.Matrix: void <init>()>:<public>:<android.opengl.Matrix>
<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.hardware.Camera: void <init>()>:<>:<android.hardware.Camera>
<android.widget.FrameLayout: void <init>(android.content.Context)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.HttpEntity: boolean isChunked()>:<public abstract>:<org.apache.http.HttpEntity>
<org.apache.http.message.ParserCursor: void <init>(int,int)>:<public>:<org.apache.http.message.ParserCursor>
<android.test.ActivityInstrumentationTestCase: void tearDown()>:<protected>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.content.res.Resources: java.lang.String getString(int)>:<public>:<android.content.res.Resources>
<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.NumberPicker: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.animation.LayoutTransition: void setDuration(int,long)>:<public>:<android.animation.LayoutTransition>
<android.content.CursorLoader: java.lang.Object loadInBackground()>:<public volatile>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.app.Activity: void setProgressBarIndeterminate(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.OverScroller: int getFinalY()>:<public final>:<android.widget.OverScroller>
<android.net.TrafficStats: long getUidTxPackets(int)>:<public static native>:<android.net.TrafficStats>
<android.app.NotificationManager: void cancel(int)>:<public>:<android.app.NotificationManager>
<android.content.pm.ServiceInfo: java.lang.String toString()>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.database.Cursor: int getInt(int)>:<public abstract>:<android.database.Cursor>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.location.Address: int describeContents()>:<public>:<android.location.Address:android.os.Parcelable>
<android.database.Cursor: boolean moveToLast()>:<public abstract>:<android.database.Cursor>
<android.os.Looper: void loop()>:<public static final>:<android.os.Looper>
<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>:<public abstract>:<android.app.FragmentManager>
<android.view.ActionMode: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.ActionMode>
<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>:<public>:<org.json.JSONObject>
<android.widget.OverScroller: boolean isFinished()>:<public final>:<android.widget.OverScroller>
<android.widget.HorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.Credentials: void <init>(int,int,int)>:<public>:<android.net.Credentials>
<android.text.method.ArrowKeyMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>:<public>:<android.net.http.SslCertificate>
<org.apache.http.impl.cookie.BasicMaxAgeHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.BasicMaxAgeHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.opengl.GLES10: void glLineWidthx(int)>:<public static native>:<android.opengl.GLES10>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence)>:<public>:<android.app.Notification.Builder>
<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.widget.SearchView: boolean isIconfiedByDefault()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.backup.BackupDataOutput: void <init>()>:<>:<android.app.backup.BackupDataOutput>
<android.test.mock.MockResources: android.graphics.Movie getMovie(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.speech.tts.TextToSpeech.OnInitListener: void onInit(int)>:<public abstract>:<android.speech.tts.TextToSpeech.OnInitListener>
<org.json.JSONStringer: org.json.JSONStringer array()>:<public>:<org.json.JSONStringer>
<org.apache.http.impl.conn.AbstractPoolEntry: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.app.AlertDialog: void setIcon(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<junit.framework.Assert: void assertEquals(java.lang.String,boolean,boolean)>:<public static>:<junit.framework.Assert>
<org.apache.http.message.ParserCursor: void updatePos(int)>:<public>:<org.apache.http.message.ParserCursor>
<android.location.Criteria: void <init>(android.location.Criteria)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.text.format.Time: long setJulianDay(int)>:<public>:<android.text.format.Time>
<android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.content.Entity: void <init>(android.content.ContentValues)>:<public>:<android.content.Entity>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Region: void <init>(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.os.Parcel: void writeDouble(double)>:<public final native>:<android.os.Parcel>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.content.res.TypedArray>
<org.apache.http.conn.ManagedClientConnection: boolean isMarkedReusable()>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.location.Location: long getTime()>:<public>:<android.location.Location:android.os.Parcelable>
<android.accounts.NetworkErrorException: void <init>()>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.graphics.Matrix: boolean preTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.content.Intent: android.content.Intent cloneFilter()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.pm.PackageManager.NameNotFoundException: void <init>()>:<public>:<android.content.pm.PackageManager.NameNotFoundException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>:<public>:<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener:android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.view.animation.Animation: void setStartOffset(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.renderscript.RSSurfaceView: void setRenderScriptGL(android.renderscript.RenderScriptGL)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.animation.PropertyValuesHolder: java.lang.String toString()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.app.Instrumentation.ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation.ActivityMonitor>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AbsListView: boolean onRemoteAdapterConnected()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.net.sip.SipSession.State: java.lang.String toString(int)>:<public static>:<android.net.sip.SipSession.State>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<junit.framework.Assert: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<junit.framework.Assert>
<android.provider.SyncStateContract: void <init>()>:<public>:<android.provider.SyncStateContract>
<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.preference.Preference: int getWidgetLayoutResource()>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.client.params.ClientParamBean: void setVirtualHost(org.apache.http.HttpHost)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.provider.ContactsContract.Groups: void <init>()>:<>:<android.provider.ContactsContract.Groups:android.provider.BaseColumns,android.provider.ContactsContract.GroupsColumns,android.provider.ContactsContract.SyncColumns>
<android.mtp.MtpConstants: boolean isAbstractObject(int)>:<public static>:<android.mtp.MtpConstants>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void enableConnectionGC()>:<public>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.ImageView:android.view.View>
<android.renderscript.RSSurfaceView: void pause()>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.test.ProviderTestCase2: void setUp()>:<protected>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.Instrumentation: void stopProfiling()>:<public>:<android.app.Instrumentation>
<android.test.mock.MockContext: void setTheme(int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.style.ScaleXSpan: int describeContents()>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.test.mock.MockCursor: java.lang.String[] getColumnNames()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.text.Spannable.Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>:<public>:<android.text.Spannable.Factory>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy getThreadPolicy()>:<public static>:<android.os.StrictMode>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.impl.NoConnectionReuseStrategy: void <init>()>:<public>:<org.apache.http.impl.NoConnectionReuseStrategy:org.apache.http.ConnectionReuseStrategy>
<android.app.Activity: void recreate()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.media.SoundPool: boolean unload(int)>:<public final native>:<android.media.SoundPool>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.ProviderTestCase: void <init>(java.lang.Class,java.lang.String)>:<public>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Bundle: char getChar(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.webkit.HttpAuthHandler: void <init>()>:<>:<android.webkit.HttpAuthHandler:android.os.Handler>
<android.app.PendingIntent: boolean equals(java.lang.Object)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)>:<public>:<android.media.AudioTrack>
<android.widget.TextView: android.text.InputFilter[] getFilters()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.TabActivity: void setDefaultTab(java.lang.String)>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.content.SyncContext: void onFinished(android.content.SyncResult)>:<public>:<android.content.SyncContext>
<android.widget.SearchView: void setIconifiedByDefault(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.webkit.WebView: void debugDump()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.telephony.SmsMessage: long getTimestampMillis()>:<public>:<android.telephony.SmsMessage>
<org.apache.http.message.LineParser: org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer)>:<public abstract>:<org.apache.http.message.LineParser>
<android.R.integer: void <init>()>:<public>:<android.R.integer>
<android.content.IntentFilter: void setPriority(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.widget.TextView: float getTextScaleX()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser)>:<public static final>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.preference.PreferenceActivity: void switchToHeader(java.lang.String,android.os.Bundle)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()>:<public>:<android.net.sip.SipSession>
<android.content.ClipDescription: int getMimeTypeCount()>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.os.MemoryFile: void close()>:<public>:<android.os.MemoryFile>
<android.renderscript.RSSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.TableRow: android.view.View getVirtualChildAt(int)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.nfc.tech.Ndef: void connect()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.GestureDetector.OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.media.MediaRecorder: int getAudioSourceMax()>:<public static final>:<android.media.MediaRecorder>
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.view.Window: void setTitleColor(int)>:<public abstract>:<android.view.Window>
<android.widget.ArrayAdapter: void add(java.lang.Object)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.widget.ZoomButtonsController: void setVisible(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>:<public final>:<android.content.Context>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>:<public final>:<android.graphics.Canvas>
<android.view.View: void setLayoutParams(android.view.ViewGroup.LayoutParams)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.text.method.TimeKeyListener: int getInputType()>:<public>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>:<public static>:<android.view.Gravity>
<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.graphics.drawable.BitmapDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme unregister(java.lang.String)>:<public final synchronized>:<org.apache.http.conn.scheme.SchemeRegistry>
<android.content.SearchRecentSuggestionsProvider: boolean onCreate()>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.media.ToneGenerator: boolean startTone(int,int)>:<public native>:<android.media.ToneGenerator>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.json.JSONArray: java.lang.Object get(int)>:<public>:<org.json.JSONArray>
<android.renderscript.Matrix2f: void <init>(float[])>:<public>:<android.renderscript.Matrix2f>
<android.os.Parcel: int dataSize()>:<public final native>:<android.os.Parcel>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.MediaRecorder: int getMaxAmplitude()>:<public native>:<android.media.MediaRecorder>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>:<public>:<android.app.admin.DevicePolicyManager>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>:<public>:<android.graphics.Paint>
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>:<public>:<android.gesture.GestureStore>
<android.util.MonthDisplayHelper: int getWeekStartDay()>:<public>:<android.util.MonthDisplayHelper>
<android.widget.TabWidget: void onFocusChange(android.view.View,boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.app.ActivityManager.MemoryInfo: void <clinit>()>:<static>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.app.ActionBar: void setDisplayShowTitleEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.view.animation.AnimationSet: java.lang.Object clone()>:<protected volatile>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.view.MotionEvent: int getPointerId(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.SlidingDrawer: boolean isOpened()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.app.Fragment: void onStart()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>:<public final>:<android.content.res.AssetManager>
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.AudioManager: void setParameters(java.lang.String)>:<public>:<android.media.AudioManager>
<android.renderscript.Font: android.renderscript.Font createFromAsset(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.media.RingtoneManager: void <init>(android.app.Activity)>:<public>:<android.media.RingtoneManager>
<android.util.SparseArray: void delete(int)>:<public>:<android.util.SparseArray>
<android.content.Intent.ShortcutIconResource: void <clinit>()>:<static>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>:<public>:<org.apache.http.impl.conn.tsccm.WaitingThread>
<junit.runner.BaseTestRunner: java.lang.String processArguments(java.lang.String[])>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.test.MoreAsserts: void assertNotEmpty(java.lang.String,java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.MediaController: void show(int)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.LocalSocket: void <init>()>:<public>:<android.net.LocalSocket>
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.test.ProviderTestCase2: void <init>(java.lang.Class,java.lang.String)>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.widget.ExpandableListView: boolean expandGroup(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: int getAudioSessionId()>:<public native>:<android.media.MediaPlayer>
<android.sax.EndElementListener: void end()>:<public abstract>:<android.sax.EndElementListener>
<android.net.Uri.Builder: android.net.Uri.Builder query(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,int,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.auth.NTCredentials: int hashCode()>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.os.Parcel: void writeBundle(android.os.Bundle)>:<public final>:<android.os.Parcel>
<android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.widget.LinearLayout.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.backup.BackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupHelper>
<android.view.inputmethod.InputMethodSession: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.database.DatabaseUtils.InsertHelper: long execute()>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.preference.Preference: void notifyChanged()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<junit.framework.TestSuite: junit.framework.Test testAt(int)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.widget.TextView: void setTextAppearance(android.content.Context,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.conn.routing.RouteInfo.TunnelType: void <clinit>()>:<static>:<org.apache.http.conn.routing.RouteInfo.TunnelType:java.lang.Enum>
<android.media.MediaPlayer: void setVolume(float,float)>:<public native>:<android.media.MediaPlayer>
<org.apache.http.impl.SocketHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.app.Instrumentation: android.os.Bundle getAllocCounts()>:<public>:<android.app.Instrumentation>
<android.os.StrictMode: void enableDefaults()>:<public static>:<android.os.StrictMode>
<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>:<public>:<org.apache.http.message.BasicNameValuePair:org.apache.http.NameValuePair,java.lang.Cloneable>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<org.apache.http.conn.ConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.conn.ConnectionKeepAliveStrategy>
<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.location.GpsSatellite: float getElevation()>:<public>:<android.location.GpsSatellite>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.FrameLayout: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int2)>:<public>:<android.renderscript.FieldPacker>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.Bitmap: void recycle()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.view.KeyEvent.Callback: boolean onKeyDown(int,android.view.KeyEvent)>:<public abstract>:<android.view.KeyEvent.Callback>
<android.widget.ViewAnimator: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.LoginFilter: void onStop()>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void assertNotAborted()>:<protected final>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<org.apache.http.HttpServerConnection: org.apache.http.HttpRequest receiveRequestHeader()>:<public abstract>:<org.apache.http.HttpServerConnection:org.apache.http.HttpConnection>
<android.os.ParcelFormatException: void <init>()>:<public>:<android.os.ParcelFormatException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TableRow.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.os.RemoteException: void <init>()>:<public>:<android.os.RemoteException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AdapterViewAnimator: void setSelection(int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.Virtualizer: void setProperties(android.media.audiofx.Virtualizer.Settings)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.widget.SimpleCursorTreeAdapter: void setViewText(android.widget.TextView,java.lang.String)>:<public>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setNormal(float,float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.graphics.NinePatch: int getHeight()>:<public>:<android.graphics.NinePatch>
<android.telephony.NeighboringCellInfo: int describeContents()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.test.MoreAsserts: void assertAssignableFrom(java.lang.Class,java.lang.Class)>:<public static>:<android.test.MoreAsserts>
<android.media.AudioTrack: void setState(int)>:<protected>:<android.media.AudioTrack>
<org.apache.http.cookie.MalformedCookieException: void <init>()>:<public>:<org.apache.http.cookie.MalformedCookieException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.net.Uri: int compareTo(android.net.Uri)>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.Region: java.lang.String toString()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>:<public>:<android.telephony.SmsMessage>
<android.view.View: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.EditTextPreference: void setText(java.lang.String)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder excludePackages(java.lang.String[])>:<public transient>:<android.test.suitebuilder.TestSuiteBuilder>
<android.media.ExifInterface: double getAltitude(double)>:<public>:<android.media.ExifInterface>
<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<android.net.sip.SipManager: void close(java.lang.String)>:<public>:<android.net.sip.SipManager>
<android.os.HandlerThread: void onLooperPrepared()>:<protected>:<android.os.HandlerThread:java.lang.Thread>
<android.widget.AbsListView: void invalidateViews()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.IntentFilter: java.lang.String matchCategories(java.util.Set)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.bluetooth.BluetoothClass: int describeContents()>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage parse()>:<public>:<org.apache.http.impl.io.AbstractMessageParser:org.apache.http.io.HttpMessageParser>
<android.text.style.BulletSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.preference.PreferenceScreen: void onClick()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<org.apache.http.message.BasicHeader: java.lang.Object clone()>:<public>:<org.apache.http.message.BasicHeader:org.apache.http.Header,java.lang.Cloneable>
<android.database.AbstractCursor: void onChange(boolean)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.test.ActivityInstrumentationTestCase2: void setActivityInitialTouchMode(boolean)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Process: void setThreadPriority(int)>:<public static final native>:<android.os.Process>
<android.content.pm.PathPermission: void <clinit>()>:<static>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.webkit.WebSettings.RenderPriority: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object removeAttribute(java.lang.String)>:<public>:<org.apache.http.protocol.DefaultedHttpContext:org.apache.http.protocol.HttpContext>
<android.content.ComponentName: void <init>(android.os.Parcel)>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>:<public static>:<android.preference.PreferenceManager>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.hardware.SensorManager: int getSensors()>:<public>:<android.hardware.SensorManager>
<android.drm.DrmInfoRequest: void put(java.lang.String,java.lang.Object)>:<public>:<android.drm.DrmInfoRequest>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.graphics.RectF: boolean intersect(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeRight()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.widget.StackView: void showPrevious()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(org.apache.http.HttpEntity)>:<public static>:<org.apache.http.client.utils.URLEncodedUtils>
<android.view.inputmethod.BaseInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.media.MediaRecorder: void finalize()>:<protected>:<android.media.MediaRecorder>
<android.os.Environment: boolean isExternalStorageEmulated()>:<public static>:<android.os.Environment>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int,int)>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.IntentFilter: int countDataAuthorities()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.Activity: void setVolumeControlStream(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.Fragment: boolean isResumed()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.webkit.CacheManager.CacheResult: int getHttpStatusCode()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)>:<public>:<android.view.GestureDetector>
<android.content.pm.ResolveInfo: int describeContents()>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.test.mock.MockApplication: void <init>()>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>:<public>:<android.widget.Scroller>
<android.widget.TextView: void setFreezesText(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.res.Resources: java.lang.String getResourceName(int)>:<public>:<android.content.res.Resources>
<junit.framework.TestResult: java.util.Enumeration failures()>:<public synchronized>:<junit.framework.TestResult>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>:<public>:<android.telephony.TelephonyManager>
<android.hardware.Camera.Parameters: void setFlashMode(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.net.sip.SipAudioCall: void continueCall(int)>:<public>:<android.net.sip.SipAudioCall>
<android.net.LocalSocket: void setSoTimeout(int)>:<public>:<android.net.LocalSocket>
<android.graphics.drawable.shapes.Shape: void <init>()>:<public>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.renderscript.Matrix2f: void rotate(float)>:<public>:<android.renderscript.Matrix2f>
<org.apache.http.HttpConnectionMetrics: long getRequestCount()>:<public abstract>:<org.apache.http.HttpConnectionMetrics>
<android.media.MediaRecorder: void setOrientationHint(int)>:<public>:<android.media.MediaRecorder>
<android.telephony.cdma.CdmaCellLocation: void <init>(android.os.Bundle)>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationUri(android.net.Uri)>:<public>:<android.app.DownloadManager.Request>
<android.webkit.WebView.HitTestResult: int getType()>:<public>:<android.webkit.WebView.HitTestResult>
<android.text.style.AlignmentSpan.Standard: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<org.apache.http.impl.AbstractHttpServerConnection: void flush()>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.graphics.Matrix: void mapPoints(float[],float[])>:<public>:<android.graphics.Matrix>
<android.renderscript.Allocation: void copyTo(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.test.mock.MockResources: java.lang.CharSequence[] getTextArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.TextView: void jumpDrawablesToCurrentState()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.ExtractedTextRequest: void <init>()>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.net.LocalSocket: int getReceiveBufferSize()>:<public>:<android.net.LocalSocket>
<android.content.Loader: void forceLoad()>:<public>:<android.content.Loader>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void bindInput(android.view.inputmethod.InputBinding)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.audiofx.Visualizer: int getFft(byte[])>:<public>:<android.media.audiofx.Visualizer>
<android.preference.RingtonePreference: void setShowSilent(boolean)>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.test.ViewAsserts: void assertTopAligned(android.view.View,android.view.View,int)>:<public static>:<android.test.ViewAsserts>
<android.app.Dialog: void onStop()>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebView: float getScale()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.conn.routing.RouteInfo: org.apache.http.conn.routing.RouteInfo.TunnelType getTunnelType()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.database.Cursor: boolean isFirst()>:<public abstract>:<android.database.Cursor>
<android.preference.PreferenceGroup: void removeAll()>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.database.Cursor: void close()>:<public abstract>:<android.database.Cursor>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: java.lang.String toString()>:<public final>:<org.apache.http.conn.ssl.AllowAllHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.widget.ViewFlipper: void onAttachedToWindow()>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)>:<public static>:<org.apache.http.impl.cookie.DateUtils>
<android.widget.SlidingDrawer.OnDrawerOpenListener: void onDrawerOpened()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerOpenListener>
<android.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar>
<android.widget.ExpandableListView: int getPackedPositionType(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.wifi.WifiConfiguration.AuthAlgorithm: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.AuthAlgorithm>
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()>:<public>:<android.net.UrlQuerySanitizer>
<android.text.style.BulletSpan: void <init>()>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getLocalAddress()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.view.animation.Animation: void initialize(int,int,int,int)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)>:<public>:<android.drm.DrmEvent>
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>:<public>:<android.webkit.WebViewDatabase>
<android.os.ParcelUuid: int describeContents()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.text.method.ArrowKeyMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.webkit.CacheManager.CacheResult: java.lang.String getETag()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.app.Activity: void setProgress(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.animation.AnimatorSet: void setTarget(java.lang.Object)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.content.IntentSender.OnFinished: void onSendFinished(android.content.IntentSender,android.content.Intent,int,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.IntentSender.OnFinished>
<android.widget.TextView: void <init>(android.content.Context)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>:<public static>:<android.graphics.ImageFormat>
<android.renderscript.Sampler.Builder: void setMagnification(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<org.apache.http.impl.cookie.RFC2965Spec: void <init>(java.lang.String[],boolean)>:<public>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.test.RenamingDelegatingContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.YuvImage: boolean compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)>:<public>:<android.graphics.YuvImage>
<android.animation.ValueAnimator: void cancel()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>:<public static>:<android.content.ContentResolver>
<android.util.SparseIntArray: int get(int,int)>:<public>:<android.util.SparseIntArray>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void unbindInput()>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.graphics.ColorMatrixColorFilter: void <init>(float[])>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>:<public static>:<org.apache.http.util.EncodingUtils>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CredentialsProvider createCredentialsProvider()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: java.lang.String sanitize(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer:android.net.UrlQuerySanitizer.ValueSanitizer>
<android.text.BoringLayout.Metrics: java.lang.String toString()>:<public>:<android.text.BoringLayout.Metrics:android.graphics.Paint.FontMetricsInt>
<android.provider.Contacts.People: void <clinit>()>:<static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.database.AbstractCursor: void close()>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>:<public final>:<android.content.Context>
<android.widget.AdapterView: void onDetachedFromWindow()>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: void setDuration(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.os.storage.StorageManager: boolean mountObb(java.lang.String,java.lang.String,android.os.storage.OnObbStateChangeListener)>:<public>:<android.os.storage.StorageManager>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ImageView:android.view.View>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.accessibility.AccessibilityEvent: int getItemCount()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.content.pm.FeatureInfo: int describeContents()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.text.method.TextKeyListener: int getInputType()>:<public>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.app.FragmentTransaction: int commit()>:<public abstract>:<android.app.FragmentTransaction>
<android.renderscript.AllocationAdapter: void subElementData(int,int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.media.audiofx.EnvironmentalReverb: void setDecayHFRatio(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.GridView: void onMeasure(int,int)>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.view.ViewGroup: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.DragEvent: int describeContents()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.widget.TextView: void setHint(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.hardware.GeomagneticField: float getInclination()>:<public>:<android.hardware.GeomagneticField>
<android.database.CursorWindow: void close()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>:<public>:<android.graphics.Canvas>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams copy()>:<public>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<org.apache.http.HttpHost: java.lang.String toURI()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.net.http.SslCertificate.DName: void <init>(android.net.http.SslCertificate,java.lang.String)>:<public>:<android.net.http.SslCertificate.DName>
<android.telephony.gsm.GsmCellLocation: void fillInNotifierBundle(android.os.Bundle)>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.text.TextUtils: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int)>:<public static>:<android.text.TextUtils>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.net.sip.SipSession.Listener: void onCallChangeFailed(android.net.sip.SipSession,int,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<org.json.JSONObject: void <init>(org.json.JSONObject,java.lang.String[])>:<public>:<org.json.JSONObject>
<android.os.Parcel: boolean hasFileDescriptors()>:<public final native>:<android.os.Parcel>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy build()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.widget.TextView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.nfc.tech.NfcV: void <init>()>:<>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.database.ContentObserver: void <init>(android.os.Handler)>:<public>:<android.database.ContentObserver>
<android.telephony.SmsMessage: int getProtocolIdentifier()>:<public>:<android.telephony.SmsMessage>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap,int)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.view.Display: float getRefreshRate()>:<public>:<android.view.Display>
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>:<public>:<org.apache.http.impl.entity.LaxContentLengthStrategy:org.apache.http.entity.ContentLengthStrategy>
<android.test.mock.MockContext: void unbindService(android.content.ServiceConnection)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>:<public abstract>:<android.text.method.KeyListener>
<android.content.Intent: android.content.Intent getIntent(java.lang.String)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>:<public final native>:<android.os.Parcel>
<android.text.TextUtils.SimpleStringSplitter: java.lang.Object next()>:<public volatile>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.widget.TextView: void setAutoLinkMask(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.renderscript.Matrix2f: void transpose()>:<public>:<android.renderscript.Matrix2f>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.Callback getCallback()>:<public>:<android.graphics.drawable.Drawable>
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: org.apache.http.conn.routing.HttpRoute getRoute()>:<public final>:<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:java.lang.ref.WeakReference,java.lang.ref.Reference>
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.Map parseChallenges(org.apache.http.Header[])>:<protected>:<org.apache.http.impl.client.AbstractAuthenticationHandler:org.apache.http.client.AuthenticationHandler>
<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.app.Activity: void onRestart()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void <init>()>:<>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.view.View: int getHorizontalFadingEdgeLength()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>:<public static>:<android.media.MediaPlayer>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.os.Vibrator: void vibrate(long[],int)>:<public>:<android.os.Vibrator>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.nfc.tech.MifareUltralight: void <init>()>:<>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder 'with'(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.content.res.TypedArray: int getColor(int,int)>:<public>:<android.content.res.TypedArray>
<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.Paint: float measureText(java.lang.String)>:<public>:<android.graphics.Paint>
<android.view.ActionMode: void setTitle(int)>:<public abstract>:<android.view.ActionMode>
<org.json.JSONObject: double optDouble(java.lang.String)>:<public>:<org.json.JSONObject>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,int)>:<public abstract>:<android.view.Menu>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.Exception)>:<public>:<android.content.IntentSender.SendIntentException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.preference.Preference: int compareTo(android.preference.Preference)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.Window: android.view.View getDecorView()>:<public abstract>:<android.view.Window>
<android.widget.OverScroller: void setFriction(float)>:<public final>:<android.widget.OverScroller>
<android.view.ViewStub: void setInflatedId(int)>:<public>:<android.view.ViewStub:android.view.View>
<android.widget.SlidingDrawer: void setOnDrawerScrollListener(android.widget.SlidingDrawer.OnDrawerScrollListener)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.widget.ExpandableListView: long getExpandableListPosition(int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.DropBoxManager.Entry: long getTimeMillis()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(int)>:<public>:<android.widget.TabHost.TabSpec>
<org.apache.http.conn.util.InetAddressUtils: boolean isIPv6Address(java.lang.String)>:<public static>:<org.apache.http.conn.util.InetAddressUtils>
<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.app.Instrumentation: void addMonitor(android.app.Instrumentation.ActivityMonitor)>:<public>:<android.app.Instrumentation>
<android.content.Context: android.content.pm.PackageManager getPackageManager()>:<public abstract>:<android.content.Context>
<android.graphics.Path: void rLineTo(float,float)>:<public>:<android.graphics.Path>
<android.content.ContentQueryMap: void setKeepUpdated(boolean)>:<public>:<android.content.ContentQueryMap:java.util.Observable>
<android.view.accessibility.AccessibilityEvent: boolean isFullScreen()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.widget.BaseAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.app.NotificationManager: void notify(int,android.app.Notification)>:<public>:<android.app.NotificationManager>
<android.content.res.Configuration: java.lang.String toString()>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.animation.RotateAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<org.apache.http.auth.AuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>:<public abstract>:<org.apache.http.auth.AuthScheme>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>:<public>:<android.telephony.TelephonyManager>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<org.apache.http.message.HeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean)>:<public abstract>:<org.apache.http.message.HeaderValueFormatter>
<android.view.ViewGroup: void setClipChildren(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.protocol.RequestDate: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.RequestDate:org.apache.http.HttpRequestInterceptor>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getSummary(android.content.res.Resources)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>:<public static final>:<android.telephony.PhoneNumberUtils>
<android.text.AndroidCharacter: void <init>()>:<public>:<android.text.AndroidCharacter>
<android.text.style.ForegroundColorSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.LauncherActivity: android.content.Intent intentForPosition(int)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.content.SyncResult: void clear()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.gesture.GestureUtils: void <init>()>:<>:<android.gesture.GestureUtils>
<android.location.Geocoder: void <init>(android.content.Context)>:<public>:<android.location.Geocoder>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>:<public>:<android.webkit.WebSettings>
<org.apache.http.HttpHost: int hashCode()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>:<public abstract>:<android.text.ClipboardManager>
<android.app.FragmentManager: void <init>()>:<public>:<android.app.FragmentManager>
<android.graphics.Picture: int getWidth()>:<public native>:<android.graphics.Picture>
<android.content.CursorLoader: void onReset()>:<protected>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.drm.DrmInfo: java.lang.String getMimeType()>:<public>:<android.drm.DrmInfo>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.net.ProxySelector getProxySelector()>:<public>:<org.apache.http.impl.conn.ProxySelectorRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings.ZoomDensity)>:<public>:<android.webkit.WebSettings>
<android.net.NetworkInfo: android.net.NetworkInfo.State getState()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.widget.TextView: void setMinHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ViewFlipper: void setAutoStart(boolean)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.cookie.CookieSpecRegistry: void unregister(java.lang.String)>:<public synchronized>:<org.apache.http.cookie.CookieSpecRegistry>
<android.hardware.SensorManager: java.util.List getSensorList(int)>:<public>:<android.hardware.SensorManager>
<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>:<public abstract>:<android.content.Context>
<android.graphics.RectF: boolean intersect(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<org.apache.http.client.protocol.ClientContextConfigurer: void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry)>:<public>:<org.apache.http.client.protocol.ClientContextConfigurer:org.apache.http.client.protocol.ClientContext>
<org.apache.http.io.SessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>:<public abstract>:<org.apache.http.io.SessionOutputBuffer>
<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.database.DatabaseUtils: void <init>()>:<public>:<android.database.DatabaseUtils>
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>:<public static>:<android.media.AudioRecord>
<android.widget.PopupWindow: void setFocusable(boolean)>:<public>:<android.widget.PopupWindow>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionSelect(int)>:<public abstract>:<android.widget.SearchView.OnSuggestionListener>
<org.apache.http.cookie.Cookie: java.lang.String getCommentURL()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>:<public>:<android.os.MemoryFile>
<android.provider.SyncStateContract.Constants: void <init>()>:<public>:<android.provider.SyncStateContract.Constants:android.provider.SyncStateContract.Columns>
<android.app.PendingIntent: void send(int,android.app.PendingIntent.OnFinished,android.os.Handler)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>:<public>:<android.net.LocalSocket>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.accessibility.AccessibilityManager>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.mtp.MtpDevice: byte[] getThumbnail(int)>:<public>:<android.mtp.MtpDevice>
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall.Listener,boolean)>:<public>:<android.net.sip.SipAudioCall>
<org.apache.http.conn.EofSensorInputStream: int read(byte[],int,int)>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.hardware.Camera.PictureCallback: void onPictureTaken(byte[],android.hardware.Camera)>:<public abstract>:<android.hardware.Camera.PictureCallback>
<android.os.Bundle: void putCharArray(java.lang.String,char[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.provider.ContactsContract.Contacts.Entity: void <init>()>:<>:<android.provider.ContactsContract.Contacts.Entity:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.BaseSyncColumns,android.provider.ContactsContract.SyncColumns,android.provider.ContactsContract.DataColumns,android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.net.Uri.Builder: void <init>()>:<public>:<android.net.Uri.Builder>
<android.inputmethodservice.InputMethodService: int getMaxWidth()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntitySerializer createEntitySerializer()>:<protected>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.view.View: void addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: boolean hasWindowFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>:<public static final>:<android.text.format.DateFormat>
<android.preference.PreferenceGroup: void addItemFromInflater(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.test.ActivityInstrumentationTestCase2: void tearDown()>:<protected>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.Intent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater.Filter)>:<public>:<android.view.LayoutInflater>
<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)>:<public static>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.widget.TimePicker: java.lang.Integer getCurrentHour()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Script: void setVar(int,android.renderscript.BaseObj)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.media.MediaRecorder.AudioSource: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.AudioSource>
<android.location.Address: double getLatitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.client.methods.AbortableHttpRequest: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)>:<public abstract>:<org.apache.http.client.methods.AbortableHttpRequest>
<android.telephony.SmsMessage: java.lang.String getEmailFrom()>:<public>:<android.telephony.SmsMessage>
<android.app.Fragment: void setArguments(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<junit.framework.TestListener: void endTest(junit.framework.Test)>:<public abstract>:<junit.framework.TestListener>
<android.widget.AbsSeekBar: void setMax(int)>:<public synchronized>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.widget.Gallery: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.test.ServiceTestCase: android.content.Context getSystemContext()>:<public>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setBlendFunc(android.renderscript.ProgramStore.BlendSrcFunc,android.renderscript.ProgramStore.BlendDstFunc)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.view.ViewDebug.ExportedProperty: java.lang.String category()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress.Namespace getNamespace()>:<public>:<android.net.LocalSocketAddress>
<android.test.mock.MockContext: int checkCallingOrSelfUriPermission(android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept(int)>:<public>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.view.ViewManager: void removeView(android.view.View)>:<public abstract>:<android.view.ViewManager>
<android.net.wifi.WifiInfo: int getLinkSpeed()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.SyncStatusObserver: void onStatusChanged(int)>:<public abstract>:<android.content.SyncStatusObserver>
<android.app.TabActivity: android.widget.TabWidget getTabWidget()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.nfc.Tag: byte[] getId()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.provider.LiveFolders: void <init>()>:<>:<android.provider.LiveFolders:android.provider.BaseColumns>
<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.nfc.tech.Ndef: boolean isConnected()>:<public volatile>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.widget.TextView: android.text.method.KeyListener getKeyListener()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.TextPaint: void set(android.text.TextPaint)>:<public>:<android.text.TextPaint:android.graphics.Paint>
<android.os.Debug: int getBinderReceivedTransactions()>:<public static native>:<android.os.Debug>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>:<public>:<android.widget.Scroller>
<android.widget.LinearLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.net.sip.SipAudioCall.Listener: void onCalling(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.os.WorkSource: boolean add(android.os.WorkSource)>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getClassName()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.message.BasicHeaderValueFormatter: java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter)>:<public static final>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.os.Process: int myUid()>:<public static final native>:<android.os.Process>
<android.widget.TextView: int getSelectionStart()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.Drawable: int getLevel()>:<public final>:<android.graphics.drawable.Drawable>
<android.renderscript.Sampler.Builder: void setWrapS(android.renderscript.Sampler.Value)>:<public>:<android.renderscript.Sampler.Builder>
<android.animation.LayoutTransition: void removeTransitionListener(android.animation.LayoutTransition.TransitionListener)>:<public>:<android.animation.LayoutTransition>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>:<public static native>:<android.opengl.GLES20>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient.CustomViewCallback)>:<public>:<android.webkit.WebChromeClient>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>:<public>:<android.graphics.BitmapFactory.Options>
<android.graphics.drawable.LayerDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.animation.Animator: void removeListener(android.animation.Animator.AnimatorListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>:<public>:<android.media.MediaPlayer>
<org.apache.http.util.LangUtils: int hashCode(int,boolean)>:<public static>:<org.apache.http.util.LangUtils>
<android.view.Surface: void hide()>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>:<public>:<android.widget.ImageView:android.view.View>
<org.apache.http.impl.cookie.BrowserCompatSpecFactory: void <init>()>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.text.Layout: int getLineBottom(int)>:<public final>:<android.text.Layout>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class)>:<public static>:<org.xmlpull.v1.XmlPullParserFactory>
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getPassword()>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.webkit.WebSettings: boolean getBlockNetworkImage()>:<public synchronized>:<android.webkit.WebSettings>
<android.database.MergeCursor: int getType(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.hardware.Camera.Parameters: void setFocusMode(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.text.TextPaint: void <init>(android.graphics.Paint)>:<public>:<android.text.TextPaint:android.graphics.Paint>
<org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>:<public>:<org.apache.http.params.HttpConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.database.DefaultDatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>:<public>:<android.database.DefaultDatabaseErrorHandler:android.database.DatabaseErrorHandler>
<org.apache.http.util.ByteArrayBuffer: void append(org.apache.http.util.CharArrayBuffer,int,int)>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetType(android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>:<public static final>:<android.net.Proxy>
<android.content.SyncResult: int describeContents()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.text.method.ArrowKeyMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.test.InstrumentationTestCase: android.app.Activity launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)>:<public final>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.backup.BackupDataInputStream: java.lang.String getKey()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.ImageView: android.widget.ImageView.ScaleType getScaleType()>:<public>:<android.widget.ImageView:android.view.View>
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ListPopupWindow: void postShow()>:<public>:<android.widget.ListPopupWindow>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.TextView: void computeScroll()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.View: float getScaleY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.routing.HttpRoute: boolean isLayered()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.media.audiofx.Virtualizer: void setStrength(short)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.provider.ContactsContract.PhoneLookup: void <init>()>:<>:<android.provider.ContactsContract.PhoneLookup:android.provider.BaseColumns,android.provider.ContactsContract.PhoneLookupColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.apache.http.util.ByteArrayBuffer: int byteAt(int)>:<public>:<org.apache.http.util.ByteArrayBuffer>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void abortConnection()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>:<public>:<android.net.ConnectivityManager>
<org.apache.http.protocol.HttpRequestInterceptorList: void removeRequestInterceptorByClass(java.lang.Class)>:<public abstract>:<org.apache.http.protocol.HttpRequestInterceptorList>
<android.webkit.WebView: void onDraw(android.graphics.Canvas)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.PeriodicSync: void <clinit>()>:<static>:<android.content.PeriodicSync:android.os.Parcelable>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>:<public>:<android.text.SpannableStringInternal>
<org.apache.http.impl.conn.tsccm.PoolEntryRequest: org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)>:<public abstract>:<org.apache.http.impl.conn.tsccm.PoolEntryRequest>
<android.content.Loader: void reset()>:<public>:<android.content.Loader>
<android.view.View: void setX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: java.lang.CharSequence getText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.GestureDetector.SimpleOnGestureListener: void onLongPress(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.DatePicker: int getYear()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.params.HttpProtocolParams: void <init>()>:<>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.media.MediaPlayer.OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>:<public abstract>:<android.media.MediaPlayer.OnInfoListener>
<android.util.Log: int e(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.graphics.Camera: void save()>:<public native>:<android.graphics.Camera>
<android.media.FaceDetector: void finalize()>:<protected>:<android.media.FaceDetector>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>:<public static>:<android.os.Environment>
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.content.res.Configuration: boolean isLayoutSizeAtLeast(int)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.view.accessibility.AccessibilityEvent: void setBeforeText(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.location.GpsStatus: int getMaxSatellites()>:<public>:<android.location.GpsStatus>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>:<protected synchronized>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)>:<public static>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.widget.TabHost: java.lang.String getCurrentTabTag()>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.audiofx.EnvironmentalReverb: void setReverbDelay(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.view.animation.RotateAnimation: void <init>(float,float)>:<public>:<android.view.animation.RotateAnimation:android.view.animation.Animation>
<org.apache.http.util.LangUtils: boolean equals(java.lang.Object[],java.lang.Object[])>:<public static>:<org.apache.http.util.LangUtils>
<android.opengl.GLES20: void glBindBuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.location.Address: double getLongitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.inputmethod.InputBinding: java.lang.String toString()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.test.TouchUtils: void touchAndCancelView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.widget.SearchView: boolean isQueryRefinementEnabled()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)>:<public static>:<android.net.sip.SipManager>
<android.content.pm.PackageManager: java.util.List queryInstrumentation(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.Context: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>:<public abstract>:<android.content.Context>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(java.lang.String)>:<public>:<android.net.wifi.WifiManager>
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>:<public synchronized>:<android.webkit.WebSettings>
<android.widget.AdapterViewFlipper: void setAutoStart(boolean)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.RingtonePreference: boolean getShowSilent()>:<public>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.View: void playSoundEffect(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MenuItem.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>:<public abstract>:<android.view.MenuItem.OnMenuItemClickListener>
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.webkit.WebView: int computeVerticalScrollRange()>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.Matrix: void mapPoints(float[])>:<public>:<android.graphics.Matrix>
<android.view.View: int getDrawingCacheQuality()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TextView: boolean onTextContextMenuItem(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<org.apache.http.impl.EnglishReasonPhraseCatalog: void <clinit>()>:<static>:<org.apache.http.impl.EnglishReasonPhraseCatalog:org.apache.http.ReasonPhraseCatalog>
<org.apache.http.client.methods.HttpDelete: java.lang.String getMethod()>:<public>:<org.apache.http.client.methods.HttpDelete:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)>:<public>:<android.os.RemoteCallbackList>
<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>:<public abstract>:<android.text.style.LineHeightSpan:android.text.style.ParagraphStyle,android.text.style.WrapTogetherSpan>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.mock.MockContext: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean)>:<public>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.widget.Scroller: boolean computeScrollOffset()>:<public>:<android.widget.Scroller>
<android.database.CursorWrapper: byte[] getBlob(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.TextView: void setSingleLine(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.graphics.Rect: void <init>(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.MediaController.MediaPlayerControl: boolean isPlaying()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.widget.HeaderViewListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.Scroller: void setFinalY(int)>:<public>:<android.widget.Scroller>
<android.graphics.Rect: void offsetTo(int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListPopupWindow>
<org.apache.http.auth.AuthScope: java.lang.String getScheme()>:<public>:<org.apache.http.auth.AuthScope>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.media.AudioTrack: int setAuxEffectSendLevel(float)>:<public>:<android.media.AudioTrack>
<android.preference.PreferenceActivity.Header: void <init>()>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()>:<public final>:<android.mtp.MtpDeviceInfo>
<android.os.Bundle: void putAll(android.os.Bundle)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ImageSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[],int,int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>:<public>:<android.graphics.Canvas>
<android.content.ContentValues: java.util.Set valueSet()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: int getOpacity()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.graphics.ColorMatrix: void setRGB2YUV()>:<public>:<android.graphics.ColorMatrix>
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>:<public>:<android.graphics.Paint>
<android.os.Messenger: void <init>(android.os.Handler)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.conn.ProxySelectorRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<org.apache.http.conn.scheme.PlainSocketFactory: boolean equals(java.lang.Object)>:<public>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.os.Parcel: void writeFloat(float)>:<public final native>:<android.os.Parcel>
<android.graphics.Paint: boolean isUnderlineText()>:<public final>:<android.graphics.Paint>
<org.apache.http.message.BasicLineFormatter: java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter)>:<public static final>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.test.mock.MockContext: void enforcePermission(java.lang.String,int,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.test.mock.MockResources: java.lang.String getResourceName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.AdapterViewFlipper: void stopFlipping()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.pm.ResolveInfo: int getIconResource()>:<public final>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.util.AttributeSet: int getAttributeCount()>:<public abstract>:<android.util.AttributeSet>
<android.test.MoreAsserts: void assertContentsInOrder(java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.content.res.Resources: java.lang.String getQuantityString(int,int)>:<public>:<android.content.res.Resources>
<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>:<public>:<android.telephony.PhoneStateListener>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>:<public static>:<android.text.TextUtils>
<android.opengl.GLES20: java.lang.String glGetString(int)>:<public static native>:<android.opengl.GLES20>
<android.text.style.QuoteSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.os.FileObserver: void stopWatching()>:<public>:<android.os.FileObserver>
<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.view.DragEvent: boolean getResult()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.view.KeyEvent: void <init>(long,long,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.util.VersionInfo: java.lang.String getTimestamp()>:<public final>:<org.apache.http.util.VersionInfo>
<org.apache.http.message.BasicNameValuePair: int hashCode()>:<public>:<org.apache.http.message.BasicNameValuePair:org.apache.http.NameValuePair,java.lang.Cloneable>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.media.MediaRecorder: void setOutputFile(java.lang.String)>:<public>:<android.media.MediaRecorder>
<android.location.Criteria: void setAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Path: void setFillType(android.graphics.Path.FillType)>:<public>:<android.graphics.Path>
<android.provider.Contacts.People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.renderscript.Script.Builder: void <init>()>:<>:<android.renderscript.Script.Builder>
<android.nfc.tech.NfcB: byte[] getApplicationData()>:<public>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>:<public>:<android.drm.DrmSupportInfo>
<android.media.ToneGenerator: void <init>(int,int)>:<public>:<android.media.ToneGenerator>
<android.hardware.Camera.Parameters: void set(java.lang.String,java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.widget.Spinner: java.lang.CharSequence getPrompt()>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.ViewAnimator: void removeView(android.view.View)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.LightingColorFilter: void <init>(int,int)>:<public>:<android.graphics.LightingColorFilter:android.graphics.ColorFilter>
<org.apache.http.impl.conn.SingleClientConnManager: void assertStillUp()>:<protected final>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.widget.ZoomButtonsController: void <init>(android.view.View)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.TwoLineListItem: void <init>(android.content.Context)>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.widget.TableLayout: boolean isShrinkAllColumns()>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void layout(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent.PointerCoords[],int,float,float,int,int,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Bundle: long getLong(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.net.Uri: java.lang.String encode(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.Instrumentation.ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation.ActivityMonitor>
<android.graphics.ColorMatrix: void <init>()>:<public>:<android.graphics.ColorMatrix>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>:<public abstract>:<android.view.ViewParent>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>:<public>:<android.webkit.WebViewDatabase>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.pm.PackageManager: int checkSignatures(int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.os.Debug: void <init>()>:<>:<android.os.Debug>
<org.apache.http.impl.client.BasicCredentialsProvider: java.lang.String toString()>:<public>:<org.apache.http.impl.client.BasicCredentialsProvider:org.apache.http.client.CredentialsProvider>
<android.app.SearchableInfo: void <init>()>:<>:<android.app.SearchableInfo:android.os.Parcelable>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>:<public>:<android.app.DownloadManager>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ListPopupWindow>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>:<public>:<android.app.backup.BackupManager>
<org.apache.http.auth.UsernamePasswordCredentials: boolean equals(java.lang.Object)>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.test.mock.MockContext: android.content.ContentResolver getContentResolver()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.animation.LayoutTransition: void addChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<android.content.Context: android.content.res.AssetManager getAssets()>:<public abstract>:<android.content.Context>
<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.cookie.BasicClientCookie: boolean isSecure()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.view.KeyEvent: int getUnicodeChar(int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.AbstractHttpClientConnection: void flush()>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.os.StrictMode.VmPolicy.Builder: void <init>()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.net.Uri: java.lang.String getEncodedUserInfo()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter.Blur)>:<public>:<android.graphics.BlurMaskFilter:android.graphics.MaskFilter>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.app.Activity: void onAttachFragment(android.app.Fragment)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<org.apache.http.message.BasicHeaderElement: void <init>(java.lang.String,java.lang.String,org.apache.http.NameValuePair[])>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.os.Bundle: float getFloat(java.lang.String,float)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.util.StateSet: java.lang.String dump(int[])>:<public static>:<android.util.StateSet>
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>:<public static>:<android.telephony.SmsManager>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<junit.framework.Assert: void assertTrue(java.lang.String,boolean)>:<public static>:<junit.framework.Assert>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.KeyCharacterMap.UnavailableException: void <init>(java.lang.String)>:<public>:<android.view.KeyCharacterMap.UnavailableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.ContentProviderClient: void <init>()>:<>:<android.content.ContentProviderClient>
<org.apache.http.impl.cookie.BrowserCompatSpec: void <clinit>()>:<static>:<org.apache.http.impl.cookie.BrowserCompatSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)>:<public>:<android.gesture.GestureLibrary>
<android.test.ActivityInstrumentationTestCase: void setUp()>:<protected>:<android.test.ActivityInstrumentationTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<org.apache.http.impl.client.ClientParamsStack: void <init>(org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.renderscript.Type: void <init>()>:<>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.MediaController:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.ActionBar.TabListener: void onTabUnselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.preference.MultiSelectListPreference: int findIndexOfValue(java.lang.String)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.preference.Preference: void setTitle(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float3)>:<public>:<android.renderscript.FieldPacker>
<android.widget.Scroller: int getFinalX()>:<public final>:<android.widget.Scroller>
<android.app.Application: void onLowMemory()>:<public>:<android.app.Application:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Element,int,android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.Builder>
<android.app.ListFragment: android.widget.ListView getListView()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.graphics.PathMeasure: boolean isClosed()>:<public>:<android.graphics.PathMeasure>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.opengl.GLES10: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.impl.io.IdentityInputStream: void close()>:<public>:<org.apache.http.impl.io.IdentityInputStream:java.io.InputStream>
<android.animation.ValueAnimator: long getDuration()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.app.FragmentBreadCrumbs: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.renderscript.Allocation: void copyFromUnchecked(int[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void <init>()>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.util.Config: void <clinit>()>:<static>:<android.util.Config>
<android.app.ActivityManager.RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningTaskInfo:android.os.Parcelable>
<android.content.BroadcastReceiver: void setOrderedHint(boolean)>:<public final>:<android.content.BroadcastReceiver>
<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>:<public>:<android.media.MediaRecorder>
<android.view.Surface: void writeToParcel(android.os.Parcel,int)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.opengl.GLES20: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.widget.ScrollView: void smoothScrollBy(int,int)>:<public final>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.ProviderTestCase: void setUp()>:<protected>:<android.test.ProviderTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.AsyncQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.Settings.System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.test.ActivityInstrumentationTestCase2: android.app.Activity getActivity()>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.media.SoundPool: void release()>:<public final native>:<android.media.SoundPool>
<android.renderscript.Element: void <init>()>:<>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.DownloadManager: void <init>()>:<>:<android.app.DownloadManager>
<android.content.pm.PackageManager: java.util.List getPreferredPackages(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.webkit.PluginStub: android.view.View getFullScreenView(int,android.content.Context)>:<public abstract>:<android.webkit.PluginStub>
<android.os.ResultReceiver: void <init>(android.os.Handler)>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>:<protected final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.Cursor: android.os.Bundle getExtras()>:<public abstract>:<android.database.Cursor>
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>:<public final>:<android.os.Parcel>
<android.view.Window: boolean requestFeature(int)>:<public>:<android.view.Window>
<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.Paint: void setTextScaleX(float)>:<public native>:<android.graphics.Paint>
<android.content.SharedPreferences: long getLong(java.lang.String,long)>:<public abstract>:<android.content.SharedPreferences>
<android.app.IntentService: int onStartCommand(android.content.Intent,int,int)>:<public>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.SyncStats: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.nfc.tech.BasicTagTechnology: void close()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.widget.AutoCompleteTextView: void showDropDown()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AutoCompleteTextView: void performValidation()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.commons.logging.Log: void fatal(java.lang.Object)>:<public abstract>:<org.apache.commons.logging.Log>
<android.graphics.Paint: void setTextSize(float)>:<public native>:<android.graphics.Paint>
<android.content.pm.PermissionInfo: int describeContents()>:<public>:<android.content.pm.PermissionInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.RadioGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.Dialog: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.shapes.RectShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.os.Debug.InstructionCount: boolean collect()>:<public>:<android.os.Debug.InstructionCount>
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus.Listener)>:<public>:<android.location.LocationManager>
<android.util.AndroidRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.util.AndroidRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.Bitmap: boolean isRecycled()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.util.AndroidException: void <init>()>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.util.FloatMath: float sin(float)>:<public static native>:<android.util.FloatMath>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>:<public static>:<android.database.DatabaseUtils>
<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo.TunnelType,org.apache.http.conn.routing.RouteInfo.LayerType)>:<public>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String,long)>:<public abstract>:<android.test.PerformanceTestCase.Intermediates>
<android.database.AbstractCursor: boolean isFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.String)>:<public>:<android.widget.RemoteViews.ActionException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.ProgramStore.BlendDstFunc: void <init>(java.lang.String,int)>:<private>:<android.renderscript.ProgramStore.BlendDstFunc:java.lang.Enum>
<android.widget.CheckBox: void <init>(android.content.Context)>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.graphics.drawable.LevelListDrawable: void <init>()>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.json.JSONArray: int optInt(int)>:<public>:<org.json.JSONArray>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()>:<public>:<android.net.sip.SipSession>
<android.view.View: void setPressed(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<org.apache.http.impl.io.SocketInputBuffer: boolean isDataAvailable(int)>:<public>:<org.apache.http.impl.io.SocketInputBuffer:org.apache.http.impl.io.AbstractSessionInputBuffer>
<org.apache.http.conn.routing.RouteTracker: boolean equals(java.lang.Object)>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<org.apache.http.entity.BufferedHttpEntity: long getContentLength()>:<public>:<org.apache.http.entity.BufferedHttpEntity:org.apache.http.entity.HttpEntityWrapper>
<android.speech.RecognitionService.Callback: void error(int)>:<public>:<android.speech.RecognitionService.Callback>
<org.apache.http.message.BasicTokenIterator: int findTokenStart(int)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.test.RenamingDelegatingContext: java.io.File getFileStreamPath(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<org.apache.http.entity.HttpEntityWrapper: boolean isStreaming()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.AdapterView: long getSelectedItemId()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<org.apache.http.conn.BasicEofSensorWatcher: boolean streamAbort(java.io.InputStream)>:<public>:<org.apache.http.conn.BasicEofSensorWatcher:org.apache.http.conn.EofSensorWatcher>
<android.provider.MediaStore.Video: void <init>()>:<public>:<android.provider.MediaStore.Video>
<android.net.sip.SipAudioCall: void close()>:<public>:<android.net.sip.SipAudioCall>
<android.widget.ListView: void onMeasure(int,int)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.content.res.TypedArray: float getFloat(int,float)>:<public>:<android.content.res.TypedArray>
<android.drm.DrmManagerClient.OnErrorListener: void onError(android.drm.DrmManagerClient,android.drm.DrmErrorEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnErrorListener>
<android.view.ViewGroup: void jumpDrawablesToCurrentState()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Paint: android.graphics.Paint.FontMetricsInt getFontMetricsInt()>:<public>:<android.graphics.Paint>
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>:<public>:<android.app.backup.BackupDataOutput>
<android.util.JsonReader: void endObject()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.app.LauncherActivity: android.app.LauncherActivity.ListItem itemForPosition(int)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.net.wifi.WifiInfo: java.lang.String toString()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.preference.CheckBoxPreference: void setSummaryOff(java.lang.CharSequence)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.app.ActionBar: void selectTab(android.app.ActionBar.Tab)>:<public abstract>:<android.app.ActionBar>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] indexMapping()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<android.opengl.GLES20: void glUniform1i(int,int)>:<public static native>:<android.opengl.GLES20>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.net.wifi.WifiManager: boolean reassociate()>:<public>:<android.net.wifi.WifiManager>
<android.net.NetworkInfo: android.net.NetworkInfo.DetailedState getDetailedState()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<org.apache.http.impl.auth.BasicSchemeFactory: void <init>()>:<public>:<org.apache.http.impl.auth.BasicSchemeFactory:org.apache.http.auth.AuthSchemeFactory>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.app.PendingIntent.CanceledException: void <init>()>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.view.KeyEvent: boolean isCapsLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.util.CharArrayBuffer: boolean isFull()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String[])>:<public transient>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyFlashScreen()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.provider.Contacts.Extensions: void <clinit>()>:<static>:<android.provider.Contacts.Extensions:android.provider.BaseColumns,android.provider.Contacts.ExtensionsColumns>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.TextView: boolean getFreezesText()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.Uri: java.lang.String getHost()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>:<public>:<android.graphics.BitmapShader:android.graphics.Shader>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.provider.ContactsContract.Contacts: void <init>()>:<>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>:<protected>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.content.Context: java.io.File getFilesDir()>:<public abstract>:<android.content.Context>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.opengl.GLES11: void glPointParameterx(int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.opengl.GLES10: void glHint(int,int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.impl.conn.DefaultClientConnection: boolean isSecure()>:<public final>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.message.BasicLineFormatter: java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter)>:<public static final>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.view.DragEvent: java.lang.String toString()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.os.Handler: android.os.Message obtainMessage()>:<public final>:<android.os.Handler>
<android.view.View: int getOverScrollMode()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.admin.DevicePolicyManager: void removeActiveAdmin(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.util.LruCache: java.lang.Object create(java.lang.Object)>:<protected>:<android.util.LruCache>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)>:<public static>:<android.media.CameraProfile>
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>:<public>:<android.os.Handler>
<android.os.Process: void sendSignal(int,int)>:<public static final native>:<android.os.Process>
<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>:<public>:<android.webkit.WebSettings>
<android.nfc.tech.BasicTagTechnology: void <init>()>:<>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.provider.MediaStore.Files: void <init>()>:<public>:<android.provider.MediaStore.Files>
<android.graphics.PathMeasure: void finalize()>:<protected>:<android.graphics.PathMeasure>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Rect: void <clinit>()>:<static>:<android.graphics.Rect:android.os.Parcelable>
<android.view.View: int getBaseline()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.MediaRecorder: void release()>:<public native>:<android.media.MediaRecorder>
<org.apache.http.impl.conn.IdleConnectionHandler: void removeAll()>:<public>:<org.apache.http.impl.conn.IdleConnectionHandler>
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<org.apache.http.util.ByteArrayBuffer: boolean isFull()>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.media.AudioTrack: int getPlayState()>:<public>:<android.media.AudioTrack>
<android.os.StrictMode.VmPolicy: void <clinit>()>:<static>:<android.os.StrictMode.VmPolicy>
<android.graphics.RectF: void readFromParcel(android.os.Parcel)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.nfc.tech.MifareClassic: void transfer(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.View: void buildDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.opengl.GLES20: void glUniform1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.util.FloatMath: float floor(float)>:<public static native>:<android.util.FloatMath>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.os.Bundle: double getDouble(java.lang.String,double)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>:<public>:<android.app.LocalActivityManager>
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>:<public>:<android.webkit.WebChromeClient>
<android.provider.Contacts.Photos: void <clinit>()>:<static>:<android.provider.Contacts.Photos:android.provider.BaseColumns,android.provider.Contacts.PhotosColumns>
<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus closeConvertSession(int)>:<public>:<android.drm.DrmManagerClient>
<android.accounts.OperationCanceledException: void <init>()>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.PeriodicSync:android.os.Parcelable>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<org.apache.http.client.methods.HttpRequestBase: boolean isAborted()>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RoundRectShape clone()>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.view.animation.Animation: void ensureInterpolator()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.inputmethodservice.KeyboardView: void swipeDown()>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.test.mock.MockCursor: boolean requery()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.Window: void invalidatePanelMenu(int)>:<public abstract>:<android.view.Window>
<android.inputmethodservice.Keyboard: boolean isShifted()>:<public>:<android.inputmethodservice.Keyboard>
<android.widget.PopupWindow: void update(int,int)>:<public>:<android.widget.PopupWindow>
<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.database.ContentObserver: void dispatchChange(boolean)>:<public final>:<android.database.ContentObserver>
<android.widget.AbsListView: void setVerticalScrollbarPosition(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.gesture.GestureLibrary: int getSequenceType()>:<public>:<android.gesture.GestureLibrary>
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.database.sqlite.SQLiteClosable: void <init>()>:<public>:<android.database.sqlite.SQLiteClosable>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView.Validator getValidator()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>:<public>:<android.animation.LayoutTransition>
<org.apache.http.protocol.RequestUserAgent: void <init>()>:<public>:<org.apache.http.protocol.RequestUserAgent:org.apache.http.HttpRequestInterceptor>
<android.media.MediaRecorder: void setMaxFileSize(long)>:<public native>:<android.media.MediaRecorder>
<android.content.ClipData: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.ClipData:android.os.Parcelable>
<junit.framework.Assert: void fail(java.lang.String)>:<public static>:<junit.framework.Assert>
<org.apache.http.message.HeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.HeaderValueParser>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.View: float getRotation()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.InputDevice.MotionRange: float getMin()>:<public>:<android.view.InputDevice.MotionRange>
<android.provider.Contacts.ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>:<public>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>:<public final>:<android.content.BroadcastReceiver>
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.view.Window: void closeAllPanels()>:<public abstract>:<android.view.Window>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.app.Activity: android.view.View getCurrentFocus()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.webkit.CookieSyncManager: void sync()>:<public volatile>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.content.Loader: void deliverResult(java.lang.Object)>:<public>:<android.content.Loader>
<org.apache.http.conn.params.ConnPerRouteBean: void setDefaultMaxPerRoute(int)>:<public>:<org.apache.http.conn.params.ConnPerRouteBean:org.apache.http.conn.params.ConnPerRoute>
<android.text.method.BaseKeyListener: boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.widget.SimpleCursorAdapter.CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)>:<public abstract>:<android.widget.SimpleCursorAdapter.CursorToStringConverter>
<android.renderscript.Float2: void <init>()>:<public>:<android.renderscript.Float2>
<android.view.MotionEvent: float getHistoricalX(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>:<public final>:<org.apache.http.conn.scheme.Scheme>
<android.app.Fragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.view.MotionEvent: void setSource(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<org.apache.http.impl.cookie.BasicPathHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BasicPathHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.hardware.usb.UsbInterface: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.URLUtil: java.lang.String composeSearchUrl(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.view.VelocityTracker: void recycle()>:<public>:<android.view.VelocityTracker>
<android.app.DownloadManager.Request: void allowScanningByMediaScanner()>:<public>:<android.app.DownloadManager.Request>
<org.json.JSONArray: double optDouble(int)>:<public>:<org.json.JSONArray>
<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory)>:<public>:<org.apache.http.client.params.ClientParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.os.Parcel: void readException(int,java.lang.String)>:<public final>:<android.os.Parcel>
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.widget.ListView: boolean canAnimate()>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.ClipDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Instrumentation: void setAutomaticPerformanceSnapshots()>:<public>:<android.app.Instrumentation>
<android.app.Fragment: void onResume()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.shapes.RoundRectShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setAlpha(int,int)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.app.Instrumentation: boolean isProfiling()>:<public>:<android.app.Instrumentation>
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.text.Layout: int getEllipsisStart(int)>:<public abstract>:<android.text.Layout>
<android.graphics.drawable.LayerDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.IntentFilter: void <init>()>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.View: int getPaddingTop()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>:<public abstract>:<android.os.IBinder>
<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>:<protected>:<org.apache.http.impl.cookie.CookieSpecBase:org.apache.http.impl.cookie.AbstractCookieSpec>
<android.widget.ScrollView: void measureChild(android.view.View,int,int)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.SeekBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.graphics.Canvas: int save()>:<public native>:<android.graphics.Canvas>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.text.style.QuoteSpan: int describeContents()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.ListView: void setFooterDividersEnabled(boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.PopupWindow: void setIgnoreCheekPress()>:<public>:<android.widget.PopupWindow>
<android.widget.ImageView: void setColorFilter(int)>:<public final>:<android.widget.ImageView:android.view.View>
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.backup.BackupAgentHelper: void <init>()>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WifiManager: void <init>()>:<>:<android.net.wifi.WifiManager>
<android.content.DialogInterface.OnDismissListener: void onDismiss(android.content.DialogInterface)>:<public abstract>:<android.content.DialogInterface.OnDismissListener>
<android.app.LocalActivityManager: void dispatchDestroy(boolean)>:<public>:<android.app.LocalActivityManager>
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>:<public>:<android.media.AudioRecord>
<android.speech.SpeechRecognizer: void cancel()>:<public>:<android.speech.SpeechRecognizer>
<android.media.AudioTrack: int getNativeFrameCount()>:<protected>:<android.media.AudioTrack>
<android.content.pm.ConfigurationInfo: void <init>()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<dalvik.'annotation'.TestTarget: java.lang.String conceptName()>:<public abstract>:<dalvik.annotation.TestTarget:java.lang.annotation.Annotation>
<org.apache.http.impl.conn.Wire: void input(byte[])>:<public>:<org.apache.http.impl.conn.Wire>
<android.telephony.SmsMessage: java.lang.String getEmailBody()>:<public>:<android.telephony.SmsMessage>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setDisplayName(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.os.Binder: void finalize()>:<protected>:<android.os.Binder:android.os.IBinder>
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>:<public>:<android.app.WallpaperManager>
<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>:<public static transient>:<android.text.TextUtils>
<android.opengl.GLES11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES11Ext>
<android.webkit.CacheManager.CacheResult: void setInputStream(java.io.InputStream)>:<public>:<android.webkit.CacheManager.CacheResult>
<android.animation.LayoutTransition: java.util.List getTransitionListeners()>:<public>:<android.animation.LayoutTransition>
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener)>:<public>:<android.media.MediaPlayer>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.graphics.Path: void rMoveTo(float,float)>:<public>:<android.graphics.Path>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getItemSelectedListener()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.accounts.Account: void <clinit>()>:<static>:<android.accounts.Account:android.os.Parcelable>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.nfc.tech.MifareUltralight: void close()>:<public volatile>:<android.nfc.tech.MifareUltralight:android.nfc.tech.BasicTagTechnology>
<android.text.StaticLayout: int getEllipsisCount(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.speech.RecognitionListener: void onReadyForSpeech(android.os.Bundle)>:<public abstract>:<android.speech.RecognitionListener>
<android.widget.AdapterView: long getItemIdAtPosition(int)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<org.xmlpull.v1.sax2.Driver: void setContentHandler(org.xml.sax.ContentHandler)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.content.Context: int checkCallingUriPermission(android.net.Uri,int)>:<public abstract>:<android.content.Context>
<android.app.Fragment: android.os.Bundle getArguments()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<org.apache.http.impl.conn.tsccm.RefQueueWorker: void <init>(java.lang.ref.ReferenceQueue,org.apache.http.impl.conn.tsccm.RefQueueHandler)>:<public>:<org.apache.http.impl.conn.tsccm.RefQueueWorker:java.lang.Runnable>
<android.graphics.drawable.shapes.OvalShape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<org.apache.http.UnsupportedHttpVersionException: void <init>()>:<public>:<org.apache.http.UnsupportedHttpVersionException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>:<public static>:<android.os.Debug>
<android.app.ProgressDialog: int getSecondaryProgress()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>:<public>:<android.app.backup.BackupDataOutput>
<android.graphics.Rect: void setEmpty()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<org.apache.http.protocol.ResponseContent: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.ResponseContent:org.apache.http.HttpResponseInterceptor>
<android.util.SparseIntArray: void <init>()>:<public>:<android.util.SparseIntArray>
<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.HeaderViewListAdapter: boolean removeHeader(android.view.View)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.animation.PropertyValuesHolder: void <init>()>:<>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.R.anim: void <init>()>:<public>:<android.R.anim>
<android.content.ContentValues: void putNull(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable.Callback)>:<public final>:<android.graphics.drawable.Drawable>
<android.widget.AlphabetIndexer: void <init>(android.database.Cursor,int,java.lang.CharSequence)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.app.ActivityManager.ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.widget.Chronometer: void onWindowVisibilityChanged(int)>:<protected>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.widget.AdapterViewAnimator: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.preference.PreferenceScreen: boolean isOnSameScreenAsChildren()>:<protected>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.CursorWrapper: java.lang.String getString(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.app.Instrumentation: void setInTouchMode(boolean)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.Drawable.Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public abstract>:<android.graphics.drawable.Drawable.Callback>
<org.xmlpull.v1.sax2.Driver: java.lang.Object getProperty(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.HttpServerConnection: void sendResponseEntity(org.apache.http.HttpResponse)>:<public abstract>:<org.apache.http.HttpServerConnection:org.apache.http.HttpConnection>
<android.drm.DrmInfo: int getInfoType()>:<public>:<android.drm.DrmInfo>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.DefaultHttpClient: void <init>()>:<public>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<org.json.JSONStringer: org.json.JSONStringer endObject()>:<public>:<org.json.JSONStringer>
<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()>:<public>:<android.text.style.MaskFilterSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.DigitalClock: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.preference.Preference: void setSelectable(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.CursorAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.app.ActivityManager.ProcessErrorStateInfo: int describeContents()>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.test.mock.MockContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>:<public>:<android.graphics.drawable.Drawable>
<android.webkit.WebSettings: boolean getUseWideViewPort()>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.telephony.NeighboringCellInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.app.DialogFragment: void onStart()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.widget.AdapterViewAnimator: int getDisplayedChild()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getBeforeText()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getLocalAddress()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.preference.ListPreference: java.lang.CharSequence getEntry()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.os.Bundle: double getDouble(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.TabWidget: void setDividerDrawable(int)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.os.CountDownTimer: void onTick(long)>:<public abstract>:<android.os.CountDownTimer>
<android.app.Dialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(int)>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.net.Uri: java.lang.String getEncodedQuery()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.test.mock.MockContext: int checkCallingOrSelfPermission(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.PopupWindow: void setTouchInterceptor(android.view.View.OnTouchListener)>:<public>:<android.widget.PopupWindow>
<android.text.style.AlignmentSpan.Standard: android.text.Layout.Alignment getAlignment()>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextChange(java.lang.String)>:<public abstract>:<android.widget.SearchView.OnQueryTextListener>
<org.apache.http.message.BasicTokenIterator: int findTokenEnd(int)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.content.CursorLoader: void deliverResult(android.database.Cursor)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>:<public>:<android.appwidget.AppWidgetProvider:android.content.BroadcastReceiver>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.renderscript.FileA3D: void setName(java.lang.String)>:<public volatile>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.os.Parcel: void writeBinderList(java.util.List)>:<public final>:<android.os.Parcel>
<android.nfc.NdefRecord: byte[] getId()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<android.content.ComponentName: java.lang.String toString()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>:<public final>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.widget.AbsListView: int getRightPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.ProgressDialog: void setMax(int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<org.apache.http.entity.InputStreamEntity: boolean isStreaming()>:<public>:<org.apache.http.entity.InputStreamEntity:org.apache.http.entity.AbstractHttpEntity>
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>:<public>:<android.content.res.Resources>
<android.view.accessibility.AccessibilityEvent: java.util.List getText()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.impl.conn.DefaultClientConnection: void close()>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.mtp.MtpObjectInfo: int getImagePixWidth()>:<public final>:<android.mtp.MtpObjectInfo>
<org.apache.http.conn.params.ConnManagerParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.conn.params.ConnManagerParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.widget.TextView: void onAttachedToWindow()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>:<public>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.graphics.Canvas: void drawRGB(int,int,int)>:<public>:<android.graphics.Canvas>
<android.test.mock.MockPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.widget.TableRow: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.ConditionVariable: void <init>()>:<public>:<android.os.ConditionVariable>
<android.content.Context: boolean isRestricted()>:<public>:<android.content.Context>
<android.content.pm.PathPermission: java.lang.String getReadPermission()>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.content.ClipboardManager: boolean hasPrimaryClip()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.text.SpannableStringInternal: int length()>:<public final>:<android.text.SpannableStringInternal>
<android.provider.Browser: void clearHistory(android.content.ContentResolver)>:<public static final>:<android.provider.Browser>
<android.inputmethodservice.AbstractInputMethodService: void <init>()>:<public>:<android.inputmethodservice.AbstractInputMethodService:android.app.Service,android.content.ContextWrapper,android.content.Context,android.view.KeyEvent.Callback>
<android.webkit.WebView.WebViewTransport: android.webkit.WebView getWebView()>:<public synchronized>:<android.webkit.WebView.WebViewTransport>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.media.JetPlayer: boolean queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>:<public>:<android.media.JetPlayer>
<android.hardware.GeomagneticField: float getZ()>:<public>:<android.hardware.GeomagneticField>
<org.json.JSONObject: java.lang.String optString(java.lang.String)>:<public>:<org.json.JSONObject>
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)>:<public>:<android.drm.DrmInfo>
<android.net.rtp.AudioGroup: void clear()>:<public>:<android.net.rtp.AudioGroup>
<android.drm.DrmInfoRequest: java.lang.String getMimeType()>:<public>:<android.drm.DrmInfoRequest>
<android.view.View: int getMeasuredHeight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabHost: void onTouchModeChanged(boolean)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.webkit.WebIconDatabase: void removeAllIcons()>:<public>:<android.webkit.WebIconDatabase>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>:<public static>:<android.graphics.drawable.Drawable>
<android.widget.NumberPicker.Formatter: java.lang.String format(int)>:<public abstract>:<android.widget.NumberPicker.Formatter>
<android.text.method.BaseMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.graphics.Matrix: boolean postScale(float,float)>:<public>:<android.graphics.Matrix>
<android.content.SearchRecentSuggestionsProvider: void <init>()>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.renderscript.Element: android.renderscript.Element PROGRAM_VERTEX(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.apache.http.protocol.HttpRequestHandlerRegistry: boolean matchUriRequestPattern(java.lang.String,java.lang.String)>:<protected>:<org.apache.http.protocol.HttpRequestHandlerRegistry:org.apache.http.protocol.HttpRequestHandlerResolver>
<android.text.Selection: void extendSelection(android.text.Spannable,int)>:<public static final>:<android.text.Selection>
<android.provider.ContactsContract.Groups: android.content.EntityIterator newEntityIterator(android.database.Cursor)>:<public static>:<android.provider.ContactsContract.Groups:android.provider.BaseColumns,android.provider.ContactsContract.GroupsColumns,android.provider.ContactsContract.SyncColumns>
<android.preference.ListPreference: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.util.AttributeSet: java.lang.String getClassAttribute()>:<public abstract>:<android.util.AttributeSet>
<android.os.BadParcelableException: void <init>(java.lang.Exception)>:<public>:<android.os.BadParcelableException:android.util.AndroidRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.accounts.NetworkErrorException: void <init>(java.lang.Throwable)>:<public>:<android.accounts.NetworkErrorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.location.GpsSatellite: boolean hasAlmanac()>:<public>:<android.location.GpsSatellite>
<android.hardware.Camera: void reconnect()>:<public final native>:<android.hardware.Camera>
<android.view.View: void setNextFocusForwardId(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.DialogPreference: android.view.View onCreateDialogView()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.hardware.Camera.Parameters: java.lang.String getWhiteBalance()>:<public>:<android.hardware.Camera.Parameters>
<android.inputmethodservice.InputMethodService: void hideWindow()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.sip.SipProfile: int describeContents()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.database.CursorJoiner: boolean hasNext()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.webkit.DateSorter: int getIndex(long)>:<public>:<android.webkit.DateSorter>
<android.widget.AbsListView: void setItemChecked(int,boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES20: void glBlendEquation(int)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteFullException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.res.ObbInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.ObbInfo:android.os.Parcelable>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.view.ViewGroup: void clearChildFocus(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.animation.LayoutTransition: long getStartDelay(int)>:<public>:<android.animation.LayoutTransition>
<android.mtp.MtpObjectInfo: int getThumbPixHeight()>:<public final>:<android.mtp.MtpObjectInfo>
<android.renderscript.Type: boolean hasFaces()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>:<public final>:<android.os.Handler>
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>:<public final>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.provider.MediaStore.Audio.Genres.Members: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Audio.Genres.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.view.View.OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)>:<public abstract>:<android.view.View.OnAttachStateChangeListener>
<android.media.AudioRecord: int getChannelConfiguration()>:<public>:<android.media.AudioRecord>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputConnection: boolean finishComposingText()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.view.animation.AnimationSet: android.view.animation.Animation clone()>:<protected volatile>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.graphics.drawable.ScaleDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.AsyncQueryHandler.WorkerHandler: void handleMessage(android.os.Message)>:<public>:<android.content.AsyncQueryHandler.WorkerHandler:android.os.Handler>
<android.database.CursorWindow: boolean isLong(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>:<public>:<android.appwidget.AppWidgetManager>
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.impl.AbstractHttpServerConnection: void doFlush()>:<protected>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.renderscript.Type.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>:<public>:<android.renderscript.Type.Builder>
<android.content.Intent.ShortcutIconResource: android.content.Intent.ShortcutIconResource fromContext(android.content.Context,int)>:<public static>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.telephony.SignalStrength: int getCdmaDbm()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.renderscript.Matrix3f: void transpose()>:<public>:<android.renderscript.Matrix3f>
<android.view.Window: void setWindowAnimations(int)>:<public>:<android.view.Window>
<android.view.WindowManager.LayoutParams: int copyFrom(android.view.WindowManager.LayoutParams)>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.widget.TextView: void setTextScaleX(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.conn.scheme.PlainSocketFactory: boolean isSecure(java.net.Socket)>:<public final>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.graphics.Paint.Align: android.graphics.Paint.Align[] values()>:<public static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.location.Address: void writeToParcel(android.os.Parcel,int)>:<public>:<android.location.Address:android.os.Parcelable>
<android.content.Intent: java.lang.Object clone()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.renderscript.Element: android.renderscript.Element SCRIPT(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<org.xmlpull.v1.sax2.Driver: boolean getFeature(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.content.SyncInfo: int describeContents()>:<public>:<android.content.SyncInfo:android.os.Parcelable>
<android.util.SparseArray: int indexOfValue(java.lang.Object)>:<public>:<android.util.SparseArray>
<android.hardware.usb.UsbDevice: void <clinit>()>:<static>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.view.ViewGroup: void <init>(android.content.Context)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.AdapterView: int getFirstVisiblePosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>:<public>:<android.media.AsyncPlayer>
<android.webkit.WebBackForwardList: void <init>()>:<>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<org.apache.http.conn.params.ConnConnectionParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.conn.params.ConnConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.telephony.gsm.SmsMessage: boolean isReplyPathPresent()>:<public>:<android.telephony.gsm.SmsMessage>
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: java.lang.String toString()>:<public final>:<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.graphics.Picture: void writeToStream(java.io.OutputStream)>:<public>:<android.graphics.Picture>
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<org.json.JSONArray: void <init>(java.lang.String)>:<public>:<org.json.JSONArray>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.test.mock.MockContext: void startActivities(android.content.Intent[])>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.io.ContentLengthOutputStream: void flush()>:<public>:<org.apache.http.impl.io.ContentLengthOutputStream:java.io.OutputStream>
<android.util.LruCache: void evictAll()>:<public final>:<android.util.LruCache>
<android.widget.TextView: void setSingleLine()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>:<public>:<org.apache.http.message.BasicHttpEntityEnclosingRequest:org.apache.http.message.BasicHttpRequest,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<org.apache.http.HttpConnection: org.apache.http.HttpConnectionMetrics getMetrics()>:<public abstract>:<org.apache.http.HttpConnection>
<android.widget.ExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.net.SSLSessionCache: void <init>(java.io.File)>:<public>:<android.net.SSLSessionCache>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.PluginState:java.lang.Enum>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.view.View: int combineMeasuredStates(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.nfc.NdefRecord: short getTnf()>:<public>:<android.nfc.NdefRecord:android.os.Parcelable>
<junit.framework.TestResult: boolean wasSuccessful()>:<public synchronized>:<junit.framework.TestResult>
<android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.telephony.gsm.GsmCellLocation: void setStateInvalid()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Handler: boolean sendEmptyMessage(int)>:<public final>:<android.os.Handler>
<android.webkit.CacheManager.CacheResult: long getContentLength()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.content.pm.ComponentInfo: void <init>()>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.text.style.ScaleXSpan: void <init>(float)>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Messenger: void <clinit>()>:<static>:<android.os.Messenger:android.os.Parcelable>
<android.view.View: boolean onSetAlpha(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.preference.PreferenceGroup: void setEnabled(boolean)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.content.Context: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public abstract>:<android.content.Context>
<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView.Tokenizer)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.os.Debug: long getNativeHeapSize()>:<public static native>:<android.os.Debug>
<android.view.Menu: void setQwertyMode(boolean)>:<public abstract>:<android.view.Menu>
<android.hardware.Camera.Parameters: void remove(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.webkit.WebBackForwardList: java.lang.Object clone()>:<protected volatile>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.nfc.tech.NfcA: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.app.ActivityManager: void moveTaskToFront(int,int)>:<public>:<android.app.ActivityManager>
<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>:<public>:<android.webkit.WebChromeClient>
<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>:<public>:<android.accessibilityservice.AccessibilityServiceInfo:android.os.Parcelable>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>:<public>:<android.os.Binder:android.os.IBinder>
<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>:<public>:<android.widget.PopupWindow>
<android.preference.PreferenceManager.OnActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)>:<public abstract>:<android.preference.PreferenceManager.OnActivityResultListener>
<android.test.ActivityInstrumentationTestCase2: void <init>(java.lang.Class)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.animation.AnimationSet: void scaleCurrentDuration(float)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.graphics.Paint: void setTextSkewX(float)>:<public native>:<android.graphics.Paint>
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ActivityInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.View: void setY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>:<public abstract>:<android.view.LayoutInflater>
<android.view.inputmethod.InputMethodSubtype: boolean equals(java.lang.Object)>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<org.apache.http.protocol.HttpRequestExecutor: void <init>()>:<public>:<org.apache.http.protocol.HttpRequestExecutor>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>:<public static>:<android.view.LayoutInflater>
<android.widget.Chronometer: android.widget.Chronometer.OnChronometerTickListener getOnChronometerTickListener()>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>:<public>:<android.content.res.Resources.Theme>
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpConnectionMetrics getMetrics()>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<org.json.JSONObject: boolean has(java.lang.String)>:<public>:<org.json.JSONObject>
<android.app.Instrumentation.ActivityMonitor: android.content.IntentFilter getFilter()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.preference.Preference: void setFragment(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.location.Address: void setCountryCode(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.opengl.GLES10: void glTranslatef(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>:<public>:<android.content.res.Resources>
<android.view.ViewGroup: void dispatchConfigurationChanged(android.content.res.Configuration)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.os.Debug: int setGlobalAllocationLimit(int)>:<public static>:<android.os.Debug>
<android.content.Intent.FilterComparison: void <init>(android.content.Intent)>:<public>:<android.content.Intent.FilterComparison>
<org.apache.http.HttpHost: java.lang.String toString()>:<public>:<org.apache.http.HttpHost:java.lang.Cloneable>
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)>:<public static>:<android.content.res.ObbScanner>
<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.widget.ListView: boolean removeFooterView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.Activity: void finishFromChild(android.app.Activity)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultHttpRequestRetryHandler:org.apache.http.client.HttpRequestRetryHandler>
<org.apache.http.auth.BasicUserPrincipal: void <init>(java.lang.String)>:<public>:<org.apache.http.auth.BasicUserPrincipal:java.security.Principal>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnCancelListener(android.content.DialogInterface.OnCancelListener)>:<public>:<android.app.AlertDialog.Builder>
<android.view.View: android.os.IBinder getWindowToken()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.ClientConnectionManagerFactory: org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>:<public abstract>:<org.apache.http.conn.ClientConnectionManagerFactory>
<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.media.AudioRecord: int read(byte[],int,int)>:<public>:<android.media.AudioRecord>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>:<public static native>:<android.opengl.GLES20>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.renderscript.Allocation.MipmapControl: void <clinit>()>:<static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.InputDevice: void <clinit>()>:<static>:<android.view.InputDevice:android.os.Parcelable>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.renderscript.Element: android.renderscript.Element MATRIX_2X2(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage.QuotaUpdater)>:<public>:<android.webkit.WebChromeClient>
<org.apache.http.HttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>:<public abstract>:<org.apache.http.HttpClientConnection:org.apache.http.HttpConnection>
<org.apache.http.impl.cookie.NetscapeDraftSpec: int getVersion()>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.widget.AdapterViewFlipper: void setAdapter(android.widget.Adapter)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.method.CharacterPickerDialog: void onCreate(android.os.Bundle)>:<protected>:<android.text.method.CharacterPickerDialog:android.app.Dialog,android.widget.AdapterView.OnItemClickListener,android.view.View.OnClickListener>
<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>:<public>:<org.apache.http.message.BasicRequestLine:org.apache.http.RequestLine,java.lang.Cloneable>
<android.os.FileObserver: void finalize()>:<protected>:<android.os.FileObserver>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.os.PatternMatcher: boolean match(java.lang.String)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.view.View: int getTopPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.DisplayMetrics: void <init>()>:<public>:<android.util.DisplayMetrics>
<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>:<public>:<android.view.ViewTreeObserver>
<android.app.Activity: int getWallpaperDesiredMinimumWidth()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.MediaPlayer: void start()>:<public>:<android.media.MediaPlayer>
<junit.runner.BaseTestRunner: int getPreference(java.lang.String,int)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.preference.CheckBoxPreference: void setDisableDependentsState(boolean)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.widget.HeaderViewListAdapter: boolean areAllItemsEnabled()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.test.TouchUtils: int dragViewTo(android.test.ActivityInstrumentationTestCase,android.view.View,int,int,int)>:<public static>:<android.test.TouchUtils>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>:<public>:<android.view.animation.LayoutAnimationController>
<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.location.Address: java.lang.String getCountryName()>:<public>:<android.location.Address:android.os.Parcelable>
<android.test.mock.MockCursor: float getFloat(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.media.SoundPool: void setPriority(int,int)>:<public final native>:<android.media.SoundPool>
<org.apache.http.entity.FileEntity: boolean isStreaming()>:<public>:<org.apache.http.entity.FileEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<junit.framework.TestFailure: java.lang.String toString()>:<public>:<junit.framework.TestFailure>
<android.widget.TableRow: android.widget.TableRow.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.Bundle: byte getByte(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.OrientationListener: void onSensorChanged(int,float[])>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getComment()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.preference.ListPreference: int findIndexOfValue(java.lang.String)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.renderscript.Program: void bindSampler(android.renderscript.Sampler,int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<org.apache.http.message.BasicTokenIterator: boolean isHttpSeparator(char)>:<protected>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.text.Selection: void setSelection(android.text.Spannable,int,int)>:<public static>:<android.text.Selection>
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.view.View.OnLongClickListener: boolean onLongClick(android.view.View)>:<public abstract>:<android.view.View.OnLongClickListener>
<android.os.Parcel: void setDataSize(int)>:<public final native>:<android.os.Parcel>
<android.text.StaticLayout: boolean getLineContainsTab(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<org.apache.http.impl.cookie.BestMatchSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.webkit.WebIconDatabase: void close()>:<public>:<android.webkit.WebIconDatabase>
<android.renderscript.Mesh.Builder: int getCurrentVertexTypeIndex()>:<public>:<android.renderscript.Mesh.Builder>
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>:<public>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>:<public>:<android.os.Binder:android.os.IBinder>
<android.graphics.drawable.shapes.PathShape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<org.apache.http.impl.cookie.BrowserCompatSpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.io.SessionOutputBuffer: void write(byte[])>:<public abstract>:<org.apache.http.io.SessionOutputBuffer>
<android.text.method.BaseMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status[] values()>:<public static>:<android.os.AsyncTask.Status:java.lang.Enum>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>:<public static>:<android.view.ViewConfiguration>
<android.view.Window: void openPanel(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.app.Fragment: void onDestroyView()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.content.ClipData: int describeContents()>:<public>:<android.content.ClipData:android.os.Parcelable>
<android.view.View: void postInvalidate()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteCursor: void deactivate()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.CursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>:<public final>:<android.content.res.AssetManager>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: void setProxySelector(java.net.ProxySelector)>:<public>:<org.apache.http.impl.conn.ProxySelectorRoutePlanner:org.apache.http.conn.routing.HttpRoutePlanner>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<org.apache.http.impl.client.DefaultUserTokenHandler: void <init>()>:<public>:<org.apache.http.impl.client.DefaultUserTokenHandler:org.apache.http.client.UserTokenHandler>
<android.test.ViewAsserts: void assertHorizontalCenterAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>:<public static>:<android.os.Environment>
<android.widget.ExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.ExpandableListAdapter>
<org.apache.http.cookie.CookieSpec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public abstract>:<org.apache.http.cookie.CookieSpec>
<android.view.View: void setOnTouchListener(android.view.View.OnTouchListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.PackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.test.suitebuilder.TestMethod: java.lang.String toString()>:<public>:<android.test.suitebuilder.TestMethod>
<android.provider.ContactsContract.Directory: void notifyDirectoryChange(android.content.ContentResolver)>:<public static>:<android.provider.ContactsContract.Directory:android.provider.BaseColumns>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>:<public static>:<android.hardware.SensorManager>
<android.preference.EditTextPreference: boolean shouldDisableDependents()>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.HttpMessage: void setParams(org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.HttpMessage>
<android.test.MoreAsserts: java.util.regex.MatchResult assertMatchesRegex(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.text.style.ReplacementSpan: void <init>()>:<public>:<android.text.style.ReplacementSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>:<public>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.hardware.Camera: void stopPreview()>:<public final native>:<android.hardware.Camera>
<org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.DefaultHttpClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection>
<android.renderscript.Allocation: void copyFrom(byte[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES20>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.TextView: boolean hasSelection()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.content.ClipDescription: int describeContents()>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.graphics.Path.FillType: void <init>(java.lang.String,int)>:<private>:<android.graphics.Path.FillType:java.lang.Enum>
<android.view.View: float getPivotY()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>:<protected final>:<org.apache.http.impl.conn.tsccm.BasicPoolEntry:org.apache.http.impl.conn.AbstractPoolEntry>
<android.test.AndroidTestRunner: void clearTestListeners()>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>:<public static>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.nfc.tech.NfcF: byte[] getManufacturer()>:<public>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams createHttpParams()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result[] values()>:<public static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>:<public final>:<android.os.Parcel>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void detach()>:<protected>:<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:org.apache.http.impl.conn.AbstractPooledConnAdapter,org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.nfc.tech.NfcV: byte getResponseFlags()>:<public>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.view.View: void setPadding(int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Paint: boolean isAntiAlias()>:<public final>:<android.graphics.Paint>
<org.apache.http.protocol.BasicHttpProcessor: void setInterceptors(java.util.List)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.net.NetworkInfo: int getType()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.graphics.drawable.Drawable: int getMinimumHeight()>:<public>:<android.graphics.drawable.Drawable>
<android.net.sip.SipSession: int getState()>:<public>:<android.net.sip.SipSession>
<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>:<public abstract>:<android.text.method.TransformationMethod>
<android.R.array: void <init>()>:<public>:<android.R.array>
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.animation.Transformation: void clear()>:<public>:<android.view.animation.Transformation>
<android.test.TouchUtils: void scrollToTop(android.test.ActivityInstrumentationTestCase,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<android.os.PowerManager: void reboot(java.lang.String)>:<public>:<android.os.PowerManager>
<android.widget.TwoLineListItem: void onFinishInflate()>:<protected>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType valueOf(java.lang.String)>:<public static>:<android.graphics.Canvas.EdgeType:java.lang.Enum>
<android.provider.Settings.Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>:<public>:<android.media.AudioManager>
<android.webkit.WebView: android.webkit.WebView.HitTestResult getHitTestResult()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.KeyEvent: boolean isPrintingKey()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.text.method.HideReturnsTransformationMethod: void <init>()>:<public>:<android.text.method.HideReturnsTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.graphics.Canvas: boolean isHardwareAccelerated()>:<public>:<android.graphics.Canvas>
<android.hardware.Sensor: void <init>()>:<>:<android.hardware.Sensor>
<android.inputmethodservice.KeyboardView: boolean isProximityCorrectionEnabled()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeLeft()>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCustomTitle(android.view.View)>:<public>:<android.app.AlertDialog.Builder>
<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>:<public static>:<android.text.TextUtils>
<android.view.animation.Animation: void finalize()>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.NumberPicker: float getTopFadingEdgeStrength()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Paint: boolean isDither()>:<public final>:<android.graphics.Paint>
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.graphics.drawable.TransitionDrawable: boolean isCrossFadeEnabled()>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.InputEvent: android.view.InputDevice getDevice()>:<public final>:<android.view.InputEvent:android.os.Parcelable>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>:<public>:<org.apache.http.message.BasicHttpEntityEnclosingRequest:org.apache.http.message.BasicHttpRequest,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.view.MotionEvent: void transform(android.graphics.Matrix)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.ConnectionReuseStrategy>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ListPopupWindow>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>:<public>:<android.widget.ProgressBar:android.view.View>
<android.view.inputmethod.ExtractedTextRequest: int describeContents()>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.widget.Toast: void <init>(android.content.Context)>:<public>:<android.widget.Toast>
<android.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.ListPopupWindow>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType valueOf(java.lang.String)>:<public static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<junit.framework.Assert: void assertEquals(float,float,float)>:<public static>:<junit.framework.Assert>
<android.content.ClipboardManager: void removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.view.View: void setFilterTouchesWhenObscured(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Address: void setSubAdminArea(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.os.Handler: void <init>(android.os.Looper)>:<public>:<android.os.Handler>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.os.ParcelFileDescriptor: void close()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.widget.BaseExpandableListAdapter: void onGroupCollapsed(int)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.graphics.Canvas: void scale(float,float)>:<public native>:<android.graphics.Canvas>
<android.webkit.WebSettings: boolean getAllowFileAccess()>:<public>:<android.webkit.WebSettings>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.cookie.RFC2109Spec: void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int)>:<protected>:<org.apache.http.impl.cookie.RFC2109Spec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.net.wifi.ScanResult: int describeContents()>:<public>:<android.net.wifi.ScanResult:android.os.Parcelable>
<android.test.AndroidTestCase: void testAndroidTestCaseSetupProperly()>:<public>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.gesture.GestureOverlayView: int getGestureColor()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockResources: java.lang.String getResourceEntryName(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.app.Fragment: void setRetainInstance(boolean)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.content.pm.PackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>:<public abstract>:<android.content.pm.PackageManager>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.RenderScript: void <init>()>:<>:<android.renderscript.RenderScript>
<android.net.wifi.WifiConfiguration.Status: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.Status>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.text.SpannableString: int nextSpanTransition(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)>:<public static>:<android.provider.MediaStore.Audio.Genres:android.provider.BaseColumns,android.provider.MediaStore.Audio.GenresColumns>
<android.view.Window: void setVolumeControlStream(int)>:<public abstract>:<android.view.Window>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.impl.io.HttpTransportMetricsImpl: long getBytesTransferred()>:<public>:<org.apache.http.impl.io.HttpTransportMetricsImpl:org.apache.http.io.HttpTransportMetrics>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(float[])>:<public>:<android.graphics.Interpolator>
<android.text.Layout: boolean getLineContainsTab(int)>:<public abstract>:<android.text.Layout>
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)>:<public static>:<android.net.rtp.AudioCodec>
<android.view.Window: void takeKeyEvents(boolean)>:<public abstract>:<android.view.Window>
<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>:<public>:<android.graphics.Picture>
<android.opengl.ETC1Util.ETC1Texture: int getHeight()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path)>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.content.SharedPreferences: float getFloat(java.lang.String,float)>:<public abstract>:<android.content.SharedPreferences>
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>:<public static>:<android.text.method.Touch>
<android.media.audiofx.PresetReverb.Settings: void <init>()>:<public>:<android.media.audiofx.PresetReverb.Settings>
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.gesture.GestureOverlayView.OnGestureListener: void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent)>:<public abstract>:<android.gesture.GestureOverlayView.OnGestureListener>
<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode: android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode valueOf(java.lang.String)>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode:java.lang.Enum>
<org.apache.http.message.BasicTokenIterator: java.lang.String nextToken()>:<public>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.app.AlertDialog: void <init>(android.content.Context)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<android.widget.BaseAdapter: void notifyDataSetInvalidated()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<org.apache.http.protocol.HttpExpectationVerifier: void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.protocol.HttpExpectationVerifier>
<android.content.pm.ConfigurationInfo: int describeContents()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.widget.Scroller: void startScroll(int,int,int,int)>:<public>:<android.widget.Scroller>
<android.content.ContentProvider: void <init>()>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.database.sqlite.SQLiteProgram: void native_bind_null(int)>:<protected final native>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.net.sip.SipSession.Listener: void onCallEstablished(android.net.sip.SipSession,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.content.ContextWrapper: void clearWallpaper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.net.Credentials: int getPid()>:<public>:<android.net.Credentials>
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser)>:<public static final>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.view.animation.AnticipateOvershootInterpolator: void <init>()>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator>
<android.widget.TabWidget: void setStripEnabled(boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.content.AsyncTaskLoader: void <init>(android.content.Context)>:<public>:<android.content.AsyncTaskLoader:android.content.Loader>
<android.inputmethodservice.Keyboard: boolean setShifted(boolean)>:<public>:<android.inputmethodservice.Keyboard>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>:<public final transient>:<android.os.AsyncTask>
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.CursorLoader: android.database.Cursor loadInBackground()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<org.apache.http.client.params.HttpClientParams: boolean isRedirecting(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.client.params.HttpClientParams>
<android.content.Loader: void onStopLoading()>:<protected>:<android.content.Loader>
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.test.ActivityUnitTestCase: android.app.Activity startActivity(android.content.Intent,android.os.Bundle,java.lang.Object)>:<protected>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.Mesh: void <init>()>:<>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<org.apache.http.message.BasicHttpResponse: void setLocale(java.util.Locale)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.view.View: int getBottomPaddingOffset()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.test.AndroidTestRunner: void addTestListener(junit.framework.TestListener)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.view.KeyEvent: java.lang.String toString()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.client.DefaultUserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultUserTokenHandler:org.apache.http.client.UserTokenHandler>
<android.opengl.GLES20: void glValidateProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.view.KeyEvent: int getUnicodeChar()>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.NetworkInfo: java.lang.String toString()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.provider.ContactsContract.Intents.Insert: void <init>()>:<public>:<android.provider.ContactsContract.Intents.Insert>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<org.apache.http.impl.client.BasicResponseHandler: java.lang.Object handleResponse(org.apache.http.HttpResponse)>:<public volatile>:<org.apache.http.impl.client.BasicResponseHandler:org.apache.http.client.ResponseHandler>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.telephony.gsm.SmsMessage: java.lang.String getMessageBody()>:<public>:<android.telephony.gsm.SmsMessage>
<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView.OnScrollListener)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.NumberPicker.OnValueChangeListener: void onValueChange(android.widget.NumberPicker,int,int)>:<public abstract>:<android.widget.NumberPicker.OnValueChangeListener>
<android.os.SystemClock: long currentThreadTimeMillis()>:<public static native>:<android.os.SystemClock>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator.AnimatorListener)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.TextView: boolean isInputMethodTarget()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockContext: android.content.res.Resources.Theme getTheme()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.Layout: int getOffsetForHorizontal(int,float)>:<public>:<android.text.Layout>
<android.widget.DatePicker.OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>:<public abstract>:<android.widget.DatePicker.OnDateChangedListener>
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction create()>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>:<public>:<android.telephony.TelephonyManager>
<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>:<public abstract>:<android.app.FragmentManager>
<android.test.RenamingDelegatingContext: java.lang.String getDatabasePrefix()>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>:<public static>:<android.util.Log>
<android.graphics.Matrix: boolean isIdentity()>:<public>:<android.graphics.Matrix>
<android.util.AttributeSet: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>:<public abstract>:<android.util.AttributeSet>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newInsert(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.widget.AbsSeekBar: void jumpDrawablesToCurrentState()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.content.ClipData.Item: void <init>(android.content.Intent)>:<public>:<android.content.ClipData.Item>
<android.webkit.CookieManager: void removeExpiredCookie()>:<public>:<android.webkit.CookieManager>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setNotificationVisibility(int)>:<public>:<android.app.DownloadManager.Request>
<android.content.Context: android.graphics.drawable.Drawable getWallpaper()>:<public abstract>:<android.content.Context>
<android.content.res.Resources: java.io.InputStream openRawResource(int)>:<public>:<android.content.res.Resources>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap[] values()>:<public static>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onPress(int)>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.widget.TextView: void setMaxLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.ApplicationTestCase: void testApplicationTestCaseSetUpProperly()>:<public final>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.Matrix3f: void rotate(float)>:<public>:<android.renderscript.Matrix3f>
<org.apache.http.RequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>:<public abstract>:<org.apache.http.RequestLine>
<android.opengl.GLES20: boolean glIsEnabled(int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.hardware.usb.UsbDevice: int getDeviceId()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<org.apache.http.message.BasicTokenIterator: boolean hasNext()>:<public>:<org.apache.http.message.BasicTokenIterator:org.apache.http.TokenIterator>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnKeyListener(android.content.DialogInterface.OnKeyListener)>:<public>:<android.app.AlertDialog.Builder>
<org.apache.http.client.HttpResponseException: void <init>(int,java.lang.String)>:<public>:<org.apache.http.client.HttpResponseException:org.apache.http.client.ClientProtocolException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.service.wallpaper.WallpaperService.Engine: android.view.SurfaceHolder getSurfaceHolder()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.content.ContextWrapper: java.lang.String[] databaseList()>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.entity.FileEntity: boolean isRepeatable()>:<public>:<org.apache.http.entity.FileEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.app.Instrumentation: android.content.Context getContext()>:<public>:<android.app.Instrumentation>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>:<public static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.widget.CalendarView: boolean isEnabled()>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.LocalSocket: void shutdownOutput()>:<public>:<android.net.LocalSocket>
<org.apache.http.cookie.SetCookie2: void setPorts(int[])>:<public abstract>:<org.apache.http.cookie.SetCookie2:org.apache.http.cookie.SetCookie>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.widget.RelativeLayout: void requestLayout()>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>:<public>:<android.content.res.Resources>
<android.nfc.tech.MifareClassic: void writeBlock(int,byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.media.ToneGenerator: boolean startTone(int)>:<public>:<android.media.ToneGenerator>
<android.widget.Gallery: int computeHorizontalScrollRange()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>:<public>:<android.app.AlarmManager>
<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int)>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction create()>:<public>:<android.renderscript.ProgramVertexFixedFunction.Builder>
<android.widget.RemoteViews: int getLayoutId()>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<org.apache.http.entity.FileEntity: long getContentLength()>:<public>:<org.apache.http.entity.FileEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.view.animation.Transformation: int getTransformationType()>:<public>:<android.view.animation.Transformation>
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[])>:<public>:<org.apache.http.impl.io.ContentLengthOutputStream:java.io.OutputStream>
<android.test.TouchUtils: int dragViewToX(android.test.InstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<android.webkit.WebView: void resumeTimers()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.preference.Preference: boolean shouldCommit()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode[] values()>:<public static>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.provider.MediaStore.Audio.Artists: void <init>()>:<public>:<android.provider.MediaStore.Audio.Artists:android.provider.BaseColumns,android.provider.MediaStore.Audio.ArtistColumns>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>:<public static>:<android.content.ContentResolver>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.drm.DrmInfo: byte[] getData()>:<public>:<android.drm.DrmInfo>
<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>:<public static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)>:<public>:<android.app.WallpaperManager>
<android.test.LoaderTestCase: void <init>()>:<public>:<android.test.LoaderTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>:<public>:<android.content.ContentResolver>
<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.media.audiofx.BassBoost: void <init>(int,int)>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.graphics.drawable.shapes.Shape: java.lang.Object clone()>:<public volatile>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<org.apache.http.auth.NTUserPrincipal: int hashCode()>:<public>:<org.apache.http.auth.NTUserPrincipal:java.security.Principal>
<android.content.DialogInterface: void dismiss()>:<public abstract>:<android.content.DialogInterface>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectAll()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()>:<public abstract>:<org.apache.http.params.HttpParams>
<android.text.Selection: void removeSelection(android.text.Spannable)>:<public static final>:<android.text.Selection>
<android.text.LoginFilter.PasswordFilterGMail: boolean isAllowed(char)>:<public>:<android.text.LoginFilter.PasswordFilterGMail:android.text.LoginFilter>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.StructuredPostal:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>:<public final>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>:<public static>:<android.net.wifi.SupplicantState:java.lang.Enum,android.os.Parcelable>
<android.os.Parcel: void readException()>:<public final>:<android.os.Parcel>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>:<public synchronized>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.webkit.WebView: boolean canGoBackOrForward(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.audiofx.Visualizer: int getCaptureSize()>:<public>:<android.media.audiofx.Visualizer>
<android.widget.SimpleAdapter: void setDropDownViewResource(int)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.os.ResultReceiver: int describeContents()>:<public>:<android.os.ResultReceiver:android.os.Parcelable>
<android.util.TimeFormatException: void <init>()>:<>:<android.util.TimeFormatException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.os.DropBoxManager: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>:<public>:<android.os.DropBoxManager>
<android.view.KeyEvent: void startTracking()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<org.apache.http.ProtocolVersion: java.lang.String toString()>:<public>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.widget.TextView.OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>:<public abstract>:<android.widget.TextView.OnEditorActionListener>
<android.content.pm.PackageManager: void clearPackagePreferredActivities(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.graphics.Point: boolean equals(java.lang.Object)>:<public>:<android.graphics.Point>
<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>:<public abstract>:<android.text.SpanWatcher:android.text.NoCopySpan>
<android.net.wifi.WifiManager: boolean disconnect()>:<public>:<android.net.wifi.WifiManager>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt[] values()>:<public static>:<android.text.TextUtils.TruncateAt:java.lang.Enum>
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])>:<public transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.text.SpannedString: int nextSpanTransition(int,int,java.lang.Class)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.io.SessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>:<public abstract>:<org.apache.http.io.SessionInputBuffer>
<android.renderscript.Type: boolean hasMipmaps()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.hardware.Camera.Parameters: int getPreviewFormat()>:<public>:<android.hardware.Camera.Parameters>
<android.text.style.ForegroundColorSpan: int getSpanTypeId()>:<public>:<android.text.style.ForegroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.ViewDebug.ExportedProperty: java.lang.String prefix()>:<public abstract>:<android.view.ViewDebug.ExportedProperty:java.lang.annotation.Annotation>
<org.apache.http.protocol.RequestContent: void <init>()>:<public>:<org.apache.http.protocol.RequestContent:org.apache.http.HttpRequestInterceptor>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable()>:<public abstract>:<android.graphics.drawable.Drawable.ConstantState>
<android.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<org.apache.http.impl.cookie.BestMatchSpec: int getVersion()>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<android.renderscript.AllocationAdapter: void <init>()>:<>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<org.apache.http.HttpResponse: java.util.Locale getLocale()>:<public abstract>:<org.apache.http.HttpResponse:org.apache.http.HttpMessage>
<android.preference.CheckBoxPreference: void <init>(android.content.Context)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.text.util.Rfc822Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser)>:<public static final>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.app.Instrumentation.ActivityMonitor: boolean isBlocking()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.app.Dialog: void <init>(android.content.Context)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader.TileMode)>:<public>:<android.graphics.RadialGradient:android.graphics.Shader>
<android.view.View: void setTag(java.lang.Object)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipAudioCall.Listener: void onCallEnded(android.net.sip.SipAudioCall)>:<public>:<android.net.sip.SipAudioCall.Listener>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore createCookieStore()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.telephony.SmsMessage: boolean isStatusReportMessage()>:<public>:<android.telephony.SmsMessage>
<android.opengl.GLSurfaceView.EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>:<public abstract>:<android.opengl.GLSurfaceView.EGLContextFactory>
<android.view.View: boolean isVerticalScrollBarEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>:<protected>:<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:org.apache.http.impl.conn.AbstractPooledConnAdapter,org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.provider.ContactsContract.CommonDataKinds.Event: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Event:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.view.View: int getSolidColor()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,boolean)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: boolean post(java.lang.Runnable)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockPackageManager: java.util.List getPreferredPackages(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.media.SoundPool: void stop(int)>:<public final native>:<android.media.SoundPool>
<android.animation.ObjectAnimator: void start()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.test.RenamingDelegatingContext: boolean deleteFile(java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<org.apache.http.cookie.SetCookie: void setPath(java.lang.String)>:<public abstract>:<org.apache.http.cookie.SetCookie:org.apache.http.cookie.Cookie>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.apache.http.entity.ContentProducer: void writeTo(java.io.OutputStream)>:<public abstract>:<org.apache.http.entity.ContentProducer>
<android.text.BoringLayout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.hardware.usb.UsbDeviceConnection: void <init>()>:<>:<android.hardware.usb.UsbDeviceConnection>
<android.widget.DialerFilter: void removeFilterWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>:<public>:<android.graphics.Matrix>
<android.content.AsyncQueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.text.SpannableString: int getSpanFlags(java.lang.Object)>:<public volatile>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.test.ActivityUnitTestCase: void <init>(java.lang.Class)>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>:<public>:<org.apache.http.cookie.CookieOrigin>
<android.widget.ProgressBar: int getMax()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.widget.BaseAdapter: boolean hasStableIds()>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.view.Window: boolean isFloating()>:<public abstract>:<android.view.Window>
<android.test.mock.MockContentProvider: void <init>(android.content.Context)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.NativeActivity: void surfaceCreated(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.bluetooth.BluetoothDevice: int getBondState()>:<public>:<android.bluetooth.BluetoothDevice:android.os.Parcelable>
<android.renderscript.ScriptC: void <init>(int,android.renderscript.RenderScript)>:<protected>:<android.renderscript.ScriptC:android.renderscript.Script,android.renderscript.BaseObj>
<android.provider.Contacts.People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.text.style.ImageSpan: java.lang.String getSource()>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.renderscript.ProgramStore: void destroy()>:<public volatile>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<org.apache.http.cookie.CookieSpecRegistry: void <init>()>:<public>:<org.apache.http.cookie.CookieSpecRegistry>
<android.app.admin.DevicePolicyManager: void lockNow()>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.accessibility.AccessibilityEvent: void setItemCount(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.renderscript.Matrix2f: void loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)>:<public>:<android.renderscript.Matrix2f>
<android.content.res.TypedArray: int getInt(int,int)>:<public>:<android.content.res.TypedArray>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.test.mock.MockPackageManager: void clearPackagePreferredActivities(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.pm.ResolveInfo: void <init>()>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>:<public>:<android.app.ActivityManager>
<android.telephony.SmsMessage: int getStatusOnSim()>:<public>:<android.telephony.SmsMessage>
<android.net.wifi.WifiInfo: android.net.NetworkInfo.DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>:<public static>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.view.ViewGroup: void onAnimationStart()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.KeyEvent: boolean isModifierKey(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>:<public>:<android.view.animation.AccelerateDecelerateInterpolator:android.view.animation.Interpolator>
<android.database.CursorWindow: int getStartPosition()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.AbsListView: int getListPaddingRight()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.text.style.SubscriptSpan: int getSpanTypeId()>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>:<public>:<android.media.SoundPool>
<org.apache.http.impl.entity.EntitySerializer: void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity)>:<public>:<org.apache.http.impl.entity.EntitySerializer>
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<org.apache.http.impl.AbstractHttpClientConnection: boolean isStale()>:<public>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.widget.DialerFilter: void clearText()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.net.UrlQuerySanitizer.ValueSanitizer: java.lang.String sanitize(java.lang.String)>:<public abstract>:<android.net.UrlQuerySanitizer.ValueSanitizer>
<android.graphics.Canvas: int getWidth()>:<public native>:<android.graphics.Canvas>
<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Sampler.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Sampler.Builder>
<android.util.Base64: void <init>()>:<>:<android.util.Base64>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall.Listener,int)>:<public>:<android.net.sip.SipManager>
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.database.CursorWrapper: void deactivate()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.renderscript.AllocationAdapter: void subData1D(int,int,float[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.widget.AbsListView: boolean isStackFromBottom()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.SearchableInfo: int getSettingsDescriptionId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.Header getVersionHeader()>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<android.telephony.cdma.CdmaCellLocation: void <init>()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.view.KeyEvent.DispatcherState: void reset()>:<public>:<android.view.KeyEvent.DispatcherState>
<android.graphics.RectF: void <init>()>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.graphics.Paint: void setAntiAlias(boolean)>:<public native>:<android.graphics.Paint>
<android.view.animation.AlphaAnimation: void <init>(float,float)>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.provider.Settings.Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.database.MatrixCursor: int getInt(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void mark(int)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.net.Uri: boolean isHierarchical()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>:<public>:<android.telephony.SmsMessage>
<android.webkit.WebIconDatabase: void <init>()>:<>:<android.webkit.WebIconDatabase>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()>:<public>:<org.apache.http.impl.client.AbstractAuthenticationHandler:org.apache.http.client.AuthenticationHandler>
<android.webkit.URLUtil: void <init>()>:<public>:<android.webkit.URLUtil>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.preference.MultiSelectListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.hardware.usb.UsbDevice: java.lang.String toString()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.animation.ValueAnimator: long getStartDelay()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.content.CursorLoader: java.lang.String getSortOrder()>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.view.accessibility.AccessibilityEvent: boolean isChecked()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.location.Criteria: int getHorizontalAccuracy()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>:<public static>:<android.database.DatabaseUtils>
<android.view.animation.Transformation: java.lang.String toShortString()>:<public>:<android.view.animation.Transformation>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodSessionImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl>
<android.view.Display: int getHeight()>:<public native>:<android.view.Display>
<android.media.AudioManager: boolean isBluetoothScoOn()>:<public>:<android.media.AudioManager>
<android.test.suitebuilder.TestSuiteBuilder: void <init>(java.lang.Class)>:<public>:<android.test.suitebuilder.TestSuiteBuilder>
<android.widget.ScrollView: int computeVerticalScrollRange()>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.content.Loader>
<android.view.View: int getRight()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TableLayout: void setColumnShrinkable(int,boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addTriangle(int,int,int)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.conn.routing.HttpRoute getRoute()>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>:<public final>:<android.os.Parcel>
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.text.method.ArrowKeyMovementMethod: void <init>()>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.view.Window.Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.graphics.Path: void rQuadTo(float,float,float,float)>:<public>:<android.graphics.Path>
<android.view.View: void getFocusedRect(android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.message.BasicHttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()>:<public>:<org.apache.http.message.BasicHttpRequest:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpRequest>
<android.widget.NumberPicker: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.ScaleDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.SubMenu: void clearHeader()>:<public abstract>:<android.view.SubMenu:android.view.Menu>
<android.view.animation.Animation: int getRepeatCount()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>:<public abstract>:<android.util.AttributeSet>
<android.content.ClipDescription: void <init>(android.content.ClipDescription)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(org.apache.http.RequestLine)>:<public>:<org.apache.http.message.BasicHttpEntityEnclosingRequest:org.apache.http.message.BasicHttpRequest,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<org.apache.http.client.RedirectException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.client.RedirectException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.text.SpannableStringBuilder: java.lang.Appendable append(char)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.test.TouchUtils: void dragViewToBottom(android.test.ActivityInstrumentationTestCase,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<android.os.PowerManager.WakeLock: void setReferenceCounted(boolean)>:<public>:<android.os.PowerManager.WakeLock>
<android.widget.SimpleCursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected>:<android.widget.SimpleCursorTreeAdapter:android.widget.ResourceCursorTreeAdapter,android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.graphics.RectF: void <clinit>()>:<static>:<android.graphics.RectF:android.os.Parcelable>
<android.bluetooth.BluetoothServerSocket: void close()>:<public>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.res.TypedArray: int getIndex(int)>:<public>:<android.content.res.TypedArray>
<android.view.Display: int getRotation()>:<public>:<android.view.Display>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>:<public static>:<android.telephony.PhoneNumberUtils>
<org.json.JSONArray: org.json.JSONArray put(int,long)>:<public>:<org.json.JSONArray>
<android.widget.Scroller: int getDuration()>:<public final>:<android.widget.Scroller>
<org.apache.http.auth.AuthScheme: java.lang.String getParameter(java.lang.String)>:<public abstract>:<org.apache.http.auth.AuthScheme>
<android.location.Location: float distanceTo(android.location.Location)>:<public>:<android.location.Location:android.os.Parcelable>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>:<public synchronized>:<android.webkit.WebSettings>
<android.content.ContentQueryMap: void <init>(android.database.Cursor,java.lang.String,boolean,android.os.Handler)>:<public>:<android.content.ContentQueryMap:java.util.Observable>
<android.app.TimePickerDialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<org.apache.http.entity.ContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>:<public abstract>:<org.apache.http.entity.ContentLengthStrategy>
<android.database.sqlite.SQLiteTransactionListener: void onRollback()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.widget.AutoCompleteTextView: void dismissDropDown()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>:<public>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<org.apache.commons.logging.Log: void error(java.lang.Object)>:<public abstract>:<org.apache.commons.logging.Log>
<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.app.SearchableInfo: java.lang.String getSuggestPackage()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelection(java.lang.String,java.lang.String[])>:<public>:<android.content.ContentProviderOperation.Builder>
<android.net.sip.SipAudioCall: boolean isInCall()>:<public>:<android.net.sip.SipAudioCall>
<android.util.Patterns: void <clinit>()>:<static>:<android.util.Patterns>
<org.xmlpull.v1.XmlPullParser: int nextTag()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.TextView: void onSelectionChanged(int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.util.StringBuilderPrinter: void println(java.lang.String)>:<public>:<android.util.StringBuilderPrinter:android.util.Printer>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>:<public>:<android.inputmethodservice.Keyboard>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>:<public>:<android.view.animation.Transformation>
<android.widget.LinearLayout: void setWeightSum(float)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>:<public>:<android.media.MediaPlayer>
<android.graphics.Region: boolean contains(int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.hardware.Camera.Parameters: boolean isZoomSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public abstract>:<android.text.TextWatcher:android.text.NoCopySpan>
<android.app.Notification: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.widget.VideoView: int getDuration()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.widget.ExpandableListView: long getSelectedPosition()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromAsset(android.renderscript.RenderScript,android.content.res.AssetManager,java.lang.String)>:<public static>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.os.Binder: long clearCallingIdentity()>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.media.audiofx.Equalizer: void setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.content.ContextWrapper: java.io.File getFilesDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.animation.ValueAnimator: void setFrameDelay(long)>:<public static>:<android.animation.ValueAnimator:android.animation.Animator>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.text.SpannableStringBuilder: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)>:<public volatile>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>:<public final>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.inputmethodservice.KeyboardView: void onMeasure(int,int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.nfc.tech.NdefFormatable: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.view.GestureDetector.OnGestureListener: void onLongPress(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.text.method.MovementMethod: boolean canSelectArbitrarily()>:<public abstract>:<android.text.method.MovementMethod>
<android.renderscript.Script: void setVar(int,float)>:<public>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.text.LoginFilter.PasswordFilterGMail: void <init>()>:<public>:<android.text.LoginFilter.PasswordFilterGMail:android.text.LoginFilter>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.Path: boolean isRect(android.graphics.RectF)>:<public>:<android.graphics.Path>
<android.widget.HeaderViewListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.media.RingtoneManager: void <init>(android.content.Context)>:<public>:<android.media.RingtoneManager>
<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>:<public static final>:<android.provider.Browser>
<android.content.pm.PackageManager: boolean isSafeMode()>:<public abstract>:<android.content.pm.PackageManager>
<android.gesture.GestureStroke: android.graphics.Path getPath()>:<public>:<android.gesture.GestureStroke>
<android.os.ConditionVariable: void open()>:<public>:<android.os.ConditionVariable>
<android.widget.HorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.SearchView: void setOnSearchClickListener(android.view.View.OnClickListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.Preference: android.preference.Preference.OnPreferenceClickListener getOnPreferenceClickListener()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>:<protected>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.preference.MultiSelectListPreference: void setEntries(java.lang.CharSequence[])>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.widget.ExpandableListAdapter: long getCombinedChildId(long,long)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.content.SyncAdapterType: int describeContents()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.ColorDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short2)>:<public>:<android.renderscript.FieldPacker>
<android.app.Notification.Builder: android.app.Notification.Builder setWhen(long)>:<public>:<android.app.Notification.Builder>
<android.graphics.Path: void transform(android.graphics.Matrix)>:<public>:<android.graphics.Path>
<android.content.pm.LabeledIntent: int getLabelResource()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void handleLostEntry(org.apache.http.conn.routing.HttpRoute)>:<protected abstract>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<org.apache.http.impl.DefaultConnectionReuseStrategy: org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator)>:<protected>:<org.apache.http.impl.DefaultConnectionReuseStrategy:org.apache.http.ConnectionReuseStrategy>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getExitFadeDuration()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>:<public>:<android.speech.tts.TextToSpeech>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Path.Direction: android.graphics.Path.Direction[] values()>:<public static>:<android.graphics.Path.Direction:java.lang.Enum>
<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.util.EventLogTags: android.util.EventLogTags.Description get(int)>:<public>:<android.util.EventLogTags>
<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>:<public>:<android.view.ViewTreeObserver>
<android.text.AlteredCharSequence: void getChars(int,int,char[],int)>:<public>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.renderscript.ProgramVertexFixedFunction.Constants: void destroy()>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.text.Editable: android.text.Editable delete(int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<org.apache.http.message.LineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.LineParser>
<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.app.backup.BackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public abstract>:<android.app.backup.BackupHelper>
<android.graphics.Path: void quadTo(float,float,float,float)>:<public>:<android.graphics.Path>
<android.widget.TextSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Mesh: int getPrimitiveCount()>:<public>:<android.renderscript.Mesh:android.renderscript.BaseObj>
<android.view.MotionEvent: int getFlags()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.params.HttpProtocolParams: void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.preference.Preference: long getPersistedLong(long)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.util.SparseBooleanArray: boolean get(int,boolean)>:<public>:<android.util.SparseBooleanArray>
<android.database.sqlite.SQLiteCursorDriver: void cursorDeactivated()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>:<public final>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.widget.RemoteViews: void <clinit>()>:<static>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter()>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.os.Vibrator: void vibrate(long)>:<public>:<android.os.Vibrator>
<org.apache.http.impl.conn.DefaultClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.text.method.ArrowKeyMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>:<public>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.KeyCharacterMap.KeyData: void <init>()>:<public>:<android.view.KeyCharacterMap.KeyData>
<org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()>:<public>:<org.apache.http.impl.cookie.AbstractCookieAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.bluetooth.BluetoothAdapter: void <init>()>:<>:<android.bluetooth.BluetoothAdapter>
<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.media.AudioManager: int getRouting(int)>:<public>:<android.media.AudioManager>
<org.xmlpull.v1.sax2.Driver: void setFeature(java.lang.String,boolean)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.database.sqlite.SQLiteClosable: void acquireReference()>:<public>:<android.database.sqlite.SQLiteClosable>
<android.widget.SlidingDrawer: void lock()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)>:<public static>:<org.apache.http.util.EncodingUtils>
<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings.TextSize: void <init>(java.lang.String,int)>:<private>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture createTexture(java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.net.TrafficStats: long getMobileTxPackets()>:<public static native>:<android.net.TrafficStats>
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator yBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.graphics.drawable.GradientDrawable: void setGradientType(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<junit.framework.Assert: void assertFalse(boolean)>:<public static>:<junit.framework.Assert>
<org.apache.http.impl.io.ChunkedOutputStream: void writeClosingChunk()>:<protected>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<org.apache.http.util.EntityUtils: void <init>()>:<>:<org.apache.http.util.EntityUtils>
<android.hardware.Camera.Parameters: java.lang.String getFlashMode()>:<public>:<android.hardware.Camera.Parameters>
<android.widget.NumberPicker: void onDetachedFromWindow()>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.Dialog: boolean onSearchRequested()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.database.StaleDataException: void <init>()>:<public>:<android.database.StaleDataException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.WebStorage: void getOrigins(android.webkit.ValueCallback)>:<public>:<android.webkit.WebStorage>
<android.drm.DrmUtils.ExtendedMetadataParser: void <init>()>:<>:<android.drm.DrmUtils.ExtendedMetadataParser>
<org.apache.http.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String)>:<public>:<org.apache.http.auth.AuthScope>
<android.text.style.TextAppearanceSpan: int describeContents()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>:<public>:<android.webkit.WebSettings>
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.util.EventLog.Event: int getThreadId()>:<public>:<android.util.EventLog.Event>
<android.location.Location: void setBearing(float)>:<public>:<android.location.Location:android.os.Parcelable>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.AbsListView.RecyclerListener: void onMovedToScrapHeap(android.view.View)>:<public abstract>:<android.widget.AbsListView.RecyclerListener>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>()>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.media.audiofx.Visualizer: void <init>(int)>:<public>:<android.media.audiofx.Visualizer>
<android.view.MenuItem: boolean hasSubMenu()>:<public abstract>:<android.view.MenuItem>
<android.text.style.TabStopSpan.Standard: void <init>(int)>:<public>:<android.text.style.TabStopSpan.Standard:android.text.style.TabStopSpan>
<android.widget.AutoCompleteTextView: int getListSelection()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.JetPlayer.OnJetEventListener: void onJetUserIdUpdate(android.media.JetPlayer,int,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.provider.MediaStore.Video.Media: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Video.Media:android.provider.MediaStore.Video.VideoColumns>
<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>:<public abstract>:<android.webkit.ValueCallback>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>:<public>:<android.graphics.PathMeasure>
<android.content.res.Resources.NotFoundException: void <init>()>:<public>:<android.content.res.Resources.NotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.app.DialogFragment: android.app.Dialog getDialog()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.FieldPacker: void reset(int)>:<public>:<android.renderscript.FieldPacker>
<android.nfc.tech.Ndef: java.lang.String getType()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>:<public static>:<android.webkit.MimeTypeMap>
<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>:<public static>:<org.apache.http.params.HttpConnectionParams:org.apache.http.params.CoreConnectionPNames>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>:<public>:<android.media.MediaRecorder>
<org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.StrictHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<org.apache.http.cookie.CookieSpec: org.apache.http.Header getVersionHeader()>:<public abstract>:<org.apache.http.cookie.CookieSpec>
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.conn.BasicManagedEntity: boolean streamAbort(java.io.InputStream)>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.graphics.drawable.ClipDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>:<public final native>:<android.content.res.AssetManager>
<android.widget.ViewAnimator: void <init>(android.content.Context)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.view.View: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>:<public abstract>:<android.util.AttributeSet>
<android.widget.ViewAnimator: void showPrevious()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<junit.framework.TestResult: int runCount()>:<public synchronized>:<junit.framework.TestResult>
<android.widget.AbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera.OnZoomChangeListener)>:<public final>:<android.hardware.Camera>
<android.service.wallpaper.WallpaperService.Engine: boolean isPreview()>:<public>:<android.service.wallpaper.WallpaperService.Engine>
<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.RectF: float centerY()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void assertValid(org.apache.http.conn.OperatedClientConnection)>:<protected final>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>:<public abstract>:<android.os.IBinder>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider.PipeDataWriter)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.inputmethodservice.InputMethodService: void sendKeyChar(char)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.Intent: android.content.ComponentName getComponent()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.util.SparseIntArray: int valueAt(int)>:<public>:<android.util.SparseIntArray>
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>:<public>:<android.inputmethodservice.Keyboard>
<android.widget.ViewFlipper: void startFlipping()>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: void addPackageToPreferred(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.TouchUtils: void dragViewToBottom(android.test.InstrumentationTestCase,android.app.Activity,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.view.Menu: boolean hasVisibleItems()>:<public abstract>:<android.view.Menu>
<android.graphics.Typeface: void <init>()>:<>:<android.graphics.Typeface>
<org.apache.http.impl.HttpConnectionMetricsImpl: void <init>(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics)>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.util.JsonWriter: void flush()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.text.format.Time: void <init>(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.widget.StackView: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>:<public>:<android.net.LocalServerSocket>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<junit.framework.Assert: void assertEquals(long,long)>:<public static>:<junit.framework.Assert>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<org.apache.http.impl.cookie.NetscapeDraftSpec: java.util.List formatCookies(java.util.List)>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.hardware.Camera.Parameters: java.util.List getSupportedWhiteBalance()>:<public>:<android.hardware.Camera.Parameters>
<android.location.Criteria: void <init>()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.net.http.SslCertificate.DName: java.lang.String getDName()>:<public>:<android.net.http.SslCertificate.DName>
<android.animation.Animator.AnimatorListener: void onAnimationEnd(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.location.GpsSatellite: float getSnr()>:<public>:<android.location.GpsSatellite>
<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>:<public final>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(int)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.location.Geocoder: void <init>(android.content.Context,java.util.Locale)>:<public>:<android.location.Geocoder>
<org.apache.http.conn.HttpHostConnectException: void <init>(org.apache.http.HttpHost,java.net.ConnectException)>:<public>:<org.apache.http.conn.HttpHostConnectException:java.net.ConnectException,java.net.SocketException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.nfc.NfcAdapter: boolean isEnabled()>:<public>:<android.nfc.NfcAdapter>
<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.text.style.URLSpan: void <init>(java.lang.String)>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<org.apache.http.message.AbstractHttpMessage: void <init>()>:<protected>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.net.Credentials: int getUid()>:<public>:<android.net.Credentials>
<org.apache.http.util.CharArrayBuffer: int length()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.widget.Checkable: boolean isChecked()>:<public abstract>:<android.widget.Checkable>
<android.renderscript.Type.CubemapFace: void <init>(java.lang.String,int)>:<private>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: int read()>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.app.DialogFragment: void onStop()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.KeyEvent: int normalizeMetaState(int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.AdapterViewAnimator: void fyiWillBeAdvancedByHostKThx()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.os.Debug: int getThreadAllocSize()>:<public static>:<android.os.Debug>
<android.text.format.DateUtils: java.lang.String getAMPMString(int)>:<public static>:<android.text.format.DateUtils>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.ActionBar: int getHeight()>:<public abstract>:<android.app.ActionBar>
<android.webkit.WebView: int findAll(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.media.SoundPool: int play(int,float,float,int,int,float)>:<public final native>:<android.media.SoundPool>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.inputmethod.InputMethodSubtype: int getNameResId()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<org.apache.http.impl.SocketHttpClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.util.JsonReader: void <init>(java.io.Reader)>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.util.JsonReader: int nextInt()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.view.ViewGroup: void layout(int,int,int,int)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.text.SpannableStringInternal: void <init>()>:<>:<android.text.SpannableStringInternal>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollEnded()>:<public abstract>:<android.widget.SlidingDrawer.OnDrawerScrollListener>
<android.widget.SimpleAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.content.SyncResult: boolean hasHardError()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.graphics.Matrix: boolean postRotate(float)>:<public>:<android.graphics.Matrix>
<android.widget.Toast: void setDuration(int)>:<public>:<android.widget.Toast>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<org.apache.http.auth.AuthSchemeFactory: org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.auth.AuthSchemeFactory>
<android.content.res.TypedArray: boolean hasValue(int)>:<public>:<android.content.res.TypedArray>
<android.database.MatrixCursor: int getCount()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.widget.AbsSpinner: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Paint: android.graphics.Paint.Cap getStrokeCap()>:<public>:<android.graphics.Paint>
<android.graphics.Region: int describeContents()>:<public>:<android.graphics.Region:android.os.Parcelable>
<dalvik.system.DexFile: void close()>:<public>:<dalvik.system.DexFile>
<org.json.JSONTokener: void back()>:<public>:<org.json.JSONTokener>
<android.view.InputDevice.MotionRange: float getFuzz()>:<public>:<android.view.InputDevice.MotionRange>
<android.media.AudioRecord: int setNotificationMarkerPosition(int)>:<public>:<android.media.AudioRecord>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.widget.AbsListView: void dispatchSetPressed(boolean)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.view.ViewGroup: void addView(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.drm.DrmStore.Playback: void <init>()>:<public>:<android.drm.DrmStore.Playback>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.renderscript.ProgramRaster: void setName(java.lang.String)>:<public volatile>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>:<public static synchronized>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.app.ListFragment: void onActivityCreated(android.os.Bundle)>:<public>:<android.app.ListFragment:android.app.Fragment>
<org.xmlpull.v1.XmlSerializer: boolean getFeature(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.RenderPriority:java.lang.Enum>
<android.graphics.Region: boolean set(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.content.ComponentName: java.lang.String getClassName()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.view.inputmethod.CompletionInfo: int describeContents()>:<public>:<android.view.inputmethod.CompletionInfo:android.os.Parcelable>
<android.widget.RemoteViewsService.RemoteViewsFactory: boolean hasStableIds()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<org.apache.http.conn.ClientConnectionManager: void closeIdleConnections(long,java.util.concurrent.TimeUnit)>:<public abstract>:<org.apache.http.conn.ClientConnectionManager>
<android.view.View: java.lang.Object getTag()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelectionBackReference(int,int)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>:<public>:<android.webkit.WebSettings>
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>:<public abstract>:<android.content.pm.PackageManager>
<android.view.ViewGroup: void removeAllViewsInLayout()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.audiofx.PresetReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.PresetReverb,int,int,short)>:<public abstract>:<android.media.audiofx.PresetReverb.OnParameterChangeListener>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.nfc.NfcAdapter: void <init>()>:<>:<android.nfc.NfcAdapter>
<org.apache.http.entity.ByteArrayEntity: boolean isStreaming()>:<public>:<org.apache.http.entity.ByteArrayEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>:<protected>:<android.view.LayoutInflater>
<android.text.style.StrikethroughSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int)>:<public static>:<android.media.ThumbnailUtils>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDestroy()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.AlertDialog.Builder: android.content.Context getContext()>:<public>:<android.app.AlertDialog.Builder>
<android.app.DialogFragment: int show(android.app.FragmentTransaction,java.lang.String)>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.View: void onAnimationEnd()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.preference.PreferenceFragment: void onStop()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.content.Intent: android.content.Intent setFlags(int)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.content.ClipData.Item: android.content.Intent getIntent()>:<public>:<android.content.ClipData.Item>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.test.mock.MockResources: android.content.res.XmlResourceParser getXml(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<org.apache.http.params.HttpProtocolParamBean: void setHttpElementCharset(java.lang.String)>:<public>:<org.apache.http.params.HttpProtocolParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.test.mock.MockResources: int getInteger(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.test.IsolatedContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.BoringLayout: int getEllipsizedWidth()>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.speech.SpeechRecognizer: void destroy()>:<public>:<android.speech.SpeechRecognizer>
<android.renderscript.Allocation: void copyFrom(float[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.provider.MediaStore.Audio.Media: void <init>()>:<public>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<android.util.SparseArray: void clear()>:<public>:<android.util.SparseArray>
<org.apache.http.impl.conn.DefaultClientConnection: void <init>()>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.text.method.QwertyKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>:<public>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.apache.http.client.AuthenticationHandler: org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.AuthenticationHandler>
<android.graphics.Paint: float getStrokeWidth()>:<public native>:<android.graphics.Paint>
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.DatePicker: void <init>(android.content.Context)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.location.Address: java.lang.String getLocality()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.view.accessibility.AccessibilityEvent: int getEventType()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.webkit.WebSettings: void setAllowFileAccess(boolean)>:<public>:<android.webkit.WebSettings>
<android.preference.PreferenceFragment: void onSaveInstanceState(android.os.Bundle)>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyLog()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.renderscript.Script: void destroy()>:<public volatile>:<android.renderscript.Script:android.renderscript.BaseObj>
<org.apache.http.client.protocol.ClientContextConfigurer: void setCredentialsProvider(org.apache.http.client.CredentialsProvider)>:<public>:<org.apache.http.client.protocol.ClientContextConfigurer:org.apache.http.client.protocol.ClientContext>
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<org.apache.http.entity.InputStreamEntity: void <init>(java.io.InputStream,long)>:<public>:<org.apache.http.entity.InputStreamEntity:org.apache.http.entity.AbstractHttpEntity>
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.webkit.URLUtil: boolean isJavaScriptUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.message.BasicHeaderElement: java.lang.Object clone()>:<public>:<org.apache.http.message.BasicHeaderElement:org.apache.http.HeaderElement,java.lang.Cloneable>
<android.opengl.GLES10: void glFogf(int,float)>:<public static native>:<android.opengl.GLES10>
<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.app.ActionBar: android.app.ActionBar.Tab getSelectedTab()>:<public abstract>:<android.app.ActionBar>
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.widget.AutoCompleteTextView: int getDropDownWidth()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ListPopupWindow>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator>
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>:<public static>:<android.media.ThumbnailUtils>
<android.app.ActivityManager.MemoryInfo: int describeContents()>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>:<public>:<android.webkit.WebIconDatabase>
<android.view.ScaleGestureDetector: float getFocusY()>:<public>:<android.view.ScaleGestureDetector>
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>:<public static>:<android.nfc.NfcAdapter>
<android.graphics.drawable.RotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.impl.auth.AuthSchemeBase: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>:<protected abstract>:<org.apache.http.impl.auth.AuthSchemeBase:org.apache.http.auth.AuthScheme>
<org.apache.http.conn.util.InetAddressUtils: boolean isIPv6HexCompressedAddress(java.lang.String)>:<public static>:<org.apache.http.conn.util.InetAddressUtils>
<android.view.KeyEvent: int getMaxKeyCode()>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.graphics.Rect: void sort()>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.net.sip.SipSession.Listener: void onRingingBack(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<org.apache.http.entity.StringEntity: long getContentLength()>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.graphics.drawable.RotateDrawable: boolean isStateful()>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.media.AudioTrack: float getMinVolume()>:<public static>:<android.media.AudioTrack>
<android.graphics.Bitmap.CompressFormat: void <init>(java.lang.String,int)>:<private>:<android.graphics.Bitmap.CompressFormat:java.lang.Enum>
<android.app.ActionBar: void setDisplayShowCustomEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<android.view.View: void dispatchSetPressed(boolean)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.ViewAsserts: void assertVerticalCenterAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.view.KeyEvent: int getScanCode()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.app.backup.BackupDataInput: java.lang.String getKey()>:<public>:<android.app.backup.BackupDataInput>
<android.os.StrictMode: void <init>()>:<>:<android.os.StrictMode>
<android.content.ContentProviderResult: void <clinit>()>:<static>:<android.content.ContentProviderResult:android.os.Parcelable>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>:<public static>:<android.app.PendingIntent:android.os.Parcelable>
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.graphics.Picture: void endRecording()>:<public>:<android.graphics.Picture>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.BroadcastReceiver.PendingResult: void setResultCode(int)>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.widget.OverScroller: boolean computeScrollOffset()>:<public>:<android.widget.OverScroller>
<android.os.Parcel: void writeString(java.lang.String)>:<public final native>:<android.os.Parcel>
<android.webkit.CookieManager: boolean acceptCookie()>:<public synchronized>:<android.webkit.CookieManager>
<org.apache.http.impl.client.AbstractHttpClient: void addRequestInterceptor(org.apache.http.HttpRequestInterceptor)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Matrix.ScaleToFit: void <init>(java.lang.String,int)>:<private>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.animation.ValueAnimator: java.lang.Object clone()>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.animation.AnimatorSet: void setupEndValues()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.app.ExpandableListActivity: void onContentChanged()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.location.Location: java.lang.String toString()>:<public>:<android.location.Location:android.os.Parcelable>
<android.media.MediaRecorder: void setAudioSamplingRate(int)>:<public>:<android.media.MediaRecorder>
<org.apache.http.impl.auth.DigestScheme: boolean isConnectionBased()>:<public>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.content.Intent: java.lang.String getDataString()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.content.IntentFilter: void addCategory(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.TextView: void setTextSize(int,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.bluetooth.BluetoothClass: void <clinit>()>:<static>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<android.os.SystemClock: long uptimeMillis()>:<public static native>:<android.os.SystemClock>
<android.hardware.Camera.Parameters: float getFocalLength()>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.message.HeaderGroup: java.lang.Object clone()>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>:<protected>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.test.mock.MockResources: void <init>()>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.Toast: void setGravity(int,int,int)>:<public>:<android.widget.Toast>
<android.content.pm.Signature: int describeContents()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.util.TypedValue: void setTo(android.util.TypedValue)>:<public>:<android.util.TypedValue>
<android.widget.TextView.SavedState: java.lang.String toString()>:<public>:<android.widget.TextView.SavedState:android.view.View.BaseSavedState,android.view.AbsSavedState>
<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>:<public abstract>:<android.view.MenuItem>
<android.content.BroadcastReceiver.PendingResult: void clearAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>:<public static>:<android.graphics.Bitmap:android.os.Parcelable>
<android.renderscript.ProgramRaster.CullMode: void <clinit>()>:<static>:<android.renderscript.ProgramRaster.CullMode:java.lang.Enum>
<android.nfc.tech.NfcA: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.graphics.drawable.Drawable: void setDither(boolean)>:<public>:<android.graphics.drawable.Drawable>
<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.text.Layout: float getLineWidth(int)>:<public>:<android.text.Layout>
<android.widget.CursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>:<protected abstract>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType[] values()>:<public static>:<android.widget.ImageView.ScaleType:java.lang.Enum>
<android.net.Uri: java.util.Set getQueryParameterNames()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.view.VelocityTracker: float getXVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.os.Process: void killProcess(int)>:<public static final>:<android.os.Process>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>:<public synchronized>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.content.Intent: int describeContents()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<org.apache.http.entity.AbstractHttpEntity: void setChunked(boolean)>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>:<public>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>:<protected>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.graphics.drawable.ScaleDrawable: int getOpacity()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>:<protected>:<android.appwidget.AppWidgetHost>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.app.ActionBar: java.lang.CharSequence getTitle()>:<public abstract>:<android.app.ActionBar>
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void <init>(org.apache.http.conn.scheme.SchemeRegistry)>:<public>:<org.apache.http.impl.conn.DefaultClientConnectionOperator:org.apache.http.conn.ClientConnectionOperator>
<android.opengl.GLES10: int glGetError()>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>:<public synchronized>:<android.database.sqlite.SQLiteOpenHelper>
<android.content.Loader: java.lang.String toString()>:<public>:<android.content.Loader>
<android.renderscript.RSDriverException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSDriverException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.NumberPicker: int getSolidColor()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.animation.AnimatorSet: boolean isRunning()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<android.media.AudioTrack: int setPlaybackRate(int)>:<public>:<android.media.AudioTrack>
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.app.ActionBar.LayoutParams: void <init>(int,int,int)>:<public>:<android.app.ActionBar.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.nfc.tech.NfcB: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener)>:<public>:<android.graphics.SurfaceTexture>
<android.hardware.Camera.Parameters: float getExposureCompensationStep()>:<public>:<android.hardware.Camera.Parameters>
<android.test.mock.MockPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.xmlpull.v1.XmlPullParser: int getColumnNumber()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.os.ParcelFileDescriptor: int detachFd()>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.drm.DrmInfoRequest: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmInfoRequest>
<android.graphics.Matrix: boolean rectStaysRect()>:<public>:<android.graphics.Matrix>
<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>:<public>:<android.graphics.Path>
<android.widget.AbsListView: boolean isFastScrollAlwaysVisible()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.drm.DrmInfo: java.util.Iterator keyIterator()>:<public>:<android.drm.DrmInfo>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>:<public>:<android.view.ViewPropertyAnimator>
<android.widget.ListPopupWindow: android.widget.ListView getListView()>:<public>:<android.widget.ListPopupWindow>
<android.widget.ListView: void setDividerHeight(int)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Window.Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.content.Context: void setTheme(int)>:<public abstract>:<android.content.Context>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ImageButton:android.widget.ImageView,android.view.View>
<android.widget.TextView: void setInputType(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.ImageView: void setBaseline(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.view.SurfaceHolder.Callback: void surfaceDestroyed(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.provider.ContactsContract.StatusUpdates: void <init>()>:<>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.widget.Spinner: void setGravity(int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.provider.ContactsContract.Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>:<public static>:<android.provider.ContactsContract.Contacts:android.provider.BaseColumns,android.provider.ContactsContract.ContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.ContactStatusColumns>
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>:<public>:<android.util.TypedValue>
<android.graphics.Paint.FontMetricsInt: java.lang.String toString()>:<public>:<android.graphics.Paint.FontMetricsInt>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateInterpolator:android.view.animation.Interpolator>
<android.view.Window: void closePanel(int)>:<public abstract>:<android.view.Window>
<android.animation.Animator: void <init>()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLES10: void glFrontFace(int)>:<public static native>:<android.opengl.GLES10>
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.view.View.MeasureSpec: int getMode(int)>:<public static>:<android.view.View.MeasureSpec>
<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>:<public abstract>:<android.text.SpanWatcher:android.text.NoCopySpan>
<android.view.ViewConfiguration: int getTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.text.Editable: android.text.Editable append(char)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentValues: int describeContents()>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.net.wifi.WifiManager.MulticastLock: java.lang.String toString()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>:<public native>:<android.graphics.Canvas>
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>:<public>:<android.webkit.WebViewClient>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDescription(java.lang.CharSequence)>:<public>:<android.app.DownloadManager.Request>
<android.widget.AdapterViewFlipper: void fyiWillBeAdvancedByHostKThx()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.AutoCompleteTextView: int getDropDownAnchor()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>:<public>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.media.SoundPool: void autoResume()>:<public final native>:<android.media.SoundPool>
<android.preference.DialogPreference: void setDialogTitle(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpResponseInterceptor,int)>:<public final>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.location.Criteria: boolean isAltitudeRequired()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.TextView: void setSpannableFactory(android.text.Spannable.Factory)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.ViewDebug.FlagToString: java.lang.String name()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.view.View: void bringToFront()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.nfc.tech.MifareClassic: int getType()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>:<public abstract>:<android.accounts.AbstractAccountAuthenticator>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster create()>:<public>:<android.renderscript.ProgramRaster.Builder>
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>:<public>:<android.app.KeyguardManager.KeyguardLock>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthFunc(android.renderscript.ProgramStore.DepthFunc)>:<public>:<android.renderscript.ProgramStore.Builder>
<android.preference.Preference: void setKey(java.lang.String)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.WindowManager.LayoutParams: void <init>(int,int)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.provider.Contacts.Settings: void <clinit>()>:<static>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<junit.framework.TestListener: void startTest(junit.framework.Test)>:<public abstract>:<junit.framework.TestListener>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>:<public static final>:<android.provider.Contacts.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>:<public>:<android.media.MediaPlayer>
<android.widget.BaseExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.nfc.tech.IsoDep: boolean isConnected()>:<public volatile>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<android.view.ScaleGestureDetector: float getPreviousSpanY()>:<public>:<android.view.ScaleGestureDetector>
<android.content.Intent: void <init>()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera.PreviewCallback)>:<public final>:<android.hardware.Camera>
<android.app.Activity: void closeOptionsMenu()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>:<public abstract>:<android.app.ActionBar>
<org.apache.http.auth.NTCredentials: java.lang.String getUserName()>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.graphics.Shader.TileMode: void <clinit>()>:<static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.test.IsolatedContext: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.os.PowerManager: void userActivity(long,boolean)>:<public>:<android.os.PowerManager>
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.drawable.InsetDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: float getRotationX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.View: android.os.Handler getHandler()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.MailTo: java.lang.String toString()>:<public>:<android.net.MailTo>
<android.test.ViewAsserts: void assertLeftAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.text.style.AbsoluteSizeSpan: void <init>(int,boolean)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.os.Parcel: void writeNoException()>:<public final>:<android.os.Parcel>
<android.hardware.usb.UsbDevice: int getInterfaceCount()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.test.TouchUtils: void clickView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.preference.Preference: android.view.View onCreateView(android.view.ViewGroup)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.conn.ManagedClientConnection: void markReusable()>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.net.Uri: void <init>()>:<>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpAndSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.telephony.gsm.SmsMessage: long getTimestampMillis()>:<public>:<android.telephony.gsm.SmsMessage>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>:<public>:<android.hardware.SensorManager>
<android.os.Messenger: void send(android.os.Message)>:<public>:<android.os.Messenger:android.os.Parcelable>
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>:<public>:<android.widget.ListPopupWindow>
<android.preference.Preference: void setWidgetLayoutResource(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.conn.OperatedClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.OperatedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection>
<android.animation.LayoutTransition: void <init>()>:<public>:<android.animation.LayoutTransition>
<android.text.method.DigitsKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.apache.http.impl.EnglishReasonPhraseCatalog: void <init>()>:<protected>:<org.apache.http.impl.EnglishReasonPhraseCatalog:org.apache.http.ReasonPhraseCatalog>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.client.HttpClient>
<android.content.Entity.NamedContentValues: void <init>(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.Entity.NamedContentValues>
<android.text.TextPaint: void <init>(int)>:<public>:<android.text.TextPaint:android.graphics.Paint>
<android.text.method.MetaKeyKeyListener: long adjustMetaAfterKeypress(long)>:<public static>:<android.text.method.MetaKeyKeyListener>
<android.test.InstrumentationTestCase: void <init>()>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>:<protected>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.Adapter: int getItemViewType(int)>:<public abstract>:<android.widget.Adapter>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>:<public static>:<android.view.KeyCharacterMap>
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>:<public>:<android.content.res.Resources>
<android.renderscript.Script.FieldBase: android.renderscript.Type getType()>:<public>:<android.renderscript.Script.FieldBase>
<android.content.BroadcastReceiver: java.lang.String getResultData()>:<public final>:<android.content.BroadcastReceiver>
<android.widget.MediaController.MediaPlayerControl: int getBufferPercentage()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedBy()>:<public>:<android.net.http.SslCertificate>
<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<android.media.MediaRecorder: void setVideoFrameRate(int)>:<public native>:<android.media.MediaRecorder>
<android.nfc.tech.NfcB: void connect()>:<public volatile>:<android.nfc.tech.NfcB:android.nfc.tech.BasicTagTechnology>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.hardware.SensorEventListener: void onAccuracyChanged(android.hardware.Sensor,int)>:<public abstract>:<android.hardware.SensorEventListener>
<android.telephony.SignalStrength: java.lang.String toString()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>:<public>:<android.appwidget.AppWidgetManager>
<android.text.style.UnderlineSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.UnderlineSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.app.AlertDialog: void onCreate(android.os.Bundle)>:<protected>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.graphics.Camera: void restore()>:<public native>:<android.graphics.Camera>
<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>:<public native>:<android.media.MediaMetadataRetriever>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newAssertQuery(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.net.wifi.WifiManager.WifiLock: boolean isHeld()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.widget.AbsSeekBar: void onMeasure(int,int)>:<protected synchronized>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<org.apache.http.cookie.SetCookie2: void setCommentURL(java.lang.String)>:<public abstract>:<org.apache.http.cookie.SetCookie2:org.apache.http.cookie.SetCookie>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(int,int,int,int)>:<public>:<android.widget.AbsoluteLayout.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>:<public>:<android.webkit.WebSettings>
<android.view.View: void addFocusables(java.util.ArrayList,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.Drawable>
<android.location.Address: java.util.Locale getLocale()>:<public>:<android.location.Address:android.os.Parcelable>
<android.test.TouchUtils: void dragQuarterScreenUp(android.test.InstrumentationTestCase,android.app.Activity)>:<public static>:<android.test.TouchUtils>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.view.ScaleGestureDetector.OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.app.ActionBar: int getSelectedNavigationIndex()>:<public abstract>:<android.app.ActionBar>
<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket getSocket()>:<public final>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.widget.GridView: void layoutChildren()>:<protected>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.DhcpInfo: int describeContents()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.test.mock.MockContentProvider: java.lang.String getType(android.net.Uri)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>:<public>:<android.graphics.Canvas>
<android.os.Debug: int getThreadAllocCount()>:<public static>:<android.os.Debug>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.OrientationListener: void enable()>:<public>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.BitmapDrawable: void <init>()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.text.Layout: int getParagraphRight(int)>:<public final>:<android.text.Layout>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>:<public static>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.hardware.Camera.Parameters: int getPreviewFrameRate()>:<public>:<android.hardware.Camera.Parameters>
<android.test.ViewAsserts: void assertBottomAligned(android.view.View,android.view.View)>:<public static>:<android.test.ViewAsserts>
<android.telephony.gsm.SmsMessage: byte[] getPdu()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.app.AlertDialog.Builder: void <init>(android.content.Context,int)>:<public>:<android.app.AlertDialog.Builder>
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>:<public>:<android.view.FocusFinder>
<org.apache.http.impl.cookie.BasicClientCookie2: java.lang.String getCommentURL()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<android.app.ActivityManager.RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<org.apache.http.impl.client.AbstractHttpClient: void setRedirectHandler(org.apache.http.client.RedirectHandler)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.util.Rfc822Token: void <init>(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.os.Parcel: void writeByteArray(byte[],int,int)>:<public final>:<android.os.Parcel>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>:<public>:<android.graphics.Canvas>
<android.test.AndroidTestRunner: void setTestClassName(java.lang.String,java.lang.String)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.os.Bundle: void <init>()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.text.style.BulletSpan: int getSpanTypeId()>:<public>:<android.text.style.BulletSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.content.Intent)>:<public>:<android.widget.TabHost.TabSpec>
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentIndexSetIndex()>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.conn.params.ConnRouteParams: void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress)>:<public static>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker.Formatter)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.Window: void clearFlags(int)>:<public>:<android.view.Window>
<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.text.BoringLayout: int getParagraphDirection(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.test.mock.MockContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.database.sqlite.SQLiteStatement: long executeInsert()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>:<public>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.hardware.Camera.Parameters: java.util.List getSupportedFlashModes()>:<public>:<android.hardware.Camera.Parameters>
<android.app.WallpaperInfo: java.lang.String getPackageName()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.app.NotificationManager: void cancelAll()>:<public>:<android.app.NotificationManager>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>:<public static native>:<android.opengl.GLES10>
<android.app.ProgressDialog: void <init>(android.content.Context,int)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.Fragment: boolean isVisible()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.content.IntentFilter: boolean hasDataType(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.sax.StartElementListener: void start(org.xml.sax.Attributes)>:<public abstract>:<android.sax.StartElementListener>
<android.opengl.GLU: void <init>()>:<public>:<android.opengl.GLU>
<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.view.Window: void togglePanel(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<org.xmlpull.v1.XmlPullParserFactory: boolean isValidating()>:<public>:<org.xmlpull.v1.XmlPullParserFactory>
<android.animation.AnimatorSet: void end()>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.view.animation.Animation: boolean getFillAfter()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<org.apache.http.client.CookieStore: void clear()>:<public abstract>:<org.apache.http.client.CookieStore>
<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public final>:<android.content.ContentResolver>
<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.preference.ListPreference: void setValue(java.lang.String)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.MotionEvent: int getMetaState()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.provider.UserDictionary.Words: void <clinit>()>:<static>:<android.provider.UserDictionary.Words:android.provider.BaseColumns>
<android.telephony.gsm.SmsMessage: int getIndexOnSim()>:<public>:<android.telephony.gsm.SmsMessage>
<android.graphics.PointF: void <init>()>:<public>:<android.graphics.PointF>
<android.app.backup.RestoreObserver: void restoreFinished(int)>:<public>:<android.app.backup.RestoreObserver>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>:<public static>:<android.text.TextUtils>
<android.view.View: int[] onCreateDrawableState(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getCount()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.hardware.Camera.Parameters: java.util.List getZoomRatios()>:<public>:<android.hardware.Camera.Parameters>
<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()>:<public>:<android.content.AbstractThreadedSyncAdapter>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind valueOf(java.lang.String)>:<public static>:<android.renderscript.Element.DataKind:java.lang.Enum>
<junit.framework.Assert: void assertNotNull(java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.nfc.tech.Ndef: void writeNdefMessage(android.nfc.NdefMessage)>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.view.View: boolean requestFocus(int,android.graphics.Rect)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.BaseKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)>:<public>:<junit.framework.TestResult>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.renderscript.Matrix3f: void loadScale(float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.sax.Element: android.sax.Element getChild(java.lang.String)>:<public>:<android.sax.Element>
<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.AbsListView: void setMultiChoiceModeListener(android.widget.AbsListView.MultiChoiceModeListener)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.AbsListView: boolean isInFilterMode()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.Uri.Builder: android.net.Uri.Builder scheme(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.widget.ImageSwitcher: void <init>(android.content.Context)>:<public>:<android.widget.ImageSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>:<public>:<android.accounts.AccountManager>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.database.CursorWindow: boolean isBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.TextView: void onEndBatchEdit()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)>:<public static>:<android.media.CameraProfile>
<android.widget.SimpleAdapter: void setViewBinder(android.widget.SimpleAdapter.ViewBinder)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.view.KeyEvent: int getAction()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.media.JetPlayer.OnJetEventListener: void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.graphics.Rect: void union(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<org.apache.http.auth.AUTH: void <init>()>:<>:<org.apache.http.auth.AUTH>
<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<org.apache.http.util.CharArrayBuffer: void setLength(int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.widget.AbsListView: void onRemoteAdapterDisconnected()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.provider.MediaStore.Audio.Artists.Albums: android.net.Uri getContentUri(java.lang.String,long)>:<public static final>:<android.provider.MediaStore.Audio.Artists.Albums:android.provider.MediaStore.Audio.AlbumColumns>
<android.preference.PreferenceGroup: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.DefaultHttpRequestFactory: org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String)>:<public>:<org.apache.http.impl.DefaultHttpRequestFactory:org.apache.http.HttpRequestFactory>
<android.graphics.Canvas: int save(int)>:<public native>:<android.graphics.Canvas>
<android.webkit.WebIconDatabase.IconListener: void onReceivedIcon(java.lang.String,android.graphics.Bitmap)>:<public abstract>:<android.webkit.WebIconDatabase.IconListener>
<android.database.AbstractCursor: boolean isAfterLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.lang.String)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.Path.FillType: android.graphics.Path.FillType valueOf(java.lang.String)>:<public static>:<android.graphics.Path.FillType:java.lang.Enum>
<android.media.audiofx.EnvironmentalReverb: void setDensity(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>:<public>:<android.content.res.Resources.Theme>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)>:<public>:<android.widget.PopupWindow>
<org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>:<public final>:<org.apache.http.conn.ssl.AbstractVerifier:org.apache.http.conn.ssl.X509HostnameVerifier>
<android.animation.ValueAnimator: java.lang.String toString()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.hardware.Camera.Parameters: void setSceneMode(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>:<public static native>:<android.graphics.NinePatch>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(java.lang.CharSequence)>:<public>:<android.app.AlertDialog.Builder>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.ColorMatrix: void <init>(float[])>:<public>:<android.graphics.ColorMatrix>
<android.app.Fragment: android.app.FragmentManager getFragmentManager()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.database.AbstractCursor: boolean isBeforeFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>:<public final>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.GestureDetector.OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentType()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile.ServiceListener,int)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.graphics.drawable.PictureDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.test.MoreAsserts: void assertNotEqual(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<android.test.MoreAsserts>
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>:<public>:<android.graphics.Paint>
<android.app.Fragment: android.content.res.Resources getResources()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>:<public>:<android.graphics.drawable.TransitionDrawable:android.graphics.drawable.LayerDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.util.ByteArrayBuffer: boolean isEmpty()>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.media.AudioManager: void setRingerMode(int)>:<public>:<android.media.AudioManager>
<org.apache.http.impl.auth.DigestScheme: java.lang.String getSchemeName()>:<public>:<org.apache.http.impl.auth.DigestScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.view.MotionEvent: float getY(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<org.apache.http.HttpMessage: void setHeaders(org.apache.http.Header[])>:<public abstract>:<org.apache.http.HttpMessage>
<org.apache.http.auth.NTUserPrincipal: java.lang.String getDomain()>:<public>:<org.apache.http.auth.NTUserPrincipal:java.security.Principal>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.view.View: void offsetLeftAndRight(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.xmlpull.v1.XmlPullParserFactory: void <init>()>:<protected>:<org.xmlpull.v1.XmlPullParserFactory>
<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.util.DisplayMetrics: java.lang.String toString()>:<public>:<android.util.DisplayMetrics>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>:<public>:<android.graphics.Interpolator>
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<org.apache.http.message.BasicHeaderValueFormatter: int estimateParametersLen(org.apache.http.NameValuePair[])>:<protected>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.app.WallpaperInfo: java.lang.String getServiceName()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<org.apache.http.message.BasicHeaderValueFormatter: int estimateElementsLen(org.apache.http.HeaderElement[])>:<protected>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<org.apache.commons.logging.Log: void info(java.lang.Object)>:<public abstract>:<org.apache.commons.logging.Log>
<android.app.Instrumentation: void finish(int,android.os.Bundle)>:<public>:<android.app.Instrumentation>
<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>:<public abstract>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.io.HttpMessageWriter: void write(org.apache.http.HttpMessage)>:<public abstract>:<org.apache.http.io.HttpMessageWriter>
<android.os.Parcel: void writeList(java.util.List)>:<public final>:<android.os.Parcel>
<android.widget.AbsListView: int computeVerticalScrollRange()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.style.RelativeSizeSpan: void <init>(float)>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.pm.PackageItemInfo.DisplayNameComparator: int compare(java.lang.Object,java.lang.Object)>:<public volatile>:<android.content.pm.PackageItemInfo.DisplayNameComparator:java.util.Comparator>
<org.apache.http.impl.client.BasicCredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)>:<public synchronized>:<org.apache.http.impl.client.BasicCredentialsProvider:org.apache.http.client.CredentialsProvider>
<android.preference.CheckBoxPreference: void setSummaryOn(int)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.R.bool: void <init>()>:<public>:<android.R.bool>
<android.content.res.Resources: float getDimension(int)>:<public>:<android.content.res.Resources>
<org.apache.http.conn.ManagedClientConnection: java.lang.Object getState()>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>:<public>:<android.speech.tts.TextToSpeech>
<android.widget.ProgressBar: void drawableStateChanged()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Camera: float dotWithNormal(float,float,float)>:<public native>:<android.graphics.Camera>
<android.os.Debug: int getGlobalGcInvocationCount()>:<public static>:<android.os.Debug>
<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.DialogFragment: boolean getShowsDialog()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.app.ActionBar: void setSubtitle(int)>:<public abstract>:<android.app.ActionBar>
<org.apache.http.HeaderElement: int getParameterCount()>:<public abstract>:<org.apache.http.HeaderElement>
<android.webkit.WebSettings: boolean getPluginsEnabled()>:<public synchronized>:<android.webkit.WebSettings>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>:<public>:<android.graphics.Matrix>
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String,java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: void <init>()>:<public>:<org.apache.http.impl.client.DefaultProxyAuthenticationHandler:org.apache.http.impl.client.AbstractAuthenticationHandler>
<android.net.wifi.WifiManager: boolean disableNetwork(int)>:<public>:<android.net.wifi.WifiManager>
<android.os.IBinder: boolean pingBinder()>:<public abstract>:<android.os.IBinder>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLDebugHelper: javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>:<protected>:<android.view.ContextThemeWrapper:android.content.ContextWrapper,android.content.Context>
<android.widget.ViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.ProgramRaster: void destroy()>:<public volatile>:<android.renderscript.ProgramRaster:android.renderscript.BaseObj>
<android.util.AndroidException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<android.database.CursorWindow: int describeContents()>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.RelativeLayout: android.widget.RelativeLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.widget.DatePicker: void setMinDate(long)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.Interpolator.Result: void <clinit>()>:<static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<junit.framework.TestCase: void runBare()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<org.apache.http.util.CharArrayBuffer: void append(char)>:<public>:<org.apache.http.util.CharArrayBuffer>
<org.apache.http.impl.io.ContentLengthInputStream: void close()>:<public>:<org.apache.http.impl.io.ContentLengthInputStream:java.io.InputStream>
<android.database.Cursor: java.lang.String[] getColumnNames()>:<public abstract>:<android.database.Cursor>
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)>:<public>:<org.apache.http.protocol.DefaultedHttpContext:org.apache.http.protocol.HttpContext>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace valueOf(java.lang.String)>:<public static>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.view.KeyEvent: boolean isCtrlPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.HttpClientConnection: boolean isResponseAvailable(int)>:<public abstract>:<org.apache.http.HttpClientConnection:org.apache.http.HttpConnection>
<android.view.Surface: void setPosition(int,int)>:<public native>:<android.view.Surface:android.os.Parcelable>
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>:<public>:<org.apache.http.client.methods.HttpPost:org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.widget.ListView: boolean getItemsCanFocus()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.message.BasicLineFormatter: void <init>()>:<public>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.widget.TimePicker: boolean isEnabled()>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void stopAllocCounting()>:<public>:<android.app.Instrumentation>
<android.graphics.Rasterizer: void finalize()>:<protected>:<android.graphics.Rasterizer>
<android.hardware.Camera: android.hardware.Camera.Parameters getParameters()>:<public>:<android.hardware.Camera>
<android.webkit.WebSettings: boolean getDatabaseEnabled()>:<public synchronized>:<android.webkit.WebSettings>
<android.net.sip.SipSession.Listener: void onRegistrationDone(android.net.sip.SipSession,int)>:<public>:<android.net.sip.SipSession.Listener>
<android.app.Activity: void overridePendingTransition(int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.os.Debug: int getGlobalExternalAllocSize()>:<public static>:<android.os.Debug>
<android.renderscript.AllocationAdapter: void copyFrom(short[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.widget.CompoundButton.OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>:<public abstract>:<android.widget.CompoundButton.OnCheckedChangeListener>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>:<public static>:<android.util.TypedValue>
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>:<public>:<android.preference.PreferenceManager>
<android.database.CursorWrapper: boolean moveToFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.apache.http.params.BasicHttpParams: boolean removeParameter(java.lang.String)>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.hardware.Camera: void unlock()>:<public final native>:<android.hardware.Camera>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>:<public>:<android.widget.ListPopupWindow>
<android.location.Address: void clearLatitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.ZoomControls: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: android.app.LoaderManager getLoaderManager()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.preference.PreferenceFragment: void <init>()>:<public>:<android.preference.PreferenceFragment:android.app.Fragment>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmRights>
<android.graphics.ColorFilter: void <init>()>:<public>:<android.graphics.ColorFilter>
<android.widget.ViewSwitcher: void <init>(android.content.Context)>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.util.LruCache: int size()>:<public final synchronized>:<android.util.LruCache>
<android.widget.NumberPicker: void onDraw(android.graphics.Canvas)>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.ListPreference: java.lang.CharSequence getSummary()>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.MotionEvent.PointerCoords: void <init>(android.view.MotionEvent.PointerCoords)>:<public>:<android.view.MotionEvent.PointerCoords>
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.app.LauncherActivity: void setTitle(int)>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>:<protected>:<android.accounts.AccountAuthenticatorActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.opengl.GLES20: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES20>
<android.os.Debug: int getGlobalExternalFreedCount()>:<public static>:<android.os.Debug>
<android.renderscript.Type: int getX()>:<public>:<android.renderscript.Type:android.renderscript.BaseObj>
<android.accessibilityservice.AccessibilityService: void onServiceConnected()>:<protected>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<junit.framework.TestFailure: java.lang.Throwable thrownException()>:<public>:<junit.framework.TestFailure>
<org.apache.http.util.VersionInfo: java.lang.String getPackage()>:<public final>:<org.apache.http.util.VersionInfo>
<android.text.Layout.Alignment: void <init>(java.lang.String,int)>:<private>:<android.text.Layout.Alignment:java.lang.Enum>
<android.os.Debug: void resetGlobalFreedCount()>:<public static>:<android.os.Debug>
<android.nfc.tech.Ndef: boolean canMakeReadOnly()>:<public>:<android.nfc.tech.Ndef:android.nfc.tech.BasicTagTechnology>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap)>:<public>:<android.text.style.IconMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<android.view.View: boolean isFocusableInTouchMode()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsSeekBar: void drawableStateChanged()>:<protected>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>:<public static>:<android.opengl.Matrix>
<org.apache.http.impl.client.ClientParamsStack: void <init>(org.apache.http.impl.client.ClientParamsStack)>:<public>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.os.ParcelUuid: boolean equals(java.lang.Object)>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.net.sip.SipSession.Listener: void onRegistering(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.Adapter: long getItemId(int)>:<public abstract>:<android.widget.Adapter>
<android.renderscript.Font: void destroy()>:<public volatile>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int3)>:<public>:<android.renderscript.FieldPacker>
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)>:<protected>:<android.view.animation.LayoutAnimationController>
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.RingtoneManager: void stopPreviousRingtone()>:<public>:<android.media.RingtoneManager>
<android.test.PerformanceTestCase: int startPerformance(android.test.PerformanceTestCase.Intermediates)>:<public abstract>:<android.test.PerformanceTestCase>
<android.widget.AbsListView: boolean isPaddingOffsetRequired()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>:<public>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.message.BasicHttpRequest:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpRequest>
<android.content.res.AssetManager.AssetInputStream: boolean markSupported()>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.opengl.GLES20: void glActiveTexture(int)>:<public static native>:<android.opengl.GLES20>
<android.text.TextUtils.SimpleStringSplitter: java.lang.String next()>:<public>:<android.text.TextUtils.SimpleStringSplitter:android.text.TextUtils.StringSplitter,java.util.Iterator>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ImageView:android.view.View>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View)>:<public>:<android.animation.LayoutTransition>
<org.apache.http.util.VersionInfo: java.lang.String toString()>:<public>:<org.apache.http.util.VersionInfo>
<android.os.ParcelUuid: void <clinit>()>:<static>:<android.os.ParcelUuid:android.os.Parcelable>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.graphics.drawable.GradientDrawable.Orientation: void <clinit>()>:<static>:<android.graphics.drawable.GradientDrawable.Orientation:java.lang.Enum>
<android.text.Selection: void selectAll(android.text.Spannable)>:<public static final>:<android.text.Selection>
<android.content.ContentUris: android.net.Uri.Builder appendId(android.net.Uri.Builder,long)>:<public static>:<android.content.ContentUris>
<android.media.MediaRecorder: void setVideoEncoder(int)>:<public native>:<android.media.MediaRecorder>
<org.apache.http.HeaderElementIterator: org.apache.http.HeaderElement nextElement()>:<public abstract>:<org.apache.http.HeaderElementIterator:java.util.Iterator>
<android.content.ContentProvider: boolean onCreate()>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.database.AbstractCursor: boolean isNull(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<junit.framework.TestFailure: void <init>(junit.framework.Test,java.lang.Throwable)>:<public>:<junit.framework.TestFailure>
<android.os.Parcel: void readBooleanArray(boolean[])>:<public final>:<android.os.Parcel>
<org.apache.http.entity.EntityTemplate: boolean isStreaming()>:<public>:<org.apache.http.entity.EntityTemplate:org.apache.http.entity.AbstractHttpEntity>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>:<public>:<android.accounts.Account:android.os.Parcelable>
<android.graphics.Matrix: boolean postRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.gesture.GestureStore: boolean hasChanged()>:<public>:<android.gesture.GestureStore>
<android.view.View: int getPaddingRight()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.ExpandableListView: int getPackedPositionGroup(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.mock.MockResources: android.content.res.TypedArray obtainTypedArray(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.pm.ProviderInfo: java.lang.String toString()>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.WindowManager.LayoutParams: void <init>()>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.text.Spannable.Factory: android.text.Spannable.Factory getInstance()>:<public static>:<android.text.Spannable.Factory>
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.media.audiofx.Virtualizer: boolean getStrengthSupported()>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public static>:<android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.net.DhcpInfo: void <init>()>:<public>:<android.net.DhcpInfo:android.os.Parcelable>
<android.database.DatabaseUtils.InsertHelper: void bindNull(int)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void <init>(android.inputmethodservice.AbstractInputMethodService)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.media.MediaRecorder: void prepare()>:<public>:<android.media.MediaRecorder>
<android.net.LocalSocketAddress.Namespace: void <init>(java.lang.String,int)>:<private>:<android.net.LocalSocketAddress.Namespace:java.lang.Enum>
<android.widget.CompoundButton: void toggle()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.provider.ContactsContract.RawContacts: void <init>()>:<>:<android.provider.ContactsContract.RawContacts:android.provider.BaseColumns,android.provider.ContactsContract.RawContactsColumns,android.provider.ContactsContract.ContactOptionsColumns,android.provider.ContactsContract.ContactNameColumns,android.provider.ContactsContract.SyncColumns>
<android.view.inputmethod.InputMethodSubtype: int describeContents()>:<public>:<android.view.inputmethod.InputMethodSubtype:android.os.Parcelable>
<android.os.ConditionVariable: void <init>(boolean)>:<public>:<android.os.ConditionVariable>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener)>:<public>:<android.media.JetPlayer>
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>:<public static>:<android.util.Xml>
<android.widget.TextView: boolean bringPointIntoView(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.LinearLayout: boolean isMeasureWithLargestChildEnabled()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.widget.ImageView: void onMeasure(int,int)>:<protected>:<android.widget.ImageView:android.view.View>
<android.text.method.TextKeyListener.Capitalize: android.text.method.TextKeyListener.Capitalize valueOf(java.lang.String)>:<public static>:<android.text.method.TextKeyListener.Capitalize:java.lang.Enum>
<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.test.ServiceTestCase: void tearDown()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.location.Location: float getAccuracy()>:<public>:<android.location.Location:android.os.Parcelable>
<android.preference.Preference: void setLayoutResource(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.opengl.GLU: int gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>:<public static>:<android.opengl.GLU>
<android.bluetooth.BluetoothHeadset: void <init>()>:<>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<org.xmlpull.v1.XmlSerializer: void docdecl(java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.AutoCompleteTextView.Validator: boolean isValid(java.lang.CharSequence)>:<public abstract>:<android.widget.AutoCompleteTextView.Validator>
<android.opengl.GLException: void <init>(int,java.lang.String)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>:<public>:<android.appwidget.AppWidgetProviderInfo:android.os.Parcelable>
<android.telephony.CellLocation: void requestLocationUpdate()>:<public static>:<android.telephony.CellLocation>
<android.content.res.TypedArray: float getFraction(int,int,int,float)>:<public>:<android.content.res.TypedArray>
<android.media.MediaRecorder: void reset()>:<public>:<android.media.MediaRecorder>
<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>:<public final>:<android.content.ContentResolver>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.graphics.drawable.shapes.PathShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.PathShape:android.graphics.drawable.shapes.Shape>
<android.media.MediaRecorder: void start()>:<public native>:<android.media.MediaRecorder>
<org.apache.http.conn.MultihomePlainSocketFactory: org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory()>:<public static>:<org.apache.http.conn.MultihomePlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.widget.TextView: float getRightFadingEdgeStrength()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.provider.ContactsContract.Groups: void <clinit>()>:<static>:<android.provider.ContactsContract.Groups:android.provider.BaseColumns,android.provider.ContactsContract.GroupsColumns,android.provider.ContactsContract.SyncColumns>
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.View: void setAnimation(android.view.animation.Animation)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.auth.AuthState: boolean isValid()>:<public>:<org.apache.http.auth.AuthState>
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.View: int getNextFocusForwardId()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>:<public>:<android.view.inputmethod.InputMethodManager>
<org.apache.http.HeaderElement: org.apache.http.NameValuePair getParameter(int)>:<public abstract>:<org.apache.http.HeaderElement>
<android.database.Cursor: boolean isLast()>:<public abstract>:<android.database.Cursor>
<android.app.ActionBar: void setSelectedNavigationItem(int)>:<public abstract>:<android.app.ActionBar>
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.view.animation.AnimationSet: void reset()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>:<public>:<android.telephony.TelephonyManager>
<android.widget.TableRow: void <init>(android.content.Context)>:<public>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.database.DatabaseUtils.InsertHelper: void bind(int,long)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.webkit.WebSettings.ZoomDensity: void <clinit>()>:<static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.bluetooth.BluetoothClass.Device: void <init>()>:<public>:<android.bluetooth.BluetoothClass.Device>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Cap:java.lang.Enum>
<org.apache.http.params.BasicHttpParams: java.lang.Object clone()>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>:<public abstract>:<android.view.Window>
<android.app.Activity: void onPause()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.database.CursorWrapper: boolean moveToNext()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.view.DragEvent: float getX()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.os.Debug.InstructionCount: int globalMethodInvocations()>:<public>:<android.os.Debug.InstructionCount>
<android.os.Bundle: int describeContents()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.HeaderViewListAdapter: boolean removeFooter(android.view.View)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>:<public>:<android.graphics.drawable.Drawable>
<android.view.MotionEvent: float getPressure()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.RelativeLayout.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.ViewTreeObserver: boolean isAlive()>:<public>:<android.view.ViewTreeObserver>
<android.provider.Contacts.Intents: void <init>()>:<public>:<android.provider.Contacts.Intents>
<android.graphics.drawable.GradientDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.util.JsonToken: android.util.JsonToken valueOf(java.lang.String)>:<public static>:<android.util.JsonToken:java.lang.Enum>
<org.apache.http.auth.AuthScheme: void processChallenge(org.apache.http.Header)>:<public abstract>:<org.apache.http.auth.AuthScheme>
<android.widget.SlidingDrawer: void onFinishInflate()>:<protected>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>:<public>:<android.webkit.WebViewClient>
<android.net.Uri: java.lang.String getEncodedPath()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.animation.LayoutTransition: boolean isRunning()>:<public>:<android.animation.LayoutTransition>
<org.apache.http.impl.io.ContentLengthInputStream: int read()>:<public>:<org.apache.http.impl.io.ContentLengthInputStream:java.io.InputStream>
<android.graphics.Paint.Style: android.graphics.Paint.Style valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Style:java.lang.Enum>
<junit.framework.TestCase: java.lang.String toString()>:<public>:<junit.framework.TestCase:junit.framework.Assert,junit.framework.Test>
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])>:<public>:<android.content.ContentProviderClient>
<android.content.ClipDescription: java.lang.String getMimeType(int)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.view.View: void setBackgroundResource(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockContext: android.content.ComponentName startService(android.content.Intent)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.conn.HttpHostConnectException: org.apache.http.HttpHost getHost()>:<public>:<org.apache.http.conn.HttpHostConnectException:java.net.ConnectException,java.net.SocketException,java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.preference.PreferenceGroup: boolean isOnSameScreenAsChildren()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>:<public abstract>:<android.app.ActionBar>
<android.test.mock.MockPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.renderscript.Int4: void <init>()>:<public>:<android.renderscript.Int4>
<org.apache.http.cookie.SetCookie: void setSecure(boolean)>:<public abstract>:<org.apache.http.cookie.SetCookie:org.apache.http.cookie.Cookie>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.widget.ProgressBar: void setMax(int)>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.view.GestureDetector.OnGestureListener: boolean onDown(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>:<public>:<android.webkit.ConsoleMessage>
<android.widget.TableLayout: void setShrinkAllColumns(boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>:<public>:<android.gesture.GestureStroke>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>:<public>:<android.app.Instrumentation>
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.ZoomButton: boolean onLongClick(android.view.View)>:<public>:<android.widget.ZoomButton:android.widget.ImageButton,android.widget.ImageView,android.view.View,android.view.View.OnLongClickListener>
<android.mtp.MtpObjectInfo: int getParent()>:<public final>:<android.mtp.MtpObjectInfo>
<android.content.pm.ProviderInfo: void <init>()>:<public>:<android.content.pm.ProviderInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.text.style.AlignmentSpan.Standard: int describeContents()>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.app.FragmentBreadCrumbs: void setMaxVisible(int)>:<public>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.app.FragmentManager: void popBackStack(int,int)>:<public abstract>:<android.app.FragmentManager>
<android.animation.LayoutTransition: boolean isChangingLayout()>:<public>:<android.animation.LayoutTransition>
<android.os.Parcel: double readDouble()>:<public final native>:<android.os.Parcel>
<org.apache.http.message.LineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.LineParser>
<org.apache.commons.logging.Log: void debug(java.lang.Object)>:<public abstract>:<org.apache.commons.logging.Log>
<android.net.NetworkInfo.DetailedState: void <clinit>()>:<static>:<android.net.NetworkInfo.DetailedState:java.lang.Enum>
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.protocol.HttpDateGenerator: void <clinit>()>:<static>:<org.apache.http.protocol.HttpDateGenerator>
<android.media.audiofx.EnvironmentalReverb: void setParameterListener(android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.view.Window: boolean isShortcutKey(int,android.view.KeyEvent)>:<public abstract>:<android.view.Window>
<android.content.Context: android.content.ContentResolver getContentResolver()>:<public abstract>:<android.content.Context>
<android.view.inputmethod.ExtractedTextRequest: void <clinit>()>:<static>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.telephony.gsm.SmsMessage: java.lang.String getPseudoSubject()>:<public>:<android.telephony.gsm.SmsMessage>
<android.media.AudioManager: int getVibrateSetting(int)>:<public>:<android.media.AudioManager>
<org.apache.http.protocol.HttpResponseInterceptorList: void removeResponseInterceptorByClass(java.lang.Class)>:<public abstract>:<org.apache.http.protocol.HttpResponseInterceptorList>
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity getLastActivity()>:<public final>:<android.app.Instrumentation.ActivityMonitor>
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>:<protected>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.widget.ListPopupWindow: void setHorizontalOffset(int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>:<public>:<android.widget.PopupWindow>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>:<public abstract>:<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory>
<android.content.BroadcastReceiver: boolean isInitialStickyBroadcast()>:<public final>:<android.content.BroadcastReceiver>
<android.preference.PreferenceGroup: boolean removePreference(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()>:<public>:<android.widget.PopupMenu>
<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>:<public final>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.client.ResponseHandler: java.lang.Object handleResponse(org.apache.http.HttpResponse)>:<public abstract>:<org.apache.http.client.ResponseHandler>
<android.telephony.ServiceState: void setRoaming(boolean)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.animation.Animator: void start()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.text.method.LinkMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.app.FragmentManager: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>:<public abstract>:<android.app.FragmentManager>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(java.lang.CharSequence[],android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.renderscript.Mesh.Primitive: void <clinit>()>:<static>:<android.renderscript.Mesh.Primitive:java.lang.Enum>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>:<public>:<android.database.sqlite.SQLiteClosable>
<android.view.ViewDebug.HierarchyTraceType: void <clinit>()>:<static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>:<public>:<android.nfc.NfcManager>
<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>:<public>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.conn.ManagedClientConnection: void unmarkReusable()>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.widget.CompoundButton: void <init>(android.content.Context)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.graphics.Bitmap: int getRowBytes()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.InputQueue.Callback: void onInputQueueDestroyed(android.view.InputQueue)>:<public abstract>:<android.view.InputQueue.Callback>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>:<public static final>:<android.provider.MediaStore.Images.Thumbnails:android.provider.BaseColumns>
<android.test.mock.MockContext: android.graphics.drawable.Drawable peekWallpaper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.text.util.Rfc822Tokenizer: int findTokenStart(java.lang.CharSequence,int)>:<public>:<android.text.util.Rfc822Tokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDataSetChanged()>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.webkit.WebSettings: void setAllowContentAccess(boolean)>:<public>:<android.webkit.WebSettings>
<android.media.MediaRecorder.VideoEncoder: void <init>(android.media.MediaRecorder)>:<>:<android.media.MediaRecorder.VideoEncoder>
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.animation.Animator: android.animation.Animator setDuration(long)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<org.apache.http.impl.auth.NTLMScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>:<public>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.os.StrictMode.VmPolicy.Builder: void <init>(android.os.StrictMode.VmPolicy)>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>:<public static>:<android.graphics.Picture>
<android.text.Spannable: void removeSpan(java.lang.Object)>:<public abstract>:<android.text.Spannable:android.text.Spanned>
<org.apache.http.message.ParserCursor: int getPos()>:<public>:<org.apache.http.message.ParserCursor>
<android.webkit.WebView: void saveWebArchive(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.app.admin.DeviceAdminReceiver: void <init>()>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<android.graphics.drawable.Drawable: void invalidateSelf()>:<public>:<android.graphics.drawable.Drawable>
<android.widget.RemoteViewsService: android.widget.RemoteViewsService.RemoteViewsFactory onGetViewFactory(android.content.Intent)>:<public abstract>:<android.widget.RemoteViewsService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.nfc.tech.NfcV: byte[] transceive(byte[])>:<public>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.view.Surface: void setTransparentRegionHint(android.graphics.Region)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.provider.ContactsContract.StatusUpdates: void <clinit>()>:<static>:<android.provider.ContactsContract.StatusUpdates:android.provider.ContactsContract.StatusColumns,android.provider.ContactsContract.PresenceColumns>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.content.pm.PackageManager.NameNotFoundException: void <init>(java.lang.String)>:<public>:<android.content.pm.PackageManager.NameNotFoundException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<android.widget.DatePicker: long getMaxDate()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.ObjectAnimator: android.animation.Animator setDuration(long)>:<public volatile>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.AbsListView: void <init>(android.content.Context)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.content.res.Resources.NotFoundException: void <init>(java.lang.String)>:<public>:<android.content.res.Resources.NotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.View: void addTouchables(java.util.ArrayList)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.String)>:<public>:<org.apache.http.client.ClientProtocolException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.graphics.PointF: void set(float,float)>:<public final>:<android.graphics.PointF>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.Number)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.hardware.usb.UsbEndpoint: int getAttributes()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.text.method.LinkMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>:<public>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.view.View: float getX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.mock.MockResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode valueOf(java.lang.String)>:<public static>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.media.AudioTrack: int getChannelConfiguration()>:<public>:<android.media.AudioTrack>
<org.apache.http.message.BasicRequestLine: java.lang.String getMethod()>:<public>:<org.apache.http.message.BasicRequestLine:org.apache.http.RequestLine,java.lang.Cloneable>
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler getRedirectHandler()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.content.IntentFilter: int countDataSchemes()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.Window: void setDefaultWindowFormat(int)>:<protected>:<android.view.Window>
<junit.framework.Assert: void assertTrue(boolean)>:<public static>:<junit.framework.Assert>
<android.app.Activity: boolean isChild()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.admin.DeviceAdminInfo: boolean isVisible()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<android.text.style.TextAppearanceSpan: int getSpanTypeId()>:<public>:<android.text.style.TextAppearanceSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)>:<public>:<android.media.MediaPlayer>
<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>:<public static>:<android.graphics.Rect:android.os.Parcelable>
<android.graphics.drawable.InsetDrawable: int getOpacity()>:<public>:<android.graphics.drawable.InsetDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.test.mock.MockCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.content.res.Configuration: int diff(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.conn.BasicManagedEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.text.style.BackgroundColorSpan: int getBackgroundColor()>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.test.mock.MockPackageManager: java.util.List getInstalledPackages(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.preference.CheckBoxPreference: void setChecked(boolean)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.os.Debug: void resetGlobalAllocSize()>:<public static>:<android.os.Debug>
<android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.graphics.Canvas: void skew(float,float)>:<public native>:<android.graphics.Canvas>
<android.os.Handler: boolean post(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.media.JetPlayer: boolean triggerClip(int)>:<public>:<android.media.JetPlayer>
<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>:<public>:<android.content.ContentProviderClient>
<org.apache.http.HttpVersion: org.apache.http.ProtocolVersion forVersion(int,int)>:<public>:<org.apache.http.HttpVersion:org.apache.http.ProtocolVersion,java.io.Serializable>
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.graphics.Movie: int duration()>:<public native>:<android.graphics.Movie>
<android.widget.TextView: int getTopPaddingOffset()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.AsyncQueryHandler: void cancelOperation(int)>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>:<public>:<android.os.RemoteCallbackList>
<android.test.ActivityUnitTestCase: int getStartedActivityRequest()>:<public>:<android.test.ActivityUnitTestCase:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.widget.AlphabetIndexer: void setCursor(android.database.Cursor)>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.media.audiofx.Equalizer: int getCenterFreq(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.test.TouchUtils: void drag(android.test.ActivityInstrumentationTestCase,float,float,float,float,int)>:<public static>:<android.test.TouchUtils>
<android.view.ViewParent: void focusableViewAvailable(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long4)>:<public>:<android.renderscript.FieldPacker>
<android.os.Parcel: void readIntArray(int[])>:<public final>:<android.os.Parcel>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.content.CursorLoader: void setSelectionArgs(java.lang.String[])>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<android.view.View: boolean isLayoutRequested()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.client.methods.HttpRequestBase: void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>:<public>:<android.view.animation.LayoutAnimationController>
<android.animation.AnimatorSet: android.animation.AnimatorSet.Builder play(android.animation.Animator)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float)>:<public static>:<android.animation.Keyframe:java.lang.Cloneable>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel valueOf(java.lang.String)>:<public static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.test.ApplicationTestCase: android.app.Application getApplication()>:<public>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.os.Binder: void restoreCallingIdentity(long)>:<public static final native>:<android.os.Binder:android.os.IBinder>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>:<public>:<android.location.LocationManager>
<android.renderscript.RenderScriptGL: int getWidth()>:<public>:<android.renderscript.RenderScriptGL:android.renderscript.RenderScript>
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener)>:<public>:<android.view.GestureDetector>
<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.animation.Animator.AnimatorListener: void onAnimationRepeat(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onRelease(int)>:<public abstract>:<android.inputmethodservice.KeyboardView.OnKeyboardActionListener>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlAndSpaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.graphics.RectF: void union(float,float,float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.text.Layout: float getLineRight(int)>:<public>:<android.text.Layout>
<org.apache.http.message.AbstractHttpMessage: void setHeader(org.apache.http.Header)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>:<public static>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams copy()>:<public>:<org.apache.http.params.DefaultedHttpParams:org.apache.http.params.AbstractHttpParams>
<org.apache.http.conn.ManagedClientConnection: void setState(java.lang.Object)>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<org.apache.http.impl.client.AbstractHttpClient: void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.speech.RecognitionService.Callback: void beginningOfSpeech()>:<public>:<android.speech.RecognitionService.Callback>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.text.format.Time: boolean isEpoch(android.text.format.Time)>:<public static>:<android.text.format.Time>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>:<public static>:<android.webkit.MimeTypeMap>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long3)>:<public>:<android.renderscript.FieldPacker>
<android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>:<public abstract>:<android.database.sqlite.SQLiteCursorDriver>
<android.renderscript.Allocation: android.renderscript.Allocation createFromString(android.renderscript.RenderScript,java.lang.String,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<org.apache.http.HttpMessage: org.apache.http.Header[] getAllHeaders()>:<public abstract>:<org.apache.http.HttpMessage>
<android.os.DropBoxManager.Entry: java.io.InputStream getInputStream()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.net.wifi.WifiManager.WifiLock: void setWorkSource(android.os.WorkSource)>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>:<public>:<android.content.res.Resources>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.Canvas: void drawColor(int)>:<public>:<android.graphics.Canvas>
<android.app.Activity: void onActionModeFinished(android.view.ActionMode)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<dalvik.system.DexFile: java.lang.String getName()>:<public>:<dalvik.system.DexFile>
<android.animation.ValueAnimator: void removeUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<org.apache.http.impl.cookie.NetscapeDraftSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.NetscapeDraftSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AnticipateOvershootInterpolator:android.view.animation.Interpolator>
<android.test.ProviderTestCase2: android.test.IsolatedContext getMockContext()>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>:<public abstract>:<android.app.FragmentTransaction>
<android.view.View: int getVisibility()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>:<public abstract>:<android.content.ServiceConnection>
<android.view.View: void setSelected(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.TabActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.content.ContextWrapper: void enforceCallingPermission(java.lang.String,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler)>:<public static>:<android.text.Html>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<dalvik.system.DexFile: java.util.Enumeration entries()>:<public>:<dalvik.system.DexFile>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.test.AndroidTestRunner: void setInstrumentation(android.app.Instrumentation)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.util.Base64OutputStream: void close()>:<public>:<android.util.Base64OutputStream:java.io.FilterOutputStream,java.io.OutputStream>
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater.Factory)>:<public>:<android.view.LayoutInflater>
<android.widget.TwoLineListItem: android.widget.TextView getText1()>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>:<public abstract>:<android.service.wallpaper.WallpaperService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.test.mock.MockPackageManager: int checkSignatures(int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.util.SparseBooleanArray: boolean valueAt(int)>:<public>:<android.util.SparseBooleanArray>
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.test.mock.MockContext: android.graphics.drawable.Drawable getWallpaper()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.content.UriMatcher: void <init>(int)>:<public>:<android.content.UriMatcher>
<android.app.ListActivity: void <init>()>:<public>:<android.app.ListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.renderscript.Script.FieldBase: android.renderscript.Element getElement()>:<public>:<android.renderscript.Script.FieldBase>
<org.apache.http.conn.routing.BasicRouteDirector: int firstStep(org.apache.http.conn.routing.RouteInfo)>:<protected>:<org.apache.http.conn.routing.BasicRouteDirector:org.apache.http.conn.routing.HttpRouteDirector>
<android.graphics.drawable.Drawable: int[] getState()>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.Paint: android.graphics.Paint.FontMetrics getFontMetrics()>:<public>:<android.graphics.Paint>
<android.renderscript.AllocationAdapter: void readData(float[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.media.AudioRecord: void stop()>:<public>:<android.media.AudioRecord>
<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)>:<public>:<android.media.JetPlayer>
<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)>:<public>:<android.preference.PreferenceManager>
<android.view.Gravity: void <init>()>:<public>:<android.view.Gravity>
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<android.view.Window: void setContainer(android.view.Window)>:<public>:<android.view.Window>
<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>:<public>:<android.inputmethodservice.ExtractEditText:android.widget.EditText,android.widget.TextView,android.view.View>
<org.apache.http.MethodNotSupportedException: void <init>(java.lang.String)>:<public>:<org.apache.http.MethodNotSupportedException:org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.test.mock.MockPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.Context: java.lang.String getPackageName()>:<public abstract>:<android.content.Context>
<android.util.SparseArray: void put(int,java.lang.Object)>:<public>:<android.util.SparseArray>
<android.opengl.GLES10: void glBindTexture(int,int)>:<public static native>:<android.opengl.GLES10>
<android.media.MediaRecorder: void stop()>:<public native>:<android.media.MediaRecorder>
<android.net.sip.SipProfile: int getPort()>:<public>:<android.net.sip.SipProfile:android.os.Parcelable,java.io.Serializable,java.lang.Cloneable>
<android.view.View: void setLayerType(int,android.graphics.Paint)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.params.DefaultedHttpParams: void <init>(org.apache.http.params.HttpParams,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.params.DefaultedHttpParams:org.apache.http.params.AbstractHttpParams>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isConstantSize()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.renderscript.Mesh.AllocationBuilder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<org.apache.http.conn.EofSensorInputStream: void releaseConnection()>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<android.opengl.GLES20: void glDeleteShader(int)>:<public static native>:<android.opengl.GLES20>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.HttpConnectionMetrics: long getReceivedBytesCount()>:<public abstract>:<org.apache.http.HttpConnectionMetrics>
<org.apache.http.message.BasicLineFormatter: int estimateProtocolVersionLen(org.apache.http.ProtocolVersion)>:<protected>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<org.apache.http.impl.conn.AbstractPoolEntry: void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>:<public final>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<org.json.JSONStringer: org.json.JSONStringer value(java.lang.Object)>:<public>:<org.json.JSONStringer>
<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrixColorFilter:android.graphics.ColorFilter>
<org.apache.http.impl.io.IdentityOutputStream: void close()>:<public>:<org.apache.http.impl.io.IdentityOutputStream:java.io.OutputStream>
<android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>:<public abstract>:<android.view.Window.Callback>
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>:<public>:<android.nfc.tech.BasicTagTechnology:android.nfc.tech.TagTechnology>
<android.drm.ProcessedData: byte[] getData()>:<public>:<android.drm.ProcessedData>
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>:<public>:<android.telephony.SmsMessage>
<android.widget.ArrayAdapter: void insert(java.lang.Object,int)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.http.protocol.HttpRequestHandlerRegistry: org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String)>:<public>:<org.apache.http.protocol.HttpRequestHandlerRegistry:org.apache.http.protocol.HttpRequestHandlerResolver>
<android.view.OrientationEventListener: void disable()>:<public>:<android.view.OrientationEventListener>
<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings.PluginState)>:<public synchronized>:<android.webkit.WebSettings>
<android.test.mock.MockContext: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.json.JSONArray: org.json.JSONArray put(int,double)>:<public>:<org.json.JSONArray>
<android.graphics.Camera: void <init>()>:<public>:<android.graphics.Camera>
<android.app.IntentService: void onHandleIntent(android.content.Intent)>:<protected abstract>:<android.app.IntentService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)>:<public static>:<android.text.format.DateUtils>
<android.nfc.Tag: void <init>()>:<>:<android.nfc.Tag:android.os.Parcelable>
<android.view.View.OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)>:<public abstract>:<android.view.View.OnAttachStateChangeListener>
<android.app.backup.BackupDataInputStream: int size()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>:<public final>:<android.view.ViewTreeObserver>
<android.os.Parcel: void writeLongArray(long[])>:<public final>:<android.os.Parcel>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.os.Binder: boolean isBinderAlive()>:<public>:<android.os.Binder:android.os.IBinder>
<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>:<public>:<android.widget.ImageView:android.view.View>
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.database.CursorWrapper: long getLong(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord[])>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>:<public>:<android.hardware.SensorManager>
<android.content.Entity: android.content.ContentValues getEntityValues()>:<public>:<android.content.Entity>
<android.view.View: void setFadingEdgeLength(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.DatePicker: void onRestoreInstanceState(android.os.Parcelable)>:<protected>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.nfc.tech.NfcV: void connect()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.provider.Settings.Secure: android.net.Uri getUriFor(java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.widget.TableLayout: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Matrix4f: void loadIdentity()>:<public>:<android.renderscript.Matrix4f>
<android.view.WindowManager: void removeViewImmediate(android.view.View)>:<public abstract>:<android.view.WindowManager:android.view.ViewManager>
<android.inputmethodservice.Keyboard: int getKeyHeight()>:<protected>:<android.inputmethodservice.Keyboard>
<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Matrix: void setSinCos(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>:<public>:<android.view.inputmethod.InputMethodManager>
<org.apache.http.conn.params.ConnRouteParams: void <clinit>()>:<static>:<org.apache.http.conn.params.ConnRouteParams:org.apache.http.conn.params.ConnRoutePNames>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>:<public static native>:<android.opengl.GLES20>
<android.widget.HorizontalScrollView: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.HorizontalScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>:<public static>:<android.opengl.ETC1Util>
<android.widget.FilterQueryProvider: android.database.Cursor runQuery(java.lang.CharSequence)>:<public abstract>:<android.widget.FilterQueryProvider>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>:<public>:<android.content.res.Resources>
<android.renderscript.Element: android.renderscript.Element I8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.app.ExpandableListActivity: void onGroupExpand(int)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.os.Bundle: short[] getShortArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.SurfaceView:android.view.View>
<org.apache.http.impl.cookie.CookieSpecBase: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.CookieSpecBase:org.apache.http.impl.cookie.AbstractCookieSpec>
<android.database.AbstractCursor: void checkPosition()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.provider.Contacts.People.Phones: void <init>()>:<>:<android.provider.Contacts.People.Phones:android.provider.BaseColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PeopleColumns>
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.conn.params.ConnManagerParams: void <init>()>:<public>:<org.apache.http.conn.params.ConnManagerParams:org.apache.http.conn.params.ConnManagerPNames>
<android.graphics.Path: void addPath(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.location.Location: void <init>(java.lang.String)>:<public>:<android.location.Location:android.os.Parcelable>
<android.graphics.Paint: void setFakeBoldText(boolean)>:<public native>:<android.graphics.Paint>
<android.animation.LayoutTransition.TransitionListener: void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public abstract>:<android.animation.LayoutTransition.TransitionListener>
<android.content.pm.ConfigurationInfo: void <clinit>()>:<static>:<android.content.pm.ConfigurationInfo:android.os.Parcelable>
<android.net.wifi.WifiManager.MulticastLock: void <init>(android.net.wifi.WifiManager)>:<>:<android.net.wifi.WifiManager.MulticastLock>
<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.AuthenticatorException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<android.widget.BaseExpandableListAdapter: boolean isEmpty()>:<public>:<android.widget.BaseExpandableListAdapter:android.widget.ExpandableListAdapter,android.widget.HeterogeneousExpandableList>
<android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.message.BasicStatusLine: java.lang.Object clone()>:<public>:<org.apache.http.message.BasicStatusLine:org.apache.http.StatusLine,java.lang.Cloneable>
<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>:<public abstract>:<android.text.InputFilter>
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>:<public static>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.content.ContentQueryMap: void finalize()>:<protected>:<android.content.ContentQueryMap:java.util.Observable>
<android.net.rtp.AudioStream: int getDtmfType()>:<public>:<android.net.rtp.AudioStream:android.net.rtp.RtpStream>
<android.opengl.GLDebugHelper: void <init>()>:<public>:<android.opengl.GLDebugHelper>
<android.view.Window.Callback: void onPanelClosed(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.view.ViewConfiguration: int getJumpTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.test.mock.MockPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.media.audiofx.Equalizer: short getCurrentPreset()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.net.Proxy: int getPort(android.content.Context)>:<public static final>:<android.net.Proxy>
<android.content.Context: void <init>()>:<public>:<android.content.Context>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.content.Intent: int getFlags()>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.util.JsonWriter: void setLenient(boolean)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.app.NotificationManager: void <init>()>:<>:<android.app.NotificationManager>
<android.webkit.JsPromptResult: void confirm(java.lang.String)>:<public>:<android.webkit.JsPromptResult:android.webkit.JsResult>
<android.view.View: void setRotation(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.ContentUris: long parseId(android.net.Uri)>:<public static>:<android.content.ContentUris>
<android.database.CharArrayBuffer: void <init>(int)>:<public>:<android.database.CharArrayBuffer>
<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.database.DatabaseUtils.InsertHelper: void bind(int,boolean)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window>
<android.test.mock.MockDialogInterface: void <init>()>:<public>:<android.test.mock.MockDialogInterface:android.content.DialogInterface>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.net.Uri.Builder: android.net.Uri.Builder fragment(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.util.JsonReader: void beginArray()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void scrollToBottom(android.test.ActivityInstrumentationTestCase,android.view.ViewGroup)>:<public static>:<android.test.TouchUtils>
<android.graphics.drawable.shapes.Shape: float getWidth()>:<public final>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.graphics.Path: void offset(float,float)>:<public>:<android.graphics.Path>
<org.json.JSONArray: org.json.JSONObject optJSONObject(int)>:<public>:<org.json.JSONArray>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(android.content.Intent)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.view.View.MeasureSpec: java.lang.String toString(int)>:<public static>:<android.view.View.MeasureSpec>
<android.telephony.SignalStrength: int describeContents()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.provider.ContactsContract.CommonDataKinds.Email: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.app.Dialog: void onStart()>:<protected>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebChromeClient: void <init>()>:<public>:<android.webkit.WebChromeClient>
<android.widget.RemoteViewsService.RemoteViewsFactory: long getItemId(int)>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.util.EventLog: int writeEvent(int,java.lang.String)>:<public static native>:<android.util.EventLog>
<android.content.BroadcastReceiver.PendingResult: void finish()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()>:<public>:<android.bluetooth.BluetoothA2dp:android.bluetooth.BluetoothProfile>
<android.app.Instrumentation.ActivityResult: android.content.Intent getResultData()>:<public>:<android.app.Instrumentation.ActivityResult>
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.ClickableSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance>
<android.widget.RemoteViews: void <init>(android.os.Parcel)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public final>:<android.content.ContentResolver>
<android.graphics.Matrix: void mapVectors(float[],float[])>:<public>:<android.graphics.Matrix>
<android.content.ContextWrapper: boolean isRestricted()>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>:<public>:<org.apache.http.impl.auth.RFC2617Scheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.text.BoringLayout.Metrics: void <init>()>:<public>:<android.text.BoringLayout.Metrics:android.graphics.Paint.FontMetricsInt>
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.AdapterViewAnimator: void showNext()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.LayoutInflater.Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>:<public abstract>:<android.view.LayoutInflater.Factory2:android.view.LayoutInflater.Factory>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>:<public static>:<android.text.Html>
<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void shutdown()>:<public>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.media.AudioManager: void setStreamMute(int,boolean)>:<public>:<android.media.AudioManager>
<android.widget.ImageView: void setBaselineAlignBottom(boolean)>:<public>:<android.widget.ImageView:android.view.View>
<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.BackupAgentHelper:android.app.backup.BackupAgent,android.content.ContextWrapper,android.content.Context>
<android.os.Build.VERSION: void <clinit>()>:<static>:<android.os.Build.VERSION>
<android.text.AndroidCharacter: void getEastAsianWidths(char[],int,int,byte[])>:<public static native>:<android.text.AndroidCharacter>
<android.graphics.Canvas: void scale(float,float,float,float)>:<public final>:<android.graphics.Canvas>
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.Fragment: android.app.Fragment getTargetFragment()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.test.InstrumentationTestSuite: void <init>(android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpConnectionMetrics getMetrics()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(java.lang.CharSequence)>:<public abstract>:<android.app.ActionBar.Tab>
<android.drm.DrmRights: java.lang.String getMimeType()>:<public>:<android.drm.DrmRights>
<android.text.Editable: void setFilters(android.text.InputFilter[])>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<org.apache.http.conn.scheme.PlainSocketFactory: void <init>(org.apache.http.conn.scheme.HostNameResolver)>:<public>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.view.inputmethod.CorrectionInfo: void <clinit>()>:<static>:<android.view.inputmethod.CorrectionInfo:android.os.Parcelable>
<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyA(int,byte[])>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>:<public static>:<org.apache.http.util.EntityUtils>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.RenderScript: void setMessageHandler(android.renderscript.RenderScript.RSMessageHandler)>:<public>:<android.renderscript.RenderScript>
<android.view.View: void setWillNotCacheDrawing(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.JsonReader: void beginObject()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>:<public>:<android.bluetooth.BluetoothSocket:java.io.Closeable>
<android.provider.MediaStore.Audio: void <init>()>:<public>:<android.provider.MediaStore.Audio>
<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>:<public abstract>:<android.view.inputmethod.InputMethod>
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>()>:<public>:<org.apache.http.impl.client.DefaultHttpRequestRetryHandler:org.apache.http.client.HttpRequestRetryHandler>
<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator>
<org.xmlpull.v1.XmlPullParser: int getDepth()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.xmlpull.v1.XmlPullParser: int nextToken()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.TextView: boolean setFrame(int,int,int,int)>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.ThumbnailUtils: void <init>()>:<public>:<android.media.ThumbnailUtils>
<org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.gesture.GestureOverlayView: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>:<public abstract>:<org.apache.http.cookie.ClientCookie:org.apache.http.cookie.Cookie>
<android.widget.CursorTreeAdapter: java.lang.Object getGroup(int)>:<public volatile>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<org.apache.http.auth.UsernamePasswordCredentials: java.security.Principal getUserPrincipal()>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.telephony.gsm.SmsMessage: java.lang.String getOriginatingAddress()>:<public>:<android.telephony.gsm.SmsMessage>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<org.apache.http.client.ClientProtocolException: void <init>()>:<public>:<org.apache.http.client.ClientProtocolException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.view.View: android.content.Context getContext()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Criteria: void setSpeedAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>:<protected>:<android.content.pm.ComponentInfo:android.content.pm.PackageItemInfo>
<android.provider.MediaStore.Audio.Playlists.Members: boolean moveItem(android.content.ContentResolver,long,int,int)>:<public static final>:<android.provider.MediaStore.Audio.Playlists.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.preference.CheckBoxPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.telephony.ServiceState: void <init>()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<org.apache.http.impl.auth.RFC2617Scheme: void <init>()>:<public>:<org.apache.http.impl.auth.RFC2617Scheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.graphics.drawable.PictureDrawable: int getOpacity()>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.view.Menu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>:<public abstract>:<android.view.Menu>
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.routing.HttpRouteDirector: int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>:<public abstract>:<org.apache.http.conn.routing.HttpRouteDirector>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.preference.Preference: android.content.SharedPreferences.Editor getEditor()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.Adapter: int getCount()>:<public abstract>:<android.widget.Adapter>
<android.view.MotionEvent: void <init>()>:<>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.mtp.MtpDevice: long getStorageId(int)>:<public>:<android.mtp.MtpDevice>
<android.view.InputEvent: int getSource()>:<public abstract>:<android.view.InputEvent:android.os.Parcelable>
<android.app.Fragment: void startActivity(android.content.Intent)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>:<public>:<android.net.wifi.WifiManager>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()>:<public abstract>:<android.app.FragmentManager.BackStackEntry>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.AbstractPoolEntry)>:<protected>:<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:org.apache.http.impl.conn.AbstractPooledConnAdapter,org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.app.LauncherActivity: void setTitle(java.lang.CharSequence)>:<public>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>:<public native>:<android.media.MediaRecorder>
<android.net.http.SslCertificate.DName: java.lang.String getOName()>:<public>:<android.net.http.SslCertificate.DName>
<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence[])>:<public static transient>:<android.text.TextUtils>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt valueOf(java.lang.String)>:<public static>:<android.text.TextUtils.TruncateAt:java.lang.Enum>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetManager>
<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>:<public>:<android.graphics.drawable.PaintDrawable:android.graphics.drawable.ShapeDrawable,android.graphics.drawable.Drawable>
<android.widget.Scroller: int getStartX()>:<public final>:<android.widget.Scroller>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>:<public static>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.app.ActionBar: int getNavigationMode()>:<public abstract>:<android.app.ActionBar>
<android.view.View: boolean onFilterTouchEventForSecurity(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.NeighboringCellInfo: void <init>(int,int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<android.content.Context: void startActivities(android.content.Intent[])>:<public abstract>:<android.content.Context>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.RectF: void union(float,float)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.inputmethodservice.Keyboard.Key: int squaredDistanceFrom(int,int)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context,boolean)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.RadioGroup: void <init>(android.content.Context)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.json.JSONObject: java.util.Iterator keys()>:<public>:<org.json.JSONObject>
<android.hardware.Camera.CameraInfo: void <init>()>:<public>:<android.hardware.Camera.CameraInfo>
<android.app.ActivityManager.RecentTaskInfo: void <init>()>:<public>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>:<public final>:<android.os.Handler>
<dalvik.'annotation'.TestTargetClass: java.lang.Class value()>:<public abstract>:<dalvik.annotation.TestTargetClass:java.lang.annotation.Annotation>
<android.os.MessageQueue: void <init>()>:<>:<android.os.MessageQueue>
<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public abstract>:<android.view.ViewManager>
<android.media.RingtoneManager: boolean isDefault(android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>()>:<public>:<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.widget.GridView: void setColumnWidth(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.mock.MockContext: void sendBroadcast(android.content.Intent,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.graphics.drawable.ClipDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.View: void onScrollChanged(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.NetworkInfo: boolean isRoaming()>:<public>:<android.net.NetworkInfo:android.os.Parcelable>
<android.telephony.TelephonyManager: int getSimState()>:<public>:<android.telephony.TelephonyManager>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>:<public static>:<android.graphics.BitmapRegionDecoder>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.TextView: void setLineSpacing(float,float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>:<public>:<android.text.Layout>
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.R.interpolator: void <init>()>:<public>:<android.R.interpolator>
<junit.runner.BaseTestRunner: java.lang.String getPreference(java.lang.String)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.content.ActivityNotFoundException: void <init>(java.lang.String)>:<public>:<android.content.ActivityNotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.View: void setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)>:<public>:<android.sax.Element>
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.ClipData: int getItemCount()>:<public>:<android.content.ClipData:android.os.Parcelable>
<org.apache.http.impl.io.IdentityOutputStream: void write(int)>:<public>:<org.apache.http.impl.io.IdentityOutputStream:java.io.OutputStream>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>:<public abstract>:<android.content.Context>
<android.os.Bundle: boolean isEmpty()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.util.JsonReader: boolean nextBoolean()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.content.Context: java.io.File getExternalCacheDir()>:<public abstract>:<android.content.Context>
<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.telephony.ServiceState: void <init>(android.os.Parcel)>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.mtp.MtpObjectInfo: int getFormat()>:<public final>:<android.mtp.MtpObjectInfo>
<android.widget.PopupWindow: void <init>(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.widget.ArrayAdapter: void clear()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.test.mock.MockCursor: double getDouble(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.bluetooth.BluetoothServerSocket: void <init>()>:<>:<android.bluetooth.BluetoothServerSocket:java.io.Closeable>
<android.view.Surface: void setLayer(int)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.text.method.LinkMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.text.method.MetaKeyKeyListener: int getMetaState(long)>:<public static final>:<android.text.method.MetaKeyKeyListener>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.media.AudioTrack: int attachAuxEffect(int)>:<public>:<android.media.AudioTrack>
<android.widget.TimePicker: void setEnabled(boolean)>:<public>:<android.widget.TimePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)>:<public static>:<android.text.TextUtils>
<org.apache.http.impl.io.HttpRequestWriter: void writeHeadLine(org.apache.http.HttpMessage)>:<protected>:<org.apache.http.impl.io.HttpRequestWriter:org.apache.http.impl.io.AbstractMessageWriter>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.ComposeShader:android.graphics.Shader>
<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>:<public abstract>:<android.content.Context>
<android.view.WindowManager.LayoutParams: void setTitle(java.lang.CharSequence)>:<public final>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>:<public>:<android.widget.Scroller>
<android.content.Intent: char getCharExtra(java.lang.String,char)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>:<public>:<org.apache.http.cookie.CookieOrigin>
<android.widget.Gallery: void setGravity(int)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>:<public abstract>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.os.IBinder: java.lang.String getInterfaceDescriptor()>:<public abstract>:<android.os.IBinder>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: void <init>(android.content.Context)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyCharacterMap: boolean[] deviceHasKeys(int[])>:<public static>:<android.view.KeyCharacterMap>
<android.media.AudioRecord: void <init>(int,int,int,int,int)>:<public>:<android.media.AudioRecord>
<android.animation.ObjectAnimator: java.lang.String toString()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.app.Dialog: void onActionModeStarted(android.view.ActionMode)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.widget.DatePicker: boolean isEnabled()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.util.AttributeSet: int getAttributeListValue(int,java.lang.String[],int)>:<public abstract>:<android.util.AttributeSet>
<android.telephony.gsm.GsmCellLocation: int getCid()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.hardware.GeomagneticField: float getX()>:<public>:<android.hardware.GeomagneticField>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall.Listener,int)>:<public>:<android.net.sip.SipManager>
<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.method.PasswordTransformationMethod: void afterTextChanged(android.text.Editable)>:<public>:<android.text.method.PasswordTransformationMethod:android.text.method.TransformationMethod,android.text.TextWatcher>
<android.os.Debug.MemoryInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.app.Fragment: int getTargetRequestCode()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.webkit.WebView: void onConfigurationChanged(android.content.res.Configuration)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.ViewConfiguration: int getScaledTouchSlop()>:<public>:<android.view.ViewConfiguration>
<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>:<public abstract>:<android.os.IBinder>
<android.view.accessibility.AccessibilityEvent: int getAddedCount()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator>
<android.content.pm.FeatureInfo: void <init>()>:<public>:<android.content.pm.FeatureInfo:android.os.Parcelable>
<android.text.method.DateKeyListener: void <clinit>()>:<static>:<android.text.method.DateKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpRequest receiveRequestHeader()>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.database.MatrixCursor: double getDouble(int)>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>:<public>:<android.bluetooth.BluetoothAdapter>
<android.net.wifi.WifiManager.MulticastLock: void release()>:<public>:<android.net.wifi.WifiManager.MulticastLock>
<android.graphics.Paint.Cap: void <init>(java.lang.String,int)>:<private>:<android.graphics.Paint.Cap:java.lang.Enum>
<android.media.AudioManager: int getMode()>:<public>:<android.media.AudioManager>
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>:<public static>:<android.database.DatabaseUtils>
<android.test.MoreAsserts: void assertContentsInAnyOrder(java.lang.String,java.lang.Iterable,java.lang.Object[])>:<public static transient>:<android.test.MoreAsserts>
<android.webkit.GeolocationPermissions: void clearAll()>:<public>:<android.webkit.GeolocationPermissions>
<org.apache.http.params.BasicHttpParams: boolean isParameterSet(java.lang.String)>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>:<public synchronized>:<org.apache.http.cookie.CookieSpecRegistry>
<android.media.AudioTrack: void play()>:<public>:<android.media.AudioTrack>
<android.view.MotionEvent: float getHistoricalToolMinor(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.DefaultHttpServerConnection:org.apache.http.impl.SocketHttpServerConnection,org.apache.http.impl.AbstractHttpServerConnection>
<android.net.sip.SipSession.Listener: void onCalling(android.net.sip.SipSession)>:<public>:<android.net.sip.SipSession.Listener>
<org.apache.http.message.BasicHeaderIterator: void remove()>:<public>:<org.apache.http.message.BasicHeaderIterator:org.apache.http.HeaderIterator>
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.content.ClipDescription: java.lang.CharSequence getLabel()>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<org.apache.http.impl.HttpConnectionMetricsImpl: long getSentBytesCount()>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.content.pm.ApplicationInfo: void <init>()>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>:<public>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.app.Fragment: java.lang.String getString(int)>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.widget.ImageView: int[] onCreateDrawableState(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.os.PowerManager: boolean isScreenOn()>:<public>:<android.os.PowerManager>
<android.app.ActivityManager.RunningAppProcessInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.view.ActionMode: android.view.Menu getMenu()>:<public abstract>:<android.view.ActionMode>
<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>:<public static>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.test.mock.MockContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.media.AudioTrack: int setStereoVolume(float,float)>:<public>:<android.media.AudioTrack>
<android.media.AudioTrack: int getAudioSessionId()>:<public>:<android.media.AudioTrack>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.DialerFilter: boolean isQwertyKeyboard()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentProvider: void onConfigurationChanged(android.content.res.Configuration)>:<public>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.app.ProgressDialog: void <init>(android.content.Context)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.renderscript.RenderScript: android.content.Context getApplicationContext()>:<public final>:<android.renderscript.RenderScript>
<android.accessibilityservice.AccessibilityService: void onInterrupt()>:<public abstract>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.widget.CursorTreeAdapter: java.lang.Object getChild(int,int)>:<public volatile>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.widget.ViewFlipper: void onWindowVisibilityChanged(int)>:<protected>:<android.widget.ViewFlipper:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.util.ByteArrayBuffer: void clear()>:<public>:<org.apache.http.util.ByteArrayBuffer>
<org.apache.http.impl.conn.SingleClientConnManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setTexture(float,float)>:<public>:<android.renderscript.Mesh.TriangleMeshBuilder>
<android.text.style.URLSpan: java.lang.String getURL()>:<public>:<android.text.style.URLSpan:android.text.style.ClickableSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>:<public static>:<android.accounts.AccountManager>
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.commons.logging.Log: boolean isTraceEnabled()>:<public abstract>:<org.apache.commons.logging.Log>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>:<public>:<android.widget.OverScroller>
<org.apache.http.impl.conn.AbstractClientConnAdapter: boolean isMarkedReusable()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedClosableObjects()>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.preference.PreferenceActivity: boolean hasHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectNetwork()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.view.InputEvent: void <init>()>:<>:<android.view.InputEvent:android.os.Parcelable>
<android.speech.RecognizerIntent: void <init>()>:<>:<android.speech.RecognizerIntent>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.text.Layout: android.text.TextPaint getPaint()>:<public final>:<android.text.Layout>
<android.media.audiofx.PresetReverb: void <init>(int,int)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.DecelerateInterpolator:android.view.animation.Interpolator>
<android.widget.DatePicker: boolean getCalendarViewShown()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.apache.http.RequestLine: java.lang.String getUri()>:<public abstract>:<org.apache.http.RequestLine>
<android.view.ViewGroup: void addView(android.view.View,int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.ZoomControls: void setZoomSpeed(long)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.hardware.Camera.Parameters: void setPreviewFrameRate(int)>:<public>:<android.hardware.Camera.Parameters>
<android.preference.ListPreference: void setValueIndex(int)>:<public>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.view.MenuItem: android.view.MenuItem setTitle(int)>:<public abstract>:<android.view.MenuItem>
<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.AsyncPlayer: void stop()>:<public>:<android.media.AsyncPlayer>
<android.renderscript.RSSurfaceView: void <init>(android.content.Context)>:<public>:<android.renderscript.RSSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.AdapterView: int getPositionForView(android.view.View)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.preference.PreferenceActivity: void setListFooter(android.view.View)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.test.MoreAsserts: void assertEmpty(java.util.Map)>:<public static>:<android.test.MoreAsserts>
<android.view.ViewGroup: void removeViews(int,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.provider.MediaStore.Audio.Playlists.Members: void <init>()>:<public>:<android.provider.MediaStore.Audio.Playlists.Members:android.provider.MediaStore.Audio.AudioColumns>
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.inputmethodservice.InputMethodService: void onInitializeInterface()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.animation.Animator: void addListener(android.animation.Animator.AnimatorListener)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.opengl.GLES10: void glPointSizex(int)>:<public static native>:<android.opengl.GLES10>
<android.graphics.Matrix: boolean equals(java.lang.Object)>:<public>:<android.graphics.Matrix>
<android.nfc.tech.NfcF: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.widget.CheckedTextView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.Dialog: void hide()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<protected>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.content.res.ColorStateList: int describeContents()>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.graphics.Canvas: void translate(float,float)>:<public native>:<android.graphics.Canvas>
<android.animation.AnimatorListenerAdapter: void onAnimationStart(android.animation.Animator)>:<public>:<android.animation.AnimatorListenerAdapter:android.animation.Animator.AnimatorListener>
<android.widget.FrameLayout: void jumpDrawablesToCurrentState()>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.view.View: android.graphics.Bitmap getDrawingCache()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.ConsoleMessage.MessageLevel: void <clinit>()>:<static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<org.apache.http.cookie.CookiePathComparator: void <init>()>:<public>:<org.apache.http.cookie.CookiePathComparator:java.io.Serializable,java.util.Comparator>
<android.view.OrientationEventListener: void enable()>:<public>:<android.view.OrientationEventListener>
<org.apache.http.ProtocolException: void <init>()>:<public>:<org.apache.http.ProtocolException:org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.widget.AdapterView.AdapterContextMenuInfo: void <init>(android.view.View,int,long)>:<public>:<android.widget.AdapterView.AdapterContextMenuInfo:android.view.ContextMenu.ContextMenuInfo>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.content.AbstractThreadedSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>:<public abstract>:<android.content.AbstractThreadedSyncAdapter>
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.content.IntentFilter: boolean matchAction(java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.InputDevice: java.lang.String getName()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.util.MonthDisplayHelper: void nextMonth()>:<public>:<android.util.MonthDisplayHelper>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>:<public>:<android.net.LocalSocket>
<android.os.Debug: void printLoadedClasses(int)>:<public static>:<android.os.Debug>
<android.location.Address: void clearLongitude()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.ScrollView: void smoothScrollTo(int,int)>:<public final>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<dalvik.system.DexClassLoader: java.lang.Package getPackage(java.lang.String)>:<protected>:<dalvik.system.DexClassLoader:java.lang.ClassLoader>
<android.media.MediaPlayer: void setAudioStreamType(int)>:<public native>:<android.media.MediaPlayer>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh create()>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.LinearLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.provider.MediaStore.Audio: java.lang.String keyFor(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio>
<android.content.SyncStats: void <init>(android.os.Parcel)>:<public>:<android.content.SyncStats:android.os.Parcelable>
<android.provider.Contacts.Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.TextView: void setEnabled(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.String)>:<public>:<android.app.PendingIntent.CanceledException:android.util.AndroidException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.protocol.HttpDateGenerator: java.lang.String getCurrentDate()>:<public synchronized>:<org.apache.http.protocol.HttpDateGenerator>
<android.media.MediaRecorder.OnInfoListener: void onInfo(android.media.MediaRecorder,int,int)>:<public abstract>:<android.media.MediaRecorder.OnInfoListener>
<android.graphics.drawable.ColorDrawable: void setColor(int)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int2)>:<public>:<android.renderscript.FieldPacker>
<android.content.Context: int getWallpaperDesiredMinimumWidth()>:<public abstract>:<android.content.Context>
<android.app.ProgressDialog: boolean isIndeterminate()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.view.SurfaceView: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.view.SurfaceView:android.view.View>
<android.app.ActivityManager: void restartPackage(java.lang.String)>:<public>:<android.app.ActivityManager>
<android.app.Activity: void setDefaultKeyMode(int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence,int,int)>:<public abstract>:<android.text.Editable:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,java.lang.Appendable>
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.util.JsonWriter: void <init>(java.io.Writer)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)>:<public static>:<android.text.Selection>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.text.TextUtils.StringSplitter: void setString(java.lang.String)>:<public abstract>:<android.text.TextUtils.StringSplitter:java.lang.Iterable>
<android.hardware.SensorManager: float getInclination(float[])>:<public static>:<android.hardware.SensorManager>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.view.ViewParent: void childDrawableStateChanged(android.view.View)>:<public abstract>:<android.view.ViewParent>
<org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>:<public static>:<org.apache.http.params.HttpProtocolParams:org.apache.http.params.CoreProtocolPNames>
<org.apache.http.ProtocolVersion: int hashCode()>:<public final>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)>:<protected>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.drawable.BitmapDrawable: int getOpacity()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>:<public static>:<android.graphics.drawable.Drawable>
<android.test.mock.MockContext: void grantUriPermission(java.lang.String,android.net.Uri,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.auth.NTLMScheme: boolean isComplete()>:<public>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.content.pm.Signature: void <init>(byte[])>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.view.View: void setLongClickable(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.TouchUtils: void tapView(android.test.InstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<junit.framework.TestResult: boolean shouldStop()>:<public synchronized>:<junit.framework.TestResult>
<org.apache.http.impl.DefaultConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.DefaultConnectionReuseStrategy:org.apache.http.ConnectionReuseStrategy>
<android.widget.AbsSeekBar: void setThumbOffset(int)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterByStatus(int)>:<public>:<android.app.DownloadManager.Query>
<android.preference.Preference.BaseSavedState: void <clinit>()>:<static>:<android.preference.Preference.BaseSavedState:android.view.AbsSavedState>
<org.apache.http.impl.conn.LoggingSessionInputBuffer: int read(byte[])>:<public>:<org.apache.http.impl.conn.LoggingSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.PathPermission:android.os.PatternMatcher>
<android.test.ApplicationTestCase: void createApplication()>:<protected final>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.media.AudioManager: void setVibrateSetting(int,int)>:<public>:<android.media.AudioManager>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: long skip(long)>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseInputStream:android.os.ParcelFileDescriptor.AutoCloseInputStream,java.io.FileInputStream,java.io.InputStream>
<org.apache.http.auth.BasicUserPrincipal: java.lang.String getName()>:<public>:<org.apache.http.auth.BasicUserPrincipal:java.security.Principal>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short3)>:<public>:<android.renderscript.FieldPacker>
<org.apache.http.Header: java.lang.String getValue()>:<public abstract>:<org.apache.http.Header>
<org.apache.http.impl.cookie.BasicSecureHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicSecureHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.content.SyncAdapterType: void <clinit>()>:<static>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>:<public>:<android.app.admin.DevicePolicyManager>
<android.text.SpannableStringInternal: void getChars(int,int,char[],int)>:<public final>:<android.text.SpannableStringInternal>
<android.telephony.NeighboringCellInfo: int getRssi()>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.database.sqlite.SQLiteProgram: void clearBindings()>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<org.apache.http.impl.cookie.RFC2109VersionHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>:<public>:<org.apache.http.impl.cookie.RFC2109VersionHandler:org.apache.http.impl.cookie.AbstractCookieAttributeHandler>
<android.util.AndroidException: void <init>(java.lang.String)>:<public>:<android.util.AndroidException:java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>:<public>:<org.apache.http.impl.entity.EntityDeserializer>
<android.view.ViewDebug.FlagToString: int mask()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.renderscript.Matrix3f: void loadRotate(float,float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>:<public abstract>:<android.content.Context>
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout.Metrics)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>:<public>:<android.content.res.TypedArray>
<android.opengl.ETC1Util: void <init>()>:<public>:<android.opengl.ETC1Util>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>:<public static native>:<android.opengl.GLES10>
<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>:<public final>:<android.content.ContentResolver>
<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean)>:<public>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<android.test.TouchUtils: void dragViewToTop(android.test.ActivityInstrumentationTestCase,android.view.View,int)>:<public static>:<android.test.TouchUtils>
<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.util.AttributeSet: java.lang.String getIdAttribute()>:<public abstract>:<android.util.AttributeSet>
<android.hardware.SensorEventListener: void onSensorChanged(android.hardware.SensorEvent)>:<public abstract>:<android.hardware.SensorEventListener>
<android.inputmethodservice.InputMethodService: void onWindowShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.ServiceInfo: void <clinit>()>:<static>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.DialerFilter: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.gesture.GestureOverlayView: int getOrientation()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean hasThread()>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.widget.ImageView: void setSelected(boolean)>:<public>:<android.widget.ImageView:android.view.View>
<android.test.mock.MockResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.EditText: android.text.Editable getText()>:<public>:<android.widget.EditText:android.widget.TextView,android.view.View>
<android.app.ActionBar: void removeTabAt(int)>:<public abstract>:<android.app.ActionBar>
<android.nfc.tech.MifareClassic: byte[] readBlock(int)>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<org.apache.http.message.HeaderGroup: void addHeader(org.apache.http.Header)>:<public>:<org.apache.http.message.HeaderGroup:java.lang.Cloneable>
<android.webkit.WebSyncManager: void resetSync()>:<public>:<android.webkit.WebSyncManager:java.lang.Runnable>
<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>:<public static>:<android.opengl.Matrix>
<android.os.Parcel: void writeDoubleArray(double[])>:<public final>:<android.os.Parcel>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.app.DialogFragment: void dismissAllowingStateLoss()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>:<public static>:<android.database.DatabaseUtils>
<android.telephony.TelephonyManager: int getCallState()>:<public>:<android.telephony.TelephonyManager>
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.widget.AbsListView: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config[] values()>:<public static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.content.pm.PackageItemInfo>
<android.app.Dialog: void setCancelMessage(android.os.Message)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telephony.SmsMessage: boolean isEmail()>:<public>:<android.telephony.SmsMessage>
<junit.framework.Assert: void assertNotNull(java.lang.String,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.text.Html: void <init>()>:<>:<android.text.Html>
<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.webkit.WebStorage.QuotaUpdater: void updateQuota(long)>:<public abstract>:<android.webkit.WebStorage.QuotaUpdater>
<org.apache.http.entity.SerializableEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.SerializableEntity:org.apache.http.entity.AbstractHttpEntity>
<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.location.Address: void setPremises(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(int)>:<public>:<android.app.AlertDialog.Builder>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.hardware.Camera.Parameters: void setJpegThumbnailSize(int,int)>:<public>:<android.hardware.Camera.Parameters>
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.gesture.GestureStore: void setSequenceType(int)>:<public>:<android.gesture.GestureStore>
<android.inputmethodservice.InputMethodService: void onExtractedSelectionChanged(int,int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebViewFragment: void onResume()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.view.View: float getScaleX()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>:<public>:<android.media.SoundPool>
<android.os.Debug: int getGlobalAllocSize()>:<public static>:<android.os.Debug>
<android.database.Observable: void registerObserver(java.lang.Object)>:<public>:<android.database.Observable>
<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.test.mock.MockCursor: short getShort(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.ProgressBar: boolean isIndeterminate()>:<public synchronized>:<android.widget.ProgressBar:android.view.View>
<android.preference.RingtonePreference: void onSaveRingtone(android.net.Uri)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.app.NativeActivity: void surfaceDestroyed(android.view.SurfaceHolder)>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>:<public>:<android.animation.LayoutTransition>
<android.text.method.BaseMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<org.apache.http.impl.conn.Wire: void input(byte[],int,int)>:<public>:<org.apache.http.impl.conn.Wire>
<android.preference.PreferenceActivity: void startPreferenceFragment(android.app.Fragment,boolean)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.view.animation.AnimationSet: void initialize(int,int,int,int)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.graphics.Interpolator.Result: void <init>(java.lang.String,int)>:<private>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>:<protected>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.OverScroller: void <init>(android.content.Context)>:<public>:<android.widget.OverScroller>
<android.database.ContentObservable: void <init>()>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.preference.Preference: boolean persistFloat(float)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.opengl.GLES20: void glCompileShader(int)>:<public static native>:<android.opengl.GLES20>
<android.app.Dialog: void setFeatureDrawableResource(int,int)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.LauncherActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>:<protected>:<android.app.LauncherActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>:<public abstract>:<org.apache.http.client.HttpClient>
<dalvik.system.PathClassLoader: java.lang.String findLibrary(java.lang.String)>:<public>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<org.apache.http.impl.client.RequestWrapper: int getExecCount()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<org.apache.http.impl.io.SocketInputBuffer: void <init>(java.net.Socket,int,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.SocketInputBuffer:org.apache.http.impl.io.AbstractSessionInputBuffer>
<android.text.Layout: int getWidth()>:<public final>:<android.text.Layout>
<android.webkit.WebSettings: void setUseDoubleTree(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965PortAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.provider.ContactsContract.CommonDataKinds.Event: int getTypeResource(java.lang.Integer)>:<public static>:<android.provider.ContactsContract.CommonDataKinds.Event:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.ProgressBar: void onAttachedToWindow()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.text.Layout: int getLineEnd(int)>:<public final>:<android.text.Layout>
<org.apache.http.conn.routing.RouteInfo: boolean isSecure()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(java.lang.String)>:<public>:<org.apache.http.impl.io.AbstractSessionOutputBuffer:org.apache.http.io.SessionOutputBuffer>
<org.apache.http.client.protocol.RequestProxyAuthentication: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.client.protocol.RequestProxyAuthentication:org.apache.http.HttpRequestInterceptor>
<android.widget.AbsListView: void setCacheColorHint(int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int,int,int)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)>:<public static>:<android.view.animation.AnimationUtils>
<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>:<public>:<android.media.MediaScannerConnection:android.content.ServiceConnection>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)>:<public>:<android.hardware.usb.UsbManager>
<android.media.MediaPlayer.OnBufferingUpdateListener: void onBufferingUpdate(android.media.MediaPlayer,int)>:<public abstract>:<android.media.MediaPlayer.OnBufferingUpdateListener>
<android.graphics.Path: boolean isInverseFillType()>:<public>:<android.graphics.Path>
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.view.InputDevice: int describeContents()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.text.LoginFilter: void onStart()>:<public>:<android.text.LoginFilter:android.text.InputFilter>
<android.view.View: boolean isClickable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.usb.UsbDevice: int describeContents()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.preference.Preference: void setIcon(android.graphics.drawable.Drawable)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenEnd(java.lang.CharSequence,int)>:<public>:<android.widget.MultiAutoCompleteTextView.CommaTokenizer:android.widget.MultiAutoCompleteTextView.Tokenizer>
<android.database.CursorJoiner: android.database.CursorJoiner.Result next()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.preference.PreferenceActivity: void onContentChanged()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.util.Xml: void parse(java.io.InputStream,android.util.Xml.Encoding,org.xml.sax.ContentHandler)>:<public static>:<android.util.Xml>
<android.content.Intent.ShortcutIconResource: void <init>()>:<public>:<android.content.Intent.ShortcutIconResource:android.os.Parcelable>
<android.widget.TextView: int getCompoundPaddingLeft()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockCursor: void registerContentObserver(android.database.ContentObserver)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.content.ContentProviderOperation: boolean isReadOperation()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>:<public>:<android.net.http.SslCertificate>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.view.View: void setScrollContainer(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.telephony.gsm.SmsMessage: int getProtocolIdentifier()>:<public>:<android.telephony.gsm.SmsMessage>
<android.widget.Spinner: void <init>(android.content.Context)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.ComponentName: java.lang.String getShortClassName()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: android.renderscript.ProgramFragmentFixedFunction.Builder.Format[] values()>:<public static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[])>:<public>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>:<public static>:<org.apache.http.client.utils.URLEncodedUtils>
<android.net.sip.SipSession: void answerCall(java.lang.String,int)>:<public>:<android.net.sip.SipSession>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.NumberPicker: int getMinValue()>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.graphics.ColorMatrix: void preConcat(android.graphics.ColorMatrix)>:<public>:<android.graphics.ColorMatrix>
<android.test.mock.MockCursor: int getInt(int)>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.Chronometer: void onDetachedFromWindow()>:<protected>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<org.apache.http.impl.conn.DefaultClientConnection: void shutdown()>:<public>:<org.apache.http.impl.conn.DefaultClientConnection:org.apache.http.impl.SocketHttpClientConnection,org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.conn.OperatedClientConnection>
<android.util.TypedValue: java.lang.String toString()>:<public>:<android.util.TypedValue>
<android.content.SyncResult: java.lang.String toString()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>:<public final>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.hardware.Camera.Parameters: void <init>(android.hardware.Camera)>:<>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.Animatable: boolean isRunning()>:<public abstract>:<android.graphics.drawable.Animatable>
<android.telephony.SmsMessage: boolean isReplyPathPresent()>:<public>:<android.telephony.SmsMessage>
<android.text.style.AlignmentSpan.Standard: void <init>(android.os.Parcel)>:<public>:<android.text.style.AlignmentSpan.Standard:android.text.style.AlignmentSpan,android.text.ParcelableSpan>
<android.content.pm.InstrumentationInfo: java.lang.String toString()>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.HttpMessage: void removeHeaders(java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)>:<public static>:<org.apache.http.util.EncodingUtils>
<android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.util.LogPrinter: void println(java.lang.String)>:<public>:<android.util.LogPrinter:android.util.Printer>
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>:<public>:<android.content.res.Resources>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>:<public final>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.WallpaperManager: void clear()>:<public>:<android.app.WallpaperManager>
<android.app.UiModeManager: int getNightMode()>:<public>:<android.app.UiModeManager>
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>:<public static>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.database.CursorWindow: int getType(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.preference.PreferenceActivity: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.content.BroadcastReceiver.PendingResult: boolean getAbortBroadcast()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.view.KeyEvent: int getRepeatCount()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.pm.PermissionGroupInfo: java.lang.String toString()>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.cookie.Cookie: java.lang.String getDomain()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>:<public>:<android.view.animation.LayoutAnimationController>
<android.app.SearchManager: void onCancel(android.content.DialogInterface)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<org.apache.http.protocol.SyncBasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)>:<public synchronized>:<org.apache.http.protocol.SyncBasicHttpContext:org.apache.http.protocol.BasicHttpContext>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentEncoding()>:<public>:<org.apache.http.entity.AbstractHttpEntity:org.apache.http.HttpEntity>
<android.app.Activity: void onStop()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.test.mock.MockContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.accounts.AccountManagerFuture: boolean isDone()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.webkit.WebView: void onMeasure(int,int)>:<protected>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>(android.renderscript.RenderScriptGL.SurfaceConfig)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.animation.ObjectAnimator: void setupStartValues()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.net.sip.SipSession: java.lang.String getLocalIp()>:<public>:<android.net.sip.SipSession>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void finalize()>:<protected>:<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.util.SparseIntArray: void put(int,int)>:<public>:<android.util.SparseIntArray>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint)>:<public>:<android.graphics.LayerRasterizer:android.graphics.Rasterizer>
<android.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.database.AbstractWindowedCursor: boolean hasWindow()>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.webkit.WebView: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>:<public static>:<android.view.ViewConfiguration>
<org.apache.http.HttpEntity: long getContentLength()>:<public abstract>:<org.apache.http.HttpEntity>
<android.webkit.WebSettings: java.lang.String getPluginsPath()>:<public synchronized>:<android.webkit.WebSettings>
<android.media.MediaPlayer: void setDataSource(java.lang.String)>:<public native>:<android.media.MediaPlayer>
<android.graphics.drawable.LayerDrawable: void setId(int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.gesture.GestureOverlayView: void removeOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setInverseBackgroundForced(boolean)>:<public>:<android.app.AlertDialog.Builder>
<android.location.Address: java.lang.String getSubThoroughfare()>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.AlphabetIndexer: void onChanged()>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<org.json.JSONArray: org.json.JSONArray put(double)>:<public>:<org.json.JSONArray>
<android.os.Vibrator: boolean hasVibrator()>:<public>:<android.os.Vibrator>
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.view.MenuItem: android.view.SubMenu getSubMenu()>:<public abstract>:<android.view.MenuItem>
<android.webkit.URLUtil: boolean isContentUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: void <init>(org.apache.http.impl.conn.tsccm.BasicPoolEntry,java.lang.ref.ReferenceQueue)>:<public>:<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:java.lang.ref.WeakReference,java.lang.ref.Reference>
<android.os.Parcel: void writeByte(byte)>:<public final>:<android.os.Parcel>
<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.TestFailure: java.lang.String exceptionMessage()>:<public>:<junit.framework.TestFailure>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)>:<public>:<android.telephony.PhoneStateListener>
<android.test.MoreAsserts: void assertEquals(java.lang.String,java.util.Set,java.util.Set)>:<public static>:<android.test.MoreAsserts>
<android.os.Looper: java.lang.Thread getThread()>:<public>:<android.os.Looper>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>:<public final>:<android.os.Handler>
<android.os.Debug: int getBinderLocalObjectCount()>:<public static final native>:<android.os.Debug>
<android.mtp.MtpDevice: java.lang.String toString()>:<public>:<android.mtp.MtpDevice>
<android.view.View: void setOnClickListener(android.view.View.OnClickListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CursorTreeAdapter: void changeCursor(android.database.Cursor)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.opengl.GLSurfaceView: void onPause()>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.database.MergeCursor: void deactivate()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.widget.AbsListView: int computeVerticalScrollOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.util.Pair: boolean equals(java.lang.Object)>:<public>:<android.util.Pair>
<android.view.Surface: void unfreeze()>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.telephony.gsm.SmsMessage.SubmitPdu: void <init>()>:<public>:<android.telephony.gsm.SmsMessage.SubmitPdu>
<android.test.TouchUtils: void drag(android.test.InstrumentationTestCase,float,float,float,float,int)>:<public static>:<android.test.TouchUtils>
<android.nfc.Tag: java.lang.String[] getTechList()>:<public>:<android.nfc.Tag:android.os.Parcelable>
<android.text.DynamicLayout: int getLineStart(int)>:<public>:<android.text.DynamicLayout:android.text.Layout>
<android.net.wifi.WifiConfiguration.Status: void <init>()>:<>:<android.net.wifi.WifiConfiguration.Status>
<android.view.ViewGroup: void detachViewFromParent(android.view.View)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.framework.Assert: void <init>()>:<protected>:<junit.framework.Assert>
<android.content.AsyncQueryHandler: void startInsert(int,java.lang.Object,android.net.Uri,android.content.ContentValues)>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.widget.RemoteViews: void setEmptyView(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.res.Configuration: void setTo(android.content.res.Configuration)>:<public>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.graphics.drawable.shapes.OvalShape: void <init>()>:<public>:<android.graphics.drawable.shapes.OvalShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri)>:<public>:<android.drm.DrmManagerClient>
<android.media.AudioRecord: void startRecording()>:<public>:<android.media.AudioRecord>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>:<public abstract>:<android.view.ScaleGestureDetector.OnScaleGestureListener>
<android.net.UrlQuerySanitizer: void <init>()>:<public>:<android.net.UrlQuerySanitizer>
<android.view.Window: void makeActive()>:<public final>:<android.view.Window>
<android.database.sqlite.SQLiteProgram: void close()>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<org.apache.http.entity.ByteArrayEntity: long getContentLength()>:<public>:<org.apache.http.entity.ByteArrayEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.preference.PreferenceGroup: boolean addPreference(android.preference.Preference)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.inputmethodservice.Keyboard.Key: int[] getCurrentDrawableState()>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.os.Parcel: void writeException(java.lang.Exception)>:<public final>:<android.os.Parcel>
<android.inputmethodservice.InputMethodService: int getBackDisposition()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.hardware.usb.UsbDeviceConnection: boolean releaseInterface(android.hardware.usb.UsbInterface)>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.widget.TabHost: void dispatchWindowFocusChanged(boolean)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.opengl.GLES11: boolean glIsTexture(int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.view.ViewStub:android.view.View>
<android.view.ViewGroup: void setDescendantFocusability(int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.client.BasicCredentialsProvider: void clear()>:<public synchronized>:<org.apache.http.impl.client.BasicCredentialsProvider:org.apache.http.client.CredentialsProvider>
<android.text.style.LeadingMarginSpan.Standard: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<org.apache.http.entity.HttpEntityWrapper: long getContentLength()>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.widget.TextView: void setHorizontallyScrolling(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard.Key)>:<protected>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<org.apache.http.impl.io.AbstractSessionInputBuffer: java.lang.String readLine()>:<public>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.widget.RelativeLayout.LayoutParams: void addRule(int)>:<public>:<android.widget.RelativeLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.nfc.tech.NfcF: void connect()>:<public volatile>:<android.nfc.tech.NfcF:android.nfc.tech.BasicTagTechnology>
<android.content.pm.InstrumentationInfo: int describeContents()>:<public>:<android.content.pm.InstrumentationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.AsyncQueryHandler: android.os.Handler createHandler(android.os.Looper)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit)>:<public abstract>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>:<public static>:<android.telephony.SmsMessage>
<android.text.method.TimeKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.TimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.Instrumentation: void sendKeyDownUpSync(int)>:<public>:<android.app.Instrumentation>
<org.apache.http.ProtocolVersion: void <init>(java.lang.String,int,int)>:<public>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.widget.AutoCompleteTextView: void setListSelection(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.app.Notification: void <init>()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.widget.SimpleAdapter: android.widget.SimpleAdapter.ViewBinder getViewBinder()>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<junit.framework.TestResult: void stop()>:<public synchronized>:<junit.framework.TestResult>
<org.apache.http.impl.cookie.BasicClientCookie: boolean isExpired(java.util.Date)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES10>
<android.webkit.WebBackForwardList: int getCurrentIndex()>:<public synchronized>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<android.graphics.Picture: void draw(android.graphics.Canvas)>:<public>:<android.graphics.Picture>
<org.xmlpull.v1.XmlSerializer: int getDepth()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES20>
<android.preference.PreferenceManager.OnActivityDestroyListener: void onActivityDestroy()>:<public abstract>:<android.preference.PreferenceManager.OnActivityDestroyListener>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[])>:<public>:<android.content.res.AssetFileDescriptor.AutoCloseOutputStream:android.os.ParcelFileDescriptor.AutoCloseOutputStream,java.io.FileOutputStream,java.io.OutputStream>
<android.util.MonthDisplayHelper: int getYear()>:<public>:<android.util.MonthDisplayHelper>
<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>:<public>:<org.xmlpull.v1.XmlPullParserException:java.lang.Exception,java.lang.Throwable>
<android.telephony.PhoneNumberFormattingTextWatcher: void <init>()>:<public>:<android.telephony.PhoneNumberFormattingTextWatcher:android.text.TextWatcher>
<android.telephony.gsm.SmsMessage: java.lang.String getServiceCenterAddress()>:<public>:<android.telephony.gsm.SmsMessage>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<org.apache.http.conn.BasicManagedEntity: void abortConnection()>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.text.method.ArrowKeyMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.app.ActivityManager.MemoryInfo: void <init>()>:<public>:<android.app.ActivityManager.MemoryInfo:android.os.Parcelable>
<android.media.MediaPlayer: boolean isPlaying()>:<public native>:<android.media.MediaPlayer>
<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.text.SpannedString: int getSpanEnd(java.lang.Object)>:<public volatile>:<android.text.SpannedString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spanned>
<android.widget.TabHost: void setCurrentTab(int)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.telephony.ServiceState: void setStateOff()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.os.FileObserver: void onEvent(int,java.lang.String)>:<public abstract>:<android.os.FileObserver>
<android.telephony.gsm.SmsMessage.MessageClass: android.telephony.gsm.SmsMessage.MessageClass valueOf(java.lang.String)>:<public static>:<android.telephony.gsm.SmsMessage.MessageClass:java.lang.Enum>
<org.apache.http.util.EncodingUtils: void <init>()>:<>:<org.apache.http.util.EncodingUtils>
<org.apache.http.message.BasicStatusLine: java.lang.String toString()>:<public>:<org.apache.http.message.BasicStatusLine:org.apache.http.StatusLine,java.lang.Cloneable>
<android.widget.LinearLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected volatile>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.os.MemoryFile: boolean isPurgingAllowed()>:<public>:<android.os.MemoryFile>
<android.text.style.StyleSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.apache.http.client.methods.HttpGet: void <init>(java.net.URI)>:<public>:<org.apache.http.client.methods.HttpGet:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>:<public>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.pm.Signature: java.lang.String toCharsString()>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.view.SoundEffectConstants: void <init>()>:<>:<android.view.SoundEffectConstants>
<org.apache.http.message.BasicHeaderValueFormatter: java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter)>:<public static final>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>:<public static>:<android.opengl.GLUtils>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)>:<public static>:<android.graphics.Typeface>
<android.renderscript.Font.Style: android.renderscript.Font.Style valueOf(java.lang.String)>:<public static>:<android.renderscript.Font.Style:java.lang.Enum>
<android.view.KeyEvent: boolean isScrollLockOn()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.os.FileObserver: void <init>(java.lang.String,int)>:<public>:<android.os.FileObserver>
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: int getDuration()>:<public native>:<android.media.MediaPlayer>
<dalvik.system.DexFile: boolean isDexOptNeeded(java.lang.String)>:<public static native>:<dalvik.system.DexFile>
<android.widget.TextView: int getTotalPaddingLeft()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.LinearLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected volatile>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.EditorInfo: int describeContents()>:<public>:<android.view.inputmethod.EditorInfo:android.text.InputType,android.os.Parcelable>
<android.widget.AbsSpinner: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>:<protected>:<android.widget.AbsSpinner:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.Rect: int centerY()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>:<public static native>:<android.net.TrafficStats>
<android.content.res.AssetFileDescriptor: long getLength()>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.widget.AdapterView: void setAdapter(android.widget.Adapter)>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.database.CursorJoiner: void remove()>:<public>:<android.database.CursorJoiner:java.util.Iterator,java.lang.Iterable>
<android.os.Parcel: void readFloatArray(float[])>:<public final>:<android.os.Parcel>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.ViewAnimator: android.view.View getCurrentView()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()>:<public>:<org.apache.http.impl.DefaultConnectionReuseStrategy:org.apache.http.ConnectionReuseStrategy>
<org.apache.http.FormattedHeader: int getValuePos()>:<public abstract>:<org.apache.http.FormattedHeader:org.apache.http.Header>
<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion)>:<public abstract>:<org.apache.http.message.LineFormatter>
<android.preference.DialogPreference: void onClick()>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<org.apache.http.message.BasicLineFormatter: void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine)>:<protected>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<android.widget.SearchView: void setOnCloseListener(android.widget.SearchView.OnCloseListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.text.style.RelativeSizeSpan: int describeContents()>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>:<public abstract>:<org.apache.commons.logging.Log>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: void onUserInteraction()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<org.apache.http.impl.HttpConnectionMetricsImpl: void reset()>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,int,int,int)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.animation.CycleInterpolator: void <init>(float)>:<public>:<android.view.animation.CycleInterpolator:android.view.animation.Interpolator>
<org.apache.http.message.LineParser: boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public abstract>:<org.apache.http.message.LineParser>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>:<public abstract>:<android.app.FragmentTransaction>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.provider.ContactsContract.CommonDataKinds: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds>
<android.test.mock.MockContext: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.ContextWrapper: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.Fragment: boolean isHidden()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.HttpRequestFactory: org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String)>:<public abstract>:<org.apache.http.HttpRequestFactory>
<android.graphics.Matrix: boolean postSkew(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.renderscript.Script: void invoke(int)>:<protected>:<android.renderscript.Script:android.renderscript.BaseObj>
<android.text.util.Rfc822Token: void setName(java.lang.String)>:<public>:<android.text.util.Rfc822Token>
<android.test.mock.MockCursor: int getColumnCount()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.widget.TextView: int getSelectionEnd()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.net.TrafficStats: long getMobileTxBytes()>:<public static native>:<android.net.TrafficStats>
<android.view.Window: int getVolumeControlStream()>:<public abstract>:<android.view.Window>
<android.widget.ExpandableListView: long getSelectedId()>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.Contacts.Intents.UI: void <init>()>:<public>:<android.provider.Contacts.Intents.UI>
<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>:<public>:<android.app.backup.RestoreObserver>
<org.apache.http.message.BasicNameValuePair: java.lang.String getValue()>:<public>:<org.apache.http.message.BasicNameValuePair:org.apache.http.NameValuePair,java.lang.Cloneable>
<android.view.View: void setSystemUiVisibility(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.AbsListView: void addTouchables(java.util.ArrayList)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceManager.OnActivityStopListener: void onActivityStop()>:<public abstract>:<android.preference.PreferenceManager.OnActivityStopListener>
<android.util.PrintStreamPrinter: void println(java.lang.String)>:<public>:<android.util.PrintStreamPrinter:android.util.Printer>
<android.hardware.usb.UsbAccessory: int describeContents()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType[] values()>:<public static>:<android.renderscript.Element.DataType:java.lang.Enum>
<android.os.Message: void setTarget(android.os.Handler)>:<public>:<android.os.Message:android.os.Parcelable>
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.FragmentTransaction: android.app.FragmentTransaction show(android.app.Fragment)>:<public abstract>:<android.app.FragmentTransaction>
<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)>:<public static>:<android.content.IntentFilter:android.os.Parcelable>
<org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPoolEntry>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.Font: android.renderscript.Font createFromResource(android.renderscript.RenderScript,android.content.res.Resources,int,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<android.view.ViewTreeObserver.OnScrollChangedListener: void onScrollChanged()>:<public abstract>:<android.view.ViewTreeObserver.OnScrollChangedListener>
<android.media.audiofx.PresetReverb: void setParameterListener(android.media.audiofx.PresetReverb.OnParameterChangeListener)>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.view.View: void onVisibilityChanged(android.view.View,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.hardware.GeomagneticField: void <init>(float,float,float,long)>:<public>:<android.hardware.GeomagneticField>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,byte[],int)>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager.CacheResult)>:<public static>:<android.webkit.CacheManager>
<android.preference.Preference: void setShouldDisableView(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.database.MergeCursor: boolean requery()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.widget.TextView: void setMinLines(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.drawable.AnimationDrawable: void start()>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.text.method.DateTimeKeyListener: void <init>()>:<public>:<android.text.method.DateTimeKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.view.Menu: android.view.MenuItem getItem(int)>:<public abstract>:<android.view.Menu>
<android.provider.SyncStateContract.Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.app.ActivityManager: int getMemoryClass()>:<public>:<android.app.ActivityManager>
<android.media.AudioTrack: int getNativeOutputSampleRate(int)>:<public static>:<android.media.AudioTrack>
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader)>:<public static final>:<org.apache.http.util.VersionInfo>
<android.widget.RatingBar: boolean isIndicator()>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.database.AbstractCursor.SelfContentObserver: void onChange(boolean)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.location.Criteria: boolean isCostAllowed()>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.content.res.Resources.Theme: void applyStyle(int,boolean)>:<public>:<android.content.res.Resources.Theme>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>:<public>:<android.graphics.Interpolator>
<org.apache.http.impl.auth.BasicScheme: void processChallenge(org.apache.http.Header)>:<public>:<org.apache.http.impl.auth.BasicScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>:<public static>:<android.os.RecoverySystem>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.conn.routing.HttpRoute: int hashCode()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.graphics.Color: int HSVToColor(float[])>:<public static>:<android.graphics.Color>
<org.apache.http.impl.cookie.AbstractCookieSpec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>:<public>:<org.apache.http.impl.cookie.AbstractCookieSpec:org.apache.http.cookie.CookieSpec>
<android.app.admin.DevicePolicyManager: void wipeData(int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>:<public abstract>:<android.content.pm.PackageManager>
<android.media.MediaMetadataRetriever: void release()>:<public native>:<android.media.MediaMetadataRetriever>
<android.text.Spanned: int getSpanEnd(java.lang.Object)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.content.AsyncQueryHandler: void startDelete(int,java.lang.Object,android.net.Uri,java.lang.String,java.lang.String[])>:<public final>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.webkit.WebSettings: boolean getSaveFormData()>:<public>:<android.webkit.WebSettings>
<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.DexClassLoader:java.lang.ClassLoader>
<org.apache.http.protocol.HttpService: void setResponseFactory(org.apache.http.HttpResponseFactory)>:<public>:<org.apache.http.protocol.HttpService>
<org.apache.http.cookie.SetCookie: void setDomain(java.lang.String)>:<public abstract>:<org.apache.http.cookie.SetCookie:org.apache.http.cookie.Cookie>
<android.widget.TextView: void append(java.lang.CharSequence)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.mock.MockCursor: void close()>:<public>:<android.test.mock.MockCursor:android.database.Cursor>
<android.net.rtp.AudioGroup: void <init>()>:<public>:<android.net.rtp.AudioGroup>
<android.text.style.BackgroundColorSpan: int describeContents()>:<public>:<android.text.style.BackgroundColorSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.webkit.WebView: void stopLoading()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.webkit.DateSorter: void <init>(android.content.Context)>:<public>:<android.webkit.DateSorter>
<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)>:<public static>:<android.os.ParcelUuid:android.os.Parcelable>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler)>:<public>:<android.view.GestureDetector>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.HierarchyTraceType)>:<public static>:<android.view.ViewDebug>
<android.renderscript.Font: android.renderscript.Font createFromFile(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,float)>:<public static>:<android.renderscript.Font:android.renderscript.BaseObj>
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>:<public>:<android.telephony.TelephonyManager>
<android.database.AbstractCursor: boolean move(int)>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.graphics.Paint.Style: void <init>(java.lang.String,int)>:<private>:<android.graphics.Paint.Style:java.lang.Enum>
<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSRuntimeException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.text.method.SingleLineTransformationMethod: void <init>()>:<public>:<android.text.method.SingleLineTransformationMethod:android.text.method.ReplacementTransformationMethod>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>:<public static>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.graphics.Paint: int getColor()>:<public native>:<android.graphics.Paint>
<android.widget.VideoView: void setVideoURI(android.net.Uri)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.database.CursorWrapper: boolean isFirst()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<org.apache.http.protocol.HttpService: void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver)>:<public>:<org.apache.http.protocol.HttpService>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation build()>:<public>:<android.content.ContentProviderOperation.Builder>
<android.widget.VideoView: void stopPlayback()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.webkit.CookieManager: boolean hasCookies()>:<public synchronized>:<android.webkit.CookieManager>
<android.database.CursorWindow: void onAllReferencesReleased()>:<protected>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<org.apache.http.conn.BasicManagedEntity: boolean streamClosed(java.io.InputStream)>:<public>:<org.apache.http.conn.BasicManagedEntity:org.apache.http.entity.HttpEntityWrapper,org.apache.http.conn.ConnectionReleaseTrigger,org.apache.http.conn.EofSensorWatcher>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context,android.content.ComponentName)>:<public static>:<android.speech.SpeechRecognizer>
<android.webkit.WebSettings: android.webkit.WebSettings.ZoomDensity getDefaultZoom()>:<public>:<android.webkit.WebSettings>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl valueOf(java.lang.String)>:<public static>:<android.renderscript.Allocation.MipmapControl:java.lang.Enum>
<android.view.inputmethod.InputMethod.SessionCallback: void sessionCreated(android.view.inputmethod.InputMethodSession)>:<public abstract>:<android.view.inputmethod.InputMethod.SessionCallback>
<org.apache.http.message.BasicHeaderIterator: void <init>(org.apache.http.Header[],java.lang.String)>:<public>:<org.apache.http.message.BasicHeaderIterator:org.apache.http.HeaderIterator>
<android.database.DataSetObserver: void onChanged()>:<public>:<android.database.DataSetObserver>
<android.webkit.WebView: boolean pageDown(boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.app.Dialog: void <init>(android.content.Context,int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.Fragment: int getId()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<org.apache.http.conn.routing.RouteInfo: int getHopCount()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.app.ActionBar.TabListener: void onTabReselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>:<public abstract>:<android.app.ActionBar.TabListener>
<android.content.MutableContextWrapper: void setBaseContext(android.content.Context)>:<public>:<android.content.MutableContextWrapper:android.content.ContextWrapper,android.content.Context>
<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>:<public static>:<android.content.IntentSender:android.os.Parcelable>
<android.graphics.Camera: void translate(float,float,float)>:<public native>:<android.graphics.Camera>
<android.widget.CalendarView: void <init>(android.content.Context)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.AbstractHttpClientConnection: void assertOpen()>:<protected abstract>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.graphics.drawable.shapes.RoundRectShape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.location.LocationProvider: boolean requiresNetwork()>:<public abstract>:<android.location.LocationProvider>
<android.test.InstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()>:<protected>:<android.test.InstrumentationTestRunner:android.app.Instrumentation,android.test.TestSuiteProvider>
<android.widget.PopupWindow: void showAsDropDown(android.view.View)>:<public>:<android.widget.PopupWindow>
<android.widget.AlphabetIndexer: int compare(java.lang.String,java.lang.String)>:<protected>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>:<public>:<android.app.LocalActivityManager>
<android.test.IsolatedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.webkit.ConsoleMessage: void <init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage.MessageLevel)>:<public>:<android.webkit.ConsoleMessage>
<org.apache.http.io.SessionOutputBuffer: void writeLine(java.lang.String)>:<public abstract>:<org.apache.http.io.SessionOutputBuffer>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureOverlayView: void removeAllOnGesturingListeners()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader.TileMode)>:<public final>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.media.audiofx.Virtualizer: void <init>(int,int)>:<public>:<android.media.audiofx.Virtualizer:android.media.audiofx.AudioEffect>
<android.webkit.DateSorter: java.lang.String getLabel(int)>:<public>:<android.webkit.DateSorter>
<android.text.method.BaseMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>:<public>:<android.media.MediaMetadataRetriever>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.provider.Contacts.ContactMethods: java.lang.String encodePredefinedImProtocol(int)>:<public static>:<android.provider.Contacts.ContactMethods:android.provider.BaseColumns,android.provider.Contacts.ContactMethodsColumns,android.provider.Contacts.PeopleColumns>
<android.graphics.Path: void rewind()>:<public>:<android.graphics.Path>
<android.view.View: android.view.View findFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.InstrumentationTestCase: void runTestOnUiThread(java.lang.Runnable)>:<public>:<android.test.InstrumentationTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.app.ActivityManager.RecentTaskInfo: void <clinit>()>:<static>:<android.app.ActivityManager.RecentTaskInfo:android.os.Parcelable>
<android.app.backup.FileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>:<public>:<android.app.backup.FileBackupHelper:android.app.backup.FileBackupHelperBase,android.app.backup.BackupHelper>
<android.graphics.Region: void setEmpty()>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.inputmethodservice.KeyboardView: void onDetachedFromWindow()>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.SearchView: void setSubmitButtonEnabled(boolean)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.nfc.NdefMessage: int describeContents()>:<public>:<android.nfc.NdefMessage:android.os.Parcelable>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetNewHeader()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>:<public>:<android.hardware.usb.UsbManager>
<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])>:<public>:<org.apache.http.impl.io.ContentLengthInputStream:java.io.InputStream>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setProtocol(java.lang.String)>:<public>:<android.net.sip.SipProfile.Builder>
<android.view.GestureDetector: boolean isLongpressEnabled()>:<public>:<android.view.GestureDetector>
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>:<public>:<android.graphics.Paint>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(android.graphics.drawable.Drawable)>:<public abstract>:<android.app.ActionBar.Tab>
<android.graphics.Rect: int height()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.media.Ringtone: void setStreamType(int)>:<public>:<android.media.Ringtone>
<android.view.ActionMode.Callback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>:<public abstract>:<android.view.ActionMode.Callback>
<android.preference.Preference: void setIcon(int)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.graphics.Region.Op: android.graphics.Region.Op valueOf(java.lang.String)>:<public static>:<android.graphics.Region.Op:java.lang.Enum>
<android.content.BroadcastReceiver.PendingResult: int getResultCode()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.view.View: boolean isEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>:<public>:<android.graphics.Paint>
<org.apache.http.conn.BasicEofSensorWatcher: boolean streamClosed(java.io.InputStream)>:<public>:<org.apache.http.conn.BasicEofSensorWatcher:org.apache.http.conn.EofSensorWatcher>
<android.app.Activity: void setFeatureDrawableResource(int,int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.View: boolean showContextMenu()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.KeyCharacterMap: boolean isPrintingKey(int)>:<public>:<android.view.KeyCharacterMap>
<android.preference.Preference: java.lang.CharSequence getTitle()>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.impl.cookie.DateParseException: void <init>(java.lang.String)>:<public>:<org.apache.http.impl.cookie.DateParseException:java.lang.Exception,java.lang.Throwable>
<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.view.ViewGroup: void scheduleLayoutAnimation()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.test.TouchUtils: int dragViewToX(android.test.ActivityInstrumentationTestCase,android.view.View,int,int)>:<public static>:<android.test.TouchUtils>
<android.animation.AnimatorSet: void playSequentially(java.util.List)>:<public>:<android.animation.AnimatorSet:android.animation.Animator>
<android.content.SearchRecentSuggestionsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)>:<public>:<android.media.AudioManager>
<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public abstract>:<android.text.method.KeyListener>
<android.content.Context: android.content.res.Resources getResources()>:<public abstract>:<android.content.Context>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>:<public static>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.MotionEvent: void addBatch(long,android.view.MotionEvent.PointerCoords[],int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.accounts.OnAccountsUpdateListener: void onAccountsUpdated(android.accounts.Account[])>:<public abstract>:<android.accounts.OnAccountsUpdateListener>
<android.view.accessibility.AccessibilityEvent: void setFullScreen(boolean)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>:<public synchronized>:<org.apache.http.cookie.CookieSpecRegistry>
<android.widget.RadioButton: void <init>(android.content.Context)>:<public>:<android.widget.RadioButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface.OnKeyListener)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.ListView: void layoutChildren()>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.auth.UsernamePasswordCredentials: void <init>(java.lang.String)>:<public>:<org.apache.http.auth.UsernamePasswordCredentials:org.apache.http.auth.Credentials>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>:<public>:<android.accounts.AccountManager>
<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>(java.lang.String)>:<public>:<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.IntentFilter: java.util.Iterator typesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.content.ContentQueryMap: java.util.Map getRows()>:<public synchronized>:<android.content.ContentQueryMap:java.util.Observable>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>:<public final>:<org.apache.http.conn.ssl.AllowAllHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<org.apache.http.entity.EntityTemplate: void consumeContent()>:<public>:<org.apache.http.entity.EntityTemplate:org.apache.http.entity.AbstractHttpEntity>
<android.app.DatePickerDialog: void onDateChanged(android.widget.DatePicker,int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.content.AsyncQueryHandler: void onInsertComplete(int,java.lang.Object,android.net.Uri)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>:<public>:<android.graphics.Canvas>
<android.graphics.Paint: boolean isSubpixelText()>:<public final>:<android.graphics.Paint>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>:<public final synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.View: void setOnLongClickListener(android.view.View.OnLongClickListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDropBox()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>:<public>:<android.graphics.drawable.shapes.RoundRectShape:android.graphics.drawable.shapes.RectShape,android.graphics.drawable.shapes.Shape>
<android.media.MediaRecorder: void setAudioSource(int)>:<public native>:<android.media.MediaRecorder>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>:<public abstract>:<android.accounts.AccountManagerFuture>
<android.view.VelocityTracker: float getYVelocity(int)>:<public>:<android.view.VelocityTracker>
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.test.InstrumentationTestSuite: void <init>(java.lang.String,android.app.Instrumentation)>:<public>:<android.test.InstrumentationTestSuite:junit.framework.TestSuite>
<android.content.IntentSender: android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel)>:<public static>:<android.content.IntentSender:android.os.Parcelable>
<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue.IdleHandler)>:<public final>:<android.os.MessageQueue>
<android.view.inputmethod.InputConnection: boolean endBatchEdit()>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.widget.TableLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.view.View: void onDisplayHint(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.speech.tts.TextToSpeech: int isLanguageAvailable(java.util.Locale)>:<public>:<android.speech.tts.TextToSpeech>
<android.database.MergeCursor: boolean onMove(int,int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()>:<public>:<android.mtp.MtpDevice>
<android.location.Criteria: void setAltitudeRequired(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.AdapterView.OnItemSelectedListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>:<public abstract>:<android.widget.AdapterView.OnItemSelectedListener>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>:<public>:<android.view.ViewConfiguration>
<android.util.PrintWriterPrinter: void println(java.lang.String)>:<public>:<android.util.PrintWriterPrinter:android.util.Printer>
<org.apache.http.impl.cookie.BestMatchSpecFactory: void <init>()>:<public>:<org.apache.http.impl.cookie.BestMatchSpecFactory:org.apache.http.cookie.CookieSpecFactory>
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader.TileMode)>:<public>:<android.graphics.LinearGradient:android.graphics.Shader>
<android.graphics.Matrix: void <init>()>:<public>:<android.graphics.Matrix>
<android.renderscript.FileA3D: android.renderscript.FileA3D.IndexEntry getIndexEntry(int)>:<public>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.net.rtp.RtpStream: void release()>:<public>:<android.net.rtp.RtpStream>
<android.graphics.Paint: int getAlpha()>:<public native>:<android.graphics.Paint>
<android.media.RingtoneManager: android.database.Cursor getCursor()>:<public>:<android.media.RingtoneManager>
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>:<public>:<android.content.res.TypedArray>
<org.apache.http.conn.routing.BasicRouteDirector: int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>:<protected>:<org.apache.http.conn.routing.BasicRouteDirector:org.apache.http.conn.routing.HttpRouteDirector>
<android.os.Bundle: void putByteArray(java.lang.String,byte[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.TableLayout: void requestLayout()>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.Message: void writeToParcel(android.os.Parcel,int)>:<public>:<android.os.Message:android.os.Parcelable>
<android.app.ListFragment: int getSelectedItemPosition()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.EnvironmentalReverb,int,int,int)>:<public abstract>:<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener>
<org.json.JSONObject: java.lang.Object opt(java.lang.String)>:<public>:<org.json.JSONObject>
<android.test.LoaderTestCase: java.lang.Object getLoaderResultSynchronously(android.content.Loader)>:<public>:<android.test.LoaderTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.hardware.Camera: void autoFocus(android.hardware.Camera.AutoFocusCallback)>:<public final>:<android.hardware.Camera>
<android.text.SpannableStringInternal: java.lang.String toString()>:<public final>:<android.text.SpannableStringInternal>
<junit.runner.BaseTestRunner: void testFailed(int,junit.framework.Test,java.lang.Throwable)>:<public abstract>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.animation.IntEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>:<public>:<android.animation.IntEvaluator:android.animation.TypeEvaluator>
<android.preference.Preference: void onPrepareForRemoval()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit[] values()>:<public static>:<android.graphics.Matrix.ScaleToFit:java.lang.Enum>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.RelativeLayout:android.view.ViewGroup,android.view.View>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsLevel(short)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.widget.DialerFilter: void onFinishInflate()>:<protected>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.AlphaAnimation:android.view.animation.Animation>
<android.text.style.LeadingMarginSpan.LeadingMarginSpan2: int getLeadingMarginLineCount()>:<public abstract>:<android.text.style.LeadingMarginSpan.LeadingMarginSpan2:android.text.style.LeadingMarginSpan,android.text.style.WrapTogetherSpan>
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff.Mode)>:<public>:<android.graphics.drawable.Drawable>
<org.apache.http.message.BasicHeader: org.apache.http.HeaderElement[] getElements()>:<public>:<org.apache.http.message.BasicHeader:org.apache.http.Header,java.lang.Cloneable>
<android.widget.AbsSeekBar: int getThumbOffset()>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.app.Dialog: void invalidateOptionsMenu()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.app.Activity: android.view.Window getWindow()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<junit.framework.Assert: void assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>:<public>:<android.content.ContentValues:android.os.Parcelable>
<junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.test.mock.MockContext: java.io.File getExternalCacheDir()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.io.ChunkedOutputStream: void <init>(org.apache.http.io.SessionOutputBuffer,int)>:<public>:<org.apache.http.impl.io.ChunkedOutputStream:java.io.OutputStream>
<org.apache.http.conn.OperatedClientConnection: void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.OperatedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.text.TextUtils: void <init>()>:<>:<android.text.TextUtils>
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>:<public>:<android.graphics.PaintFlagsDrawFilter:android.graphics.DrawFilter>
<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.media.MediaPlayer: void finalize()>:<protected>:<android.media.MediaPlayer>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(android.graphics.drawable.Drawable)>:<public>:<android.app.AlertDialog.Builder>
<android.location.Address: void setLocality(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType[] values()>:<public static>:<android.view.ViewDebug.HierarchyTraceType:java.lang.Enum>
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.net.Uri.Builder: android.net.Uri.Builder appendPath(java.lang.String)>:<public>:<android.net.Uri.Builder>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>:<public>:<android.app.AlertDialog.Builder>
<org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)>:<public>:<org.apache.http.params.HttpConnectionParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.webkit.CookieManager: void removeSessionCookie()>:<public>:<android.webkit.CookieManager>
<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>:<public abstract>:<android.view.inputmethod.InputMethod>
<android.speech.tts.TextToSpeech: int stop()>:<public>:<android.speech.tts.TextToSpeech>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>:<public native>:<android.graphics.Canvas>
<android.content.ContentResolver: java.util.List getCurrentSyncs()>:<public static>:<android.content.ContentResolver>
<android.database.DatabaseUtils.InsertHelper: void bind(int,float)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.widget.NumberPicker: void <init>(android.content.Context)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.app.DatePickerDialog: void updateDate(int,int,int)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.os.Debug: int getBinderDeathObjectCount()>:<public static final native>:<android.os.Debug>
<android.provider.Settings.Secure: void <clinit>()>:<static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValue(java.lang.String,java.lang.Object)>:<public>:<android.content.ContentProviderOperation.Builder>
<android.webkit.WebView: int getVisibleTitleHeight()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.Bundle: void putIntArray(java.lang.String,int[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.LinearLayout: void setHorizontalGravity(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.view.accessibility.AccessibilityEvent: void recycle()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()>:<public>:<android.drm.DrmManagerClient>
<android.database.MatrixCursor: android.database.MatrixCursor.RowBuilder newRow()>:<public>:<android.database.MatrixCursor:android.database.AbstractCursor>
<android.content.IntentFilter: java.lang.String getDataScheme(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>:<public>:<android.app.Instrumentation>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.hardware.Camera.Parameters: void setWhiteBalance(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<android.widget.ExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.test.mock.MockContext: java.lang.String getPackageName()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.renderscript.AllocationAdapter: void setFace(android.renderscript.Type.CubemapFace)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>:<public static>:<android.webkit.WebStorage>
<android.content.UriMatcher: int match(android.net.Uri)>:<public>:<android.content.UriMatcher>
<android.database.MergeCursor: java.lang.String[] getColumnNames()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.widget.AbsSeekBar: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.app.ActivityManager.RunningServiceInfo: void <init>()>:<public>:<android.app.ActivityManager.RunningServiceInfo:android.os.Parcelable>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>:<protected>:<android.widget.FrameLayout:android.view.ViewGroup,android.view.View>
<android.app.Service: android.os.IBinder onBind(android.content.Intent)>:<public abstract>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<android.media.audiofx.Equalizer: void setProperties(android.media.audiofx.Equalizer.Settings)>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>:<public>:<android.net.http.SslCertificate>
<android.telephony.SmsMessage.MessageClass: android.telephony.SmsMessage.MessageClass[] values()>:<public static>:<android.telephony.SmsMessage.MessageClass:java.lang.Enum>
<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.CookieSyncManager: void startSync()>:<public volatile>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.media.SoundPool: void <init>(int,int,int)>:<public>:<android.media.SoundPool>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(long)>:<public>:<android.animation.AnimatorSet.Builder>
<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView.OnQueryTextListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.view.Window: android.content.Context getContext()>:<public final>:<android.view.Window>
<android.content.Intent: void removeExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<org.apache.http.entity.FileEntity: java.io.InputStream getContent()>:<public>:<org.apache.http.entity.FileEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.widget.RadioGroup: void check(int)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.drm.DrmManagerClient: void setOnErrorListener(android.drm.DrmManagerClient.OnErrorListener)>:<public synchronized>:<android.drm.DrmManagerClient>
<android.widget.AdapterViewAnimator: void onRemoteAdapterDisconnected()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.FragmentBreadCrumbs: void onMeasure(int,int)>:<protected>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<org.apache.http.conn.params.ConnRouteParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.conn.params.ConnRouteParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.content.BroadcastReceiver.PendingResult: java.lang.String getResultData()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.view.View: void clearFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.EofSensorInputStream: void checkAbort()>:<protected>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.AbstractHttpClientConnection:org.apache.http.HttpClientConnection>
<android.hardware.usb.UsbEndpoint: int getAddress()>:<public>:<android.hardware.usb.UsbEndpoint:android.os.Parcelable>
<android.renderscript.Float4: void <init>()>:<public>:<android.renderscript.Float4>
<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.entity.BufferedHttpEntity: void <init>(org.apache.http.HttpEntity)>:<public>:<org.apache.http.entity.BufferedHttpEntity:org.apache.http.entity.HttpEntityWrapper>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>:<public synchronized>:<android.webkit.WebSettings>
<android.mtp.MtpObjectInfo: long getDateModified()>:<public final>:<android.mtp.MtpObjectInfo>
<android.webkit.WebView: java.lang.String getUrl()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.res.ColorStateList:android.os.Parcelable>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>:<protected synchronized>:<android.widget.ProgressBar:android.view.View>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.inputmethodservice.Keyboard: int getKeyWidth()>:<protected>:<android.inputmethodservice.Keyboard>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setTexture(android.renderscript.Matrix4f)>:<public>:<android.renderscript.ProgramVertexFixedFunction.Constants>
<android.widget.ListPopupWindow: void setPromptView(android.view.View)>:<public>:<android.widget.ListPopupWindow>
<android.hardware.Camera.Parameters: boolean isSmoothZoomSupported()>:<public>:<android.hardware.Camera.Parameters>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<android.widget.ViewSwitcher: void reset()>:<public>:<android.widget.ViewSwitcher:android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>:<public>:<android.accounts.AccountManager>
<android.content.ContentProviderOperation: java.lang.String toString()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<org.apache.http.conn.params.ConnPerRouteBean: void <init>()>:<public>:<org.apache.http.conn.params.ConnPerRouteBean:org.apache.http.conn.params.ConnPerRoute>
<android.os.Handler: void <init>()>:<public>:<android.os.Handler>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.conn.scheme.PlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.database.CursorWindow: boolean isString(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.widget.ScrollView: int getMaxScrollAmount()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>:<public synchronized>:<android.webkit.CookieManager>
<android.content.pm.PackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.content.ContentProviderOperation: void <clinit>()>:<static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.params.BasicHttpParams: void setParameters(java.lang.String[],java.lang.Object)>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.graphics.Region: boolean equals(java.lang.Object)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.view.Window: void setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.Window>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.gesture.GestureLibrary: boolean save()>:<public abstract>:<android.gesture.GestureLibrary>
<android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.widget.LinearLayout: void <init>(android.content.Context)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>:<public>:<android.net.http.SslCertificate>
<android.database.AbstractWindowedCursor: boolean isNull(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore createCookieStore()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.graphics.Matrix: void setRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.TextSize:java.lang.Enum>
<android.widget.DialerFilter: void setDigitsWatcher(android.text.TextWatcher)>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.app.Activity: void <clinit>()>:<static>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>:<public>:<android.widget.ZoomControls:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.params.BasicHttpParams: void <init>()>:<public>:<org.apache.http.params.BasicHttpParams:org.apache.http.params.AbstractHttpParams,java.io.Serializable,java.lang.Cloneable>
<android.text.method.TextKeyListener: boolean shouldCap(android.text.method.TextKeyListener.Capitalize,java.lang.CharSequence,int)>:<public static>:<android.text.method.TextKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.AlarmManager: void <init>()>:<>:<android.app.AlarmManager>
<android.graphics.Paint: android.graphics.Shader getShader()>:<public>:<android.graphics.Paint>
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.telephony.SignalStrength: int getEvdoDbm()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.view.SurfaceView: void setZOrderOnTop(boolean)>:<public>:<android.view.SurfaceView:android.view.View>
<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>:<public>:<android.renderscript.Matrix4f>
<android.media.MediaPlayer: void stop()>:<public>:<android.media.MediaPlayer>
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)>:<public>:<android.net.UrlQuerySanitizer>
<android.util.Base64InputStream: long skip(long)>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.animation.LayoutTransition: long getStagger(int)>:<public>:<android.animation.LayoutTransition>
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>:<public>:<android.net.wifi.WifiManager>
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>:<public>:<android.opengl.GLSurfaceView:android.view.SurfaceView,android.view.View,android.view.SurfaceHolder.Callback>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: void <init>(java.lang.String,int)>:<private>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<org.apache.http.protocol.HttpRequestExecutor: void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.HttpRequestExecutor>
<android.app.admin.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)>:<public>:<android.app.admin.DeviceAdminReceiver:android.content.BroadcastReceiver>
<org.json.JSONArray: boolean equals(java.lang.Object)>:<public>:<org.json.JSONArray>
<org.apache.http.impl.client.BasicCookieStore: java.lang.String toString()>:<public>:<org.apache.http.impl.client.BasicCookieStore:org.apache.http.client.CookieStore>
<org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>:<public>:<org.apache.http.impl.auth.BasicScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.app.Dialog: void cancel()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.provider.Settings.System: android.net.Uri getUriFor(java.lang.String)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType[] values()>:<public static>:<android.renderscript.Program.TextureType:java.lang.Enum>
<android.app.WallpaperInfo: int describeContents()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.database.AbstractCursor: void finalize()>:<protected>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.VideoView: boolean isPlaying()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.os.Bundle: void putFloat(java.lang.String,float)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>:<public>:<android.content.ClipDescription:android.os.Parcelable>
<android.text.format.Time: boolean after(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.renderscript.ProgramStore: void <init>()>:<>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.util.EventLog: void readEvents(int[],java.util.Collection)>:<public static native>:<android.util.EventLog>
<android.os.Environment: java.io.File getDataDirectory()>:<public static>:<android.os.Environment>
<android.widget.SearchView.OnCloseListener: boolean onClose()>:<public abstract>:<android.widget.SearchView.OnCloseListener>
<android.os.Parcel: void writeCharArray(char[])>:<public final>:<android.os.Parcel>
<android.graphics.RegionIterator: void <init>(android.graphics.Region)>:<public>:<android.graphics.RegionIterator>
<android.opengl.GLES10: void glStencilMask(int)>:<public static native>:<android.opengl.GLES10>
<android.content.pm.ResolveInfo: java.lang.String toString()>:<public>:<android.content.pm.ResolveInfo:android.os.Parcelable>
<android.view.View: boolean isVerticalFadingEdgeEnabled()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeExpiredConnections()>:<public>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()>:<public>:<android.widget.ListPopupWindow>
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>:<public>:<android.location.LocationManager>
<android.widget.CompoundButton: void setChecked(boolean)>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.ProgressDialog: void setIndeterminate(boolean)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.widget.AdapterViewFlipper: void showPrevious()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean)>:<public static>:<org.apache.http.impl.auth.BasicScheme:org.apache.http.impl.auth.RFC2617Scheme,org.apache.http.impl.auth.AuthSchemeBase>
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.impl.conn.SingleClientConnManager.PoolEntry: void shutdown()>:<protected>:<org.apache.http.impl.conn.SingleClientConnManager.PoolEntry:org.apache.http.impl.conn.AbstractPoolEntry>
<org.apache.http.client.methods.HttpOptions: void <init>()>:<public>:<org.apache.http.client.methods.HttpOptions:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path.Direction)>:<public>:<android.graphics.Path>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.text.method.DigitsKeyListener: int getInputType()>:<public>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer,int)>:<public>:<android.hardware.usb.UsbRequest>
<android.view.ViewConfiguration: void <init>()>:<public>:<android.view.ViewConfiguration>
<android.util.JsonReader: void close()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.renderscript.Byte2: void <init>()>:<public>:<android.renderscript.Byte2>
<android.webkit.CookieSyncManager: void stopSync()>:<public volatile>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.nfc.tech.IsoDep: void connect()>:<public volatile>:<android.nfc.tech.IsoDep:android.nfc.tech.BasicTagTechnology>
<org.apache.http.message.AbstractHttpMessage: void setParams(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.view.Window: android.view.View peekDecorView()>:<public abstract>:<android.view.Window>
<android.view.ViewConfiguration: int getLongPressTimeout()>:<public static>:<android.view.ViewConfiguration>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.renderscript.Allocation: void syncAll(int)>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.renderscript.AllocationAdapter: void subData(int,android.renderscript.FieldPacker)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.text.style.SubscriptSpan: void writeToParcel(android.os.Parcel,int)>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.OverScroller: void notifyVerticalEdgeReached(int,int,int)>:<public>:<android.widget.OverScroller>
<android.hardware.usb.UsbRequest: void setClientData(java.lang.Object)>:<public>:<android.hardware.usb.UsbRequest>
<android.graphics.Path: void <init>(android.graphics.Path)>:<public>:<android.graphics.Path>
<android.media.AudioRecord: int setPositionNotificationPeriod(int)>:<public>:<android.media.AudioRecord>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.database.sqlite.SQLiteMisuseException: void <init>()>:<public>:<android.database.sqlite.SQLiteMisuseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.webkit.JsResult: void cancel()>:<public final>:<android.webkit.JsResult>
<org.apache.http.impl.HttpConnectionMetricsImpl: long getReceivedBytesCount()>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.telephony.PhoneStateListener: void onDataActivity(int)>:<public>:<android.telephony.PhoneStateListener>
<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.telephony.SignalStrength: int getGsmSignalStrength()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.database.AbstractCursor: int getInt(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<org.apache.http.auth.AuthScheme: java.lang.String getSchemeName()>:<public abstract>:<org.apache.http.auth.AuthScheme>
<android.os.Parcel: android.os.Parcel obtain()>:<public static>:<android.os.Parcel>
<org.apache.http.impl.client.AbstractHttpClient: void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.app.SearchableInfo: boolean shouldIncludeInGlobalSearch()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.test.AssertionFailedError: void <init>(java.lang.String)>:<public>:<android.test.AssertionFailedError:java.lang.Error,java.lang.Throwable>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity[] values()>:<public static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<org.apache.http.client.protocol.ResponseProcessCookies: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.client.protocol.ResponseProcessCookies:org.apache.http.HttpResponseInterceptor>
<android.view.View: void setVerticalScrollbarPosition(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.SpannableStringBuilder: java.lang.String toString()>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.widget.MediaController.MediaPlayerControl: void start()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>(java.lang.String)>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.view.inputmethod.ExtractedText: int describeContents()>:<public>:<android.view.inputmethod.ExtractedText:android.os.Parcelable>
<android.widget.DatePicker: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContextWrapper: void setTheme(int)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.auth.BasicUserPrincipal: boolean equals(java.lang.Object)>:<public>:<org.apache.http.auth.BasicUserPrincipal:java.security.Principal>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>:<public final>:<android.content.Context>
<android.view.View: boolean isSelected()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>:<public>:<android.content.pm.ServiceInfo:android.content.pm.ComponentInfo,android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.view.ContextMenu: void clearHeader()>:<public abstract>:<android.view.ContextMenu:android.view.Menu>
<android.webkit.WebView: boolean zoomOut()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.conn.params.ConnManagerParams:org.apache.http.conn.params.ConnManagerPNames>
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.location.Location: void setProvider(java.lang.String)>:<public>:<android.location.Location:android.os.Parcelable>
<android.os.CountDownTimer: android.os.CountDownTimer start()>:<public final synchronized>:<android.os.CountDownTimer>
<android.view.OrientationListener: void onOrientationChanged(int)>:<public abstract>:<android.view.OrientationListener:android.hardware.SensorListener>
<android.content.SyncAdapterType: java.lang.String toString()>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int,boolean)>:<public>:<android.accounts.AuthenticatorDescription:android.os.Parcelable>
<android.view.InflateException: void <init>(java.lang.Throwable)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.database.sqlite.SQLiteTransactionListener: void onCommit()>:<public abstract>:<android.database.sqlite.SQLiteTransactionListener>
<android.view.animation.Animation: boolean willChangeBounds()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.app.DialogFragment: boolean isCancelable()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<org.json.JSONStringer: org.json.JSONStringer endArray()>:<public>:<org.json.JSONStringer>
<android.os.PatternMatcher: void <clinit>()>:<static>:<android.os.PatternMatcher:android.os.Parcelable>
<android.widget.ExpandableListView: int getPackedPositionChild(long)>:<public static>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.ProgramStore.DepthFunc: void <init>(java.lang.String,int)>:<private>:<android.renderscript.ProgramStore.DepthFunc:java.lang.Enum>
<android.provider.Settings.Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.opengl.GLES10: void glTranslatex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteCursor: void close()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>:<public>:<android.widget.TabHost.TabSpec>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.mtp.MtpObjectInfo: int getStorageId()>:<public final>:<android.mtp.MtpObjectInfo>
<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskWrites()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>()>:<public>:<android.database.sqlite.SQLiteDatabaseLockedException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.Handler: boolean hasMessages(int,java.lang.Object)>:<public final>:<android.os.Handler>
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>:<public static>:<android.database.sqlite.SQLiteQueryBuilder>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>:<public>:<android.text.SpannableStringInternal>
<android.location.Location: void dump(android.util.Printer,java.lang.String)>:<public>:<android.location.Location:android.os.Parcelable>
<android.content.pm.ApplicationInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>:<public>:<android.content.pm.ApplicationInfo.DisplayNameComparator:java.util.Comparator>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getHeaders(java.lang.String)>:<public>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.widget.AbsListView: float getTopFadingEdgeStrength()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.webkit.WebView: void disablePlatformNotifications()>:<public static>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>:<public>:<android.text.Layout>
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>:<public>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>:<public static>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context)>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.view.ActionMode: java.lang.CharSequence getTitle()>:<public abstract>:<android.view.ActionMode>
<org.apache.http.conn.routing.RouteInfo: boolean isLayered()>:<public abstract>:<org.apache.http.conn.routing.RouteInfo>
<android.text.style.MetricAffectingSpan: void <init>()>:<public>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>:<public>:<android.graphics.Paint>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>:<public abstract>:<org.apache.http.params.HttpParams>
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void <init>(org.apache.http.HttpEntityEnclosingRequest)>:<public>:<org.apache.http.impl.client.EntityEnclosingRequestWrapper:org.apache.http.impl.client.RequestWrapper,org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpEntityEnclosingRequest>
<android.renderscript.Matrix3f: void <init>(float[])>:<public>:<android.renderscript.Matrix3f>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.preference.CheckBoxPreference:android.preference.Preference>
<android.app.Fragment: android.app.LoaderManager getLoaderManager()>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<org.apache.http.HttpEntity: boolean isStreaming()>:<public abstract>:<org.apache.http.HttpEntity>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFrameRates()>:<public>:<android.hardware.Camera.Parameters>
<android.view.View: void onWindowVisibilityChanged(int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.content.SyncResult: boolean hasError()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.widget.Scroller: int timePassed()>:<public>:<android.widget.Scroller>
<android.webkit.WebStorage.Origin: long getQuota()>:<public>:<android.webkit.WebStorage.Origin>
<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus.NmeaListener)>:<public>:<android.location.LocationManager>
<android.test.mock.MockContext: int getWallpaperDesiredMinimumWidth()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>:<public>:<android.content.res.TypedArray>
<android.hardware.Camera.Parameters: int getInt(java.lang.String)>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>:<public abstract>:<org.apache.http.protocol.HttpContext>
<android.text.method.BaseMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler createRedirectHandler()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>:<public>:<android.webkit.WebViewClient>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>:<public final>:<android.hardware.Camera>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.Window.Callback: boolean onMenuOpened(int,android.view.Menu)>:<public abstract>:<android.view.Window.Callback>
<android.net.Uri: android.net.Uri parse(java.lang.String)>:<public static>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.view.ViewGroup: void removeView(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.net.wifi.WifiManager: boolean startScan()>:<public>:<android.net.wifi.WifiManager>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.content.res.Resources>
<android.view.MotionEvent: float getHistoricalSize(int,int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>:<public>:<android.net.ConnectivityManager>
<android.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>:<public abstract>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.hardware.usb.UsbInterface: void <clinit>()>:<static>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>:<public final native>:<android.os.Parcel>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>:<public>:<android.preference.PreferenceManager>
<android.graphics.Matrix: boolean preRotate(float,float,float)>:<public>:<android.graphics.Matrix>
<android.hardware.Camera.Parameters: float getVerticalViewAngle()>:<public>:<android.hardware.Camera.Parameters>
<android.app.Activity: void startManagingCursor(android.database.Cursor)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.os.Debug.MemoryInfo: void <clinit>()>:<static>:<android.os.Debug.MemoryInfo:android.os.Parcelable>
<android.graphics.BitmapFactory.Options: void <init>()>:<public>:<android.graphics.BitmapFactory.Options>
<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.view.animation.ScaleAnimation:android.view.animation.Animation>
<android.app.FragmentTransaction: android.app.FragmentTransaction disallowAddToBackStack()>:<public abstract>:<android.app.FragmentTransaction>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>:<public static>:<android.graphics.drawable.Drawable>
<org.apache.http.impl.cookie.BrowserCompatSpec: void <init>()>:<public>:<org.apache.http.impl.cookie.BrowserCompatSpec:org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>:<public abstract>:<android.content.pm.PackageManager>
<org.apache.http.impl.AbstractHttpServerConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>:<protected>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.View: int getMeasuredState()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.opengl.GLES10: void glLightModelx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>()>:<public>:<android.database.sqlite.SQLiteCantOpenDatabaseException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.net.sip.SipManager: boolean isIncomingCallIntent(android.content.Intent)>:<public static>:<android.net.sip.SipManager>
<android.net.sip.SipSession.Listener: void onRinging(android.net.sip.SipSession,android.net.sip.SipProfile,java.lang.String)>:<public>:<android.net.sip.SipSession.Listener>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.MediaMetadataRetriever: void finalize()>:<protected>:<android.media.MediaMetadataRetriever>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.widget.RadioGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.test.ApplicationTestCase: void setUp()>:<protected>:<android.test.ApplicationTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.os.Debug: void resetGlobalExternalFreedCount()>:<public static>:<android.os.Debug>
<android.media.AudioTrack: int getChannelCount()>:<public>:<android.media.AudioTrack>
<android.os.ParcelUuid: java.util.UUID getUuid()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>:<public static final>:<android.provider.Browser>
<android.widget.AbsSeekBar: void onDraw(android.graphics.Canvas)>:<protected synchronized>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.opengl.GLES20: void glAttachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setMimeType(java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.database.CursorWindow: float getFloat(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener,android.os.Handler)>:<public>:<android.media.AudioRecord>
<android.view.WindowManager.LayoutParams: boolean mayUseInputMethod(int)>:<public static>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<android.view.View: void setOnDragListener(android.view.View.OnDragListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.renderscript.Matrix3f: void translate(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.inputmethodservice.InputMethodService: void showWindow(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<android.os.PowerManager: void goToSleep(long)>:<public>:<android.os.PowerManager>
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.widget.AdapterView.OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>:<public abstract>:<android.widget.AdapterView.OnItemLongClickListener>
<android.webkit.WebSettings: int getUserAgent()>:<public synchronized>:<android.webkit.WebSettings>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int,int)>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.renderscript.RenderScript.RSMessageHandler: void <init>()>:<public>:<android.renderscript.RenderScript.RSMessageHandler:java.lang.Runnable>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>:<public static native>:<android.opengl.GLES10>
<android.drm.DrmManagerClient.OnInfoListener: void onInfo(android.drm.DrmManagerClient,android.drm.DrmInfoEvent)>:<public abstract>:<android.drm.DrmManagerClient.OnInfoListener>
<android.content.res.Resources: int getInteger(int)>:<public>:<android.content.res.Resources>
<android.graphics.drawable.Drawable: boolean setLevel(int)>:<public final>:<android.graphics.drawable.Drawable>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.ExpandableListView: void <init>(android.content.Context)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>:<public>:<android.content.res.TypedArray>
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)>:<public final>:<android.accessibilityservice.AccessibilityService:android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.net.wifi.WifiConfiguration.KeyMgmt: void <clinit>()>:<static>:<android.net.wifi.WifiConfiguration.KeyMgmt>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965PortAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.text.style.AbsoluteSizeSpan: int describeContents()>:<public>:<android.text.style.AbsoluteSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<org.apache.http.protocol.RequestTargetHost: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.RequestTargetHost:org.apache.http.HttpRequestInterceptor>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.media.AudioRecord: int getChannelCount()>:<public>:<android.media.AudioRecord>
<android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>:<public static native>:<android.graphics.Movie>
<org.json.JSONArray: java.lang.String toString()>:<public>:<org.json.JSONArray>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String)>:<public>:<org.xmlpull.v1.sax2.Driver:org.xml.sax.Locator,org.xml.sax.XMLReader,org.xml.sax.Attributes>
<android.renderscript.ProgramFragmentFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>:<public>:<android.renderscript.ProgramFragmentFixedFunction.Builder>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor getDescriptor()>:<public>:<android.media.audiofx.AudioEffect>
<android.widget.ImageView: void setAdjustViewBounds(boolean)>:<public>:<android.widget.ImageView:android.view.View>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.TextView: void onStartTemporaryDetach()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<org.apache.http.cookie.Cookie: java.lang.String getName()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.widget.OverScroller: void forceFinished(boolean)>:<public final>:<android.widget.OverScroller>
<android.graphics.drawable.ColorDrawable: int getAlpha()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)>:<protected abstract>:<org.apache.http.impl.io.AbstractMessageParser:org.apache.http.io.HttpMessageParser>
<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>:<public final>:<android.util.LruCache>
<android.widget.Gallery.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.Gallery.LayoutParams:android.view.ViewGroup.LayoutParams>
<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>:<public static final>:<android.provider.Browser>
<android.util.JsonReader: void endArray()>:<public>:<android.util.JsonReader:java.io.Closeable>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>:<public static native>:<android.opengl.GLES20>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView.BufferType)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.webkit.WebResourceResponse: java.io.InputStream getData()>:<public>:<android.webkit.WebResourceResponse>
<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>:<public abstract>:<android.content.Context>
<org.apache.http.auth.NTCredentials: void <init>(java.lang.String)>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.app.SearchableInfo: int getHintId()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.widget.PopupWindow: int getHeight()>:<public>:<android.widget.PopupWindow>
<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>:<public>:<android.text.style.MetricAffectingSpan:android.text.style.CharacterStyle,android.text.style.UpdateLayout>
<android.widget.HeaderViewListAdapter: boolean isEmpty()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.ScrollView: boolean isFillViewport()>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>:<public>:<android.webkit.WebViewClient>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>:<public static>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getOpacity()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.widget.Chronometer.OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>:<public abstract>:<android.widget.Chronometer.OnChronometerTickListener>
<android.speech.tts.TextToSpeech: int setPitch(float)>:<public>:<android.speech.tts.TextToSpeech>
<android.hardware.Camera.Parameters: void getPreviewFpsRange(int[])>:<public>:<android.hardware.Camera.Parameters>
<org.apache.http.message.ParserCursor: int getLowerBound()>:<public>:<org.apache.http.message.ParserCursor>
<android.widget.SimpleExpandableListAdapter: android.view.View newGroupView(boolean,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>:<public static>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.animation.Animator.AnimatorListener: void onAnimationCancel(android.animation.Animator)>:<public abstract>:<android.animation.Animator.AnimatorListener>
<android.database.MergeCursor: boolean isNull(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.os.StatFs: int getAvailableBlocks()>:<public native>:<android.os.StatFs>
<android.graphics.PathEffect: void finalize()>:<protected>:<android.graphics.PathEffect>
<android.telephony.gsm.SmsMessage: boolean isMWISetMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int3)>:<public>:<android.renderscript.FieldPacker>
<android.database.AbstractCursor: boolean moveToNext()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.os.TokenWatcher: void <init>(android.os.Handler,java.lang.String)>:<public>:<android.os.TokenWatcher>
<android.os.Bundle: long[] getLongArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.content.pm.PackageItemInfo: void <init>(android.content.pm.PackageItemInfo)>:<public>:<android.content.pm.PackageItemInfo>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>:<public static>:<android.content.ContentResolver>
<android.net.http.AndroidHttpClient: long parseDate(java.lang.String)>:<public static>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>:<public static>:<android.media.RingtoneManager>
<android.content.IntentSender: void <init>()>:<>:<android.content.IntentSender:android.os.Parcelable>
<android.content.OperationApplicationException: void <init>(java.lang.String,int)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.telephony.gsm.GsmCellLocation: java.lang.String toString()>:<public>:<android.telephony.gsm.GsmCellLocation:android.telephony.CellLocation>
<android.text.style.SubscriptSpan: int describeContents()>:<public>:<android.text.style.SubscriptSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.widget.TextView: void setHeight(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.animation.Animator: void setStartDelay(long)>:<public abstract>:<android.animation.Animator:java.lang.Cloneable>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte4)>:<public>:<android.renderscript.FieldPacker>
<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>:<public>:<android.content.res.Resources>
<android.nfc.tech.NfcV: android.nfc.Tag getTag()>:<public volatile>:<android.nfc.tech.NfcV:android.nfc.tech.BasicTagTechnology>
<android.widget.AbsListView: int getBottomPaddingOffset()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.app.AlertDialog: android.widget.Button getButton(int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.renderscript.AllocationAdapter: void subData2D(int,int,int,int,int[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.media.ExifInterface: boolean getLatLong(float[])>:<public>:<android.media.ExifInterface>
<android.location.Address: void setPostalCode(java.lang.String)>:<public>:<android.location.Address:android.os.Parcelable>
<android.widget.TableLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.ProviderTestCase2: android.content.ContentProvider getProvider()>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>:<public static>:<android.content.ContentResolver>
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.view.KeyEvent: boolean isShiftPressed()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>:<public>:<android.app.Notification:android.os.Parcelable>
<android.view.inputmethod.InputMethodSession: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public abstract>:<android.view.inputmethod.InputMethodSession>
<android.content.SyncAdapterType: boolean equals(java.lang.Object)>:<public>:<android.content.SyncAdapterType:android.os.Parcelable>
<org.apache.http.HttpMessage: boolean containsHeader(java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:org.apache.http.conn.ConnectionKeepAliveStrategy>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>:<public>:<android.media.AudioManager>
<android.util.LruCache: int evictionCount()>:<public final synchronized>:<android.util.LruCache>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>:<public>:<android.net.wifi.WifiManager>
<org.apache.http.impl.cookie.BasicClientCookie: boolean isPersistent()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.database.DataSetObserver: void onInvalidated()>:<public>:<android.database.DataSetObserver>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>:<public>:<android.widget.ListPopupWindow>
<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.LocalSocketAddress: java.lang.String getName()>:<public>:<android.net.LocalSocketAddress>
<android.provider.Settings.System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>:<public static synchronized>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Canvas>
<android.graphics.BitmapRegionDecoder: void recycle()>:<public>:<android.graphics.BitmapRegionDecoder>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>:<public static native>:<android.opengl.ETC1>
<org.apache.http.util.CharArrayBuffer: char[] buffer()>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.animation.Keyframe: android.animation.Keyframe clone()>:<public abstract>:<android.animation.Keyframe:java.lang.Cloneable>
<android.content.IntentSender: java.lang.String toString()>:<public>:<android.content.IntentSender:android.os.Parcelable>
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.renderscript.Short3: void <init>()>:<public>:<android.renderscript.Short3>
<android.webkit.CookieSyncManager: void run()>:<public volatile>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>:<public>:<android.net.sip.SipManager>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.graphics.drawable.Drawable: boolean onLevelChange(int)>:<protected>:<android.graphics.drawable.Drawable>
<org.apache.http.impl.client.ClientParamsStack: void <init>(org.apache.http.impl.client.ClientParamsStack,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.client.ClientParamsStack:org.apache.http.params.AbstractHttpParams>
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.provider.Settings.System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.view.Window: void setChildDrawable(int,android.graphics.drawable.Drawable)>:<public abstract>:<android.view.Window>
<android.telephony.gsm.SmsMessage: boolean isMWIClearMessage()>:<public>:<android.telephony.gsm.SmsMessage>
<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript.Priority)>:<public>:<android.renderscript.RenderScript>
<android.widget.AutoCompleteTextView.Validator: java.lang.CharSequence fixText(java.lang.CharSequence)>:<public abstract>:<android.widget.AutoCompleteTextView.Validator>
<android.widget.PopupWindow: void update(int,int,int,int,boolean)>:<public>:<android.widget.PopupWindow>
<android.test.mock.MockPackageManager: java.util.List getInstalledApplications(int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder before(android.animation.Animator)>:<public>:<android.animation.AnimatorSet.Builder>
<android.view.MenuItem: int getOrder()>:<public abstract>:<android.view.MenuItem>
<android.text.style.DynamicDrawableSpan: void <init>()>:<public>:<android.text.style.DynamicDrawableSpan:android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.text.format.DateFormat: void <init>()>:<public>:<android.text.format.DateFormat>
<android.graphics.Region: boolean quickReject(int,int,int,int)>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.view.Window: void setFeatureInt(int,int)>:<public abstract>:<android.view.Window>
<android.app.admin.DeviceAdminInfo: java.lang.String toString()>:<public>:<android.app.admin.DeviceAdminInfo:android.os.Parcelable>
<org.apache.http.protocol.BasicHttpContext: void <init>()>:<public>:<org.apache.http.protocol.BasicHttpContext:org.apache.http.protocol.HttpContext>
<org.json.JSONStringer: org.json.JSONStringer key(java.lang.String)>:<public>:<org.json.JSONStringer>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButWhitespaceLegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.Entity>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.location.Criteria: void setHorizontalAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.preference.Preference: float getPersistedFloat(float)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.test.ActivityTestCase: android.app.Activity getActivity()>:<protected>:<android.test.ActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewStub: void draw(android.graphics.Canvas)>:<public>:<android.view.ViewStub:android.view.View>
<org.apache.http.message.BasicHeaderValueFormatter: void <init>()>:<public>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.view.View: boolean hasFocus()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: void onSizeChanged(int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES10: void glPointSize(float)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>:<public>:<android.graphics.drawable.StateListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.view.View: android.view.ViewParent getParent()>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>:<public abstract>:<android.view.ViewParent>
<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.animation.ValueAnimator: android.animation.Animator clone()>:<public volatile>:<android.animation.ValueAnimator:android.animation.Animator>
<android.app.ActionBar.Tab: java.lang.CharSequence getText()>:<public abstract>:<android.app.ActionBar.Tab>
<android.net.http.AndroidHttpClient: void disableCurlLogging()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<org.xmlpull.v1.XmlPullParser: boolean isAttributeDefault(int)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.graphics.drawable.ColorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.preference.PreferenceActivity: void invalidateHeaders()>:<public>:<android.preference.PreferenceActivity:android.app.ListActivity,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback>
<org.apache.http.protocol.ResponseDate: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.ResponseDate:org.apache.http.HttpResponseInterceptor>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeIdleConnections(long,java.util.concurrent.TimeUnit)>:<public>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<org.apache.http.impl.client.AbstractHttpClient: void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.test.ProviderTestCase2: android.content.ContentResolver newResolverWithContentProviderFromSql(android.content.Context,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,int,java.lang.String)>:<public static>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>:<public>:<android.view.accessibility.AccessibilityManager>
<android.net.LocalSocket: boolean isConnected()>:<public synchronized>:<android.net.LocalSocket>
<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>:<public abstract>:<org.apache.http.HeaderElement>
<android.os.CountDownTimer: void cancel()>:<public final>:<android.os.CountDownTimer>
<android.test.mock.MockResources: java.io.InputStream openRawResource(int)>:<public>:<android.test.mock.MockResources:android.content.res.Resources>
<android.widget.CheckedTextView: void setChecked(boolean)>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.hardware.Camera.Parameters: void setZoom(int)>:<public>:<android.hardware.Camera.Parameters>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera.PreviewCallback)>:<public final>:<android.hardware.Camera>
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.AnimationDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable,java.lang.Runnable,android.graphics.drawable.Animatable>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.webkit.CookieManager: java.lang.Object clone()>:<protected>:<android.webkit.CookieManager>
<android.database.sqlite.SQLiteOpenHelper: void close()>:<public synchronized>:<android.database.sqlite.SQLiteOpenHelper>
<org.apache.http.protocol.HttpService: void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy)>:<public>:<org.apache.http.protocol.HttpService>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void tunnelTarget(boolean,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.os.Environment: java.io.File getRootDirectory()>:<public static>:<android.os.Environment>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.os.RemoteCallbackList: void finishBroadcast()>:<public>:<android.os.RemoteCallbackList>
<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.os.BatteryManager: void <init>()>:<public>:<android.os.BatteryManager>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler createUserTokenHandler()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<org.apache.http.message.AbstractHttpMessage: void <init>(org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.message.AbstractHttpMessage:org.apache.http.HttpMessage>
<android.location.Location: boolean hasSpeed()>:<public>:<android.location.Location:android.os.Parcelable>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>:<public>:<android.net.wifi.WifiInfo:android.os.Parcelable>
<android.hardware.Sensor: int getMinDelay()>:<public>:<android.hardware.Sensor>
<android.widget.Filter.FilterResults: void <init>()>:<public>:<android.widget.Filter.FilterResults>
<android.graphics.Movie: android.graphics.Movie decodeByteArray(byte[],int,int)>:<public static native>:<android.graphics.Movie>
<android.inputmethodservice.Keyboard.Key: boolean isInside(int,int)>:<public>:<android.inputmethodservice.Keyboard.Key>
<android.view.View: int getScrollBarStyle()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<org.apache.http.impl.cookie.BestMatchSpec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.conn.AbstractPooledConnAdapter:org.apache.http.impl.conn.AbstractClientConnAdapter>
<android.media.audiofx.AudioEffect: boolean hasControl()>:<public>:<android.media.audiofx.AudioEffect>
<android.location.Address: void setLatitude(double)>:<public>:<android.location.Address:android.os.Parcelable>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Sampler:android.renderscript.BaseObj>
<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSInvalidStateException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.drm.DrmSupportInfo: void addMimeType(java.lang.String)>:<public>:<android.drm.DrmSupportInfo>
<org.apache.http.impl.AbstractHttpServerConnection: void <init>()>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>:<public final>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.animation.ValueAnimator: int getRepeatCount()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.net.http.SslError: int getPrimaryError()>:<public>:<android.net.http.SslError>
<android.app.NativeActivity: void onDestroy()>:<protected>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.text.format.Time: boolean before(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.graphics.Matrix: void mapVectors(float[])>:<public>:<android.graphics.Matrix>
<android.widget.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.nfc.TagLostException: void <init>(java.lang.String)>:<public>:<android.nfc.TagLostException:java.io.IOException,java.lang.Exception,java.lang.Throwable>
<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>:<public abstract>:<android.view.ViewParent>
<android.view.View: void sendAccessibilityEvent(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.cookie.Cookie: boolean isPersistent()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.text.BoringLayout: int getLineDescent(int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.media.audiofx.Virtualizer.Settings: void <init>()>:<public>:<android.media.audiofx.Virtualizer.Settings>
<android.opengl.GLES10: void glScalex(int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.view.View: int resolveSize(int,int)>:<public static>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.ActivityGroup: void <init>(boolean)>:<public>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.CheckBox:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>:<public>:<android.view.ViewGroup.MarginLayoutParams:android.view.ViewGroup.LayoutParams>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.location.Geocoder: boolean isPresent()>:<public static>:<android.location.Geocoder>
<android.widget.AbsListView: boolean hasTextFilter()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader.TileMode)>:<public>:<android.graphics.LinearGradient:android.graphics.Shader>
<dalvik.system.PathClassLoader: java.lang.String toString()>:<public>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<android.widget.TextView: int getImeOptions()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.conn.ClientConnectionRequest: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>:<public abstract>:<org.apache.http.conn.ClientConnectionRequest>
<android.widget.RatingBar: void <init>(android.content.Context)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.net.wifi.WifiManager.WifiLock: void release()>:<public>:<android.net.wifi.WifiManager.WifiLock>
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.speech.RecognitionListener: void onError(int)>:<public abstract>:<android.speech.RecognitionListener>
<org.apache.http.message.BasicRequestLine: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.message.BasicRequestLine:org.apache.http.RequestLine,java.lang.Cloneable>
<android.test.mock.MockContext: void unregisterReceiver(android.content.BroadcastReceiver)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.NinePatch: int getDensity()>:<public>:<android.graphics.NinePatch>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<android.text.method.MultiTapKeyListener: int getInputType()>:<public>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.view.animation.Animation: boolean isFillEnabled()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<junit.runner.BaseTestRunner: java.lang.Class loadSuiteClass(java.lang.String)>:<protected>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.view.View.OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>:<public abstract>:<android.view.View.OnLayoutChangeListener>
<android.test.SyncBaseInstrumentation: void syncProvider(android.net.Uri,java.lang.String,java.lang.String)>:<protected>:<android.test.SyncBaseInstrumentation:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.graphics.RectF: boolean isEmpty()>:<public final>:<android.graphics.RectF:android.os.Parcelable>
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.database.CursorWrapper: boolean isLast()>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>:<public native>:<android.graphics.Canvas>
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.sip.SipAudioCall.Listener: void onRinging(android.net.sip.SipAudioCall,android.net.sip.SipProfile)>:<public>:<android.net.sip.SipAudioCall.Listener>
<android.os.Debug: void resetGlobalClassInitCount()>:<public static>:<android.os.Debug>
<android.renderscript.AllocationAdapter: void subData1D(int,int,byte[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.preference.EditTextPreference: void <init>(android.content.Context)>:<public>:<android.preference.EditTextPreference:android.preference.DialogPreference,android.preference.Preference>
<android.hardware.usb.UsbInterface: void <init>()>:<>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>:<public>:<android.graphics.drawable.ShapeDrawable:android.graphics.drawable.Drawable>
<org.apache.http.client.CookieStore: void addCookie(org.apache.http.cookie.Cookie)>:<public abstract>:<org.apache.http.client.CookieStore>
<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>:<public>:<org.apache.http.message.BasicStatusLine:org.apache.http.StatusLine,java.lang.Cloneable>
<android.database.Cursor: java.lang.String getColumnName(int)>:<public abstract>:<android.database.Cursor>
<android.app.Instrumentation: void onCreate(android.os.Bundle)>:<public>:<android.app.Instrumentation>
<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>:<public>:<org.apache.http.impl.cookie.NetscapeDraftHeaderParser>
<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>:<public static native>:<android.net.TrafficStats>
<android.content.SyncResult: boolean hasSoftError()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.webkit.WebViewFragment: void <init>()>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.view.InflateException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.Font.Style: android.renderscript.Font.Style[] values()>:<public static>:<android.renderscript.Font.Style:java.lang.Enum>
<android.app.ActivityGroup: void onDestroy()>:<protected>:<android.app.ActivityGroup:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.view.SurfaceHolder: void setKeepScreenOn(boolean)>:<public abstract>:<android.view.SurfaceHolder>
<android.util.SparseArray: int size()>:<public>:<android.util.SparseArray>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>:<public>:<android.database.sqlite.SQLiteQueryBuilder>
<android.graphics.drawable.ScaleDrawable: void setAlpha(int)>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.app.LoaderManager.LoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>:<public abstract>:<android.app.LoaderManager.LoaderCallbacks>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.RotateDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.LayoutAnimationController: void setDelay(float)>:<public>:<android.view.animation.LayoutAnimationController>
<android.sax.RootElement: void <init>(java.lang.String)>:<public>:<android.sax.RootElement:android.sax.Element>
<android.content.res.AssetManager.AssetInputStream: int read(byte[])>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.opengl.GLES20: void glClearStencil(int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.widget.AdapterView: int getSelectedItemPosition()>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>:<public static final>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<org.apache.http.impl.entity.EntityDeserializer: void <init>(org.apache.http.entity.ContentLengthStrategy)>:<public>:<org.apache.http.impl.entity.EntityDeserializer>
<android.view.View: void scrollTo(int,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.Gallery: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>:<public static>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.text.InputFilter.AllCaps: void <init>()>:<public>:<android.text.InputFilter.AllCaps:android.text.InputFilter>
<android.location.Location: void setAccuracy(float)>:<public>:<android.location.Location:android.os.Parcelable>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.Spinner:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.content.DialogInterface.OnClickListener>
<android.provider.Settings.System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>:<public static>:<android.provider.Settings.System:android.provider.Settings.NameValueTable>
<android.text.Layout: int getLineVisibleEnd(int)>:<public>:<android.text.Layout>
<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser)>:<public static final>:<org.apache.http.message.BasicLineParser:org.apache.http.message.LineParser>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.os.AsyncTask: void execute(java.lang.Runnable)>:<public static>:<android.os.AsyncTask>
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.test.AndroidTestRunner: void runTest(junit.framework.TestResult)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<android.app.Activity: android.content.Intent getIntent()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.renderscript.ProgramFragmentFixedFunction.Builder.Format: void <clinit>()>:<static>:<android.renderscript.ProgramFragmentFixedFunction.Builder.Format:java.lang.Enum>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.AsyncQueryHandler: void handleMessage(android.os.Message)>:<public>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.hardware.Camera.Parameters: int getJpegThumbnailQuality()>:<public>:<android.hardware.Camera.Parameters>
<org.json.JSONObject: void <init>(org.json.JSONTokener)>:<public>:<org.json.JSONObject>
<android.util.StateSet: void <clinit>()>:<static>:<android.util.StateSet>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDialog()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.widget.PopupWindow: void <init>()>:<public>:<android.widget.PopupWindow>
<org.apache.http.client.utils.CloneUtils: java.lang.Object clone(java.lang.Object)>:<public static>:<org.apache.http.client.utils.CloneUtils>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<android.net.http.SslCertificate>
<org.apache.http.impl.io.IdentityOutputStream: void flush()>:<public>:<org.apache.http.impl.io.IdentityOutputStream:java.io.OutputStream>
<org.apache.http.StatusLine: int getStatusCode()>:<public abstract>:<org.apache.http.StatusLine>
<android.webkit.CacheManager.CacheResult: java.lang.String getExpiresString()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.widget.PopupWindow: void <init>(android.content.Context)>:<public>:<android.widget.PopupWindow>
<android.app.Instrumentation: android.os.Bundle getBinderCounts()>:<public>:<android.app.Instrumentation>
<android.app.Dialog: void dismiss()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleXBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.app.FragmentManager: void enableDebugLogging(boolean)>:<public static>:<android.app.FragmentManager>
<android.mtp.MtpObjectInfo: int getImagePixDepth()>:<public final>:<android.mtp.MtpObjectInfo>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.test.mock.MockContext: void setWallpaper(java.io.InputStream)>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.location.LocationProvider: boolean requiresSatellite()>:<public abstract>:<android.location.LocationProvider>
<android.view.MenuItem: boolean isChecked()>:<public abstract>:<android.view.MenuItem>
<android.widget.RemoteViews: void setViewVisibility(int,int)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.app.Activity: void setFeatureDrawableAlpha(int,int)>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.FragmentManager: boolean popBackStackImmediate(int,int)>:<public abstract>:<android.app.FragmentManager>
<android.view.animation.LayoutAnimationController: boolean willOverlap()>:<public>:<android.view.animation.LayoutAnimationController>
<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.widget.ProgressBar: void <init>(android.content.Context)>:<public>:<android.widget.ProgressBar:android.view.View>
<android.content.CursorLoader: void <init>(android.content.Context)>:<public>:<android.content.CursorLoader:android.content.AsyncTaskLoader,android.content.Loader>
<org.apache.http.impl.DefaultHttpServerConnection: java.lang.String toString()>:<public>:<org.apache.http.impl.DefaultHttpServerConnection:org.apache.http.impl.SocketHttpServerConnection,org.apache.http.impl.AbstractHttpServerConnection>
<android.text.method.NumberKeyListener: void <init>()>:<public>:<android.text.method.NumberKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.InputFilter>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int,boolean)>:<public abstract>:<android.app.ActionBar>
<android.app.DialogFragment: int getTheme()>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.widget.ExpandableListAdapter: java.lang.Object getGroup(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.content.ContentResolver: void removeStatusChangeListener(java.lang.Object)>:<public static>:<android.content.ContentResolver>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_NONE(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<org.apache.http.impl.conn.Wire: void input(java.io.InputStream)>:<public>:<org.apache.http.impl.conn.Wire>
<android.view.View: void forceLayout()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void detach()>:<protected>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>:<public synchronized>:<android.webkit.WebSettings>
<android.preference.RingtonePreference: void onSetInitialValue(boolean,java.lang.Object)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.content.ComponentName: void <clinit>()>:<static>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>:<protected synchronized>:<android.webkit.WebBackForwardList:java.lang.Cloneable,java.io.Serializable>
<org.json.JSONArray: void <init>()>:<public>:<org.json.JSONArray>
<android.widget.AutoCompleteTextView: boolean isPopupShowing()>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>:<public static native>:<android.opengl.GLES10>
<android.content.pm.PackageItemInfo.DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>:<public final>:<android.content.pm.PackageItemInfo.DisplayNameComparator:java.util.Comparator>
<android.graphics.drawable.ScaleDrawable: boolean onStateChange(int[])>:<protected>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region.Op)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.mtp.MtpDevice: byte[] getObject(int,int)>:<public>:<android.mtp.MtpDevice>
<android.content.ComponentName: int compareTo(java.lang.Object)>:<public volatile>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.view.MotionEvent: float getToolMinor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.content.SyncResult: java.lang.String toDebugString()>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: void showInputMethodAndSubtypeEnabler(java.lang.String)>:<public>:<android.view.inputmethod.InputMethodManager>
<org.apache.http.entity.InputStreamEntity: void consumeContent()>:<public>:<org.apache.http.entity.InputStreamEntity:org.apache.http.entity.AbstractHttpEntity>
<android.location.Location: void reset()>:<public>:<android.location.Location:android.os.Parcelable>
<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>:<public>:<android.telephony.NeighboringCellInfo:android.os.Parcelable>
<android.view.animation.GridLayoutAnimationController: boolean willOverlap()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.widget.CheckedTextView: int[] onCreateDrawableState(int)>:<protected>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)>:<public>:<android.app.admin.DevicePolicyManager>
<android.view.ViewConfiguration: int getScrollBarSize()>:<public static>:<android.view.ViewConfiguration>
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public>:<android.content.ContentProviderClient>
<android.renderscript.Program: void bindConstants(android.renderscript.Allocation,int)>:<public>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.view.ViewDebug.IntToString: java.lang.String 'to'()>:<public abstract>:<android.view.ViewDebug.IntToString:java.lang.annotation.Annotation>
<android.widget.ArrayAdapter: android.widget.Filter getFilter()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<org.apache.http.util.ByteArrayBuffer: void append(char[],int,int)>:<public>:<org.apache.http.util.ByteArrayBuffer>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>:<public static>:<android.widget.Toast>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create2D(android.renderscript.RenderScript,android.renderscript.Allocation)>:<public static>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>:<public static final>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.view.ActionMode: void invalidate()>:<public abstract>:<android.view.ActionMode>
<android.os.DropBoxManager.Entry: void close()>:<public>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.text.style.ScaleXSpan: int getSpanTypeId()>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<org.apache.http.HttpInetConnection: java.net.InetAddress getLocalAddress()>:<public abstract>:<org.apache.http.HttpInetConnection:org.apache.http.HttpConnection>
<android.graphics.Bitmap: int getHeight()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.drm.DrmManagerClient: boolean canHandle(android.net.Uri,java.lang.String)>:<public>:<android.drm.DrmManagerClient>
<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)>:<public>:<android.sax.Element>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>:<protected>:<android.os.Binder:android.os.IBinder>
<android.text.TextUtils.TruncateAt: void <init>(java.lang.String,int)>:<private>:<android.text.TextUtils.TruncateAt:java.lang.Enum>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES11Ext>
<android.telephony.SmsMessage: int getIndexOnSim()>:<public>:<android.telephony.SmsMessage>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>:<public>:<android.view.MenuInflater>
<android.content.IntentFilter: java.lang.String getAction(int)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.CalendarView: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>:<public>:<android.widget.CalendarView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.provider.ContactsContract.AggregationExceptions: void <init>()>:<>:<android.provider.ContactsContract.AggregationExceptions:android.provider.BaseColumns>
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>:<public>:<android.app.DownloadManager>
<android.widget.AutoCompleteTextView: void onDisplayHint(int)>:<protected>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int)>:<public abstract>:<android.media.audiofx.Visualizer.OnDataCaptureListener>
<android.media.MediaRecorder: void setCaptureRate(double)>:<public>:<android.media.MediaRecorder>
<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>:<public native>:<android.graphics.Canvas>
<org.apache.http.HttpMessage: void setHeader(java.lang.String,java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,java.lang.CharSequence,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.renderscript.AllocationAdapter: void copyTo(android.graphics.Bitmap)>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.widget.SectionIndexer: int getPositionForSection(int)>:<public abstract>:<android.widget.SectionIndexer>
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.ContentObservable: void notifyChange(boolean)>:<public>:<android.database.ContentObservable:android.database.Observable>
<android.os.DropBoxManager.Entry: void <clinit>()>:<static>:<android.os.DropBoxManager.Entry:android.os.Parcelable,java.io.Closeable>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>:<public>:<android.media.AudioManager>
<android.telephony.gsm.SmsMessage.MessageClass: void <init>(java.lang.String,int)>:<private>:<android.telephony.gsm.SmsMessage.MessageClass:java.lang.Enum>
<android.database.MergeCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.provider.ContactsContract.CommonDataKinds.Organization: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Organization:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace[] values()>:<public static>:<android.renderscript.Type.CubemapFace:java.lang.Enum>
<android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()>:<public>:<android.net.sip.SipAudioCall>
<android.animation.Animator: void setTarget(java.lang.Object)>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.database.AbstractWindowedCursor: double getDouble(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>:<public final>:<android.content.ContentResolver>
<android.widget.ListPopupWindow: void setPromptPosition(int)>:<public>:<android.widget.ListPopupWindow>
<android.app.Activity: boolean isChangingConfigurations()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.view.View: boolean isLongClickable()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>:<public>:<android.webkit.WebStorage>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.widget.ScrollView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>:<public>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.KeyCharacterMap: int getKeyboardType()>:<public>:<android.view.KeyCharacterMap>
<android.view.View: void setRotationY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>:<public>:<android.app.Instrumentation>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>:<public>:<android.app.DownloadManager.Request>
<android.drm.DrmManagerClient: android.drm.DrmInfo acquireDrmInfo(android.drm.DrmInfoRequest)>:<public>:<android.drm.DrmManagerClient>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setVisibleInDownloadsUi(boolean)>:<public>:<android.app.DownloadManager.Request>
<android.view.ViewGroup: int indexOfChild(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.auth.AuthScope: boolean equals(java.lang.Object)>:<public>:<org.apache.http.auth.AuthScope>
<android.widget.ImageView: void setAlpha(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.database.Cursor: short getShort(int)>:<public abstract>:<android.database.Cursor>
<android.util.AttributeSet: java.lang.String getAttributeValue(int)>:<public abstract>:<android.util.AttributeSet>
<android.gesture.GestureOverlayView: void cancelGesture()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>:<public abstract>:<android.view.inputmethod.InputConnection>
<android.text.method.ArrowKeyMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>:<public native>:<android.graphics.Canvas>
<android.preference.DialogPreference: void setDialogMessage(int)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.view.View: void addFocusables(java.util.ArrayList,int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>:<public static>:<org.apache.http.conn.params.ConnManagerParams:org.apache.http.conn.params.ConnManagerPNames>
<android.app.Dialog: android.view.Window getWindow()>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.Region: boolean isEmpty()>:<public native>:<android.graphics.Region:android.os.Parcelable>
<android.app.Activity: void finishActivity(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.Matrix: void setTranslate(float,float)>:<public>:<android.graphics.Matrix>
<android.widget.ListPopupWindow: int getSelectedItemPosition()>:<public>:<android.widget.ListPopupWindow>
<android.database.Cursor: boolean moveToNext()>:<public abstract>:<android.database.Cursor>
<android.drm.ProcessedData: java.lang.String getSubscriptionId()>:<public>:<android.drm.ProcessedData>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.graphics.drawable.GradientDrawable: void setShape(int)>:<public>:<android.graphics.drawable.GradientDrawable:android.graphics.drawable.Drawable>
<android.renderscript.Allocation: void copyTo(short[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.opengl.GLDebugHelper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)>:<public static>:<android.opengl.GLDebugHelper>
<android.hardware.usb.UsbAccessory: void <init>()>:<>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.content.Loader: void registerListener(int,android.content.Loader.OnLoadCompleteListener)>:<public>:<android.content.Loader>
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff.Mode)>:<public final>:<android.widget.ImageView:android.view.View>
<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>:<public abstract>:<android.content.pm.PackageManager>
<android.app.Activity: android.app.Activity getParent()>:<public final>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<android.preference.PreferenceGroup: void onPrepareForRemoval()>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>:<public>:<android.hardware.usb.UsbInterface:android.os.Parcelable>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.opengl.GLES20: void glDetachShader(int,int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.graphics.Paint: boolean isLinearText()>:<public final>:<android.graphics.Paint>
<android.gesture.GestureOverlayView: boolean isGesturing()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>:<public synchronized>:<android.webkit.WebSettings>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.content.SyncInfo: void <init>()>:<>:<android.content.SyncInfo:android.os.Parcelable>
<android.os.TokenWatcher: boolean isAcquired()>:<public>:<android.os.TokenWatcher>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<org.apache.http.impl.client.RequestWrapper: void setMethod(java.lang.String)>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>:<public>:<android.graphics.drawable.ColorDrawable:android.graphics.drawable.Drawable>
<android.location.Location: void removeBearing()>:<public>:<android.location.Location:android.os.Parcelable>
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>:<public>:<android.telephony.TelephonyManager>
<org.apache.http.client.HttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>:<public abstract>:<org.apache.http.client.HttpClient>
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>:<public>:<android.os.RemoteCallbackList>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)>:<public>:<android.preference.MultiSelectListPreference:android.preference.DialogPreference,android.preference.Preference>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>:<public abstract>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.util.MonthDisplayHelper: int getOffset()>:<public>:<android.util.MonthDisplayHelper>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest)>:<protected>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.test.mock.MockPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.Context: int checkPermission(java.lang.String,int,int)>:<public abstract>:<android.content.Context>
<android.util.JsonWriter: android.util.JsonWriter endArray()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.sax.Element: void <init>()>:<>:<android.sax.Element>
<android.gesture.GestureLibrary: void removeGesture(java.lang.String,android.gesture.Gesture)>:<public>:<android.gesture.GestureLibrary>
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>:<public>:<android.media.RingtoneManager>
<org.apache.http.impl.conn.Wire: void output(byte[],int,int)>:<public>:<org.apache.http.impl.conn.Wire>
<junit.framework.TestSuite: java.util.Enumeration tests()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.database.CursorWrapper: double getDouble(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>:<public static native>:<android.opengl.GLES10>
<org.apache.commons.logging.Log: boolean isFatalEnabled()>:<public abstract>:<org.apache.commons.logging.Log>
<android.inputmethodservice.InputMethodService: void setTheme(int)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.app.WallpaperInfo: java.lang.String toString()>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.net.sip.SipProfile.Builder: android.net.sip.SipProfile.Builder setPort(int)>:<public>:<android.net.sip.SipProfile.Builder>
<android.graphics.BlurMaskFilter.Blur: void <init>(java.lang.String,int)>:<private>:<android.graphics.BlurMaskFilter.Blur:java.lang.Enum>
<android.net.sip.SipAudioCall: void answerCall(int)>:<public>:<android.net.sip.SipAudioCall>
<android.widget.AbsListView: int getTranscriptMode()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<org.apache.http.impl.conn.tsccm.WaitingThread: java.lang.Thread getThread()>:<public final>:<org.apache.http.impl.conn.tsccm.WaitingThread>
<android.view.View: void measure(int,int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>(java.lang.String)>:<public>:<android.database.sqlite.SQLiteOutOfMemoryException:android.database.sqlite.SQLiteException,android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.location.Location: void setAltitude(double)>:<public>:<android.location.Location:android.os.Parcelable>
<android.graphics.Matrix: void setScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>:<public>:<android.database.AbstractWindowedCursor:android.database.AbstractCursor>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setDepth(int,int)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbDevice)>:<public>:<android.hardware.usb.UsbManager>
<android.opengl.GLES10: void glDepthMask(boolean)>:<public static native>:<android.opengl.GLES10>
<android.widget.ListPopupWindow: boolean isShowing()>:<public>:<android.widget.ListPopupWindow>
<android.view.inputmethod.InputMethodManager: void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[])>:<public>:<android.view.inputmethod.InputMethodManager>
<android.widget.SimpleCursorTreeAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>:<public abstract>:<android.widget.SimpleCursorTreeAdapter.ViewBinder>
<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>:<public>:<android.renderscript.RSIllegalArgumentException:android.renderscript.RSRuntimeException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.os.Parcel: long readLong()>:<public final native>:<android.os.Parcel>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.PointF: void set(android.graphics.PointF)>:<public final>:<android.graphics.PointF>
<android.test.IsolatedContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>:<public>:<android.graphics.Camera>
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeConnection(org.apache.http.conn.OperatedClientConnection)>:<protected>:<org.apache.http.impl.conn.tsccm.AbstractConnPool:org.apache.http.impl.conn.tsccm.RefQueueHandler>
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>:<public static>:<android.text.method.MultiTapKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener,android.text.SpanWatcher>
<android.database.CursorWindow: byte[] getBlob(int,int)>:<public>:<android.database.CursorWindow:android.database.sqlite.SQLiteClosable,android.os.Parcelable>
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>:<public>:<android.graphics.drawable.Drawable>
<android.test.mock.MockPackageManager: int checkSignatures(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<org.apache.http.auth.MalformedChallengeException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.client.BasicCookieStore: void clear()>:<public synchronized>:<org.apache.http.impl.client.BasicCookieStore:org.apache.http.client.CookieStore>
<org.apache.http.impl.HttpConnectionMetricsImpl: void setMetric(java.lang.String,java.lang.Object)>:<public>:<org.apache.http.impl.HttpConnectionMetricsImpl:org.apache.http.HttpConnectionMetrics>
<android.app.Activity: void setRequestedOrientation(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(int)>:<public abstract>:<android.app.ActionBar.Tab>
<android.text.method.BaseMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>:<public>:<android.app.KeyguardManager>
<android.graphics.drawable.BitmapDrawable: int getGravity()>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<android.database.MergeCursor: int getCount()>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>:<public static native>:<android.opengl.GLES11:android.opengl.GLES10>
<org.json.JSONObject: int length()>:<public>:<org.json.JSONObject>
<android.os.FileObserver: void <init>(java.lang.String)>:<public>:<android.os.FileObserver>
<android.graphics.Rect: boolean contains(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<junit.framework.TestSuite: java.lang.String getName()>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>:<public>:<android.preference.PreferenceScreen:android.preference.PreferenceGroup,android.preference.Preference,android.widget.AdapterView.OnItemClickListener,android.content.DialogInterface.OnDismissListener>
<android.provider.MediaStore: void <init>()>:<public>:<android.provider.MediaStore>
<android.content.ContentUris: void <init>()>:<public>:<android.content.ContentUris>
<org.apache.http.HttpConnection: void setSocketTimeout(int)>:<public abstract>:<org.apache.http.HttpConnection>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler)>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.conn.ssl.SSLSocketFactory:org.apache.http.conn.scheme.LayeredSocketFactory>
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>:<public>:<android.widget.ResourceCursorAdapter:android.widget.CursorAdapter,android.widget.BaseAdapter>
<android.util.Log: void <init>()>:<>:<android.util.Log>
<android.widget.AdapterView: android.widget.Adapter getAdapter()>:<public abstract>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newSetOperation(android.net.Uri,android.accounts.Account,byte[])>:<public static>:<android.provider.SyncStateContract.Helpers>
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)>:<public>:<android.view.inputmethod.BaseInputConnection:android.view.inputmethod.InputConnection>
<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>:<public>:<org.apache.http.message.BasicNameValuePair:org.apache.http.NameValuePair,java.lang.Cloneable>
<android.renderscript.RenderScript.RSErrorHandler: void run()>:<public>:<android.renderscript.RenderScript.RSErrorHandler:java.lang.Runnable>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>:<public final>:<android.graphics.Canvas>
<android.webkit.WebView: void removeJavascriptInterface(java.lang.String)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>:<public>:<android.net.SSLCertificateSocketFactory:javax.net.ssl.SSLSocketFactory,javax.net.SocketFactory>
<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.ManagedClientConnection:org.apache.http.HttpClientConnection,org.apache.http.HttpInetConnection,org.apache.http.conn.ConnectionReleaseTrigger>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.widget.ListView: void addHeaderView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.json.JSONArray: java.lang.String optString(int,java.lang.String)>:<public>:<org.json.JSONArray>
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>:<public>:<android.app.SearchableInfo:android.os.Parcelable>
<android.graphics.drawable.shapes.Shape: void onResize(float,float)>:<protected>:<android.graphics.drawable.shapes.Shape:java.lang.Cloneable>
<android.widget.StackView: void showNext()>:<public>:<android.widget.StackView:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>:<public static native>:<android.opengl.GLES20>
<android.renderscript.Allocation: void copyFrom(android.renderscript.BaseObj[])>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.SharedPreferences.Editor: boolean commit()>:<public abstract>:<android.content.SharedPreferences.Editor>
<android.widget.CursorTreeAdapter: boolean hasStableIds()>:<public>:<android.widget.CursorTreeAdapter:android.widget.BaseExpandableListAdapter,android.widget.Filterable>
<android.text.style.StyleSpan: void <init>(int)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebChromeClient>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>:<public static native>:<android.opengl.GLES20>
<android.database.sqlite.SQLiteDatabase.CursorFactory: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>:<public abstract>:<android.database.sqlite.SQLiteDatabase.CursorFactory>
<android.preference.DialogPreference: void onBindDialogView(android.view.View)>:<protected>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config valueOf(java.lang.String)>:<public static>:<android.graphics.Bitmap.Config:java.lang.Enum>
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)>:<public static>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.app.DatePickerDialog: android.os.Bundle onSaveInstanceState()>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<android.view.View: void setTranslationX(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>:<public static>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.TwoLineListItem: android.widget.TextView getText2()>:<public>:<android.widget.TwoLineListItem:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.app.ListFragment: void onDestroyView()>:<public>:<android.app.ListFragment:android.app.Fragment>
<android.webkit.URLUtil: java.lang.String guessUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.provider.Contacts.Groups: void <init>()>:<>:<android.provider.Contacts.Groups:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>:<public static transient>:<android.animation.PropertyValuesHolder:java.lang.Cloneable>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float2)>:<public>:<android.renderscript.FieldPacker>
<android.widget.TextView: boolean moveCursorToVisibleOffset()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.TableLayout: void setColumnStretchable(int,boolean)>:<public>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.test.TouchUtils: void longClickView(android.test.ActivityInstrumentationTestCase,android.view.View)>:<public static>:<android.test.TouchUtils>
<android.location.Criteria: void setSpeedRequired(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler()>:<protected abstract>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,java.lang.CharSequence,int)>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.LinearLayout: void setShowDividers(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.preference.Preference: void <init>(android.content.Context)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.text.Layout: int getHeight()>:<public>:<android.text.Layout>
<android.app.TabActivity: void onContentChanged()>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Region: boolean set(int,int,int,int)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>:<public>:<android.webkit.WebViewClient>
<android.view.MotionEvent: float getYPrecision()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.conn.MultihomePlainSocketFactory: boolean equals(java.lang.Object)>:<public>:<org.apache.http.conn.MultihomePlainSocketFactory:org.apache.http.conn.scheme.SocketFactory>
<android.app.TabActivity: void setDefaultTab(int)>:<public>:<android.app.TabActivity:android.app.ActivityGroup,android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.graphics.Matrix: boolean preScale(float,float,float,float)>:<public>:<android.graphics.Matrix>
<android.text.style.StrikethroughSpan: int getSpanTypeId()>:<public>:<android.text.style.StrikethroughSpan:android.text.style.CharacterStyle,android.text.style.UpdateAppearance,android.text.ParcelableSpan>
<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<android.widget.DatePicker: long getMinDate()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newUpdate(android.net.Uri)>:<public static>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.view.Window: void setCallback(android.view.Window.Callback)>:<public>:<android.view.Window>
<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode.Callback)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)>:<public static>:<org.apache.http.conn.params.ConnManagerParams:org.apache.http.conn.params.ConnManagerPNames>
<org.json.JSONArray: org.json.JSONArray put(int,int)>:<public>:<org.json.JSONArray>
<org.apache.http.message.BasicListHeaderIterator: boolean hasNext()>:<public>:<org.apache.http.message.BasicListHeaderIterator:org.apache.http.HeaderIterator>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<org.json.JSONArray: long getLong(int)>:<public>:<org.json.JSONArray>
<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.SyncResult:android.os.Parcelable>
<android.app.Activity: void setContentView(int)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<junit.runner.BaseTestRunner: java.util.Properties getPreferences()>:<protected static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.RadioGroup.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.database.sqlite.SQLiteCursor: boolean requery()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)>:<public>:<android.media.JetPlayer>
<android.view.MotionEvent: int getSource()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()>:<protected>:<org.apache.http.impl.client.DefaultHttpClient:org.apache.http.impl.client.AbstractHttpClient>
<android.content.pm.PackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.test.mock.MockContext: java.lang.String getPackageCodePath()>:<public>:<android.test.mock.MockContext:android.content.Context>
<android.os.Bundle: int size()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.R.mipmap: void <init>()>:<public>:<android.R.mipmap>
<android.nfc.Tag: void <clinit>()>:<static>:<android.nfc.Tag:android.os.Parcelable>
<android.view.MotionEvent: float getHistoricalY(int)>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.telephony.ServiceState: void setStateOutOfService()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>:<public>:<android.app.DialogFragment:android.app.Fragment,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_TEST(android.renderscript.RenderScript)>:<public static>:<android.renderscript.ProgramStore:android.renderscript.BaseObj>
<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>:<public abstract>:<android.view.MenuItem>
<android.widget.SlidingDrawer: void setOnDrawerCloseListener(android.widget.SlidingDrawer.OnDrawerCloseListener)>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.renderscript.Matrix3f: void loadScale(float,float)>:<public>:<android.renderscript.Matrix3f>
<android.net.Uri: int hashCode()>:<public>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.text.style.RelativeSizeSpan: int getSpanTypeId()>:<public>:<android.text.style.RelativeSizeSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.database.DatabaseUtils.InsertHelper: long replace(android.content.ContentValues)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.webkit.CacheManager.CacheResult: java.lang.String getLastModified()>:<public>:<android.webkit.CacheManager.CacheResult>
<android.view.View.MeasureSpec: int getSize(int)>:<public static>:<android.view.View.MeasureSpec>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.database.ContentObserver: void onChange(boolean)>:<public>:<android.database.ContentObserver>
<android.widget.TableRow.LayoutParams: void <init>(int)>:<public>:<android.widget.TableRow.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.app.AlertDialog.Builder: void <init>(android.content.Context)>:<public>:<android.app.AlertDialog.Builder>
<org.xmlpull.v1.XmlSerializer: java.lang.String getNamespace()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.ClassLoader)>:<public>:<dalvik.system.PathClassLoader:java.lang.ClassLoader>
<android.widget.DialerFilter: int getMode()>:<public>:<android.widget.DialerFilter:android.widget.RelativeLayout,android.view.ViewGroup,android.view.View>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.ActivityNotFoundException: void <init>()>:<public>:<android.content.ActivityNotFoundException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.content.Loader: void onAbandon()>:<protected>:<android.content.Loader>
<android.graphics.Paint: void reset()>:<public>:<android.graphics.Paint>
<android.os.WorkSource: void <init>()>:<public>:<android.os.WorkSource:android.os.Parcelable>
<android.graphics.RectF: void <init>(android.graphics.Rect)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.renderscript.Byte4: void <init>()>:<public>:<android.renderscript.Byte4>
<android.provider.MediaStore.Images.Media: void <clinit>()>:<static>:<android.provider.MediaStore.Images.Media:android.provider.MediaStore.Images.ImageColumns>
<android.graphics.DrawFilter: void finalize()>:<protected>:<android.graphics.DrawFilter>
<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>:<public abstract>:<android.content.pm.PackageManager>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationYBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.content.res.AssetManager.AssetInputStream: void mark(int)>:<public final>:<android.content.res.AssetManager.AssetInputStream:java.io.InputStream>
<android.webkit.WebView: boolean canGoForward()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.nfc.tech.MifareClassic: boolean isConnected()>:<public volatile>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.view.ViewDebug.FlagToString: boolean outputIf()>:<public abstract>:<android.view.ViewDebug.FlagToString:java.lang.annotation.Annotation>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>:<public>:<android.app.WallpaperManager>
<android.test.suitebuilder.TestMethod: junit.framework.TestCase createTest()>:<public>:<android.test.suitebuilder.TestMethod>
<android.text.method.MetaKeyKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.MetaKeyKeyListener>
<android.view.Window.Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>:<public abstract>:<android.view.Window.Callback>
<android.view.GestureDetector.OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>:<public abstract>:<android.view.GestureDetector.OnGestureListener>
<junit.framework.Assert: void assertNotSame(java.lang.Object,java.lang.Object)>:<public static>:<junit.framework.Assert>
<android.app.Notification: java.lang.String toString()>:<public>:<android.app.Notification:android.os.Parcelable>
<android.app.ActionBar: void setCustomView(android.view.View)>:<public abstract>:<android.app.ActionBar>
<android.text.format.Time: void set(android.text.format.Time)>:<public>:<android.text.format.Time>
<android.opengl.GLES20: void glCullFace(int)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>:<public abstract>:<org.apache.http.HttpMessage>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>:<public static native>:<android.opengl.GLES20>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>:<public abstract>:<org.apache.http.params.HttpParams>
<android.widget.AbsListView: int computeVerticalScrollExtent()>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.VideoView: int getBufferPercentage()>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.app.Service: boolean onUnbind(android.content.Intent)>:<public>:<android.app.Service:android.content.ContextWrapper,android.content.Context,android.content.ComponentCallbacks>
<org.apache.http.entity.HttpEntityWrapper: void <init>(org.apache.http.HttpEntity)>:<public>:<org.apache.http.entity.HttpEntityWrapper:org.apache.http.HttpEntity>
<android.opengl.GLES10: void glVertexPointer(int,int,int,java.nio.Buffer)>:<public static>:<android.opengl.GLES10>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>:<public static native>:<android.opengl.GLES11Ext>
<android.renderscript.Mesh.Builder: int getCurrentIndexSetIndex()>:<public>:<android.renderscript.Mesh.Builder>
<android.view.View: void setOverScrollMode(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.widget.TabWidget: boolean isStripEnabled()>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.provider.ContactsContract.CommonDataKinds.Email: int getTypeLabelResource(int)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.Email:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.widget.TableLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>:<protected>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<org.apache.http.conn.ClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.ClientConnectionOperator>
<android.app.Instrumentation: void waitForIdle(java.lang.Runnable)>:<public>:<android.app.Instrumentation>
<android.nfc.tech.MifareClassic: int getSize()>:<public>:<android.nfc.tech.MifareClassic:android.nfc.tech.BasicTagTechnology>
<android.preference.Preference: boolean persistLong(long)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests: void testSuiteConstructionFailed()>:<public>:<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests:junit.framework.TestCase,junit.framework.Assert>
<android.database.sqlite.SQLiteProgram: void native_compile(java.lang.String)>:<protected final native>:<android.database.sqlite.SQLiteProgram:android.database.sqlite.SQLiteClosable>
<android.widget.GridView: void smoothScrollByOffset(int)>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>:<public>:<android.widget.AdapterView:android.view.ViewGroup,android.view.View>
<android.content.AsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>:<protected>:<android.content.AsyncQueryHandler:android.os.Handler>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>:<public>:<android.content.res.AssetFileDescriptor:android.os.Parcelable>
<android.test.mock.MockApplication: void onTerminate()>:<public>:<android.test.mock.MockApplication:android.app.Application,android.content.ContextWrapper,android.content.Context>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm[] values()>:<public static>:<android.webkit.WebSettings.LayoutAlgorithm:java.lang.Enum>
<android.content.ClipData: android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri)>:<public static>:<android.content.ClipData:android.os.Parcelable>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate)>:<public>:<android.net.http.SslError>
<android.content.ContentProvider: boolean isTemporary()>:<protected>:<android.content.ContentProvider:android.content.ComponentCallbacks>
<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>:<public>:<android.app.SearchManager:android.content.DialogInterface.OnDismissListener,android.content.DialogInterface.OnCancelListener>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()>:<public>:<org.apache.http.conn.ssl.AllowAllHostnameVerifier:org.apache.http.conn.ssl.AbstractVerifier>
<org.apache.http.message.BasicHeaderElementIterator: boolean hasNext()>:<public>:<org.apache.http.message.BasicHeaderElementIterator:org.apache.http.HeaderElementIterator>
<android.widget.AbsSeekBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>:<protected>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.OrientationEventListener: void onOrientationChanged(int)>:<public abstract>:<android.view.OrientationEventListener>
<android.view.animation.TranslateAnimation: void initialize(int,int,int,int)>:<public>:<android.view.animation.TranslateAnimation:android.view.animation.Animation>
<org.json.JSONObject: java.lang.Object remove(java.lang.String)>:<public>:<org.json.JSONObject>
<android.net.http.AndroidHttpClient: void enableCurlLogging(java.lang.String,int)>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>:<public static synchronized>:<android.webkit.CookieSyncManager:android.webkit.WebSyncManager>
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)>:<public synchronized>:<android.webkit.WebSettings>
<android.renderscript.Matrix3f: void scale(float,float,float)>:<public>:<android.renderscript.Matrix3f>
<android.widget.TextView: int getTotalPaddingTop()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.res.TypedArray: java.lang.String getPositionDescription()>:<public>:<android.content.res.TypedArray>
<android.os.Message: void setData(android.os.Bundle)>:<public>:<android.os.Message:android.os.Parcelable>
<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>:<public static>:<android.text.format.DateFormat>
<android.opengl.GLES10: void glLineWidth(float)>:<public static native>:<android.opengl.GLES10>
<android.database.DatabaseUtils.InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>:<public>:<android.database.DatabaseUtils.InsertHelper>
<android.widget.GridView: int getNumColumns()>:<public>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests: void <init>(java.lang.Exception)>:<public>:<android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests:junit.framework.TestCase,junit.framework.Assert>
<org.json.JSONObject: boolean optBoolean(java.lang.String,boolean)>:<public>:<org.json.JSONObject>
<android.net.NetworkInfo.State: void <clinit>()>:<static>:<android.net.NetworkInfo.State:java.lang.Enum>
<android.widget.BaseAdapter: int getItemViewType(int)>:<public>:<android.widget.BaseAdapter:android.widget.ListAdapter,android.widget.SpinnerAdapter>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>:<public>:<android.app.ActivityManager.RunningAppProcessInfo:android.os.Parcelable>
<android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<junit.framework.TestFailure: boolean isFailure()>:<public>:<junit.framework.TestFailure>
<android.os.Process: int myPid()>:<public static final native>:<android.os.Process>
<android.view.InputDevice.MotionRange: void <init>()>:<>:<android.view.InputDevice.MotionRange>
<org.apache.http.client.methods.HttpTrace: void <init>()>:<public>:<org.apache.http.client.methods.HttpTrace:org.apache.http.client.methods.HttpRequestBase,org.apache.http.message.AbstractHttpMessage>
<android.widget.AbsListView: void onMeasure(int,int)>:<protected>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.animation.ValueAnimator: void setStartDelay(long)>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.view.ViewDebug: void stopRecyclerTracing()>:<public static>:<android.view.ViewDebug>
<org.apache.http.HttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>:<public abstract>:<org.apache.http.HttpClientConnection:org.apache.http.HttpConnection>
<org.apache.http.auth.AuthScope: java.lang.String getHost()>:<public>:<org.apache.http.auth.AuthScope>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewSizes()>:<public>:<android.hardware.Camera.Parameters>
<android.text.method.BaseMovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>:<public>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.ResourceCursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>:<public>:<android.widget.ResourceCursorTreeAdapter:android.widget.CursorTreeAdapter,android.widget.BaseExpandableListAdapter>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>:<public>:<android.view.ViewPropertyAnimator>
<android.view.View.BaseSavedState: void <init>(android.os.Parcelable)>:<public>:<android.view.View.BaseSavedState:android.view.AbsSavedState>
<android.app.ExpandableListActivity: long getSelectedPosition()>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.test.AndroidTestCase: void setUp()>:<protected>:<android.test.AndroidTestCase:junit.framework.TestCase,junit.framework.Assert>
<android.widget.SearchView: boolean isIconified()>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>:<public>:<android.hardware.SensorManager>
<android.telephony.SmsMessage: boolean isReplace()>:<public>:<android.telephony.SmsMessage>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.Object clone()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.MotionEvent: float getTouchMinor()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.app.Instrumentation: void startProfiling()>:<public>:<android.app.Instrumentation>
<android.telephony.ServiceState: java.lang.String toString()>:<public>:<android.telephony.ServiceState:android.os.Parcelable>
<junit.framework.Assert: void assertEquals(java.lang.String,byte,byte)>:<public static>:<junit.framework.Assert>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>:<public>:<android.text.BoringLayout:android.text.Layout,android.text.TextUtils.EllipsizeCallback>
<android.widget.TextView: int length()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.QuickContactBadge: void assignContactUri(android.net.Uri)>:<public>:<android.widget.QuickContactBadge:android.widget.ImageView,android.view.View,android.view.View.OnClickListener>
<android.text.Html.ImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>:<public abstract>:<android.text.Html.ImageGetter>
<android.app.backup.BackupDataInputStream: int read()>:<public>:<android.app.backup.BackupDataInputStream:java.io.InputStream>
<android.view.View: void setTranslationY(float)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ScaleDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.inputmethod.InputBinding: int describeContents()>:<public>:<android.view.inputmethod.InputBinding:android.os.Parcelable>
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>:<public>:<android.view.VelocityTracker>
<android.database.sqlite.SQLiteException: void <init>()>:<public>:<android.database.sqlite.SQLiteException:android.database.SQLException,java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.NinePatch)>:<public>:<android.graphics.drawable.NinePatchDrawable:android.graphics.drawable.Drawable>
<android.webkit.SslErrorHandler: void <init>()>:<>:<android.webkit.SslErrorHandler:android.os.Handler>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String)>:<public static>:<android.provider.Settings.Secure:android.provider.Settings.NameValueTable>
<android.renderscript.Program: void destroy()>:<public volatile>:<android.renderscript.Program:android.renderscript.BaseObj>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.location.Criteria: void setBearingAccuracy(int)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.preference.RingtonePreference: void onClick()>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>:<public final>:<android.content.ContentResolver>
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.os.Bundle: void <init>(java.lang.ClassLoader)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.Chronometer:android.widget.TextView,android.view.View>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProviderClient>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>:<public static transient>:<android.animation.ValueAnimator:android.animation.Animator>
<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement nextElement()>:<public>:<org.apache.http.message.BasicHeaderElementIterator:org.apache.http.HeaderElementIterator>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.content.res.TypedArray: void <init>()>:<>:<android.content.res.TypedArray>
<android.text.Spanned: int getSpanFlags(java.lang.Object)>:<public abstract>:<android.text.Spanned:java.lang.CharSequence>
<android.os.ParcelFileDescriptor: void <clinit>()>:<static>:<android.os.ParcelFileDescriptor:android.os.Parcelable>
<android.widget.HeaderViewListAdapter: int getItemViewType(int)>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<android.widget.SlidingDrawer: void animateClose()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setSamples(int,int,float)>:<public>:<android.renderscript.RenderScriptGL.SurfaceConfig>
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<org.apache.http.HttpInetConnection: int getRemotePort()>:<public abstract>:<org.apache.http.HttpInetConnection:org.apache.http.HttpConnection>
<android.preference.RingtonePreference: void onPrepareRingtonePickerIntent(android.content.Intent)>:<protected>:<android.preference.RingtonePreference:android.preference.Preference,android.preference.PreferenceManager.OnActivityResultListener>
<android.view.animation.OvershootInterpolator: void <init>()>:<public>:<android.view.animation.OvershootInterpolator:android.view.animation.Interpolator>
<android.media.audiofx.EnvironmentalReverb.Settings: java.lang.String toString()>:<public>:<android.media.audiofx.EnvironmentalReverb.Settings>
<android.database.AbstractCursor: boolean isLast()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<org.apache.http.impl.cookie.BasicClientCookie: void setComment(java.lang.String)>:<public>:<org.apache.http.impl.cookie.BasicClientCookie:org.apache.http.cookie.SetCookie,org.apache.http.cookie.ClientCookie,java.lang.Cloneable>
<android.renderscript.FileA3D: int getIndexEntryCount()>:<public>:<android.renderscript.FileA3D:android.renderscript.BaseObj>
<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.graphics.Region: boolean getBounds(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.database.sqlite.SQLiteCursor: void registerDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>:<public>:<android.webkit.WebChromeClient>
<android.content.ComponentName: int describeContents()>:<public>:<android.content.ComponentName:android.os.Parcelable,java.lang.Cloneable,java.lang.Comparable>
<android.view.KeyCharacterMap: void <init>()>:<>:<android.view.KeyCharacterMap>
<org.apache.http.io.HttpTransportMetrics: long getBytesTransferred()>:<public abstract>:<org.apache.http.io.HttpTransportMetrics>
<android.renderscript.Element: android.renderscript.Element U64(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.media.AudioManager: int getStreamMaxVolume(int)>:<public>:<android.media.AudioManager>
<android.preference.PreferenceActivity.Header: void writeToParcel(android.os.Parcel,int)>:<public>:<android.preference.PreferenceActivity.Header:android.os.Parcelable>
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer()>:<protected>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.graphics.Rect: void union(int,int,int,int)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>:<public>:<android.telephony.PhoneStateListener>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.view.MotionEvent: void <clinit>()>:<static>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.animation.LayoutTransition.TransitionListener: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>:<public abstract>:<android.animation.LayoutTransition.TransitionListener>
<android.view.View: void setContentDescription(java.lang.CharSequence)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<junit.framework.AssertionFailedError: void <init>(java.lang.String)>:<public>:<junit.framework.AssertionFailedError:java.lang.Error,java.lang.Throwable>
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.test.ActivityInstrumentationTestCase2: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.ActivityInstrumentationTestCase2:android.test.ActivityTestCase,android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.text.Annotation: void <init>(android.os.Parcel)>:<public>:<android.text.Annotation:android.text.ParcelableSpan>
<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)>:<protected>:<android.widget.MultiAutoCompleteTextView:android.widget.AutoCompleteTextView,android.widget.EditText,android.widget.TextView,android.view.View>
<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.app.Activity: void onContextMenuClosed(android.view.Menu)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>:<public>:<android.widget.HeaderViewListAdapter:android.widget.WrapperListAdapter,android.widget.Filterable>
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String)>:<protected>:<org.apache.http.impl.cookie.AbstractCookieSpec:org.apache.http.cookie.CookieSpec>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.widget.Gallery: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>:<protected>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.MotionEvent.PointerCoords: void <init>()>:<public>:<android.view.MotionEvent.PointerCoords>
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>:<public>:<android.view.inputmethod.InputMethodManager>
<android.provider.ContactsContract.RawContacts.Data: void <init>()>:<>:<android.provider.ContactsContract.RawContacts.Data:android.provider.BaseColumns,android.provider.ContactsContract.DataColumns>
<org.apache.http.impl.cookie.RFC2965Spec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965Spec:org.apache.http.impl.cookie.RFC2109Spec,org.apache.http.impl.cookie.CookieSpecBase,org.apache.http.impl.cookie.AbstractCookieSpec>
<android.widget.ProgressBar: void onDetachedFromWindow()>:<protected>:<android.widget.ProgressBar:android.view.View>
<android.view.MotionEvent: float getRawY()>:<public final>:<android.view.MotionEvent:android.view.InputEvent,android.os.Parcelable>
<android.widget.TextView: void setHintTextColor(int)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>:<public>:<org.apache.http.message.BasicHeaderValueParser:org.apache.http.message.HeaderValueParser>
<android.view.DragEvent: android.content.ClipDescription getClipDescription()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)>:<public>:<android.widget.TextSwitcher:android.widget.ViewSwitcher,android.widget.ViewAnimator,android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.TableLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>:<protected>:<android.widget.TableLayout:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.telephony.SignalStrength: int getEvdoEcio()>:<public>:<android.telephony.SignalStrength:android.os.Parcelable>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>:<public>:<android.graphics.Paint>
<android.content.IntentFilter: java.util.Iterator schemesIterator()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.ViewParent: void createContextMenu(android.view.ContextMenu)>:<public abstract>:<android.view.ViewParent>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>:<public>:<org.apache.http.impl.conn.tsccm.ConnPoolByRoute:org.apache.http.impl.conn.tsccm.AbstractConnPool>
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.view.ScaleGestureDetector: float getCurrentSpanX()>:<public>:<android.view.ScaleGestureDetector>
<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>:<public>:<android.preference.DialogPreference:android.preference.Preference,android.content.DialogInterface.OnClickListener,android.content.DialogInterface.OnDismissListener,android.preference.PreferenceManager.OnActivityDestroyListener>
<android.provider.ContactsContract.Directory: void <clinit>()>:<static>:<android.provider.ContactsContract.Directory:android.provider.BaseColumns>
<android.telephony.TelephonyManager: void <init>()>:<>:<android.telephony.TelephonyManager>
<android.opengl.GLException: void <init>(int)>:<public>:<android.opengl.GLException:java.lang.RuntimeException,java.lang.Exception,java.lang.Throwable>
<android.renderscript.FieldPacker: void addF64(double)>:<public>:<android.renderscript.FieldPacker>
<org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>:<public abstract>:<org.apache.http.conn.scheme.SocketFactory>
<org.apache.http.impl.cookie.BestMatchSpec: void <init>()>:<public>:<org.apache.http.impl.cookie.BestMatchSpec:org.apache.http.cookie.CookieSpec>
<android.os.Bundle: void putByte(java.lang.String,byte)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.inputmethodservice.Keyboard: int getHeight()>:<public>:<android.inputmethodservice.Keyboard>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.webkit.WebSettings: android.webkit.WebSettings.PluginState getPluginState()>:<public synchronized>:<android.webkit.WebSettings>
<org.apache.http.impl.conn.Wire: void input(java.lang.String)>:<public>:<org.apache.http.impl.conn.Wire>
<android.media.AudioManager: void playSoundEffect(int)>:<public>:<android.media.AudioManager>
<android.graphics.Path: void setLastPoint(float,float)>:<public>:<android.graphics.Path>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void close()>:<public>:<android.os.ParcelFileDescriptor.AutoCloseInputStream:java.io.FileInputStream,java.io.InputStream>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>:<public>:<android.accounts.AccountManager>
<junit.framework.TestResult: void <init>()>:<public>:<junit.framework.TestResult>
<android.view.View: java.lang.Object getTag(int)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.test.ProviderTestCase2: android.test.mock.MockContentResolver getMockContentResolver()>:<public>:<android.test.ProviderTestCase2:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.renderscript.AllocationAdapter: void copyFrom(byte[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.ScrollingMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>:<public static native>:<android.opengl.Matrix>
<android.widget.ListView: android.view.View findViewTraversal(int)>:<protected>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<android.database.AbstractCursor: boolean moveToFirst()>:<public final>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.provider.Contacts.People: void <init>()>:<>:<android.provider.Contacts.People:android.provider.BaseColumns,android.provider.Contacts.PeopleColumns,android.provider.Contacts.PhonesColumns,android.provider.Contacts.PresenceColumns>
<org.apache.http.HeaderElementIterator: boolean hasNext()>:<public abstract>:<org.apache.http.HeaderElementIterator:java.util.Iterator>
<org.apache.http.ProtocolVersion: int compareToVersion(org.apache.http.ProtocolVersion)>:<public>:<org.apache.http.ProtocolVersion:java.io.Serializable,java.lang.Cloneable>
<android.widget.DigitalClock: void onDetachedFromWindow()>:<protected>:<android.widget.DigitalClock:android.widget.TextView,android.view.View>
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>:<protected>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>:<public>:<android.widget.RadioGroup:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.widget.LinearLayout: void setGravity(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<android.media.AudioManager: boolean isMusicActive()>:<public>:<android.media.AudioManager>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(java.lang.String)>:<public>:<android.renderscript.Program.BaseProgramBuilder>
<android.view.VelocityTracker: void clear()>:<public>:<android.view.VelocityTracker>
<android.graphics.BitmapRegionDecoder: void finalize()>:<protected>:<android.graphics.BitmapRegionDecoder>
<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>:<public abstract>:<android.view.MenuItem>
<android.content.Loader: void onStartLoading()>:<protected>:<android.content.Loader>
<org.apache.http.conn.EofSensorInputStream: void abortConnection()>:<public>:<org.apache.http.conn.EofSensorInputStream:java.io.InputStream,org.apache.http.conn.ConnectionReleaseTrigger>
<org.apache.http.conn.routing.RouteInfo.TunnelType: org.apache.http.conn.routing.RouteInfo.TunnelType[] values()>:<public static>:<org.apache.http.conn.routing.RouteInfo.TunnelType:java.lang.Enum>
<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])>:<public>:<android.widget.SimpleCursorAdapter:android.widget.ResourceCursorAdapter,android.widget.CursorAdapter,android.widget.BaseAdapter>
<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>:<public>:<org.apache.http.auth.AuthenticationException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.test.ViewAsserts: void assertHasScreenCoordinates(android.view.View,android.view.View,int,int)>:<public static>:<android.test.ViewAsserts>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsDelay(int)>:<public>:<android.media.audiofx.EnvironmentalReverb:android.media.audiofx.AudioEffect>
<org.apache.http.impl.conn.Wire: void output(byte[])>:<public>:<org.apache.http.impl.conn.Wire>
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>:<public>:<android.database.sqlite.SQLiteStatement:android.database.sqlite.SQLiteProgram,android.database.sqlite.SQLiteClosable>
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>:<public>:<android.content.ContentResolver>
<android.text.Layout: void increaseWidthTo(int)>:<public final>:<android.text.Layout>
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.widget.AlphabetIndexer: java.lang.Object[] getSections()>:<public>:<android.widget.AlphabetIndexer:android.database.DataSetObserver,android.widget.SectionIndexer>
<android.content.IntentFilter: void <init>(java.lang.String)>:<public>:<android.content.IntentFilter:android.os.Parcelable>
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.protocol.BasicHttpProcessor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<org.apache.http.auth.NTCredentials: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>:<public>:<org.apache.http.auth.NTCredentials:org.apache.http.auth.Credentials>
<android.app.LoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public abstract>:<android.app.LoaderManager>
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>:<public static native>:<android.opengl.GLES10>
<org.apache.http.impl.io.AbstractSessionInputBuffer: void <init>()>:<public>:<org.apache.http.impl.io.AbstractSessionInputBuffer:org.apache.http.io.SessionInputBuffer>
<android.os.HandlerThread: boolean quit()>:<public>:<android.os.HandlerThread:java.lang.Thread>
<org.apache.http.protocol.BasicHttpProcessor: void addResponseInterceptor(org.apache.http.HttpResponseInterceptor)>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.text.format.Time: int getActualMaximum(int)>:<public>:<android.text.format.Time>
<android.view.ViewGroup: int getDescendantFocusability()>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.view.animation.Transformation: void set(android.view.animation.Transformation)>:<public>:<android.view.animation.Transformation>
<android.test.mock.MockContext: java.io.File getDatabasePath(java.lang.String)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.protocol.UriPatternMatcher: java.lang.Object lookup(java.lang.String)>:<public>:<org.apache.http.protocol.UriPatternMatcher>
<org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.widget.TableLayout.LayoutParams: void <init>(int,int,float)>:<public>:<android.widget.TableLayout.LayoutParams:android.widget.LinearLayout.LayoutParams,android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.hardware.usb.UsbAccessory: int hashCode()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.net.sip.SipErrorCode: java.lang.String toString(int)>:<public static>:<android.net.sip.SipErrorCode>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDown(android.view.MotionEvent)>:<public>:<android.view.GestureDetector.SimpleOnGestureListener:android.view.GestureDetector.OnGestureListener,android.view.GestureDetector.OnDoubleTapListener>
<android.test.suitebuilder.TestMethod: void <init>(java.lang.reflect.Method,java.lang.Class)>:<public>:<android.test.suitebuilder.TestMethod>
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.CompoundButton:android.widget.Button,android.widget.TextView,android.view.View,android.widget.Checkable>
<android.app.Fragment: boolean getRetainInstance()>:<public final>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<android.hardware.usb.UsbDeviceConnection: android.hardware.usb.UsbRequest requestWait()>:<public>:<android.hardware.usb.UsbDeviceConnection>
<android.util.EventLog: int writeEvent(int,int)>:<public static native>:<android.util.EventLog>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>:<public static>:<android.animation.AnimatorInflater>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>:<public static native>:<android.opengl.GLES11Ext>
<android.widget.TextView: void setTextSize(float)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.MoreAsserts: java.util.regex.MatchResult assertContainsRegex(java.lang.String,java.lang.String)>:<public static>:<android.test.MoreAsserts>
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<org.apache.http.impl.cookie.BasicDomainHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.BasicDomainHandler:org.apache.http.cookie.CookieAttributeHandler>
<android.net.ConnectivityManager: int getNetworkPreference()>:<public>:<android.net.ConnectivityManager>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Audio.Media:android.provider.MediaStore.Audio.AudioColumns>
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.widget.ListView: int getDividerHeight()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.renderscript.AllocationAdapter: void copyFrom(android.renderscript.BaseObj[])>:<public>:<android.renderscript.AllocationAdapter:android.renderscript.Allocation,android.renderscript.BaseObj>
<android.view.View: void setRight(int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>:<public>:<org.apache.http.auth.AuthScope>
<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.content.AsyncTaskLoader: java.lang.Object loadInBackground()>:<public abstract>:<android.content.AsyncTaskLoader:android.content.Loader>
<org.apache.http.impl.auth.NTLMScheme: void <init>(org.apache.http.impl.auth.NTLMEngine)>:<public>:<org.apache.http.impl.auth.NTLMScheme:org.apache.http.impl.auth.AuthSchemeBase>
<android.graphics.Bitmap: void setPixel(int,int,int)>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.hardware.SensorEvent: void <init>()>:<>:<android.hardware.SensorEvent>
<android.os.Bundle: void <init>(android.os.Bundle)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.view.Window.Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>:<public abstract>:<android.view.Window.Callback>
<android.os.StrictMode.ThreadPolicy: void <clinit>()>:<static>:<android.os.StrictMode.ThreadPolicy>
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>:<public>:<android.bluetooth.BluetoothHeadset:android.bluetooth.BluetoothProfile>
<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>:<public>:<org.apache.http.cookie.CookieOrigin>
<android.text.SpannableString: void removeSpan(java.lang.Object)>:<public>:<android.text.SpannableString:android.text.SpannableStringInternal,java.lang.CharSequence,android.text.GetChars,android.text.Spannable>
<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>:<public static final>:<android.provider.Browser>
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>:<public static>:<android.util.Log>
<android.widget.ViewAnimator: void removeAllViews()>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetAllocation(android.renderscript.Allocation,android.renderscript.Mesh.Primitive)>:<public>:<android.renderscript.Mesh.AllocationBuilder>
<android.widget.NumberPicker: void setValue(int)>:<public>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>:<public>:<android.location.LocationManager>
<android.test.ServiceTestCase: void setupService()>:<protected>:<android.test.ServiceTestCase:android.test.AndroidTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.view.ViewGroup: void endViewTransition(android.view.View)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.widget.TextView: void append(java.lang.CharSequence,int,int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.text.style.StyleSpan: void <init>(android.os.Parcel)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.database.CursorWrapper: boolean move(int)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.animation.Animator: void end()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>:<public>:<android.content.pm.PackageItemInfo>
<android.view.accessibility.AccessibilityEvent: void <init>()>:<>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.app.FragmentBreadCrumbs: void onLayout(boolean,int,int,int,int)>:<protected>:<android.app.FragmentBreadCrumbs:android.view.ViewGroup,android.view.View,android.app.FragmentManager.OnBackStackChangedListener>
<android.widget.ExpandableListAdapter: long getGroupId(int)>:<public abstract>:<android.widget.ExpandableListAdapter>
<android.bluetooth.BluetoothClass: boolean hasService(int)>:<public>:<android.bluetooth.BluetoothClass:android.os.Parcelable>
<org.apache.http.message.BasicListHeaderIterator: org.apache.http.Header nextHeader()>:<public>:<org.apache.http.message.BasicListHeaderIterator:org.apache.http.HeaderIterator>
<android.widget.ImageView: void setMaxHeight(int)>:<public>:<android.widget.ImageView:android.view.View>
<android.content.pm.PackageStats: void <init>(android.content.pm.PackageStats)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.widget.TextView: void setIncludeFontPadding(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.test.MoreAsserts: void assertNotEmpty(java.lang.String,java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllIllegal()>:<public static final>:<android.net.UrlQuerySanitizer>
<android.text.LoginFilter.UsernameFilterGMail: void <init>()>:<public>:<android.text.LoginFilter.UsernameFilterGMail:android.text.LoginFilter>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>:<public>:<android.app.WallpaperInfo:android.os.Parcelable>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>:<public>:<android.view.inputmethod.InputMethodManager>
<android.view.Window.Callback: void onAttachedToWindow()>:<public abstract>:<android.view.Window.Callback>
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>:<public>:<android.widget.CursorAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.widget.ViewAnimator: void removeViewInLayout(android.view.View)>:<public>:<android.widget.ViewAnimator:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.content.res.Configuration: boolean needNewResources(int,int)>:<public static>:<android.content.res.Configuration:android.os.Parcelable,java.lang.Comparable>
<android.widget.GridView: android.widget.Adapter getAdapter()>:<public volatile>:<android.widget.GridView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.TextView: void setSelected(boolean)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.view.inputmethod.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.widget.LinearLayout: void setOrientation(int)>:<public>:<android.widget.LinearLayout:android.view.ViewGroup,android.view.View>
<org.apache.http.HttpConnectionMetrics: java.lang.Object getMetric(java.lang.String)>:<public abstract>:<org.apache.http.HttpConnectionMetrics>
<android.nfc.FormatException: void <init>(java.lang.String)>:<public>:<android.nfc.FormatException:java.lang.Exception,java.lang.Throwable>
<dalvik.'annotation'.TestTarget: java.lang.Class[] methodArgs()>:<public abstract>:<dalvik.annotation.TestTarget:java.lang.annotation.Annotation>
<android.provider.Contacts.Settings: void <init>()>:<>:<android.provider.Contacts.Settings:android.provider.BaseColumns,android.provider.Contacts.SettingsColumns>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int)>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)>:<public static>:<android.text.TextUtils>
<android.view.KeyEvent: int getMetaState()>:<public final>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.view.InputDevice: int getKeyboardType()>:<public>:<android.view.InputDevice:android.os.Parcelable>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>:<public static>:<android.text.format.DateUtils>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>:<public>:<android.graphics.drawable.Drawable>
<android.graphics.Shader.TileMode: void <init>(java.lang.String,int)>:<private>:<android.graphics.Shader.TileMode:java.lang.Enum>
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>:<public>:<android.widget.VideoView:android.view.SurfaceView,android.view.View,android.widget.MediaController.MediaPlayerControl>
<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>:<public>:<android.util.DisplayMetrics>
<android.widget.ListAdapter: boolean areAllItemsEnabled()>:<public abstract>:<android.widget.ListAdapter:android.widget.Adapter>
<android.app.ActivityManager.ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>:<public>:<android.app.ActivityManager.ProcessErrorStateInfo:android.os.Parcelable>
<android.location.GpsSatellite: float getAzimuth()>:<public>:<android.location.GpsSatellite>
<android.content.Context: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.content.res.Resources: android.content.res.Resources.Theme newTheme()>:<public final>:<android.content.res.Resources>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>:<public static>:<android.text.method.QwertyKeyListener:android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<org.xmlpull.v1.XmlPullParser: java.lang.String getInputEncoding()>:<public abstract>:<org.xmlpull.v1.XmlPullParser>
<android.database.MergeCursor: java.lang.String getString(int)>:<public>:<android.database.MergeCursor:android.database.AbstractCursor>
<android.renderscript.Element: android.renderscript.Element PROGRAM_RASTER(android.renderscript.RenderScript)>:<public static>:<android.renderscript.Element:android.renderscript.BaseObj>
<android.os.Process: int getGidForName(java.lang.String)>:<public static final native>:<android.os.Process>
<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>:<public abstract>:<android.app.LoaderManager>
<android.net.http.SslError: boolean addError(int)>:<public>:<android.net.http.SslError>
<android.net.Uri: java.lang.String getQuery()>:<public abstract>:<android.net.Uri:android.os.Parcelable,java.lang.Comparable>
<android.test.RenamingDelegatingContext: void <init>(android.content.Context,android.content.Context,java.lang.String)>:<public>:<android.test.RenamingDelegatingContext:android.content.ContextWrapper,android.content.Context>
<android.inputmethodservice.KeyboardView: void invalidateKey(int)>:<public>:<android.inputmethodservice.KeyboardView:android.view.View,android.view.View.OnClickListener>
<org.apache.http.message.BasicRequestLine: java.lang.String getUri()>:<public>:<org.apache.http.message.BasicRequestLine:org.apache.http.RequestLine,java.lang.Cloneable>
<android.test.mock.MockPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>:<public final>:<android.os.Handler>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short4)>:<public>:<android.renderscript.FieldPacker>
<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.animation.GridLayoutAnimationController.AnimationParameters: void <init>()>:<public>:<android.view.animation.GridLayoutAnimationController.AnimationParameters:android.view.animation.LayoutAnimationController.AnimationParameters>
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>:<public>:<android.database.CursorWrapper:android.database.Cursor>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)>:<public>:<android.app.admin.DevicePolicyManager>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>:<public>:<android.hardware.usb.UsbDevice:android.os.Parcelable>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>:<public static native>:<android.opengl.GLES11Ext>
<android.view.View: boolean getKeepScreenOn()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.IntentFilter: int getPriority()>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>:<public>:<android.app.ExpandableListActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.View.OnCreateContextMenuListener,android.widget.ExpandableListView.OnChildClickListener,android.widget.ExpandableListView.OnGroupCollapseListener,android.widget.ExpandableListView.OnGroupExpandListener>
<android.widget.TextView: boolean getLinksClickable()>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.telephony.PhoneNumberUtils: boolean isWellFormedSmsAddress(java.lang.String)>:<public static>:<android.telephony.PhoneNumberUtils>
<android.R.animator: void <init>()>:<public>:<android.R.animator>
<android.media.AudioTrack: int getSampleRate()>:<public>:<android.media.AudioTrack>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<org.apache.http.HttpResponseFactory: org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext)>:<public abstract>:<org.apache.http.HttpResponseFactory>
<android.net.MailTo: void <init>()>:<>:<android.net.MailTo>
<android.app.PendingIntent: java.lang.String toString()>:<public>:<android.app.PendingIntent:android.os.Parcelable>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>:<public>:<android.view.animation.LayoutAnimationController>
<android.widget.ArrayAdapter: android.content.Context getContext()>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.preference.Preference: boolean hasKey()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.widget.TableRow: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>:<public volatile>:<android.widget.TableRow:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.media.AudioManager: void setStreamVolume(int,int,int)>:<public>:<android.media.AudioManager>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.os.Bundle: boolean hasFileDescriptors()>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>:<public>:<android.telephony.cdma.CdmaCellLocation:android.telephony.CellLocation>
<android.os.Build.VERSION: void <init>()>:<public>:<android.os.Build.VERSION>
<org.apache.http.impl.io.HttpRequestParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)>:<public>:<org.apache.http.impl.io.HttpRequestParser:org.apache.http.impl.io.AbstractMessageParser>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.view.animation.GridLayoutAnimationController: float getRowDelay()>:<public>:<android.view.animation.GridLayoutAnimationController:android.view.animation.LayoutAnimationController>
<android.animation.Animator: android.animation.Animator clone()>:<public>:<android.animation.Animator:java.lang.Cloneable>
<android.widget.ListView: int getMaxScrollAmount()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>:<public>:<android.graphics.drawable.PictureDrawable:android.graphics.drawable.Drawable>
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()>:<public>:<android.gesture.GestureOverlayView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.hardware.usb.UsbAccessory: java.lang.String getUri()>:<public>:<android.hardware.usb.UsbAccessory:android.os.Parcelable>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeath()>:<public>:<android.os.StrictMode.ThreadPolicy.Builder>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context)>:<public static>:<android.speech.SpeechRecognizer>
<android.preference.Preference: java.lang.String getFragment()>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.net.wifi.WifiManager: boolean isWifiEnabled()>:<public>:<android.net.wifi.WifiManager>
<android.content.ClipboardManager: boolean hasText()>:<public>:<android.content.ClipboardManager:android.text.ClipboardManager>
<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int)>:<public>:<android.widget.FrameLayout.LayoutParams:android.view.ViewGroup.MarginLayoutParams,android.view.ViewGroup.LayoutParams>
<android.text.Layout: int getLineCount()>:<public abstract>:<android.text.Layout>
<android.content.Loader: java.lang.String dataToString(java.lang.Object)>:<public>:<android.content.Loader>
<org.apache.http.cookie.Cookie: java.util.Date getExpiryDate()>:<public abstract>:<org.apache.http.cookie.Cookie>
<android.widget.ArrayAdapter: void addAll(java.util.Collection)>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,android.renderscript.Allocation.MipmapControl,int)>:<public static>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.text.method.LinkMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.LinkMovementMethod:android.text.method.ScrollingMovementMethod,android.text.method.BaseMovementMethod>
<android.graphics.Canvas: boolean isOpaque()>:<public native>:<android.graphics.Canvas>
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>:<public static>:<android.text.TextUtils>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.app.DatePickerDialog: void onRestoreInstanceState(android.os.Bundle)>:<public>:<android.app.DatePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.DatePicker.OnDateChangedListener>
<junit.runner.BaseTestRunner: void startTest(junit.framework.Test)>:<public synchronized>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.AdapterViewFlipper: void onDetachedFromWindow()>:<protected>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>:<public>:<android.net.http.AndroidHttpClient:org.apache.http.client.HttpClient>
<android.telephony.gsm.SmsMessage: java.lang.String getEmailBody()>:<public>:<android.telephony.gsm.SmsMessage>
<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void abort()>:<public>:<org.apache.http.impl.conn.tsccm.WaitingThreadAborter>
<android.graphics.Color: void RGBToHSV(int,int,int,float[])>:<public static>:<android.graphics.Color>
<android.graphics.Rect: void set(android.graphics.Rect)>:<public>:<android.graphics.Rect:android.os.Parcelable>
<android.app.Dialog: void setTitle(int)>:<public>:<android.app.Dialog:android.content.DialogInterface,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener>
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>:<public>:<android.graphics.drawable.DrawableContainer:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.text.Layout: float getSpacingAdd()>:<public final>:<android.text.Layout>
<android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>:<public static>:<android.database.DatabaseUtils>
<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>:<public>:<android.app.TimePickerDialog:android.app.AlertDialog,android.app.Dialog,android.content.DialogInterface.OnClickListener,android.widget.TimePicker.OnTimeChangedListener>
<android.graphics.Matrix: boolean preScale(float,float)>:<public>:<android.graphics.Matrix>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>:<public static>:<android.view.VelocityTracker>
<android.provider.ContactsContract.Directory: void <init>()>:<>:<android.provider.ContactsContract.Directory:android.provider.BaseColumns>
<android.widget.AdapterViewFlipper: void startFlipping()>:<public>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.os.Debug: void resetGlobalGcInvocationCount()>:<public static>:<android.os.Debug>
<android.text.method.BaseMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>:<protected>:<android.text.method.BaseMovementMethod:android.text.method.MovementMethod>
<android.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View.OnFocusChangeListener)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.graphics.RectF: void union(android.graphics.RectF)>:<public>:<android.graphics.RectF:android.os.Parcelable>
<android.widget.SearchView: void setSuggestionsAdapter(android.widget.CursorAdapter)>:<public>:<android.widget.SearchView:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.AbstractHttpClient: void setReuseStrategy(org.apache.http.ConnectionReuseStrategy)>:<public synchronized>:<org.apache.http.impl.client.AbstractHttpClient:org.apache.http.client.HttpClient>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>:<public abstract>:<android.widget.RemoteViewsService.RemoteViewsFactory>
<android.widget.Gallery: boolean showContextMenuForChild(android.view.View)>:<public>:<android.widget.Gallery:android.widget.AbsSpinner,android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.view.GestureDetector.OnGestureListener>
<android.view.DragEvent: int getAction()>:<public>:<android.view.DragEvent:android.os.Parcelable>
<org.apache.http.impl.SocketHttpServerConnection: int getRemotePort()>:<public>:<org.apache.http.impl.SocketHttpServerConnection:org.apache.http.impl.AbstractHttpServerConnection,org.apache.http.HttpInetConnection>
<android.content.OperationApplicationException: void <init>(java.lang.String)>:<public>:<android.content.OperationApplicationException:java.lang.Exception,java.lang.Throwable>
<android.widget.AbsListView: void setFilterText(java.lang.String)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.media.AudioTrack: int reloadStaticData()>:<public>:<android.media.AudioTrack>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>:<public>:<android.database.sqlite.SQLiteCursor:android.database.AbstractWindowedCursor,android.database.AbstractCursor>
<android.widget.TabWidget: void <init>(android.content.Context)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>:<public>:<android.gesture.GestureStore>
<android.app.Activity: void onPostResume()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.graphics.Color: int green(int)>:<public static>:<android.graphics.Color>
<android.content.BroadcastReceiver.PendingResult: void abortBroadcast()>:<public final>:<android.content.BroadcastReceiver.PendingResult>
<android.os.RecoverySystem: void verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)>:<public static>:<android.os.RecoverySystem>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>:<public>:<android.graphics.drawable.ClipDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>:<public final>:<android.view.FocusFinder>
<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.content.pm.PackageManager: boolean addPermission(android.content.pm.PermissionInfo)>:<public abstract>:<android.content.pm.PackageManager>
<android.graphics.Bitmap: boolean hasAlpha()>:<public final>:<android.graphics.Bitmap:android.os.Parcelable>
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>:<public>:<android.location.LocationManager>
<android.view.SurfaceHolder.Callback: void surfaceCreated(android.view.SurfaceHolder)>:<public abstract>:<android.view.SurfaceHolder.Callback>
<android.view.View: void setFocusableInTouchMode(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.GestureStore: int getSequenceType()>:<public>:<android.gesture.GestureStore>
<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<org.apache.http.impl.DefaultHttpResponseFactory: void <init>(org.apache.http.ReasonPhraseCatalog)>:<public>:<org.apache.http.impl.DefaultHttpResponseFactory:org.apache.http.HttpResponseFactory>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>:<public>:<android.graphics.Paint>
<android.view.WindowManager.LayoutParams: java.lang.String debug(java.lang.String)>:<public>:<android.view.WindowManager.LayoutParams:android.view.ViewGroup.LayoutParams,android.os.Parcelable>
<org.apache.http.protocol.UriPatternMatcher: void register(java.lang.String,java.lang.Object)>:<public>:<org.apache.http.protocol.UriPatternMatcher>
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int,java.lang.Object[])>:<public transient>:<android.test.mock.MockResources:android.content.res.Resources>
<android.os.PatternMatcher: void <init>(android.os.Parcel)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.view.View: android.os.Parcelable onSaveInstanceState()>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result valueOf(java.lang.String)>:<public static>:<android.graphics.Interpolator.Result:java.lang.Enum>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>:<public>:<android.text.SpannableStringBuilder:java.lang.CharSequence,android.text.GetChars,android.text.Spannable,android.text.Editable,java.lang.Appendable>
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>:<public>:<android.webkit.WebHistoryItem:java.lang.Cloneable>
<android.location.Address: java.lang.String getAdminArea()>:<public>:<android.location.Address:android.os.Parcelable>
<android.view.Window.Callback: android.view.View onCreatePanelView(int)>:<public abstract>:<android.view.Window.Callback>
<android.view.animation.Animation: void setFillAfter(boolean)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)>:<public>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>:<public>:<android.content.ContentProviderClient>
<org.apache.http.impl.auth.AuthSchemeBase: void processChallenge(org.apache.http.Header)>:<public>:<org.apache.http.impl.auth.AuthSchemeBase:org.apache.http.auth.AuthScheme>
<android.widget.NumberPicker: void dispatchDraw(android.graphics.Canvas)>:<protected>:<android.widget.NumberPicker:android.widget.LinearLayout,android.view.ViewGroup,android.view.View>
<android.database.DataSetObserver: void <init>()>:<public>:<android.database.DataSetObserver>
<android.nfc.tech.NdefFormatable: void formatReadOnly(android.nfc.NdefMessage)>:<public>:<android.nfc.tech.NdefFormatable:android.nfc.tech.BasicTagTechnology>
<android.text.StaticLayout: int getLineForVertical(int)>:<public>:<android.text.StaticLayout:android.text.Layout>
<android.widget.RatingBar: void setStepSize(float)>:<public>:<android.widget.RatingBar:android.widget.AbsSeekBar,android.widget.ProgressBar,android.view.View>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.lang.String)>:<public>:<android.media.MediaRecorder>
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>:<public final>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.media.MediaPlayer: void reset()>:<public>:<android.media.MediaPlayer>
<android.location.LocationManager: java.util.List getProviders(boolean)>:<public>:<android.location.LocationManager>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbAccessory,android.app.PendingIntent)>:<public>:<android.hardware.usb.UsbManager>
<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()>:<public>:<org.apache.http.protocol.BasicHttpProcessor:org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpRequestInterceptorList,org.apache.http.protocol.HttpResponseInterceptorList,java.lang.Cloneable>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>:<public>:<android.app.ActivityManager>
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>:<public>:<android.app.admin.DevicePolicyManager>
<android.util.JsonWriter: boolean isLenient()>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.test.mock.MockContext: android.content.res.AssetManager getAssets()>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.cookie.CookieAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public abstract>:<org.apache.http.cookie.CookieAttributeHandler>
<android.widget.TextView: int getCompoundPaddingBottom()>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>:<public>:<android.graphics.Path>
<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>:<public>:<android.webkit.WebChromeClient>
<android.view.MenuItem: char getNumericShortcut()>:<public abstract>:<android.view.MenuItem>
<android.widget.AutoCompleteTextView: void onFilterComplete(int)>:<public>:<android.widget.AutoCompleteTextView:android.widget.EditText,android.widget.TextView,android.view.View,android.widget.Filter.FilterListener>
<android.test.MoreAsserts: void assertEmpty(java.lang.Iterable)>:<public static>:<android.test.MoreAsserts>
<org.apache.http.TokenIterator: boolean hasNext()>:<public abstract>:<org.apache.http.TokenIterator:java.util.Iterator>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>:<public static>:<android.media.MediaPlayer>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekBackward()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<org.apache.http.conn.routing.HttpRoute: java.lang.String toString()>:<public final>:<org.apache.http.conn.routing.HttpRoute:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.media.audiofx.BassBoost: boolean getStrengthSupported()>:<public>:<android.media.audiofx.BassBoost:android.media.audiofx.AudioEffect>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>:<public abstract>:<android.content.pm.PackageManager>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>:<public static>:<android.database.DatabaseUtils>
<android.os.Message: long getWhen()>:<public>:<android.os.Message:android.os.Parcelable>
<org.xmlpull.v1.XmlSerializer: java.lang.String getName()>:<public abstract>:<org.xmlpull.v1.XmlSerializer>
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>:<public>:<android.net.UrlQuerySanitizer>
<android.inputmethodservice.InputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>:<public>:<android.inputmethodservice.InputMethodService:android.inputmethodservice.AbstractInputMethodService,android.app.Service,android.content.ContextWrapper,android.content.Context>
<android.graphics.Paint.Align: android.graphics.Paint.Align valueOf(java.lang.String)>:<public static>:<android.graphics.Paint.Align:java.lang.Enum>
<android.text.method.ArrowKeyMovementMethod: boolean canSelectArbitrarily()>:<public>:<android.text.method.ArrowKeyMovementMethod:android.text.method.BaseMovementMethod,android.text.method.MovementMethod>
<android.renderscript.Matrix2f: void loadIdentity()>:<public>:<android.renderscript.Matrix2f>
<android.animation.Keyframe: boolean hasValue()>:<public>:<android.animation.Keyframe:java.lang.Cloneable>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: void <init>()>:<>:<android.provider.ContactsContract.CommonDataKinds.SipAddress:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<org.apache.http.impl.conn.SingleClientConnManager: void closeExpiredConnections()>:<public>:<org.apache.http.impl.conn.SingleClientConnManager:org.apache.http.conn.ClientConnectionManager>
<android.database.AbstractCursor.SelfContentObserver: void <init>(android.database.AbstractCursor)>:<public>:<android.database.AbstractCursor.SelfContentObserver:android.database.ContentObserver>
<android.net.Uri.Builder: java.lang.String toString()>:<public>:<android.net.Uri.Builder>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)>:<public static>:<android.view.KeyEvent:android.view.InputEvent,android.os.Parcelable>
<android.webkit.WebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>:<public>:<android.webkit.WebViewFragment:android.app.Fragment>
<android.widget.AdapterViewFlipper: void onAttachedToWindow()>:<protected>:<android.widget.AdapterViewFlipper:android.widget.AdapterViewAnimator,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)>:<public>:<android.text.style.StyleSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>:<public>:<android.graphics.drawable.LevelListDrawable:android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable>
<android.widget.TabWidget: void setEnabled(boolean)>:<public>:<android.widget.TabWidget:android.widget.LinearLayout,android.view.ViewGroup,android.view.View,android.view.View.OnFocusChangeListener>
<android.media.AudioTrack: int getMinBufferSize(int,int,int)>:<public static>:<android.media.AudioTrack>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>:<public>:<android.graphics.PathMeasure>
<android.view.View: boolean willNotDraw()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.protocol.ResponseServer: void <init>()>:<public>:<org.apache.http.protocol.ResponseServer:org.apache.http.HttpResponseInterceptor>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>:<public>:<android.app.ActivityManager>
<android.os.Parcel: void writeTypedList(java.util.List)>:<public final>:<android.os.Parcel>
<android.content.ClipData: void <clinit>()>:<static>:<android.content.ClipData:android.os.Parcelable>
<android.text.ClipboardManager: void <init>()>:<public>:<android.text.ClipboardManager>
<org.apache.http.HttpConnection: void close()>:<public abstract>:<org.apache.http.HttpConnection>
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb.Settings getProperties()>:<public>:<android.media.audiofx.PresetReverb:android.media.audiofx.AudioEffect>
<android.os.Environment: boolean isExternalStorageRemovable()>:<public static>:<android.os.Environment>
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>:<public static>:<org.apache.http.util.EntityUtils>
<org.apache.http.util.CharArrayBuffer: void append(byte[],int,int)>:<public>:<org.apache.http.util.CharArrayBuffer>
<android.test.MoreAsserts: void assertEquals(double[],double[])>:<public static>:<android.test.MoreAsserts>
<org.apache.http.message.BasicRequestLine: java.lang.String toString()>:<public>:<org.apache.http.message.BasicRequestLine:org.apache.http.RequestLine,java.lang.Cloneable>
<android.provider.UserDictionary: void <clinit>()>:<static>:<android.provider.UserDictionary>
<org.apache.http.entity.StringEntity: java.lang.Object clone()>:<public>:<org.apache.http.entity.StringEntity:org.apache.http.entity.AbstractHttpEntity,java.lang.Cloneable>
<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>:<public>:<android.net.LocalServerSocket>
<android.text.style.ScaleXSpan: float getScaleX()>:<public>:<android.text.style.ScaleXSpan:android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle,android.text.ParcelableSpan>
<android.app.DownloadManager: long enqueue(android.app.DownloadManager.Request)>:<public>:<android.app.DownloadManager>
<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>:<public>:<android.animation.ValueAnimator:android.animation.Animator>
<android.widget.DatePicker: int getMonth()>:<public>:<android.widget.DatePicker:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.widget.SlidingDrawer: void open()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.view.inputmethod.InputMethodInfo: void <init>(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>:<public>:<android.view.inputmethod.InputMethodInfo:android.os.Parcelable>
<android.location.Address: void <init>(java.util.Locale)>:<public>:<android.location.Address:android.os.Parcelable>
<android.app.Activity: boolean hasWindowFocus()>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.util.AttributeSet: int getAttributeNameResource(int)>:<public abstract>:<android.util.AttributeSet>
<android.os.Message: android.os.Bundle getData()>:<public>:<android.os.Message:android.os.Parcelable>
<android.graphics.CornerPathEffect: void <init>(float)>:<public>:<android.graphics.CornerPathEffect:android.graphics.PathEffect>
<dalvik.system.DexFile: void <init>(java.io.File)>:<public>:<dalvik.system.DexFile>
<org.json.JSONStringer: org.json.JSONStringer object()>:<public>:<org.json.JSONStringer>
<android.util.SparseArray: int indexOfKey(int)>:<public>:<android.util.SparseArray>
<android.view.GestureDetector.OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>:<public abstract>:<android.view.GestureDetector.OnDoubleTapListener>
<org.apache.http.entity.BasicHttpEntity: long getContentLength()>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)>:<public>:<android.content.SearchRecentSuggestionsProvider:android.content.ContentProvider>
<android.widget.SimpleExpandableListAdapter: boolean isChildSelectable(int,int)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>:<public static>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.os.ParcelUuid: int hashCode()>:<public>:<android.os.ParcelUuid:android.os.Parcelable>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>:<public>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.webkit.WebView: boolean canGoBack()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean)>:<public>:<org.apache.http.message.BasicHeaderValueFormatter:org.apache.http.message.HeaderValueFormatter>
<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>:<public>:<android.widget.ToggleButton:android.widget.CompoundButton,android.widget.Button,android.widget.TextView,android.view.View>
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall.Listener)>:<public>:<android.net.sip.SipAudioCall>
<android.text.style.QuoteSpan: int getSpanTypeId()>:<public>:<android.text.style.QuoteSpan:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.preference.Preference: void notifyDependencyChange(boolean)>:<public>:<android.preference.Preference:java.lang.Comparable>
<android.media.audiofx.Visualizer: int setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)>:<public>:<android.media.audiofx.Visualizer>
<android.view.View: boolean performLongClick()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.util.FloatMath: float sqrt(float)>:<public static native>:<android.util.FloatMath>
<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<android.graphics.drawable.Drawable: void setAlpha(int)>:<public abstract>:<android.graphics.drawable.Drawable>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>:<public>:<android.app.AlertDialog:android.app.Dialog,android.content.DialogInterface>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>:<public>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.renderscript.Matrix4f: void <init>(float[])>:<public>:<android.renderscript.Matrix4f>
<android.widget.TabHost: void setup(android.app.LocalActivityManager)>:<public>:<android.widget.TabHost:android.widget.FrameLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.widget.ArrayAdapter: void addAll(java.lang.Object[])>:<public transient>:<android.widget.ArrayAdapter:android.widget.BaseAdapter,android.widget.Filterable>
<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder.Callback)>:<public abstract>:<android.view.SurfaceHolder>
<android.webkit.WebSettings: void setUserAgent(int)>:<public synchronized>:<android.webkit.WebSettings>
<android.widget.Toast: void setMargin(float,float)>:<public>:<android.widget.Toast>
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>:<public>:<android.database.sqlite.SQLiteDatabase:android.database.sqlite.SQLiteClosable>
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>:<public final>:<android.content.IntentFilter:android.os.Parcelable>
<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>:<public>:<android.view.inputmethod.ExtractedTextRequest:android.os.Parcelable>
<android.widget.ListPopupWindow: int getVerticalOffset()>:<public>:<android.widget.ListPopupWindow>
<android.view.Menu: android.view.MenuItem findItem(int)>:<public abstract>:<android.view.Menu>
<android.util.SparseArray: void append(int,java.lang.Object)>:<public>:<android.util.SparseArray>
<android.test.MoreAsserts: void checkEqualsAndHashCodeMethods(java.lang.Object,java.lang.Object,boolean)>:<public static>:<android.test.MoreAsserts>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.app.Notification.Builder: android.app.Notification.Builder setOngoing(boolean)>:<public>:<android.app.Notification.Builder>
<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>:<public>:<org.apache.http.client.methods.HttpRequestBase:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.methods.AbortableHttpRequest,java.lang.Cloneable>
<android.graphics.drawable.Drawable.ConstantState: void <init>()>:<public>:<android.graphics.drawable.Drawable.ConstantState>
<org.json.JSONStringer: org.json.JSONStringer value(long)>:<public>:<org.json.JSONStringer>
<android.widget.SlidingDrawer: void close()>:<public>:<android.widget.SlidingDrawer:android.view.ViewGroup,android.view.View>
<android.webkit.WebView: void setOverScrollMode(int)>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>:<public static native>:<android.opengl.GLES20>
<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)>:<public static>:<android.text.TextUtils>
<android.widget.Toast: int getGravity()>:<public>:<android.widget.Toast>
<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>:<public>:<android.app.Fragment:android.content.ComponentCallbacks,android.view.View.OnCreateContextMenuListener>
<org.apache.http.impl.cookie.NetscapeDomainHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.NetscapeDomainHandler:org.apache.http.impl.cookie.BasicDomainHandler>
<android.drm.DrmManagerClient: void setOnEventListener(android.drm.DrmManagerClient.OnEventListener)>:<public synchronized>:<android.drm.DrmManagerClient>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.media.SoundPool: void setLoop(int,int)>:<public final native>:<android.media.SoundPool>
<android.opengl.GLES10: void glNormal3f(float,float,float)>:<public static native>:<android.opengl.GLES10>
<android.widget.ZoomButtonsController: void setZoomSpeed(long)>:<public>:<android.widget.ZoomButtonsController:android.view.View.OnTouchListener>
<org.apache.http.message.BasicHeaderIterator: java.lang.Object next()>:<public final>:<org.apache.http.message.BasicHeaderIterator:org.apache.http.HeaderIterator>
<android.app.ProgressDialog: int getProgress()>:<public>:<android.app.ProgressDialog:android.app.AlertDialog,android.app.Dialog>
<android.test.mock.MockPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<org.apache.http.impl.SocketHttpClientConnection: void shutdown()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<android.drm.DrmInfoRequest: int getInfoType()>:<public>:<android.drm.DrmInfoRequest>
<android.util.JsonWriter: android.util.JsonWriter value(double)>:<public>:<android.util.JsonWriter:java.io.Closeable>
<android.media.FaceDetector.Face: float eyesDistance()>:<public>:<android.media.FaceDetector.Face>
<android.opengl.GLES20: void glGenerateMipmap(int)>:<public static native>:<android.opengl.GLES20>
<android.widget.PopupWindow: void update(android.view.View,int,int)>:<public>:<android.widget.PopupWindow>
<android.view.animation.LayoutAnimationController: float getDelay()>:<public>:<android.view.animation.LayoutAnimationController>
<org.apache.http.client.protocol.RequestAddCookies: void <init>()>:<public>:<org.apache.http.client.protocol.RequestAddCookies:org.apache.http.HttpRequestInterceptor>
<android.provider.MediaStore.Audio.Artists: void <clinit>()>:<static>:<android.provider.MediaStore.Audio.Artists:android.provider.BaseColumns,android.provider.MediaStore.Audio.ArtistColumns>
<org.apache.http.impl.conn.IdleConnectionHandler: void closeIdleConnections(long)>:<public>:<org.apache.http.impl.conn.IdleConnectionHandler>
<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>:<public abstract>:<org.apache.commons.logging.Log>
<android.graphics.drawable.LayerDrawable: void setOpacity(int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>:<public final>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.provider.Contacts.GroupMembership: void <clinit>()>:<static>:<android.provider.Contacts.GroupMembership:android.provider.BaseColumns,android.provider.Contacts.GroupsColumns>
<junit.framework.TestSuite: void addTestSuite(java.lang.Class)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity valueOf(java.lang.String)>:<public static>:<android.webkit.WebSettings.ZoomDensity:java.lang.Enum>
<android.test.mock.MockContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>:<public>:<android.content.res.TypedArray>
<android.app.ActionBar.Tab: android.view.View getCustomView()>:<public abstract>:<android.app.ActionBar.Tab>
<android.view.Window: void setType(int)>:<public>:<android.view.Window>
<android.graphics.Canvas: void rotate(float)>:<public native>:<android.graphics.Canvas>
<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>:<public final>:<android.graphics.drawable.Drawable>
<android.graphics.Rect: float exactCenterX()>:<public final>:<android.graphics.Rect:android.os.Parcelable>
<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>:<public>:<android.view.animation.Transformation>
<android.view.View: void buildDrawingCache(boolean)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.location.Location: void setLongitude(double)>:<public>:<android.location.Location:android.os.Parcelable>
<org.apache.http.impl.client.DefaultRequestDirector: void releaseConnection()>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>:<public>:<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl:android.view.inputmethod.InputMethodSession>
<android.widget.AbsListView: void onTextChanged(java.lang.CharSequence,int,int,int)>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.net.wifi.WifiManager: boolean saveConfiguration()>:<public>:<android.net.wifi.WifiManager>
<android.os.Process: int getThreadPriority(int)>:<public static final native>:<android.os.Process>
<android.opengl.GLES20: void glLinkProgram(int)>:<public static native>:<android.opengl.GLES20>
<android.view.Window: void setBackgroundDrawableResource(int)>:<public>:<android.view.Window>
<org.apache.http.params.HttpProtocolParamBean: void <init>(org.apache.http.params.HttpParams)>:<public>:<org.apache.http.params.HttpProtocolParamBean:org.apache.http.params.HttpAbstractParamBean>
<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>:<public final>:<android.os.AsyncTask>
<org.json.JSONArray: boolean optBoolean(int,boolean)>:<public>:<org.json.JSONArray>
<android.webkit.WebView: void freeMemory()>:<public>:<android.webkit.WebView:android.widget.AbsoluteLayout,android.view.ViewGroup,android.view.View,android.view.ViewTreeObserver.OnGlobalFocusChangeListener,android.view.ViewGroup.OnHierarchyChangeListener>
<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String)>:<public>:<org.apache.http.impl.auth.NTLMEngineException:org.apache.http.auth.AuthenticationException,org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>:<public static>:<android.text.TextUtils>
<android.test.mock.MockContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>:<public>:<android.test.mock.MockContentProvider:android.content.ContentProvider>
<android.util.Log: boolean isLoggable(java.lang.String,int)>:<public static native>:<android.util.Log>
<android.widget.ListView: boolean removeHeaderView(android.view.View)>:<public>:<android.widget.ListView:android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>:<public abstract>:<android.view.Menu>
<android.widget.PopupWindow: boolean isOutsideTouchable()>:<public>:<android.widget.PopupWindow>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void showSoftInput(int,android.os.ResultReceiver)>:<public>:<android.inputmethodservice.InputMethodService.InputMethodImpl:android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl>
<android.app.Activity: void onUserLeaveHint()>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
<android.net.rtp.RtpStream: int getLocalPort()>:<public>:<android.net.rtp.RtpStream>
<android.view.Surface: void setFlags(int,int)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.os.Environment: java.lang.String getExternalStorageState()>:<public static>:<android.os.Environment>
<android.view.Window.Callback: void onActionModeStarted(android.view.ActionMode)>:<public abstract>:<android.view.Window.Callback>
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>:<public final>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>:<protected>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<org.apache.http.impl.cookie.BasicClientCookie2: boolean isPersistent()>:<public>:<org.apache.http.impl.cookie.BasicClientCookie2:org.apache.http.impl.cookie.BasicClientCookie,org.apache.http.cookie.SetCookie2>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>:<public static>:<android.graphics.BitmapFactory>
<android.content.pm.PackageStats: void <init>(java.lang.String)>:<public>:<android.content.pm.PackageStats:android.os.Parcelable>
<android.app.Instrumentation: void startPerformanceSnapshot()>:<public>:<android.app.Instrumentation>
<android.opengl.GLES10: void glDepthFunc(int)>:<public static native>:<android.opengl.GLES10>
<android.view.View: void onLayout(boolean,int,int,int,int)>:<protected>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<org.apache.http.HttpConnection: boolean isOpen()>:<public abstract>:<org.apache.http.HttpConnection>
<android.util.Base64InputStream: void close()>:<public>:<android.util.Base64InputStream:java.io.FilterInputStream,java.io.InputStream>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES11Ext>
<android.content.ContextWrapper: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.impl.client.BasicCookieStore: void <init>()>:<public>:<org.apache.http.impl.client.BasicCookieStore:org.apache.http.client.CookieStore>
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>:<public>:<android.telephony.PhoneStateListener>
<android.preference.PreferenceGroup: void dispatchSaveInstanceState(android.os.Bundle)>:<protected>:<android.preference.PreferenceGroup:android.preference.Preference>
<org.apache.http.impl.client.RequestWrapper: void resetHeaders()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>:<public>:<android.accounts.OperationCanceledException:android.accounts.AccountsException,java.lang.Exception,java.lang.Throwable>
<org.apache.http.impl.conn.AbstractClientConnAdapter: void releaseConnection()>:<public>:<org.apache.http.impl.conn.AbstractClientConnAdapter:org.apache.http.conn.ManagedClientConnection>
<org.apache.http.message.BasicHttpResponse: void setStatusCode(int)>:<public>:<org.apache.http.message.BasicHttpResponse:org.apache.http.message.AbstractHttpMessage,org.apache.http.HttpResponse>
<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>:<public>:<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:org.apache.http.cookie.CookieAttributeHandler>
<org.apache.http.client.HttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>:<public abstract>:<org.apache.http.client.HttpClient>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>:<public static>:<android.text.method.DigitsKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.media.JetPlayer.OnJetEventListener: void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int)>:<public abstract>:<android.media.JetPlayer.OnJetEventListener>
<android.app.NativeActivity: void onGlobalLayout()>:<public>:<android.app.NativeActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.SurfaceHolder.Callback2,android.view.InputQueue.Callback,android.view.ViewTreeObserver.OnGlobalLayoutListener>
<android.opengl.GLU: java.lang.String gluErrorString(int)>:<public static>:<android.opengl.GLU>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder setClassInstanceLimit(java.lang.Class,int)>:<public>:<android.os.StrictMode.VmPolicy.Builder>
<android.text.style.LeadingMarginSpan.Standard: int getSpanTypeId()>:<public>:<android.text.style.LeadingMarginSpan.Standard:android.text.style.LeadingMarginSpan,android.text.ParcelableSpan>
<android.os.ConditionVariable: void close()>:<public>:<android.os.ConditionVariable>
<android.opengl.GLES10: void glFogxv(int,int[],int)>:<public static native>:<android.opengl.GLES10>
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>:<public>:<android.location.LocationManager>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>:<public static>:<android.os.Message:android.os.Parcelable>
<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)>:<public>:<android.text.style.DrawableMarginSpan:android.text.style.LeadingMarginSpan,android.text.style.LineHeightSpan>
<org.apache.http.entity.BasicHttpEntity: void <init>()>:<public>:<org.apache.http.entity.BasicHttpEntity:org.apache.http.entity.AbstractHttpEntity>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.view.Window: void setChildInt(int,int)>:<public abstract>:<android.view.Window>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap,int)>:<public>:<android.text.style.ImageSpan:android.text.style.DynamicDrawableSpan,android.text.style.ReplacementSpan,android.text.style.MetricAffectingSpan,android.text.style.CharacterStyle>
<android.widget.MediaController.MediaPlayerControl: boolean canPause()>:<public abstract>:<android.widget.MediaController.MediaPlayerControl>
<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>:<public static>:<org.apache.http.util.EntityUtils>
<android.preference.Preference: void notifyHierarchyChanged()>:<protected>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>:<public>:<org.apache.http.impl.client.RequestWrapper:org.apache.http.message.AbstractHttpMessage,org.apache.http.client.methods.HttpUriRequest>
<android.test.AndroidTestRunner: void testStarted(java.lang.String)>:<public>:<android.test.AndroidTestRunner:junit.runner.BaseTestRunner>
<org.apache.http.auth.AuthScope: java.lang.String toString()>:<public>:<org.apache.http.auth.AuthScope>
<android.location.Criteria: void setCostAllowed(boolean)>:<public>:<android.location.Criteria:android.os.Parcelable>
<android.widget.AbsSeekBar: boolean onTouchEvent(android.view.MotionEvent)>:<public>:<android.widget.AbsSeekBar:android.widget.ProgressBar,android.view.View>
<android.view.ViewParent: void clearChildFocus(android.view.View)>:<public abstract>:<android.view.ViewParent>
<android.os.Parcel: void readBinderArray(android.os.IBinder[])>:<public final>:<android.os.Parcel>
<android.os.Parcel: int readInt()>:<public final native>:<android.os.Parcel>
<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>:<public>:<android.content.pm.PermissionGroupInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh create()>:<public>:<android.renderscript.Mesh.Builder>
<org.apache.http.impl.cookie.DateUtils: void <init>()>:<>:<org.apache.http.impl.cookie.DateUtils>
<android.widget.AbsListView.SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>:<public abstract>:<android.widget.AbsListView.SelectionBoundsAdjuster>
<android.media.AudioRecord: int getPositionNotificationPeriod()>:<public>:<android.media.AudioRecord>
<android.gesture.GestureStore: int getOrientationStyle()>:<public>:<android.gesture.GestureStore>
<android.animation.ObjectAnimator: void setIntValues(int[])>:<public transient>:<android.animation.ObjectAnimator:android.animation.ValueAnimator,android.animation.Animator>
<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>:<public>:<android.view.ViewGroup:android.view.View,android.view.ViewParent,android.view.ViewManager>
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.Throwable)>:<public static>:<junit.runner.BaseTestRunner:junit.framework.TestListener>
<android.widget.TextView: void onEditorAction(int)>:<public>:<android.widget.TextView:android.view.View,android.view.ViewTreeObserver.OnPreDrawListener>
<android.util.TypedValue: void <init>()>:<public>:<android.util.TypedValue>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel[] values()>:<public static>:<android.webkit.ConsoleMessage.MessageLevel:java.lang.Enum>
<android.util.TypedValue: float complexToFraction(int,float,float)>:<public static>:<android.util.TypedValue>
<android.view.animation.Animation: void restrictDuration(long)>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.widget.AdapterViewAnimator: void showPrevious()>:<public>:<android.widget.AdapterViewAnimator:android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>:<protected>:<org.apache.http.impl.client.DefaultRequestDirector:org.apache.http.client.RequestDirector>
<android.os.Handler: void dump(android.util.Printer,java.lang.String)>:<public final>:<android.os.Handler>
<android.widget.CheckedTextView: void toggle()>:<public>:<android.widget.CheckedTextView:android.widget.TextView,android.view.View,android.widget.Checkable>
<android.view.KeyCharacterMap: char getDisplayLabel(int)>:<public>:<android.view.KeyCharacterMap>
<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>:<protected>:<android.net.UrlQuerySanitizer>
<android.content.ContextWrapper: java.io.File getCacheDir()>:<public>:<android.content.ContextWrapper:android.content.Context>
<org.apache.http.conn.ClientConnectionManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)>:<public abstract>:<org.apache.http.conn.ClientConnectionManager>
<android.text.TextUtils.EllipsizeCallback: void ellipsized(int,int)>:<public abstract>:<android.text.TextUtils.EllipsizeCallback>
<android.provider.Contacts.Organizations: void <init>()>:<>:<android.provider.Contacts.Organizations:android.provider.BaseColumns,android.provider.Contacts.OrganizationColumns>
<android.media.audiofx.Equalizer: short getNumberOfPresets()>:<public>:<android.media.audiofx.Equalizer:android.media.audiofx.AudioEffect>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>:<public>:<android.telephony.PhoneStateListener>
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>:<public>:<android.widget.RemoteViews:android.os.Parcelable,android.view.LayoutInflater.Filter>
<android.content.pm.Signature: boolean equals(java.lang.Object)>:<public>:<android.content.pm.Signature:android.os.Parcelable>
<android.content.Context: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>:<public abstract>:<android.content.Context>
<android.util.EventLog: int writeEvent(int,long)>:<public static native>:<android.util.EventLog>
<android.os.IBinder: boolean isBinderAlive()>:<public abstract>:<android.os.IBinder>
<android.os.PatternMatcher: void <init>(java.lang.String,int)>:<public>:<android.os.PatternMatcher:android.os.Parcelable>
<android.nfc.tech.NfcA: void <init>()>:<>:<android.nfc.tech.NfcA:android.nfc.tech.BasicTagTechnology>
<android.view.Surface.OutOfResourcesException: void <init>()>:<public>:<android.view.Surface.OutOfResourcesException:java.lang.Exception,java.lang.Throwable>
<android.view.ViewConfiguration: int getScaledScrollBarSize()>:<public>:<android.view.ViewConfiguration>
<android.opengl.ETC1Util.ETC1Texture: int getWidth()>:<public>:<android.opengl.ETC1Util.ETC1Texture>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>:<public>:<android.view.Window>
<android.database.AbstractCursor: byte[] getBlob(int)>:<public>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>:<public>:<android.content.pm.ApplicationInfo:android.content.pm.PackageItemInfo,android.os.Parcelable>
<android.renderscript.Allocation: void generateMipmaps()>:<public>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.database.AbstractCursor: double getDouble(int)>:<public abstract>:<android.database.AbstractCursor:android.database.CrossProcessCursor>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alphaBy(float)>:<public>:<android.view.ViewPropertyAnimator>
<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress getLocalAddress()>:<public final>:<org.apache.http.conn.routing.RouteTracker:org.apache.http.conn.routing.RouteInfo,java.lang.Cloneable>
<android.graphics.Paint: void setARGB(int,int,int,int)>:<public>:<android.graphics.Paint>
<android.webkit.WebSettings: void setSupportZoom(boolean)>:<public>:<android.webkit.WebSettings>
<android.text.method.DialerKeyListener: char[] getAcceptedChars()>:<protected>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>:<public>:<android.graphics.Canvas>
<android.test.SingleLaunchActivityTestCase: void <init>(java.lang.String,java.lang.Class)>:<public>:<android.test.SingleLaunchActivityTestCase:android.test.InstrumentationTestCase,junit.framework.TestCase,junit.framework.Assert>
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>:<public>:<android.content.Intent:android.os.Parcelable,java.lang.Cloneable>
<org.apache.http.client.utils.CloneUtils: void <init>()>:<>:<org.apache.http.client.utils.CloneUtils>
<android.text.method.BaseKeyListener: void <init>()>:<public>:<android.text.method.BaseKeyListener:android.text.method.MetaKeyKeyListener,android.text.method.KeyListener>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(java.lang.String)>:<public static>:<android.webkit.URLUtil>
<android.view.animation.Animation: int getBackgroundColor()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.preference.Preference: java.lang.String toString()>:<public>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.impl.SocketHttpClientConnection: void close()>:<public>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<org.apache.http.impl.SocketHttpClientConnection: void assertOpen()>:<protected>:<org.apache.http.impl.SocketHttpClientConnection:org.apache.http.impl.AbstractHttpClientConnection,org.apache.http.HttpInetConnection>
<org.apache.http.message.BasicLineFormatter: java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter)>:<public static final>:<org.apache.http.message.BasicLineFormatter:org.apache.http.message.LineFormatter>
<org.apache.http.io.SessionInputBuffer: int read(byte[],int,int)>:<public abstract>:<org.apache.http.io.SessionInputBuffer>
<org.apache.http.entity.BufferedHttpEntity: boolean isRepeatable()>:<public>:<org.apache.http.entity.BufferedHttpEntity:org.apache.http.entity.HttpEntityWrapper>
<org.apache.http.client.RedirectException: void <init>(java.lang.String)>:<public>:<org.apache.http.client.RedirectException:org.apache.http.ProtocolException,org.apache.http.HttpException,java.lang.Exception,java.lang.Throwable>
<android.opengl.GLES10: void glScissor(int,int,int,int)>:<public static native>:<android.opengl.GLES10>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>:<public static final>:<android.provider.ContactsContract.CommonDataKinds.SipAddress:android.provider.ContactsContract.DataColumnsWithJoins,android.provider.ContactsContract.CommonDataKinds.CommonColumns>
<android.provider.MediaStore.Audio.Playlists: void <init>()>:<public>:<android.provider.MediaStore.Audio.Playlists:android.provider.BaseColumns,android.provider.MediaStore.Audio.PlaylistsColumns>
<android.graphics.PixelXorXfermode: void <init>(int)>:<public>:<android.graphics.PixelXorXfermode:android.graphics.Xfermode>
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>:<public>:<android.widget.ExpandableListView:android.widget.ListView,android.widget.AbsListView,android.widget.AdapterView,android.view.ViewGroup,android.view.View>
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>:<public>:<android.appwidget.AppWidgetHostView:android.widget.FrameLayout,android.view.ViewGroup,android.view.View>
<android.view.animation.Animation: long getDuration()>:<public>:<android.view.animation.Animation:java.lang.Cloneable>
<org.apache.http.impl.AbstractHttpServerConnection: boolean isStale()>:<public>:<org.apache.http.impl.AbstractHttpServerConnection:org.apache.http.HttpServerConnection>
<android.widget.PopupWindow: boolean isTouchable()>:<public>:<android.widget.PopupWindow>
<android.content.pm.LabeledIntent: int getIconResource()>:<public>:<android.content.pm.LabeledIntent:android.content.Intent>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>:<public>:<android.view.inputmethod.InputConnectionWrapper:android.view.inputmethod.InputConnection>
<android.view.Menu: void setGroupCheckable(int,boolean,boolean)>:<public abstract>:<android.view.Menu>
<android.view.Surface: void setAlpha(float)>:<public native>:<android.view.Surface:android.os.Parcelable>
<android.view.View: int getVerticalFadingEdgeLength()>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress.Namespace)>:<public>:<android.net.LocalSocketAddress>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>:<public>:<android.graphics.drawable.BitmapDrawable:android.graphics.drawable.Drawable>
<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>:<public>:<org.apache.http.conn.scheme.Scheme>
<android.content.ContentProviderOperation: android.net.Uri getUri()>:<public>:<android.content.ContentProviderOperation:android.os.Parcelable>
<android.preference.ListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>:<protected>:<android.preference.ListPreference:android.preference.DialogPreference,android.preference.Preference>
<junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>:<public>:<junit.framework.TestSuite:junit.framework.Test>
<android.hardware.Camera: void addCallbackBuffer(byte[])>:<public final>:<android.hardware.Camera>
<android.view.accessibility.AccessibilityEvent: java.lang.String toString()>:<public>:<android.view.accessibility.AccessibilityEvent:android.os.Parcelable>
<android.location.GpsStatus.Listener: void onGpsStatusChanged(int)>:<public abstract>:<android.location.GpsStatus.Listener>
<android.os.Bundle: int[] getIntArray(java.lang.String)>:<public>:<android.os.Bundle:android.os.Parcelable,java.lang.Cloneable>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>:<public>:<android.graphics.drawable.shapes.RectShape:android.graphics.drawable.shapes.Shape>
<android.renderscript.Allocation: void setName(java.lang.String)>:<public volatile>:<android.renderscript.Allocation:android.renderscript.BaseObj>
<android.provider.MediaStore.Video.Thumbnails: android.net.Uri getContentUri(java.lang.String)>:<public static>:<android.provider.MediaStore.Video.Thumbnails:android.provider.BaseColumns>
<android.text.AlteredCharSequence: android.text.AlteredCharSequence make(java.lang.CharSequence,char[],int,int)>:<public static>:<android.text.AlteredCharSequence:java.lang.CharSequence,android.text.GetChars>
<android.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)>:<public>:<android.widget.ListPopupWindow>
<android.preference.Preference: void onBindView(android.view.View)>:<protected>:<android.preference.Preference:java.lang.Comparable>
<org.apache.http.impl.client.DefaultRedirectHandler: void <init>()>:<public>:<org.apache.http.impl.client.DefaultRedirectHandler:org.apache.http.client.RedirectHandler>
<android.view.animation.AnimationSet: long computeDurationHint()>:<public>:<android.view.animation.AnimationSet:android.view.animation.Animation>
<android.test.mock.MockContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>:<public>:<android.test.mock.MockContext:android.content.Context>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>:<public>:<org.apache.http.impl.conn.tsccm.RouteSpecificPool>
<android.app.AliasActivity: void onCreate(android.os.Bundle)>:<protected>:<android.app.AliasActivity:android.app.Activity,android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context>
<android.widget.AbsListView: int getCheckedItemCount()>:<public>:<android.widget.AbsListView:android.widget.AdapterView,android.view.ViewGroup,android.view.View,android.text.TextWatcher,android.view.ViewTreeObserver.OnGlobalLayoutListener,android.widget.Filter.FilterListener,android.view.ViewTreeObserver.OnTouchModeChangeListener>
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>:<public static>:<android.text.method.DialerKeyListener:android.text.method.NumberKeyListener,android.text.method.BaseKeyListener,android.text.method.MetaKeyKeyListener>
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>:<public>:<android.widget.SimpleExpandableListAdapter:android.widget.BaseExpandableListAdapter>
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>:<public>:<android.graphics.drawable.LayerDrawable:android.graphics.drawable.Drawable,android.graphics.drawable.Drawable.Callback>
<android.graphics.Region: boolean quickContains(android.graphics.Rect)>:<public>:<android.graphics.Region:android.os.Parcelable>
<android.test.mock.MockPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>:<public>:<android.test.mock.MockPackageManager:android.content.pm.PackageManager>
<android.test.IsolatedContext: void sendBroadcast(android.content.Intent)>:<public>:<android.test.IsolatedContext:android.content.ContextWrapper,android.content.Context>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>:<public>:<android.view.View:android.graphics.drawable.Drawable.Callback,android.view.KeyEvent.Callback,android.view.accessibility.AccessibilityEventSource>
<android.gesture.Gesture: int getStrokesCount()>:<public>:<android.gesture.Gesture:android.os.Parcelable>
<android.os.Parcel: void recycle()>:<public final>:<android.os.Parcel>
<android.graphics.Bitmap: int getDensity()>:<public>:<android.graphics.Bitmap:android.os.Parcelable>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getEnterFadeDuration()>:<public final>:<android.graphics.drawable.DrawableContainer.DrawableContainerState:android.graphics.drawable.Drawable.ConstantState>
<android.app.Activity: void onNewIntent(android.content.Intent)>:<protected>:<android.app.Activity:android.view.ContextThemeWrapper,android.content.ContextWrapper,android.content.Context,android.view.LayoutInflater.Factory2,android.view.Window.Callback,android.view.KeyEvent.Callback,android.view.View.OnCreateContextMenuListener,android.content.ComponentCallbacks>
