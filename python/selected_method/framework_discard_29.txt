<android.widget.CalendarView.AbstractCalendarViewDelegate: int getWeekSeparatorLineColor()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setDataModel(android.widget.ActivityChooserModel)>
<android.widget.ListView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.os.IVold: void fdeChangePassword(int,java.lang.String)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void autofill(android.view.autofill.AutofillValue)>
<android.media.ExifInterface.ExifAttribute: int size()>
<android.widget.RelativeLayout.TopToBottomLeftToRightComparator: int compare(android.view.View,android.view.View)>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,float[],int)>
<android.view.ViewRootImpl.ImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.util.JsonScope: android.util.JsonScope valueOf(java.lang.String)>
<android.app.ExitTransitionCoordinator: void sharedElementTransitionComplete()>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.widget.SpellChecker.SpellParser: void parse(int,int)>
<android.view.IWindowManager: void executeAppTransition()>
<android.opengl.GLLogWrapper: void glFogxv(int,java.nio.IntBuffer)>
<android.security.keystore.IKeystoreService: int exist(java.lang.String,int)>
<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>
<android.app.ActivityThread.ApplicationThread: void dumpMemInfo(android.os.ParcelFileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>
<android.media.MediaPlayer.TimeProvider: void cancelNotifications(android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.media.WebVttRenderingWidget.CueLayout: void measureForParent(int,int)>
<android.bluetooth.IBluetoothGatt: void addService(int,android.bluetooth.BluetoothGattService)>
<android.app.ContextImpl: java.io.File getDataDir()>
<android.opengl.GLLogWrapper: void glCullFace(int)>
<android.os.IVold: void fstrim(int,android.os.IVoldTaskListener)>
<android.widget.DatePickerSpinnerDelegate: void setCalendarViewShown(boolean)>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changeVideoQuality(int)>
<android.net.DnsResolver.DnsAddressAnswer: java.util.List getAddresses()>
<android.widget.GridLayout.Axis: int getCount()>
<android.animation.AnimationHandler.MyFrameCallbackProvider: long getFrameDelay()>
<android.app.admin.IDevicePolicyManager: long forceSecurityLogs()>
<android.widget.NumberPicker.SetSelectionCommand: void cancel()>
<android.os.IInstalld: void destroyAppDataSnapshot(java.lang.String,java.lang.String,int,long,int,int)>
<android.app.admin.IDevicePolicyManager: void setNetworkLoggingEnabled(android.content.ComponentName,java.lang.String,boolean)>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType[] values()>
<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()>
<android.accounts.AbstractAccountAuthenticator.Transport: void isCredentialsUpdateSuggested(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String)>
<android.widget.ProgressBar.RefreshProgressRunnable: void run()>
<android.media.Utils: android.util.Range longRangeFor(double)>
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()>
<android.app.WallpaperManager.FastBitmapDrawable: void setAlpha(int)>
<android.net.IpConfiguration.ProxySettings: android.net.IpConfiguration.ProxySettings[] values()>
<android.app.admin.IDevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,java.lang.String,boolean)>
<android.hardware.radio.TunerAdapter: void setAnalogForced(boolean)>
<android.text.SpannableStringInternal: int length()>
<android.util.StatsLogInternal: int write(int,long,int,java.lang.String,int)>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority valueOf(java.lang.String)>
<android.media.MediaCodec.PersistentSurface: void release()>
<android.bluetooth.IBluetoothGatt: void serverDisconnect(int,java.lang.String)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int,long,float,java.lang.String,boolean,int,byte[])>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist.Builder newBuilder(android.gamedriver.GameDriverProto.Blacklist)>
<android.app.ActivityThread.GcIdler: boolean queueIdle()>
<android.widget.Editor.TextViewPositionListener: void updatePosition(int,int,boolean,boolean)>
<android.text.HtmlToSpannedConverter.Font: void <init>(java.lang.String)>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicInternal: boolean defaultIsRtl()>
<android.widget.RemoteViews.ViewGroupActionRemove: android.widget.RemoteViews.Action initActionAsync(android.widget.RemoteViews.ViewTree,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.app.IActivityManager: java.lang.String getProviderMimeType(android.net.Uri,int)>
<android.hardware.radio.Utils: void writeIntSet(android.os.Parcel,java.util.Set)>
<android.os.storage.IStorageManager: void abortIdleMaintenance()>
<android.app.admin.IDevicePolicyManager: boolean isSeparateProfileChallengeAllowed(int)>
<android.widget.GridLayout.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.net.Uri.HierarchicalUri: boolean isRelative()>
<android.media.MediaRouter.Static.Client: void onRestoreRoute()>
<android.providers.settings.GlobalSettingsProto.LowPowerMode: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.opengl.EGLLogWrapper: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.widget.RatingBar.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: long getConsumedInputSizeBytes()>
<android.opengl.GLErrorWrapper: void glDisableClientState(int)>
<android.app.admin.IDevicePolicyManager: android.content.pm.ParceledListSlice retrievePreRebootSecurityLogs(android.content.ComponentName)>
<android.app.ActivityThread.ApplicationThread: void dumpGfxInfo(android.os.ParcelFileDescriptor,java.lang.String[])>
<android.app.LauncherActivity.ActivityAdapter: void <init>(android.app.LauncherActivity,android.app.LauncherActivity.IconResizer)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void onLocaleChanged(java.util.Locale)>
<android.animation.PathKeyframes.IntKeyframesBase: java.lang.Class getType()>
<android.app.IActivityManager: void startSystemLockTaskMode(int)>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams hasProgress(boolean)>
<android.net.Uri.PathSegments: java.lang.String get(int)>
<android.location.BatchedLocationCallbackTransport: boolean registerWithServer()>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,int[],int)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.os.IStatsManager: void informAllUidData(android.os.ParcelFileDescriptor)>
<android.util.MapCollections.ValuesCollection: boolean contains(java.lang.Object)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: java.security.AlgorithmParameters engineGetParameters()>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,int[],int)>
<android.location.GpsStatus.SatelliteIterator: void remove()>
<android.app.ContextImpl: boolean canLoadUnsafeResources()>
<android.hardware.ICameraService: android.hardware.ICamera connect(android.hardware.ICameraClient,int,java.lang.String,int,int)>
<android.widget.YearPickerView.YearAdapter: int getPositionForYear(int)>
<android.media.MediaRouter.Static: android.view.Display[] getAllPresentationDisplays()>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.widget.RemoteViews.ViewContentNavigation: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,int[],int)>
<android.animation.FloatKeyframeSet: void <init>(android.animation.Keyframe.FloatKeyframe[])>
<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)>
<android.content.pm.IPackageManager: java.lang.String getSharedSystemSharedLibraryPackageName()>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void notifyImeHidden()>
<android.view.IWindowManager: boolean isViewServerRunning()>
<android.opengl.GLErrorWrapper: void glAlphaFunc(int,float)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.media.WebVttRenderingWidget.SpanLayout: void update()>
<android.bluetooth.IBluetoothHidDeviceCallback: void onSetReport(android.bluetooth.BluetoothDevice,byte,byte,byte[])>
<android.media.MediaPlayer.ProvisioningThread: android.media.MediaPlayer.ProvisioningThread initialize(android.media.MediaDrm.ProvisionRequest,java.util.UUID,android.media.MediaPlayer)>
<android.sax.RootElement.Handler: void setDocumentLocator(org.xml.sax.Locator)>
<android.app.admin.IDevicePolicyManager: java.lang.String[] setPackagesSuspended(android.content.ComponentName,java.lang.String,java.lang.String[],boolean)>
<android.hardware.ICameraService: android.hardware.ICamera connectLegacy(android.hardware.ICameraClient,int,int,java.lang.String,int)>
<android.widget.Spinner.SpinnerPopup: void setVerticalOffset(int)>
<android.widget.DayPickerView: int getFirstDayOfWeek()>
<android.view.IWindowManager: void setOverscan(int,int,int,int,int)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: void <init>(android.widget.CalendarViewLegacyDelegate,android.content.Context)>
<android.widget.RadioGroup.CheckedStateTracker: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes.IntKeyframes)>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,int)>
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()>
<android.app.QueuedWork.QueuedWorkHandler: void handleMessage(android.os.Message)>
<android.app.admin.IDevicePolicyManager: boolean isUnattendedManagedKiosk()>
<android.location.ILocationManager: boolean isExtraLocationControllerPackageEnabled()>
<android.media.SubtitleTrack.Run: void storeByEndTimeMs(android.util.LongSparseArray)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createULong(long[],java.nio.ByteOrder)>
<android.util.FastImmutableArraySet.FastIterator: boolean hasNext()>
<android.hardware.SystemSensorManager.BaseEventQueue: void dispatchFlushCompleteEvent(int)>
<android.app.ContextImpl: java.io.File getCodeCacheDir()>
<android.app.IActivityManager: int getTaskForActivity(android.os.IBinder,boolean)>
<android.opengl.GLLogWrapper: void glPointSize(float)>
<android.widget.Editor.PositionListener: int getPositionX()>
<android.widget.TimePickerSpinnerDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.bluetooth.IBluetoothPan: void setBluetoothTethering(boolean)>
<android.speech.tts.AudioPlaybackHandler: boolean isSpeaking()>
<android.opengl.GLLogWrapper: void glTexParameterf(int,int,float)>
<android.service.autofill.OptionalValidators: java.lang.String toString()>
<android.hardware.input.IInputManager: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getMappedNames()>
<android.app.SystemServiceRegistry: java.lang.Object[] createServiceCache()>
<android.os.RemoteCallbackList.Callback: void binderDied()>
<android.view.IWindowSession: void reportDropResult(android.view.IWindow,boolean)>
<android.util.MapCollections.EntrySet: boolean containsAll(java.util.Collection)>
<android.net.lowpan.ILowpanInterface: java.lang.String getRole()>
<android.content.pm.IPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.content.ContentProvider.Transport: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.media.WebVttRenderingWidget.CueLayout: void setOrder(int)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onRadioPowerStateChanged(int)>
<android.view.IWindowManager: void setShouldShowWithInsecureKeyguard(int,boolean)>
<android.app.IActivityManager: void unregisterTaskStackListener(android.app.ITaskStackListener)>
<android.app.VoiceInteractor.KillCallback: void cancel()>
<android.view.InsetsController.InsetsProperty: android.graphics.Insets get(android.view.WindowInsetsAnimationController)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: long getOperationHandle()>
<android.widget.Editor.InsertionHandleView: int getCursorOffset()>
<android.widget.RemoteViews.ViewPaddingAction: void <init>(android.widget.RemoteViews,int,int,int,int,int)>
<android.view.ViewRootImpl.W: void insetsControlChanged(android.view.InsetsState,android.view.InsetsSourceControl[])>
<android.animation.Keyframe.FloatKeyframe: android.animation.Keyframe clone()>
<android.content.pm.IPackageManager: boolean isPackageSignedByKeySetExactly(java.lang.String,android.content.pm.KeySet)>
<android.app.ActivityThread.ApplicationThread: void setNetworkBlockSeq(long)>
<android.widget.AbsListView.CheckForLongPress: void run()>
<android.media.ExifInterface.ExifAttribute: double getDoubleValue(java.nio.ByteOrder)>
<android.app.WallpaperManager.Globals: void onWallpaperColorsChanged(android.app.WallpaperColors,int,int)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: int getListPositionOffset()>
<android.widget.DatePickerSpinnerDelegate: void setMinDate(long)>
<android.hardware.LegacySensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>
<android.view.ViewOverlay.OverlayViewGroup: void remove(android.graphics.drawable.Drawable)>
<android.app.FragmentTransition: void startTransitions(android.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)>
<android.app.ContextImpl: boolean isCredentialProtectedStorage()>
<android.os.SystemPropertiesProto.Aaudio: void <init>(android.os.SystemPropertiesProto)>
<android.bluetooth.IBluetoothStateChangeCallback: void onBluetoothStateChange(boolean)>
<android.net.lowpan.LowpanProperties.LowpanStandardProperty: java.lang.String getName()>
<android.app.admin.IDevicePolicyManager: void forceUpdateUserSetupComplete()>
<android.bluetooth.BluetoothHidDevice.CallbackWrapper: void onGetReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.content.pm.IPackageManager: java.lang.String[] setDistractingPackageRestrictionsAsUser(java.lang.String[],int,int)>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,int[],int)>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,java.lang.String,java.lang.String,int)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder addBlacklists(android.gamedriver.GameDriverProto.Blacklist.Builder)>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,int[],int)>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.widget.AutoCompleteTextView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getWeekNumberColor()>
<android.app.admin.IDevicePolicyManager: boolean clearResetPasswordToken(android.content.ComponentName)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.widget.CalendarViewLegacyDelegate: int getUnfocusedMonthDateColor()>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int,int,java.lang.String)>
<android.net.lowpan.ILowpanInterface: void closeCommissioningSession()>
<android.app.IActivityManager: int[] getRunningUserIds()>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.KeyEventCallbackAdaptor: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.AlarmManager.ListenerWrapper: void run()>
<android.util.StatsLogInternal: int write(int,java.lang.String,java.lang.String,long,long,long,long)>
<android.app.ActivityTransitionCoordinator: void setGhostVisibility(int)>
<android.app.ApplicationPackageManager.DexModuleRegisterCallbackDelegate: void onDexModuleRegistered(java.lang.String,boolean,java.lang.String)>
<android.bluetooth.IBluetoothHeadset: void phoneStateChanged(int,int,int,java.lang.String,int,java.lang.String)>
<android.opengl.GLSurfaceView.EglHelper: void start()>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileContactsSearchDisabledForUser(int)>
<android.media.AudioRecord.NativeEventHandler: void handleMessage(android.os.Message)>
<android.inputmethodservice.IInputMethodWrapper: void executeMessage(android.os.Message)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionCancel(android.transition.Transition)>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate()>
<android.widget.TimePickerSpinnerDelegate: void setIs24Hour(boolean)>
<android.media.MediaPlayer.TimeProvider: void onSeekComplete(android.media.MediaPlayer)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setMaxActivityCount(int)>
<android.app.admin.IDevicePolicyManager: int getLockTaskFeatures(android.content.ComponentName)>
<android.os.IVoldListener: void onVolumeInternalPathChanged(java.lang.String,java.lang.String)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getViewTypeCount()>
<android.os.IVoldListener: void onVolumePathChanged(java.lang.String,java.lang.String)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,boolean)>
<android.widget.TimePickerSpinnerDelegate: void setHour(int)>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void writeUnsignedShort(int)>
<android.os.IVold: java.lang.String createObb(java.lang.String,java.lang.String,int)>
<android.security.keystore.IKeystoreService: int attestKey(android.security.keystore.IKeystoreCertificateChainCallback,java.lang.String,android.security.keymaster.KeymasterArguments)>
<android.widget.RelativeLayout.InspectionCompanion: void readProperties(android.widget.RelativeLayout,android.view.inspector.PropertyReader)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyDataSetObserver: void onChanged()>
<android.os.IVold: void destroyStubVolume(java.lang.String)>
<android.bluetooth.IBluetoothGattServerCallback: void onPhyUpdate(java.lang.String,int,int,int)>
<android.text.DynamicLayout.ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.security.keystore.DelegatingX509Certificate: java.security.PublicKey getPublicKey()>
<android.util.apk.WrappedX509Certificate: boolean[] getIssuerUniqueID()>
<android.app.NativeActivity.NativeContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.animation.StateListAnimator.StateListAnimatorConstantState: android.animation.StateListAnimator newInstance()>
<android.net.Uri.PathPart: android.net.Uri.PathPart appendEncodedSegment(android.net.Uri.PathPart,java.lang.String)>
<android.widget.GridLayout.Bounds: java.lang.String toString()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<android.nfc.NfcActivityManager.NfcApplicationState: void register()>
<android.content.IntentSender.FinishedDispatcher: void run()>
<android.media.ImageWriter.WriterSurfaceImage: android.media.Image.Plane[] getPlanes()>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,int[],int)>
<android.widget.Spinner.DropdownPopup: java.lang.CharSequence getHintText()>
<android.content.pm.IPackageManager: android.content.ComponentName getInstantAppInstallerComponent()>
<android.bluetooth.IBluetoothPan: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.app.ActivityThread.ApplicationThread: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean isSigning()>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.media.MediaRouter.CallbackInfo: boolean filterRouteEvent(int)>
<android.util.XmlPullAttributes: java.lang.String getClassAttribute()>
<android.opengl.GLErrorWrapper: void glBlendEquation(int)>
<android.net.LocalSocketImpl.SocketInputStream: int available()>
<android.widget.RemoteViews.BitmapCache: void <init>(android.os.Parcel)>
<android.widget.TextView.InspectionCompanion: void readProperties(android.widget.TextView,android.view.inspector.PropertyReader)>
<android.opengl.GLLogWrapper.PointerInfo: int getStride()>
<android.content.pm.IPackageManager: void reconcileSecondaryDexFiles(java.lang.String)>
<android.app.ActivityTransitionCoordinator: void scheduleGhostVisibilityChange(int)>
<android.widget.ZoomButtonsController.Container: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.util.MapCollections.ArrayIterator: java.lang.Object next()>
<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.ContextImpl: int getThemeResId()>
<android.view.ViewRootImpl.NativePostImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.preference.PreferenceScreen.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.GridLayout.Interval: java.lang.String toString()>
<android.app.BackStackRecord: void <init>(android.app.FragmentManagerImpl)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder removeBlacklists(int)>
<android.app.IActivityManager: void stopDelegateShellPermissionIdentity()>
<android.widget.ExpandableListConnector.MyDataSetObserver: void onChanged()>
<android.content.res.XmlBlock.Parser: void finalize()>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>
<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.opengl.GLLogWrapper: void glBufferData(int,int,java.nio.Buffer,int)>
<android.security.keystore.IKeystoreService: int isEmpty(int)>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.app.admin.IDevicePolicyManager: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)>
<android.widget.TextView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.hardware.LegacySensorManager: void <init>(android.hardware.SensorManager)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] engineGetIV()>
<android.mtp.MtpPropertyList: int[] getDataTypes()>
<android.bluetooth.IBluetoothHeadsetClient: boolean holdCall(android.bluetooth.BluetoothDevice)>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(int)>
<android.widget.RemoteViews.LayoutParamAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.FastScroller: boolean isEnabled()>
<android.bluetooth.IBluetoothGatt: void writeCharacteristic(int,java.lang.String,int,int,int,byte[])>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,float[],int)>
<android.app.ContextImpl: void startActivity(android.content.Intent)>
<android.util.MapCollections.ValuesCollection: int size()>
<android.widget.CalendarView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.media.ExifInterface.ByteOrderedDataInputStream: void <init>(java.io.InputStream)>
<android.graphics.ColorSpace.Xyz: float[] fromXyz(float[])>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void removeCallbacksAndRun()>
<android.widget.TimePickerSpinnerDelegate: boolean isEnabled()>
<android.widget.TabHost.LabelAndIconIndicatorStrategy: android.view.View createIndicatorView()>
<android.graphics.ColorSpace.Xyz: float[] toXyz(float[])>
<android.location.ILocationManager: boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String)>
<android.app.IActivityManager: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>
<android.content.pm.IPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,long)>
<android.opengl.GLLogWrapper: void glDrawArrays(int,int,int)>
<android.app.Activity.HostCallbacks: void onStartActivityAsUserFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>
<android.content.pm.IPackageManager: void flushPackageRestrictionsAsUser(int)>
<android.telephony.SmsMessage.MessageClass: android.telephony.SmsMessage.MessageClass[] values()>
<android.content.pm.IPackageManager: boolean isPackageStateProtected(java.lang.String,int)>
<android.stats.devicepolicy.nano.StringList: void writeTo(com.android.framework.protobuf.nano.CodedOutputByteBufferNano)>
<android.content.pm.IPackageManager: void finishPackageInstall(int,boolean)>
<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
<android.app.ContextImpl: android.content.Context getApplicationContext()>
<android.animation.FloatKeyframeSet: android.animation.FloatKeyframeSet clone()>
<android.app.Activity.HostCallbacks: android.app.Activity onGetHost()>
<android.filterfw.core.GenerateProgramPort: java.lang.String variableName()>
<android.view.MenuInflater.InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.bluetooth.IBluetooth: boolean sdpSearch(android.bluetooth.BluetoothDevice,android.os.ParcelUuid)>
<android.widget.Toolbar.SavedState: void <init>(android.os.Parcelable)>
<android.widget.DatePickerCalendarDelegate: int getMonth()>
<android.app.Instrumentation.InstrumentationThread: void <init>(android.app.Instrumentation,java.lang.String)>
<android.os.storage.IStorageManager: void commitChanges()>
<android.widget.CalendarViewMaterialDelegate: void setMinDate(long)>
<android.bluetooth.BluetoothInputStream: int available()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void finalize()>
<android.os.CancellationSignal.Transport: void cancel()>
<android.app.IActivityManager: void restart()>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.widget.DatePickerSpinnerDelegate: int getDayOfMonth()>
<android.renderscript.Font.Style: android.renderscript.Font.Style[] values()>
<android.util.apk.MemoryMappedFileDataSource: long size()>
<android.view.FocusFinder.FocusSorter: void sort(android.view.View[],int,int,android.view.ViewGroup,boolean)>
<android.widget.SelectionActionModeHelper.SelectionTracker: void onSmartSelection(android.widget.SelectionActionModeHelper.SelectionResult)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createString(java.lang.String)>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.ContextImpl: android.content.Context createCredentialProtectedStorageContext()>
<android.sysprop.CarProperties: void boot_user_override_id(java.lang.Integer)>
<android.app.ContextImpl: android.app.IApplicationThread getIApplicationThread()>
<android.os.AsyncTask.SerialExecutor: void scheduleNext()>
<android.opengl.GLErrorWrapper: void glLightModelx(int,int)>
<android.permission.PermissionControllerManager.FileReaderTask: byte[] doInBackground(java.lang.Void[])>
<android.content.pm.IPackageManager: void extendVerificationTimeout(int,int,long)>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,int)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionEnd(android.transition.Transition)>
<android.location.ILocationManager: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<android.content.pm.IPackageManager: void registerDexModule(java.lang.String,java.lang.String,boolean,android.content.pm.IDexModuleRegisterCallback)>
<android.filterfw.core.Scheduler: android.filterfw.core.Filter scheduleNextNode()>
<android.os.IVold: java.lang.String createStubVolume(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.bluetooth.le.IScannerCallback: void onScanManagerErrorCallback(int)>
<android.media.MediaCas.OpenSessionCallback: void onValues(int,java.util.ArrayList)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists getDefaultInstance()>
<android.content.res.XmlBlock.Parser: int getNamespaceCount(int)>
<android.content.pm.IPackageManagerNative: java.lang.String getModuleMetadataPackageName()>
<android.app.SystemServiceRegistry: void onServiceNotFound(android.os.ServiceManager.ServiceNotFoundException)>
<android.app.IActivityManager: void updatePersistentConfiguration(android.content.res.Configuration)>
<android.hardware.LegacySensorManager: void onRotationChanged(int)>
<android.content.pm.IPackageManager: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo,java.lang.String,int)>
<android.view.ViewRootImpl.W: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
<android.os.IInstalld: void dexopt(java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.DatePickerSpinnerDelegate: void updateDate(int,int,int)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: android.view.View getDefaultView()>
<android.media.Tokenizer.TagTokenizer: void tokenize()>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc[] values()>
<android.widget.StackView.LayoutParams: void setVerticalOffset(int)>
<android.graphics.Paint.Align: android.graphics.Paint.Align valueOf(java.lang.String)>
<android.media.ImageUtils: int getNumPlanesForFormat(int)>
<android.bluetooth.le.IAdvertisingSetCallback: void onScanResponseDataSet(int,int)>
<android.webkit.WebViewFactory.MissingWebViewPackageException: void <init>(java.lang.String)>
<android.providers.settings.GlobalSettingsProto.BleScan: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.content.pm.IPackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,boolean,int)>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>
<android.app.IActivityManager: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>
<android.media.MediaPlayer.TimeProvider.EventHandler: void <init>(android.media.MediaPlayer.TimeProvider,android.os.Looper)>
<android.inputmethodservice.IInputMethodWrapper: void revokeSession(com.android.internal.view.IInputMethodSession)>
<android.view.View.MatchIdPredicate: boolean test(android.view.View)>
<android.util.MapCollections.KeySet: boolean isEmpty()>
<android.widget.RemoteViews.SetRemoteInputsAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.app.IActivityManager: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)>
<android.location.BatchedLocationCallbackTransport.CallbackTransport: void onLocationBatch(java.util.List)>
<android.os.GraphicsEnvironment.OpenGlDriverChoice: android.os.GraphicsEnvironment.OpenGlDriverChoice[] values()>
<android.app.admin.IDevicePolicyManager: void clearSystemUpdatePolicyFreezePeriodRecord()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: java.lang.Object getItem(int)>
<android.bluetooth.IBluetoothHidDevice: boolean unregisterApp()>
<android.widget.ListPopupWindow.PopupDataSetObserver: void onChanged()>
<android.animation.IntKeyframeSet: java.lang.Class getType()>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateCursor(android.graphics.Rect)>
<android.os.IVoldTaskListener: void onStatus(int,android.os.PersistableBundle)>
<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.bluetooth.IBluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)>
<android.app.IActivityManager: boolean bindBackupAgent(java.lang.String,int,int)>
<android.opengl.EGLLogWrapper: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<android.media.MediaRouter.Static: void onDisplayRemoved(int)>
<android.os.IInstalld: void idmap(java.lang.String,java.lang.String,int)>
<android.text.Layout.Ellipsizer: char charAt(int)>
<android.media.ExifInterface.ExifAttribute: int getIntValue(java.nio.ByteOrder)>
<android.widget.TimePickerClockDelegate: void setEnabled(boolean)>
<android.app.admin.IDevicePolicyManager: boolean isActivePasswordSufficient(int,boolean)>
<android.util.StatsLogInternal: int write(int,java.lang.String,java.lang.String)>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: android.view.AccessibilityIterators.ParagraphTextSegmentIterator getInstance()>
<android.bluetooth.IBluetoothHidDeviceCallback: void onVirtualCableUnplug(android.bluetooth.BluetoothDevice)>
<android.content.pm.IPackageManager: java.lang.String getWellbeingPackageName()>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace valueOf(java.lang.String)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: int getAdditionalEntropyAmountForFinish()>
<android.bluetooth.IBluetoothHeadsetClient: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>
<android.provider.MediaStore.InternalThumbnails: void cancelThumbnail(android.content.ContentResolver,android.net.Uri)>
<android.view.ViewRootImpl.NativePostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.net.LocalSocketImpl: void listen(int)>
<android.util.apk.WrappedX509Certificate: void verify(java.security.PublicKey,java.lang.String)>
<android.animation.Keyframe.ObjectKeyframe: android.animation.Keyframe.ObjectKeyframe clone()>
<android.content.res.StringBlock: void <init>(byte[],boolean)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationEnd(android.animation.Animator)>
<android.bluetooth.IBluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothMap: boolean connect(android.bluetooth.BluetoothDevice)>
<android.widget.Spinner.DialogPopup: void setVerticalOffset(int)>
<android.service.autofill.RequiredValidators: int describeContents()>
<android.widget.CompoundButton.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.widget.FastScroller: void setScrollBarStyle(int)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(java.io.InputStream)>
<android.app.IActivityManager: void setTaskResizeable(int,int)>
<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater.Parent)>
<android.util.StatsLogInternal: int write(int,int,int,java.lang.String,int,int,int,int,long,int,int,int,int)>
<android.util.StatsLogInternal: int write(int,int,long,int,boolean,int,int,int)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>
<android.app.ContextImpl: void setAutofillClient(android.view.autofill.AutofillManager.AutofillClient)>
<android.net.Uri.HierarchicalUri: java.lang.String getAuthority()>
<android.graphics.drawable.RippleComponent: void onHotspotBoundsChanged()>
<android.net.lowpan.ILowpanInterface: boolean isCommissioned()>
<android.print.PrintServiceRecommendationsLoader.MyHandler: void handleMessage(android.os.Message)>
<android.opengl.GLErrorWrapper: void <init>(javax.microedition.khronos.opengles.GL,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleLocalVoiceInteractionStarted(android.os.IBinder,com.android.internal.app.IVoiceInteractor)>
<android.media.MediaRouter.Static.Client: void onStateChanged()>
<android.os.storage.IStorageManager: void destroyUserStorage(java.lang.String,int,int)>
<android.preference.GenericInflater: android.preference.GenericInflater cloneInContext(android.content.Context)>
<android.media.RemoteController.MediaControllerCallback: void onMetadataChanged(android.media.MediaMetadata)>
<android.widget.RemoteViews.MethodKey: boolean equals(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,int[],int)>
<android.media.MediaDrm.ListenerArgs: void <init>(android.os.Parcel,int,int)>
<android.util.StatsLogInternal: int write(int,byte[],int,int,int,int,int,long,long,long,long)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder addBlacklists(android.gamedriver.GameDriverProto.Blacklist)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void initAlgorithmSpecificParameters()>
<android.util.apk.ApkSigningBlockUtils: android.util.apk.SignatureInfo findSignature(java.io.RandomAccessFile,int)>
<android.net.Uri.OpaqueUri: java.lang.String getUserInfo()>
<android.bluetooth.BluetoothHidDevice.CallbackWrapper: void onInterruptData(android.bluetooth.BluetoothDevice,byte,byte[])>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String)>
<android.view.IWindowManager: void statusBarVisibilityChanged(int,int)>
<android.app.ApplicationPackageManager.ResourceName: java.lang.String toString()>
<android.widget.Editor.EasyEditPopupWindow: int getTextOffset()>
<android.view.LayoutInflater.FactoryMerger: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.view.IWindowManager: int getWindowingMode(int)>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode[] values()>
<android.apex.IApexService: android.apex.ApexSessionInfo getStagedSessionInfo(int)>
<android.util.StatsLogInternal: int write(int,int,int,int,int,int)>
<android.view.IWindowSession: void remove(android.view.IWindow)>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.widget.RemoteViews.SetRippleDrawableColor: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.IPackageManager: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>
<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.filterfw.core.Scheduler: void reset()>
<android.app.IActivityManager: int getForegroundServiceType(android.content.ComponentName,android.os.IBinder)>
<android.app.admin.IDevicePolicyManager: java.util.List getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,long,long,long,long,long,long,int)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition configureTransition(android.transition.Transition,boolean)>
<android.view.ViewDebug.FlagToString: int mask()>
<android.app.Notification.TemplateBindResult: void setIconMarginEnd(int)>
<android.bluetooth.IBluetooth: boolean unregisterMetadataListener(android.bluetooth.BluetoothDevice)>
<android.opengl.GLErrorWrapper: void glScalex(int,int,int)>
<android.app.admin.IDevicePolicyManager: long getLastSecurityLogRetrievalTime()>
<android.os.IVold: void prepareSandboxForApp(java.lang.String,int,java.lang.String,int)>
<android.media.ImageWriter.WriterSurfaceImage: int getTransform()>
<android.view.IWindowManager: void setInTouchMode(boolean)>
<android.widget.SimpleMonthView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.ContextImpl.ApplicationContentResolver: void appNotRespondingViaProvider(android.content.IContentProvider)>
<android.text.AlteredCharSequence.AlteredSpanned: int getSpanStart(java.lang.Object)>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.app.ContextImpl: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void resetWhilePreservingInitState()>
<android.app.ContextImpl: int checkCallingUriPermission(android.net.Uri,int)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: int getVirtualViewAt(float,float)>
<android.opengl.GLErrorWrapper: void glViewport(int,int,int,int)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getDeviceOwnerOrganizationName()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<android.util.MapCollections.EntrySet: boolean add(java.lang.Object)>
<android.media.SubtitleTrack.CueList.EntryIterator: void remove()>
<android.hardware.SystemSensorManager.InjectEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.provider.Column: int value()>
<android.content.pm.IPackageManager: byte[] getIntentFilterVerificationBackup(int)>
<android.os.storage.IStorageManager: boolean isObbMounted(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,int[],int)>
<android.widget.SimpleAdapter.SimpleFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.util.MapCollections.KeySet: boolean removeAll(java.util.Collection)>
<android.app.LoadedApk.ServiceDispatcher.InnerConnection: void connected(android.content.ComponentName,android.os.IBinder,boolean)>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style valueOf(java.lang.String)>
<android.widget.Spinner.SpinnerPopup: int getHorizontalOffset()>
<android.filterfw.core.StopWatch: void start()>
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>
<android.opengl.GLErrorWrapper: void glMultMatrixx(int[],int)>
<android.os.SystemService.State: android.os.SystemService.State valueOf(java.lang.String)>
<android.view.View.CheckForLongPress: void rememberPressedState()>
<android.widget.RemoteViews.SetDrawableTint: int getActionTag()>
<android.text.Layout.Alignment: android.text.Layout.Alignment valueOf(java.lang.String)>
<android.preference.MultiSelectListPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void init(int,int,int)>
<android.util.RecurrenceRule.NonrecurringIterator: void <init>(android.util.RecurrenceRule)>
<android.content.res.XmlBlock.Parser: java.lang.String getPositionDescription()>
<android.widget.DayPickerView: int getDayTextAppearance()>
<android.filterfw.core.GenerateFieldPort: java.lang.String name()>
<android.bluetooth.le.IAdvertisingSetCallback: void onPeriodicAdvertisingParametersUpdated(int,int)>
<android.bluetooth.IBluetoothA2dpSink: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
<android.media.MediaFormat.PrefixedKeySetWithPrefixRemoved: java.lang.String mapKeyToItem(java.lang.String)>
<android.provider.Column: boolean readOnly()>
<android.os.ZygoteProcess.ZygoteState: android.os.ZygoteProcess.ZygoteState connect(android.net.LocalSocketAddress,android.net.LocalSocketAddress)>
<android.net.lowpan.ILowpanInterface: java.lang.String getState()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore getKeyStore()>
<android.widget.Editor.PinnedPopupWindow: void initContentView()>
<android.net.lowpan.ILowpanInterface: boolean isEnabled()>
<android.util.MapCollections.MapIterator: java.util.Map.Entry next()>
<android.app.ActivityThread.AndroidOs: void remove(java.lang.String)>
<android.app.ContextImpl: void updateDisplay(int)>
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: android.view.View getErrorView()>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseDelimitedFrom(java.io.InputStream)>
<android.util.StatsLogInternal: int write(int,java.lang.String,java.lang.String,boolean,boolean)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.widget.SimpleMonthView: void <init>(android.content.Context)>
<android.security.IKeyChainService: void setGrant(int,java.lang.String,boolean)>
<android.sysprop.VoldProperties: java.util.Optional decrypt()>
<android.gsi.IGsiService: boolean cancelGsiInstall()>
<android.app.Activity.HostCallbacks: void onStartActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<android.app.ContextImpl: boolean isRestricted()>
<android.hardware.radio.Utils: java.util.Map readStringIntMap(android.os.Parcel)>
<android.app.IActivityManager: void noteWakeupAlarm(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String,java.lang.String)>
<android.widget.ExpandableListConnector.PositionMetadata: android.widget.ExpandableListConnector.PositionMetadata obtain(int,int,int,int,android.widget.ExpandableListConnector.GroupMetadata,int)>
<android.widget.TimePickerSpinnerDelegate: int getMinute()>
<android.hardware.usb.IUsbManager: void clearDefaults(java.lang.String,int)>
<android.media.midi.MidiPortImpl: int getDataOffset(byte[],int)>
<android.view.IWindowManager: void freezeRotation(int)>
<android.sysprop.VoldProperties: java.util.Optional encrypt_progress()>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>
<com.android.internal.messages.nano.SystemMessageProto.SystemMessage: com.android.internal.messages.nano.SystemMessageProto.SystemMessage parseFrom(byte[])>
<android.appwidget.AppWidgetHost.UpdateHandler: void handleMessage(android.os.Message)>
<android.bluetooth.IBluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.hardware.radio.TunerAdapter: boolean hasControl()>
<android.providers.settings.SecureSettingsProto.LockScreen: void <init>(android.providers.settings.SecureSettingsProto)>
<android.view.IWindowManager: void syncInputTransactions()>
<android.media.MediaCodecInfo.Feature: void <init>(java.lang.String,int,boolean)>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.opengl.GLLogWrapper: void glTexParameterx(int,int,int)>
<android.app.admin.IDevicePolicyManager: int getUserProvisioningState()>
<android.preference.SwitchPreference.Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.app.ActivityThread.ApplicationThread: void notifyCleartextNetwork(byte[])>
<android.media.ExifInterface.ExifAttribute: java.lang.String toString()>
<android.app.Notification.TemplateBindResult: boolean isRightIconContainerVisible()>
<android.bluetooth.IBluetoothPbapClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.app.admin.IDevicePolicyManager: int logoutUser(android.content.ComponentName)>
<android.view.AccessibilityIterators.WordTextSegmentIterator: int[] preceding(int)>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>
<android.location.LocalListenerHelper: void <init>(android.content.Context,java.lang.String)>
<android.util.apk.ByteBufferDataSource: void feedIntoDataDigester(android.util.apk.DataDigester,long,int)>
<android.os.IVold: void markBootAttempt()>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType valueOf(java.lang.String)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.opengl.GLLogWrapper: void glGetPointerv(int,java.nio.Buffer[])>
<android.view.ViewGroup.ChildListForAccessibility: android.view.View getChildAt(int)>
<android.widget.Editor.EasyEditPopupWindow: int clipVertically(int)>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,int)>
<android.media.WebVttRenderingWidget.CueLayout: void prepForPrune()>
<android.util.StatsLogInternal: int write(int,int,int,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLLogWrapper: void glLightx(int,int,int)>
<android.gamedriver.GameDriverProto.BlacklistOrBuilder: java.util.List getPackageNamesList()>
<android.gamedriver.GameDriverProto.Blacklist.Builder: android.gamedriver.GameDriverProto.Blacklist.Builder addPackageNames(java.lang.String)>
<android.security.keystore.IKeystoreService: int begin(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,int[],int)>
<android.gsi.IGsiService: boolean isGsiRunning()>
<android.app.admin.IDevicePolicyManager: boolean setKeyPairCertificate(android.content.ComponentName,java.lang.String,java.lang.String,byte[],byte[],boolean)>
<android.os.UidProto.Cpu.ByFrequency: void <init>(android.os.UidProto.Cpu)>
<android.os.IVold: java.lang.String fdeGetPassword()>
<android.widget.Editor.PinnedPopupWindow: void <init>(android.widget.Editor)>
<android.media.ExifInterface.ByteOrderedDataInputStream: int peek()>
<android.app.IActivityManager: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>
<android.nfc.tech.BasicTagTechnology: void connect()>
<android.os.StrictMode.AndroidBlockGuardPolicy: int getThreadPolicyMask()>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.net.Uri.StringUri: java.lang.String getPath()>
<android.graphics.drawable.RippleForeground: void onTargetRadiusChanged(float)>
<android.os.storage.IStorageManager: void partitionMixed(java.lang.String,int)>
<android.view.ViewDebug.FlagToString: boolean outputIf()>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createSRational(android.media.ExifInterface.Rational,java.nio.ByteOrder)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA384AndMGF1Padding: void finalize()>
<android.app.admin.IDevicePolicyManager: boolean isSecurityLoggingEnabled(android.content.ComponentName)>
<android.location.IGeocodeProvider: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.util.apk.ZipUtils: void setZipEocdCentralDirectoryOffset(java.nio.ByteBuffer,long)>
<android.bluetooth.IBluetoothHearingAid: boolean connect(android.bluetooth.BluetoothDevice)>
<android.widget.AbsListView.AdapterDataSetObserver: void onInvalidated()>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,int[],int)>
<android.bluetooth.IBluetoothCallback: void onBluetoothStateChange(int,int)>
<android.content.ContentProvider.Transport: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void addDelayedAnimation(android.view.RenderNodeAnimator)>
<android.util.StatsLogInternal: int write(int,int,int,boolean,int,int,int,int,boolean)>
<android.util.MapCollections.KeySet: boolean equals(java.lang.Object)>
<android.widget.Editor.SpanController: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.media.AudioPlaybackConfiguration.IPlayerShell: void binderDied()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: int getAdditionalEntropyAmountForFinish()>
<android.hardware.radio.TunerAdapter: void close()>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedFragment()>
<android.widget.TimePickerSpinnerDelegate: android.view.View getAmView()>
<android.util.Base64.Decoder: int maxOutputSize(int)>
<android.widget.CursorAdapter.MyDataSetObserver: void onChanged()>
<android.content.res.XmlBlock.Parser: java.lang.String nextText()>
<android.graphics.ColorSpace.Lab: float[] toXyz(float[])>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM.NoPadding: int engineGetOutputSize(int)>
<android.net.Uri.StringUri: java.lang.String getScheme()>
<android.os.storage.IStorageManager: void mount(java.lang.String)>
<android.providers.settings.SecureSettingsProto.InputMethods: void <init>(android.providers.settings.SecureSettingsProto)>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.app.LoadedApk.ServiceDispatcher.RunConnection: void run()>
<android.app.IActivityManager: void appNotRespondingViaProvider(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager: int checkProvisioningPreCondition(java.lang.String,java.lang.String)>
<android.net.LocalSocketImpl.SocketOutputStream: void close()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<android.app.IActivityManager: java.util.List getServices(int,int)>
<android.media.ImageWriter.WriterSurfaceImage.SurfacePlane: int getRowStride()>
<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,float[],int)>
<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>
<android.app.admin.IDevicePolicyManager: void installUpdateFromFile(android.content.ComponentName,android.os.ParcelFileDescriptor,android.app.admin.StartInstallingUpdateCallback)>
<android.location.ILocationManager: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<android.app.ExitTransitionCoordinator: void <init>(android.app.Activity,android.view.Window,android.app.SharedElementCallback,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean)>
<android.app.ContextImpl: android.content.ContentCaptureOptions getContentCaptureOptions()>
<android.widget.DatePickerCalendarDelegate: int getYear()>
<android.util.MapCollections.KeySet: boolean remove(java.lang.Object)>
<android.widget.Editor.InsertionPointCursorController: boolean isCursorBeingModified()>
<android.app.WallpaperManager.FastBitmapDrawable: void setFilterBitmap(boolean)>
<android.content.pm.IPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.app.ActivityTransitionCoordinator: void viewsReady(android.util.ArrayMap)>
<android.hardware.radio.Utils: void writeStringIntMap(android.os.Parcel,java.util.Map)>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.graphics.ColorSpace.Adaptation: android.graphics.ColorSpace.Adaptation[] values()>
<android.content.pm.IPackageManager: java.lang.String getIncidentReportApproverPackageName()>
<android.os.Handler.BlockingRunnable: void <init>(java.lang.Runnable)>
<android.hardware.input.IInputManager: boolean injectInputEvent(android.view.InputEvent,int)>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void handleCallSessionEvent(int)>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.os.PersistableBundle.MyReadMapCallback: java.lang.Object readThisUnknownObjectXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean getForceEphemeralUsers(android.content.ComponentName)>
<android.app.backup.FileBackupHelperBase: void finalize()>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: boolean performAction(int,int,android.os.Bundle)>
<android.providers.settings.SecureSettingsProto.QuickSettings: void <init>(android.providers.settings.SecureSettingsProto)>
<android.app.Activity.HostCallbacks: void <init>(android.app.Activity)>
<android.app.BackStackRecord: int getTransition()>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace[] values()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: long getProducedOutputSizeBytes()>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc[] values()>
<android.media.MediaRouter.WifiDisplayStatusChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.DayPickerPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: int getActionTag()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setWeekNumberColor(int)>
<android.hardware.SystemSensorManager.SensorEventQueue: void dispatchFlushCompleteEvent(int)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>
<android.provider.Settings.GenerationTracker: void <init>(android.util.MemoryIntArray,int,int,java.lang.Runnable)>
<android.location.LocationManager.GnssStatusListenerTransport: void onNmeaReceived(long,java.lang.String)>
<android.view.Surface.CompatibleCanvas: void getMatrix(android.graphics.Matrix)>
<android.app.IActivityManager: void dumpHeapFinished(java.lang.String)>
<android.widget.TimePickerClockDelegate: boolean validateInput()>
<android.util.ReflectiveProperty: boolean isReadOnly()>
<android.os.UidProto.Package.Service: void <init>(android.os.UidProto.Package)>
<android.util.MapCollections.EntrySet: boolean remove(java.lang.Object)>
<android.transition.Visibility.DisappearListener: void <init>(android.view.View,int,boolean)>
<android.app.ContextImpl: android.content.AutofillOptions getAutofillOptions()>
<android.view.MenuInflater.InflatedOnMenuItemClickListener: void <init>(java.lang.Object,java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getDeclaredSharedLibraries(java.lang.String,int,int)>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void ensureConnection()>
<android.util.apk.WrappedX509Certificate: void verify(java.security.PublicKey)>
<android.bluetooth.IBluetoothAvrcpController: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.view.IWindowManager: void clearForcedDisplaySize(int)>
<android.content.pm.IPackageManager: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>
<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>
<android.os.UidProto.Job: void <init>(android.os.UidProto)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getOrganizationNameForUser(int)>
<android.media.WebVttRenderingWidget.RegionLayout: boolean prune()>
<android.animation.Keyframe.ObjectKeyframe: java.lang.Object clone()>
<android.os.IVold: int fdeGetPasswordType()>
<android.hardware.radio.TunerCallbackAdapter: void onProgramListChanged()>
<android.hardware.radio.TunerAdapter: int setMute(boolean)>
<android.app.BackStackRecord: int commit()>
<android.widget.TextView.CharWrapper: java.lang.String toString()>
<android.mtp.MtpStorageManager.MtpObjectState: android.mtp.MtpStorageManager.MtpObjectState[] values()>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.os.ShellCallback.MyShellCallback: android.os.ParcelFileDescriptor openFile(java.lang.String,java.lang.String,java.lang.String)>
<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int,int)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createSLong(int[],java.nio.ByteOrder)>
<android.os.IIncidentReportStatusListener: void onReportFailed()>
<android.filterfw.core.GenerateProgramPorts: android.filterfw.core.GenerateProgramPort[] value()>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()>
<android.widget.FastScroller: void updateLayout()>
<android.providers.settings.GlobalSettingsProto.Sys: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.DateTimeView.ReceiverInfo: void addView(android.widget.DateTimeView)>
<android.os.SystemProto.ResourcePowerManager: void <init>(android.os.SystemProto)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void setProperty(android.util.Property)>
<android.app.ContextImpl: android.content.res.AssetManager getAssets()>
<android.app.WallpaperManager.FastBitmapDrawable: void draw(android.graphics.Canvas)>
<android.os.IVold: boolean supportsBlockCheckpoint()>
<android.widget.Editor.TextActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.opengl.GLLogWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.FastScroller: void setAlwaysShow(boolean)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: int engineGetBlockSize()>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.MultiClientInputMethodSessionImpl: void hideSoftInput(int,android.os.ResultReceiver)>
<android.widget.RemoteViews.ViewPaddingAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.ScrollView.InspectionCompanion: void readProperties(android.widget.ScrollView,android.view.inspector.PropertyReader)>
<android.animation.IntKeyframeSet: int getIntValue(float)>
<android.net.LocalSocketImpl: boolean supportsUrgentData()>
<android.util.EventLogTag.ValueDescriptor: void <init>(android.util.EventLogTag)>
<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.utils.SubmitInfo submitRequestList(android.hardware.camera2.CaptureRequest[],boolean)>
<android.app.admin.IDevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<android.view.inspector.InspectableProperty: android.view.inspector.InspectableProperty.ValueType valueType()>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>
<android.util.StatsLogInternal: int write(int,boolean,java.lang.String,long,long)>
<android.app.admin.SecurityLogTags: void writeSecurityCryptoSelfTestCompleted(int)>
<android.app.ContextImpl: android.content.res.Resources getResources()>
<android.view.ViewGroup.InspectionCompanion: void readProperties(android.view.ViewGroup,android.view.inspector.PropertyReader)>
<android.view.Choreographer.CallbackQueue: void addCallbackLocked(long,java.lang.Object,java.lang.Object)>
<android.app.admin.IDevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>
<android.content.res.XmlBlock.Parser: void setProperty(java.lang.String,java.lang.Object)>
<android.media.Ringtone.MyOnCompletionListener: void onCompletion(android.media.MediaPlayer)>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace[] values()>
<android.app.admin.IDevicePolicyManager: void setShortSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void setIv(byte[])>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void updateSelection(int,int,int,int,int,int)>
<android.transition.ChangeTransform.Transforms: void <init>(android.view.View)>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,java.lang.String,int,int)>
<android.preference.DialogPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: byte[] engineGetIV()>
<android.app.admin.SecurityLogTags: void writeSecurityCertValidationFailure(java.lang.String)>
<android.bluetooth.IBluetoothMap: int getState()>
<android.telephony.NetworkService.INetworkServiceWrapper: void requestNetworkRegistrationInfo(int,int,android.telephony.INetworkServiceCallback)>
<android.view.ViewRootImpl.W: void updatePointerIcon(float,float)>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.telecom.ConnectionServiceAdapter: void binderDied()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetWhilePreservingInitState()>
<android.graphics.ColorSpace.RenderIntent: android.graphics.ColorSpace.RenderIntent[] values()>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getDeviceOwnerComponent(boolean)>
<android.app.ContextImpl: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.FlagToString[] flagMapping()>
<android.util.apk.WrappedX509Certificate: int getVersion()>
<android.bluetooth.IBluetoothPbapClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.opengl.GLLogWrapper: void glDepthRangex(int,int)>
<android.os.IInstalld: void linkNativeLibraryDirectory(java.lang.String,java.lang.String,java.lang.String,int)>
<android.hardware.usb.IUsbManager: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void initKey(android.security.keystore.AndroidKeyStoreKey)>
<android.bluetooth.IBluetoothSap: int getPriority(android.bluetooth.BluetoothDevice)>
<android.sax.BadXmlException: void <init>(java.lang.String,org.xml.sax.Locator)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getSelectedWeekBackgroundColor()>
<android.os.ParcelFileDescriptor.Status: void <init>(int)>
<android.app.IActivityManager: void killApplicationProcess(java.lang.String,int)>
<android.widget.Spinner.DropDownAdapter: int getViewTypeCount()>
<android.os.SystemPropertiesProto.InitSvc: void <init>(android.os.SystemPropertiesProto)>
<android.content.res.XmlBlock: void finalize()>
<android.widget.TextView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.media.MediaPlayer.EventHandler: void <init>(android.media.MediaPlayer,android.media.MediaPlayer,android.os.Looper)>
<android.apex.ApexInfo: void readFromParcel(android.os.Parcel)>
<android.util.MapCollections.MapIterator: int hashCode()>
<android.widget.RemoteViews.ViewGroupActionRemove: int getActionTag()>
<android.appwidget.AppWidgetHostView.ViewApplyListener: void <init>(android.appwidget.AppWidgetHostView,android.widget.RemoteViews,int,boolean)>
<android.os.IVoldListener: void onVolumeCreated(java.lang.String,int,java.lang.String,java.lang.String)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onUserMobileDataStateChanged(boolean)>
<android.bluetooth.IBluetoothA2dpSink: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,java.lang.String,int,int,int,int)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean engineVerify(byte[])>
<android.widget.RemoteViews.SetPendingIntentTemplate: void writeToParcel(android.os.Parcel,int)>
<android.animation.AnimatorSet.Node: java.lang.Object clone()>
<android.os.storage.IStorageManager: int getEncryptionState()>
<android.content.res.ThemedResourceCache: java.lang.Object get(long,android.content.res.Resources.Theme)>
<android.widget.TextView.CharWrapper: float measureText(int,int,android.graphics.Paint)>
<android.sysprop.TraceProperties: void user_initiated(java.lang.Boolean)>
<android.widget.GridLayout.Interval: boolean equals(java.lang.Object)>
<android.view.View.UnsetPressedState: void run()>
<android.app.IActivityManager: boolean clearApplicationUserData(java.lang.String,boolean,android.content.pm.IPackageDataObserver,int)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder clearBlacklists()>
<android.permission.PermissionControllerManager.PendingRevokeAppPermissionRequest: void run(android.os.IInterface)>
<android.speech.tts.PlaybackSynthesisCallback: int done()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<android.opengl.GLLogWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.hardware.radio.TunerAdapter: int scan(int,boolean)>
<android.bluetooth.IBluetoothGattServerCallback: void onDescriptorWriteRequest(java.lang.String,int,int,int,boolean,boolean,int,byte[])>
<android.media.AudioHandle: boolean equals(java.lang.Object)>
<android.net.NetworkFactory.NetworkRequestInfo: java.lang.String toString()>
<android.graphics.Path.FillType: android.graphics.Path.FillType[] values()>
<android.widget.Toast.TN: void cancel()>
<android.inputmethodservice.IInputMethodSessionWrapper: void toggleSoftInput(int,int)>
<android.accounts.AccountManager.AmsTask: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback)>
<android.security.keymaster.KeymasterLongArgument: void <init>(int,android.os.Parcel)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onReadFromDisk()>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(int[],int)>
<android.widget.Editor.PositionListener: void onScrollChanged()>
<android.media.MediaPlayer.TimeProvider: void onBuffering(boolean)>
<android.preference.SeekBarVolumizer.VolumeHandler: void handleMessage(android.os.Message)>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,int[],int)>
<android.view.InsetsController.InsetsProperty: void set(android.view.WindowInsetsAnimationController,android.graphics.Insets)>
<android.widget.GridLayout.Assoc: android.widget.GridLayout.PackedMap pack()>
<android.util.StatsLogInternal: int write(int,int)>
<android.widget.AbsListView.PositionScroller: void run()>
<android.os.storage.IStorageManager: android.os.storage.DiskInfo[] getDisks()>
<android.content.res.XmlBlock.Parser: int getLineNumber()>
<android.bluetooth.IBluetoothHeadsetPhone: java.lang.String getSubscriberNumber()>
<android.widget.SearchView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaFormat.PrefixedKeySetWithPrefixRemoved: boolean keepKey(java.lang.String)>
<android.widget.ExpandableListConnector: android.widget.Filter getFilter()>
<android.opengl.GLLogWrapper: void glDrawTexsOES(short,short,short,short,short)>
<android.app.timezone.Utils: int validateVersion(java.lang.String,int)>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void writeToParcel(android.os.Parcel,int)>
<android.animation.Keyframe.IntKeyframe: void setValue(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glClearColorx(int,int,int,int)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<android.gamedriver.GameDriverProto.Blacklist.Builder: int getPackageNamesCount()>
<android.gsi.GsiInstallParams: int describeContents()>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType[] values()>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode[] values()>
<android.media.MediaScanner.MediaBulkDeleter: void <init>(android.content.ContentProviderClient,android.net.Uri)>
<android.location.LocationManager.GnssStatusListenerTransport: void onGnssStarted()>
<android.os.IProcessInfoService: void getProcessStatesFromPids(int[],int[])>
<android.inputmethodservice.IInputMethodSessionWrapper: void finishSession()>
<android.widget.TextView.Drawables: void <init>(android.content.Context)>
<android.widget.CompoundButton.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.hardware.radio.TunerAdapter: android.hardware.radio.ProgramList getDynamicProgramList(android.hardware.radio.ProgramList.Filter)>
<android.app.IActivityManager: void revokeUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>
<android.os.UidProto.Network: void <init>(android.os.UidProto)>
<android.gamedriver.GameDriverProto.Blacklist: java.lang.Object dynamicMethod(com.android.framework.protobuf.GeneratedMessageLite.MethodToInvoke,java.lang.Object,java.lang.Object)>
<android.widget.Toolbar.InspectionCompanion: void readProperties(android.widget.Toolbar,android.view.inspector.PropertyReader)>
<android.app.admin.IDevicePolicyManager: void setBackupServiceEnabled(android.content.ComponentName,boolean)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(java.io.InputStream,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.app.IActivityManager: void setPersistentVrThread(int)>
<android.widget.Editor.CorrectionHighlighter: void highlight(android.view.inputmethod.CorrectionInfo)>
<android.app.LoadedApk.SplitDependencyLoaderImpl: void constructSplit(int,int[],int)>
<android.net.lowpan.ILowpanInterface: void stopNetScan()>
<android.security.KeyStore.ExportKeyPromise: void binderDied()>
<android.media.PlayerBase.IPlayerWrapper: void <init>(android.media.PlayerBase)>
<android.opengl.GLErrorWrapper: void glStencilFunc(int,int,int)>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: int[] following(int)>
<android.app.admin.SecurityLogTags: void writeSecurityOsStartup(java.lang.String,java.lang.String)>
<android.animation.StateListAnimator.StateListAnimatorConstantState: int getChangingConfigurations()>
<android.app.ActivityTransitionState: void readState(android.os.Bundle)>
<android.bluetooth.BluetoothOutputStream: void flush()>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,int[],int)>
<android.bluetooth.IBluetooth: void onBrEdrDown()>
<android.widget.ExpandableListConnector.MyDataSetObserver: void onInvalidated()>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean removeSensor(android.hardware.Sensor,boolean)>
<android.view.ViewGroup.ChildListForAccessibility: android.view.ViewGroup.ChildListForAccessibility obtain(android.view.ViewGroup,boolean)>
<android.hardware.SystemSensorManager.SensorEventQueue: void <init>(android.hardware.SensorEventListener,android.os.Looper,android.hardware.SystemSensorManager,java.lang.String)>
<android.opengl.GLSurfaceView.DefaultContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setShowDefaultActivity(boolean,boolean)>
<android.widget.TextClock.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.hardware.camera2.ICameraDeviceUser: long flush()>
<android.os.IVold: boolean needsRollback()>
<android.app.WallpaperManager.WallpaperSetCompletion: void onWallpaperColorsChanged(android.app.WallpaperColors,int,int)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: void <init>(android.widget.CursorTreeAdapter.MyCursorHelper)>
<android.util.apk.MemoryMappedFileDataSource: void feedIntoDataDigester(android.util.apk.DataDigester,long,int)>
<android.security.keystore.IKeystoreService: int insert(java.lang.String,byte[],int,int)>
<android.telecom.CallbackRecord: void <init>(java.lang.Object,android.os.Handler)>
<android.sysprop.ContactsProperties: java.util.Optional keep_stale_account_data()>
<android.text.TextUtils.Reverser: java.lang.String toString()>
<android.text.SpannableStringInternal: void getChars(int,int,char[],int)>
<android.animation.BidirectionalTypeConverter.InvertedConverter: java.lang.Object convertBack(java.lang.Object)>
<android.widget.TimePicker.AbstractTimePickerDelegate.SavedState: int getMinute()>
<android.util.StatsLogInternal: int write(int,long,long,int,boolean)>
<android.gsi.IGsiService: android.gsi.GsiProgress getInstallProgress()>
<android.view.ViewRootImpl.ViewPreImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.opengl.GLLogWrapper: void glSampleCoverage(float,boolean)>
<android.bluetooth.IBluetoothHeadsetClient: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>
<android.media.MediaPlayer.TimeProvider: void scheduleUpdate(android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.security.keystore.IKeystoreService: int generateKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int)>
<android.app.IActivityManager: boolean updateConfiguration(android.content.res.Configuration)>
<android.gsi.GsiProgress: int describeContents()>
<android.os.storage.IStorageManager: void runIdleMaintenance()>
<android.sysprop.SetupWizardProperties: java.util.List esim_cid_ignore()>
<android.media.ExifInterface.ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)>
<android.telecom.CallbackRecord: android.os.Handler getHandler()>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.media.PlayerBase.IPlayerWrapper: void setPan(float)>
<android.app.ActivityThread.ApplicationThread: void processInBackground()>
<android.widget.SmartSelectSprite.RoundedRectangleShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.opengl.GLLogWrapper: void glBlendFunc(int,int)>
<android.os.IVold: void onUserAdded(int,int)>
<android.location.LocationManager.GnssStatusListenerTransport: void onSvStatusChanged(int,int[],float[],float[],float[],float[])>
<android.widget.CompoundButton.SavedState: java.lang.String toString()>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>
<android.bluetooth.IBluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>
<android.opengl.GLLogWrapper: void glGetFloatv(int,float[],int)>
<android.opengl.GLErrorWrapper: void glClear(int)>
<android.app.admin.SecurityLogTags: void writeSecurityAdbSyncRecv(java.lang.String)>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void writeByte(int)>
<android.content.pm.IPackageManager: boolean addWhitelistedRestrictedPermission(java.lang.String,java.lang.String,int,int)>
<android.widget.CalendarViewLegacyDelegate: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.permission.PermissionControllerManager.PendingGetAppPermissionRequest: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder addAllBlacklists(java.lang.Iterable)>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType valueOf(java.lang.String)>
<android.net.Uri.StringUri: android.net.Uri readFrom(android.os.Parcel)>
<android.widget.GridView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.security.keystore.DelegatingX509Certificate: java.util.Collection getIssuerAlternativeNames()>
<android.util.KeyValueSettingObserver.SettingObserver: void onChange(boolean)>
<android.widget.FastScroller: boolean isAlwaysShowEnabled()>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedAuthority()>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.filterfw.core.StopWatch: void <init>(java.lang.String)>
<android.widget.AbsListView.InputConnectionWrapper: boolean endBatchEdit()>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,float[],int)>
<android.app.LoadedApk.ReceiverDispatcher.InnerReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.graphics.ColorSpace.Model: android.graphics.ColorSpace.Model[] values()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void finalize()>
<android.gamedriver.GameDriverProto.Blacklist.Builder: android.gamedriver.GameDriverProto.Blacklist.Builder addAllPackageNames(java.lang.Iterable)>
<android.app.ActivityTransitionCoordinator: void startTransition(java.lang.Runnable)>
<android.view.ViewRootImpl.InputStage: void onDetachedFromWindow()>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState valueOf(java.lang.String)>
<android.bluetooth.IBluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.app.EnterTransitionCoordinator: boolean isReturning()>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeName(int)>
<android.media.ExifInterface.ByteOrderedDataInputStream: void readFully(byte[],int,int)>
<android.webkit.WebSyncManager: void resetSync()>
<android.view.textclassifier.TextClassificationSession: void onSelectionEvent(android.view.textclassifier.SelectionEvent)>
<android.widget.YearPickerView.YearAdapter: int getYearForPosition(int)>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,int[],int)>
<android.widget.ActionMenuView.MenuBuilderCallback: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode valueOf(java.lang.String)>
<android.content.res.StringBlock.Height: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<android.location.LocationManager.GnssStatusListenerTransport.GnssHandler: void handleMessage(android.os.Message)>
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.transition.ChangeBounds.ViewBounds: void setTopLeft(android.graphics.PointF)>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>
<android.content.pm.IPackageManager: boolean isDeviceUpgrading()>
<android.bluetooth.IBluetoothHeadsetClient: boolean getAudioRouteAllowed(android.bluetooth.BluetoothDevice)>
<android.widget.ForwardingListener.DisallowIntercept: void run()>
<android.widget.Editor.InsertionHandleView: void onDetached()>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: void <init>(android.content.Context,int,android.accounts.ChooseAccountActivity.AccountInfo[])>
<android.view.ViewGroup.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: android.animation.PropertyValuesHolder.FloatPropertyValuesHolder clone()>
<android.security.keystore.IKeystoreService: int getKeyCharacteristics(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>
<android.util.apk.WrappedX509Certificate: java.util.Date getNotBefore()>
<android.app.ActivityTransitionState: void onResume(android.app.Activity)>
<android.content.res.XmlBlock.Parser: boolean isEmptyElementTag()>
<android.animation.LayoutTransition.CleanupCallback: void onViewAttachedToWindow(android.view.View)>
<android.app.ContextImpl: java.io.File getCacheDir()>
<android.widget.DatePickerSpinnerDelegate: void setMaxDate(long)>
<android.app.ActivityThread.ApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,int[],int)>
<android.media.Cea708CCWidget.CCHandler: void reset()>
<android.widget.TimePickerClockDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.media.Utils: android.util.Range factorRange(android.util.Range,long)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getOrganizationName(android.content.ComponentName)>
<android.service.autofill.AutofillServiceHelper: android.view.autofill.AutofillId[] assertValid(android.view.autofill.AutofillId[])>
<android.location.ILocationManager: android.location.LocationTime getGnssTimeMillis()>
<android.app.EnterTransitionCoordinator: void onRemoteExitTransitionComplete()>
<android.content.pm.IPackageManager: void dumpProfiles(java.lang.String)>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType valueOf(java.lang.String)>
<android.app.ContextImpl: java.io.File getExternalCacheDir()>
<android.bluetooth.IBluetoothGatt: void registerForNotification(int,java.lang.String,int,boolean)>
<android.media.MediaScanner.MediaBulkDeleter: void delete(long)>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status[] values()>
<android.os.SystemPropertiesProto.Ro.Hardware: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.transition.ChangeTransform.GhostListener: void onTransitionEnd(android.transition.Transition)>
<android.app.admin.IDevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>
<android.speech.tts.BlockingAudioTrack: void setNotificationMarkerPosition(int)>
<android.app.ActivityView.TaskStackListenerImpl: void onTaskCreated(int,android.content.ComponentName)>
<android.location.GpsStatus.SatelliteIterator: boolean hasNext()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CBC.PKCS7Padding: void finalize()>
<android.widget.GridLayout.Axis: void invalidateStructure()>
<android.gsi.IGsiService: java.lang.String getInstalledGsiImageDir()>
<android.app.IActivityManager: boolean isIntentSenderABroadcast(android.content.IIntentSender)>
<android.widget.RemoteViews.Action: int describeContents()>
<android.widget.Editor.InsertionPointCursorController: void invalidateHandle()>
<android.view.Choreographer.CallbackQueue: void removeCallbacksLocked(java.lang.Object,java.lang.Object)>
<android.accounts.AccountManager.AmsTask: void done()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<android.permission.PermissionControllerManager.PendingGetRuntimePermissionBackup: void accept(java.lang.Object)>
<android.media.AudioRecordRoutingProxy: void <init>(long)>
<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>
<android.content.ContentProvider.Transport: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>
<android.widget.TimePicker.AbstractTimePickerDelegate.SavedState: boolean is24HourMode()>
<android.widget.CalendarViewLegacyDelegate.WeekView: void onSizeChanged(int,int,int,int)>
<android.speech.tts.FileSynthesisCallback: void rangeStart(int,int,int)>
<android.transition.Visibility.DisappearListener: void onAnimationRepeat(android.animation.Animator)>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.widget.SelectionActionModeHelper.SelectionMetricsLogger: void logSelectionStarted(android.view.textclassifier.TextClassifier,android.view.textclassifier.TextClassificationContext,java.lang.CharSequence,int,int)>
<android.app.IActivityManager: void setFocusedStack(int)>
<android.media.WebVttRenderingWidget.RegionLayout: void measureForParent(int,int)>
<android.app.IActivityManager: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<android.util.MapCollections: java.util.Set getEntrySet()>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity[] values()>
<android.opengl.GLErrorWrapper: void glTexGenf(int,int,float)>
<android.os.ControllerActivityProto.TxLevel: void <init>(android.os.ControllerActivityProto)>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.telephony.SmsMessage.MessageClass: android.telephony.SmsMessage.MessageClass valueOf(java.lang.String)>
<android.location.ILocationManager: java.lang.String[] getIgnoreSettingsWhitelist()>
<android.content.pm.IPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.security.keystore.DelegatingX509Certificate: void verify(java.security.PublicKey)>
<android.net.EventLogTags: void writeNtpFailure(java.lang.String,java.lang.String)>
<android.view.autofill.ParcelableMap: int describeContents()>
<android.app.IActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.media.MediaPlayer.TimeProvider: void finalize()>
<android.bluetooth.IBluetoothGatt: void readRemoteRssi(int,java.lang.String)>
<android.widget.Editor.DragLocalState: void <init>(android.widget.TextView,int,int)>
<android.app.ApplicationPackageManager.DexModuleRegisterCallbackDelegate: boolean handleMessage(android.os.Message)>
<android.bluetooth.IBluetoothGatt: void registerClient(android.os.ParcelUuid,android.bluetooth.IBluetoothGattCallback)>
<android.bluetooth.IBluetoothProfileServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.util.apk.WrappedX509Certificate: java.security.Principal getIssuerDN()>
<android.widget.AbsListView.MultiChoiceModeWrapper: void setWrapped(android.widget.AbsListView.MultiChoiceModeListener)>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.widget.Toolbar.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.content.pm.IPackageManager: void enterSafeMode()>
<android.media.MediaFormat.PrefixedKeySetWithPrefixRemoved: java.lang.String mapItemToKey(java.lang.String)>
<android.widget.DatePickerCalendarDelegate: void setSpinnersShown(boolean)>
<android.text.DynamicLayout.ChangeWatcher: void <init>(android.text.DynamicLayout)>
<android.hardware.radio.TunerCallbackAdapter: void onProgramListUpdated(android.hardware.radio.ProgramList.Chunk)>
<android.view.IWindowManager: void getStableInsets(int,android.graphics.Rect)>
<android.content.pm.BaseParceledListSlice: void writeElement(java.lang.Object,android.os.Parcel,int)>
<android.apex.IApexService: boolean stagePackage(java.lang.String)>
<android.widget.RemoteViewsAdapter.RemoteServiceHandler: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.app.admin.IDevicePolicyManager: int getOrganizationColor(android.content.ComponentName)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onExplicitGc()>
<android.bluetooth.IBluetoothGattServerCallback: void onServerConnectionState(int,int,boolean,java.lang.String)>
<android.content.res.XmlBlock.Parser: int getStyleAttribute()>
<android.content.pm.IPackageManager: void verifyIntentFilter(int,int,java.util.List)>
<android.widget.RemoteViews.OverrideTextColorsAction: void writeToParcel(android.os.Parcel,int)>
<android.providers.settings.GlobalSettingsProto.Zen: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.AbsListView.InputConnectionWrapper: boolean performContextMenuAction(int)>
<android.widget.AbsListView.InputConnectionWrapper: boolean requestCursorUpdates(int)>
<android.bluetooth.IBluetoothHidDeviceCallback: void onAppStatusChanged(android.bluetooth.BluetoothDevice,boolean)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: int getAdditionalEntropyAmountForFinish()>
<android.app.IActivityManager: void bootAnimationComplete()>
<android.media.ExifInterface.ByteOrderedDataInputStream: long readLong()>
<android.widget.Toast.TN: void hide()>
<android.app.admin.IDevicePolicyManager: android.content.Intent createAdminSupportIntent(java.lang.String)>
<android.widget.SelectionActionModeHelper.SelectionTracker: void onLinkSelected(android.widget.SelectionActionModeHelper.SelectionResult)>
<android.media.MediaCodec.BufferMap.CodecBuffer: void setByteBuffer(java.nio.ByteBuffer)>
<android.util.DataUnit: android.util.DataUnit[] values()>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>
<android.widget.SmartSelectSprite.RectangleWithTextSelectionLayout: int getTextSelectionLayout()>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>
<android.widget.CheckedTextView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode valueOf(java.lang.String)>
<android.os.IVold: void mountFstab(java.lang.String,java.lang.String)>
<android.view.View.PerformClick: void run()>
<android.content.res.XmlBlock: int nativeGetName(long)>
<android.media.DecoderCapabilities.VideoDecoder: android.media.DecoderCapabilities.VideoDecoder[] values()>
<android.content.ContentProvider.Transport: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
<android.util.StatsLogInternal: int write(int,java.lang.String,long,boolean,boolean,boolean,int,byte[],int)>
<android.app.IActivityManager: void positionTaskInStack(int,int,int)>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void onAccessibilityStateChanged(boolean)>
<android.security.keystore.DelegatingX509Certificate: void verify(java.security.PublicKey,java.lang.String)>
<android.widget.RemoteViews.AsyncApplyTask: void onPostExecute(android.widget.RemoteViews.ViewTree)>
<android.app.admin.IDevicePolicyManager: long getPasswordExpiration(android.content.ComponentName,int,boolean)>
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)>
<android.hardware.Camera.IAppOpsCallbackWrapper: void opChanged(int,int,java.lang.String)>
<android.app.DownloadManager.CursorTranslator: int getInt(int)>
<android.providers.settings.GlobalSettingsProto.IntentFirewall: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.ActivityThread.ApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
<android.view.IWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,int,int,long,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout.ParcelableWrapper,android.util.MergedConfiguration,android.view.SurfaceControl,android.view.InsetsState)>
<android.media.IPlayer: void pause()>
<android.bluetooth.IBluetoothManagerCallback: void onBluetoothServiceUp(android.bluetooth.IBluetooth)>
<android.util.StatsLogInternal: int write(int,long,long,java.lang.String,int,java.lang.String,int)>
<android.bluetooth.BluetoothHidDevice.CallbackWrapper: void onSetReport(android.bluetooth.BluetoothDevice,byte,byte,byte[])>
<android.app.ActivityTransitionCoordinator: void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean)>
<android.widget.ToggleButton.InspectionCompanion: void readProperties(android.widget.ToggleButton,android.view.inspector.PropertyReader)>
<android.bluetooth.IBluetooth: boolean createBond(android.bluetooth.BluetoothDevice,int)>
<android.opengl.GLErrorWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onDataConnectionStateChanged(int,int)>
<android.inputmethodservice.ExtractButton: boolean hasWindowFocus()>
<android.widget.RemoteViews.Action: int getActionTag()>
<android.providers.settings.SecureSettingsProto.SpellChecker: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.QuickContactBadge.QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
<android.widget.DatePicker.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.util.apk.WrappedX509Certificate: java.lang.String getSigAlgOID()>
<android.widget.ExpandableListPosition: void recycle()>
<android.bluetooth.IBluetoothHidHost: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedRsaSignatureWithPkcs1PaddingDigests()>
<android.widget.Editor.InsertionHandleView: void updateSelection(int)>
<android.content.res.XmlBlock.Parser: void close()>
<android.opengl.GLLogWrapper: boolean glIsEnabled(int)>
<android.app.IActivityManager: void registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>
<android.net.wifi.SupplicantState: boolean isValidState(android.net.wifi.SupplicantState)>
<com.android.server.AlarmManagerServiceDumpProto.LastAllowWhileIdleDispatch: void <init>(com.android.server.AlarmManagerServiceDumpProto)>
<android.printservice.PrintService.ServiceHandler: void handleMessage(android.os.Message)>
<android.app.admin.IDevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: void removeListener()>
<android.media.ImageReader.SurfaceImage.SurfacePlane: java.nio.ByteBuffer getBuffer()>
<android.widget.Editor.CursorController: void show()>
<android.app.admin.IDevicePolicyManager: int getProfileWithMinimumFailedPasswordsForWipe(int,boolean)>
<android.util.MapCollections: int colGetSize()>
<android.widget.TabHost.FactoryContentStrategy: void <init>(android.widget.TabHost,java.lang.CharSequence,android.widget.TabHost.TabContentFactory)>
<android.security.keystore.DelegatingX509Certificate: byte[] getExtensionValue(java.lang.String)>
<android.app.ContextImpl.ApplicationContentResolver: boolean releaseProvider(android.content.IContentProvider)>
<android.view.IWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout.ParcelableWrapper,android.view.InputChannel,android.view.InsetsState)>
<android.app.IActivityManager: java.util.List getProcessesInErrorState()>
<android.app.IWallpaperManager: android.app.WallpaperColors getWallpaperColors(int,int,int)>
<android.opengl.GLLogWrapper: void glPointSizex(int)>
<android.widget.Spinner.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: int getAdditionalEntropyAmountForSign()>
<android.app.admin.IDevicePolicyManager: boolean isEphemeralUser(android.content.ComponentName)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.BlacklistOrBuilder getBlacklistsOrBuilder(int)>
<android.util.StatsLogInternal: int write(int,byte[],int,int,byte[])>
<android.opengl.GLErrorWrapper: void glFogxv(int,java.nio.IntBuffer)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onDataConnectionRealTimeInfoChanged(android.telephony.DataConnectionRealTimeInfo)>
<android.permission.PermissionControllerManager.PendingRestoreDelayedRuntimePermissionBackup: void run()>
<android.util.StatsLogInternal: int write(int,int,int,int,java.lang.String,int)>
<android.os.storage.IStorageManager: void unmount(java.lang.String)>
<android.media.ImageUtils: void imageCopy(android.media.Image,android.media.Image)>
<android.os.IInstalld: void moveAb(java.lang.String,java.lang.String,java.lang.String)>
<android.opengl.GLLogWrapper: void glColor4x(int,int,int,int)>
<android.app.FragmentManagerImpl.PopBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>
<android.nfc.NfcActivityManager.NfcActivityState: void <init>(android.nfc.NfcActivityManager,android.app.Activity)>
<android.bluetooth.IBluetoothA2dp: void enableOptionalCodecs(android.bluetooth.BluetoothDevice)>
<android.media.MediaFormat.FilteredMappedKeySet: boolean remove(java.lang.Object)>
<android.bluetooth.IBluetoothGattCallback: void onReadRemoteRssi(java.lang.String,int,int)>
<android.opengl.GLLogWrapper: void glMultMatrixx(int[],int)>
<android.os.storage.IStorageManager: void setVolumeNickname(java.lang.String,java.lang.String)>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,boolean[],int)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void insert(int,android.widget.RemoteViews,long,int[])>
<android.gamedriver.GameDriverProto.BlacklistOrBuilder: boolean hasVersionCode()>
<android.graphics.ColorSpace.Named: android.graphics.ColorSpace.Named[] values()>
<android.gamedriver.GameDriverProto.Blacklist.Builder: android.gamedriver.GameDriverProto.Blacklist.Builder setVersionCode(long)>
<android.app.FragmentManagerImpl.StartEnterTransitionListener: void cancelTransaction()>
<android.widget.TimePicker.AbstractTimePickerDelegate: void <init>(android.widget.TimePicker,android.content.Context)>
<android.app.admin.SecurityLogTags: void writeSecurityKeyguardSecured()>
<android.widget.RemoteViews.TextViewDrawableAction: void visitUris(java.util.function.Consumer)>
<android.hardware.SystemSensorManager.InjectEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.os.storage.IStorageManager: boolean isUserKeyUnlocked(int)>
<android.widget.RemoteViewsAdapter.LoadingViewTemplate: void loadFirstViewHeight(android.widget.RemoteViews,android.content.Context,java.util.concurrent.Executor)>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleEnterAnimationComplete(android.os.IBinder)>
<android.media.Cea708CCWidget.CCWindowLayout: void sendControl(char)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int getAdditionalEntropyAmountForFinish()>
<android.widget.Editor.InsertionPointCursorController: void onTouchModeChanged(boolean)>
<android.content.pm.IPackageManager: int[] getPackageGids(java.lang.String,int,int)>
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>
<android.util.StatsLogInternal: int write(int,int,int,java.lang.String,int,long,int,int,java.lang.String,java.lang.String)>
<android.media.PlayerBase.IPlayerWrapper: void start()>
<android.widget.DropDownListView.ResolveHoverRunnable: void run()>
<android.bluetooth.IBluetoothGattCallback: void onDescriptorWrite(java.lang.String,int,int)>
<android.gamedriver.GameDriverProto.BlacklistOrBuilder: java.lang.String getPackageNames(int)>
<android.graphics.RenderNode.CompositePositionUpdateListener: android.graphics.RenderNode.CompositePositionUpdateListener without(android.graphics.RenderNode.PositionUpdateListener)>
<android.app.BackStackRecord: android.app.FragmentTransaction remove(android.app.Fragment)>
<android.security.keystore.DelegatingX509Certificate: byte[] getSigAlgParams()>
<android.animation.Keyframe.IntKeyframe: java.lang.Object clone()>
<android.widget.ProgressBar.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.opengl.GLSurfaceView.SimpleEGLConfigChooser: void <init>(android.opengl.GLSurfaceView,boolean)>
<android.view.ViewRootImpl.SyntheticTrackballHandler: void process(android.view.MotionEvent)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)>
<android.inputmethodservice.IInputMethodSessionWrapper.ImeInputEventReceiver: void onInputEvent(android.view.InputEvent)>
<android.gamedriver.GameDriverProto.Blacklists: java.util.List getBlacklistsList()>
<android.os.SystemPropertiesProto.Ro.Product: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.media.MediaPlayer.TimeProvider: void onNotifyTime()>
<android.os.IInstalld: void assertFsverityRootHashMatches(java.lang.String,byte[])>
<android.graphics.Path.Op: android.graphics.Path.Op valueOf(java.lang.String)>
<android.view.OrientationEventListener.SensorEventListenerImpl: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.app.admin.IDevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>
<android.content.pm.IPackageManager: boolean hasSystemUidErrors()>
<android.widget.TimePickerClockDelegate: int getMinute()>
<android.providers.settings.GlobalSettingsProto.Connectivity: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int,int)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.app.admin.SecurityLogTags: void writeSecurityWipeFailed(java.lang.String,int)>
<android.content.pm.IPackageManager: void setHarmfulAppWarning(java.lang.String,java.lang.CharSequence,int)>
<android.util.apk.WrappedX509Certificate: int getBasicConstraints()>
<android.app.ContextImpl: android.app.ContextImpl createSystemContext(android.app.ActivityThread)>
<android.net.Uri.StringUri: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.RippleComponent: void invalidateSelf()>
<android.widget.Editor.InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<android.content.ContentProviderClient.CursorWrapperInner: void close()>
<android.bluetooth.IBluetoothGatt: void removeService(int,int)>
<android.bluetooth.IBluetoothGattServerCallback: void onExecuteWrite(java.lang.String,int,boolean)>
<android.bluetooth.IBluetoothGattServerCallback: void onConnectionUpdated(java.lang.String,int,int,int,int)>
<android.widget.GridLayout.MutableInt: void <init>(int)>
<android.text.PackedObjectVector: int size()>
<android.opengl.GLLogWrapper: void glLoadMatrixf(float[],int)>
<android.gsi.IGsiService: boolean commitGsiChunkFromStream(android.os.ParcelFileDescriptor,long)>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,int[],int)>
<android.widget.RemoteViews.LayoutParamAction: void <init>(int,int,int)>
<android.app.ContextImpl: void removeStickyBroadcast(android.content.Intent)>
<android.app.ContextImpl: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.widget.GridLayout.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.view.IWindowManager: void startFreezingScreen(int,int)>
<android.app.IActivityManager: void moveTaskToFront(android.app.IApplicationThread,java.lang.String,int,int,android.os.Bundle)>
<android.os.BugreportManager.DumpstateListener: void onSectionComplete(java.lang.String,int,int,int)>
<android.animation.FloatKeyframeSet: java.lang.Object clone()>
<android.bluetooth.IBluetoothGatt: void leConnectionUpdate(int,java.lang.String,int,int,int,int,int,int)>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: void <init>(android.content.Context,int,java.util.ArrayList)>
<android.widget.RtlSpacingHelper: int getLeft()>
<android.location.ILocationManager: void setExtraLocationControllerPackage(java.lang.String)>
<android.app.ExitTransitionCoordinator: void startExit()>
<android.view.ViewGroup.HoverTarget: void recycle()>
<android.bluetooth.IBluetoothProfileServiceConnection: void onServiceDisconnected(android.content.ComponentName)>
<android.widget.RemoteViews.BitmapReflectionAction: int getActionTag()>
<android.animation.IntKeyframeSet: android.animation.Keyframes clone()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getFocusedMonthDateColor()>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,boolean,int)>
<android.app.ActivityThread.H: void handleMessage(android.os.Message)>
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)>
<android.app.BackStackState: android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void setProperty(android.util.Property)>
<android.view.IWindowSession: void reparentDisplayContent(android.view.IWindow,android.view.SurfaceControl,int)>
<android.content.res.StringBlock: void finalize()>
<android.os.IInstalld: long[] getExternalSize(java.lang.String,int,int,int[])>
<android.widget.Switch.InspectionCompanion: void readProperties(android.widget.Switch,android.view.inspector.PropertyReader)>
<android.app.EnterTransitionCoordinator: void stop()>
<android.bluetooth.IBluetooth: boolean setSimAccessPermission(android.bluetooth.BluetoothDevice,int)>
<android.app.IActivityManager: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.app.ActivityThread.PurgeIdler: boolean queueIdle()>
<android.preference.GenericInflater: android.preference.GenericInflater.Factory getFactory()>
<android.providers.settings.GlobalSettingsProto.SmartSelection: void <init>(android.providers.settings.GlobalSettingsProto)>
<com.android.server.ResettableTimeout: void go(long)>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.telecom.RemoteConnectionService: android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest,boolean)>
<android.hardware.SystemSensorManager.InjectEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,int[],int)>
<android.net.Uri.StringUri: boolean isRelative()>
<android.transition.ChangeTransform.PathAnimatorMatrix: void <init>(android.view.View,float[])>
<android.view.IWindowSession: boolean performHapticFeedback(int,boolean)>
<android.widget.DatePickerSpinnerDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)>
<android.bluetooth.IBluetoothMap: int getPriority(android.bluetooth.BluetoothDevice)>
<android.app.ContextImpl: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.os.Handler,int)>
<android.bluetooth.IBluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)>
<android.location.LocalListenerHelper: void foreach(android.location.LocalListenerHelper.ListenerOperation)>
<android.view.View.MatchIdPredicate: boolean test(java.lang.Object)>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(float[],int)>
<android.net.INetdEventCallback: void onNat64PrefixEvent(int,boolean,java.lang.String,int)>
<android.widget.GridLayout.MutableInt: void reset()>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,int[],int)>
<android.bluetooth.IBluetoothGattCallback: void onCharacteristicRead(java.lang.String,int,int,byte[])>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.hardware.SystemSensorManager.BaseEventQueue: void finalize()>
<android.permission.PermissionControllerManager.PendingGetAppPermissionRequest: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>
<android.view.OrientationEventListener.SensorEventListenerImpl: void onSensorChanged(android.hardware.SensorEvent)>
<android.opengl.GLLogWrapper: void glTranslatef(float,float,float)>
<android.security.keystore.IKeystoreService: java.lang.String[] list(java.lang.String,int)>
<android.util.MapCollections.KeySet: int size()>
<android.app.ActivityThread.ApplicationThread: void startBinderTracking()>
<android.widget.TextView.CharWrapper: void <init>(char[],int,int)>
<android.preference.ListPreference.SavedState: void <init>(android.os.Parcel)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void setKeymasterPaddingOverride(int)>
<android.net.Uri.Part: android.net.Uri.Part readFrom(android.os.Parcel)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>
<android.bluetooth.IBluetoothGattServerCallback: void onCharacteristicReadRequest(java.lang.String,int,int,boolean,int)>
<android.filterfw.core.StopWatch: void stop()>
<android.os.SharedMemory.MemoryRegistration: android.os.SharedMemory.MemoryRegistration acquire()>
<android.security.keymaster.KeymasterDateArgument: void <init>(int,java.util.Date)>
<android.app.LauncherActivity.ActivityAdapter: java.lang.Object getItem(int)>
<android.app.IActivityManager: void unregisterIntentSenderCancelListener(android.content.IIntentSender,com.android.internal.os.IResultReceiver)>
<android.util.MapCollections.KeySet: int hashCode()>
<android.gesture.Learner: java.util.ArrayList classify(int,int,float[])>
<android.os.SystemPropertiesProto.Ro.Product.Vendor: void <init>(android.os.SystemPropertiesProto.Ro.Product)>
<android.bluetooth.IBluetoothMapClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.util.apk.ZipUtils: long getZipEocdCentralDirectorySizeBytes(java.nio.ByteBuffer)>
<android.view.ViewDebug.ExportedProperty: boolean formatToHexString()>
<android.bluetooth.IBluetooth: boolean startDiscovery(java.lang.String)>
<android.providers.settings.GlobalSettingsProto.Download: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.bluetooth.IBluetoothSap: android.bluetooth.BluetoothDevice getClient()>
<android.bluetooth.le.BluetoothLeUtils: java.lang.String toString(java.util.Map)>
<android.security.IKeyChainService: boolean setKeyPairCertificate(java.lang.String,byte[],byte[])>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseDelimitedFrom(java.io.InputStream)>
<android.app.ExitTransitionCoordinator: void notifyComplete()>
<android.net.ITetheringStatsProvider: android.net.NetworkStats getTetherStats(int)>
<android.sysprop.CryptoProperties.type_values: android.sysprop.CryptoProperties.type_values[] values()>
<android.app.IActivityManager: void closeSystemDialogs(java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<android.widget.AbsListView.PositionScroller: void start(int)>
<android.net.LocalSocketImpl.SocketOutputStream: void write(byte[],int,int)>
<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey: int hashCode()>
<android.app.ActivityTransitionCoordinator: void setTransitioningViewsVisiblity(int,boolean)>
<android.gamedriver.GameDriverProto.Blacklists: int getSerializedSize()>
<android.widget.ActionMenuPresenter.ActionButtonSubmenu: void onDismiss()>
<android.media.Cea608CCWidget.CCLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>
<android.providers.settings.GlobalSettingsProto.Carrier: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.view.AccessibilityInteractionController.PrivateHandler: java.lang.String getMessageName(android.os.Message)>
<android.app.ApplicationPackageManager.ResourceName: int hashCode()>
<android.hardware.input.IInputManager: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>
<android.permission.PermissionControllerManager.PendingRestoreRuntimePermissionBackup: void run(android.permission.IPermissionController)>
<android.app.IActivityManager: android.os.ParcelFileDescriptor openContentUri(java.lang.String)>
<android.app.FragmentTransition: void replaceTargets(android.transition.Transition,java.util.ArrayList,java.util.ArrayList)>
<android.app.ActivityTransitionState: void enterReady(android.app.Activity)>
<android.view.ViewDebug.ExportedProperty: boolean resolveId()>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit valueOf(java.lang.String)>
<android.view.ViewRootImpl.ViewPostImeInputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>
<android.hardware.usb.IUsbManager: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>
<android.os.IIncidentAuthListener: void onReportDenied()>
<android.preference.MultiSelectListPreference.SavedState: void <init>(android.os.Parcelable)>
<android.gamedriver.GameDriverProto.Blacklist: java.lang.String getPackageNames(int)>
<android.os.IVoldListener: void onDiskScanned(java.lang.String)>
<android.util.MapCollections.MapIterator: java.lang.Object getKey()>
<android.widget.AutoCompleteTextView.InspectionCompanion: void readProperties(android.widget.AutoCompleteTextView,android.view.inspector.PropertyReader)>
<android.view.IWindowManager: int getDockedStackSide()>
<android.sysprop.SetupWizardProperties: java.util.Optional theme()>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: void onStatusChanged(int,int,long)>
<android.content.pm.IPackageManager: boolean setRequiredForSystemUser(java.lang.String,boolean)>
<android.providers.settings.SecureSettingsProto.Tv: void <init>(android.providers.settings.SecureSettingsProto)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,int,int)>
<android.media.WebVttRenderingWidget.CueLayout: void onMeasure(int,int)>
<android.os.IVold: void unmountAppFuse(int,int)>
<android.view.ViewGroup.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.accounts.AbstractAccountAuthenticator.Transport: void finishSession(android.accounts.IAccountAuthenticatorResponse,java.lang.String,android.os.Bundle)>
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>
<android.view.IWindowManager: void setAnimationScale(int,float)>
<android.app.IActivityManager: void finishHeavyWeightApp()>
<android.app.IActivityManager: void requestWifiBugReport(java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothHeadset: boolean connectAudio()>
<android.view.RoundScrollbarRenderer: void <init>(android.view.View)>
<android.app.Activity.HostCallbacks: void onInvalidateOptionsMenu()>
<android.app.ActivityThread.AndroidOs: android.system.StructStat stat(java.lang.String)>
<android.media.ImageWriter.WriterSurfaceImage: int getFormat()>
<android.widget.Spinner.DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.os.SystemProto.WifiSignalStrength: void <init>(android.os.SystemProto)>
<android.widget.CalendarViewLegacyDelegate: void setSelectedDateVerticalBar(int)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void onPopulateNodeForVirtualView(int,android.view.accessibility.AccessibilityNodeInfo)>
<android.view.InsetsController.InsetsProperty: java.lang.Object get(java.lang.Object)>
<android.view.Choreographer.FrameHandler: void <init>(android.view.Choreographer,android.os.Looper)>
<android.widget.TimePickerSpinnerDelegate: void setEnabled(boolean)>
<android.speech.RecognitionService.RecognitionServiceBinder: void stopListening(android.speech.IRecognitionListener)>
<android.webkit.JsDialogHelper.PositiveListener: void onClick(android.content.DialogInterface,int)>
<android.speech.tts.PlaybackSynthesisCallback: boolean hasFinished()>
<android.providers.settings.SecureSettingsProto.Incall: void <init>(android.providers.settings.SecureSettingsProto)>
<android.apex.IApexService: android.apex.ApexSessionInfo[] getSessions()>
<android.util.FastImmutableArraySet.FastIterator: java.lang.Object next()>
<android.view.IWindowSession: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>
<android.hardware.usb.IUsbManager: boolean hasDevicePermission(android.hardware.usb.UsbDevice,java.lang.String)>
<android.widget.ExpandableListConnector.GroupMetadata: int compareTo(android.widget.ExpandableListConnector.GroupMetadata)>
<android.transition.ChangeTransform.GhostListener: void onTransitionResume(android.transition.Transition)>
<android.widget.RemoteViews.MethodKey: int hashCode()>
<android.providers.settings.SecureSettingsProto.Zen: void <init>(android.providers.settings.SecureSettingsProto)>
<android.graphics.drawable.RippleComponent: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect)>
<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>
<android.os.MemoryFile.MemoryOutputStream: void write(byte[],int,int)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.inputmethodservice.KeyboardView.SwipeTracker: void clear()>
<android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>
<android.media.ExifInterface.ByteOrderedDataInputStream: boolean readBoolean()>
<android.opengl.GLLogWrapper: void glLightModelxv(int,java.nio.IntBuffer)>
<android.view.IWindowManager: void stopFreezingScreen()>
<android.animation.Keyframe.IntKeyframe: android.animation.Keyframe.IntKeyframe clone()>
<android.os.IInstalld: void migrateLegacyObbData()>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()>
<android.widget.ToggleButton.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>
<android.opengl.GLErrorWrapper: void glActiveTexture(int)>
<android.opengl.GLErrorWrapper: void glFogf(int,float)>
<android.os.storage.IStorageManager: boolean supportsCheckpoint()>
<android.opengl.GLLogWrapper: void glPointParameterx(int,int)>
<android.widget.DoubleDigitManager: void reportDigit(int)>
<android.app.admin.IDevicePolicyManager: void setKeepUninstalledPackages(android.content.ComponentName,java.lang.String,java.util.List)>
<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()>
<android.apex.IApexService: boolean markStagedSessionReady(int)>
<android.graphics.Path.FillType: android.graphics.Path.FillType valueOf(java.lang.String)>
<android.widget.AbsListView.CheckForKeyLongPress: void run()>
<android.view.View.SendViewScrolledAccessibilityEvent: void post(int,int)>
<android.opengl.EGLLogWrapper: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<android.bluetooth.IBluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.gamedriver.GameDriverProto.Blacklist.Builder: boolean hasVersionCode()>
<android.os.StrictMode.AndroidBlockGuardPolicy: int getPolicyMask()>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<android.text.AlteredCharSequence.AlteredSpanned: int getSpanEnd(java.lang.Object)>
<android.app.FragmentState: int describeContents()>
<android.bluetooth.le.IPeriodicAdvertisingCallback: void onSyncEstablished(int,android.bluetooth.BluetoothDevice,int,int,int,int)>
<android.widget.Editor.InsertionHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable)>
<android.view.ViewRootImpl.ViewRootHandler: java.lang.String getMessageName(android.os.Message)>
<android.security.KeyStore.KeystoreResultPromise: void binderDied()>
<android.app.IWallpaperManager: void unregisterWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>
<android.util.StatsLogInternal: int write(int,int,int)>
<android.os.IUpdateEngine: boolean bind(android.os.IUpdateEngineCallback)>
<android.content.res.ThemedResourceCache: void onConfigurationChange(int)>
<android.view.IWindowManager: boolean isKeyguardLocked()>
<android.widget.TimePickerSpinnerDelegate: boolean validateInput()>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int,java.lang.String)>
<android.widget.StackView.StackSlider: float getXProgress()>
<android.app.IActivityManager: void resumeAppSwitches()>
<android.app.admin.IDevicePolicyManager: boolean updateOverrideApn(android.content.ComponentName,int,android.telephony.data.ApnSetting)>
<android.widget.TextView.CharWrapper: char charAt(int)>
<android.app.IActivityManager: void startDelegateShellPermissionIdentity(int,java.lang.String[])>
<android.app.IActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: void <init>(android.os.Parcelable,int,int,int,long,long,int,int,int)>
<android.os.IStatsManager: void unsetBroadcastSubscriber(long,long,java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<android.bluetooth.IBluetoothSap: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.net.lowpan.ILowpanInterface: void join(android.net.lowpan.LowpanProvision)>
<android.view.LayoutInflater.BlinkLayout: void dispatchDraw(android.graphics.Canvas)>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,int)>
<android.content.pm.IPackageManager: void grantDefaultPermissionsToActiveLuiApp(java.lang.String,int)>
<android.app.ContextImpl: boolean moveDatabaseFrom(android.content.Context,java.lang.String)>
<android.content.pm.IPackageManager: void revokeDefaultPermissionsFromLuiApps(java.lang.String[],int)>
<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.animation.Animator)>
<android.view.ViewDebug.FlagToString: java.lang.String name()>
<android.animation.FloatKeyframeSet: java.lang.Class getType()>
<android.security.keystore.DelegatingX509Certificate: byte[] getTBSCertificate()>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,java.lang.String,boolean,long)>
<android.widget.AbsListView.InputConnectionWrapper: android.os.Handler getHandler()>
<android.util.XmlPullAttributes: int getAttributeCount()>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.net.LocalSocketImpl: java.lang.Object getOption(int)>
<android.net.lowpan.ILowpanInterface: void attach(android.net.lowpan.LowpanProvision)>
<android.view.IWindowManager: void closeSystemDialogs(java.lang.String)>
<android.service.pm.PackageServiceDumpProto.PackageShortProto: void <init>(android.service.pm.PackageServiceDumpProto)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<android.providers.settings.GlobalSettingsProto.Device: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.view.IWindowManager: int getPreferredOptionsPanelGravity(int)>
<android.net.Uri.OpaqueUri: java.lang.String getLastPathSegment()>
<android.app.ContextImpl: android.os.Looper getMainLooper()>
<android.widget.CheckedTextView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.media.Cea608CCParser.StyleCode: android.media.Cea608CCParser.StyleCode fromByte(byte)>
<android.inputmethodservice.IInputMethodWrapper: void createSession(android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>
<android.app.IActivityManager: void addInstrumentationResults(android.app.IApplicationThread,android.os.Bundle)>
<android.widget.RemoteViews.AsyncApplyTask: android.widget.RemoteViews.ViewTree doInBackground(java.lang.Void[])>
<android.util.MapCollections.EntrySet: int hashCode()>
<android.os.IInstalld: void fixupAppData(java.lang.String,int)>
<android.view.IWindowManager: void getInitialDisplaySize(int,android.graphics.Point)>
<android.bluetooth.IBluetoothHeadsetClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.media.MediaCodec.EventHandler: void <init>(android.media.MediaCodec,android.media.MediaCodec,android.os.Looper)>
<android.os.IInstalld: byte[] hashSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,float[],int)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: void <init>(android.os.Parcelable,int,int,int,long,long)>
<android.app.Notification.TemplateBindResult: void setRightIconContainerVisible(boolean)>
<android.gsi.IGsiService: int getGsiBootStatus()>
<android.widget.YearPickerView.YearAdapter: boolean isEmpty()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: java.lang.Object getItem(int)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: int getCount()>
<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>
<android.permission.PermissionControllerManager.FileWriterTask: void onPreExecute()>
<android.accounts.AccountManager.BaseFutureTask: java.lang.Object bundleToResult(android.os.Bundle)>
<android.widget.Editor.CursorController: void onDetached()>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void <init>(java.io.OutputStream,java.nio.ByteOrder)>
<android.animation.PathKeyframes.SimpleKeyframes: android.animation.Keyframes clone()>
<android.widget.RemoteViews.BitmapCache: android.graphics.Bitmap getBitmapForId(int)>
<android.widget.Spinner.DialogPopup: void onClick(android.content.DialogInterface,int)>
<android.net.IpConfiguration.IpAssignment: android.net.IpConfiguration.IpAssignment[] values()>
<android.util.LauncherIcons.ShadowDrawable.MyConstantState: android.graphics.drawable.Drawable newDrawable()>
<android.view.IWindowManager: void prepareAppTransition(int,boolean)>
<android.content.pm.IPackageManagerNative: java.lang.String getInstallerForPackage(java.lang.String)>
<android.app.ContextImpl: java.lang.String getOpPackageName()>
<android.opengl.GLErrorWrapper: void glClearDepthf(float)>
<android.app.IActivityManager: void waitForNetworkStateUpdate(long)>
<android.preference.MultiCheckPreference.SavedState: void <init>(android.os.Parcelable)>
<android.util.StatsLogInternal: int write(int,byte[],int)>
<android.widget.LinearLayout.InspectionCompanion: void readProperties(android.widget.LinearLayout,android.view.inspector.PropertyReader)>
<android.app.Activity.HostCallbacks: boolean onUseFragmentManagerInflaterFactory()>
<android.widget.RemoteViews.LayoutParamAction: void <init>(android.os.Parcel)>
<android.util.MapCollections.MapIterator: java.lang.Object setValue(java.lang.Object)>
<android.app.EnterTransitionCoordinator: boolean cancelEnter()>
<android.view.IWindowManager: void clearForcedDisplayDensityForUser(int,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<android.util.apk.WrappedX509Certificate: java.util.Set getNonCriticalExtensionOIDs()>
<android.widget.Editor.InsertionPointCursorController: void show()>
<android.widget.AbsListView.InputConnectionWrapper: void closeConnection()>
<android.app.DexLoadReporter: void report(java.util.List,java.util.List)>
<android.sysprop.AdbProperties: void secure(java.lang.Boolean)>
<android.app.admin.IDevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.view.MenuInflater.MenuState: void <init>(android.view.MenuInflater,android.view.Menu)>
<android.opengl.GLErrorWrapper: void glBufferData(int,int,java.nio.Buffer,int)>
<android.providers.settings.GlobalSettingsProto.Mhl: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.content.pm.IPackageManagerNative: long getVersionCodeForPackage(java.lang.String)>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)>
<android.bluetooth.IBluetoothGatt: void stopAdvertisingSet(android.bluetooth.le.IAdvertisingSetCallback)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: android.widget.RemoteViews getLoadingView()>
<android.bluetooth.IBluetoothPbap: java.util.List getConnectedDevices()>
<android.speech.tts.AbstractEventLogger: void onRequestProcessingStart()>
<android.opengl.GLErrorWrapper: void glDrawTexxOES(int,int,int,int,int)>
<android.widget.YearPickerView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.admin.IDevicePolicyManager: boolean isAccessibilityServicePermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<android.net.LocalSocketImpl.SocketOutputStream: void write(byte[])>
<android.bluetooth.IBluetoothGatt: void readUsingCharacteristicUuid(int,java.lang.String,android.os.ParcelUuid,int,int,int)>
<android.widget.AbsListView.InputConnectionWrapper: boolean clearMetaKeyStates(int)>
<android.view.IWindowManager: void setWindowingMode(int,int)>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: int[] following(int)>
<android.app.admin.IDevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String,android.os.Bundle)>
<android.media.WebVttRenderingWidget.SpanLayout: void <init>(android.content.Context,android.media.TextTrackCueSpan[])>
<android.os.IStatsManager: void removeActiveConfigsChangedOperation(java.lang.String)>
<android.app.IActivityManager: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>
<android.location.ILocationManager: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
<android.app.ITaskStackListener: void onActivityLaunchOnSecondaryDisplayRerouted(android.app.ActivityManager.RunningTaskInfo,int)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtain(int,int,int,int)>
<android.bluetooth.BluetoothOutputStream: void write(int)>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,int[],int)>
<android.gamedriver.GameDriverProto.Blacklist.Builder: long getVersionCode()>
<android.security.keystore.IKeystoreService: int reset()>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.hardware.GeomagneticField.LegendreTable: void <init>(int,float)>
<android.widget.PopupWindow.PopupDecorView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.media.MediaCodec.EventHandler: void handleMessage(android.os.Message)>
<android.hardware.radio.TunerCallbackAdapter: void onParametersUpdated(java.util.Map)>
<android.security.keystore.IKeystoreKeyCharacteristicsCallback: void onFinished(android.security.keystore.KeystoreResponse,android.security.keymaster.KeyCharacteristics)>
<android.hardware.usb.IUsbManager: void enableContaminantDetection(java.lang.String,boolean)>
<android.app.ContextImpl: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>
<android.apex.IApexService: void abortActiveSession()>
<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType[] values()>
<android.gsi.IGsiService: boolean isGsiInstalled()>
<android.app.admin.IDevicePolicyManager: boolean isRemovingAdmin(android.content.ComponentName,int)>
<android.widget.RemoteViews.ViewTree: void replaceView(android.view.View)>
<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>
<android.util.StatsLogInternal: int write(int,java.lang.String,int)>
<android.media.SubtitleTrack.CueList: java.lang.Iterable entriesBetween(long,long)>
<android.app.ActivityTransitionState: void startExitOutTransition(android.app.Activity,android.os.Bundle)>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.view.textclassifier.EntityConfidence: java.lang.String toString()>
<android.app.LoaderManagerImpl.LoaderInfo: void onLoadComplete(android.content.Loader,java.lang.Object)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: void setFocusMonth(int)>
<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater.Parent,boolean)>
<android.view.IWindowManager: void setForcedDisplayScalingMode(int,int)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>
<android.widget.RemoteViews.LayoutParamAction: void writeToParcel(android.os.Parcel,int)>
<android.content.ContentProvider.Transport: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void toggleSoftInput(int,int)>
<android.os.storage.IStorageManager: void format(java.lang.String)>
<android.bluetooth.IBluetooth: boolean registerMetadataListener(android.bluetooth.IBluetoothMetadataListener,android.bluetooth.BluetoothDevice)>
<android.view.ViewRootImpl.InputStage: void deliver(android.view.ViewRootImpl.QueuedInputEvent)>
<android.os.MemoryFile.MemoryInputStream: long skip(long)>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin(int)>
<android.net.Uri.StringUri: java.lang.String getEncodedPath()>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams headerTextSecondary(java.lang.CharSequence)>
<android.media.PlayerBase.IAppOpsCallbackWrapper: void opChanged(int,int,java.lang.String)>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void initAlgorithmSpecificParameters()>
<android.text.TextDirectionHeuristics.AnyStrong: int checkRtl(java.lang.CharSequence,int,int)>
<android.opengl.GLErrorWrapper: void glFrustumx(int,int,int,int,int,int)>
<android.bluetooth.IBluetoothGatt: void sendResponse(int,java.lang.String,int,int,int,byte[])>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer createAdditionalAuthenticationDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.preference.EditTextPreference.SavedState: void <init>(android.os.Parcelable)>
<android.app.ContextImpl: android.content.ComponentName startForegroundService(android.content.Intent)>
<android.app.admin.IDevicePolicyManager: java.util.List getActiveAdmins(int)>
<android.security.keymaster.KeymasterIntArgument: void writeValue(android.os.Parcel)>
<android.widget.DatePickerCalendarDelegate: void onLocaleChanged(java.util.Locale)>
<android.app.IWallpaperManager: void setWallpaperComponent(android.content.ComponentName)>
<android.opengl.GLErrorWrapper: void glPointParameterf(int,float)>
<android.widget.Editor.SuggestionsPopupWindow: int getTextOffset()>
<android.speech.tts.EventLogger: void logFailure(int)>
<android.printservice.PrintService.ServiceHandler: void <init>(android.printservice.PrintService,android.os.Looper)>
<android.content.pm.IPackageManager: java.lang.String getDefaultBrowserPackageName(int)>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<android.security.keystore.IKeystoreService: int onDeviceOffBody()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<android.opengl.GLSurfaceView.EglHelper: void finish()>
<android.os.IVold: void runIdleMaint(android.os.IVoldTaskListener)>
<android.graphics.ColorSpace.Lab: float getMaxValue(int)>
<android.app.ContextImpl: boolean isDeviceProtectedStorage()>
<android.preference.GenericInflater.FactoryMerger: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.os.IVold: void remountUid(int,int)>
<android.graphics.Path.Op: android.graphics.Path.Op[] values()>
<android.media.Cea708CCWidget.CCHandler: boolean handleMessage(android.os.Message)>
<android.widget.CalendarViewLegacyDelegate: int getDateTextAppearance()>
<android.view.RoundScrollbarRenderer: void drawRoundScrollbars(android.graphics.Canvas,float,android.graphics.Rect)>
<android.location.ILocationManager: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
<android.util.MapCollections: void colRemoveAt(int)>
<android.widget.NumberPicker.SetSelectionCommand: void <init>(android.widget.EditText)>
<android.app.LoadedApk.ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder,boolean)>
<android.bluetooth.IBluetoothGattCallback: void onExecuteWrite(java.lang.String,int)>
<android.media.Utils: android.util.Pair parseSizeRange(java.lang.Object)>
<android.view.ViewRootImpl.W: void dispatchPointerCaptureChanged(boolean)>
<android.widget.ActionMenuPresenter.OverflowPopup: void onDismiss()>
<android.app.InstantAppResolverService.ServiceHandler: void <init>(android.app.InstantAppResolverService,android.os.Looper)>
<android.app.IActivityManager: void killBackgroundProcesses(java.lang.String,int)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onPhysicalChannelConfigurationChanged(java.util.List)>
<android.media.MediaScanner.WplHandler: void end()>
<android.providers.settings.SecureSettingsProto.Voice: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.RemoteViews.BitmapReflectionAction: void writeToParcel(android.os.Parcel,int)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDataSetChangedAsync()>
<android.widget.RemoteViews.ReflectionAction: int getActionTag()>
<android.gamedriver.GameDriverProto.Blacklists: java.lang.Object dynamicMethod(com.android.framework.protobuf.GeneratedMessageLite.MethodToInvoke,java.lang.Object,java.lang.Object)>
<android.providers.settings.GlobalSettingsProto.Hdmi: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.app.IActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.app.RemoteServiceException: void <init>(java.lang.String)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void setOnDateChangedListener(android.widget.DatePicker.OnDateChangedListener)>
<android.app.SystemServiceRegistry.CachedServiceFetcher: java.lang.Object createService(android.app.ContextImpl)>
<android.widget.YearPickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.speech.tts.AbstractSynthesisCallback: void stop()>
<android.provider.Settings.NameValueCache: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean,int)>
<android.widget.RemoteViews.SetIntTagAction: void writeToParcel(android.os.Parcel,int)>
<android.media.Cea708CCWidget.ScaledLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.security.IKeyChainService: int generateKeyPair(java.lang.String,android.security.keystore.ParcelableKeyGenParameterSpec)>
<android.hardware.SystemSensorManager.SensorEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.content.ContentProvider.Transport: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.os.BugreportManager.DumpstateListener: void onMaxProgressUpdated(int)>
<android.util.StatsLogInternal: int write(int,byte[],int,int,int,int,int,int,int,int)>
<android.os.IUpdateEngine: boolean unbind(android.os.IUpdateEngineCallback)>
<android.widget.RemoteViews.SetOnClickResponse: int getActionTag()>
<android.permission.PermissionControllerManager.PendingGetRuntimePermissionBackup: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.os.SystemProto.GlobalWifi: void <init>(android.os.SystemProto)>
<android.util.jar.StrictJarManifestReader: void <init>(byte[],java.util.jar.Attributes)>
<android.widget.SelectionActionModeHelper.TextClassificationHelper: android.widget.SelectionActionModeHelper.SelectionResult classifyText()>
<android.app.ActivityThread.ApplicationThread: void setCoreSettings(android.os.Bundle)>
<android.media.WebVttRenderingWidget.CueLayout: void update()>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.widget.AbsListView.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>
<android.view.textclassifier.EntityConfidence: float getConfidenceScore(java.lang.String)>
<android.hardware.ICameraService: android.hardware.camera2.impl.CameraMetadataNative getCameraCharacteristics(java.lang.String)>
<android.view.IWindowSession: void reportSystemGestureExclusionChanged(android.view.IWindow,java.util.List)>
<android.sax.RootElement.Handler: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<android.util.MapCollections.ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])>
<android.opengl.GLLogWrapper: void glFinish()>
<android.widget.RemoteViews.OverrideTextColorsAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void setValidationCallback(android.widget.DatePicker.ValidationCallback)>
<android.app.admin.IDevicePolicyManager: void reportFailedBiometricAttempt(int)>
<android.security.KeyStore.CertificateChainPromise: void binderDied()>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeNamespace(int)>
<android.util.LauncherIcons.ShadowDrawable: void <init>(android.graphics.Bitmap,android.graphics.drawable.Drawable)>
<android.bluetooth.IBluetoothGatt: void refreshDevice(int,java.lang.String)>
<android.os.storage.IStorageManager: long getCacheSizeBytes(java.lang.String,int)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void commitTemporaryMetaData()>
<android.widget.Editor.PositionListener: int getPositionY()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType valueOf(java.lang.String)>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: void set(android.widget.RemoteViewsAdapter.RemoteViewsMetaData)>
<android.permission.PermissionControllerManager.PendingSetRuntimePermissionGrantStateByDeviceAdmin: void run()>
<android.media.Cea708CCWidget.ScaledLayout: void dispatchDraw(android.graphics.Canvas)>
<android.location.ILocationManager: void flushGnssBatch(java.lang.String)>
<android.bluetooth.IBluetoothGattServerCallback: void onPhyRead(java.lang.String,int,int,int)>
<android.widget.Spinner.DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.app.admin.IDevicePolicyManager: long getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)>
<android.widget.Toolbar.SavedState: void <init>(android.os.Parcel)>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: void <init>(android.content.pm.PackageManager.MoveCallback,android.os.Looper)>
<android.widget.Spinner.DropDownAdapter: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources.Theme)>
<android.bluetooth.IBluetoothGattServerCallback: void onServiceAdded(int,android.bluetooth.BluetoothGattService)>
<android.content.pm.IPackageManager: void setHomeActivity(android.content.ComponentName,int)>
<android.service.autofill.NegationValidator: java.lang.String toString()>
<android.transition.ChangeBounds.ViewBounds: void setBottomRight(android.graphics.PointF)>
<android.app.IWallpaperManager: int getWidthHint(int)>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,int)>
<android.view.ViewDebug.PictureCallbackHandler: void run()>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glFrustumx(int,int,int,int,int,int)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void viewClicked(boolean)>
<android.media.ImageReader.SurfaceImage: int getHeight()>
<android.opengl.GLErrorWrapper: void glTexGenx(int,int,int)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklist getBlacklists(int)>
<android.hardware.camera2.ICameraDeviceUser: void finalizeOutputConfigurations(int,android.hardware.camera2.params.OutputConfiguration)>
<android.app.admin.IDevicePolicyManager: void setPermissionPolicy(android.content.ComponentName,java.lang.String,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void initAlgorithmSpecificParameters()>
<android.widget.AbsListView.AdapterDataSetObserver: void onChanged()>
<android.widget.SlidingDrawer.DrawerToggler: void onClick(android.view.View)>
<android.providers.settings.GlobalSettingsProto.Development: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.net.Uri.HierarchicalUri: android.net.Uri readFrom(android.os.Parcel)>
<android.media.midi.MidiPortImpl: int getDataSize(byte[],int)>
<android.util.FastImmutableArraySet.FastIterator: void remove()>
<android.widget.PopupWindow.PopupDecorView: void <init>(android.widget.PopupWindow,android.content.Context)>
<android.opengl.GLLogWrapper: void glLineWidthx(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CBC: void <init>(int)>
<android.content.pm.IPackageManager: byte[] getDefaultAppsBackup(int)>
<android.app.Instrumentation.Idler: boolean queueIdle()>
<android.app.FragmentTransition: void addTargets(android.transition.Transition,java.util.ArrayList)>
<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>
<android.content.pm.IPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<android.bluetooth.IBluetoothHidHost: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.widget.Editor.PositionListener: void removeSubscriber(android.widget.Editor.TextViewPositionListener)>
<android.preference.PreferenceInflater: void <init>(android.content.Context,android.preference.PreferenceManager)>
<android.widget.Spinner.SpinnerPopup: void show(int,int)>
<android.media.Cea708CCWidget.CCWindowLayout: void show()>
<android.app.admin.IDevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.location.LocalListenerHelper: void unregisterFromServer()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: android.widget.RemoteViews getViewAt(int)>
<android.util.apk.ApkSigningBlockUtils: byte[] parseVerityDigestAndVerifySourceLength(byte[],long,android.util.apk.SignatureInfo)>
<android.app.admin.IDevicePolicyManager: long forceNetworkLogs()>
<android.net.SntpClient.InvalidServerReplyException: void <init>(java.lang.String)>
<android.app.BackStackRecord: int getBreadCrumbTitleRes()>
<android.bluetooth.IBluetooth: android.bluetooth.IBluetoothSocketManager getSocketManager()>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)>
<android.opengl.GLLogWrapper: void glPolygonOffset(float,float)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: int getCurrentView()>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)>
<android.os.IVoldListener: void onVolumeDestroyed(java.lang.String)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineGetKeySize(java.security.Key)>
<android.bluetooth.IBluetoothPbapClient: boolean connect(android.bluetooth.BluetoothDevice)>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.app.IActivityManager: void notifyCleartextNetwork(int,byte[])>
<android.widget.Editor.PositionListener: int getPositionYOnScreen()>
<android.widget.Scroller.ViscousFluidInterpolator: float getInterpolation(float)>
<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar getMaxDate()>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType toEntryType(int)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationCancel(android.animation.Animator)>
<android.widget.SimpleMonthView: void getFocusedRect(android.graphics.Rect)>
<android.transition.Visibility.DisappearListener: void onAnimationResume(android.animation.Animator)>
<android.nfc.tech.BasicTagTechnology: boolean isConnected()>
<android.net.Uri.Part.EmptyPart: void <init>(java.lang.String)>
<android.app.ActivityTransitionCoordinator: void scheduleSetSharedElementEnd(java.util.ArrayList)>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: int[] preceding(int)>
<android.widget.RemoteViews.RuntimeAction: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityTransitionState: int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: android.content.Context getRemoteContext()>
<android.webkit.JsDialogHelper.PositiveListener: void <init>(android.webkit.JsDialogHelper,android.widget.EditText)>
<android.providers.settings.SystemSettingsProto.Screen: void <init>(android.providers.settings.SystemSettingsProto)>
<android.bluetooth.IBluetooth: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder addBlacklists(int,android.gamedriver.GameDriverProto.Blacklist.Builder)>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,float[],int)>
<android.widget.PopupWindow.PopupDecorView: void cancelTransitions()>
<android.hardware.ICameraServiceListener: void onCameraAccessPrioritiesChanged()>
<android.content.LoggingContentInterface.Logger: void <init>(android.content.LoggingContentInterface,java.lang.String,java.lang.Object[])>
<android.hardware.ICameraService: java.lang.String getLegacyParameters(int)>
<android.app.admin.IDevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
<android.text.PackedObjectVector: void deleteAt(int,int)>
<android.app.BackStackState: int describeContents()>
<android.app.IActivityManager: void crashApplication(int,int,java.lang.String,int,java.lang.String)>
<android.widget.RemoteViews.SetPendingIntentTemplate: int getActionTag()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setSelectedDateVerticalBar(int)>
<android.providers.settings.SystemSettingsProto.Lockscreen: void <init>(android.providers.settings.SystemSettingsProto)>
<android.bluetooth.BluetoothHidDevice.CallbackWrapper: void onSetProtocol(android.bluetooth.BluetoothDevice,byte)>
<android.view.IWindowManager: void registerDisplayFoldListener(android.view.IDisplayFoldListener)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: int getSelectedYear()>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams setMaxRemoteInputHistory(int)>
<android.view.View.InspectionCompanion: void readProperties(android.view.View,android.view.inspector.PropertyReader)>
<android.bluetooth.IBluetoothManager: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>
<android.app.admin.IDevicePolicyManager: boolean isCaCertApproved(java.lang.String,int)>
<android.os.ParcelFileDescriptor.Status: java.io.IOException asIOException()>
<android.widget.Editor.SuggestionsPopupWindow: void show()>
<android.providers.settings.SystemSettingsProto.Rotation: void <init>(android.providers.settings.SystemSettingsProto)>
<android.view.GestureExclusionTracker.GestureExclusionViewInfo: android.view.View getView()>
<android.widget.RemoteViews.ViewTree: void addChild(android.widget.RemoteViews.ViewTree,int)>
<android.opengl.GLErrorWrapper: void glBlendFunc(int,int)>
<android.app.ActivityThread.ApplicationThread: void dumpService(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String[])>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: android.security.keystore.KeyStoreCryptoOperationStreamer createAdditionalAuthenticationDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.opengl.GLSurfaceView.BaseConfigChooser: void <init>(android.opengl.GLSurfaceView,int[])>
<android.content.pm.IPackageManager: java.util.List getAllPackages()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: int getAdditionalEntropyAmountForBegin()>
<android.os.storage.IObbActionListener: void onObbResult(java.lang.String,int,int)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: long getItemId(int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void resetWhilePreservingInitState()>
<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>
<android.util.StatsLogInternal: int write(int,int,android.util.SparseArray)>
<android.os.TestLooperManager.LooperHolder: void run()>
<android.os.IInstalld: boolean prepareAppProfile(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>
<android.app.ReceiverRestrictedContext: boolean bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)>
<android.os.StrictMode.InstanceTracker: int getInstanceCount(java.lang.Class)>
<android.app.ContextImpl: java.lang.String getSystemServiceName(java.lang.Class)>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.net.Uri.PathPart: android.net.Uri.PathPart fromEncoded(java.lang.String)>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] mapping()>
<android.location.LocationManager.ListenerTransport: void onProviderDisabled(java.lang.String)>
<android.preference.SeekBarPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.net.lowpan.ILowpanInterface: java.lang.String getName()>
<android.bluetooth.IBluetooth: int getLeMaximumAdvertisingDataLength()>
<android.widget.PopupWindow.PopupDecorView: void requestEnterTransition(android.transition.Transition)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int,boolean,boolean,boolean)>
<android.widget.ExpandableListConnector.MyDataSetObserver: void <init>(android.widget.ExpandableListConnector)>
<android.opengl.GLSurfaceView.GLThread: void requestRender()>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onCallDisconnectCauseChanged(int,int)>
<android.text.DynamicLayout.ChangeWatcher: void afterTextChanged(android.text.Editable)>
<android.view.textclassifier.EntityConfidence: void writeToParcel(android.os.Parcel,int)>
<android.app.ContextImpl: void startActivity(android.content.Intent,android.os.Bundle)>
<android.app.ResourcesManager.ApkKey: boolean equals(java.lang.Object)>
<android.hardware.input.IInputManager: void tryPointerSpeed(int)>
<android.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.app.ActivityTransitionCoordinator: void setEpicenter()>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(int[],int)>
<android.widget.DayPickerPagerAdapter: int getCount()>
<android.opengl.GLErrorWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.bluetooth.le.BluetoothLeUtils: void checkAdapterStateOn(android.bluetooth.BluetoothAdapter)>
<android.view.ViewGroup.ViewLocationHolder: void recycle()>
<android.widget.AutoCompleteTextView.DropDownItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.view.View.CheckForLongPress: void rememberWindowAttachCount()>
<android.widget.RemoteViews.ViewPaddingAction: void writeToParcel(android.os.Parcel,int)>
<android.widget.CalendarViewLegacyDelegate: void setShownWeekCount(int)>
<android.media.JetPlayer.NativeEventHandler: void handleMessage(android.os.Message)>
<android.util.RecurrenceRule.RecurringIterator: void <init>(android.util.RecurrenceRule)>
<android.graphics.drawable.RippleBackground: void jumpToFinal()>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(byte[])>
<android.security.KeyStore.OperationPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.app.IWallpaperManager: void setDisplayPadding(android.graphics.Rect,java.lang.String,int)>
<android.app.admin.IDevicePolicyManager: boolean hasDeviceOwner()>
<android.widget.TimePickerClockDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onFailure(java.lang.CharSequence)>
<android.app.admin.IDevicePolicyManager: boolean removeKeyPair(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.media.MediaFormat.FilteredMappedKeySet: boolean keepKey(java.lang.String)>
<android.widget.RemoteViewsAdapter.HandlerThreadExecutor: void execute(java.lang.Runnable)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseDelimitedFrom(java.io.InputStream,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.security.IKeyChainService: android.content.pm.StringParceledListSlice getUserCaAliases()>
<android.sysprop.VoldProperties: java.util.Optional encrypt_time_remaining()>
<android.os.SystemPropertiesProto.Persist: void <init>(android.os.SystemPropertiesProto)>
<android.app.admin.IDevicePolicyManager: boolean isOverrideApnEnabled(android.content.ComponentName)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void reset()>
<android.permission.PermissionControllerManager.PendingSetRuntimePermissionGrantStateByDeviceAdmin: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.os.IVold: void addSandboxIds(int[],java.lang.String[])>
<android.preference.DialogPreference.SavedState: void <init>(android.os.Parcelable)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.app.UiAutomation.IAccessibilityServiceClientImpl: void <init>(android.app.UiAutomation,android.os.Looper)>
<android.bluetooth.IBluetooth: boolean isDiscovering()>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap[] values()>
<android.app.ActivityView.SurfaceCallback: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.app.admin.IDevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>
<android.permission.PermissionControllerManager.RemoteService: void scheduleAsyncRequest(com.android.internal.infra.AbstractRemoteService.AsyncRequest)>
<android.app.EnterTransitionCoordinator: void viewsReady(android.util.ArrayMap)>
<android.app.IActivityManager: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<android.app.admin.IDevicePolicyManager: boolean hasUserSetupCompleted()>
<android.os.CpuInfoProto.TaskStats: void <init>(android.os.CpuInfoProto)>
<android.app.IActivityManager: void scheduleApplicationInfoChanged(java.util.List,int)>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,int[],int)>
<android.app.EnterTransitionCoordinator: void onTransitionsComplete()>
<android.widget.CalendarViewLegacyDelegate: void setDate(long,boolean,boolean)>
<android.providers.settings.GlobalSettingsProto.Netstats: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,java.lang.String)>
<android.media.Cea608CCWidget.CCLineBox: void onMeasure(int,int)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainChildPosition(int,int)>
<android.widget.SelectionActionModeHelper.TextClassificationHelper: void init(java.util.function.Supplier,java.lang.CharSequence,int,int,android.os.LocaleList)>
<android.os.storage.IStorageManager: void partitionPrivate(java.lang.String)>
<android.content.pm.IPackageManager: void logAppProcessStartIfNeeded(java.lang.String,int,java.lang.String,java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,int[],int)>
<android.providers.settings.SystemSettingsProto.Vibrate: void <init>(android.providers.settings.SystemSettingsProto)>
<android.view.inspector.InspectableProperty.ValueType: android.view.inspector.InspectableProperty.ValueType[] values()>
<android.media.ExifInterface.ByteOrderedDataInputStream: int getLength()>
<com.android.server.ForceAppStandbyTrackerProto.RunAnyInBackgroundRestrictedPackages: void <init>(com.android.server.ForceAppStandbyTrackerProto)>
<android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>
<android.security.keystore.DelegatingX509Certificate: boolean[] getIssuerUniqueID()>
<android.hardware.camera2.ICameraDeviceUser: android.view.Surface getInputSurface()>
<android.app.ContextImpl: boolean bindIsolatedService(android.content.Intent,int,java.lang.String,java.util.concurrent.Executor,android.content.ServiceConnection)>
<android.os.IUpdateEngine: void suspend()>
<android.app.IActivityManager: void backgroundWhitelistUid(int)>
<android.gsi.GsiInstallParams: void readFromParcel(android.os.Parcel)>
<android.animation.Animator.AnimatorConstantState: void <init>(android.animation.Animator)>
<android.app.BackStackRecord: void commitNowAllowingStateLoss()>
<android.util.MapCollections.MapIterator: boolean hasNext()>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.text.HtmlToSpannedConverter.Newline: void <init>(int)>
<android.hardware.radio.TunerCallbackAdapter: void onError(int)>
<android.app.ActivityTransitionCoordinator.ContinueTransitionListener: void onTransitionEnd(android.transition.Transition)>
<android.app.IActivityManager: void unregisterUidObserver(android.app.IUidObserver)>
<android.widget.TimePicker.AbstractTimePickerDelegate: void resetAutofilledValue()>
<android.widget.RemoteViews.SetIntTagAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.bluetooth.IBluetoothHidHost: int getPriority(android.bluetooth.BluetoothDevice)>
<android.widget.TimePicker.AbstractTimePickerDelegate.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.sysprop.VoldProperties: void encrypt_time_remaining(java.lang.Integer)>
<android.inputmethodservice.IInputMethodWrapper: void startInput(android.os.IBinder,com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,boolean,boolean)>
<android.widget.TextView.CharWrapper: void drawTextRun(android.graphics.BaseCanvas,int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void <init>(android.view.ViewRootImpl)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>
<android.speech.tts.FileSynthesisCallback: int getMaxBufferSize()>
<android.bluetooth.IBluetoothGatt: void setPeriodicAdvertisingEnable(int,boolean)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void updateCursor(android.graphics.Rect)>
<android.inputmethodservice.IInputMethodSessionWrapper.ImeInputEventReceiver: void <init>(android.inputmethodservice.IInputMethodSessionWrapper,android.view.InputChannel,android.os.Looper)>
<android.opengl.EGLLogWrapper: boolean eglWaitNative(int,java.lang.Object)>
<android.speech.tts.SynthesisPlaybackQueueItem.ProgressMarker: void <init>(android.speech.tts.SynthesisPlaybackQueueItem,int,int,int)>
<android.media.Cea708CCWidget.CCView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.SimpleMonthView: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.pm.IPackageManager: void clearCrossProfileIntentFilters(int,java.lang.String)>
<android.widget.CalendarViewLegacyDelegate.WeekView: android.icu.util.Calendar getFirstDay()>
<android.media.IPlayer: void stop()>
<android.app.IActivityManager: void cancelRecentsAnimation(boolean)>
<android.widget.Spinner.SpinnerPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.opengl.EGLLogWrapper: void <init>(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>
<android.content.pm.IPackageManager: void deletePackageVersioned(android.content.pm.VersionedPackage,android.content.pm.IPackageDeleteObserver2,int,int)>
<android.view.IWindowManager: void unregisterWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void initAlgorithmSpecificParameters()>
<android.bluetooth.IBluetoothGattServerCallback: void onMtuChanged(java.lang.String,int)>
<android.media.Cea708CCWidget.CCHandler: void processCaptionEvent(android.media.Cea708CCParser.CaptionEvent)>
<android.app.Notification.BuilderRemoteViews: java.lang.Object clone()>
<android.widget.ProgressBar.RefreshData: void recycle()>
<android.view.ViewRootImpl.QueuedInputEvent: java.lang.String toString()>
<android.app.ActivityTransitionState: void clear()>
<android.bluetooth.IBluetoothHeadsetClient: android.bluetooth.BluetoothHeadsetClientCall dial(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer sliceFromTo(java.nio.ByteBuffer,int,int)>
<android.widget.SimpleMonthView: void onLayout(boolean,int,int,int,int)>
<android.widget.SmartSelectSprite: boolean isAnimationActive()>
<android.speech.tts.FileSynthesisCallback: int done()>
<android.util.StatsLogInternal: int write(int,java.lang.String,int,int,float)>
<android.bluetooth.IBluetooth: boolean setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int)>
<android.graphics.HardwareRenderer.DestroyContextRunnable: void run()>
<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor openDevice(java.lang.String,java.lang.String)>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize[] values()>
<android.content.ContentProvider.Transport: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.IBluetoothManager: java.lang.String getAddress()>
<android.content.pm.IPackageManager: void deletePackageAsUser(java.lang.String,int,android.content.pm.IPackageDeleteObserver,int,int)>
<android.opengl.EGLLogWrapper: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<android.media.MediaFormat.UnprefixedKeySet: void <init>(android.media.MediaFormat,java.lang.String)>
<android.hardware.radio.TunerAdapter: int getProgramInformation(android.hardware.radio.RadioManager.ProgramInfo[])>
<android.widget.CalendarViewMaterialDelegate: void setWeekDayTextAppearance(int)>
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedEcdsaSignatureDigests()>
<android.view.ViewGroup.ViewLocationHolder: android.view.ViewGroup.ViewLocationHolder obtain(android.view.ViewGroup,android.view.View)>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<android.widget.Toast.TN: void handleShow(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<android.app.IActivityManager: boolean killPids(int[],java.lang.String,boolean)>
<android.animation.PathKeyframes.SimpleKeyframes: void setEvaluator(android.animation.TypeEvaluator)>
<android.view.View.DeclaredOnClickListener: void onClick(android.view.View)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.app.ContextImpl.ApplicationContentResolver: void unstableProviderDied(android.content.IContentProvider)>
<android.view.ViewGroup.ChildListForAutofill: android.view.ViewGroup.ChildListForAutofill obtain()>
<android.bluetooth.IBluetoothHeadset: void setForceScoAudio(boolean)>
<android.permission.PermissionControllerManager.RemoteService: long getRemoteRequestMillis()>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>
<android.view.IWindowManager: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createUShort(int,java.nio.ByteOrder)>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,int[],int)>
<android.os.IDumpstateListener: void onFinished()>
<android.text.SpannableStringInternal: boolean equals(java.lang.Object)>
<android.mtp.MtpPropertyList: int[] getPropertyCodes()>
<android.widget.DayPickerView: void setDayTextAppearance(int)>
<android.opengl.GLErrorWrapper: boolean glIsFramebufferOES(int)>
<android.widget.SearchView.InspectionCompanion: void readProperties(android.widget.SearchView,android.view.inspector.PropertyReader)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.AdditionalAuthenticationDataStream: android.security.keymaster.OperationResult finish(byte[],byte[])>
<android.widget.TextView.CharWrapper: void getChars(int,int,char[],int)>
<android.view.Choreographer.FrameHandler: void handleMessage(android.os.Message)>
<android.os.IStatsManager: long[] setActiveConfigsChangedOperation(android.os.IBinder,java.lang.String)>
<android.widget.TextView.Drawables: void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView)>
<android.widget.SearchView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.security.keystore.DelegatingX509Certificate: byte[] getEncoded()>
<android.widget.TextView.CharWrapper: int getTextRunCursor(int,int,boolean,int,int,android.graphics.Paint)>
<android.content.res.XmlBlock.Parser: boolean isAttributeDefault(int)>
<android.os.IVold: void encryptFstab(java.lang.String,java.lang.String)>
<android.providers.settings.GlobalSettingsProto.Ntp: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.admin.SecurityLogTags: void writeSecurityKeyImported(int,java.lang.String,int)>
<android.os.UidProto.JobCompletion: void <init>(android.os.UidProto)>
<android.preference.GenericInflater: android.preference.GenericInflater.Parent onMergeRoots(android.preference.GenericInflater.Parent,boolean,android.preference.GenericInflater.Parent)>
<android.widget.AdapterView.AdapterDataSetObserver: void onChanged()>
<android.bluetooth.IBluetoothMap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.widget.Editor.SelectionModifierCursorController: int getMinTouchOffset()>
<android.widget.RemoteViews.SetRemoteInputsAction: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.IBluetoothGatt: void setPeriodicAdvertisingData(int,android.bluetooth.le.AdvertiseData)>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.hardware.SystemSensorManager.InjectEventQueue: void dispatchFlushCompleteEvent(int)>
<android.app.IWallpaperManager: boolean isWallpaperSupported(java.lang.String)>
<android.view.textclassifier.TextClassificationSession: android.view.textclassifier.TextLinks generateLinks(android.view.textclassifier.TextLinks.Request)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void resetWhilePreservingInitState()>
<android.view.IWindowManager: boolean injectInputAfterTransactionsApplied(android.view.InputEvent,int)>
<android.app.ActivityTransitionCoordinator: void moveSharedElementsFromOverlay()>
<android.location.LocalListenerHelper: void remove(java.lang.Object)>
<android.view.IWindowManager: boolean isKeyguardSecure(int)>
<android.content.res.ThemedResourceCache: void put(long,android.content.res.Resources.Theme,java.lang.Object)>
<android.content.res.XmlBlock.Parser: int nextToken()>
<android.telecom.VideoCallImpl.MessageHandler: void handleMessage(android.os.Message)>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.bluetooth.IBluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.content.EventLogTags: void writeBinderSample(java.lang.String,int,int,java.lang.String,int)>
<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: void setEpicenter(android.graphics.Rect)>
<android.widget.Editor.SuggestionHelper.SuggestionSpanComparator: int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan)>
<android.app.EnterTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.hardware.radio.TunerCallbackAdapter: void onTrafficAnnouncement(boolean)>
<android.graphics.RenderNode.CompositePositionUpdateListener: void positionChanged(long,int,int,int,int)>
<android.os.SystemProto.PowerUseSummary: void <init>(android.os.SystemProto)>
<android.bluetooth.IBluetoothAvrcpController: void sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int)>
<android.bluetooth.IBluetoothGatt: void stopScan(int)>
<android.opengl.GLSurfaceView.GLThread: void surfaceDestroyed()>
<android.app.admin.IDevicePolicyManager: boolean approveCaCert(java.lang.String,int,boolean)>
<android.app.ITaskStackListener: void onPinnedStackAnimationStarted()>
<android.widget.RemoteViews.SetRemoteInputsAction: void <init>(android.widget.RemoteViews,int,android.app.RemoteInput[])>
<android.bluetooth.IBluetoothGattCallback: void onSearchComplete(java.lang.String,java.util.List,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>
<android.widget.AbsSeekBar.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.opengl.GLLogWrapper: void glTexEnvi(int,int,int)>
<android.widget.RemoteViews.SetRemoteInputsAction: int getActionTag()>
<android.app.admin.SecurityLogTags: void writeSecurityCertAuthorityInstalled(int,java.lang.String)>
<android.widget.AbsListView.WindowRunnnable: void rememberWindowAttachCount()>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: int[] preceding(int)>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<android.widget.CalendarViewLegacyDelegate.WeekView: int getMonthOfLastWeekDay()>
<android.content.pm.IPackageManagerNative: java.lang.String[] getNamesForUids(int[])>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,int[],int)>
<android.widget.SelectionActionModeHelper.SelectionTracker: void onSelectionDestroyed()>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,int[],int)>
<android.app.BackStackRecord: android.app.FragmentTransaction disallowAddToBackStack()>
<android.app.WallpaperManager.FastBitmapDrawable: void setDither(boolean)>
<android.opengl.EGLLogWrapper: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<android.os.SystemPropertiesProto.DalvikVm: void <init>(android.os.SystemPropertiesProto)>
<android.graphics.ColorSpace.Named: android.graphics.ColorSpace.Named valueOf(java.lang.String)>
<android.bluetooth.IBluetoothAvrcpTarget: void sendVolumeChanged(int)>
<android.widget.AbsListView.ListItemAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<android.widget.Editor.SelectionModifierCursorController: void onDetached()>
<android.content.pm.IPackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int)>
<android.bluetooth.IBluetooth: boolean isOffloadedFilteringSupported()>
<android.widget.Spinner.DialogPopup: int getHorizontalOffset()>
<android.widget.RemoteViews.ViewGroupActionAdd: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.FilterGraph getGraph()>
<android.widget.CalendarViewLegacyDelegate: int getFocusedMonthDateColor()>
<android.security.keystore.IKeystoreService: int ungrant(java.lang.String,int)>
<android.media.ImageWriter.WriterSurfaceImage: void setTimestamp(long)>
<android.content.pm.IPackageManager: boolean isPermissionEnforced(java.lang.String)>
<android.bluetooth.IBluetoothHidHost: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.IBluetoothGattCallback: void onCharacteristicWrite(java.lang.String,int,int)>
<android.widget.CalendarViewMaterialDelegate: long getDate()>
<android.util.StatsLogInternal: int write(int,int,int,boolean,int,boolean,int,long,boolean)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedQuery()>
<android.app.ActivityThread.ApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int,int,int)>
<android.view.ViewGroup.TouchTarget: android.view.ViewGroup.TouchTarget obtain(android.view.View,int)>
<android.app.IActivityManager: boolean isUserRunning(int,int)>
<android.telecom.CallScreeningService.CallScreeningBinder: void screenCall(com.android.internal.telecom.ICallScreeningAdapter,android.telecom.ParcelableCall)>
<android.graphics.Paint.Style: android.graphics.Paint.Style valueOf(java.lang.String)>
<android.app.LauncherActivity.ActivityAdapter: int getCount()>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Object)>
<android.os.IStatsManager: void informOnePackage(java.lang.String,int,long,java.lang.String,java.lang.String)>
<android.util.JsonScope: android.util.JsonScope[] values()>
<android.bluetooth.IBluetoothHeadset: boolean startScoUsingVirtualVoiceCall()>
<android.util.apk.WrappedX509Certificate: void checkValidity(java.util.Date)>
<android.app.IActivityManager: void requestTelephonyBugReport(java.lang.String,java.lang.String)>
<android.util.DataUnit: long toBytes(long)>
<android.content.res.XmlBlock.Parser: void defineEntityReplacementText(java.lang.String,java.lang.String)>
<android.widget.AbsSpinner.SavedState: java.lang.String toString()>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: android.widget.AccessibilityIterators.PageTextSegmentIterator getInstance()>
<android.widget.Editor.PinnedPopupWindow: void hide()>
<android.app.SystemServiceRegistry.CachedServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.sysprop.CryptoProperties: void type(android.sysprop.CryptoProperties.type_values)>
<android.app.admin.IDevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>
<android.widget.ListPopupWindow.PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>
<android.providers.settings.GlobalSettingsProto.Anomaly: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean hasWrappedCallback()>
<android.media.Utils: android.util.Range factorRange(android.util.Range,int)>
<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.os.Bundle)>
<android.providers.settings.SecureSettingsProto.AlwaysOnVpn: void <init>(android.providers.settings.SecureSettingsProto)>
<android.bluetooth.IBluetoothHeadsetClient: void setAudioRouteAllowed(android.bluetooth.BluetoothDevice,boolean)>
<android.widget.RemoteViews.ReflectionAction: int mergeBehavior()>
<android.widget.DatePicker.AbstractDatePickerDelegate: void onValidationChanged(boolean)>
<android.app.ActivityManager.UidObserver: void onUidActive(int)>
<android.security.keystore.DelegatingX509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
<android.widget.ViewFlipper.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.stats.devicepolicy.nano.StringList: int computeSerializedSize()>
<android.apex.ApexSessionInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.IPackageManager: boolean isPackageSignedByKeySet(java.lang.String,android.content.pm.KeySet)>
<android.app.admin.IDevicePolicyManager: boolean isDeviceProvisioned()>
<android.widget.ActivityChooserView.Callbacks: void onDismiss()>
<android.bluetooth.IBluetoothGatt: void unregisterSync(android.bluetooth.le.IPeriodicAdvertisingCallback)>
<android.mtp.MtpStorageManager.MtpOperation: android.mtp.MtpStorageManager.MtpOperation[] values()>
<android.opengl.GLLogWrapper: void glLoadMatrixx(int[],int)>
<android.opengl.GLErrorWrapper: int glCheckFramebufferStatusOES(int)>
<android.app.IWallpaperManager: void setDimensionHints(int,int,java.lang.String,int)>
<android.os.IVold: void fdeVerifyPassword(java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.dex.IArtManager getArtManager()>
<android.app.ActivityThread.ApplicationThread: void scheduleTransaction(android.app.servertransaction.ClientTransaction)>
<android.media.MediaRouter.CallbackInfo: boolean filterRouteEvent(android.media.MediaRouter.RouteInfo)>
<android.app.ITaskStackListener: void onTaskRemoved(int)>
<android.widget.GridLayout.MutableInt: java.lang.String toString()>
<android.util.MapCollections.MapIterator: java.lang.String toString()>
<android.media.Cea708CCWidget.CCWindowLayout: void appendText(java.lang.String)>
<android.media.SubtitleTrack.CueList: void remove(android.media.SubtitleTrack.Cue)>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt valueOf(java.lang.String)>
<android.app.LoadedApk.ReceiverDispatcher.Args: java.lang.Runnable getRunnable()>
<android.app.ActivityTransitionCoordinator: void backgroundAnimatorComplete()>
<android.app.admin.IDevicePolicyManager: boolean getAutoTimeRequired()>
<android.os.storage.IStorageManager: int verifyEncryptionPassword(java.lang.String)>
<android.permission.PermissionControllerManager.RemoteService: long getTimeoutIdleBindMillis()>
<android.util.StatsLogInternal: int write(int,int,int,boolean,boolean,boolean,int,long)>
<android.util.apk.ByteBufferDataSource: long size()>
<android.inputmethodservice.InputMethodService.SettingsObserver: void onChange(boolean,android.net.Uri)>
<android.widget.RemoteViews.ViewGroupActionAdd: android.widget.RemoteViews.Action initActionAsync(android.widget.RemoteViews.ViewTree,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.provider.Settings.NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>
<android.util.StatsLogInternal: int write(int,long,long,int,java.lang.String,java.lang.String,boolean)>
<android.widget.RemoteViews.SetRippleDrawableColor: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.util.StatsLogInternal: int write(int,byte[],int,int,int,int,int)>
<android.app.admin.IDevicePolicyManager: void clearDeviceOwner(java.lang.String)>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,float[],int)>
<android.os.IInstalld: void markBootComplete(java.lang.String)>
<android.security.keystore.IKeystoreService: long getmtime(java.lang.String,int)>
<android.bluetooth.IBluetoothHeadset: boolean isAudioOn()>
<android.view.ViewRootImpl.WindowInputEventReceiver: void onInputEvent(android.view.InputEvent)>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int compareTo(android.preference.PreferenceGroupAdapter.PreferenceLayout)>
<android.app.ExitTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.preference.SeekBarVolumizer.Receiver: void setListening(boolean)>
<android.app.IActivityManager: void addPackageDependency(java.lang.String)>
<android.app.ActivityTransitionCoordinator: boolean isTransitionRunning()>
<android.hardware.radio.Utils: void writeTypedCollection(android.os.Parcel,java.util.Collection)>
<android.media.ExifInterface.ByteOrderedDataInputStream: int readUnsignedByte()>
<android.app.admin.IDevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>
<com.android.internal.annotations.VisibleForTesting.Visibility: com.android.internal.annotations.VisibleForTesting.Visibility[] values()>
<android.mtp.MtpPropertyGroup: void <init>(int[])>
<android.security.KeyStore.KeyAttestationCallbackResult: android.security.keymaster.KeymasterCertificateChain getCertificateChain()>
<android.net.lowpan.ILowpanInterface: void beginLowPower()>
<android.os.storage.IStorageEventListener: void onVolumeRecordChanged(android.os.storage.VolumeRecord)>
<android.os.IVold: java.io.FileDescriptor mountAppFuse(int,int)>
<android.security.keystore.IKeystoreService: int onUserPasswordChanged(int,java.lang.String)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void setFloatValues(float[])>
<android.os.ParcelFileDescriptor.Status: java.lang.String toString()>
<android.bluetooth.le.IPeriodicAdvertisingCallback: void onSyncLost(int)>
<android.view.InsetsController.InsetsProperty: void set(java.lang.Object,java.lang.Object)>
<android.view.ViewOverlay.OverlayViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.os.IVold: void createUserKey(int,int,boolean)>
<android.util.apk.VerbatimX509Certificate: byte[] getEncoded()>
<android.content.pm.IPackageManager: void setSystemAppHiddenUntilInstalled(java.lang.String,boolean)>
<android.bluetooth.IBluetooth: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.app.ITaskStackListener: void onTaskStackChanged()>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: void <init>(android.view.View,android.view.View,android.view.ViewGroup)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onOemHookRawEvent(byte[])>
<android.hardware.radio.Utils: java.util.Map readStringMap(android.os.Parcel)>
<android.bluetooth.IBluetoothGatt: void setAdvertisingParameters(int,android.bluetooth.le.AdvertisingSetParameters)>
<android.view.IWindowSession: void prepareToReplaceWindows(android.os.IBinder,boolean)>
<android.security.keystore.IKeystoreService: int finish(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[],byte[])>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult()>
<android.content.res.XmlBlock.Parser: int getAttributeUnsignedIntValue(int,int)>
<android.app.ContextImpl: boolean bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)>
<android.os.MemoryFile.MemoryInputStream: boolean markSupported()>
<android.view.ViewRootImpl.ViewRootHandler: void handleMessage(android.os.Message)>
<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)>
<android.content.pm.IPackageManager: int getInstallLocation()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: int getAdditionalEntropyAmountForBegin()>
<android.os.IVold: void benchmark(java.lang.String,android.os.IVoldTaskListener)>
<android.gsi.IGsiService: int startGsiInstall(long,long,boolean)>
<android.app.IActivityManager: void setUserIsMonkey(boolean)>
<android.content.pm.IPackageManager: boolean isStorageLow()>
<android.gamedriver.GameDriverProto.BlacklistOrBuilder: int getPackageNamesCount()>
<android.bluetooth.IBluetoothHeadset: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>
<android.app.IActivityManager: boolean startUserInForegroundWithListener(int,android.os.IProgressListener)>
<android.bluetooth.IBluetoothManager: java.lang.String getName()>
<android.media.MediaRouter.VolumeChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.os.IDumpstate: void startBugreport(int,java.lang.String,java.io.FileDescriptor,java.io.FileDescriptor,int,android.os.IDumpstateListener)>
<android.view.IWindowSession: void setInTouchMode(boolean)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onCallForwardingIndicatorChanged(boolean)>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>
<android.os.UidProto.AggregatedWakelock: void <init>(android.os.UidProto)>
<android.widget.NumberPicker.InputTextFilter: int getInputType()>
<android.inputmethodservice.IInputMethodWrapper: void bindInput(android.view.inputmethod.InputBinding)>
<android.providers.settings.SystemSettingsProto.DevOptions: void <init>(android.providers.settings.SystemSettingsProto)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createDouble(double,java.nio.ByteOrder)>
<android.providers.settings.SystemSettingsProto.Ringtone: void <init>(android.providers.settings.SystemSettingsProto)>
<android.content.ContentResolver.CursorWrapperInner: void finalize()>
<android.text.HtmlToSpannedConverter.Href: void <init>(java.lang.String)>
<android.net.Uri.HierarchicalUri: java.lang.String getFragment()>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.preference.ListPreference.SavedState: void <init>(android.os.Parcelable)>
<android.widget.CalendarViewLegacyDelegate: boolean getShowWeekNumber()>
<android.content.pm.IPackageManager: void revokeRuntimePermission(java.lang.String,java.lang.String,int)>
<android.content.pm.IPackageManager: boolean performDexOptMode(java.lang.String,boolean,java.lang.String,boolean,boolean,java.lang.String)>
<android.view.GestureDetector.GestureHandler: void handleMessage(android.os.Message)>
<android.appwidget.AppWidgetHost.Callbacks: void updateAppWidget(int,android.widget.RemoteViews)>
<android.providers.settings.GlobalSettingsProto.Backup: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>
<android.bluetooth.IBluetoothHidHost: java.util.List getConnectedDevices()>
<android.gamedriver.GameDriverProto: void registerAllExtensions(com.android.framework.protobuf.ExtensionRegistryLite)>
<android.app.admin.IDevicePolicyManager: void setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)>
<android.app.IActivityManager: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.os.UidProto.Package: void <init>(android.os.UidProto)>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType[] values()>
<android.animation.Keyframe.IntKeyframe: java.lang.Object getValue()>
<android.webkit.WebSyncManager: void startSync()>
<android.opengl.GLLogWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.os.PageTypeInfoProto.MigrateType: void <init>(android.os.PageTypeInfoProto)>
<android.app.IActivityManager: void killPackageDependents(java.lang.String,int)>
<android.app.admin.IDevicePolicyManager: int getPermissionPolicy(android.content.ComponentName)>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace valueOf(java.lang.String)>
<android.widget.RemoteViews.ViewTree: android.widget.RemoteViews.ViewTree findViewTreeById(int)>
<android.app.admin.IDevicePolicyManager: java.util.List getSecondaryUsers(android.content.ComponentName)>
<android.content.pm.IPackageManager: void freeStorageAndNotify(java.lang.String,long,int,android.content.pm.IPackageDataObserver)>
<android.security.IKeyChainService: boolean hasGrant(int,java.lang.String)>
<android.app.WallpaperManager.WallpaperSetCompletion: void onWallpaperChanged()>
<android.content.pm.IPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
<android.os.IInstalld: boolean isQuotaSupported(java.lang.String)>
<android.content.pm.IPackageManager: void updatePermissionFlagsForAllApps(int,int,int)>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean save()>
<android.app.LoadedApk.WarningContextClassLoader: java.lang.Class loadClass(java.lang.String)>
<android.os.IInstalld: void invalidateMounts()>
<android.view.ViewRootImpl.NativePreImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.view.IRecentsAnimationRunner: void onAnimationStart(android.view.IRecentsAnimationController,android.view.RemoteAnimationTarget[],android.graphics.Rect,android.graphics.Rect)>
<android.opengl.GLLogWrapper: void glLoadIdentity()>
<android.speech.tts.EventLogTags: void writeTtsV2SpeakFailure(java.lang.String,int,int,int,java.lang.String,int)>
<android.widget.DatePickerSpinnerDelegate: boolean getSpinnersShown()>
<android.app.admin.IDevicePolicyManager: boolean isUninstallInQueue(java.lang.String)>
<android.providers.settings.GlobalSettingsProto.Dropbox: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.animation.Keyframe.FloatKeyframe: void setValue(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.content.LoggingContentInterface.Logger: void close()>
<android.app.ActivityTransitionCoordinator: void sharedElementTransitionComplete()>
<android.app.ContextImpl: android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,android.content.pm.ActivityInfo,android.os.IBinder,int,android.content.res.Configuration)>
<com.android.server.ResettableTimeout: void off()>
<android.os.IVold: boolean isConvertibleToFbe()>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,java.lang.String,int,int,int,int)>
<android.content.pm.IPackageManager: byte[] getInstantAppCookie(java.lang.String,int)>
<android.net.Uri.OpaqueUri: int describeContents()>
<android.security.KeyStore.ExportKeyPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.media.ImageReader.SurfaceImage: int getWidth()>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
<android.app.ActivityView.TaskStackListenerImpl: void onTaskDescriptionChanged(android.app.ActivityManager.RunningTaskInfo)>
<android.hardware.LegacySensorManager: int getSensors()>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.speech.tts.EventLogTags: void writeTtsSpeakSuccess(java.lang.String,int,int,int,java.lang.String,int,int,long,long,long)>
<android.bluetooth.IBluetoothSap: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)>
<android.security.keystore.DelegatingX509Certificate: int getBasicConstraints()>
<android.util.MapCollections.MapIterator: java.lang.Object getValue()>
<android.animation.FloatKeyframeSet: android.animation.KeyframeSet clone()>
<android.opengl.GLLogWrapper.PointerInfo: int sizeof(int)>
<android.os.storage.IStorageManager: void abortChanges(java.lang.String,boolean)>
<android.widget.TableRow.ChildrenTracker: void onChildViewAdded(android.view.View,android.view.View)>
<android.hardware.radio.TunerCallbackAdapter: void onBackgroundScanAvailabilityChange(boolean)>
<android.graphics.drawable.RippleForeground: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.opengl.GLLogWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.permission.PermissionControllerManager.PendingRestoreRuntimePermissionBackup: void run(android.os.IInterface)>
<android.net.LocalSocketImpl.SocketInputStream: int read(byte[])>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType[] values()>
<android.telecom.Connection.FailureSignalingConnection: void checkImmutable()>
<android.hardware.camera2.ICameraDeviceCallbacks: void onPrepared(int)>
<android.app.admin.IDevicePolicyManager: boolean setTimeZone(android.content.ComponentName,java.lang.String)>
<android.content.pm.IPackageManager: java.lang.String getInstantAppAndroidId(java.lang.String,int)>
<android.os.IInstalld: long[] getUserSize(java.lang.String,int,int,int[])>
<android.widget.ExpandableListConnector: java.lang.Object getItem(int)>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>
<android.bluetooth.IBluetoothHearingAid: boolean setActiveDevice(android.bluetooth.BluetoothDevice)>
<android.widget.AbsListView.FlingRunnable: void run()>
<android.widget.DateTimeView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.app.IActivityManager: boolean isTopActivityImmersive()>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.hardware.radio.Utils: java.util.Set createIntSet(android.os.Parcel)>
<android.hardware.ICameraService: void removeListener(android.hardware.ICameraServiceListener)>
<android.os.storage.IStorageManager: long getAllocatableBytes(java.lang.String,int,java.lang.String)>
<android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl: void onUnsyncableAccount(android.content.ISyncAdapterUnsyncableAccountCallback)>
<android.os.storage.IStorageManager: java.lang.String getField(java.lang.String)>
<android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl: void cancelSync(android.content.ISyncContext)>
<android.os.UidProto.Sync: void <init>(android.os.UidProto)>
<android.opengl.GLLogWrapper: void glMatrixMode(int)>
<android.content.res.XmlBlock.Parser: boolean isWhitespace()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int getModulusSizeBytes()>
<android.widget.RatingBar.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<android.os.ParcelFileDescriptor.Status: void <init>(int,java.lang.String)>
<android.view.IWindowManager: void setShelfHeight(boolean,int)>
<android.bluetooth.IBluetooth: boolean isLePeriodicAdvertisingSupported()>
<android.media.WebVttRenderingWidget.RegionLayout: void put(android.media.TextTrackCue)>
<android.app.admin.IDevicePolicyManager: android.content.pm.ParceledListSlice retrieveSecurityLogs(android.content.ComponentName)>
<android.hardware.radio.TunerAdapter: void cancelAnnouncement()>
<android.view.ViewOverlay.OverlayViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,float[],int)>
<android.util.LauncherIcons.ShadowDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.speech.RecognitionService.RecognitionServiceBinder: void cancel(android.speech.IRecognitionListener)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onCarrierNetworkChange(boolean)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void onDraw(android.graphics.Canvas)>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.media.IPlayer: void setVolume(float)>
<android.app.admin.IDevicePolicyManager: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.List)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onUnbufferedIO()>
<android.content.SearchRecentSuggestionsProvider.DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<android.opengl.GLSurfaceView.GLThread: void run()>
<android.animation.PathKeyframes.SimpleKeyframes: java.lang.Object clone()>
<android.app.admin.IDevicePolicyManager: boolean isAffiliatedUser()>
<android.app.WallpaperManager.Globals: android.graphics.Bitmap peekWallpaperBitmap(android.content.Context,boolean,int,int,boolean)>
<android.bluetooth.IBluetoothHeadset: boolean stopScoUsingVirtualVoiceCall()>
<android.widget.ForwardingListener.TriggerLongPress: void run()>
<android.media.ExifInterface.ByteOrderedDataInputStream: int skipBytes(int)>
<android.app.IWallpaperManager: void clearWallpaper(java.lang.String,int,int)>
<android.os.SystemPropertiesProto.Ro.Build: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.util.StatsLogInternal: int write(int,int,int,boolean,boolean)>
<android.telecom.InCallService.InCallServiceBinder: void onConnectionEvent(java.lang.String,java.lang.String,android.os.Bundle)>
<android.widget.TimePickerClockDelegate: boolean isEnabled()>
<android.app.ContextImpl: void revokeUriPermission(android.net.Uri,int)>
<android.os.storage.IStorageManager: void setPrimaryStorageUuid(java.lang.String,android.content.pm.IPackageMoveObserver)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.app.IActivityManager: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.net.lowpan.ILowpanInterface: void reset()>
<android.app.IActivityManager: int startActivityFromRecents(int,android.os.Bundle)>
<android.print.PrintServicesLoader.MyHandler: void handleMessage(android.os.Message)>
<android.app.timezone.Utils: java.lang.Object validateConditionalNull(boolean,java.lang.String,java.lang.Object)>
<android.preference.DialogPreference.SavedState: void <init>(android.os.Parcel)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: long getOperationHandle()>
<android.graphics.Paint.Join: android.graphics.Paint.Join valueOf(java.lang.String)>
<android.os.IVold: void shutdown()>
<android.net.ITetheringStatsProvider: void setInterfaceQuota(java.lang.String,long)>
<android.widget.TextClock.FormatChangeObserver: void <init>(android.widget.TextClock,android.os.Handler)>
<android.app.ActivityThread.ApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>
<android.media.Tokenizer.TagTokenizer: android.media.Tokenizer.TokenizerPhase start()>
<android.opengl.GLLogWrapper: void glLightModelfv(int,float[],int)>
<android.app.IActivityManager: void sendIdleJobTrigger()>
<android.os.IExternalVibratorService: int onExternalVibrationStart(android.os.ExternalVibration)>
<android.app.ActivityTransitionCoordinator.ContinueTransitionListener: void <init>(android.app.ActivityTransitionCoordinator)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int engineGetOutputSize(int)>
<android.widget.Editor.SelectionModifierCursorController: void onTouchEvent(android.view.MotionEvent)>
<com.android.server.AlarmManagerServiceDumpProto.TopAlarm: void <init>(com.android.server.AlarmManagerServiceDumpProto)>
<android.widget.Editor.SuggestionsPopupWindow: int getVerticalLocalPosition(int)>
<android.app.ContextImpl: void setAutofillOptions(android.content.AutofillOptions)>
<android.security.IKeyChainService: boolean reset()>
<android.permission.PermissionControllerManager.PendingGetRuntimePermissionBackup: void run()>
<android.util.jar.StrictJarVerifier: java.security.cert.Certificate[] verifyBytes(byte[],byte[])>
<android.drm.DrmManagerClient.EventHandler: void handleMessage(android.os.Message)>
<android.app.IActivityManager: void noteAlarmFinish(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>
<android.app.admin.SecurityLogTags: void writeSecurityKeyIntegrityViolation(java.lang.String,int)>
<android.widget.RemoteViews.SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(com.android.framework.protobuf.CodedInputStream)>
<com.android.server.ResettableTimeout: void cancel()>
<android.app.admin.SecurityLogTags: void writeSecurityKeyGenerated(int,java.lang.String,int)>
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)>
<android.opengl.GLLogWrapper: void glScissor(int,int,int,int)>
<android.content.pm.IPackageManager: void performFstrimIfNeeded()>
<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.filterfw.core.GenerateProgramPort: java.lang.String name()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<android.content.pm.IPackageManager: boolean isPackageAvailable(java.lang.String,int)>
<android.opengl.GLLogWrapper: void glLoadMatrixx(java.nio.IntBuffer)>
<android.media.Cea708CCWidget.CCWindowLayout: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<android.gsi.IGsiService: boolean commitGsiChunkFromMemory(byte[])>
<android.security.KeyStore.CertificateChainPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.app.admin.IDevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>
<android.widget.HorizontalScrollView.InspectionCompanion: void readProperties(android.widget.HorizontalScrollView,android.view.inspector.PropertyReader)>
<android.os.CpuFreqProto.Stats.TimeInState: void <init>(android.os.CpuFreqProto.Stats)>
<android.widget.AbsSeekBar.InspectionCompanion: void readProperties(android.widget.AbsSeekBar,android.view.inspector.PropertyReader)>
<android.content.pm.IPackageManager: void deleteApplicationCacheFilesAsUser(java.lang.String,int,android.content.pm.IPackageDataObserver)>
<android.content.pm.IPackageManager: void setApplicationCategoryHint(java.lang.String,int,java.lang.String)>
<android.bluetooth.IBluetoothA2dpSink: boolean connect(android.bluetooth.BluetoothDevice)>
<android.app.IActivityManager: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<android.inputmethodservice.IInputMethodWrapper: void hideSoftInput(int,android.os.ResultReceiver)>
<android.media.PlayerBase.IPlayerWrapper: void pause()>
<android.util.ContainerHelpers: int binarySearch(int[],int,int)>
<android.widget.TimePicker.AbstractTimePickerDelegate: android.view.autofill.AutofillValue getAutofillValue()>
<android.speech.tts.FileSynthesisCallback: boolean hasFinished()>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.app.admin.IDevicePolicyManager: boolean isResetPasswordTokenActive(android.content.ComponentName)>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicLocale: boolean defaultIsRtl()>
<android.widget.ListView.ArrowScrollFocusResult: int getAmountToScroll()>
<android.util.apk.ApkSigningBlockUtils: void verifyIntegrity(java.util.Map,java.io.RandomAccessFile,android.util.apk.SignatureInfo)>
<android.opengl.GLLogWrapper: void glOrthox(int,int,int,int,int,int)>
<android.os.IDumpstateListener: void onProgress(int)>
<android.inputmethodservice.KeyboardView.SwipeTracker: void computeCurrentVelocity(int)>
<android.app.DownloadManager.CursorTranslator: java.lang.String getString(int)>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void addView(android.view.View)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,int,java.lang.String,int,int,int)>
<android.view.IWindowManager: void reenableKeyguard(android.os.IBinder,int)>
<android.app.ActivityThread.ReceiverData: void <init>(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,android.os.IBinder,int)>
<android.app.admin.IDevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<android.app.ActivityThread.ApplicationThread: void scheduleExit()>
<android.widget.Spinner.DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.widget.RemoteViews.SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>
<android.app.ContextImpl: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.opengl.GLErrorWrapper: void glMultMatrixx(java.nio.IntBuffer)>
<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl.ServiceImpl: void removeClient(int)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getStartUserSessionMessage(android.content.ComponentName)>
<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<android.content.ContentProvider.Transport: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<android.security.keystore.IKeystoreService: int getState(int)>
<android.app.WallpaperManager.FastBitmapDrawable: int getMinimumWidth()>
<android.opengl.GLLogWrapper: void glBlendEquationSeparate(int,int)>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.security.KeyStore.KeyCharacteristicsCallbackResult: void <init>(android.security.KeyStore,android.security.keystore.KeystoreResponse,android.security.keymaster.KeyCharacteristics)>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel valueOf(java.lang.String)>
<android.util.MapCollections: void colClear()>
<com.android.internal.messages.nano.SystemMessageProto.SystemMessage: com.android.internal.messages.nano.SystemMessageProto.SystemMessage mergeFrom(com.android.framework.protobuf.nano.CodedInputByteBufferNano)>
<android.app.admin.IDevicePolicyManager: boolean setTime(android.content.ComponentName,long)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void <init>(android.widget.RadialTimePickerView)>
<android.view.autofill.ParcelableMap: void writeToParcel(android.os.Parcel,int)>
<android.os.BugreportManager.DumpstateListener: void onProgress(int)>
<android.widget.NumberPicker.BeginSoftInputOnLongPressCommand: void run()>
<android.util.MapCollections.EntrySet: boolean retainAll(java.util.Collection)>
<android.app.ContextImpl: void setTheme(int)>
<android.view.OrientationListener.OrientationEventListenerInternal: void onOrientationChanged(int)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createUShort(int[],java.nio.ByteOrder)>
<android.widget.DayPickerView: int getDayOfWeekTextAppearance()>
<android.media.Cea708CCWidget.CCWindowLayout: void setRowLimit(int)>
<android.content.pm.IPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.transition.Visibility.DisappearListener: void onTransitionResume(android.transition.Transition)>
<android.view.Choreographer.FrameDisplayEventReceiver: void <init>(android.view.Choreographer,android.os.Looper,int)>
<android.os.IInstalld: long snapshotAppData(java.lang.String,java.lang.String,int,int,int)>
<android.opengl.GLErrorWrapper: void glCurrentPaletteMatrixOES(int)>
<android.opengl.GLLogWrapper: int glGetError()>
<android.gamedriver.GameDriverProto.Blacklist.Builder: android.gamedriver.GameDriverProto.Blacklist.Builder setPackageNames(int,java.lang.String)>
<android.security.keystore.DelegatingX509Certificate: java.util.Set getNonCriticalExtensionOIDs()>
<android.app.admin.IDevicePolicyManager: void setLongSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.apex.IApexService: void preinstallPackages(java.util.List)>
<android.bluetooth.BluetoothHidDevice.CallbackWrapper: void onAppStatusChanged(android.bluetooth.BluetoothDevice,boolean)>
<android.opengl.GLLogWrapper: void glMultiTexCoord4x(int,int,int,int,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>
<android.bluetooth.IBluetoothHidHost: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.app.ITaskStackListener: void onActivityUnpinned()>
<android.opengl.GLErrorWrapper: void glFogx(int,int)>
<android.widget.Editor.ProcessTextIntentActionsHandler: boolean performMenuItemAction(android.view.MenuItem)>
<android.content.res.XmlBlock.Parser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.app.ContextImpl: int checkCallingPermission(java.lang.String)>
<android.app.ActivityTransitionState: boolean isTransitionRunning()>
<android.graphics.ImageDecoder.AssetSource: android.graphics.ImageDecoder createImageDecoder()>
<android.content.pm.IPackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String,int)>
<android.view.View.CheckForLongPress: void setAnchor(float,float)>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: int[] preceding(int)>
<android.app.ActivityThread.ApplicationThread: void stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>
<android.graphics.ColorSpace.Lab: float getMinValue(int)>
<android.bluetooth.IBluetoothGattCallback: void onClientRegistered(int,int)>
<android.media.Utils: android.util.Range[] intersectSortedDistinctRanges(android.util.Range[],android.util.Range[])>
<android.graphics.ImageDecoder.InputStreamSource: android.graphics.ImageDecoder createImageDecoder()>
<android.widget.PopupWindow.PopupDecorView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.providers.settings.GlobalSettingsProto.Sms: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.view.IWindowManager: void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void resetAll()>
<android.media.SubtitleTrack.CueList.EntryIterator: void <init>(android.media.SubtitleTrack.CueList,java.util.SortedMap)>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.os.IInstalld: void rmdex(java.lang.String,java.lang.String)>
<android.hardware.usb.IUsbManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<android.bluetooth.le.IAdvertisingSetCallback: void onOwnAddressRead(int,int,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean isNetworkLoggingEnabled(android.content.ComponentName,java.lang.String)>
<android.location.ILocationManager: boolean geocoderIsPresent()>
<android.app.Activity.HostCallbacks: void onAttachFragment(android.app.Fragment)>
<android.content.res.StringBlock.Height: void <init>(int)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.widget.RemoteViews.TextViewSizeAction: void writeToParcel(android.os.Parcel,int)>
<android.net.Uri.HierarchicalUri: java.util.List getPathSegments()>
<android.content.res.XmlBlock.Parser: java.lang.String getClassAttribute()>
<android.location.ILocationManager: void unregisterGnssStatusCallback(android.location.IGnssStatusListener)>
<android.opengl.GLErrorWrapper: void glFinish()>
<android.net.LocalSocketImpl.SocketOutputStream: void write(int)>
<android.widget.Spinner.SpinnerPopup: void setPromptText(java.lang.CharSequence)>
<android.widget.GridLayout.Alignment: int getAlignmentValue(android.view.View,int,int)>
<android.bluetooth.IBluetoothSocketManager: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>
<android.app.ContextImpl: java.lang.String[] databaseList()>
<android.app.admin.IDevicePolicyManager: int getDeviceOwnerUserId()>
<android.security.KeyStore.ExportKeyPromise: void onFinished(android.security.keymaster.ExportResult)>
<android.app.ContextImpl: void reloadSharedPreferences()>
<android.gsi.GsiInstallParams: void writeToParcel(android.os.Parcel,int)>
<android.app.IActivityManager: boolean removeTask(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CTR: void <init>(int)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onCallAttributesChanged(android.telephony.CallAttributes)>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<android.util.Xml.Encoding: android.util.Xml.Encoding valueOf(java.lang.String)>
<android.bluetooth.le.IAdvertisingSetCallback: void onPeriodicAdvertisingDataSet(int,int)>
<android.view.ViewGroup.ViewLocationHolder: int compareTo(java.lang.Object)>
<android.widget.RemoteViews.Action: void visitUris(java.util.function.Consumer)>
<android.inputmethodservice.IInputMethodSessionWrapper.ImeInputEventReceiver: void finishedEvent(int,boolean)>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: void initialize(android.text.Spannable,android.text.Layout)>
<android.opengl.GLLogWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.view.ViewRootImpl.InputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.app.IWallpaperManager: int getHeightHint(int)>
<android.bluetooth.IBluetoothGatt: void serverReadPhy(int,java.lang.String)>
<android.widget.DayPickerPagerAdapter: void <init>(android.content.Context,int,int)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onSignalStrengthsChanged(android.telephony.SignalStrength)>
<android.gamedriver.GameDriverProto.BlacklistOrBuilder: com.android.framework.protobuf.ByteString getPackageNamesBytes(int)>
<android.providers.settings.SecureSettingsProto.Doze: void <init>(android.providers.settings.SecureSettingsProto)>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,int)>
<android.util.MapCollections.ValuesCollection: boolean retainAll(java.util.Collection)>
<android.util.jar.StrictJarVerifier.VerifierEntry: void write(int)>
<android.app.BackStackRecord: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>
<android.opengl.GLLogWrapper: void glClearStencil(int)>
<com.android.server.ForceAppStandbyTrackerProto.ExemptedPackage: void <init>(com.android.server.ForceAppStandbyTrackerProto)>
<android.app.IActivityManager: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>
<android.animation.PropertyValuesHolder.PointFToFloatArray: float[] convert(android.graphics.PointF)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<android.bluetooth.le.IScannerCallback: void onBatchScanResults(java.util.List)>
<android.view.IWindowManager: void setNavBarVirtualKeyHapticFeedbackEnabled(boolean)>
<android.content.ClipDataProto.Icon: void <init>(android.content.ClipDataProto)>
<android.view.IWindowSession: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>
<android.view.ViewRootImpl.W: void closeSystemDialogs(java.lang.String)>
<android.hardware.radio.TunerAdapter: boolean getMute()>
<com.android.internal.annotations.VisibleForTesting: com.android.internal.annotations.VisibleForTesting.Visibility visibility()>
<android.view.Choreographer.CallbackQueue: android.view.Choreographer.CallbackRecord extractDueCallbacksLocked(long)>
<android.app.IActivityManager: void signalPersistentProcesses(int)>
<android.widget.Editor.SuggestionsPopupWindow: void initContentView()>
<android.view.IWindowManager: void thawRotation()>
<android.widget.DigitalClock.FormatChangeObserver: void <init>(android.widget.DigitalClock)>
<android.widget.TimePicker.AbstractTimePickerDelegate: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.os.BugreportManager.DumpstateListener: void onError(int)>
<android.media.Cea608CCWidget.CCLineBox: void onDraw(android.graphics.Canvas)>
<android.opengl.GLLogWrapper: void glBlendEquation(int)>
<android.os.IUpdateEngine: void cancel()>
<android.os.PageTypeInfoProto.Block: void <init>(android.os.PageTypeInfoProto)>
<android.view.IWindowManager: void overridePendingAppTransitionRemote(android.view.RemoteAnimationAdapter,int)>
<android.content.pm.IPackageManager: boolean shouldShowRequestPermissionRationale(java.lang.String,java.lang.String,int)>
<android.permission.PermissionControllerManager.FileWriterTask: void onPostExecute(java.lang.Void)>
<android.bluetooth.IBluetooth: boolean setDiscoverableTimeout(int)>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode valueOf(java.lang.String)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void resetWhilePreservingInitState()>
<android.permission.PermissionControllerManager.FileReaderTask: void onCancelled()>
<android.os.IDumpstate: void cancelBugreport()>
<android.transition.Visibility.DisappearListener: void onAnimationEnd(android.animation.Animator)>
<android.widget.RemoteViews.SetOnClickResponse: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes.FloatKeyframes)>
<android.content.res.XmlBlock.Parser: int getDepth()>
<android.bluetooth.le.IAdvertisingSetCallback: void onAdvertisingParametersUpdated(int,int,int)>
<android.os.IInstalld: void clearAppProfiles(java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothGatt: void unregisterServer(int)>
<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData: void <init>(android.widget.RemoteViews,long)>
<android.os.IInstalld: void createOatDir(java.lang.String,java.lang.String)>
<android.hardware.biometrics.BiometricSourceType: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.IDevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<android.os.UidProto.JobCompletion.ReasonCount: void <init>(android.os.UidProto.JobCompletion)>
<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLSurfaceView.GLThread: void requestExitAndWait()>
<android.telecom.ConnectionServiceAdapterServant: com.android.internal.telecom.IConnectionServiceAdapter getStub()>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,int,java.util.ArrayList,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>
<android.app.admin.IDevicePolicyManager: java.lang.String getWifiMacAddress(android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)>
<android.media.Cea708CCWidget.CCWindowLayout: void initWindow(android.media.Cea708CCWidget.CCLayout,android.media.Cea708CCParser.CaptionWindow)>
<android.security.keymaster.KeymasterLongArgument: void <init>(int,long)>
<android.graphics.drawable.RippleComponent: void onBoundsChange()>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams hideReplyIcon(boolean)>
<android.webkit.LegacyErrorStrings: java.lang.String getString(int,android.content.Context)>
<android.app.Instrumentation.1ContextMenuRunnable: void run()>
<android.app.admin.IDevicePolicyManager: void setDefaultSmsApplication(android.content.ComponentName,java.lang.String)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.app.EnterTransitionCoordinator: void viewInstancesReady(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<android.widget.ViewFlipper.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(java.nio.IntBuffer)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,long,long,long,long,long)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyDataSetObserver: void onInvalidated()>
<android.app.admin.IDevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>
<android.bluetooth.IBluetoothPbapClient: int getPriority(android.bluetooth.BluetoothDevice)>
<android.widget.AutoCompleteTextView.MyWatcher: void afterTextChanged(android.text.Editable)>
<android.net.Uri.OpaqueUri: java.lang.String getHost()>
<android.security.keystore.IKeystoreService: int exportKey(android.security.keystore.IKeystoreExportKeyCallback,java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,int)>
<android.opengl.GLSurfaceView.DefaultContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
<android.content.pm.IPackageManager: boolean removeWhitelistedRestrictedPermission(java.lang.String,java.lang.String,int,int)>
<android.view.inspector.InspectableProperty.FlagEntry: java.lang.String name()>
<android.os.IInstalld: long[] getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[])>
<android.graphics.BlendMode: android.graphics.Xfermode getXfermode()>
<android.security.KeyStore.KeyCharacteristicsCallbackResult: void setKeyCharacteristics(android.security.keymaster.KeyCharacteristics)>
<android.app.IActivityManager: void setDumpHeapDebugLimit(java.lang.String,int,long,java.lang.String)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initKey(int,java.security.Key)>
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)>
<android.content.pm.IPackageManager: void removePermission(java.lang.String)>
<android.media.Utils: int binarySearchDistinctRanges(android.util.Range[],java.lang.Comparable)>
<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData: void set(android.widget.RemoteViews,long)>
<android.content.pm.IPackageManager: android.content.pm.ResolveInfo findPersistentPreferredActivity(android.content.Intent,int)>
<android.speech.RecognitionService.RecognitionServiceBinder: void <init>(android.speech.RecognitionService)>
<android.hardware.usb.IUsbManager: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>
<android.widget.Spinner.DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.os.IIncidentCompanion: void sendReportReadyBroadcast(java.lang.String,java.lang.String)>
<android.media.Cea708CCWidget.CCLayout: void setFontScale(float)>
<android.widget.RemoteViews.Action: boolean prefersAsyncApply()>
<android.view.WindowInsetsAnimationListener.InsetsAnimation: android.graphics.Insets getLowerBound()>
<android.providers.settings.GlobalSettingsProto.Tzinfo: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>
<android.media.ImageWriter.WriterSurfaceImage: void close()>
<android.media.IPlayer: void start()>
<android.apex.ApexInfoList: void writeToParcel(android.os.Parcel,int)>
<android.location.ILocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<android.view.IWindowManager: boolean isRotationFrozen()>
<android.media.WebVttRenderingWidget.RegionLayout: void prepForPrune()>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.GraphRunner getSyncRunner(android.filterfw.core.FilterContext)>
<android.util.MapCollections.ValuesCollection: boolean addAll(java.util.Collection)>
<android.widget.CalendarViewLegacyDelegate: void setUnfocusedMonthDateColor(int)>
<android.security.keystore.DelegatingX509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<android.webkit.FindAddress: java.lang.String findAddress(java.lang.String)>
<android.net.EventLogTags: void writeNtpSuccess(java.lang.String,long,long)>
<android.widget.SelectionActionModeHelper.TextClassificationAsyncTask: void onPostExecute(android.widget.SelectionActionModeHelper.SelectionResult)>
<android.media.MediaRouter.VolumeCallbackInfo: void <init>(android.media.MediaRouter.VolumeCallback,android.media.MediaRouter.RouteInfo)>
<android.widget.YearPickerView: void setRange(android.icu.util.Calendar,android.icu.util.Calendar)>
<android.security.keymaster.KeymasterBlobArgument: void writeValue(android.os.Parcel)>
<android.os.PowerManagerProto.WakeLock: void <init>(android.os.PowerManagerProto)>
<android.view.ViewRootImpl.TraversalRunnable: void run()>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>
<android.app.admin.IDevicePolicyManager: void clearApplicationUserData(android.content.ComponentName,java.lang.String,android.content.pm.IPackageDataObserver)>
<android.os.IInstalld: void destroyUserData(java.lang.String,int,int)>
<android.stats.mediametrics.Mediametrics.AudioThreadData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.preference.SeekBarVolumizer.Observer: void onChange(boolean)>
<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment)>
<android.opengl.GLSurfaceView.GLThreadManager: void threadExiting(android.opengl.GLSurfaceView.GLThread)>
<android.telephony.SmsMessage.NoEmsSupportConfig: void <init>(java.lang.String[])>
<android.sysprop.SetupWizardProperties: void theme(java.lang.String)>
<android.media.MediaFormat.FilteredMappedKeySet: java.lang.String mapKeyToItem(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>
<android.os.UidProto.Cpu: void <init>(android.os.UidProto)>
<android.opengl.GLErrorWrapper: void glDepthRangef(float,float)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,java.lang.String,int)>
<android.app.ActivityThread.ApplicationThread: void dumpHeap(boolean,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,android.os.RemoteCallback)>
<android.os.IVold: void fixateNewestUserKeyAuth(int)>
<android.widget.DayPickerPagerAdapter: boolean getBoundsForDate(android.icu.util.Calendar,android.graphics.Rect)>
<android.app.admin.IDevicePolicyManager: boolean generateKeyPair(android.content.ComponentName,java.lang.String,java.lang.String,android.security.keystore.ParcelableKeyGenParameterSpec,int,android.security.keymaster.KeymasterCertificateChain)>
<android.widget.GridLayout.Axis: boolean isOrderPreserved()>
<android.speech.RecognitionService.StartListeningArgs: void <init>(android.speech.RecognitionService,android.content.Intent,android.speech.IRecognitionListener,int)>
<android.os.IVold: void abortChanges(java.lang.String,boolean)>
<android.os.storage.IStorageManager: void lockUserKey(int)>
<android.app.admin.IDevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int,boolean)>
<android.opengl.GLErrorWrapper: void glPolygonOffset(float,float)>
<android.widget.YearPickerView.YearAdapter: java.lang.Integer getItem(int)>
<android.os.storage.IStorageManager: void startCheckpoint(int)>
<android.view.IWindowManager: void setDockedStackDividerTouchRegion(android.graphics.Rect)>
<android.widget.ScrollView.SavedState: java.lang.String toString()>
<android.text.SpannableStringInternal: void removeSpan(java.lang.Object,int)>
<android.widget.CalendarViewLegacyDelegate: boolean getBoundsForDate(long,android.graphics.Rect)>
<android.media.Cea708CCWidget.CCWindowLayout: void clear()>
<android.telephony.NetworkService.NetworkServiceHandler: void handleMessage(android.os.Message)>
<android.widget.AbsSpinner.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>
<android.telecom.InCallService.InCallServiceBinder: void onCallAudioStateChanged(android.telecom.CallAudioState)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void initKey(android.security.keystore.AndroidKeyStoreKey)>
<android.hardware.SystemSensorManager.SensorEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.animation.Keyframe.ObjectKeyframe: void setValue(java.lang.Object)>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)>
<android.media.PlayerBase.IAppOpsCallbackWrapper: void <init>(android.media.PlayerBase)>
<android.media.MediaCas.EventHandler: void <init>(android.media.MediaCas,android.os.Looper)>
<android.stats.devicepolicy.nano.StringList: android.stats.devicepolicy.nano.StringList[] emptyArray()>
<android.hardware.radio.TunerCallbackAdapter: void onCurrentProgramInfoChanged(android.hardware.radio.RadioManager.ProgramInfo)>
<android.app.ActivityManager.UidObserver: void onUidGone(int,boolean)>
<android.bluetooth.IBluetooth: int getMaxConnectedAudioDevices()>
<android.widget.DatePickerSpinnerDelegate: void setCurrentLocale(java.util.Locale)>
<android.inputmethodservice.IInputMethodWrapper.InputMethodSessionCallbackWrapper: void sessionCreated(android.view.inputmethod.InputMethodSession)>
<android.app.IActivityManager: void resizeStack(int,android.graphics.Rect,boolean,boolean,boolean,int)>
<android.content.ContentProvider.Transport: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)>
<android.widget.YearPickerView.YearAdapter: int getViewTypeCount()>
<android.widget.AbsListView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.widget.GridLayout.Axis: void setOrderPreserved(boolean)>
<android.opengl.EGLLogWrapper: boolean eglWaitGL()>
<android.app.IActivityManager: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<android.media.AudioManager.SafeWaitObject: void safeWait(long)>
<android.widget.RemoteViews.Action: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>
<android.widget.ActivityChooserView.Callbacks: boolean onLongClick(android.view.View)>
<android.widget.ActivityChooserModel.DefaultSorter: void sort(android.content.Intent,java.util.List,java.util.List)>
<android.os.IStatsManager: void unregisterPullerCallback(int,java.lang.String)>
<android.widget.Spinner.DialogPopup: android.graphics.drawable.Drawable getBackground()>
<android.gamedriver.GameDriverProto.Blacklist: java.util.List getPackageNamesList()>
<android.security.keystore.DelegatingX509Certificate: void checkValidity()>
<android.view.IWindowManager: void enableScreenIfNeeded()>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(com.android.framework.protobuf.CodedInputStream,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,float[],int)>
<android.inputmethodservice.IInputMethodSessionWrapper: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.app.ContextImpl: android.content.Context createDeviceProtectedStorageContext()>
<android.bluetooth.IBluetoothHidDevice: boolean connect(android.bluetooth.BluetoothDevice)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineDoFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: byte[] getIv()>
<android.widget.DatePicker.AbstractDatePickerDelegate: void resetAutofilledValue()>
<android.widget.CalendarViewMaterialDelegate: void <init>(android.widget.CalendarView,android.content.Context,android.util.AttributeSet,int,int)>
<android.text.Layout.SpannedEllipsizer: int getSpanEnd(java.lang.Object)>
<android.util.apk.WrappedX509Certificate: boolean hasUnsupportedCriticalExtension()>
<android.security.keystore.IKeystoreService: int abort(android.security.keystore.IKeystoreResponseCallback,android.os.IBinder)>
<android.hardware.SystemSensorManager.BaseEventQueue: int flush()>
<android.view.IWindowManager: void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean,int)>
<android.widget.RemoteViews.ViewGroupActionAdd: int getActionTag()>
<android.os.IVold: boolean needsCheckpoint()>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void onMeasure(int,int)>
<android.content.pm.IPackageManager: boolean hasUidSigningCertificate(int,byte[],int)>
<android.hardware.ICameraService: android.hardware.camera2.ICameraDeviceUser connectDevice(android.hardware.camera2.ICameraDeviceCallbacks,java.lang.String,java.lang.String,int)>
<android.app.admin.IDevicePolicyManager: void setCrossProfileContactsSearchDisabled(android.content.ComponentName,boolean)>
<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<android.security.KeyStore.KeyCharacteristicsPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.animation.BidirectionalTypeConverter.InvertedConverter: void <init>(android.animation.BidirectionalTypeConverter)>
<android.app.admin.SecurityLogTags: void writeSecurityKeyguardDismissAuthAttempt(int,int)>
<android.widget.ImageView.ImageDrawableCallback: void run()>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams summaryText(java.lang.CharSequence)>
<android.providers.settings.SystemSettingsProto.Volume: void <init>(android.providers.settings.SystemSettingsProto)>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType valueOf(java.lang.String)>
<android.webkit.WebSyncManager: void stopSync()>
<android.view.ViewRootImpl.SyntheticInputStage: void <init>(android.view.ViewRootImpl)>
<android.app.admin.SecurityLogTags: void writeSecurityKeyguardDisabledFeaturesSet(java.lang.String,int,int,int)>
<android.widget.ProgressBar.RefreshData: android.widget.ProgressBar.RefreshData obtain(int,int,boolean,boolean)>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()>
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)>
<android.bluetooth.IBluetoothA2dp: int getOptionalCodecsEnabled(android.bluetooth.BluetoothDevice)>
<android.location.BatchedLocationCallbackTransport: void unregisterFromServer()>
<android.animation.PathKeyframes.SimpleKeyframes: java.util.ArrayList getKeyframes()>
<android.opengl.GLErrorWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>
<android.speech.tts.PlaybackSynthesisCallback: int audioAvailable(byte[],int,int)>
<android.text.Layout.SpannedEllipsizer: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.app.ActivityOptions.HideWindowListener: void hideSharedElements()>
<android.bluetooth.IBluetoothA2dpSink: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothManager: boolean isEnabled()>
<android.location.GnssNavigationMessageCallbackTransport.ListenerTransport: void onGnssNavigationMessageReceived(android.location.GnssNavigationMessage)>
<android.widget.YearPickerView.YearAdapter: boolean isEnabled(int)>
<android.media.PlayerBase.IPlayerWrapper: void setVolume(float)>
<android.providers.settings.GlobalSettingsProto.Display: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.gamedriver.GameDriverProto.Blacklist.Builder: android.gamedriver.GameDriverProto.Blacklist.Builder addPackageNamesBytes(com.android.framework.protobuf.ByteString)>
<android.security.keystore.IKeystoreService: int listUidsOfAuthBoundKeys(java.util.List)>
<android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>
<android.providers.settings.SecureSettingsProto.Assist: void <init>(android.providers.settings.SecureSettingsProto)>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void write(byte[])>
<android.appwidget.AppWidgetHost.Callbacks: void <init>(android.os.Handler)>
<android.app.WallpaperManager.WallpaperSetCompletion: void waitForCompletion()>
<android.widget.DatePickerCalendarDelegate: void setCalendarViewShown(boolean)>
<android.widget.Gallery.FlingRunnable: void <init>(android.widget.Gallery)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getItemViewType(int)>
<android.bluetooth.IBluetooth: android.os.ParcelUuid[] getUuids()>
<android.content.pm.IPackageManager: int getUidForSharedUser(java.lang.String)>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4x(int,int,int,int,int)>
<android.stats.mediametrics.Mediametrics.ExtractorData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.opengl.GLLogWrapper: void glDepthMask(boolean)>
<android.app.LoadedApk.WarningContextClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>
<android.os.IInstalld: void installApkVerity(java.lang.String,java.io.FileDescriptor,int)>
<android.media.MediaScanner.MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>
<android.content.ContentProvider.Transport: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.lang.String,java.util.ArrayList)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Object)>
<android.widget.NumberPicker.InputTextFilter: char[] getAcceptedChars()>
<android.media.MediaPlayer.TimeProvider: void close()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.permission.PermissionControllerManager.RemoteService: android.permission.IPermissionController getServiceInterface(android.os.IBinder)>
<android.os.BugreportManager.DumpstateListener: void onFinished()>
<android.permission.PermissionControllerManager.PendingCountPermissionAppsRequest: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.graphics.BlendMode: android.graphics.PorterDuff.Mode blendModeToPorterDuffMode(android.graphics.BlendMode)>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)>
<android.app.Notification.TemplateBindResult: int getIconMarginEnd()>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist getDefaultInstance()>
<android.widget.Spinner.DialogPopup: void show(int,int)>
<android.view.ViewRootImpl.TakenSurfaceHolder: boolean isCreating()>
<android.content.pm.IPackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<android.security.keystore.DelegatingX509Certificate: java.util.Date getNotAfter()>
<android.os.IInstalld: void destroyAppProfiles(java.lang.String)>
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)>
<android.app.IActivityManager: void unregisterReceiver(android.content.IIntentReceiver)>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.content.res.XmlBlock.Parser: int getAttributeResourceValue(int,int)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: int getVirtualViewAt(float,float)>
<android.view.ViewRootImpl.W: void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>
<android.service.pm.PackageProto.SplitProto: void <init>(android.service.pm.PackageProto)>
<android.media.AsyncPlayer.Command: java.lang.String toString()>
<android.providers.settings.SecureSettingsProto.Tts: void <init>(android.providers.settings.SecureSettingsProto)>
<android.content.pm.IPackageManager: java.util.List getInstalledModules(int)>
<android.stats.devicepolicy.nano.StringList: android.stats.devicepolicy.nano.StringList mergeFrom(com.android.framework.protobuf.nano.CodedInputByteBufferNano)>
<android.content.SearchRecentSuggestionsProvider.DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<android.content.pm.IPackageManager: android.content.ComponentName getHomeActivities(java.util.List)>
<android.widget.CursorAdapter.ChangeObserver: void <init>(android.widget.CursorAdapter)>
<android.os.storage.IStorageManager: android.os.storage.StorageVolume[] getVolumeList(int,java.lang.String,int)>
<android.os.IVold: void fdeSetField(java.lang.String,java.lang.String)>
<android.view.ViewRootImpl.InputStage: void onWindowFocusChanged(boolean)>
<android.widget.Magnifier.InternalPopupWindow: void updateContent(android.graphics.Bitmap)>
<android.accounts.AccountManager.Future2Task: void done()>
<android.util.StatsLogInternal: int write(int,int,java.lang.String)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: void setSelectedDay(android.icu.util.Calendar)>
<android.bluetooth.IBluetoothAvrcpController: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.opengl.GLErrorWrapper: void glDrawTexiOES(int,int,int,int,int)>
<android.util.apk.WrappedX509Certificate: java.util.Set getCriticalExtensionOIDs()>
<android.security.keystore.DelegatingX509Certificate: boolean[] getKeyUsage()>
<android.hardware.LegacySensorManager.LmsFilter: float filter(long,float)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationEnd(android.animation.Animator)>
<android.bluetooth.IBluetooth: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
<android.media.ExifInterface.ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)>
<android.security.keystore.DelegatingX509Certificate: java.lang.String toString()>
<android.widget.Editor.ProcessTextIntentActionsHandler: boolean performAccessibilityAction(int)>
<android.preference.GenericInflater: void setFactory(android.preference.GenericInflater.Factory)>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>
<android.app.IActivityManager: void cancelTaskWindowTransition(int)>
<android.bluetooth.IBluetoothA2dp: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.widget.SpellChecker.SpellParser: void parse()>
<android.app.ITaskStackListener: void onActivityDismissingDockedStack()>
<android.util.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)>
<android.accounts.AccountManager.BaseFutureTask: void startTask()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void setKeymasterPurposeOverride(int)>
<android.net.Uri.StringUri: java.lang.String getEncodedFragment()>
<android.os.UidProto.Cpu.ByProcessState: void <init>(android.os.UidProto.Cpu)>
<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<android.content.pm.IPackageManager: void deletePreloadsFileCache()>
<android.app.admin.IDevicePolicyManager: boolean setStatusBarDisabled(android.content.ComponentName,boolean)>
<android.opengl.GLErrorWrapper: void glHint(int,int)>
<android.media.AudioManager.OnAmPortUpdateListener: void onServiceDied()>
<android.net.Uri.StringUri: java.lang.String getEncodedAuthority()>
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>
<android.animation.AnimatorSet.Node: void addParent(android.animation.AnimatorSet.Node)>
<android.hardware.camera2.ICameraDeviceUser: void deleteStream(int)>
<android.app.admin.IDevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>
<android.widget.SelectionActionModeHelper.SelectionTracker: void onOriginalSelection(java.lang.CharSequence,int,int,boolean)>
<android.app.ActivityThread.Idler: boolean queueIdle()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changeCameraCapabilities(android.telecom.VideoProfile.CameraCapabilities)>
<android.widget.Editor.PositionListener: void addSubscriber(android.widget.Editor.TextViewPositionListener,boolean)>
<android.content.res.XmlBlock.Parser: java.lang.String getInputEncoding()>
<android.app.IActivityManager: void updateLockTaskPackages(int,java.lang.String[])>
<android.util.apk.ZipUtils: boolean isZip64EndOfCentralDirectoryLocatorPresent(java.io.RandomAccessFile,long)>
<android.util.StatsLogInternal: int write(int,int,int,int,int,int,int,int,int,int,int,long,long,long,long,long,long,long,long,long)>
<android.widget.SelectionActionModeHelper.SelectionTracker: void onSelectionAction(int,int,int,java.lang.String,android.view.textclassifier.TextClassification)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void reset()>
<android.widget.DatePicker.AbstractDatePickerDelegate: android.view.autofill.AutofillValue getAutofillValue()>
<android.content.pm.IPackageManager: void resetRuntimePermissions()>
<android.speech.tts.AbstractEventLogger: void onEngineDataReceived()>
<android.widget.AbsSeekBar.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.widget.SuggestionsAdapter.ChildViewCache: void <init>(android.view.View)>
<android.widget.TextView.ChangeWatcher: void afterTextChanged(android.text.Editable)>
<android.location.GnssMeasurementCallbackTransport: boolean registerWithServer()>
<android.view.ViewRootImpl.TakenSurfaceHolder: void onRelayoutContainer()>
<android.os.IUpdateEngine: boolean verifyPayloadApplicable(java.lang.String)>
<android.widget.SimpleMonthView: void onDraw(android.graphics.Canvas)>
<android.widget.DayPickerView: void setMaxDate(long)>
<android.hardware.usb.IUsbManager: void setCurrentFunctions(long)>
<android.net.LocalSocketImpl: void create(int)>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result[] values()>
<android.opengl.GLSurfaceView.LogWriter: void close()>
<android.app.backup.FileBackupHelperBase: void performBackup_checked(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor,java.lang.String[],java.lang.String[])>
<android.app.FragmentManagerImpl.StartEnterTransitionListener: void completeTransaction()>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void run()>
<android.opengl.GLLogWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.RemoteViews.TextViewDrawableAction: android.widget.RemoteViews.Action initActionAsync(android.widget.RemoteViews.ViewTree,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.content.pm.IPackageManager: void clearPackagePersistentPreferredActivities(java.lang.String,int)>
<android.app.ActivityThread.ReceiverData: java.lang.String toString()>
<android.app.admin.IDevicePolicyManager: boolean setResetPasswordToken(android.content.ComponentName,byte[])>
<android.content.AsyncTaskLoader.LoadTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.view.View.MatchLabelForPredicate: boolean test(android.view.View)>
<android.content.res.XmlBlock.Parser: char[] getTextCharacters(int[])>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.view.View.ScrollabilityCache: void setFadeColor(int)>
<android.view.Choreographer.CallbackRecord: void run(long)>
<android.media.MediaRouter.CallbackInfo: void <init>(android.media.MediaRouter.Callback,int,int,android.media.MediaRouter)>
<android.net.LinkProperties.ProvisioningChange: android.net.LinkProperties.ProvisioningChange valueOf(java.lang.String)>
<android.util.StatsLogInternal: int write(int,byte[],int,int,int,long,long,int,int,int)>
<android.location.LocalListenerHelper: boolean registerWithServer()>
<android.app.IActivityManager: boolean isUserAMonkey()>
<android.widget.DateTimeView.ReceiverInfo: android.content.Context getApplicationContextIfAvailable(android.content.Context)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: long getItemId(int)>
<android.preference.EditTextPreference.SavedState: void <init>(android.os.Parcel)>
<android.app.DownloadManager.CursorTranslator: void <init>(android.database.Cursor,android.net.Uri,boolean)>
<android.view.MenuInflater.MenuState: void readItem(android.util.AttributeSet)>
<android.provider.Settings.Config: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>
<android.view.MenuInflater.MenuState: boolean hasAddedItem()>
<android.view.ViewRootImpl.NativePostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.widget.CalendarViewLegacyDelegate.ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM.NoPadding: void finalize()>
<android.media.Utils: int parseIntSafely(java.lang.Object,int)>
<android.location.GnssMeasurementCallbackTransport: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections)>
<android.app.ActivityThread.ApplicationThread: void attachAgent(java.lang.String)>
<android.widget.Editor.PinnedPopupWindow: int getVerticalLocalPosition(int)>
<android.gamedriver.GameDriverProto.Blacklist: int getSerializedSize()>
<android.os.BackTraceProto.Stack: void <init>(android.os.BackTraceProto)>
<android.util.apk.WrappedX509Certificate: java.security.Principal getSubjectDN()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int engineGetBlockSize()>
<android.bluetooth.IBluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.view.IWindowSession: void updateTapExcludeRegion(android.view.IWindow,int,android.graphics.Region)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<android.app.admin.SecurityLogTags: void writeSecurityPasswordHistoryLengthSet(java.lang.String,int,int,int)>
<android.app.ActivityTransitionCoordinator: boolean isViewsTransitionComplete()>
<android.webkit.JsDialogHelper.CancelListener: void onCancel(android.content.DialogInterface)>
<android.transition.Slide.CalculateSlideHorizontal: float getGoneY(android.view.ViewGroup,android.view.View,float)>
<android.animation.AnimationHandler.MyFrameCallbackProvider: void postCommitCallback(java.lang.Runnable)>
<android.app.admin.IDevicePolicyManager: void grantDeviceIdsAccessToProfileOwner(android.content.ComponentName,int)>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config[] values()>
<android.telephony.LocationAccessPolicy.LocationPermissionResult: android.telephony.LocationAccessPolicy.LocationPermissionResult valueOf(java.lang.String)>
<android.widget.GridLayout.Axis: void invalidateValues()>
<android.app.ActivityThread.AndroidOs: void unlink(java.lang.String)>
<android.view.RemoteAnimationDefinition.RemoteAnimationAdapterEntry: int describeContents()>
<android.bluetooth.IBluetoothHeadsetClient: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.app.admin.IDevicePolicyManager: void setEndUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.opengl.GLErrorWrapper: void glColor4x(int,int,int,int)>
<android.os.storage.IStorageEventListener: void onDiskDestroyed(android.os.storage.DiskInfo)>
<android.app.IActivityManager: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,int)>
<android.os.IStatsManager: void setBroadcastSubscriber(long,long,android.os.IBinder,java.lang.String)>
<android.app.ITaskStackListener: void onPinnedStackAnimationEnded()>
<android.app.ActivityOptions.HideWindowListener: void <init>(android.view.Window,android.app.ExitTransitionCoordinator)>
<android.app.admin.IDevicePolicyManager: android.os.Bundle getUserRestrictions(android.content.ComponentName)>
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>
<android.content.pm.IPackageManager: void setPermissionEnforced(java.lang.String,boolean)>
<android.hardware.input.IInputManager: boolean hasKeys(int,int,int[],boolean[])>
<android.widget.FastScroller: int getWidth()>
<android.app.admin.IDevicePolicyManager: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>
<android.widget.DayPickerView: void setMinDate(long)>
<android.app.ActivityThread.ApplicationThread: void scheduleCrash(java.lang.String)>
<android.view.LayoutInflater.FactoryMerger: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.AdditionalAuthenticationDataStream: android.security.keymaster.OperationResult update(byte[])>
<android.sysprop.CryptoProperties: java.util.Optional state()>
<android.util.XmlPullAttributes: int getAttributeNameResource(int)>
<android.app.ContextImpl: void setContentCaptureOptions(android.content.ContentCaptureOptions)>
<android.app.ActivityTransitionCoordinator: void transitionStarted()>
<android.sysprop.CryptoProperties.type_values: java.lang.String getPropValue()>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean addSensor(android.hardware.Sensor,int,int)>
<android.widget.SelectionActionModeHelper.TextClassificationAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.widget.Spinner.DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.providers.settings.GlobalSettingsProto.SoundTrigger: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setFocusedMonthDateColor(int)>
<android.content.pm.IPackageManager: void grantDefaultPermissionsToEnabledImsServices(java.lang.String[],int)>
<android.permission.PermissionControllerManager.FileWriterTask: java.lang.Void doInBackground(byte[][])>
<android.animation.PropertyValuesHolder.PointFToFloatArray: java.lang.Object convert(java.lang.Object)>
<android.graphics.ColorSpace.Model: int getComponentCount()>
<android.os.IIncidentReportStatusListener: void onReportSectionStatus(int,int)>
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: void onRemoteViewsLoaded(android.widget.RemoteViews,android.widget.RemoteViews.OnClickHandler,boolean)>
<com.android.internal.annotations.GuardedBy: java.lang.String[] value()>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value[] values()>
<android.os.UEventObserver.UEventThread: void addObserver(java.lang.String,android.os.UEventObserver)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>
<android.app.ActivityView.SurfaceCallback: void surfaceCreated(android.view.SurfaceHolder)>
<android.os.SystemProto.WakeupReason: void <init>(android.os.SystemProto)>
<android.os.FileObserver.ObserverThread: void onEvent(int,int,java.lang.String)>
<android.view.ViewGroup.TouchTarget: void recycle()>
<android.opengl.GLErrorWrapper: void glMultMatrixf(float[],int)>
<android.widget.AdapterView.SelectionNotifier: void run()>
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.security.IKeyChainService: int attestKey(java.lang.String,byte[],int[],android.security.keymaster.KeymasterCertificateChain)>
<android.bluetooth.IBluetoothAvrcpController: boolean setPlayerApplicationSetting(android.bluetooth.BluetoothAvrcpPlayerSettings)>
<android.bluetooth.IBluetoothManager: boolean isBleAppPresent()>
<android.bluetooth.IBluetoothHeadsetClient: java.util.List getConnectedDevices()>
<android.bluetooth.IBluetoothHidDevice: boolean unplug(android.bluetooth.BluetoothDevice)>
<android.graphics.Picture.PictureCanvas: void drawPicture(android.graphics.Picture)>
<android.widget.Spinner.DropDownAdapter: int getCount()>
<android.os.storage.IStorageManager: void partitionPublic(java.lang.String)>
<android.media.ExifInterface.ByteOrderedDataInputStream: java.lang.String readUTF()>
<android.os.UEventObserver.UEventThread: void removeObserver(android.os.UEventObserver)>
<android.accounts.AccountManager.AmsTask: void set(android.os.Bundle)>
<android.mtp.MtpPropertyList: int getCount()>
<android.app.IActivityManager: void killAllBackgroundProcesses()>
<android.os.SystemPropertiesProto.Camera: void <init>(android.os.SystemPropertiesProto)>
<android.opengl.GLErrorWrapper: void glGenTextures(int,int[],int)>
<android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)>
<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)>
<android.widget.ScrollView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.timezone.Utils: java.lang.String validateRulesVersion(java.lang.String,java.lang.String)>
<android.widget.TimePicker.InspectionCompanion: void readProperties(android.widget.TimePicker,android.view.inspector.PropertyReader)>
<android.app.NativeActivity.NativeContentView: void <init>(android.content.Context)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineUpdate(byte[],int,int,byte[],int)>
<android.widget.RemoteViews.BitmapCache: int getBitmapId(android.graphics.Bitmap)>
<android.content.ClipDataProto.Item: void <init>(android.content.ClipDataProto)>
<android.app.ActivityThread.ApplicationThread: void performDirectAction(android.os.IBinder,java.lang.String,android.os.Bundle,android.os.RemoteCallback,android.os.RemoteCallback)>
<android.providers.settings.GlobalSettingsProto.AirplaneMode: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)>
<android.app.FragmentManagerImpl.StartEnterTransitionListener: boolean isReady()>
<android.os.SystemPropertiesProto.Ro.BootImage: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.widget.YearPickerView.YearAdapter: long getItemId(int)>
<android.view.accessibility.WeakSparseArray: void remove(int)>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl valueOf(java.lang.String)>
<android.graphics.ColorSpace.RenderIntent: android.graphics.ColorSpace.RenderIntent valueOf(java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>
<android.bluetooth.IBluetoothGattServerCallback: void onServerRegistered(int,int)>
<android.app.BackStackRecord: void commitNow()>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void onUpdateSurface()>
<android.hardware.ICameraService: android.hardware.CameraInfo getCameraInfo(int)>
<android.util.apk.WrappedX509Certificate: java.lang.String getSigAlgName()>
<android.widget.AbsListView.AbsPositionScroller: void startWithOffset(int,int)>
<android.bluetooth.IBluetoothHidDevice: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.widget.RemoteViews.ViewContentNavigation: void writeToParcel(android.os.Parcel,int)>
<android.os.IVoldListener: void onVolumeMetadataChanged(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.webkit.WebSyncManager: void sync()>
<android.net.LocalSocketImpl: void finalize()>
<android.os.storage.IStorageManager: void fixateNewestUserKeyAuth(int)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setKeepScreenOn(boolean)>
<android.bluetooth.IBluetooth: int getScanMode()>
<android.bluetooth.le.IAdvertisingSetCallback: void onPeriodicAdvertisingEnabled(int,boolean,int)>
<android.hardware.camera2.ICameraDeviceCallbacks: void onRepeatingRequestError(long,int)>
<android.app.ExitTransitionCoordinator: void stop()>
<android.net.NetworkRequest.Type: android.net.NetworkRequest.Type[] values()>
<android.bluetooth.IBluetoothGatt: void disconnectAll()>
<android.telecom.InCallService.InCallServiceBinder: void silenceRinger()>
<android.widget.SearchView.UpdatableTouchDelegate: void setBounds(android.graphics.Rect,android.graphics.Rect)>
<android.app.IActivityManager: int getPackageProcessState(java.lang.String,java.lang.String)>
<android.content.res.XmlBlock.Parser: void require(int,java.lang.String,java.lang.String)>
<android.transition.ChangeTransform.PathAnimatorMatrix: void setValues(float[])>
<android.media.MediaPlayer.TimeProvider: void notifyAt(long,android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind valueOf(java.lang.String)>
<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.Spinner.DialogPopup: int getVerticalOffset()>
<android.util.RecurrenceRule.NonrecurringIterator: java.lang.Object next()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(byte)>
<android.util.apk.WrappedX509Certificate: java.math.BigInteger getSerialNumber()>
<android.app.IActivityManager: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.app.ContextImpl: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<android.security.keystore.IKeystoreService: int addAuthToken(byte[])>
<android.bluetooth.IBluetooth: boolean isLe2MPhySupported()>
<android.os.IVoldTaskListener: void onFinished(int,android.os.PersistableBundle)>
<android.os.IStatsManager: byte[] getMetadata(java.lang.String)>
<android.opengl.GLLogWrapper: void glAlphaFunc(int,float)>
<android.transition.ChangeTransform.Transforms: void restore(android.view.View)>
<android.app.backup.FileBackupHelperBase: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
<android.app.admin.IDevicePolicyManager: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)>
<android.util.MapCollections.EntrySet: boolean addAll(java.util.Collection)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainPosition(long)>
<android.widget.RemoteViews.TextViewDrawableAction: boolean prefersAsyncApply()>
<android.util.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)>
<android.app.admin.IDevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<android.widget.RemoteViews.ViewGroupActionRemove: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState[] values()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int getKeymasterPurposeOverride()>
<android.media.MediaFormat.UnprefixedKeySet: boolean keepKey(java.lang.String)>
<android.content.AsyncTaskLoader.LoadTask: void onPostExecute(java.lang.Object)>
<android.bluetooth.IBluetooth: boolean disable()>
<android.app.IActivityManager: void forceStopPackage(java.lang.String,int)>
<android.text.Layout.Ellipsizer: void <init>(java.lang.CharSequence)>
<android.widget.DatePickerCalendarDelegate: void updateDate(int,int,int)>
<android.widget.RemoteViews.ReflectionAction: void visitUris(java.util.function.Consumer)>
<android.net.Uri.StringUri: boolean isHierarchical()>
<android.net.lowpan.ILowpanInterface: byte[] getMacAddress()>
<android.app.admin.IDevicePolicyManager: void transferOwnership(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)>
<android.bluetooth.IBluetoothGatt: void unregAll()>
<android.hardware.input.IInputManager: void disableInputDevice(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CBC.NoPadding: void finalize()>
<android.content.pm.IPackageManager: java.lang.String getAttentionServicePackageName()>
<android.os.storage.IStorageManager: void fstrim(int,android.os.IVoldTaskListener)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.ExpandableListConnector: boolean isEnabled(int)>
<android.opengl.GLErrorWrapper: void glBindBuffer(int,int)>
<android.media.MediaCodec.BufferMap: void put(int,android.media.Image)>
<android.apex.IApexService: void deactivatePackage(java.lang.String)>
<android.text.DynamicLayout.ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.sysprop.VoldProperties: void decrypt(java.lang.String)>
<android.app.admin.IDevicePolicyManager: void notifyPendingSystemUpdate(android.app.admin.SystemUpdateInfo)>
<android.graphics.ImageDecoder.ResourceSource: android.graphics.ImageDecoder createImageDecoder()>
<android.opengl.GLSurfaceView.EglHelper: void <init>(java.lang.ref.WeakReference)>
<android.preference.MultiSelectListPreference.SavedState: void <init>(android.os.Parcel)>
<android.bluetooth.IBluetoothGatt: void connectionParameterUpdate(int,java.lang.String,int)>
<android.bluetooth.IBluetoothHidHost: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.util.StatsLogInternal: int write(int,java.lang.String,int,java.lang.String,int,int)>
<android.text.TextUtils.StringWithRemovedChars: java.lang.String toString()>
<android.widget.DatePickerCalendarDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.media.MediaDrm.ListenerWithExecutor: void <init>(java.util.concurrent.Executor,java.util.function.Consumer)>
<android.view.ViewRootImpl.W: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.util.MergedConfiguration,android.graphics.Rect,boolean,boolean,int,android.view.DisplayCutout.ParcelableWrapper)>
<android.app.admin.IDevicePolicyManager: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager: void reportSuccessfulPasswordAttempt(int)>
<android.app.ActivityTransitionState: void onStop()>
<android.view.IWindowManager: void setEventDispatching(boolean)>
<android.widget.DatePickerSpinnerDelegate: android.widget.CalendarView getCalendarView()>
<android.widget.GridLayout.Axis: int getMeasure(int)>
<android.stats.mediametrics.Mediametrics.RecorderData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.view.IWindowSession: void dragRecipientEntered(android.view.IWindow)>
<android.app.IActivityManager: void unstableProviderDied(android.os.IBinder)>
<android.util.StatsLogInternal: int write(int,byte[],int,int,int,int,int,long)>
<android.security.KeyStore.KeyCharacteristicsCallbackResult: android.security.keymaster.KeyCharacteristics getKeyCharacteristics()>
<android.os.IIncidentCompanion: void cancelAuthorization(android.os.IIncidentAuthListener)>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(com.android.framework.protobuf.ByteString)>
<android.widget.CalendarViewLegacyDelegate: int getWeekNumberColor()>
<android.util.apk.ApkSigningBlockUtils: java.lang.String getSignatureAlgorithmJcaKeyAlgorithm(int)>
<android.bluetooth.IBluetoothGatt: void configureMTU(int,java.lang.String,int)>
<android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>
<android.media.ImageReader.SurfaceImage: void setTimestamp(long)>
<android.app.WallpaperManager.FastBitmapDrawable: int getMinimumHeight()>
<android.providers.settings.SecureSettingsProto.Camera: void <init>(android.providers.settings.SecureSettingsProto)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int,boolean,boolean,boolean)>
<android.content.pm.IPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<android.content.res.XmlBlock: void <init>(byte[])>
<android.location.ILocationManager: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<android.telecom.InCallService.InCallServiceBinder: void bringToForeground(boolean)>
<android.text.TextUtils.Reverser: java.lang.CharSequence subSequence(int,int)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(com.android.framework.protobuf.ByteString,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.widget.SimpleMonthView: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
<com.android.internal.messages.nano.SystemMessageProto.SystemMessage: com.android.internal.messages.nano.SystemMessageProto.SystemMessage[] emptyArray()>
<android.os.storage.IStorageManager: void forgetAllVolumes()>
<android.widget.SimpleMonthView: void setDayOfWeekTextAppearance(int)>
<android.widget.RtlSpacingHelper: int getEnd()>
<android.content.pm.IPackageManager: java.lang.String getSystemTextClassifierPackageName()>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.telephony.NetworkService.INetworkServiceWrapper: void createNetworkServiceProvider(int)>
<android.opengl.GLLogWrapper: void glMultMatrixf(java.nio.FloatBuffer)>
<android.widget.CalendarViewMaterialDelegate: long getMinDate()>
<android.widget.Editor.SelectionModifierCursorController: void resetTouchOffsets()>
<android.view.IWindowManager: boolean clearWindowContentFrameStats(android.os.IBinder)>
<android.view.ViewOverlay.OverlayViewGroup: void add(android.graphics.drawable.Drawable)>
<android.bluetooth.IBluetoothGatt: void registerSync(android.bluetooth.le.ScanResult,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback)>
<android.util.StatsLogInternal: int write(int,int,int,int,int,int,int,int)>
<android.opengl.GLLogWrapper: void glLightModelf(int,float)>
<android.media.MediaCodec.BufferMap.CodecBuffer: void setImage(android.media.Image)>
<android.view.InputEventConsistencyVerifier.KeyState: android.view.InputEventConsistencyVerifier.KeyState obtain(int,int,int)>
<android.media.ImageWriter.WriterSurfaceImage.SurfacePlane: int getPixelStride()>
<android.app.timezone.Utils: java.lang.Object validateNotNull(java.lang.String,java.lang.Object)>
<android.content.pm.IPackageManager: boolean isUidPrivileged(int)>
<android.location.ILocationManager: boolean registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String)>
<android.app.admin.IDevicePolicyManager: void choosePrivateKeyAlias(int,android.net.Uri,java.lang.String,android.os.IBinder)>
<android.bluetooth.IBluetoothA2dp: int supportsOptionalCodecs(android.bluetooth.BluetoothDevice)>
<android.net.LocalSocketImpl: void shutdownOutput()>
<android.content.ContentResolver.CursorWrapperInner: void close()>
<android.providers.settings.SystemSettingsProto.Bluetooth: void <init>(android.providers.settings.SystemSettingsProto)>
<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>
<android.util.RecurrenceRule.RecurringIterator: boolean hasNext()>
<android.bluetooth.IBluetoothHearingAid: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.le.IAdvertisingSetCallback: void onAdvertisingSetStarted(int,int,int)>
<android.app.ContextImpl: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.util.MapCollections.ValuesCollection: boolean remove(java.lang.Object)>
<android.widget.DropDownListView.ResolveHoverRunnable: void cancel()>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,int[],int)>
<android.app.ActivityThread.CreateBackupAgentData: java.lang.String toString()>
<android.net.NetworkRecommendationProvider.ServiceWrapper: void requestScores(android.net.NetworkKey[])>
<android.view.GestureExclusionTracker: void setRootSystemGestureExclusionRects(java.util.List)>
<android.os.IInstalld: void moveCompleteApp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.app.Activity.HostCallbacks: int onGetWindowAnimations()>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.app.Instrumentation.ActivityGoing: boolean queueIdle()>
<android.net.Uri.PathPart: android.net.Uri.PathPart readFrom(android.os.Parcel)>
<android.os.AsyncTask.AsyncTaskResult: void <init>(android.os.AsyncTask,java.lang.Object[])>
<android.graphics.drawable.RippleComponent: void onTargetRadiusChanged(float)>
<android.content.EventLogTags: void writeContentUpdateSample(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.bluetooth.IBluetooth: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,float[],int)>
<android.bluetooth.IBluetoothGatt: void setPeriodicAdvertisingParameters(int,android.bluetooth.le.PeriodicAdvertisingParameters)>
<android.speech.tts.SynthesisPlaybackQueueItem: void onPeriodicNotification(android.media.AudioTrack)>
<android.widget.HorizontalScrollView.SavedState: java.lang.String toString()>
<android.content.pm.BaseParceledListSlice: android.os.Parcelable.Creator readParcelableCreator(android.os.Parcel,java.lang.ClassLoader)>
<android.providers.settings.SystemSettingsProto.Notification: void <init>(android.providers.settings.SystemSettingsProto)>
<android.view.GestureExclusionTracker: java.util.List getRootSystemGestureExclusionRects()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: boolean getShowWeekNumber()>
<android.widget.RelativeLayout.TopToBottomLeftToRightComparator: int compare(java.lang.Object,java.lang.Object)>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams title(java.lang.CharSequence)>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.graphics.ImageDecoder.Source: int computeDstDensity()>
<android.widget.TimePickerClockDelegate: boolean is24Hour()>
<android.opengl.GLLogWrapper: void glPointParameterf(int,float)>
<android.media.SubtitleTrack.CueList.EntryIterator: boolean hasNext()>
<android.bluetooth.IBluetooth: boolean isActivityAndEnergyReportingSupported()>
<android.widget.DayPickerViewPager: void onMeasure(int,int)>
<android.app.admin.IDevicePolicyManager: int getStorageEncryptionStatus(java.lang.String,int)>
<android.net.Uri.OpaqueUri: java.lang.String getQuery()>
<android.net.Uri.OpaqueUri: java.lang.String getPath()>
<android.security.keystore.IKeystoreService: int onUserAdded(int,int)>
<android.opengl.GLErrorWrapper: void glPopMatrix()>
<android.net.Uri.AbstractHierarchicalUri: int getPort()>
<android.providers.settings.GlobalSettingsProto.NitzUpdate: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.media.SubtitleTrack.Run: void removeAtEndTimeMs()>
<android.sysprop.ContactsProperties: java.util.Optional debug_scan_all_packages()>
<android.opengl.GLLogWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.gsi.IGsiService: int setGsiBootable(boolean)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.net.Uri.AbstractPart: void writeTo(android.os.Parcel)>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,float[],int)>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,java.nio.IntBuffer)>
<android.util.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)>
<android.speech.RecognitionService.RecognitionServiceBinder: void clearReference()>
<android.widget.DayPickerView: long getMinDate()>
<android.app.ActivityTransitionCoordinator.ContinueTransitionListener: void onTransitionStart(android.transition.Transition)>
<android.os.IVold: void lockUserKey(int)>
<android.preference.TwoStatePreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityTransitionCoordinator: void hideViews(java.util.ArrayList)>
<android.mtp.MtpStorageManager.MtpObjectObserver: void onEvent(int,java.lang.String)>
<android.bluetooth.IBluetooth: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>
<android.widget.LinearLayout.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.sax.RootElement.Handler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,int)>
<android.opengl.GLErrorWrapper: void glDrawTexfOES(float,float,float,float,float)>
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>
<android.content.ContentProvider.Transport: android.os.ICancellationSignal createCancellationSignal()>
<android.util.ContainerHelpers: int binarySearch(long[],int,long)>
<android.view.IWindowManager: boolean isSafeModeEnabled()>
<android.content.res.XmlBlock.Parser: int getAttributeListValue(int,java.lang.String[],int)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>
<android.content.pm.IPackageManager: int checkUidSignatures(int,int)>
<android.app.admin.IDevicePolicyManager: boolean isInputMethodPermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: int getMappedViewType(int)>
<android.app.admin.IDevicePolicyManager: boolean isPackageSuspended(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.app.LauncherActivity.ActivityAdapter: android.content.Intent intentForPosition(int)>
<android.bluetooth.IBluetooth: int getSimAccessPermission(android.bluetooth.BluetoothDevice)>
<android.widget.TextClock.InspectionCompanion: void readProperties(android.widget.TextClock,android.view.inspector.PropertyReader)>
<android.app.admin.IDevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>
<android.widget.LinearLayout.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.content.SyncAdaptersCache.MySerializer: void writeAsXml(android.content.SyncAdapterType,org.xmlpull.v1.XmlSerializer)>
<android.widget.AbsListView.InputConnectionWrapper: boolean setSelection(int,int)>
<android.permission.PermissionControllerManager.PendingGetPermissionUsagesRequest: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.net.Uri.HierarchicalUri: java.lang.String toString()>
<android.opengl.GLErrorWrapper: void glGetPointerv(int,java.nio.Buffer[])>
<android.mtp.MtpStorageManager.MtpOperation: android.mtp.MtpStorageManager.MtpOperation valueOf(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.app.SharedPreferencesImpl: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.opengl.GLErrorWrapper: void glColor4f(float,float,float,float)>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,int[],int)>
<android.app.ActivityThread.ApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int,int)>
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.app.admin.IDevicePolicyManager: void setRequiredStrongAuthTimeout(android.content.ComponentName,long,boolean)>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,int[],int)>
<android.view.IWindowManager: void setShouldShowIme(int,boolean)>
<android.view.ViewRootImpl.InputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.media.SubtitleTrack.CueList: long nextTimeAfter(long)>
<android.bluetooth.IBluetoothMapClient: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.security.keystore.KeyStoreCryptoOperationUtils: java.security.InvalidKeyException getInvalidKeyExceptionForInit(android.security.KeyStore,android.security.keystore.AndroidKeyStoreKey,int)>
<android.animation.Keyframe.ObjectKeyframe: java.lang.Object getValue()>
<android.bluetooth.IBluetoothManager: int updateBleAppCount(android.os.IBinder,boolean,java.lang.String)>
<android.security.keystore.IKeystoreService: int del(java.lang.String,int)>
<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<android.widget.CompoundButton.InspectionCompanion: void readProperties(android.widget.CompoundButton,android.view.inspector.PropertyReader)>
<android.os.AsyncTask.InternalHandler: void handleMessage(android.os.Message)>
<android.graphics.drawable.RippleForeground: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float,boolean)>
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)>
<android.media.ImageReader.SurfaceImage: int getFormat()>
<android.accounts.AccountManager.AmsTask: android.accounts.AccountManagerFuture start()>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void addViewRect(android.view.View.AttachInfo.InvalidateInfo)>
<android.util.apk.VerbatimX509Certificate: boolean equals(java.lang.Object)>
<android.bluetooth.IBluetoothHidHost: boolean connect(android.bluetooth.BluetoothDevice)>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,int[],int)>
<android.os.storage.IStorageManager: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>
<android.widget.TimePickerSpinnerDelegate: int getBaseline()>
<android.permission.PermissionControllerManager.FileReaderTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.app.ActivityTransitionState: void startPostponedEnterTransition()>
<android.widget.Editor.SpanController: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.media.MediaPlayer.TimeProvider: void onPaused(boolean)>
<android.text.SpannableStringInternal: char charAt(int)>
<android.preference.ListPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.DatePickerCalendarDelegate: void setFirstDayOfWeek(int)>
<android.app.ActivityThread.ApplicationThread: void dumpMemInfoProto(android.os.ParcelFileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,boolean,java.lang.String[])>
<android.bluetooth.IBluetoothGatt: void clientConnect(int,java.lang.String,boolean,int,boolean,int)>
<android.bluetooth.IBluetooth: int getRemoteClass(android.bluetooth.BluetoothDevice)>
<android.hardware.ICameraService: android.hardware.CameraStatus[] addListener(android.hardware.ICameraServiceListener)>
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer getByteBuffer(java.nio.ByteBuffer,int)>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int compareTo(java.lang.Object)>
<android.os.IDumpstateListener: void onProgressUpdated(int)>
<android.bluetooth.IBluetoothGatt: void sendNotification(int,java.lang.String,int,boolean,byte[])>
<android.widget.AutoCompleteTextView.PopupDataSetObserver: void onChanged()>
<android.widget.TimePickerClockDelegate: void setMinute(int)>
<android.bluetooth.IBluetoothHeadsetPhone: void updateBtHandsfreeAfterRadioTechnologyChange()>
<android.view.IWindowManager: void setRemoveContentMode(int,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int getAdditionalEntropyAmountForFinish()>
<android.widget.Editor.SelectionModifierCursorController: boolean isActive()>
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: int[] following(int)>
<android.bluetooth.IBluetoothHearingAid: long getHiSyncId(android.bluetooth.BluetoothDevice)>
<android.net.Uri.OpaqueUri: android.net.Uri.Builder buildUpon()>
<android.bluetooth.IBluetoothHeadsetClient: boolean terminateCall(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHeadsetClientCall)>
<android.bluetooth.IBluetoothAvrcpController: java.util.List getConnectedDevices()>
<android.os.IVold: java.lang.String fdeGetField(java.lang.String)>
<android.opengl.EGLLogWrapper: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<android.widget.ProgressBar.AccessibilityEventSender: void run()>
<android.view.ViewRootImpl.NativePreImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.app.servertransaction.ObjectPool: void recycle(android.app.servertransaction.ObjectPoolItem)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.widget.NumberPicker.TwoDigitFormatter: java.lang.String format(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineSetPadding(java.lang.String)>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void ensureNoConnection()>
<android.app.IActivityManager: boolean isUidActive(int,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName,int)>
<android.util.Log.ImmediateLogWriter: int getWritten()>
<com.android.server.ResettableTimeout: void on(boolean)>
<android.widget.TimePicker.AbstractTimePickerDelegate.SavedState: int getCurrentItemShowing()>
<android.net.LocalSocketImpl: void sendUrgentData(int)>
<android.app.ContextImpl: int getDisplayId()>
<android.widget.FrameLayout.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.media.MediaFormat.UnprefixedKeySet: java.lang.String mapItemToKey(java.lang.String)>
<android.widget.TimePickerSpinnerDelegate: int getHour()>
<android.view.ViewRootImpl.NativePreImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.bluetooth.IBluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>
<android.os.SystemProto.PowerUseItem: void <init>(android.os.SystemProto)>
<android.bluetooth.IBluetoothHidDevice: boolean replyReport(android.bluetooth.BluetoothDevice,byte,byte,byte[])>
<android.app.ExitTransitionCoordinator: void clearState()>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.Spinner.DropDownAdapter: boolean hasStableIds()>
<android.widget.ExpandableListConnector: void <init>(android.widget.ExpandableListAdapter)>
<android.net.Uri.OpaqueUri: java.lang.String getAuthority()>
<android.view.IWindowManager: void setSwitchingUser(boolean)>
<android.opengl.GLErrorWrapper: void glPushMatrix()>
<android.security.IKeyChainService: boolean removeKeyPair(java.lang.String)>
<android.animation.Keyframe.IntKeyframe: android.animation.Keyframe clone()>
<android.view.ViewRootImpl.ConsumeBatchedInputRunnable: void run()>
<android.widget.CalendarViewLegacyDelegate: void setMinDate(long)>
<android.opengl.GLLogWrapper: void glHint(int,int)>
<android.speech.SpeechRecognizer.InternalListener: void onEndOfSpeech()>
<android.os.IInstalld: void createUserData(java.lang.String,int,int,int)>
<android.net.Uri.StringUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.app.ActivityThread.ApplicationThread: void clearDnsCache()>
<android.os.IVold: boolean supportsFileCheckpoint()>
<android.speech.tts.EventLogTags: void writeTtsV2SpeakSuccess(java.lang.String,int,int,int,java.lang.String,long,long,long)>
<android.app.IActivityManager: boolean isInLockTaskMode()>
<android.widget.YearPickerView.YearAdapter: void setRange(android.icu.util.Calendar,android.icu.util.Calendar)>
<android.bluetooth.IBluetooth: int getRemoteType(android.bluetooth.BluetoothDevice)>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,int,int,java.lang.String,int,java.lang.String,int)>
<android.provider.Settings.NameValueCache: void clearGenerationTrackerForTest()>
<android.preference.GenericInflater: java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet)>
<android.telephony.NetworkService.INetworkServiceWrapper: void registerForNetworkRegistrationInfoChanged(int,android.telephony.INetworkServiceCallback)>
<android.widget.PopupWindow.PopupBackgroundView: int[] onCreateDrawableState(int)>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State valueOf(java.lang.String)>
<android.permission.PermissionControllerManager.PendingRestoreDelayedRuntimePermissionBackup: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.media.Cea708CCWidget.CCWindowLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.Tokenizer.DataTokenizer: android.media.Tokenizer.TokenizerPhase start()>
<android.bluetooth.IBluetoothGatt: void registerServer(android.os.ParcelUuid,android.bluetooth.IBluetoothGattServerCallback)>
<android.opengl.GLLogWrapper: void glRotatex(int,int,int,int)>
<android.preference.TwoStatePreference.SavedState: void <init>(android.os.Parcelable)>
<android.util.MapCollections.ValuesCollection: java.util.Iterator iterator()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void resetAll()>
<android.widget.DatePickerSpinnerDelegate: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.apex.ApexSessionInfo: void readFromParcel(android.os.Parcel)>
<android.telecom.InCallService.InCallServiceBinder: void onHandoverFailed(java.lang.String,int)>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode[] values()>
<android.widget.DatePicker.AbstractDatePickerDelegate: void setAutoFillChangeListener(android.widget.DatePicker.OnDateChangedListener)>
<android.content.AsyncTaskLoader.LoadTask: void onCancelled(java.lang.Object)>
<android.view.IWindowManager: int getNavBarPosition(int)>
<android.net.LocalSocketImpl: void close()>
<android.security.keystore.IKeystoreService: int update(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[])>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: android.view.View getView()>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: void <init>(android.renderscript.RenderScript)>
<android.webkit.JsDialogHelper.CancelListener: void onClick(android.content.DialogInterface,int)>
<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>
<android.opengl.GLLogWrapper: void glTexGeni(int,int,int)>
<android.app.ContextImpl: java.lang.String getPackageCodePath()>
<android.hardware.LegacySensorManager: void unregisterListener(android.hardware.SensorListener,int)>
<android.app.AlarmManager.ListenerWrapper: void doAlarm(android.app.IAlarmCompleteListener)>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,java.nio.IntBuffer)>
<android.app.EnterTransitionCoordinator: void namedViewsReady(java.util.ArrayList,java.util.ArrayList)>
<android.util.Base64.Coder: int maxOutputSize(int)>
<android.app.SystemServiceRegistry.StaticServiceFetcher: java.lang.Object createService()>
<android.speech.tts.AudioPlaybackHandler: void enqueue(android.speech.tts.PlaybackQueueItem)>
<android.os.UidProto.UserActivity: void <init>(android.os.UidProto)>
<android.telephony.TelephonyManager.MultiSimVariants: android.telephony.TelephonyManager.MultiSimVariants valueOf(java.lang.String)>
<android.widget.SmartSelectSprite.RectangleList: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor clear()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetAll()>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: boolean isCreated()>
<android.graphics.ImageDecoder.ResourceSource: int getDensity()>
<android.bluetooth.IBluetoothHeadset: boolean disconnectAudio()>
<android.text.SpannableStringInternal: java.lang.String toString()>
<android.providers.settings.GlobalSettingsProto.DynamicPowerSavings: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.bluetooth.IBluetoothHidHost: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int engineGetOutputSize(int)>
<android.widget.CalendarViewLegacyDelegate: void setSelectedWeekBackgroundColor(int)>
<android.filterfw.core.GenerateProgramPort: boolean hasDefault()>
<android.accounts.AccountManager.AmsTask: void doWork()>
<android.content.pm.IPackageManager: void addOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<android.widget.ExpandableListConnector: void setExpandableListAdapter(android.widget.ExpandableListAdapter)>
<android.hardware.usb.IUsbManager: long getCurrentFunctions()>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon)>
<android.speech.tts.PlaybackSynthesisCallback: int start(int,int,int)>
<android.os.SystemProto.PhoneSignalStrength: void <init>(android.os.SystemProto)>
<android.app.admin.IDevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>
<android.util.apk.ApkSigningBlockUtils: android.util.Pair findApkSigningBlock(java.io.RandomAccessFile,long)>
<android.os.storage.IStorageManager: void forgetVolume(java.lang.String)>
<android.app.ContextImpl: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<android.opengl.GLErrorWrapper: void glDrawArrays(int,int,int)>
<android.view.ViewRootImpl.HighContrastTextManager: void onHighTextContrastStateChanged(boolean)>
<android.widget.DatePickerCalendarDelegate: boolean isEnabled()>
<android.view.View.CheckForTap: void run()>
<android.view.IWindowManager: void unregisterDisplayFoldListener(android.view.IDisplayFoldListener)>
<android.widget.Spinner.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.media.Cea708CCWidget.CCLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>
<android.app.AlarmManager.ListenerWrapper: void <init>(android.app.AlarmManager,android.app.AlarmManager.OnAlarmListener)>
<com.android.server.IntentResolverProto.ArrayMapEntry: void <init>(com.android.server.IntentResolverProto)>
<android.widget.RemoteViews.SetIntTagAction: int getActionTag()>
<android.widget.Magnifier.InternalPopupWindow: void destroy()>
<android.hardware.input.IInputManager: int isInTabletMode()>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>
<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void setIntValues(int[])>
<android.media.Utils: android.util.Range parseRationalRange(java.lang.Object,android.util.Range)>
<android.app.admin.IDevicePolicyManager: boolean isBackupServiceEnabled(android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager: void setDelegatedScopes(android.content.ComponentName,java.lang.String,java.util.List)>
<android.content.res.DrawableCache: boolean shouldInvalidateEntry(android.graphics.drawable.Drawable.ConstantState,int)>
<android.hardware.radio.Utils: void writeSet(android.os.Parcel,java.util.Set)>
<android.location.ILocationManager: void removeGnssBatchingCallback()>
<android.widget.ActionMenuPresenter.OverflowMenuButton: void <init>(android.widget.ActionMenuPresenter,android.content.Context)>
<android.bluetooth.IBluetooth: boolean setLeIoCapability(int)>
<android.util.Xml.Encoding: android.util.Xml.Encoding[] values()>
<android.widget.HorizontalScrollView.SavedState: void <init>(android.os.Parcel)>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult()>
<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String,int)>
<android.app.IActivityManager: void setRenderThread(int)>
<android.drm.DrmManagerClient.InfoHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>
<android.widget.ToggleButton.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.os.TokenWatcher.Death: void binderDied()>
<android.net.Uri.OpaqueUri: java.lang.String getSchemeSpecificPart()>
<android.app.FragmentState: android.app.Fragment instantiate(android.app.FragmentHostCallback,android.app.FragmentContainer,android.app.Fragment,android.app.FragmentManagerNonConfig)>
<android.os.IVold: void fdeClearPassword()>
<android.sysprop.ContactsProperties: java.util.Optional thumbnail_size()>
<android.animation.Animator.AnimatorConstantState: java.lang.Object newInstance()>
<android.app.admin.IDevicePolicyManager: void setUserProvisioningState(int,int)>
<android.stats.devicepolicy.nano.StringList: android.stats.devicepolicy.nano.StringList parseFrom(com.android.framework.protobuf.nano.CodedInputByteBufferNano)>
<android.widget.AbsListView.MultiChoiceModeWrapper: void onDestroyActionMode(android.view.ActionMode)>
<android.gamedriver.GameDriverProto.Blacklist.Builder: android.gamedriver.GameDriverProto.Blacklist.Builder clearVersionCode()>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.location.CountryDetector.ListenerTransport: void onCountryDetected(android.location.Country)>
<android.util.StatsLogInternal: int write(int,int,int,long,boolean)>
<android.widget.RtlSpacingHelper: void setAbsolute(int,int)>
<android.opengl.GLSurfaceView.GLThread: void queueEvent(java.lang.Runnable)>
<android.os.IInstalld: void migrateAppData(java.lang.String,java.lang.String,int,int)>
<android.content.pm.IPackageManager: void setUpdateAvailable(java.lang.String,boolean)>
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment)>
<android.net.lowpan.ILowpanInterface: void form(android.net.lowpan.LowpanProvision)>
<android.app.admin.IDevicePolicyManager: void reportPasswordChanged(int)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createSRational(android.media.ExifInterface.Rational[],java.nio.ByteOrder)>
<android.permission.PermissionControllerManager.PendingRestoreDelayedRuntimePermissionBackup: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.KeyEventCallbackAdaptor: boolean onKeyDown(int,android.view.KeyEvent)>
<android.opengl.GLLogWrapper: void glLightxv(int,int,java.nio.IntBuffer)>
<android.os.storage.IStorageManager: void unregisterListener(android.os.storage.IStorageEventListener)>
<android.opengl.EGLLogWrapper: int eglGetError()>
<android.app.SharedPreferencesImpl.EditorImpl: void apply()>
<android.net.lowpan.ILowpanInterface: boolean isConnected()>
<android.app.admin.IDevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<android.hardware.camera2.ICameraDeviceUser: void tearDown(int)>
<android.app.admin.IDevicePolicyManager: boolean isSystemOnlyUser(android.content.ComponentName)>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glFlush()>
<android.inputmethodservice.IInputMethodSessionWrapper: void <init>(android.content.Context,android.view.inputmethod.InputMethodSession,android.view.InputChannel)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: java.lang.String opmodeToString(int)>
<android.app.ActivityThread.ApplicationThread: void dumpProvider(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String[])>
<android.app.IActivityManager: int getLaunchedFromUid(android.os.IBinder)>
<android.app.ActivityThread.ProviderKey: void <init>(java.lang.String,int)>
<android.net.Uri.StringUri: java.lang.String toString()>
<android.speech.tts.AudioPlaybackQueueItem: void run()>
<android.media.MediaScanner.MyMediaScannerClient: java.lang.String getGenreName(java.lang.String)>
<android.widget.SuggestionsAdapter: void close()>
<android.os.SystemPropertiesProto.PmDexopt: void <init>(android.os.SystemPropertiesProto)>
<android.opengl.GLSurfaceView.LogWriter: void flush()>
<android.net.Uri.StringUri: java.lang.String getQuery()>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi.PSSPadding: int getAdditionalEntropyAmountForSign()>
<android.widget.RemoteViews.ViewGroupActionAdd: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.ListView.ArrowScrollFocusResult: int getSelectedPosition()>
<android.media.Utils: int divUp(int,int)>
<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.content.pm.ApplicationInfoProto.Version: void <init>(android.content.pm.ApplicationInfoProto)>
<android.widget.Spinner.SpinnerPopup: void dismiss()>
<android.widget.Spinner.DropdownPopup: void show(int,int)>
<android.graphics.RenderNode.CompositePositionUpdateListener: void <init>(android.graphics.RenderNode.PositionUpdateListener[])>
<android.animation.PathKeyframes.SimpleKeyframes: java.util.List getKeyframes()>
<android.app.ContextImpl: void unbindService(android.content.ServiceConnection)>
<android.speech.SpeechRecognizer.InternalListener: void onPartialResults(android.os.Bundle)>
<android.text.PackedObjectVector: void <init>(int)>
<android.opengl.GLSurfaceView.ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.os.IVold: void onSecureKeyguardStateChanged(boolean)>
<android.app.IActivityManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>
<android.widget.DayPickerPagerAdapter: void setSelectedDay(android.icu.util.Calendar)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)>
<android.content.res.XmlBlock.Parser: int getIdAttributeResourceValue(int)>
<android.util.StatsLogInternal: int write(int)>
<android.providers.settings.GlobalSettingsProto.Sounds: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.content.pm.IPackageManager: boolean isOnlyCoreApps()>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,int[],int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getActivityCount()>
<android.hardware.usb.IUsbManager: boolean hasDefaults(java.lang.String,int)>
<android.net.Uri.AbstractPart: java.lang.String getDecoded()>
<android.app.IActivityManager: void stopAppSwitches()>
<android.widget.Filter.RequestHandler: void <init>(android.widget.Filter,android.os.Looper)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean setFrame(int,int,int,int)>
<android.widget.Editor.ErrorPopup: void update(int,int,int,int,boolean)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedUserInfo()>
<android.security.IKeyChainService: boolean isUserSelectable(java.lang.String)>
<android.app.ContextImpl: android.app.ContextImpl createSystemUiContext(android.app.ContextImpl)>
<android.bluetooth.IBluetoothHidDeviceCallback: void onInterruptData(android.bluetooth.BluetoothDevice,byte,byte[])>
<android.database.ContentObserver.Transport: void releaseContentObserver()>
<android.media.MediaScanner.MediaBulkDeleter: void flush()>
<android.app.ContextImpl: int getUserId()>
<android.os.IVoldListener: void onVolumeStateChanged(java.lang.String,int)>
<android.widget.DatePickerSpinnerDelegate: android.icu.util.Calendar getMinDate()>
<android.opengl.GLErrorWrapper: void glShadeModel(int)>
<android.view.IWindowManager: void dontOverrideDisplayInfo(int)>
<android.hardware.radio.TunerCallbackAdapter: void onAntennaState(boolean)>
<android.widget.CalendarViewMaterialDelegate: long getMaxDate()>
<android.widget.DayPickerView: void onRangeChanged()>
<android.widget.ActionMenuView.MenuBuilderCallback: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>
<android.bluetooth.IBluetooth: boolean enable()>
<android.media.Cea708CCWidget.CCWindowLayout: void setWindowAttr(android.media.Cea708CCParser.CaptionWindowAttr)>
<android.app.admin.IDevicePolicyManager: void reportKeyguardDismissed(int)>
<android.bluetooth.IBluetooth: void requestActivityInfo(android.os.ResultReceiver)>
<android.os.IVold: void initUser0()>
<android.os.IInstalld: boolean compileLayouts(java.lang.String,java.lang.String,java.lang.String,int)>
<android.preference.MultiCheckPreference.SavedState: void <init>(android.os.Parcel)>
<android.content.res.XmlBlock.Parser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.util.StatsLogInternal: int write(int,int,int,boolean)>
<android.providers.settings.SecureSettingsProto.Screensaver: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.Spinner.DialogPopup: void setPromptText(java.lang.CharSequence)>
<android.os.GraphicsEnvironment.OpenGlDriverChoice: android.os.GraphicsEnvironment.OpenGlDriverChoice valueOf(java.lang.String)>
<android.widget.AbsListView.AbsPositionScroller: void start(int)>
<android.view.IWindowSession: void updateDisplayContentLocation(android.view.IWindow,int,int,int)>
<android.widget.Editor.InsertionHandleView: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey: boolean equals(java.lang.Object)>
<android.app.IActivityManager: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,int[],int)>
<android.mtp.MtpPropertyGroup: int getPropertyList(android.content.ContentProviderClient,java.lang.String,android.mtp.MtpStorageManager.MtpObject,android.mtp.MtpPropertyList)>
<android.app.ContextImpl: android.content.ComponentName startForegroundServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.bluetooth.le.BluetoothLeUtils: boolean equals(android.util.SparseArray,android.util.SparseArray)>
<android.widget.DatePickerSpinnerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.speech.tts.AudioPlaybackHandler: void quit()>
<android.view.IWindowManager: android.view.IWindowSession openSession(android.view.IWindowSessionCallback)>
<android.bluetooth.IBluetoothMap: java.util.List getConnectedDevices()>
<android.media.MediaFormat.FilteredMappedKeySet: void <init>(android.media.MediaFormat)>
<android.widget.TabHost.LabelIndicatorStrategy: android.view.View createIndicatorView()>
<android.widget.CalendarViewMaterialDelegate: int getFirstDayOfWeek()>
<android.app.IActivityManager: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>
<android.bluetooth.IBluetooth: void onLeServiceUp()>
<android.app.SystemServiceRegistry: java.lang.String getSystemServiceName(java.lang.Class)>
<android.util.StatsLogInternal: int write(int,int,boolean,int,int)>
<android.hardware.radio.TunerAdapter: boolean startBackgroundScan()>
<android.app.admin.IDevicePolicyManager: void reportKeyguardSecured(int)>
<android.os.PsProto.Process: void <init>(android.os.PsProto)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int,long,float,java.lang.String,boolean,int,byte[])>
<android.app.ActivityTransitionCoordinator: void showViews(java.util.ArrayList,boolean)>
<android.os.MemoryFile.MemoryInputStream: int read(byte[],int,int)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void <init>(android.widget.RemoteViewsService.RemoteViewsFactory,boolean)>
<android.bluetooth.IBluetoothA2dpSink: int getPriority(android.bluetooth.BluetoothDevice)>
<android.widget.GridLayout.PackedMap: java.lang.Object getValue(int)>
<android.widget.CalendarViewMaterialDelegate: void setDateTextAppearance(int)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
<android.widget.YearPickerView: void setOnYearSelectedListener(android.widget.YearPickerView.OnYearSelectedListener)>
<android.view.ViewRootImpl.W: void windowFocusChanged(boolean,boolean)>
<android.app.Notification.BuilderRemoteViews: void <init>(android.os.Parcel)>
<android.widget.StackView.StackSlider: void <init>(android.widget.StackView)>
<android.widget.Editor.SelectionModifierCursorController: void enterDrag(int)>
<android.telecom.InCallService.InCallServiceBinder: void setPostDial(java.lang.String,java.lang.String)>
<android.opengl.GLErrorWrapper: void glOrthof(float,float,float,float,float,float)>
<android.widget.RemoteViews.ViewGroupActionAdd: void writeToParcel(android.os.Parcel,int)>
<android.providers.settings.GlobalSettingsProto.Webview: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.util.MapCollections: int colIndexOfKey(java.lang.Object)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder setBlacklists(int,android.gamedriver.GameDriverProto.Blacklist.Builder)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: boolean getShowDefaultActivity()>
<android.telecom.InCallService.InCallServiceBinder: void setInCallAdapter(com.android.internal.telecom.IInCallAdapter)>
<android.text.Layout.Ellipsizer: int length()>
<android.opengl.GLLogWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.media.ExifInterface.ByteOrderedDataInputStream: byte readByte()>
<android.widget.StackView.StackSlider: void <init>(android.widget.StackView,android.widget.StackView.StackSlider)>
<android.media.AudioPortEventHandler: void finalize()>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes.FloatKeyframes)>
<android.widget.SimpleMonthView: boolean getBoundsForDay(int,android.graphics.Rect)>
<android.widget.AutoCompleteTextView.MyWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.view.IWindowManager: boolean isDisplayRotationFrozen(int)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onPhoneCapabilityChanged(android.telephony.PhoneCapability)>
<android.preference.SeekBarPreference.SavedState: void <init>(android.os.Parcel)>
<android.app.ExitTransitionCoordinator: android.transition.Transition getSharedElementTransition()>
<android.bluetooth.IBluetoothMapClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int,long)>
<android.widget.TimePicker.AbstractTimePickerDelegate.SavedState: int getHour()>
<android.security.keystore.AndroidKeyStoreLoadStoreParameter: java.security.KeyStore.ProtectionParameter getProtectionParameter()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.MultiClientInputMethodSessionImpl: void startInputOrWindowGainedFocus(com.android.internal.view.IInputContext,int,android.view.inputmethod.EditorInfo,int,int,int)>
<android.opengl.GLLogWrapper: void glTranslatex(int,int,int)>
<android.app.ITaskStackListener: void onActivityLaunchOnSecondaryDisplayFailed(android.app.ActivityManager.RunningTaskInfo,int)>
<android.opengl.GLLogWrapper: void glClearDepthf(float)>
<android.hardware.usb.IUsbManager: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>
<android.media.Cea608CCParser.PAC: android.media.Cea608CCParser.PAC fromBytes(byte,byte)>
<android.util.MapCollections.ValuesCollection: void clear()>
<android.speech.tts.PlaybackSynthesisCallback: void error(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.app.ContextImpl: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.Handler,android.os.UserHandle)>
<android.content.pm.IPackageManager: boolean runBackgroundDexoptJob(java.util.List)>
<android.view.textclassifier.EntityConfidence: int describeContents()>
<android.media.Cea708CCWidget.CCWindowLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>
<android.os.IInstalld: void setAppQuota(java.lang.String,int,int,long)>
<android.content.res.XmlBlock.Parser: boolean getAttributeBooleanValue(int,boolean)>
<android.nfc.tech.BasicTagTechnology: void reconnect()>
<android.os.storage.IStorageManager: void clearPassword()>
<android.animation.StateListAnimator.StateListAnimatorConstantState: java.lang.Object newInstance()>
<android.location.ILocationManager: boolean isLocationEnabledForUser(int)>
<android.app.StatsManager.StatsdDeathRecipient: void binderDied()>
<android.app.ContextImpl: int checkSelfPermission(java.lang.String)>
<android.media.MediaScanner.WplHandler: void <init>(android.media.MediaScanner,java.lang.String,android.net.Uri,android.database.Cursor)>
<android.widget.RemoteViews.AsyncApplyTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsMetaData getMetaData()>
<android.app.IWallpaperManager: boolean isWallpaperBackupEligible(int,int)>
<android.bluetooth.IBluetoothSocketManager: android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid,int,int)>
<android.util.jar.StrictJarManifestReader: int getEndOfMainSection()>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: java.lang.Object getItem(int)>
<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl.ServiceImpl: void addClient(int,int,int,int)>
<android.bluetooth.IBluetoothPbap: void disconnect(android.bluetooth.BluetoothDevice)>
<android.os.storage.IStorageManager: void mkdirs(java.lang.String,java.lang.String)>
<android.widget.SelectionActionModeHelper.TextClassificationAsyncTask: android.widget.SelectionActionModeHelper.SelectionResult doInBackground(java.lang.Void[])>
<android.content.pm.IPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetooth registerAdapter(android.bluetooth.IBluetoothManagerCallback)>
<android.bluetooth.IBluetooth: boolean isEnabled()>
<android.opengl.GLErrorWrapper: void glTranslatex(int,int,int)>
<android.view.IWindowManager: void stopWindowTrace()>
<android.os.ResultReceiver.MyRunnable: void run()>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespace(java.lang.String)>
<android.app.admin.SecurityLogTags: void writeSecurityUserRestrictionAdded(java.lang.String,int,java.lang.String)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setUnfocusedMonthDateColor(int)>
<android.bluetooth.IBluetoothMapClient: java.util.List getConnectedDevices()>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(byte[],com.android.framework.protobuf.ExtensionRegistryLite)>
<android.sysprop.VoldProperties: void encrypt_progress(java.lang.String)>
<android.widget.HorizontalScrollView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanIdentity getLowpanIdentity()>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: android.animation.PropertyValuesHolder.IntPropertyValuesHolder clone()>
<android.opengl.GLLogWrapper: void glClearDepthx(int)>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.widget.RemoteViewsAdapter.RemoteServiceHandler: void handleMessage(android.os.Message)>
<android.widget.TextView.ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.app.IActivityManager: java.util.List getAllStackInfos()>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributePrefix(int)>
<android.opengl.GLLogWrapper: void glEnable(int)>
<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater.Parent,boolean)>
<android.content.pm.IPackageManager: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>
<android.app.IActivityManager: void setDebugApp(java.lang.String,boolean,boolean)>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void handleMessage(android.os.Message)>
<android.widget.HorizontalScrollView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)>
<android.animation.IntKeyframeSet: android.animation.KeyframeSet clone()>
<android.util.apk.WrappedX509Certificate: byte[] getTBSCertificate()>
<android.widget.AbsListView.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.webkit.WebSyncManager: java.lang.Object clone()>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: void <init>(android.text.TextDirectionHeuristics.TextDirectionAlgorithm)>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.net.lowpan.ILowpanInterface: void leave()>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.net.wifi.SupplicantState: int describeContents()>
<android.widget.YearPickerView.YearAdapter: int getCount()>
<android.view.ViewRootImpl.SyntheticInputStage: void onWindowFocusChanged(boolean)>
<android.app.ContextImpl: java.io.File[] getExternalCacheDirs()>
<android.widget.RtlSpacingHelper: void setRelative(int,int)>
<android.hardware.radio.TunerCallbackAdapter: void onConfigurationChanged(android.hardware.radio.RadioManager.BandConfig)>
<android.util.StatsLogInternal: int write(int,java.lang.String,long)>
<android.widget.AbsListView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.os.IInstalld: void destroyAppData(java.lang.String,java.lang.String,int,int,long)>
<android.content.pm.IPackageManager: int movePrimaryStorage(java.lang.String)>
<android.app.AlarmManager.ListenerWrapper: void setHandler(android.os.Handler)>
<android.speech.tts.SynthesisPlaybackQueueItem: void onMarkerReached(android.media.AudioTrack)>
<android.widget.ScrollView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)>
<android.app.admin.IDevicePolicyManager: boolean isCurrentInputMethodSetByOwner()>
<android.os.storage.IStorageEventListener: void onVolumeStateChanged(android.os.storage.VolumeInfo,int,int)>
<android.bluetooth.IBluetoothA2dpSink: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>
<android.util.StatsLogInternal: int write(int,java.lang.String)>
<android.view.inspector.InspectableProperty: java.lang.String name()>
<android.util.StatsLogInternal: int write(int,float,float,float,float,int)>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState valueOf(java.lang.String)>
<android.view.IWindowSession: void setWallpaperDisplayOffset(android.os.IBinder,int,int)>
<android.app.ActivityThread.ApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>
<android.media.ImageUtils: int getEstimatedNativeAllocBytes(int,int,int,int)>
<android.widget.SuggestionsAdapter: boolean hasStableIds()>
<android.hardware.LegacySensorManager.LegacyListener: void onSensorChanged(android.hardware.SensorEvent)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi.PKCS1Padding: int getAdditionalEntropyAmountForSign()>
<android.database.ContentObserver.NotificationRunnable: void <init>(android.database.ContentObserver,boolean,android.net.Uri,int)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean needsDividerBefore()>
<android.widget.Editor.InsertionHandleView: int getCurrentCursorOffset()>
<android.net.Uri.OpaqueUri: java.lang.String toString()>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,float[],int)>
<android.widget.SmartSelectSprite: void startAnimation(android.graphics.PointF,java.util.List,java.lang.Runnable)>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: int[] preceding(int)>
<android.opengl.GLErrorWrapper: void glLogicOp(int)>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.widget.SelectionActionModeHelper.TextClassificationHelper: android.widget.SelectionActionModeHelper.SelectionResult suggestSelection()>
<android.view.ViewRootImpl.W: void moved(int,int)>
<android.providers.settings.GlobalSettingsProto.Battery: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.LauncherActivity.ActivityAdapter: android.widget.Filter getFilter()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineUpdateAAD(java.nio.ByteBuffer)>
<android.widget.DateTimeView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setCurrentLocale(java.util.Locale)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void getVisibleVirtualViews(android.util.IntArray)>
<android.text.Layout.Alignment: android.text.Layout.Alignment[] values()>
<android.security.KeyStore.OperationPromise: void onFinished(android.security.keymaster.OperationResult)>
<android.widget.RatingBar.InspectionCompanion: void readProperties(android.widget.RatingBar,android.view.inspector.PropertyReader)>
<android.content.pm.IPackageManager: int movePackage(java.lang.String,java.lang.String)>
<android.opengl.GLSurfaceView.ComponentSizeChooser: void <init>(android.opengl.GLSurfaceView,int,int,int,int,int,int)>
<android.app.IActivityManager: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>
<android.content.pm.IPackageManager: int getIntentVerificationStatus(java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glMaterialf(int,int,float)>
<android.widget.SimpleMonthView: void onFocusLost()>
<android.app.admin.IDevicePolicyManager: java.util.List getKeepUninstalledPackages(android.content.ComponentName,java.lang.String)>
<android.app.admin.IDevicePolicyManager: void forceRemoveActiveAdmin(android.content.ComponentName,int)>
<android.view.ViewRootImpl.WindowInputEventReceiver: void <init>(android.view.ViewRootImpl,android.view.InputChannel,android.os.Looper)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.ECB.PKCS7Padding: void finalize()>
<android.inputmethodservice.IInputMethodWrapper: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.gsi.IGsiService: boolean isGsiInstallInProgress()>
<android.graphics.drawable.RippleForeground: boolean hasFinishedExit()>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(java.lang.String,int[])>
<android.os.IDumpstateListener: void onSectionComplete(java.lang.String,int,int,int)>
<android.app.WallpaperManager.Globals: void onWallpaperChanged()>
<android.util.jar.StrictJarVerifier.VerifierEntry: void write(byte[],int,int)>
<android.view.Surface.CompatibleCanvas: void setMatrix(android.graphics.Matrix)>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.net.lowpan.ILowpanInterface: android.net.IpPrefix[] getLinkNetworks()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.app.Instrumentation.EmptyRunnable: void run()>
<android.os.IUpdateEngineCallback: void onStatusUpdate(int,float)>
<android.widget.ExpandableListView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: android.icu.util.Calendar getSelectedDay()>
<android.security.IConfirmationPromptCallback: void onConfirmationPromptCompleted(int,byte[])>
<android.widget.DropDownListView.ResolveHoverRunnable: void post()>
<android.location.GnssMeasurementCallbackTransport.ListenerTransport: void onStatusChanged(int)>
<android.app.ContextImpl: android.content.Context createContextForSplit(java.lang.String)>
<android.app.admin.IDevicePolicyManager: long getLastNetworkLogRetrievalTime()>
<android.net.lowpan.ILowpanInterface: java.lang.String[] getLinkAddresses()>
<android.hardware.ICameraService: boolean isHiddenPhysicalCamera(java.lang.String)>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(short[],int)>
<android.view.IWindowManager: void lockNow(android.os.Bundle)>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changeCallDataUsage(long)>
<android.app.ContextImpl: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.app.IActivityManager: void backupAgentCreated(java.lang.String,android.os.IBinder,int)>
<android.widget.TimePickerSpinnerDelegate: void setDate(int,int)>
<android.net.lowpan.LowpanProperties.LowpanStandardProperty: java.lang.Class getType()>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur[] values()>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createDouble(double[],java.nio.ByteOrder)>
<android.widget.SuggestionsAdapter: void notifyDataSetInvalidated()>
<android.widget.RelativeLayout.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.app.Instrumentation.1MenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>
<android.net.lowpan.ILowpanInterface: void setEnabled(boolean)>
<android.content.res.DrawableCache: android.graphics.drawable.Drawable getInstance(long,android.content.res.Resources,android.content.res.Resources.Theme)>
<android.graphics.drawable.RippleBackground: boolean isVisible()>
<android.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)>
<android.app.IActivityManager: void removeContentProviderExternalAsUser(java.lang.String,android.os.IBinder,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: byte[] engineWrap(java.security.Key)>
<android.widget.FastScroller: void setScrollbarPosition(int)>
<android.location.ILocationManager: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.app.admin.IDevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)>
<android.app.ContextImpl: void revokeUriPermission(java.lang.String,android.net.Uri,int)>
<android.bluetooth.IBluetoothManager: boolean disable(java.lang.String,boolean)>
<android.widget.Spinner.SpinnerPopup: int getVerticalOffset()>
<android.view.ViewRootImpl.WindowInputEventReceiver: void onBatchedInputEventPending()>
<android.view.inspector.InspectableProperty.EnumEntry: int value()>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType valueOf(java.lang.String)>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams hideLargeIcon(boolean)>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<android.os.IBatteryPropertiesRegistrar: void scheduleUpdate()>
<android.app.ExitTransitionCoordinator: boolean moveSharedElementWithParent()>
<android.graphics.drawable.RippleForeground: void move(float,float)>
<android.bluetooth.IBluetoothGatt: void startScanForIntent(android.app.PendingIntent,android.bluetooth.le.ScanSettings,java.util.List,java.lang.String)>
<android.media.MediaRouter.Static: void setRouterGroupId(java.lang.String)>
<android.media.DecoderCapabilities.VideoDecoder: android.media.DecoderCapabilities.VideoDecoder valueOf(java.lang.String)>
<android.graphics.ImageDecoder.ByteArraySource: android.graphics.ImageDecoder createImageDecoder()>
<android.bluetooth.IBluetooth: void unregisterCallback(android.bluetooth.IBluetoothCallback)>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType[] values()>
<android.app.IActivityManager: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk,java.lang.String)>
<android.telecom.RemoteConnection.CallbackRecord: android.telecom.RemoteConnection.Callback getCallback()>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionStart(android.transition.Transition)>
<android.view.RemoteAnimationDefinition.RemoteAnimationAdapterEntry: void writeToParcel(android.os.Parcel,int)>
<android.widget.TimePickerClockDelegate: void setIs24Hour(boolean)>
<android.transition.TransitionSet.TransitionSetListener: void onTransitionEnd(android.transition.Transition)>
<android.util.XmlPullAttributes: int getStyleAttribute()>
<android.view.IWindowManager: void addWindowToken(android.os.IBinder,int,int)>
<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)>
<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setWeekSeparatorLineColor(int)>
<android.transition.Fade.FadeAnimatorListener: void <init>(android.view.View)>
<android.app.ActivityThread.ApplicationThread: void updateTimePrefs(int)>
<android.bluetooth.IBluetoothHeadsetClient: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothMap: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedPath()>
<android.os.SystemProto.WifiState: void <init>(android.os.SystemProto)>
<android.widget.GridLayout.Axis: void layout(int)>
<android.widget.FastScroller: void <init>(android.widget.AbsListView,int)>
<android.media.IPlayer: void setStartDelayMs(int)>
<android.permission.PermissionControllerManager.FileWriterTask: void onCancelled()>
<android.net.LocalSocketImpl.SocketInputStream: int read()>
<android.view.inspector.InspectableProperty.ValueType: android.view.inspector.InspectableProperty.ValueType valueOf(java.lang.String)>
<android.widget.FastScroller: void stop()>
<android.app.ApplicationPackageManager.ResourceName: boolean equals(java.lang.Object)>
<android.bluetooth.le.IAdvertisingSetCallback: void onAdvertisingDataSet(int,int)>
<android.widget.TabHost.ViewIdContentStrategy: void tabClosed()>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.view.InputFilter.H: void handleMessage(android.os.Message)>
<android.content.res.XmlBlock.Parser: int nextTag()>
<android.hardware.radio.TunerAdapter: boolean isAnalogForced()>
<android.bluetooth.IBluetoothHearingAid: void setVolume(int)>
<android.content.res.XmlBlock.Parser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.widget.AbsListView.RecycleBin: boolean shouldRecycleViewType(int)>
<android.view.textclassifier.TextClassificationSession: android.view.textclassifier.TextClassification classifyText(android.view.textclassifier.TextClassification.Request)>
<android.service.autofill.OptionalValidators: void writeToParcel(android.os.Parcel,int)>
<android.app.IActivityManager: void setActivityController(android.app.IActivityController,boolean)>
<android.app.ContextImpl: android.os.UserHandle getUser()>
<android.sysprop.DisplayProperties: java.util.Optional debug_force_msaa()>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseDelimitedFrom(java.io.InputStream,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onVoiceActivationStateChanged(int)>
<android.hardware.input.IInputManager: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.net.Uri.HierarchicalUri: int describeContents()>
<android.os.IStatsManager: byte[] getData(long,java.lang.String)>
<android.animation.AnimatorSet.Node: void addSibling(android.animation.AnimatorSet.Node)>
<android.net.lowpan.ILowpanInterface: boolean isUp()>
<android.net.lowpan.LowpanProperties.LowpanStandardProperty: java.lang.String toString()>
<android.hardware.ICameraServiceListener: void onTorchStatusChanged(int,java.lang.String)>
<android.app.ContextImpl: boolean deleteSharedPreferences(java.lang.String)>
<android.app.admin.IDevicePolicyManager: int stopUser(android.content.ComponentName,android.os.UserHandle)>
<android.media.midi.MidiPortImpl: int getPacketType(byte[],int)>
<android.hardware.ICameraService: android.hardware.camera2.params.VendorTagDescriptorCache getCameraVendorTagCache()>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,float[],int)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: byte[] update(byte[],int,int)>
<android.view.InputEventConsistencyVerifier.KeyState: void recycle()>
<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)>
<android.widget.SearchView.SavedState: void <init>(android.os.Parcel)>
<android.preference.PreferenceInflater: android.preference.GenericInflater.Parent onMergeRoots(android.preference.GenericInflater.Parent,boolean,android.preference.GenericInflater.Parent)>
<android.security.keymaster.KeymasterArgument: void writeToParcel(android.os.Parcel,int)>
<android.os.storage.IStorageManager: void setVolumeUserFlags(java.lang.String,int,int)>
<android.content.pm.BaseParceledListSlice: java.util.List getList()>
<android.content.pm.IPackageManager: boolean compileLayouts(java.lang.String)>
<android.util.MapCollections.ValuesCollection: java.lang.Object[] toArray()>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,java.nio.IntBuffer)>
<android.app.Instrumentation.1MenuRunnable: void run()>
<android.app.ActivityThread.AndroidOs: void rename(java.lang.String,java.lang.String)>
<android.graphics.Rect.UnflattenHelper: java.util.regex.Matcher getMatcher(java.lang.String)>
<android.nfc.NfcActivityManager.NfcActivityState: java.lang.String toString()>
<android.service.notification.RankingHelperProto.RecordProto: void <init>(android.service.notification.RankingHelperProto)>
<android.opengl.GLErrorWrapper: void glNormal3x(int,int,int)>
<android.app.IActivityManager: boolean isTopOfTask(android.os.IBinder)>
<android.app.BackStackRecord: android.app.FragmentTransaction addToBackStack(java.lang.String)>
<android.providers.settings.SecureSettingsProto.Gesture: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.AutoCompleteTextView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.os.SystemProto.GlobalNetwork: void <init>(android.os.SystemProto)>
<android.bluetooth.IBluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.os.storage.IStorageManager: void prepareUserStorage(java.lang.String,int,int,int)>
<android.transition.ChangeTransform.PathAnimatorMatrix: void setTranslation(android.graphics.PointF)>
<android.content.res.XmlBlock.Parser: void setInput(java.io.Reader)>
<android.os.IVold: void format(java.lang.String,java.lang.String)>
<android.location.GpsStatus.SatelliteIterator: android.location.GpsSatellite next()>
<android.widget.SimpleMonthView: void onMeasure(int,int)>
<android.transition.TransitionManager.MultiListener: void onViewAttachedToWindow(android.view.View)>
<android.gamedriver.GameDriverProto.Blacklist: com.android.framework.protobuf.Parser parser()>
<android.speech.tts.AudioPlaybackHandler: void stop()>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,int)>
<android.widget.ExpandableListConnector: void setMaxExpGroupCount(int)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize valueOf(java.lang.String)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int,int,java.lang.String)>
<android.widget.GridLayout.Assoc: void put(java.lang.Object,java.lang.Object)>
<android.bluetooth.IBluetoothGattServerCallback: void onCharacteristicWriteRequest(java.lang.String,int,int,int,boolean,boolean,int,byte[])>
<android.util.apk.ApkSigningBlockUtils: byte[] readLengthPrefixedByteArray(java.nio.ByteBuffer)>
<android.hardware.radio.TunerAdapter: boolean isConfigFlagSupported(int)>
<android.app.admin.IDevicePolicyManager: void reboot(android.content.ComponentName)>
<android.app.IActivityManager: boolean killProcessesBelowForeground(java.lang.String)>
<android.inputmethodservice.InputMethodService.SettingsObserver: java.lang.String toString()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.content.LoggingContentInterface.Logger: java.lang.Object setResult(java.lang.Object)>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean removeAllSensors()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getHistorySize()>
<android.widget.Spinner.InspectionCompanion: void readProperties(android.widget.Spinner,android.view.inspector.PropertyReader)>
<android.app.IActivityManager: int sendIntentSender(android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>
<android.app.ITaskStackListener: void onTaskCreated(int,android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothGatt: void stopScanForIntent(android.app.PendingIntent,java.lang.String)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onActivityStarted(android.app.Activity)>
<android.app.PendingIntent.FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int getAdditionalEntropyAmountForBegin()>
<android.opengl.GLErrorWrapper: void glBindRenderbufferOES(int,int)>
<android.bluetooth.IBluetoothPbapClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.view.ViewRootImpl.ViewPreImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int measureContentWidth()>
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>
<android.widget.SimpleAdapter.SimpleFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.content.ContentResolver.OpenResourceIdResult: void <init>(android.content.ContentResolver)>
<android.security.KeyStore.KeyAttestationCallbackResult: void setCertificateChain(android.security.keymaster.KeymasterCertificateChain)>
<android.app.ContextImpl: boolean moveSharedPreferencesFrom(android.content.Context,java.lang.String)>
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer getLengthPrefixedSlice(java.nio.ByteBuffer)>
<android.content.res.XmlBlock.Parser: float getAttributeFloatValue(int,float)>
<android.net.Uri.StringUri: int describeContents()>
<android.widget.NumberPicker.SetSelectionCommand: void post(int,int)>
<android.sysprop.DisplayProperties: void debug_force_rtl(java.lang.Boolean)>
<android.util.DataUnit: android.util.DataUnit valueOf(java.lang.String)>
<android.os.IInstalld: void restoreconAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.view.IWindowManager: int getDefaultDisplayRotation()>
<android.bluetooth.IBluetooth: boolean cancelBondProcess(android.bluetooth.BluetoothDevice)>
<android.gsi.GsiProgress: void readFromParcel(android.os.Parcel)>
<android.os.ProcrankProto.Summary.Zram: void <init>(android.os.ProcrankProto.Summary)>
<android.webkit.WebView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.os.storage.IStorageManager: android.os.storage.VolumeInfo[] getVolumes(int)>
<android.os.UidProto.Wifi: void <init>(android.os.UidProto)>
<android.widget.NumberPicker.SetSelectionCommand: void run()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: int getAdditionalEntropyAmountForBegin()>
<android.widget.RemoteViews.ReflectionAction: java.lang.String getUniqueKey()>
<android.widget.ActivityChooserModel.DataModelPackageMonitor: void onSomePackagesChanged()>
<android.util.StatsLogInternal: int write(int,int,long,long)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(android.util.Property,int[])>
<android.hardware.input.IInputManager: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.gesture.GestureLibraries.FileGestureLibrary: void <init>(java.io.File)>
<android.hardware.ICameraService: void setTorchMode(java.lang.String,boolean,android.os.IBinder)>
<android.media.Cea708CCWidget.ScaledLayout.ScaledLayoutParams: void <init>(float,float,float,float)>
<android.os.MemoryFile.MemoryInputStream: void mark(int)>
<android.app.IActivityManager: void hang(android.os.IBinder,boolean)>
<android.app.IActivityManager: android.app.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,java.lang.String,boolean)>
<android.widget.ExpandableListConnector: boolean hasStableIds()>
<android.widget.Editor.SelectionModifierCursorController: int getMaxTouchOffset()>
<android.os.storage.IStorageManager: android.os.storage.VolumeRecord[] getVolumeRecords(int)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void resetWhilePreservingInitState()>
<android.widget.Editor.InsertionHandleView: void show()>
<android.app.admin.SecurityLogTags: void writeSecurityCertAuthorityRemoved(int,java.lang.String)>
<android.content.pm.IPackageManager: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onLocaleChanged(java.util.Locale)>
<android.content.pm.IPackageManager: void freeStorage(java.lang.String,long,int,android.content.IntentSender)>
<android.os.storage.IStorageManager: void shutdown(android.os.storage.IStorageShutdownObserver)>
<android.animation.IntKeyframeSet: android.animation.IntKeyframeSet clone()>
<android.content.pm.IPackageManager: void registerMoveCallback(android.content.pm.IPackageMoveObserver)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: int getAdditionalEntropyAmountForBegin()>
<android.content.pm.IPackageManager: boolean setSystemAppInstallState(java.lang.String,boolean,int)>
<android.app.IActivityManager: void attachApplication(android.app.IApplicationThread,long)>
<android.bluetooth.IBluetoothA2dp: void setOptionalCodecsEnabled(android.bluetooth.BluetoothDevice,int)>
<android.widget.CalendarViewLegacyDelegate: void setWeekNumberColor(int)>
<android.widget.DatePickerCalendarDelegate: void setEnabled(boolean)>
<android.apex.ApexInfoList: int describeContents()>
<android.view.ViewDebug.FlagToString: int equals()>
<android.os.IStatsManager: void sendBinaryPushStateChangedAtom(java.lang.String,long,int,int,long[])>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.media.SoundPool.EventHandler: void <init>(android.media.SoundPool,android.os.Looper)>
<android.os.IVold: void restoreCheckpointPart(java.lang.String,int)>
<android.widget.AbsListView.PositionScroller: void stop()>
<android.app.ITaskStackListener: void onActivityRequestedOrientationChanged(int,int)>
<android.os.IIncidentCompanion: void deleteIncidentReports(java.lang.String,java.lang.String,java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setOrganizationColorForUser(int,int)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>
<android.providers.settings.GlobalSettingsProto.Wifi: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.KeyEventCallbackAdaptor: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.net.lowpan.ILowpanInterface: void startCommissioningSession(android.net.lowpan.LowpanBeaconInfo)>
<android.widget.DayPickerViewPager: void <init>(android.content.Context)>
<android.providers.settings.GlobalSettingsProto.Sync: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.TimePickerClockDelegate: int getBaseline()>
<android.media.ImageWriter.WriterSurfaceImage: void finalize()>
<android.widget.RemoteViews.BitmapReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean containsMetaDataAt(int)>
<android.widget.RelativeLayout.DependencyGraph: void getSortedViews(android.view.View[],int[])>
<android.view.IWindowManager: boolean startViewServer(int)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: int getGroupSizeBits()>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm[] values()>
<android.providers.settings.GlobalSettingsProto.Gpu: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.bluetooth.IBluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.widget.DatePickerSpinnerDelegate: int getMonth()>
<android.widget.RemoteViews.TextViewSizeAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.animation.Animator.AnimatorConstantState: int getChangingConfigurations()>
<android.mtp.MtpPropertyList: java.lang.String[] getStringValues()>
<android.providers.settings.GlobalSettingsProto.Euicc: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.os.SharedMemory.Closer: void run()>
<android.widget.FastScroller: boolean onInterceptHoverEvent(android.view.MotionEvent)>
<android.opengl.GLErrorWrapper: void glPixelStorei(int,int)>
<android.bluetooth.IBluetoothPan: boolean isTetheringOn()>
<android.widget.SimpleMonthView: int getCellWidth()>
<android.widget.GridLayout.Axis: int[] getTrailingMargins()>
<android.transition.Transition.ArrayListManager: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>
<android.app.ContextImpl: android.os.Handler getMainThreadHandler()>
<android.util.XmlPullAttributes: java.lang.String getAttributeNamespace(int)>
<android.app.admin.IDevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean load()>
<android.opengl.EGLLogWrapper: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespaceUri(int)>
<android.widget.CalendarViewLegacyDelegate.ScrollStateRunnable: void run()>
<android.content.pm.IPackageManager: android.graphics.Bitmap getInstantAppIcon(java.lang.String,int)>
<android.app.admin.SecurityLogTags: void writeSecurityLoggingStarted()>
<android.util.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)>
<android.widget.Editor.SelectionModifierCursorController: void hide()>
<android.graphics.BlendMode: android.graphics.BlendMode[] values()>
<android.os.IStoraged: void onUserStarted(int)>
<android.opengl.GLLogWrapper: void glClearColor(float,float,float,float)>
<android.service.pm.PackageProto.UserInfoProto: void <init>(android.service.pm.PackageProto)>
<android.widget.Editor.EasyEditPopupWindow: void setEasyEditSpan(android.text.style.EasyEditSpan)>
<android.os.IStatsManager: void informPollAlarmFired()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: int getAdditionalEntropyAmountForFinish()>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,java.lang.String,int)>
<android.widget.YearPickerView.YearAdapter: boolean areAllItemsEnabled()>
<android.telecom.InCallService.InCallServiceBinder: void onCanAddCallChanged(boolean)>
<android.transition.Visibility.DisappearListener: void onTransitionPause(android.transition.Transition)>
<android.app.admin.IDevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<android.widget.Editor.PinnedPopupWindow: void measureContent()>
<android.widget.SimpleMonthView: void setFirstDayOfWeek(int)>
<android.widget.DayPickerView: void setDate(long)>
<android.net.lowpan.ILowpanManager: android.net.lowpan.ILowpanInterface getInterface(java.lang.String)>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<android.content.res.XmlBlock.Parser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.app.Activity.HostCallbacks: java.lang.Object onGetHost()>
<android.service.autofill.OptionalValidators: boolean isValid(android.service.autofill.ValueFinder)>
<android.app.ContextImpl: void updateServiceGroup(android.content.ServiceConnection,int,int)>
<android.graphics.drawable.RippleForeground: void getBounds(android.graphics.Rect)>
<android.bluetooth.IBluetooth: boolean getSilenceMode(android.bluetooth.BluetoothDevice)>
<android.opengl.GLErrorWrapper: void glDrawTexsOES(short,short,short,short,short)>
<android.util.StatsLogInternal: int write(int,int,int,int,boolean,boolean,boolean,int,int,java.lang.String,java.lang.String,int,int,boolean,boolean,int)>
<android.widget.AbsListView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.view.IWindowManager: void registerDockedStackListener(android.view.IDockedStackListener)>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,java.nio.Buffer)>
<android.app.admin.IDevicePolicyManager: boolean isManagedKiosk()>
<android.widget.RemoteViews.Action: int mergeBehavior()>
<android.app.ContextImpl: java.lang.String getPackageResourcePath()>
<android.opengl.GLErrorWrapper: void glBlendEquationSeparate(int,int)>
<android.provider.Settings.Config: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String,boolean)>
<android.app.admin.IDevicePolicyManager: boolean checkDeviceIdentifierAccess(java.lang.String,int,int)>
<android.view.ViewOverlay.OverlayViewGroup: void clear()>
<android.text.TextLine.DecorationInfo: android.text.TextLine.DecorationInfo copyInfo()>
<android.widget.GridLayout.Bounds: int size(boolean)>
<android.widget.RemoteViews.SetEmptyView: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.bluetooth.IBluetooth: int getLeIoCapability()>
<android.app.BackStackRecord: android.app.FragmentTransaction setTransition(int)>
<android.os.IVold: void mount(java.lang.String,int,int)>
<android.util.apk.WrappedX509Certificate: byte[] getEncoded()>
<android.security.IKeyChainService: android.content.pm.StringParceledListSlice getSystemCaAliases()>
<android.app.admin.IDevicePolicyManager: java.lang.String getProfileOwnerName(int)>
<android.net.IpConfiguration.ProxySettings: android.net.IpConfiguration.ProxySettings valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,int[],int)>
<android.content.res.XmlBlock: void close()>
<android.view.GestureExclusionTracker.GestureExclusionViewInfo: int update()>
<android.app.ContextImpl: android.content.res.Resources.Theme getTheme()>
<android.service.pm.PackageServiceDumpProto.SharedUserProto: void <init>(android.service.pm.PackageServiceDumpProto)>
<android.app.BackStackRecord: android.app.FragmentTransaction show(android.app.Fragment)>
<android.bluetooth.IBluetoothHearingAid: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.opengl.GLSurfaceView.EglHelper: void logEglErrorAsWarning(java.lang.String,java.lang.String,int)>
<android.app.ContextImpl: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.widget.CalendarViewLegacyDelegate.WeekView: boolean getBoundsForDate(android.icu.util.Calendar,android.graphics.Rect)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainGroupPosition(int)>
<android.widget.CalendarViewLegacyDelegate: void setCurrentLocale(java.util.Locale)>
<android.app.LoadedApk.WarningContextClassLoader: void setDefaultAssertionStatus(boolean)>
<android.view.RemotableViewMethod: java.lang.String asyncImpl()>
<android.app.admin.SecurityLogTags: void writeSecurityPasswordExpirationSet(java.lang.String,int,int,long)>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,float[],int)>
<android.app.BackStackRecord: boolean isAddToBackStackAllowed()>
<android.security.keystore.DelegatingX509Certificate: boolean[] getSubjectUniqueID()>
<android.media.ImageWriter.ListenerHandler: void handleMessage(android.os.Message)>
<android.widget.StackView.LayoutParams: void setOffsets(int,int)>
<android.bluetooth.IBluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.speech.SpeechRecognizer.InternalListener: void onError(int)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedQuery()>
<android.app.DexLoadReporter: android.app.DexLoadReporter getInstance()>
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)>
<android.util.JsonToken: android.util.JsonToken valueOf(java.lang.String)>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,int)>
<android.app.admin.IDevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>
<android.opengl.GLLogWrapper: void glLogicOp(int)>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,int[],int)>
<android.providers.settings.GlobalSettingsProto.Location: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.WallpaperManager.FastBitmapDrawable: int getOpacity()>
<android.transition.Visibility.DisappearListener: void onTransitionEnd(android.transition.Transition)>
<android.media.MediaScanner.MyMediaScannerClient: android.media.MediaScanner.FileEntry beginFile(java.lang.String,java.lang.String,long,long,boolean,boolean)>
<android.opengl.GLLogWrapper: void glBindFramebufferOES(int,int)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationPause(android.animation.Animator)>
<android.hardware.camera2.ICameraDeviceUser: long cancelRequest(int)>
<android.net.Uri.PathPart: android.net.Uri.PathPart appendDecodedSegment(android.net.Uri.PathPart,java.lang.String)>
<android.media.MediaRecorder.EventHandler: void <init>(android.media.MediaRecorder,android.media.MediaRecorder,android.os.Looper)>
<android.opengl.GLLogWrapper: void glDrawTexivOES(int[],int)>
<android.widget.DatePickerCalendarDelegate: int getDayOfMonth()>
<android.content.pm.IPackageManager: boolean setInstallLocation(int)>
<android.app.admin.IDevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>
<android.widget.TimePickerClockDelegate: android.view.View getAmView()>
<android.bluetooth.IBluetoothHeadset: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.security.keymaster.KeymasterDateArgument: void writeValue(android.os.Parcel)>
<android.opengl.GLLogWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.widget.RtlSpacingHelper: int getRight()>
<android.util.MapCollections.ValuesCollection: boolean removeAll(java.util.Collection)>
<android.opengl.GLErrorWrapper: void glRotatex(int,int,int,int)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean containsRemoteViewAt(int)>
<android.app.Activity.HostCallbacks: boolean onHasWindowAnimations()>
<android.content.pm.IPackageManager: void forceDexOpt(java.lang.String)>
<android.providers.settings.GlobalSettingsProto.CaptivePortal: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.bluetooth.IBluetooth: int getBondState(android.bluetooth.BluetoothDevice)>
<android.provider.Settings.Config: void resetToDefaults(android.content.ContentResolver,int,java.lang.String)>
<android.graphics.Picture.PictureCanvas: void <init>(android.graphics.Picture,long)>
<android.os.IVold: void onUserRemoved(int)>
<android.widget.SelectionActionModeHelper.SelectionTracker: void onTextChanged(int,int,android.view.textclassifier.TextClassification)>
<android.content.SearchRecentSuggestionsProvider.DatabaseHelper: void <init>(android.content.Context,int)>
<android.bluetooth.IBluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothManager: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>
<android.bluetooth.BluetoothHidDevice.CallbackWrapper: void onConnectionStateChanged(android.bluetooth.BluetoothDevice,int)>
<android.media.ImageReader.SurfaceImage.SurfacePlane: int getPixelStride()>
<android.app.ContextImpl: java.io.File getFilesDir()>
<android.opengl.GLErrorWrapper: void glPolygonOffsetx(int,int)>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>
<android.bluetooth.IBluetoothHearingAid: int getDeviceSide(android.bluetooth.BluetoothDevice)>
<android.widget.DatePickerCalendarDelegate: boolean getCalendarViewShown()>
<android.app.Activity.HostCallbacks: void onRequestPermissionsFromFragment(android.app.Fragment,java.lang.String[],int)>
<android.media.Cea708CCWidget.ScaledLayout: void onMeasure(int,int)>
<android.widget.TimePickerClockDelegate.ClickActionDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.app.ActivityView.TaskStackListenerImpl: void onTaskMovedToFront(android.app.ActivityManager.RunningTaskInfo)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void initKey(int,java.security.Key)>
<android.opengl.GLLogWrapper: void glMultiTexCoord4f(int,float,float,float,float)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onOtaspChanged(int)>
<android.content.pm.IPackageManager: void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[],int)>
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.util.apk.WrappedX509Certificate: java.util.Date getNotAfter()>
<android.bluetooth.IBluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.media.Cea608CCWidget.CCLayout: void onMeasure(int,int)>
<android.app.admin.IDevicePolicyManager: void setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String,int,android.os.RemoteCallback)>
<android.app.LauncherActivity.ActivityAdapter: long getItemId(int)>
<android.media.ImageReader.SurfaceImage: java.lang.Object getOwner()>
<android.providers.settings.GlobalSettingsProto.InetCondition: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.Spinner.DropDownAdapter: boolean isEmpty()>
<android.bluetooth.IBluetoothManager: boolean enable(java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean installKeyPair(android.content.ComponentName,java.lang.String,byte[],byte[],byte[],java.lang.String,boolean,boolean)>
<android.app.ITaskStackListener: void onTaskProfileLocked(int,int)>
<android.opengl.GLLogWrapper: void glDepthRangef(float,float)>
<android.opengl.GLErrorWrapper: void glPointSizex(int)>
<android.widget.CalendarViewLegacyDelegate: void setDate(long)>
<android.bluetooth.IBluetoothGatt: void beginReliableWrite(int,java.lang.String)>
<android.os.storage.IStorageManager: void runMaintenance()>
<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>
<android.view.accessibility.WeakSparseArray: void append(int,java.lang.Object)>
<android.security.keymaster.KeymasterArgument: int describeContents()>
<android.widget.NumberPicker.PressedStateHelper: void cancel()>
<android.widget.Toolbar.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.bluetooth.IBluetooth: boolean createBondOutOfBand(android.bluetooth.BluetoothDevice,int,android.bluetooth.OobData)>
<android.app.ActivityManager.UidObserver: void onUidCachedChanged(int,boolean)>
<android.widget.CheckedTextView.SavedState: java.lang.String toString()>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void <init>(android.widget.SimpleMonthView,android.view.View)>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,float[],int)>
<android.media.MediaFormat.FilteredMappedKeySet.KeyIterator: java.lang.Object next()>
<android.os.StrictMode.AndroidBlockGuardPolicy: java.lang.String toString()>
<android.view.ViewRootImpl.SyntheticInputStage: void onDetachedFromWindow()>
<android.widget.DatePickerSpinnerDelegate: void setSpinnersShown(boolean)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition mergeTransitions(android.transition.Transition,android.transition.Transition)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: int getSelectedDay()>
<android.app.ActivityTransitionCoordinator: android.os.Bundle captureSharedElementState()>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int,long,float,java.lang.String,boolean,int,byte[])>
<android.speech.tts.PlaybackSynthesisCallback: void error()>
<android.animation.AnimatorInflater.PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<android.app.admin.IDevicePolicyManager: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.camera2.ICameraDeviceCallbacks: void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras,long)>
<android.os.storage.IStorageManager: boolean needsCheckpoint()>
<android.view.IWindowManager: void getBaseDisplaySize(int,android.graphics.Point)>
<android.content.pm.BaseParceledListSlice: void setInlineCountLimit(int)>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec,android.os.Bundle)>
<android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>
<android.nfc.NfcActivityManager.NfcApplicationState: void <init>(android.nfc.NfcActivityManager,android.app.Application)>
<android.preference.GenericInflater: void <init>(android.content.Context)>
<android.media.RemoteController.EventHandler: void <init>(android.media.RemoteController,android.media.RemoteController,android.os.Looper)>
<android.view.IWindowManager: boolean isWindowTraceEnabled()>
<android.widget.RtlSpacingHelper: void setDirection(boolean)>
<android.os.storage.IStorageManager: void setField(java.lang.String,java.lang.String)>
<android.gsi.IGsiService: long getUserdataImageSize()>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void writeInt(int)>
<android.transition.ChangeTransform.GhostListener: void onTransitionPause(android.transition.Transition)>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,int[],int)>
<android.widget.ActionMenuPresenter.OpenOverflowRunnable: void run()>
<android.app.ContextImpl: boolean stopService(android.content.Intent)>
<android.os.UidProto.StateTime: void <init>(android.os.UidProto)>
<android.widget.Editor.SuggestionsPopupWindow: void createPopupWindow()>
<android.view.ViewRootImpl.W: void dispatchGetNewSurface()>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,boolean,long,byte[])>
<android.widget.TextView.CharWrapper: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)>
<android.content.pm.IPackageManager: boolean isProtectedBroadcast(java.lang.String)>
<android.opengl.GLErrorWrapper: void glFlush()>
<android.os.IIncidentReportStatusListener: void onReportFinished()>
<android.app.IActivityManager: int checkPermission(java.lang.String,int,int)>
<android.telecom.InCallService.InCallServiceBinder: void addCall(android.telecom.ParcelableCall)>
<android.view.IRecentsAnimationRunner: void onAnimationCanceled(boolean)>
<android.os.IVold: void addUserKeyAuth(int,int,java.lang.String,java.lang.String)>
<android.widget.ListPopupWindow.ListSelectorHider: void run()>
<android.app.admin.IDevicePolicyManager: boolean installCaCert(android.content.ComponentName,java.lang.String,byte[])>
<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void getVisibleVirtualViews(android.util.IntArray)>
<android.hardware.camera2.ICameraDeviceCallbacks: void onDeviceIdle()>
<android.content.pm.IPackageManager: void removeOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<android.app.admin.IDevicePolicyManager: java.lang.String getDeviceOwnerName()>
<com.android.server.DropboxLogTags: void writeDropboxFileCopy(java.lang.String,int,java.lang.String)>
<android.view.IWindowManager: void createInputConsumer(android.os.IBinder,java.lang.String,int,android.view.InputChannel)>
<android.apex.IApexService: void activatePackage(java.lang.String)>
<android.app.admin.IDevicePolicyManager: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)>
<com.android.server.ResettableTimeout.T: void run()>
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.app.FragmentTransition: void calculateFragments(android.app.BackStackRecord,android.util.SparseArray,boolean)>
<android.speech.tts.BlockingAudioTrack: int write(byte[])>
<android.widget.CalendarViewLegacyDelegate: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<android.widget.ViewFlipper.InspectionCompanion: void readProperties(android.widget.ViewFlipper,android.view.inspector.PropertyReader)>
<android.widget.Spinner.DropDownAdapter: int getItemViewType(int)>
<android.opengl.GLLogWrapper: void glFogxv(int,int[],int)>
<android.os.IIncidentCompanion: java.util.List getPendingReports()>
<android.app.ActivityThread.ApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean isReadOnly()>
<android.content.pm.BaseParceledListSlice: void writeParcelableCreator(java.lang.Object,android.os.Parcel)>
<android.net.LocalSocketImpl: void shutdownInput()>
<android.app.ContextImpl: android.app.ContextImpl createSystemUiContext(android.app.ContextImpl,int)>
<android.app.admin.IDevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long,boolean)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void dispatchFlushCompleteEvent(int)>
<android.bluetooth.IBluetooth: boolean setBluetoothClass(android.bluetooth.BluetoothClass)>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: void initialize(android.widget.TextView)>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat valueOf(java.lang.String)>
<com.android.internal.messages.nano.SystemMessageProto.SystemMessage: com.android.framework.protobuf.nano.MessageNano mergeFrom(com.android.framework.protobuf.nano.CodedInputByteBufferNano)>
<android.media.SubtitleTrack.CueList.EntryIterator: android.util.Pair next()>
<android.util.RecurrenceRule.RecurringIterator: android.util.Range next()>
<android.net.Uri.HierarchicalUri: java.lang.String getPath()>
<android.sysprop.ApexProperties: java.util.Optional updatable()>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)>
<android.widget.AbsListView.RecycleBin: void markChildrenDirty()>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.gamedriver.GameDriverProto.Blacklists: void writeTo(com.android.framework.protobuf.CodedOutputStream)>
<android.app.ActivityThread.ApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>
<android.graphics.RenderNode.CompositePositionUpdateListener: void positionLost(long)>
<android.bluetooth.le.IScannerCallback: void onFoundOrLost(boolean,android.bluetooth.le.ScanResult)>
<android.util.MapCollections.EntrySet: boolean contains(java.lang.Object)>
<android.app.IActivityManager: void registerProcessObserver(android.app.IProcessObserver)>
<android.gamedriver.GameDriverProto.Blacklist: int getPackageNamesCount()>
<android.graphics.drawable.RippleBackground: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.mtp.MtpPropertyList: int getCode()>
<android.location.GnssMeasurementCallbackTransport: void unregisterFromServer()>
<android.inputmethodservice.IInputMethodWrapper: void unbindInput()>
<android.widget.DatePickerSpinnerDelegate: int getYear()>
<android.opengl.GLErrorWrapper: void glDepthFunc(int)>
<android.graphics.drawable.RippleForeground: void exit()>
<android.opengl.GLLogWrapper: void glBlendFuncSeparate(int,int,int,int)>
<android.os.IVold: java.io.FileDescriptor openAppFuseFile(int,int,int,int)>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.gamedriver.GameDriverProto.Blacklist.Builder: java.lang.String getPackageNames(int)>
<android.widget.DatePickerCalendarDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.bluetooth.IBluetoothGatt: void readDescriptor(int,java.lang.String,int,int)>
<android.net.Uri.StringUri: java.util.List getPathSegments()>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams fillTextsFrom(android.app.Notification.Builder)>
<android.app.admin.SecurityLogTags: void writeSecurityLogBufferSizeCritical()>
<android.app.AlarmManager.ListenerWrapper: void cancel()>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams reset()>
<android.view.inspector.InspectableProperty: android.view.inspector.InspectableProperty.EnumEntry[] enumMapping()>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: boolean onPreDraw()>
<android.os.SystemPropertiesProto.Property: void <init>(android.os.SystemPropertiesProto)>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.util.StatsLogInternal: int write(int,int,int,int)>
<android.opengl.GLLogWrapper: void glNormal3x(int,int,int)>
<android.widget.AbsListView.InputConnectionWrapper: boolean beginBatchEdit()>
<android.widget.Gallery.FlingRunnable: void stop(boolean)>
<android.location.GnssNavigationMessageCallbackTransport: void <init>(android.content.Context,android.location.ILocationManager)>
<android.widget.DatePickerCalendarDelegate: void setMaxDate(long)>
<android.app.admin.IDevicePolicyManager: boolean requestBugreport(android.content.ComponentName)>
<android.net.LinkProperties.ProvisioningChange: android.net.LinkProperties.ProvisioningChange[] values()>
<android.providers.settings.GlobalSettingsProto.Network: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: void onViewDetachedFromWindow(android.view.View)>
<android.webkit.WebViewFactory.MissingWebViewPackageException: void <init>(java.lang.Exception)>
<android.widget.CalendarViewLegacyDelegate: int getFirstDayOfWeek()>
<android.opengl.GLLogWrapper: boolean glIsBuffer(int)>
<android.view.IWindowSession: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>
<android.security.keystore.DelegatingX509Certificate: byte[] getSignature()>
<android.content.pm.IPackageManager: java.lang.String getAppPredictionServicePackageName()>
<android.opengl.GLLogWrapper: void glScalef(float,float,float)>
<android.graphics.drawable.RippleComponent: void setup(float,int)>
<android.location.ILocationManager: java.util.List getAllProviders()>
<android.opengl.GLLogWrapper: void glGenBuffers(int,int[],int)>
<android.hardware.camera2.ICameraDeviceCallbacks: void onRequestQueueEmpty()>
<android.os.UidProto.Sensor: void <init>(android.os.UidProto)>
<android.graphics.drawable.RippleBackground: void setState(boolean,boolean,boolean)>
<android.hardware.camera2.ICameraDeviceUser: void prepare2(int,int)>
<android.net.Uri.StringUri: java.lang.String getAuthority()>
<android.view.IWindowManager: boolean registerWallpaperVisibilityListener(android.view.IWallpaperVisibilityListener,int)>
<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.view.IWindowManager: void requestUserActivityNotification()>
<android.widget.SimpleMonthView: void setSelectedDay(int)>
<android.media.MediaCodec.BufferMap: void put(int,java.nio.ByteBuffer)>
<android.app.IActivityManager: void registerTaskStackListener(android.app.ITaskStackListener)>
<android.app.IActivityManager: void makePackageIdle(java.lang.String,int)>
<android.app.IActivityManager: int getUidProcessState(int,java.lang.String)>
<android.app.BackStackState: void <init>(android.os.Parcel)>
<android.os.StrictMode.InstanceTracker: void <init>(java.lang.Object)>
<android.webkit.WebSyncManager: void run()>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.widget.RemoteViews.BitmapCache: int getBitmapMemory()>
<android.widget.TimePickerClockDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.app.IActivityManager: boolean startUserInBackgroundWithListener(int,android.os.IProgressListener)>
<android.widget.Editor.InsertionHandleView: int getHorizontalGravity(boolean)>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,float[],int)>
<android.hardware.camera2.ICameraDeviceUser: void updateOutputConfiguration(int,android.hardware.camera2.params.OutputConfiguration)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean engineVerify(byte[],int,int)>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>
<android.app.InstantAppResolverService.ServiceHandler: void handleMessage(android.os.Message)>
<android.media.Cea708CCWidget.CCView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.text.DynamicLayout.ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.widget.Editor.SpanController: void hide()>
<android.view.IWindowManager: void setAnimationScales(float[])>
<android.mtp.MtpPropertyList: long[] getLongValues()>
<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)>
<android.animation.PathKeyframes.FloatKeyframesBase: java.lang.Class getType()>
<android.app.IActivityManager: long[] getProcessPss(int[])>
<android.app.IActivityManager: void unhandledBack()>
<android.app.admin.IDevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String,int)>
<android.speech.tts.AbstractEventLogger: void onAudioDataWritten()>
<android.transition.ChangeTransform.GhostListener: void <init>(android.view.View,android.view.View,android.view.GhostView)>
<android.widget.CalendarViewLegacyDelegate: long getMinDate()>
<android.media.PlayerBase.IPlayerWrapper: void stop()>
<android.net.Uri.OpaqueUri: java.lang.String getFragment()>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void write(byte[],int,int)>
<android.stats.mediametrics.Mediametrics.CodecData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.widget.GridLayout.Arc: java.lang.String toString()>
<android.text.TextDirectionHeuristics.FirstStrong: int checkRtl(java.lang.CharSequence,int,int)>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)>
<android.widget.RemoteViews.ViewTree: void createTree()>
<android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)>
<android.util.RecurrenceRule.NonrecurringIterator: android.util.Range next()>
<android.net.VpnService.Callback: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.util.StatsLogInternal: int write(int,int,int,int,int,int,int,int,int,int,int)>
<android.os.IInstalld: void restoreAppDataSnapshot(java.lang.String,java.lang.String,int,java.lang.String,int,int,int)>
<android.os.IInstalld: boolean dumpProfiles(int,java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode[] values()>
<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.ParcelableCrashInfo)>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: boolean isViewTypeInRange(int)>
<android.providers.settings.GlobalSettingsProto.PdpWatchdog: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.BackStackRecord: android.app.FragmentTransaction detach(android.app.Fragment)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: boolean adjustConfigForEncryptingWithPrivateKey()>
<android.widget.FastScroller: void onScroll(int,int,int)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Void)>
<android.widget.GridView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.providers.settings.GlobalSettingsProto.Autofill: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.net.wifi.SupplicantState: boolean isDriverActive(android.net.wifi.SupplicantState)>
<android.app.IActivityManager: void performIdleMaintenance()>
<android.mtp.MtpPropertyList: void <init>(int)>
<android.os.storage.IStorageManager: int getPasswordType()>
<android.security.keystore.IKeystoreService: boolean isConfirmationPromptSupported()>
<android.animation.Animator.AnimatorConstantState: android.animation.Animator newInstance()>
<android.app.IActivityManager: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)>
<android.opengl.EGLLogWrapper: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<android.app.admin.IDevicePolicyManager: void setDeviceProvisioningConfigApplied()>
<android.util.MapCollections: java.util.Set getKeySet()>
<android.opengl.GLSurfaceView.EglHelper: void throwEglException(java.lang.String,int)>
<android.widget.ListPopupWindow.ResizePopupRunnable: void run()>
<android.bluetooth.IBluetoothHeadsetClient: boolean connect(android.bluetooth.BluetoothDevice)>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
<android.telecom.Connection.FailureSignalingConnection: void <init>(android.telecom.DisconnectCause)>
<android.opengl.GLLogWrapper: boolean glIsRenderbufferOES(int)>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getUserInfo()>
<android.renderscript.Program.ProgramParam: android.renderscript.Program.ProgramParam[] values()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<android.bluetooth.IBluetooth: long getDiscoveryEndMillis()>
<android.app.ActivityTransitionCoordinator: void onTransitionsComplete()>
<android.app.admin.SecurityLogTags: void writeSecurityKeyDestroyed(int,java.lang.String,int)>
<android.net.lowpan.ILowpanInterface: void startEnergyScan(java.util.Map,android.net.lowpan.ILowpanEnergyScanCallback)>
<android.widget.TabHost.FactoryContentStrategy: android.view.View getContentView()>
<android.gesture.Instance: android.gesture.Instance createInstance(int,int,android.gesture.Gesture,java.lang.String)>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult()>
<android.security.IKeyChainService: java.lang.String installCaCertificate(byte[])>
<android.opengl.GLErrorWrapper: void glClearStencil(int)>
<android.widget.CalendarViewLegacyDelegate: void setFocusedMonthDateColor(int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int engineGetBlockSize()>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] indexMapping()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineSetParameter(java.lang.String,java.lang.Object)>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode valueOf(java.lang.String)>
<android.content.pm.IPackageManager: boolean isPackageDeviceAdminOnAnyUser(java.lang.String)>
<android.view.IWindowManager: void freezeDisplayRotation(int,int)>
<android.content.pm.IPackageManager: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>
<android.widget.Editor.SelectionModifierCursorController: boolean isSelectionStartDragged()>
<android.util.apk.ApkSigningBlockUtils: long getCentralDirOffset(java.nio.ByteBuffer,long)>
<android.widget.CalendarViewLegacyDelegate: long getMaxDate()>
<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.os.storage.IStorageManager: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int,android.content.res.ObbInfo)>
<android.widget.TextView.CharWrapper: java.lang.CharSequence subSequence(int,int)>
<android.view.WindowInsetsAnimationListener.InsetsAnimation: android.graphics.Insets getUpperBound()>
<android.app.ContextImpl: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>
<android.view.ViewRootImpl.SyntheticInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.telephony.JapanesePhoneNumberFormatter: void format(android.text.Editable)>
<android.app.SharedPreferencesImpl: android.content.SharedPreferences.Editor edit()>
<android.os.SystemService.State: android.os.SystemService.State[] values()>
<android.widget.CalendarViewLegacyDelegate: void setShowWeekNumber(boolean)>
<android.app.SystemServiceRegistry.StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.app.IActivityManager: java.util.List getRunningExternalApplications()>
<android.app.Activity.HostCallbacks: void onStartIntentSenderFromFragment(android.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<android.security.keystore.DelegatingX509Certificate: java.util.List getExtendedKeyUsage()>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.bluetooth.IBluetoothHidDevice: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.provider.Settings.GenerationTracker: void destroy()>
<android.speech.tts.AbstractEventLogger: void logFailure(int)>
<android.telecom.InCallService.InCallServiceBinder: void updateCall(android.telecom.ParcelableCall)>
<android.widget.Editor.SuggestionsPopupWindow: int clipVertically(int)>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType[] values()>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void finishSession()>
<android.media.Cea708CCWidget.CCWindowLayout: void clearText()>
<android.bluetooth.IBluetoothPbapClient: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.util.LauncherIcons.ShadowDrawable: void draw(android.graphics.Canvas)>
<android.widget.RelativeLayout.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.media.ImageReader.ListenerHandler: void handleMessage(android.os.Message)>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.media.MediaScannerConnection.ClientProxy: void onScanCompleted(java.lang.String,android.net.Uri)>
<android.net.DnsResolver.InetAddressAnswerAccumulator: void onAnswer(byte[],int)>
<android.inputmethodservice.IInputMethodWrapper: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: boolean handleMessage(android.os.Message)>
<android.app.ActivityThread.ServiceArgsData: java.lang.String toString()>
<android.view.IWindowManager: boolean shouldShowSystemDecors(int)>
<android.os.FileObserver.ObserverThread: void stopWatching(int[])>
<android.preference.PreferenceInflater: android.preference.PreferenceGroup onMergeRoots(android.preference.PreferenceGroup,boolean,android.preference.PreferenceGroup)>
<android.media.MediaPlayer.TimeProvider: void onNewPlayer()>
<android.app.ActivityTransitionCoordinator: android.view.Window getWindow()>
<android.widget.NumberPicker.PressedStateHelper: void buttonTapped(int)>
<android.os.IStatsManager: void sendWatchdogRollbackOccurredAtom(int,java.lang.String,long)>
<android.os.IVold: void moveStorage(java.lang.String,java.lang.String,android.os.IVoldTaskListener)>
<android.content.pm.IPackageManager: void clearApplicationProfileData(java.lang.String)>
<android.widget.Spinner.DropDownAdapter: boolean areAllItemsEnabled()>
<android.media.Utils: java.io.File getUniqueExternalFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<android.content.res.XmlBlock.Parser: boolean getFeature(java.lang.String)>
<android.bluetooth.IBluetoothAvrcpController: android.bluetooth.BluetoothAvrcpPlayerSettings getPlayerSettings(android.bluetooth.BluetoothDevice)>
<android.widget.CalendarViewLegacyDelegate: void setMaxDate(long)>
<android.providers.settings.SecureSettingsProto.PackageVerifier: void <init>(android.providers.settings.SecureSettingsProto)>
<android.providers.settings.SecureSettingsProto.Volume: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.PopupWindow.PopupBackgroundView: void <init>(android.widget.PopupWindow,android.content.Context)>
<android.providers.settings.GlobalSettingsProto.Bluetooth: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.media.MediaPlayer.ProvisioningThread: int status()>
<android.widget.ImageView.InspectionCompanion: void readProperties(android.widget.ImageView,android.view.inspector.PropertyReader)>
<android.hardware.camera2.ICameraDeviceUser: int createStream(android.hardware.camera2.params.OutputConfiguration)>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean deliverSelfNotifications()>
<android.net.Uri.StringUri: java.lang.String getFragment()>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur valueOf(java.lang.String)>
<android.widget.Spinner.DialogPopup: java.lang.CharSequence getHintText()>
<android.widget.DatePickerCalendarDelegate: java.lang.CharSequence getAccessibilityClassName()>
<android.sysprop.CryptoProperties.state_values: java.lang.String getPropValue()>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void doWork()>
<android.bluetooth.IBluetoothGattCallback: void onConfigureMTU(java.lang.String,int,int)>
<android.app.admin.SecurityLogTags: void writeSecurityAdbShellCommand(java.lang.String)>
<android.graphics.ImageDecoder.CallableSource: android.graphics.ImageDecoder createImageDecoder()>
<android.animation.FloatKeyframeSet: android.animation.Keyframes clone()>
<android.os.StrictMode.AndroidCloseGuardReporter: void report(java.lang.String,java.lang.Throwable)>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode valueOf(java.lang.String)>
<android.bluetooth.IBluetoothHidDeviceCallback: void onSetProtocol(android.bluetooth.BluetoothDevice,byte)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.FastScroller: void onSectionsChanged()>
<android.widget.DatePicker.AbstractDatePickerDelegate: java.lang.String getFormattedCurrentDate()>
<android.media.Cea708CCWidget.CCWindowLayout: void setPenAttr(android.media.Cea708CCParser.CaptionPenAttr)>
<android.widget.Editor.EasyEditPopupWindow: void createPopupWindow()>
<android.content.pm.IPackageManager: void resetApplicationPreferences(int)>
<android.opengl.GLLogWrapper: void glPopMatrix()>
<android.net.LocalSocketImpl.SocketInputStream: void close()>
<android.view.IWindowManager: boolean shouldShowIme(int)>
<android.opengl.GLLogWrapper: void glFrontFace(int)>
<android.preference.SeekBarVolumizer.H: void handleMessage(android.os.Message)>
<android.widget.RemoteViews.SetPendingIntentTemplate: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter.CalendarGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<android.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedAccessibilityServicesForUser(int)>
<android.bluetooth.IBluetoothGatt: void startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.IAdvertisingSetCallback)>
<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void setKey(android.security.keystore.AndroidKeyStoreKey)>
<android.app.Instrumentation.SyncRunnable: void <init>(java.lang.Runnable)>
<android.os.SystemPropertiesProto.Ro.Vendor: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.view.ViewRootImpl.InputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>
<android.graphics.ColorSpace.Model: android.graphics.ColorSpace.Model valueOf(java.lang.String)>
<android.os.UidProto.Wakelock: void <init>(android.os.UidProto)>
<android.view.View.ScrollabilityCache: void run()>
<android.location.ILocationManager: boolean stopGnssBatch()>
<android.widget.TabHost.ViewIdContentStrategy: android.view.View getContentView()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.ECB: void <init>(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: byte[] engineDoFinal(byte[],int,int)>
<android.hardware.camera2.ICameraDeviceUser: void endConfigure(int,android.hardware.camera2.impl.CameraMetadataNative)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setFixedSize(int,int)>
<android.net.Uri.HierarchicalUri: java.lang.String getScheme()>
<android.app.admin.IDevicePolicyManager: void enforceCanManageCaCerts(android.content.ComponentName,java.lang.String)>
<android.location.ILocationManager: boolean isProviderEnabledForUser(java.lang.String,int)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,int)>
<android.text.TextUtils.Reverser: void getChars(int,int,char[],int)>
<android.opengl.GLErrorWrapper: void glTexEnvf(int,int,float)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<android.animation.Keyframe.FloatKeyframe: float getFloatValue()>
<android.service.autofill.RequiredValidators: java.lang.String toString()>
<android.hardware.camera2.ICameraDeviceUser: void disconnect()>
<android.widget.RemoteViews.RemoteViewsContextWrapper: java.lang.String getPackageName()>
<android.widget.RemoteViews.Action: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void writeToParcel(android.os.Parcel,int)>
<android.apex.IApexService: android.apex.ApexInfo[] getActivePackages()>
<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,int,java.util.concurrent.Executor,android.content.ServiceConnection)>
<android.bluetooth.IBluetoothGatt: void getOwnAddress(int)>
<android.media.AudioManager.OnAmPortUpdateListener: void onAudioPatchListUpdate(android.media.AudioPatch[])>
<android.view.MenuInflater.MenuState: void readGroup(android.util.AttributeSet)>
<android.util.StatsLogInternal: int write(int,int,int,int,byte[],byte[],byte[])>
<android.widget.SuggestionsAdapter: void notifyDataSetChanged()>
<android.hardware.camera2.ICameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras,android.hardware.camera2.impl.PhysicalCaptureResultInfo[])>
<android.os.storage.IStorageManager: java.lang.String getPrimaryStorageUuid()>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklist getBlacklists(int)>
<android.content.ContentProvider.Transport: java.lang.String getType(android.net.Uri)>
<android.app.Notification.BuilderRemoteViews: android.app.Notification.BuilderRemoteViews clone()>
<android.app.admin.IDevicePolicyManager: void setOverrideApnsEnabled(android.content.ComponentName,boolean)>
<android.widget.GridLayout.Axis: android.widget.GridLayout.Arc[] getArcs()>
<android.preference.TwoStatePreference.SavedState: void <init>(android.os.Parcel)>
<android.location.GnssNavigationMessageCallbackTransport: void unregisterFromServer()>
<android.widget.FastScroller: void onItemCountChanged(int,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: android.security.KeyStore getKeyStore()>
<android.text.DynamicLayout.ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.app.SystemServiceRegistry: java.lang.Object getSystemService(android.app.ContextImpl,java.lang.String)>
<android.app.IActivityManager: int bindIsolatedService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,java.lang.String,int)>
<android.media.MediaFormat.FilteredMappedKeySet.KeyIterator: boolean hasNext()>
<android.widget.ExpandableListConnector: boolean isGroupExpanded(int)>
<android.view.inspector.InspectableProperty: android.view.inspector.InspectableProperty.FlagEntry[] flagMapping()>
<android.os.IStoraged: int getRecentPerf()>
<android.widget.SimpleMonthView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onActivityStopped(android.app.Activity)>
<android.widget.RemoteViews.ReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.opengl.GLSurfaceView.GLThread: void onPause()>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int,java.lang.String)>
<android.opengl.GLLogWrapper: void glLightf(int,int,float)>
<android.hardware.radio.TunerCallbackAdapter: void onEmergencyAnnouncement(boolean)>
<android.widget.YearPickerView.YearAdapter: java.lang.Object getItem(int)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void <init>(android.print.PrintFileDocumentAdapter,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>
<android.sysprop.CarProperties: java.util.Optional boot_user_override_id()>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes.IntKeyframes)>
<android.app.BackStackRecord: android.app.FragmentTransaction runOnCommit(java.lang.Runnable)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationCancel(android.animation.Animator)>
<android.os.IVold: void partition(java.lang.String,int,int)>
<android.hardware.input.IInputManager: android.view.InputMonitor monitorGestureInput(java.lang.String,int)>
<android.gamedriver.GameDriverProto.BlacklistsOrBuilder: int getBlacklistsCount()>
<android.util.StatsLogInternal: int write(int,byte[],long,int)>
<android.content.res.StringBlock: void <init>(byte[],int,int,boolean)>
<android.app.SharedPreferencesImpl: java.util.Map getAll()>
<android.stats.devicepolicy.nano.StringList: android.stats.devicepolicy.nano.StringList clear()>
<android.util.MapCollections.KeySet: java.lang.Object[] toArray()>
<android.opengl.GLLogWrapper: boolean glIsTexture(int)>
<android.accounts.AbstractAccountAuthenticator.Transport: void startAddAccountSession(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<android.os.IInstalld: void deleteOdex(java.lang.String,java.lang.String,java.lang.String)>
<android.os.IVold: void destroySandboxForApp(java.lang.String,java.lang.String,int)>
<android.widget.RemoteViews.TextViewDrawableAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.hardware.radio.TunerAdapter: java.util.Map getParameters(java.util.List)>
<android.hardware.SystemSensorManager.InjectEventQueue: void <init>(android.hardware.SystemSensorManager,android.os.Looper,android.hardware.SystemSensorManager,java.lang.String)>
<android.content.pm.IPackageManagerNative: int getTargetSdkVersionForPackage(java.lang.String)>
<android.widget.DatePickerCalendarDelegate: void <init>(android.widget.DatePicker,android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean performClick()>
<android.widget.AbsListView.InputConnectionWrapper: void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo)>
<android.media.Cea708CCWidget.CCView: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>
<android.media.MediaFormat.FilteredMappedKeySet: java.util.Iterator iterator()>
<android.app.ActivityThread.AndroidOs: java.io.FileDescriptor open(java.lang.String,int,int)>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int,long)>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel[] values()>
<android.widget.TimePicker.AbstractTimePickerDelegate.SavedState: void <init>(android.os.Parcelable,int,int,boolean)>
<android.content.pm.IPackageManager: boolean setInstantAppCookie(java.lang.String,byte[],int)>
<android.opengl.GLLogWrapper: void glShadeModel(int)>
<android.os.UidProto.BluetoothMisc: void <init>(android.os.UidProto)>
<android.content.res.StringBlock: java.lang.CharSequence get(int)>
<android.widget.CalendarViewLegacyDelegate: void setFirstDayOfWeek(int)>
<android.opengl.EGLLogWrapper: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.view.textclassifier.TextClassificationSession: boolean isDestroyed()>
<android.widget.Editor.TextActionModeCallback: void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect)>
<android.widget.SpellChecker.SpellParser: void stop()>
<android.widget.Editor.PositionListener: int getPositionXOnScreen()>
<android.speech.tts.BlockingAudioTrack: boolean init()>
<android.bluetooth.IBluetoothSap: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.security.IKeyChainService: boolean installKeyPair(byte[],byte[],byte[],java.lang.String)>
<android.speech.tts.FileSynthesisCallback: int start(int,int,int)>
<android.widget.RemoteViews.TextViewSizeAction: void <init>(android.widget.RemoteViews,int,int,float)>
<android.location.ILocationManager: void setExtraLocationControllerPackageEnabled(boolean)>
<android.app.ContextImpl: java.io.File getPreloadsFileCache()>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList setSharedElementState(android.os.Bundle,java.util.ArrayList)>
<android.net.Uri.OpaqueUri: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.SecurityLogTags: void writeSecurityOsShutdown()>
<android.util.StatsLogInternal: int write(int,int,int,int,byte[])>
<android.bluetooth.IBluetoothHearingAid: java.util.List getConnectedDevices()>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist.Builder newBuilder()>
<android.widget.Chronometer.InspectionCompanion: void readProperties(android.widget.Chronometer,android.view.inspector.PropertyReader)>
<android.media.ExifInterface.ByteOrderedDataInputStream: char readChar()>
<android.security.KeyStore.KeystoreResultPromise: java.util.concurrent.CompletableFuture getFuture()>
<android.view.IWindowManager: float getCurrentAnimatorScale()>
<android.widget.RemoteViews.OverrideTextColorsAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.RemoteViews.ReflectionAction: android.widget.RemoteViews.Action initActionAsync(android.widget.RemoteViews.ViewTree,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams forceDefaultColor()>
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>
<android.opengl.GLErrorWrapper: void glTexParameterf(int,int,float)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>
<android.app.WallpaperManager.FastBitmapDrawable: void setBounds(int,int,int,int)>
<android.widget.Editor.InsertionHandleView: void updatePosition(float,float,boolean)>
<android.text.Layout.Ellipsizer: java.lang.CharSequence subSequence(int,int)>
<android.gamedriver.GameDriverProto.Blacklist.Builder: android.gamedriver.GameDriverProto.Blacklist.Builder clearPackageNames()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getCount()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.preference.VolumePreference.SavedState: void <init>(android.os.Parcel)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onSignalStrengthChanged(int)>
<android.widget.TimePickerSpinnerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void add(int,android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout)>
<android.app.BackStackState: void writeToParcel(android.os.Parcel,int)>
<android.media.IPlayer: void setPan(float)>
<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)>
<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>
<android.view.DisplayCutout.Bounds: java.lang.String toString()>
<android.opengl.GLLogWrapper: void glEnableClientState(int)>
<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>
<android.app.IActivityManager: boolean unlockUser(int,byte[],byte[],android.os.IProgressListener)>
<android.media.WebVttRenderingWidget.RegionLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.app.ActivityThread.ApplicationThread: void setSchedulingGroup(int)>
<android.app.IActivityManager: boolean setProcessMemoryTrimLevel(java.lang.String,int,int)>
<android.bluetooth.IBluetoothA2dp: android.bluetooth.BluetoothDevice getActiveDevice()>
<android.graphics.Region.Op: android.graphics.Region.Op valueOf(java.lang.String)>
<android.speech.tts.AbstractEventLogger: void onEngineComplete()>
<android.hardware.ICameraServiceProxy: void notifyCameraState(java.lang.String,int,int,java.lang.String,int)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
<android.content.pm.IPackageManager: void notifyPackageUse(java.lang.String,int)>
<android.bluetooth.IBluetoothHidDeviceCallback: void onGetReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.app.LoadedApk.ReceiverDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.media.Utils: long divUp(long,long)>
<android.app.ContextImpl: java.io.File[] getObbDirs()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initAlgorithmSpecificParameters()>
<android.mtp.MtpStorageManager.MtpObjectState: android.mtp.MtpStorageManager.MtpObjectState valueOf(java.lang.String)>
<android.stats.mediametrics.Mediametrics.AudioPolicyData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.opengl.GLLogWrapper: void glAlphaFuncx(int,int)>
<android.hardware.radio.TunerAdapter: java.util.Map setParameters(java.util.Map)>
<android.widget.Spinner.DialogPopup: void setHorizontalOffset(int)>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4f(int,float,float,float,float)>
<android.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsMetaData getTemporaryMetaData()>
<android.view.IWindowManager: void endProlongedAnimations()>
<android.hardware.input.IInputManager: boolean isInputDeviceEnabled(int)>
<android.util.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>
<android.bluetooth.IBluetooth: boolean isLeCodedPhySupported()>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void queueRequestedPositionToLoad(int)>
<android.app.ActivityThread.ApplicationThread: void scheduleOnNewActivityOptions(android.os.IBinder,android.os.Bundle)>
<android.widget.Spinner.SpinnerPopup: android.graphics.drawable.Drawable getBackground()>
<android.widget.DayPickerView: void setPosition(int)>
<android.bluetooth.IBluetoothPan: java.util.List getConnectedDevices()>
<android.app.admin.IDevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>
<android.widget.Spinner.DialogPopup: boolean isShowing()>
<android.gesture.GestureLibraries.ResourceGestureLibrary: void <init>(android.content.Context,int)>
<android.bluetooth.IBluetooth: boolean setMetadata(android.bluetooth.BluetoothDevice,int,byte[])>
<android.opengl.GLLogWrapper: int glCheckFramebufferStatusOES(int)>
<android.content.pm.IPackageManager: void systemReady()>
<android.os.IExternalVibratorService: void onExternalVibrationStop(android.os.ExternalVibration)>
<android.app.IActivityManager: void unregisterProcessObserver(android.app.IProcessObserver)>
<android.content.pm.IPackageManager: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)>
<android.app.ActivityThread.ProviderKey: int hashCode()>
<android.bluetooth.IBluetoothManager: void unbindBluetoothProfileService(int,android.bluetooth.IBluetoothProfileServiceConnection)>
<android.gamedriver.GameDriverProto.Blacklist.Builder: com.android.framework.protobuf.ByteString getPackageNamesBytes(int)>
<android.app.ActivityTransitionState: void saveState(android.os.Bundle)>
<android.net.lowpan.ILowpanInterface: void removeOnMeshPrefix(android.net.IpPrefix)>
<android.os.IStoraged: void onUserStopped(int)>
<android.widget.CalendarViewLegacyDelegate: void setWeekSeparatorLineColor(int)>
<android.os.ResultReceiver.MyResultReceiver: void send(int,android.os.Bundle)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onActiveDataSubIdChanged(int)>
<android.bluetooth.IBluetooth: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.util.MapCollections.KeySet: java.lang.Object[] toArray(java.lang.Object[])>
<android.animation.AnimatorSet.Node: void addParents(java.util.ArrayList)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor remove(java.lang.String)>
<android.hardware.SystemSensorManager.BaseEventQueue: int injectSensorDataBase(int,float[],int,long)>
<android.widget.SimpleMonthView: void setOnDayClickListener(android.widget.SimpleMonthView.OnDayClickListener)>
<android.os.storage.IStorageManager: int decryptStorage(java.lang.String)>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(int[],int)>
<android.view.IWindowManager: void setStrictModeVisualIndicatorPreference(java.lang.String)>
<android.animation.AnimatorInflater.PathDataEvaluator: android.util.PathParser.PathData evaluate(float,android.util.PathParser.PathData,android.util.PathParser.PathData)>
<android.hardware.SystemSensorManager.BaseEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.providers.settings.SecureSettingsProto.Mount: void <init>(android.providers.settings.SecureSettingsProto)>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style[] values()>
<android.app.ITaskStackListener: void onSizeCompatModeActivityChanged(int,android.os.IBinder)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: void onChange(boolean)>
<android.opengl.GLLogWrapper: void glLightModelx(int,int)>
<android.animation.AnimatorSet.Node: android.animation.AnimatorSet.Node clone()>
<android.providers.settings.GlobalSettingsProto.PackageVerifier: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.os.storage.IStorageManager: int encryptStorage(int,java.lang.String)>
<android.inputmethodservice.IInputMethodWrapper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.security.keystore.DelegatingX509Certificate: java.util.Date getNotBefore()>
<android.content.ContentProvider.Transport: boolean refresh(java.lang.String,android.net.Uri,android.os.Bundle,android.os.ICancellationSignal)>
<com.android.server.StatLoggerProto.Event: void <init>(com.android.server.StatLoggerProto)>
<android.app.IActivityManager: void notifyLockedProfile(int)>
<android.app.admin.IDevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)>
<android.os.WorkSourceProto.WorkChain: void <init>(android.os.WorkSourceProto)>
<android.opengl.GLLogWrapper: void glMaterialf(int,int,float)>
<android.widget.YearPickerView.YearAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.stats.mediametrics.Mediametrics.AudioTrackData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.opengl.GLErrorWrapper: void glLightModelf(int,float)>
<android.net.Uri.HierarchicalUri: java.lang.String getSchemeSpecificPart()>
<android.hardware.usb.IUsbManager: void setPortRoles(java.lang.String,int,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: java.security.AlgorithmParameters engineGetParameters()>
<android.media.ImageWriter.WriterSurfaceImage: int getHeight()>
<android.opengl.GLLogWrapper: void glClientActiveTexture(int)>
<android.net.INetdEventCallback: void onPrivateDnsValidationEvent(int,java.lang.String,java.lang.String,boolean)>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result[] values()>
<android.widget.ActivityChooserView.Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.view.ViewDebug.ExportedProperty: boolean hasAdjacentMapping()>
<android.view.IWindowManager: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>
<android.telecom.CallRedirectionService.CallRedirectionBinder: void placeCall(com.android.internal.telecom.ICallRedirectionAdapter,android.net.Uri,android.telecom.PhoneAccountHandle,boolean)>
<android.security.keystore.IKeystoreCertificateChainCallback: void onFinished(android.security.keystore.KeystoreResponse,android.security.keymaster.KeymasterCertificateChain)>
<android.widget.AdapterViewAnimator.CheckForTap: void run()>
<android.opengl.GLLogWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.app.ActivityTransitionCoordinator: void setResultReceiver(android.os.ResultReceiver)>
<android.net.lowpan.ILowpanManager: void addInterface(android.net.lowpan.ILowpanInterface)>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.util.MapCollections.KeySet: boolean add(java.lang.Object)>
<android.app.Activity.HostCallbacks: boolean onShouldSaveFragmentState(android.app.Fragment)>
<android.app.admin.IDevicePolicyManager: void reportFailedPasswordAttempt(int)>
<android.apex.IApexService: void markStagedSessionSuccessful(int)>
<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>
<android.webkit.EventLogTags: void writeBrowserSnapCenter()>
<android.opengl.GLErrorWrapper: int glGetError()>
<android.net.Uri.HierarchicalUri: void writeToParcel(android.os.Parcel,int)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: boolean test(android.view.View)>
<android.text.Layout.SpannedEllipsizer: int getSpanFlags(java.lang.Object)>
<android.app.ContextImpl: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.media.ExifInterface.ByteOrderedDataInputStream: int readUnsignedShort()>
<android.content.res.XmlBlock.Parser: void setInput(java.io.InputStream,java.lang.String)>
<android.view.IWindowManager: int getRemoveContentMode(int)>
<android.location.GnssNavigationMessageCallbackTransport: boolean registerWithServer()>
<android.app.IActivityManager: void cancelIntentSender(android.content.IIntentSender)>
<android.media.MediaPlayer.ProvisioningThread: void run()>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void notifyOutsideTouch()>
<android.app.admin.IDevicePolicyManager: boolean isPackageAllowedToAccessCalendarForUser(java.lang.String,int)>
<android.gamedriver.GameDriverProto.BlacklistsOrBuilder: android.gamedriver.GameDriverProto.Blacklist getBlacklists(int)>
<android.providers.settings.GlobalSettingsProto.TemperatureWarning: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: boolean isRtl(char[],int,int)>
<android.os.IVold: int fdeComplete()>
<android.util.MapCollections.ValuesCollection: boolean containsAll(java.util.Collection)>
<android.widget.TextView.TextAppearanceAttributes: java.lang.String toString()>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void initialize(java.lang.String)>
<android.app.EnterTransitionCoordinator: android.transition.Transition getEnterViewsTransition()>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void runOrPost(android.view.View,int)>
<android.app.ITaskStackListener: void onTaskSnapshotChanged(int,android.app.ActivityManager.TaskSnapshot)>
<android.content.res.StringBlock: void close()>
<android.app.ActivityThread.ApplicationThread: void requestDirectActions(android.os.IBinder,com.android.internal.app.IVoiceInteractor,android.os.RemoteCallback,android.os.RemoteCallback)>
<android.app.ActivityManager.UidObserver: void onUidIdle(int,boolean)>
<android.speech.tts.PlaybackSynthesisCallback: boolean hasStarted()>
<android.opengl.GLErrorWrapper: void glClearDepthx(int)>
<android.media.DecoderCapabilities.AudioDecoder: android.media.DecoderCapabilities.AudioDecoder[] values()>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.content.res.ThemedResourceCache: boolean shouldInvalidateEntry(java.lang.Object,int)>
<android.opengl.GLLogWrapper: void glLoadPaletteFromModelViewMatrixOES()>
<android.view.ViewRootImpl.ViewPostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.hardware.SystemSensorManager.SensorEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.widget.ActionMenuPresenter.OpenOverflowRunnable: void <init>(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter.OverflowPopup)>
<android.app.ContextImpl: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.widget.Editor.InsertionPointCursorController: void onDetached()>
<android.os.storage.IStorageManager: void benchmark(java.lang.String,android.os.IVoldTaskListener)>
<android.bluetooth.IBluetoothGatt: void serverConnect(int,java.lang.String,boolean,int)>
<android.content.pm.IPackageManager: java.lang.String getServicesSystemSharedLibraryPackageName()>
<android.util.apk.ApkSigningBlockUtils: void setUnsignedInt32LittleEndian(int,byte[],int)>
<android.app.ContextImpl.ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)>
<android.widget.TextView.ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.app.ContextImpl: java.io.File getSharedPreferencesPath(java.lang.String)>
<android.security.keystore.IKeystoreService: int clear_uid(long)>
<android.app.LoadedApk.WarningContextClassLoader: java.net.URL getResource(java.lang.String)>
<android.opengl.GLSurfaceView.EglHelper: boolean createSurface()>
<android.net.Uri.HierarchicalUri: android.net.Uri.Builder buildUpon()>
<android.net.LocalSocketImpl: int available()>
<android.widget.ImageView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.opengl.GLLogWrapper: void <init>(javax.microedition.khronos.opengles.GL,java.io.Writer,boolean)>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result valueOf(java.lang.String)>
<android.app.EnterTransitionCoordinator: void clearState()>
<android.bluetooth.IBluetoothHeadsetClient: boolean acceptCall(android.bluetooth.BluetoothDevice,int)>
<android.os.IncidentHeaderProto.StatsdConfigKey: void <init>(android.os.IncidentHeaderProto)>
<android.security.keystore.IKeystoreService: int lock(int)>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,int[],int)>
<android.os.storage.IStorageManager: void createUserKey(int,int,boolean)>
<android.app.admin.IDevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,boolean)>
<android.net.Uri.OpaqueUri: android.net.Uri readFrom(android.os.Parcel)>
<android.opengl.GLLogWrapper: void glDisableClientState(int)>
<android.bluetooth.IBluetoothGatt: void startScan(int,android.bluetooth.le.ScanSettings,java.util.List,java.util.List,java.lang.String)>
<android.net.lowpan.ILowpanManager: java.lang.String[] getInterfaceList()>
<android.util.MapCollections.KeySet: boolean containsAll(java.util.Collection)>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,int[],int)>
<android.app.SharedPreferencesImpl.EditorImpl: boolean commit()>
<android.widget.RemoteViews.TextViewDrawableAction: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewRootImpl.W: void dispatchWindowShown()>
<android.bluetooth.IBluetooth: boolean enableNoAutoConnect()>
<android.view.ViewRootImpl.ImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.view.Choreographer.FrameDisplayEventReceiver: void run()>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.media.MediaFormat.FilteredMappedKeySet: boolean contains(java.lang.Object)>
<android.widget.TextClock.FormatChangeObserver: void onChange(boolean)>
<android.view.IWindowManager: void setForceShowSystemBars(boolean)>
<android.app.admin.IDevicePolicyManager: boolean isAdminActive(android.content.ComponentName,int)>
<android.app.admin.IDevicePolicyManager: void setLockTaskFeatures(android.content.ComponentName,int)>
<android.providers.settings.GlobalSettingsProto.Database: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.util.MapCollections.KeySet: boolean contains(java.lang.Object)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<android.hardware.input.IInputManager: void enableInputDevice(int)>
<android.bluetooth.IBluetooth: boolean isMultiAdvertisementSupported()>
<android.app.WallpaperManager.WallpaperSetCompletion: void <init>(android.app.WallpaperManager)>
<android.bluetooth.IBluetoothGatt: void setScanResponseData(int,android.bluetooth.le.AdvertiseData)>
<android.widget.TextView.ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.content.res.XmlBlock.Parser: java.lang.Object getProperty(java.lang.String)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onCellInfoChanged(java.util.List)>
<android.net.Uri.Part: android.net.Uri.Part fromEncoded(java.lang.String)>
<android.app.BackStackRecord: android.app.FragmentTransaction setReorderingAllowed(boolean)>
<android.security.keystore.IKeystoreOperationResultCallback: void onFinished(android.security.keymaster.OperationResult)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.ECB.NoPadding: void finalize()>
<android.content.pm.IPackageManager: boolean getBlockUninstallForUser(java.lang.String,int)>
<android.media.MediaScanner.MyMediaScannerClient: void handleStringTag(java.lang.String,java.lang.String)>
<android.os.IStatsManager: void addConfiguration(long,byte[],java.lang.String)>
<android.content.pm.IPackageManager: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<android.util.StatsLogInternal: int write(int,int,int,int,java.lang.String,long)>
<android.animation.Keyframe.ObjectKeyframe: android.animation.Keyframe clone()>
<android.content.pm.IPackageManager: void notifyDexLoad(java.lang.String,java.util.List,java.util.List,java.lang.String)>
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,int)>
<android.app.BackStackRecord: java.lang.String toString()>
<android.widget.Editor.PinnedPopupWindow: int getTextOffset()>
<android.accounts.AbstractAccountAuthenticator.Transport: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
<android.util.XmlPullAttributes: java.lang.String getIdAttribute()>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: android.renderscript.ProgramVertexFixedFunction create()>
<android.widget.AbsListView.CheckForTap: void run()>
<android.os.storage.IStorageShutdownObserver: void onShutDownComplete(int)>
<android.app.ContextImpl: void setWallpaper(java.io.InputStream)>
<android.os.IVold: boolean supportsCheckpoint()>
<android.hardware.usb.IUsbManager: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>
<android.net.lowpan.ILowpanInterface: void stopEnergyScan()>
<android.bluetooth.IBluetoothHeadset: java.util.List getConnectedDevices()>
<android.telecom.InCallService.InCallServiceBinder: void onHandoverComplete(java.lang.String)>
<android.util.StatsLogInternal: int write(int,int,long)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],java.lang.String,int,int)>
<android.media.MediaCodec.BufferMap: void remove(int)>
<android.service.autofill.NegationValidator: void writeToParcel(android.os.Parcel,int)>
<android.widget.Editor.CursorController: boolean isActive()>
<android.util.JsonToken: android.util.JsonToken[] values()>
<android.app.admin.IDevicePolicyManager: void setOrganizationName(android.content.ComponentName,java.lang.CharSequence)>
<android.view.IWindowSession: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>
<android.view.ViewRootImpl.W: void dispatchDragEvent(android.view.DragEvent)>
<android.widget.HorizontalScrollView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.content.res.XmlBlock.Parser: int getAttributeNameResource(int)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setFormat(int)>
<android.opengl.GLSurfaceView.GLThreadManager: void releaseEglContextLocked(android.opengl.GLSurfaceView.GLThread)>
<android.widget.RelativeLayout.DependencyGraph.Node: android.widget.RelativeLayout.DependencyGraph.Node acquire(android.view.View)>
<android.widget.ExpandableListConnector: int getCount()>
<android.app.admin.IDevicePolicyManager: boolean isAlwaysOnVpnLockdownEnabled(android.content.ComponentName)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespace()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void initKey(android.security.keystore.AndroidKeyStoreKey)>
<android.view.ViewRootImpl.InputStage: void forward(android.view.ViewRootImpl.QueuedInputEvent)>
<android.graphics.Paint.Join: android.graphics.Paint.Join[] values()>
<android.view.ViewDebug.ExportedProperty: java.lang.String category()>
<android.bluetooth.IBluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.preference.PreferenceActivity.HeaderAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.bluetooth.IBluetoothHeadset: void clccResponse(int,int,int,int,boolean,java.lang.String,int)>
<android.app.Instrumentation.ActivityWaiter: void <init>(android.content.Intent)>
<android.app.IActivityManager: android.app.ActivityManager.StackInfo getFocusedStackInfo()>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,float[],int)>
<android.bluetooth.IBluetoothMapClient: int getPriority(android.bluetooth.BluetoothDevice)>
<android.media.Cea708CCWidget.CCLayout: void <init>(android.content.Context)>
<android.bluetooth.IBluetoothHearingAid: void adjustVolume(int)>
<android.sysprop.AdbProperties: java.util.Optional secure()>
<android.bluetooth.BluetoothSocket.SocketState: android.bluetooth.BluetoothSocket.SocketState valueOf(java.lang.String)>
<android.database.ContentObserver.NotificationRunnable: void run()>
<android.widget.AbsListView.MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>
<android.opengl.GLErrorWrapper: void glColorMask(boolean,boolean,boolean,boolean)>
<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser(int)>
<android.os.MemoryFile.MemoryOutputStream: void write(int)>
<android.security.keystore.DelegatingX509Certificate: java.lang.String getSigAlgOID()>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.text.Layout.SpannedEllipsizer: int getSpanStart(java.lang.Object)>
<android.app.servertransaction.ObjectPool: android.app.servertransaction.ObjectPoolItem obtain(java.lang.Class)>
<android.opengl.GLLogWrapper: void glSampleCoveragex(int,boolean)>
<android.permission.PermissionControllerManager.PendingCountPermissionAppsRequest: void run()>
<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>
<android.widget.DatePickerSpinnerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLErrorWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.security.KeyStore.State: android.security.KeyStore.State[] values()>
<android.providers.settings.SecureSettingsProto.Sounds: void <init>(android.providers.settings.SecureSettingsProto)>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.content.AsyncTaskLoader.LoadTask: java.lang.Object doInBackground(java.lang.Void[])>
<android.app.IActivityManager: void setAlwaysFinish(boolean)>
<android.app.ActivityThread.AndroidOs: boolean access(java.lang.String,int)>
<android.os.StrictMode.InstanceTracker: void finalize()>
<android.util.StatsLogInternal: int write(int,long,java.lang.String,long,long,byte[])>
<android.os.storage.IStorageManager: java.lang.String getMountedObbPath(java.lang.String)>
<android.app.IWallpaperManager: void registerWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>
<android.gsi.IGsiService: int wipeGsiUserdata()>
<android.util.StatsLogInternal: int write(int,byte[],int,int)>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>
<android.content.pm.ApplicationInfoProto.Detail: void <init>(android.content.pm.ApplicationInfoProto)>
<android.os.IBatteryPropertiesRegistrar: int getProperty(int,android.os.BatteryProperty)>
<android.security.keystore.DelegatingX509Certificate: java.lang.String getSigAlgName()>
<android.media.MediaFormat.FilteredMappedKeySet.KeyIterator: java.lang.String next()>
<android.media.Cea708CCWidget.CCView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.TimePickerSpinnerDelegate: android.view.View getMinuteView()>
<android.hardware.usb.IUsbManager: void setScreenUnlockedFunctions(long)>
<android.speech.tts.PlaybackSynthesisCallback: void rangeStart(int,int,int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initKey(int,java.security.Key)>
<android.net.Uri.HierarchicalUri: boolean isHierarchical()>
<android.mtp.MtpPropertyList: int[] getObjectHandles()>
<android.app.SystemServiceRegistry.StaticApplicationContextServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.media.MediaFormat.FilteredMappedKeySet: java.lang.String mapItemToKey(java.lang.String)>
<android.util.apk.WrappedX509Certificate: byte[] getSigAlgParams()>
<android.widget.SelectionActionModeHelper.TextClassificationHelper: android.widget.SelectionActionModeHelper.SelectionResult getOriginalSelection()>
<android.app.ContextImpl: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.app.ContextImpl: void setOuterContext(android.content.Context)>
<android.media.midi.MidiPortImpl: int packData(byte[],int,int,long,byte[])>
<android.widget.DatePicker.AbstractDatePickerDelegate: void setCurrentLocale(java.util.Locale)>
<android.graphics.BlendMode: android.graphics.BlendMode fromValue(int)>
<android.permission.PermissionControllerManager.PendingRevokeRuntimePermissionRequest: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.accounts.AccountManager.BaseFutureTask: void postRunnableToHandler(java.lang.Runnable)>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: java.lang.Void doInBackground(java.lang.Object[])>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(java.io.InputStream,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.os.IIncidentCompanion: void authorizeReport(int,java.lang.String,java.lang.String,java.lang.String,int,android.os.IIncidentAuthListener)>
<android.app.ITaskStackListener: void onTaskMovedToFront(android.app.ActivityManager.RunningTaskInfo)>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,int[],int)>
<android.widget.ListView.FixedViewInfo: void <init>(android.widget.ListView)>
<android.opengl.GLLogWrapper: void glCurrentPaletteMatrixOES(int)>
<android.opengl.GLErrorWrapper: void glOrthox(int,int,int,int,int,int)>
<android.content.pm.IPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<android.widget.CalendarViewLegacyDelegate: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: void onViewAttachedToWindow(android.view.View)>
<android.bluetooth.le.IAdvertisingSetCallback: void onAdvertisingEnabled(int,boolean,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: byte[] update(byte[],int,int)>
<android.media.ImageReader.SurfaceImage.SurfacePlane: int getRowStride()>
<android.companion.CompanionDeviceManager.CallbackProxy: void onActivityDestroyed(android.app.Activity)>
<android.widget.RemoteViewsAdapter.RemoteServiceHandler: void unbindNow()>
<android.hardware.radio.Utils: void writeStringMap(android.os.Parcel,java.util.Map)>
<android.content.pm.IPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)>
<android.widget.DayPickerPagerAdapter: int getItemPosition(java.lang.Object)>
<android.app.Activity.HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.ViewRootImpl.InputStage: void finish(android.view.ViewRootImpl.QueuedInputEvent,boolean)>
<android.view.textclassifier.EntityConfidence: java.util.List getEntities()>
<android.app.admin.IDevicePolicyManager: boolean startViewCalendarEventInManagedProfile(java.lang.String,long,long,long,boolean,int)>
<android.opengl.GLLogWrapper: void glRenderbufferStorageOES(int,int,int,int)>
<android.opengl.GLLogWrapper: void glTexParameteri(int,int,int)>
<android.media.Cea708CCWidget.ScaledLayout: void onLayout(boolean,int,int,int,int)>
<android.speech.SpeechRecognizer.InternalListener: void onBeginningOfSpeech()>
<android.gamedriver.GameDriverProto.Blacklist.Builder: java.util.List getPackageNamesList()>
<android.opengl.GLErrorWrapper: void glLineWidth(float)>
<android.util.MapCollections.EntrySet: int size()>
<android.view.ViewRootImpl.InputStage: void apply(android.view.ViewRootImpl.QueuedInputEvent,int)>
<android.bluetooth.IBluetoothHeadset: boolean setActiveDevice(android.bluetooth.BluetoothDevice)>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeValue(int)>
<android.gamedriver.GameDriverProto.BlacklistOrBuilder: long getVersionCode()>
<android.app.Instrumentation.Idler: void waitForIdle()>
<android.widget.DayPickerView: void setFirstDayOfWeek(int)>
<android.media.ImageReader.SurfaceImage: int getScalingMode()>
<android.view.HandlerActionQueue.HandlerAction: void <init>(java.lang.Runnable,long)>
<android.widget.ActionMenuPresenter.SavedState: int describeContents()>
<android.media.ExifInterface.ByteOrderedDataInputStream: float readFloat()>
<android.animation.Keyframe.FloatKeyframe: java.lang.Object clone()>
<android.opengl.GLLogWrapper: void glMultMatrixf(float[],int)>
<android.widget.Editor.PinnedPopupWindow: boolean isShowing()>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.DayPickerViewPager: void <init>(android.content.Context,android.util.AttributeSet)>
<android.sax.RootElement.Handler: void characters(char[],int,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: byte[] engineGetIV()>
<android.os.IVold: void fbeEnable()>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context)>
<android.content.pm.IPackageManager: void restoreDefaultApps(byte[],int)>
<android.location.ILocationManager: boolean startGnssBatch(long,boolean,java.lang.String)>
<android.security.KeyStore.KeystoreResultPromise: void onFinished(android.security.keystore.KeystoreResponse)>
<android.os.IVold: void prepareUserStorage(java.lang.String,int,int,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: long getConsumedInputSizeBytes()>
<android.bluetooth.IBluetoothHeadsetPhone: boolean processChld(int)>
<android.widget.ListView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.view.ViewRootImpl.EarlyPostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<android.widget.Spinner.SpinnerPopup: void setAdapter(android.widget.ListAdapter)>
<android.widget.GridLayout.InspectionCompanion: void readProperties(android.widget.GridLayout,android.view.inspector.PropertyReader)>
<android.widget.RemoteViews.TextViewDrawableAction: int getActionTag()>
<android.bluetooth.IBluetoothGattCallback: void onDescriptorRead(java.lang.String,int,int,byte[])>
<android.widget.TableRow.ChildrenTracker: void onChildViewRemoved(android.view.View,android.view.View)>
<android.bluetooth.IBluetooth: int getProfileConnectionState(int)>
<android.app.BackStackRecord: android.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,int[],int)>
<android.view.IWindowSession: boolean getInTouchMode()>
<android.telephony.NetworkService.INetworkServiceWrapper: void removeNetworkServiceProvider(int)>
<android.content.pm.IPackageManager: boolean isPackageSuspendedForUser(java.lang.String,int)>
<android.app.admin.IDevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<android.view.IWindowSession: void insetsModified(android.view.IWindow,android.view.InsetsState)>
<android.content.pm.IPackageManager: int getPermissionFlags(java.lang.String,java.lang.String,int)>
<android.security.KeyStore.KeyCharacteristicsPromise: void onFinished(android.security.keystore.KeystoreResponse,android.security.keymaster.KeyCharacteristics)>
<android.content.pm.BaseParceledListSlice: void writeToParcel(android.os.Parcel,int)>
<android.media.ExifInterface.Rational: java.lang.String toString()>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String,int)>
<android.app.ActivityTransitionCoordinator: void moveSharedElementsToOverlay()>
<android.app.IActivityManager: boolean isIntentSenderAForegroundService(android.content.IIntentSender)>
<android.stats.devicepolicy.nano.StringList: com.android.framework.protobuf.nano.MessageNano mergeFrom(com.android.framework.protobuf.nano.CodedInputByteBufferNano)>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat[] values()>
<android.media.midi.MidiPortImpl: int packFlush(byte[])>
<android.widget.DayPickerView: void setDayOfWeekTextAppearance(int)>
<android.widget.Filter.RequestHandler: void handleMessage(android.os.Message)>
<android.media.Cea708CCWidget.CCWindowLayout: int getCaptionWindowId()>
<android.gesture.GestureOverlayView.FadeOutRunnable: void run()>
<android.appwidget.AppWidgetHost.Callbacks: void providersChanged()>
<android.filterfw.core.GenerateFieldPort: boolean hasDefault()>
<android.net.lowpan.ILowpanInterface: java.lang.String getDriverVersion()>
<android.bluetooth.IBluetoothHeadsetClient: boolean enterPrivateMode(android.bluetooth.BluetoothDevice,int)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationRepeat(android.animation.Animator)>
<android.providers.settings.SecureSettingsProto.LocationAccessCheck: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.CalendarViewMaterialDelegate: void setDate(long,boolean,boolean)>
<android.hardware.input.IInputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.app.IActivityManager: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<android.net.ConnectivityManager.CallbackHandler: void handleMessage(android.os.Message)>
<android.app.ActivityTransitionCoordinator: boolean cancelPendingTransitions()>
<android.app.admin.IDevicePolicyManager: int getOrganizationColorForUser(int)>
<android.location.ILocationManager: long getGnssCapabilities(java.lang.String)>
<android.hardware.input.IInputManager: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<android.view.ViewRootImpl.QueuedInputEvent: boolean shouldSendToSynthesizer()>
<android.opengl.GLLogWrapper: void glTexEnvf(int,int,float)>
<android.util.MapCollections.MapIterator: java.lang.Object next()>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,long,long,long,long,long,long,long,long,long,int,long,int,int,long,long)>
<android.widget.DatePicker.InspectionCompanion: void readProperties(android.widget.DatePicker,android.view.inspector.PropertyReader)>
<android.util.StatsLogInternal: int write(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,int)>
<android.security.keystore.IKeystoreService: int onKeyguardVisibilityChanged(boolean,int)>
<android.net.Uri.Part: android.net.Uri.Part fromDecoded(java.lang.String)>
<android.opengl.GLSurfaceView.EglHelper: java.lang.String formatEglError(java.lang.String,int)>
<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>
<android.app.admin.IDevicePolicyManager: boolean isManagedProfile(android.content.ComponentName)>
<android.app.IActivityManager: void requestBugReport(int)>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: long getItemId(int)>
<android.filterfw.core.GenerateFinalPort: java.lang.String name()>
<android.sysprop.DisplayProperties: void debug_force_msaa(java.lang.Boolean)>
<android.security.keymaster.KeymasterArgument: void <init>(int)>
<android.bluetooth.IBluetooth: int getBatteryLevel(android.bluetooth.BluetoothDevice)>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: void onCreated(int,android.os.Bundle)>
<android.os.SystemProto.BatteryLevelStep: void <init>(android.os.SystemProto)>
<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.widget.TimePickerClockDelegate: android.view.View getMinuteView()>
<android.media.Cea608CCWidget.CCLayout: void onLayout(boolean,int,int,int,int)>
<android.service.batterystats.BatteryStatsServiceDumpHistoryProto.Key: void <init>(android.service.batterystats.BatteryStatsServiceDumpHistoryProto)>
<android.os.IStatsManager: void informAnomalyAlarmFired()>
<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<android.opengl.GLSurfaceView.EglHelper: int swap()>
<android.widget.RemoteViews.SetEmptyView: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.net.INetdEventCallback: void onConnectEvent(java.lang.String,int,long,int)>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.widget.SelectionActionModeHelper.SelectionTracker: boolean resetSelection(int,android.widget.Editor)>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,int)>
<android.bluetooth.IBluetoothSap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.app.BackStackRecord: boolean isEmpty()>
<android.app.LoaderManagerImpl.LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.bluetooth.IBluetooth: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>
<android.widget.RemoteViews.ViewPaddingAction: int getActionTag()>
<android.inputmethodservice.KeyboardView.SwipeTracker: void computeCurrentVelocity(int,float)>
<android.media.ThumbnailUtils.Resizer: void <init>(android.util.Size,android.os.CancellationSignal)>
<android.view.IWindowSession: void pokeDrawLock(android.os.IBinder)>
<android.view.ViewRootImpl.WindowInputEventReceiver: void dispose()>
<android.bluetooth.IBluetoothMetadataListener: void onMetadataChanged(android.bluetooth.BluetoothDevice,int,byte[])>
<android.app.admin.IDevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.hardware.usb.IUsbManager: long getScreenUnlockedFunctions()>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedAuthority()>
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.app.IActivityManager: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>
<android.media.AsyncPlayer.Thread: void run()>
<android.view.ViewOverlay.OverlayViewGroup: void remove(android.view.View)>
<android.bluetooth.IBluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.widget.ExpandableListConnector.GroupMetadata: void writeToParcel(android.os.Parcel,int)>
<android.os.SystemPropertiesProto.Ro.Telephony: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.app.ContextImpl.ApplicationContentResolver: void <init>(android.content.Context,android.app.ActivityThread)>
<android.widget.ViewAnimator.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.hardware.SystemSensorManager.BaseEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.widget.Toast.TN: void show(android.os.IBinder)>
<android.media.Utils: int gcd(int,int)>
<android.app.admin.SecurityLogTags: void writeSecurityKeyguardDismissed()>
<android.content.res.XmlBlock.Parser: int getColumnNumber()>
<android.widget.AbsListView.InspectionCompanion: void readProperties(android.widget.AbsListView,android.view.inspector.PropertyReader)>
<android.speech.tts.BlockingAudioTrack: void waitAndRelease()>
<android.media.MediaFormat.UnprefixedKeySet: java.lang.String mapKeyToItem(java.lang.String)>
<android.util.StatsLogInternal: int write(int,byte[],int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.speech.tts.PlaybackQueueItem: android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher getDispatcher()>
<android.content.pm.IPackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<android.net.IpConfiguration.IpAssignment: android.net.IpConfiguration.IpAssignment valueOf(java.lang.String)>
<android.widget.AdapterViewAnimator.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.RemoteViews.BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>
<android.widget.TimePickerSpinnerDelegate: android.view.View getHourView()>
<android.os.Handler.BlockingRunnable: void run()>
<android.widget.AbsListView.PositionScroller: void startWithOffset(int,int)>
<android.animation.BidirectionalTypeConverter.InvertedConverter: java.lang.Object convert(java.lang.Object)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int,java.lang.String,int)>
<android.security.KeyChain.AliasResponse: void alias(java.lang.String)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationStart(android.animation.Animator)>
<android.providers.settings.GlobalSettingsProto.MultiSim: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.opengl.EGLLogWrapper: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<android.location.LocalListenerHelper: boolean add(java.lang.Object,android.os.Handler)>
<android.widget.Editor.CursorAnchorInfoNotifier: void updatePosition(int,int,boolean,boolean)>
<android.content.pm.IPackageManager: boolean isFirstBoot()>
<android.app.LoadedApk.WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)>
<android.widget.Editor.SuggestionsPopupWindow: void onParentLostFocus()>
<android.view.IWindowManager: void updateRotation(boolean,boolean)>
<android.app.admin.IDevicePolicyManager: long getLastBugReportRequestTime()>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void run()>
<android.provider.Settings.NameValueCache: void <init>(android.net.Uri,java.lang.String,java.lang.String,android.provider.Settings.ContentProviderHolder)>
<android.bluetooth.IBluetooth: int getDiscoverableTimeout()>
<android.widget.ArrayAdapter.ArrayFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.webkit.Plugin.DefaultClickHandler: void handleClickEvent(android.content.Context)>
<android.view.ViewRootImpl.TakenSurfaceHolder: boolean onAllowLockCanvas()>
<android.widget.Editor.SuggestionsPopupWindow: void setUp()>
<android.opengl.GLLogWrapper.PointerInfo: void unbindByteBuffer()>
<android.net.Uri.StringUri: java.lang.String getSchemeSpecificPart()>
<android.permission.PermissionControllerManager.PendingRevokeRuntimePermissionRequest: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.app.admin.IDevicePolicyManager: boolean isCallerApplicationRestrictionsManagingPackage(java.lang.String)>
<android.service.autofill.NegationValidator: int describeContents()>
<android.net.Uri.OpaqueUri: boolean isRelative()>
<android.widget.RemoteViews.Action: android.widget.RemoteViews.Action initActionAsync(android.widget.RemoteViews.ViewTree,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.os.Handler.BlockingRunnable: boolean postAndWait(android.os.Handler,long)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.opengl.GLLogWrapper: void glBindBuffer(int,int)>
<android.app.ActivityManager.UidObserver: void onUidStateChanged(int,int,long)>
<android.media.MediaFormat.PrefixedKeySetWithPrefixRemoved: void <init>(android.media.MediaFormat,java.lang.String)>
<android.app.IActivityManager: void moveTaskToStack(int,int,boolean)>
<android.os.IStatsManager: long[] getRegisteredExperimentIds()>
<android.hardware.radio.TunerAdapter: int step(int,boolean)>
<android.media.MediaPlayer.TimeProvider: long getCurrentTimeUs(boolean,boolean)>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: byte[] engineUpdate(byte[],int,int)>
<android.graphics.ImageDecoder.ByteBufferSource: android.graphics.ImageDecoder createImageDecoder()>
<android.opengl.GLErrorWrapper: void glBindFramebufferOES(int,int)>
<android.inputmethodservice.IInputMethodWrapper: void initializeInternal(android.os.IBinder,int,com.android.internal.inputmethod.IInputMethodPrivilegedOperations)>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int,java.lang.String)>
<android.widget.ActionMenuPresenter.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.StackView.StackFrame: void <init>(android.content.Context)>
<android.os.SystemProto.Misc: void <init>(android.os.SystemProto)>
<android.util.apk.ZipUtils: android.util.Pair findZipEndOfCentralDirectoryRecord(java.io.RandomAccessFile)>
<android.widget.TimePickerClockDelegate: void setHour(int)>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType valueOf(java.lang.String)>
<android.app.ActivityThread.ApplicationThread: void scheduleStopService(android.os.IBinder)>
<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater.Parent)>
<android.providers.settings.SystemSettingsProto.HapticFeedback: void <init>(android.providers.settings.SystemSettingsProto)>
<android.view.IWindowManager: void setForcedDisplayDensityForUser(int,int,int)>
<android.widget.Toolbar.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.IBluetoothA2dpSink: java.util.List getConnectedDevices()>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)>
<android.widget.CalendarViewLegacyDelegate: void setWeekDayTextAppearance(int)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onWriteToDisk()>
<android.widget.DayPickerView: void onRtlPropertiesChanged(int)>
<android.provider.Settings.ContentProviderHolder: void <init>(android.net.Uri)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: int getNextIndexToLoad()>
<android.widget.DayPickerPagerAdapter: void setOnDaySelectedListener(android.widget.DayPickerPagerAdapter.OnDaySelectedListener)>
<android.view.AccessibilityIterators.WordTextSegmentIterator: android.view.AccessibilityIterators.WordTextSegmentIterator getInstance(java.util.Locale)>
<android.sysprop.DisplayProperties: java.util.Optional debug_layout()>
<android.widget.AbsListView.ListItemAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.media.ExifInterface.ByteOrderedDataInputStream: short readShort()>
<android.security.KeyStore.KeyAttestationCallbackResult: void setKeystoreResponse(android.security.keystore.KeystoreResponse)>
<android.opengl.GLErrorWrapper: void glTranslatef(float,float,float)>
<android.content.pm.BaseParceledListSlice: void <init>(java.util.List)>
<android.os.IVold: void destroyObb(java.lang.String)>
<android.os.IInstalld: void rmPackageDir(java.lang.String)>
<android.os.IDumpstate: android.os.IDumpstateToken setListener(java.lang.String,android.os.IDumpstateListener,boolean)>
<android.widget.ScrollView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.bluetooth.IBluetooth: int getAdapterConnectionState()>
<android.view.ViewOverlay.OverlayViewGroup: void add(android.view.View)>
<android.text.Layout.SpannedEllipsizer: void <init>(java.lang.CharSequence)>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive[] values()>
<android.net.lowpan.ILowpanInterface: java.lang.String[] getSupportedNetworkTypes()>
<android.bluetooth.IBluetooth: boolean setMessageAccessPermission(android.bluetooth.BluetoothDevice,int)>
<android.providers.settings.GlobalSettingsProto.Debug: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.security.keymaster.KeymasterBlobArgument: void <init>(int,byte[])>
<android.widget.CheckedTextView.InspectionCompanion: void readProperties(android.widget.CheckedTextView,android.view.inspector.PropertyReader)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>
<android.media.Cea708CCWidget.CCWindowLayout: void <init>(android.content.Context)>
<android.location.ILocationManager: boolean addGnssMeasurementsListener(android.location.IGnssMeasurementsListener,java.lang.String)>
<android.app.ActivityThread.ApplicationThread: void setProcessState(int)>
<android.widget.SelectionActionModeHelper.SelectionTracker.LogAbandonRunnable: void run()>
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationCancel(android.animation.Animator)>
<android.app.ContextImpl: android.content.Context createDisplayContext(android.view.Display)>
<android.widget.AdapterViewAnimator.SavedState: java.lang.String toString()>
<android.app.IActivityManager: java.util.List getRunningAppProcesses()>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt[] values()>
<android.os.storage.IStorageManager: void unlockUserKey(int,int,byte[],byte[])>
<android.content.pm.IPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.bluetooth.IBluetoothA2dp: java.util.List getConnectedDevices()>
<android.widget.RemoteViews.Action: java.lang.String getUniqueKey()>
<android.media.ExifInterface.ByteOrderedDataInputStream: int read()>
<android.util.XmlPullAttributes: java.lang.String getPositionDescription()>
<android.os.SystemPropertiesProto.Ro.Build.Version: void <init>(android.os.SystemPropertiesProto.Ro.Build)>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl[] values()>
<android.os.IInstalld: void destroyProfileSnapshot(java.lang.String,java.lang.String)>
<android.graphics.ColorSpace.Lab: boolean isWideGamut()>
<android.content.res.XmlBlock: void <init>(byte[],int,int)>
<android.opengl.GLErrorWrapper: void glGenTextures(int,java.nio.IntBuffer)>
<android.service.procstats.PackageAssociationSourceProcessStatsProto.StateStats: void <init>(android.service.procstats.PackageAssociationSourceProcessStatsProto)>
<android.widget.Editor.SelectionModifierCursorController: boolean isCursorBeingModified()>
<android.gamedriver.GameDriverProto.Blacklist: boolean hasVersionCode()>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.app.admin.IDevicePolicyManager: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>
<android.widget.TimePickerClockDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.bluetooth.BluetoothOutputStream: void close()>
<android.app.IActivityManager: void setProcessLimit(int)>
<android.widget.AdapterView.AdapterDataSetObserver: void onInvalidated()>
<android.media.ImageReader.SurfaceImage: int getTransform()>
<android.bluetooth.IBluetoothPan: boolean connect(android.bluetooth.BluetoothDevice)>
<android.widget.SelectionActionModeHelper.SelectionMetricsLogger: void logSelectionModified(int,int,android.view.textclassifier.TextClassification,android.view.textclassifier.TextSelection)>
<android.app.admin.IDevicePolicyManager: void clearProfileOwner(android.content.ComponentName)>
<android.widget.CalendarViewLegacyDelegate: void setDateTextAppearance(int)>
<android.hardware.radio.TunerAdapter: void setConfigFlag(int,boolean)>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeType(int)>
<android.bluetooth.IBluetoothPbap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,long,long)>
<android.bluetooth.IBluetoothHearingAid: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.view.ViewRootImpl.ImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.opengl.GLErrorWrapper: void glFogxv(int,int[],int)>
<android.view.textclassifier.TextClassificationSession: void onTextClassifierEvent(android.view.textclassifier.TextClassifierEvent)>
<android.telecom.InCallService.InCallServiceBinder: void setPostDialWait(java.lang.String,java.lang.String)>
<android.text.Layout.Ellipsizer: void getChars(int,int,char[],int)>
<android.content.ContentProviderClient.CursorWrapperInner: void finalize()>
<android.bluetooth.IBluetoothHeadsetClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.view.IWindowManager: void registerSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener,int)>
<android.widget.ListPopupWindow.PopupDataSetObserver: void onInvalidated()>
<android.util.MapCollections: int colIndexOfValue(java.lang.Object)>
<android.bluetooth.IBluetooth: java.lang.String getName()>
<android.widget.ExpandableListConnector.PositionMetadata: void recycle()>
<android.transition.Visibility.DisappearListener: void onAnimationPause(android.animation.Animator)>
<android.app.admin.IDevicePolicyManager: void setLogoutEnabled(android.content.ComponentName,boolean)>
<android.widget.ZoomButtonsController.Container: void <init>(android.widget.ZoomButtonsController,android.content.Context)>
<android.app.ActivityThread.SafeCancellationTransport: void cancel()>
<android.media.MediaCodec.BufferMap: void clear()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.widget.SmartSelectSprite: void draw(android.graphics.Canvas)>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.content.res.XmlBlock.Parser: int getAttributeIntValue(int,int)>
<android.util.MapCollections.MapIterator: void remove()>
<android.providers.settings.GlobalSettingsProto.App: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.security.keystore.IKeystoreService: int unlock(int,java.lang.String)>
<android.app.Instrumentation.Idler: void <init>(java.lang.Runnable)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>
<android.permission.PermissionControllerManager.PendingRevokeAppPermissionRequest: void run(android.permission.IPermissionController)>
<android.view.IWindowSession: void dragRecipientExited(android.view.IWindow)>
<android.widget.TimePicker.AbstractTimePickerDelegate.SavedState: void <init>(android.os.Parcelable,int,int,boolean,int)>
<android.media.Cea708CCWidget.CCWindowLayout: void setPenLocation(int,int)>
<android.permission.PermissionControllerManager.PendingRevokeRuntimePermissionRequest: void run()>
<android.util.StatsLogInternal: int write(int,byte[],long,int,int,int)>
<android.util.StatsLogInternal: int write(int,int,int,int,java.lang.String,java.lang.String,boolean)>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.bluetooth.IBluetoothGatt: void endReliableWrite(int,java.lang.String,boolean)>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.app.ActivityThread.ApplicationThread: void handleTrustStorageUpdate()>
<android.media.RemoteController.MediaControllerCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionPause(android.transition.Transition)>
<android.os.SystemPropertiesProto.Sys.Usb: void <init>(android.os.SystemPropertiesProto.Sys)>
<android.widget.GridLayout.Axis: int[] getDeltas()>
<android.widget.RemoteViews.ViewGroupActionRemove: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.hardware.radio.TunerAdapter: int getConfiguration(android.hardware.radio.RadioManager.BandConfig[])>
<android.app.ActivityTransitionCoordinator: boolean moveSharedElementWithParent()>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.app.admin.IDevicePolicyManager: void reportSuccessfulBiometricAttempt(int)>
<android.animation.Keyframe.FloatKeyframe: java.lang.Object getValue()>
<android.content.pm.IPackageManager: void verifyPendingInstall(int,int)>
<android.util.StatsLogInternal: int write(int,long,int,java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothGatt: void serverSetPreferredPhy(int,java.lang.String,int,int,int)>
<android.bluetooth.BluetoothSocket.SocketState: android.bluetooth.BluetoothSocket.SocketState[] values()>
<android.widget.TabWidget.TabClickListener: void onClick(android.view.View)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: java.security.AlgorithmParameters engineGetParameters()>
<android.opengl.GLSurfaceView.GLThread: void requestRenderAndNotify(java.lang.Runnable)>
<android.os.IStatsManager: void removeDataFetchOperation(long,java.lang.String)>
<android.media.AudioManager.OnAmPortUpdateListener: void onAudioPortListUpdate(android.media.AudioPort[])>
<android.preference.GenericInflater: java.lang.String getDefaultPackage()>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: boolean defaultIsRtl()>
<android.sysprop.TraceProperties: java.util.Optional enable()>
<android.widget.TimePickerSpinnerDelegate: android.view.View getPmView()>
<android.hardware.usb.IUsbManager: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createURational(android.media.ExifInterface.Rational[],java.nio.ByteOrder)>
<android.widget.GridLayout.Axis: int[] getLeadingMargins()>
<android.util.StatsLogInternal: int write(int,java.lang.String,java.lang.String,int,int,int,int,float,float,boolean,boolean,boolean)>
<android.bluetooth.IBluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabledForUser(int)>
<android.apex.IApexService: void postinstallPackages(java.util.List)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: int getId()>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc valueOf(java.lang.String)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void removeView(android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout)>
<android.widget.SuggestionsAdapter: int getQueryRefinement()>
<android.os.IDumpstateListener: void onMaxProgressUpdated(int)>
<android.os.AsyncTask.InternalHandler: void <init>(android.os.Looper)>
<android.text.DynamicLayout.ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.os.MemoryFile.MemoryInputStream: int available()>
<android.opengl.GLSurfaceView.GLThread: void onWindowResize(int,int)>
<android.app.ActivityThread.ApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>
<android.app.ActivityTransitionState: boolean startExitBackTransition(android.app.Activity)>
<android.app.IActivityManager: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>
<android.accounts.AccountManager.AmsTask: void set(java.lang.Object)>
<android.app.admin.IDevicePolicyManager: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>
<android.widget.TimePickerClockDelegate: void setDate(int,int)>
<android.app.ActivityThread.Profiler: void stopProfiling()>
<android.view.inspector.InspectableProperty: int attributeId()>
<android.bluetooth.IBluetoothGattCallback: void onPhyUpdate(java.lang.String,int,int,int)>
<android.opengl.GLLogWrapper: void glBindTexture(int,int)>
<android.text.PackedObjectVector: void dump()>
<android.widget.Switch.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.hardware.usb.IUsbManager: java.util.List getPorts()>
<android.app.BackStackRecord: java.lang.String getName()>
<android.app.ActivityThread.ApplicationThread: void scheduleServiceArgs(android.os.IBinder,android.content.pm.ParceledListSlice)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>
<android.widget.AbsListView.SavedState: java.lang.String toString()>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean save()>
<android.widget.Editor.CursorController: boolean isCursorBeingModified()>
<android.webkit.WebView.InspectionCompanion: void readProperties(android.webkit.WebView,android.view.inspector.PropertyReader)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void <init>(android.widget.CalendarViewLegacyDelegate,android.content.Context)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: long getItemId(int)>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap valueOf(java.lang.String)>
<android.location.ILocationManager: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String)>
<android.apex.IApexService: android.apex.ApexInfo getActivePackage(java.lang.String)>
<android.hardware.ICamera: void disconnect()>
<android.transition.ChangeTransform.PathAnimatorMatrix: android.graphics.Matrix getMatrix()>
<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand: void run()>
<android.util.apk.WrappedX509Certificate: byte[] getSignature()>
<android.app.admin.IDevicePolicyManager: android.content.pm.StringParceledListSlice getOwnerInstalledCaCerts(android.os.UserHandle)>
<android.app.IActivityManager: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<android.telecom.InCallService.InCallServiceBinder: void onRttUpgradeRequest(java.lang.String,int)>
<android.content.pm.IPackageManager: boolean canRequestPackageInstalls(java.lang.String,int)>
<android.app.IWallpaperManager: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String,int)>
<android.util.StatsLogInternal: int write(int,long,java.lang.String,long,long,java.lang.String,java.lang.String,byte[])>
<android.app.admin.IDevicePolicyManager: void setActivePasswordState(android.app.admin.PasswordMetrics,int)>
<android.security.keystore.KeyStoreCryptoOperationUtils: byte[] getRandomBytesToMixIntoKeystoreRng(java.security.SecureRandom,int)>
<android.graphics.BlendMode: android.graphics.BlendMode valueOf(java.lang.String)>
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<android.graphics.ColorSpace.Xyz: float getMinValue(int)>
<android.widget.Toast.TN: void handleHide()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void initKey(int,java.security.Key)>
<android.bluetooth.IBluetoothMap: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.app.LoadedApk.WarningContextClassLoader: void clearAssertionStatus()>
<android.speech.tts.PlaybackQueueItem: void run()>
<android.app.ExitTransitionCoordinator: void onTransitionsComplete()>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.print.PrintServicesLoader.MyHandler: void <init>(android.print.PrintServicesLoader)>
<android.text.AlteredCharSequence.AlteredSpanned: int getSpanFlags(java.lang.Object)>
<android.app.admin.IDevicePolicyManager: boolean setDeviceOwner(android.content.ComponentName,java.lang.String,int)>
<android.os.storage.IStorageManager: android.os.ParcelFileDescriptor openProxyFileDescriptor(int,int,int)>
<android.preference.GenericInflater: java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet)>
<android.widget.DatePickerSpinnerDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,int)>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,int[],int)>
<android.apex.ApexInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.radio.TunerCallbackAdapter: void onBackgroundScanComplete()>
<android.widget.Editor.SelectionModifierCursorController: void show()>
<android.widget.DayPickerPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
<android.security.keystore.IKeystoreService: int is_hardware_backed(java.lang.String)>
<android.bluetooth.IBluetoothGatt: void clearServices(int)>
<android.widget.FrameLayout.InspectionCompanion: void readProperties(android.widget.FrameLayout,android.view.inspector.PropertyReader)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,java.lang.String,java.lang.String,boolean,long,int,int,int,int,int,java.lang.String,int,int)>
<android.security.KeyStore.KeyCharacteristicsPromise: void binderDied()>
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>
<android.os.IInstalld: void removeIdmap(java.lang.String)>
<android.security.keystore.DelegatingX509Certificate: java.math.BigInteger getSerialNumber()>
<android.content.AsyncTaskLoader.LoadTask: void waitForLoader()>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: android.view.AccessibilityIterators.CharacterTextSegmentIterator getInstance(java.util.Locale)>
<android.content.pm.IPackageManager: byte[] getPreferredActivityBackup(int)>
<android.app.admin.IDevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>
<android.widget.DateTimeView.InspectionCompanion: void readProperties(android.widget.DateTimeView,android.view.inspector.PropertyReader)>
<android.app.ActivityTransitionState: void setEnterActivityOptions(android.app.Activity,android.app.ActivityOptions)>
<android.apex.IApexService: void rollbackActiveSession()>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.os.IVold: void onUserStarted(int)>
<android.opengl.GLLogWrapper: void glActiveTexture(int)>
<android.location.ILocationManager: java.lang.String[] getBackgroundThrottlingWhitelist()>
<android.util.apk.VerbatimX509Certificate: int hashCode()>
<android.widget.ExpandableListConnector.GroupMetadata: android.widget.ExpandableListConnector.GroupMetadata obtain(int,int,int,long)>
<android.opengl.GLLogWrapper: void glNormal3f(float,float,float)>
<android.widget.RemoteViews.SetDrawableTint: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.opengl.GLErrorWrapper: boolean glIsTexture(int)>
<android.text.TextUtils.Reverser: int length()>
<android.widget.TimePickerSpinnerDelegate: java.lang.String[] getAmPmStrings(android.content.Context)>
<android.widget.SimpleMonthView: void setDayTextAppearance(int)>
<android.app.LoadedApk.ServiceDispatcher: void connected(android.content.ComponentName,android.os.IBinder,boolean)>
<android.app.ActivityTransitionCoordinator: void clearState()>
<android.preference.SeekBarVolumizer.Observer: void <init>(android.preference.SeekBarVolumizer,android.os.Handler)>
<android.os.IIncidentCompanion: void approveReport(java.lang.String)>
<android.media.MediaScanner.MyMediaScannerClient: void scanFile(java.lang.String,long,long,boolean,boolean)>
<android.text.HtmlToSpannedConverter.Heading: void <init>(int)>
<android.sysprop.ContactsProperties: java.util.Optional aggregate_contacts()>
<android.sax.BadXmlException: java.lang.String getMessage()>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onEmergencyNumberListChanged(java.util.Map)>
<android.security.IKeyChainService: boolean deleteCaCertificate(java.lang.String)>
<android.app.admin.IDevicePolicyManager: java.util.List getCrossProfileCalendarPackages(android.content.ComponentName)>
<android.hardware.ICameraServiceProxy: void pingForUserUpdate()>
<android.app.admin.IDevicePolicyManager: boolean getDoNotAskCredentialsOnBoot()>
<android.hardware.camera2.ICameraDeviceCallbacks: void onDeviceError(int,android.hardware.camera2.impl.CaptureResultExtras)>
<android.app.WallpaperManager.FastBitmapDrawable: int getIntrinsicWidth()>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onDataActivity(int)>
<android.view.ViewGroup.ViewLocationHolder: int compareTo(android.view.ViewGroup.ViewLocationHolder)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder addBlacklists(int,android.gamedriver.GameDriverProto.Blacklist)>
<android.util.MapCollections.ArrayIterator: boolean hasNext()>
<android.util.Base64.Coder: boolean process(byte[],int,int,boolean)>
<android.app.IWallpaperManager: int getWallpaperIdForUser(int,int)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<android.opengl.GLLogWrapper: void glDrawTexivOES(java.nio.IntBuffer)>
<android.view.IWindowSession: android.view.IWindowId getWindowId(android.os.IBinder)>
<android.gamedriver.GameDriverProto.Blacklists: int getBlacklistsCount()>
<android.widget.Spinner.DropdownPopup: void setPromptText(java.lang.CharSequence)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.location.ILocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long,java.lang.String)>
<android.bluetooth.IBluetoothMap: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.IBluetoothHeadsetClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothSocketManager: void requestMaximumTxDataLength(android.bluetooth.BluetoothDevice)>
<android.hardware.LegacySensorManager: int getRotation()>
<android.widget.DatePickerSpinnerDelegate: void setFirstDayOfWeek(int)>
<android.hardware.radio.TunerAdapter: int tune(int,int)>
<android.media.Utils: void sortDistinctRanges(android.util.Range[])>
<android.media.MediaRecorder.EventHandler: void handleMessage(android.os.Message)>
<android.hardware.ICameraService: boolean supportsCameraApi(java.lang.String,int)>
<android.widget.YearPickerView.YearAdapter: int getItemViewType(int)>
<android.widget.QuickContactBadge.QueryHandler: void <init>(android.widget.QuickContactBadge,android.content.ContentResolver)>
<android.widget.DigitalClock.FormatChangeObserver: void onChange(boolean)>
<android.view.MenuInflater.MenuState: android.view.MenuItem addItem()>
<android.location.ILocationManager: boolean sendNiResponse(int,int)>
<android.transition.Visibility.DisappearListener: void onAnimationCancel(android.animation.Animator)>
<android.content.ContentResolver.ParcelFileDescriptorInner: void releaseResources()>
<android.widget.Editor.SuggestionsPopupWindow: void <init>(android.widget.Editor)>
<android.util.ReflectiveProperty: void set(java.lang.Object,java.lang.Object)>
<android.widget.RemoteViews.ReflectionAction: void writeToParcel(android.os.Parcel,int)>
<android.widget.DayPickerViewPager: android.view.View findViewByPredicateTraversal(java.util.function.Predicate,android.view.View)>
<android.opengl.GLLogWrapper: void glMaterialx(int,int,int)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void <init>(android.widget.DatePicker,android.content.Context)>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CTR.NoPadding: void finalize()>
<android.widget.DatePickerCalendarDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.net.lowpan.ILowpanInterface: java.lang.String getPartitionId()>
<android.app.ITaskStackListener: void onTaskDisplayChanged(int,int)>
<android.widget.SuggestionsAdapter: void setQueryRefinement(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineDoFinal(byte[],int,int,byte[],int)>
<android.content.pm.IPackageManager: void grantRuntimePermission(java.lang.String,java.lang.String,int)>
<android.text.TextUtils.Reverser: void <init>(java.lang.CharSequence,int,int)>
<android.media.ExifInterface.ByteOrderedDataInputStream: int readInt()>
<android.os.IVold: void prepareCheckpoint()>
<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.accounts.AccountManager.AmsTask.Response: void onError(int,java.lang.String)>
<android.hardware.Camera.EventHandler: void <init>(android.hardware.Camera,android.hardware.Camera,android.os.Looper)>
<android.view.AccessibilityIterators.WordTextSegmentIterator: void onLocaleChanged(java.util.Locale)>
<android.opengl.GLErrorWrapper: void glDisable(int)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData getMetaDataAt(int)>
<android.widget.SelectionActionModeHelper.TextClassificationAsyncTask: void onPostExecute(java.lang.Object)>
<android.media.Cea708CCWidget.CCLayout: void removeViewFromSafeTitleArea(android.media.Cea708CCWidget.CCWindowLayout)>
<android.widget.ExpandableListConnector.PositionMetadata: boolean isExpanded()>
<android.view.View.ScrollabilityCache: void <init>(android.view.ViewConfiguration,android.view.View)>
<android.graphics.Path.Direction: android.graphics.Path.Direction valueOf(java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setAffiliationIds(android.content.ComponentName,java.util.List)>
<android.permission.PermissionControllerManager.FileWriterTask: void onPostExecute(java.lang.Object)>
<android.util.StatsLogInternal: int write(int,java.lang.String,long,long,boolean)>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>
<android.opengl.GLErrorWrapper: void glNormal3f(float,float,float)>
<android.util.MapCollections.EntrySet: boolean add(java.util.Map.Entry)>
<android.print.PrintServiceRecommendationsLoader.MyHandler: void <init>(android.print.PrintServiceRecommendationsLoader)>
<android.widget.TimePicker.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.content.pm.IPackageManager: boolean updateIntentVerificationStatus(java.lang.String,int,int)>
<android.widget.ExpandableListConnector: int getItemViewType(int)>
<android.widget.CalendarViewLegacyDelegate: int getWeekSeparatorLineColor()>
<android.bluetooth.IBluetoothGatt: void discoverServices(int,java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void <init>(int)>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>
<android.util.Base64.Encoder: boolean process(byte[],int,int,boolean)>
<android.graphics.drawable.RippleBackground.BackgroundProperty: void <init>(java.lang.String)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter.Callback)>
<android.widget.DayPickerPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>
<android.app.ExitTransitionCoordinator: void startExit(int,android.content.Intent)>
<android.app.admin.IDevicePolicyManager: void setSecurityLoggingEnabled(android.content.ComponentName,boolean)>
<android.accounts.AccountManager.AmsTask.Response: void onResult(android.os.Bundle)>
<android.os.storage.IStorageManager: long getCacheQuotaBytes(java.lang.String,int)>
<android.app.admin.IDevicePolicyManager: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>
<android.content.res.XmlBlock.Parser: int next()>
<android.bluetooth.IBluetoothHeadsetClient: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.widget.SearchView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.view.IWindowManager: void setPipVisibility(boolean)>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,int[],int)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: java.util.List getBlacklistsList()>
<android.os.IVold: void forgetPartition(java.lang.String,java.lang.String)>
<android.widget.YearPickerView: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>
<android.os.IUpdateEngine: void resume()>
<android.widget.YearPickerView: int getFirstPositionOffset()>
<android.widget.RemoteViews.ViewPaddingAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.os.IStatsManager: void statsCompanionReady()>
<android.app.ContextImpl: android.os.IBinder getActivityToken()>
<android.provider.Settings.ContentProviderHolder: android.content.IContentProvider getProvider(android.content.ContentResolver)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.transition.Fade.FadeAnimatorListener: void onAnimationStart(android.animation.Animator)>
<android.net.lowpan.ILowpanInterface: void startNetScan(java.util.Map,android.net.lowpan.ILowpanNetScanCallback)>
<android.providers.settings.GlobalSettingsProto.InstantApp: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.widget.ListView.InspectionCompanion: void readProperties(android.widget.ListView,android.view.inspector.PropertyReader)>
<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.os.MemoryFile.MemoryInputStream: void reset()>
<android.util.StatsLogInternal: int write(int,long,int,java.lang.String,java.lang.String,boolean,int)>
<android.opengl.GLErrorWrapper: void glLightx(int,int,int)>
<android.widget.DayPickerView: boolean getBoundsForDate(long,android.graphics.Rect)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void init(int,java.util.List)>
<android.app.LoadedApk.SplitDependencyLoaderImpl: boolean isSplitCached(int)>
<android.opengl.GLErrorWrapper: void glEnable(int)>
<android.bluetooth.le.BluetoothLeUtils: boolean equals(java.util.Map,java.util.Map)>
<android.opengl.GLSurfaceView.EglHelper: void destroySurface()>
<android.opengl.GLErrorWrapper: void glMaterialx(int,int,int)>
<android.opengl.GLLogWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.gamedriver.GameDriverProto.Blacklist: void writeTo(com.android.framework.protobuf.CodedOutputStream)>
<android.view.IWindowManager: boolean requestAssistScreenshot(android.app.IAssistDataReceiver)>
<android.bluetooth.IBluetooth: boolean cancelDiscovery()>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean flagActionItems()>
<android.telecom.VideoCallImpl.MessageHandler: void <init>(android.telecom.VideoCallImpl,android.os.Looper)>
<android.view.IWindowManager: android.graphics.Region getCurrentImeTouchRegion()>
<android.content.ContentProvider.Transport: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>
<android.telecom.CallbackRecord: java.lang.Object getCallback()>
<android.widget.Editor.InsertionPointCursorController: boolean isActive()>
<android.widget.AbsListView.InputConnectionWrapper: boolean deleteSurroundingTextInCodePoints(int,int)>
<android.security.IKeyChainService: byte[] getCertificate(java.lang.String)>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(boolean)>
<android.app.IActivityManager: boolean stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>
<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLLogWrapper: void glFrustumf(float,float,float,float,float,float)>
<android.opengl.GLLogWrapper: void glLightxv(int,int,int[],int)>
<android.widget.RemoteViews.ViewGroupActionAdd: int mergeBehavior()>
<android.app.admin.IDevicePolicyManager: void setOrganizationColor(android.content.ComponentName,int)>
<android.hardware.biometrics.BiometricSourceType: android.hardware.biometrics.BiometricSourceType valueOf(java.lang.String)>
<android.widget.TextView.Drawables: boolean resolveWithLayoutDirection(int)>
<android.graphics.Paint.Align: android.graphics.Paint.Align[] values()>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,int[],int)>
<android.app.IWallpaperManager: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>
<android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<android.bluetooth.IBluetoothHeadsetClient: boolean disconnectAudio(android.bluetooth.BluetoothDevice)>
<android.provider.Settings.ContentProviderHolder: void clearProviderForTest()>
<android.security.KeyStore.OperationPromise: void binderDied()>
<android.view.WindowInsetsAnimationListener.InsetsAnimation: int getTypeMask()>
<android.opengl.GLErrorWrapper: void glTexParameterx(int,int,int)>
<android.app.admin.IDevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.widget.ProgressBar.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.SuggestionsAdapter: void <init>(android.content.Context,android.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)>
<android.sysprop.DisplayProperties: java.util.Optional debug_force_rtl()>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,int,int)>
<android.os.UidProto.PowerUseItem: void <init>(android.os.UidProto)>
<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>
<android.widget.YearPickerView.YearAdapter: boolean hasStableIds()>
<android.hardware.usb.IUsbManager: void setUsbDeviceConnectionHandler(android.content.ComponentName)>
<android.app.IWallpaperManager: void settingsRestored()>
<android.os.IVold: void monitor()>
<android.media.ExifInterface.ByteOrderedDataInputStream: void <init>(byte[])>
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.widget.RemoteViews.MethodKey: void set(java.lang.Class,java.lang.Class,java.lang.String)>
<android.widget.AbsListView.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<android.widget.FastScroller: void remove()>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionResume(android.transition.Transition)>
<android.bluetooth.IBluetooth: boolean isBondingInitiatedLocally(android.bluetooth.BluetoothDevice)>
<android.hardware.input.IInputManager: android.view.InputDevice getInputDevice(int)>
<android.widget.AutoCompleteTextView.MyWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.os.IInstalld: boolean createProfileSnapshot(int,java.lang.String,java.lang.String,java.lang.String)>
<android.os.EventLogTags: void writeServiceManagerSlow(int,java.lang.String)>
<android.view.ViewDebug.PictureCallbackHandler: void close()>
<android.os.SystemPropertiesProto.Ro.Boot: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority[] values()>
<android.security.keystore.IKeystoreService: int presentConfirmationPrompt(android.os.IBinder,java.lang.String,byte[],java.lang.String,int)>
<android.app.admin.IDevicePolicyManager: boolean setPermittedCrossProfileNotificationListeners(android.content.ComponentName,java.util.List)>
<android.location.LocationManager.GnssStatusListenerTransport: void onFirstFix(int)>
<android.os.IIncidentCompanion: void deleteAllIncidentReports(java.lang.String)>
<android.bluetooth.IBluetoothHearingAid: int getVolume()>
<android.location.CountryDetector.ListenerTransport: void <init>(android.location.CountryListener,android.os.Looper)>
<android.widget.Editor.TextActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA1AndMGF1Padding: void finalize()>
<android.drm.DrmStore.Action: boolean isValid(int)>
<android.content.pm.IPackageManager: java.lang.String getNameForUid(int)>
<android.app.FragmentState: void writeToParcel(android.os.Parcel,int)>
<android.widget.Editor.InsertionHandleView: int getMagnifierHandleTrigger()>
<android.hardware.input.IInputManager: void registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener)>
<android.opengl.GLErrorWrapper: void glRenderbufferStorageOES(int,int,int,int)>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: int getCount()>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getProfileOwnerAsUser(int)>
<android.widget.DatePickerCalendarDelegate: void setMinDate(long)>
<android.view.ViewRootImpl.W: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.widget.AbsListView.WindowRunnnable: boolean sameWindow()>
<android.media.MediaPlayer.TimeProvider: void <init>(android.media.MediaPlayer)>
<android.permission.PermissionControllerManager.RemoteService: void scheduleRequest(com.android.internal.infra.AbstractRemoteService.BasePendingRequest)>
<android.opengl.GLLogWrapper: void glTexGenx(int,int,int)>
<android.os.IVold: void unlockUserKey(int,int,java.lang.String,java.lang.String)>
<android.util.StatsLogInternal: int write(int,java.lang.String,int,java.lang.String,int,int,int,boolean,int,int,boolean,int,int,java.lang.String)>
<android.providers.settings.SecureSettingsProto.NfcPayment: void <init>(android.providers.settings.SecureSettingsProto)>
<android.app.FragmentManagerImpl.StartEnterTransitionListener: void onStartEnterTransition()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.content.AbstractThreadedSyncAdapter.SyncThread: void run()>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(byte[])>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,long)>
<android.providers.settings.GlobalSettingsProto.UserAbsentSmallBattery: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.gamedriver.GameDriverProto.Blacklist: long getVersionCode()>
<android.os.IIncidentCompanion: void denyReport(java.lang.String)>
<android.media.WebVttRenderingWidget.CueLayout: void <init>(android.content.Context,android.media.TextTrackCue,android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.media.IPlayer: void applyVolumeShaper(android.media.VolumeShaper.Configuration,android.media.VolumeShaper.Operation)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>
<android.bluetooth.IBluetoothGatt: int numHwTrackFiltersAvailable()>
<android.net.lowpan.ILowpanInterface: void sendToCommissioner(byte[])>
<android.widget.PopupWindow.PopupDecorView: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLLogWrapper: void glTexGenf(int,int,float)>
<android.app.ActivityTransitionCoordinator: void setOriginalSharedElementState(java.util.ArrayList,java.util.ArrayList)>
<android.widget.CalendarViewLegacyDelegate: int getSelectedWeekBackgroundColor()>
<android.bluetooth.IBluetoothHidDevice: java.util.List getConnectedDevices()>
<android.app.ITaskStackListener: void onTaskDescriptionChanged(android.app.ActivityManager.RunningTaskInfo)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.widget.CalendarView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.bluetooth.IBluetoothHidDevice: boolean sendReport(android.bluetooth.BluetoothDevice,int,byte[])>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,int)>
<android.widget.GridLayout.Interval: int hashCode()>
<android.widget.CursorAdapter.ChangeObserver: void onChange(boolean)>
<android.media.MediaScannerConnection.ClientProxy: void onMediaScannerConnected()>
<android.app.admin.IDevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<android.content.pm.IPackageManager: boolean hasSigningCertificate(java.lang.String,byte[],int)>
<android.database.ContentObserver.Transport: void onChange(boolean,android.net.Uri,int)>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int)>
<android.content.pm.IPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>
<android.os.IInstalld: long createAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<android.opengl.GLLogWrapper: void glGenTextures(int,int[],int)>
<android.view.View.MatchLabelForPredicate: boolean test(java.lang.Object)>
<android.sysprop.DisplayProperties: void debug_layout(java.lang.Boolean)>
<android.os.storage.IStorageManager: int changeEncryptionPassword(int,java.lang.String)>
<android.widget.CursorFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.net.NetworkRequest.Type: android.net.NetworkRequest.Type valueOf(java.lang.String)>
<android.media.ImageReader.SurfaceImage: void close()>
<android.widget.GridLayout.Bounds: int getOffset(android.widget.GridLayout,android.view.View,android.widget.GridLayout.Alignment,int,boolean)>
<android.app.IActivityManager: int getProcessLimit()>
<android.view.IWindowManager: void setRecentsVisibility(boolean)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.app.admin.IDevicePolicyManager: void removeActiveAdmin(android.content.ComponentName,int)>
<android.widget.Editor.SpanController: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.widget.AbsListView.AbsPositionScroller: void start(int,int)>
<android.media.MediaFormat.FilteredMappedKeySet.KeyIterator: void remove()>
<android.os.FileObserver.ObserverThread: void run()>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config nativeToConfig(int)>
<android.widget.ListView.FocusSelector: void run()>
<android.appwidget.AppWidgetHostView.ViewApplyListener: void onError(java.lang.Exception)>
<android.content.pm.IPackageManager: android.content.ComponentName getInstantAppResolverSettingsComponent()>
<android.app.ExitTransitionCoordinator: boolean isReadyToNotify()>
<android.widget.RemoteViewsAdapter.RemoteServiceHandler: void onServiceDisconnected(android.content.ComponentName)>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,int[],int)>
<android.text.PackedObjectVector: int width()>
<android.opengl.GLErrorWrapper: void glMatrixMode(int)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>
<android.gsi.IGsiService: boolean isGsiEnabled()>
<android.opengl.GLErrorWrapper: void glStencilMask(int)>
<android.speech.SpeechRecognizer.InternalListener: void onBufferReceived(byte[])>
<android.widget.Editor.SuggestionsPopupWindow: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.ExpandableListConnector: boolean isEmpty()>
<android.view.ViewRootImpl.InputStage: boolean shouldDropInputEvent(android.view.ViewRootImpl.QueuedInputEvent)>
<android.widget.DayPickerPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)>
<android.os.IInstalld: boolean copySystemProfile(java.lang.String,int,java.lang.String,java.lang.String)>
<android.accounts.AbstractAccountAuthenticator.Transport: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>
<android.view.ViewRootImpl.SyntheticInputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>
<android.providers.settings.SystemSettingsProto.Text: void <init>(android.providers.settings.SystemSettingsProto)>
<android.transition.ChangeTransform.Transforms: boolean equals(java.lang.Object)>
<android.app.IActivityManager: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>
<android.content.pm.IPackageManager: int getPrivateFlagsForUid(int)>
<android.opengl.GLErrorWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.app.admin.IDevicePolicyManager: boolean getBluetoothContactSharingDisabledForUser(int)>
<android.widget.Spinner.DropDownAdapter: boolean isEnabled(int)>
<android.providers.settings.GlobalSettingsProto.Private: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.providers.settings.SecureSettingsProto.Rotation: void <init>(android.providers.settings.SecureSettingsProto)>
<android.opengl.GLLogWrapper: void glFogf(int,float)>
<android.app.IActivityManager: void setHasTopUi(boolean)>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean load()>
<android.media.JetPlayer.NativeEventHandler: void <init>(android.media.JetPlayer,android.media.JetPlayer,android.os.Looper)>
<android.bluetooth.IBluetoothMapClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.opengl.GLErrorWrapper: void glCullFace(int)>
<android.widget.CalendarViewMaterialDelegate: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<android.widget.Editor.EasyEditPopupWindow: void hide()>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: android.renderscript.ProgramFragmentFixedFunction create()>
<android.providers.settings.SecureSettingsProto.Autofill: void <init>(android.providers.settings.SecureSettingsProto)>
<android.speech.tts.FileSynthesisCallback: int audioAvailable(byte[],int,int)>
<android.hardware.input.IInputManager: void setPointerIconType(int)>
<android.util.StatsLogInternal: int write(int,int,byte[])>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int,int,java.lang.String)>
<android.location.GpsStatus.SatelliteIterator: java.lang.Object next()>
<android.widget.Spinner.SpinnerPopup: boolean isShowing()>
<android.app.IActivityManager: int getUidForIntentSender(android.content.IIntentSender)>
<android.opengl.GLSurfaceView.GLThread: void onResume()>
<android.media.MediaFormat.FilteredMappedKeySet: int size()>
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)>
<android.widget.RemoteViews.LayoutParamAction: int getActionTag()>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedFragment()>
<android.bluetooth.BluetoothInputStream: int read(byte[],int,int)>
<android.media.Cea708CCWidget.CCWindowLayout: void setCaptionWindowId(int)>
<android.os.SystemProto.KernelWakelock: void <init>(android.os.SystemProto)>
<android.webkit.EventLogTags: void writeBrowserDoubleTapDuration(int,long)>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,int[],int)>
<android.location.ILocationManager: int getGnssBatchSize(java.lang.String)>
<android.app.ContextImpl: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.widget.CalendarViewMaterialDelegate: boolean getBoundsForDate(long,android.graphics.Rect)>
<android.view.ViewRootImpl.AsyncInputStage: void forward(android.view.ViewRootImpl.QueuedInputEvent)>
<android.view.View.CheckForLongPress: void setClassification(int)>
<android.content.pm.IPackageManager: void unregisterMoveCallback(android.content.pm.IPackageMoveObserver)>
<android.media.MediaCasException: void throwExceptionIfNeeded(int)>
<android.widget.ListPopupWindow.PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.widget.TextView.CharWrapper: int getTextWidths(int,int,float[],android.graphics.Paint)>
<android.app.ActivityOptions.HideWindowListener: void onTransitionEnd(android.transition.Transition)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList copyMappedViews()>
<android.view.View.SendViewScrolledAccessibilityEvent: void run()>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onServiceStateChanged(android.telephony.ServiceState)>
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()>
<android.providers.settings.SecureSettingsProto.AutomaticStorageManager: void <init>(android.providers.settings.SecureSettingsProto)>
<android.app.LoaderManagerImpl.LoaderInfo: java.lang.String toString()>
<android.app.Activity.HostCallbacks: boolean onHasView()>
<android.os.IVold: void reset()>
<android.media.ImageReader.ListenerHandler: void <init>(android.media.ImageReader,android.os.Looper)>
<android.util.Log.ImmediateLogWriter: void close()>
<android.app.IActivityManager: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<android.opengl.GLErrorWrapper: void glScissor(int,int,int,int)>
<android.os.IInstalld: boolean reconcileSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String[],java.lang.String,int)>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity valueOf(java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glColorMask(boolean,boolean,boolean,boolean)>
<android.graphics.ColorSpace.Lab: float[] fromXyz(float[])>
<android.opengl.GLErrorWrapper: void glPointParameterx(int,int)>
<android.security.keystore.DelegatingX509Certificate: int getVersion()>
<android.view.contentcapture.ChildContentCaptureSession: void updateContentCaptureContext(android.view.contentcapture.ContentCaptureContext)>
<android.app.admin.IDevicePolicyManager: boolean setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)>
<android.widget.SearchView.UpdatableTouchDelegate: void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setType(int)>
<android.preference.GenericInflater: void <init>(android.preference.GenericInflater,android.content.Context)>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,int[],int)>
<android.opengl.GLLogWrapper: void glDrawTexxOES(int,int,int,int,int)>
<android.app.admin.IDevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit[] values()>
<android.graphics.ColorSpace.Xyz: boolean isWideGamut()>
<android.view.ViewOverlay.OverlayViewGroup: void onDescendantInvalidated(android.view.View,android.view.View)>
<android.widget.Editor.EasyEditPopupWindow: void onClick(android.view.View)>
<android.bluetooth.IBluetoothHeadsetPhone: void cdmaSetSecondCallState(boolean)>
<android.bluetooth.IBluetoothA2dpSink: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.hardware.ICameraService: void notifyDeviceStateChange(long)>
<android.os.IStatsManager: void sendAppBreadcrumbAtom(int,int)>
<android.opengl.GLLogWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.content.pm.IPackageManager: void restorePreferredActivities(byte[],int)>
<android.view.IWindowManager: void unregisterSystemGestureExclusionListener(android.view.ISystemGestureExclusionListener,int)>
<android.view.ViewGroup.ChildListForAutofill: void recycle()>
<android.app.admin.SecurityLogTags: void writeSecurityAdbShellInteractive()>
<android.app.ActivityThread.Profiler: void startProfiling()>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.view.contentcapture.ChildContentCaptureSession: void <init>(android.view.contentcapture.ContentCaptureSession,android.view.contentcapture.ContentCaptureContext)>
<android.bluetooth.IBluetooth: boolean isLeExtendedAdvertisingSupported()>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType[] values()>
<android.app.IActivityManager: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,int[],int)>
<android.net.lowpan.ILowpanInterface: java.lang.String getNcpVersion()>
<android.widget.CalendarViewMaterialDelegate: void setDate(long)>
<android.widget.ShareActionProvider.ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.inputmethodservice.KeyboardView.SwipeTracker: float getYVelocity()>
<android.widget.Spinner.SpinnerPopup: void setHorizontalOffset(int)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onCellLocationChanged(android.os.Bundle)>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(java.nio.IntBuffer)>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int,boolean,boolean,boolean)>
<android.view.IWindowManager: void setForcedDisplaySize(int,int,int)>
<android.service.autofill.RequiredValidators: boolean isValid(android.service.autofill.ValueFinder)>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm valueOf(java.lang.String)>
<android.providers.settings.GlobalSettingsProto.Storage: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.media.PlayerBase.IPlayerWrapper: void setStartDelayMs(int)>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(com.android.framework.protobuf.ByteString,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: int getCount()>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.app.ActivityThread.AndroidOs: void install()>
<android.os.FileObserver.ObserverThread: int[] startWatching(java.util.List,int,android.os.FileObserver)>
<android.providers.settings.SystemSettingsProto.Sip: void <init>(android.providers.settings.SystemSettingsProto)>
<android.util.apk.ApkSigningBlockUtils: android.util.Pair getSignatureAlgorithmJcaSignatureAlgorithm(int)>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void <init>(android.view.ViewRootImpl)>
<android.view.ViewRootImpl.SyntheticTrackballHandler: void cancel()>
<android.bluetooth.IBluetoothHidHost: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)>
<android.net.lowpan.ILowpanInterface: void pollForData()>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(float[],int)>
<android.bluetooth.IBluetooth: android.bluetooth.BluetoothDevice[] getBondedDevices()>
<android.app.ContextImpl: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<android.bluetooth.IBluetooth: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHidHost: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
<android.preference.PreferenceActivity.HeaderAdapter: void <init>(android.content.Context,java.util.List,int,boolean)>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.util.StatsLogInternal: int write(int,byte[],int,int,int)>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void <init>(android.app.MediaRouteActionProvider)>
<android.os.SystemProto.Battery: void <init>(android.os.SystemProto)>
<android.os.TokenWatcher.Death: void finalize()>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onSrvccStateChanged(int)>
<android.inputmethodservice.IInputMethodWrapper: void <init>(android.inputmethodservice.AbstractInputMethodService,android.view.inputmethod.InputMethod)>
<android.animation.Keyframe.IntKeyframe: int getIntValue()>
<android.widget.TimePickerClockDelegate.NearestTouchDelegate: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.opengl.GLErrorWrapper: void glTexEnvx(int,int,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.net.lowpan.ILowpanInterface: void addOnMeshPrefix(android.net.IpPrefix,int)>
<android.view.AccessibilityInteractionController.PrivateHandler: void <init>(android.view.AccessibilityInteractionController,android.os.Looper)>
<android.app.admin.IDevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long,boolean)>
<android.app.ActivityTransitionState: void postponeEnterTransition()>
<android.app.admin.IDevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>
<android.app.ContextImpl: android.content.Context createPackageContext(java.lang.String,int)>
<android.view.IWindowManager: void setForwardedInsets(int,android.graphics.Insets)>
<android.widget.CalendarViewLegacyDelegate: int getWeekDayTextAppearance()>
<android.app.admin.IDevicePolicyManager: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)>
<android.bluetooth.IBluetoothA2dp: void setAvrcpAbsoluteVolume(int)>
<android.view.IWindowManager: int watchRotation(android.view.IRotationWatcher,int)>
<android.app.ActivityThread.ApplicationThread: void unstableProviderDied(android.os.IBinder)>
<android.os.storage.IStorageManager: void registerListener(android.os.storage.IStorageEventListener)>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.widget.CalendarViewLegacyDelegate.WeekView: boolean getDayFromLocation(float,android.icu.util.Calendar)>
<android.content.res.XmlBlock.Parser: java.lang.CharSequence getPooledString(int)>
<android.util.RecurrenceRule.RecurringIterator: java.lang.Object next()>
<android.bluetooth.IBluetoothMapClient: boolean sendMessage(android.bluetooth.BluetoothDevice,android.net.Uri[],java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.opengl.GLLogWrapper: boolean glIsFramebufferOES(int)>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent)>
<android.widget.Editor.PinnedPopupWindow: void setUp()>
<android.os.SharedMemory.Unmapper: void run()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: int engineSign(byte[],int,int)>
<android.app.admin.SecurityLogTags: void writeSecurityMediaUnmounted(java.lang.String,java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getSharedLibraries(java.lang.String,int,int)>
<android.net.lowpan.ILowpanInterface: void removeExternalRoute(android.net.IpPrefix)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationRepeat(android.animation.Animator)>
<android.content.pm.IPackageManager: android.content.ComponentName getInstantAppResolverComponent()>
<android.view.IWindowSession: void cancelDragAndDrop(android.os.IBinder,boolean)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: boolean deliverSelfNotifications()>
<android.app.IActivityManager: boolean unbindService(android.app.IServiceConnection)>
<android.bluetooth.IBluetoothA2dp: android.bluetooth.BluetoothCodecStatus getCodecStatus(android.bluetooth.BluetoothDevice)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setShowWeekNumber(boolean)>
<com.android.server.AlarmManagerServiceDumpProto.AlarmStat: void <init>(com.android.server.AlarmManagerServiceDumpProto)>
<android.net.Uri.OpaqueUri: int getPort()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: long getProducedOutputSizeBytes()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>
<android.media.Cea708CCWidget.CCView: void <init>(android.content.Context)>
<android.widget.CalendarView.InspectionCompanion: void readProperties(android.widget.CalendarView,android.view.inspector.PropertyReader)>
<android.widget.CalendarViewMaterialDelegate: int getDateTextAppearance()>
<android.widget.DateTimeView.ReceiverInfo: void setHandler(android.os.Handler)>
<android.view.MenuInflater.MenuState: void resetGroup()>
<android.providers.settings.GlobalSettingsProto.DnsResolver: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.AbsSpinner.RecycleBin: void put(int,android.view.View)>
<android.content.pm.IPackageManager: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>
<android.opengl.GLSurfaceView.GLThread: boolean ableToDraw()>
<android.content.res.XmlBlock.Parser: java.lang.String getIdAttribute()>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.bluetooth.IBluetoothGattCallback: void onNotify(java.lang.String,int,byte[])>
<android.media.Utils: java.lang.String getFileDisplayNameFromUri(android.content.Context,android.net.Uri)>
<android.security.keystore.IKeystoreService: int importWrappedKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long)>
<android.media.DecoderCapabilities.AudioDecoder: android.media.DecoderCapabilities.AudioDecoder valueOf(java.lang.String)>
<android.app.SharedPreferencesImpl: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.os.IVold: void unmount(java.lang.String)>
<android.providers.settings.SecureSettingsProto.PrintService: void <init>(android.providers.settings.SecureSettingsProto)>
<android.os.IUpdateEngine: void resetStatus()>
<android.app.admin.IDevicePolicyManager: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)>
<android.hardware.LegacySensorManager.LegacyListener: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.media.Cea708CCWidget.ScaledLayout: void <init>(android.content.Context)>
<android.hardware.radio.TunerAdapter: int cancel()>
<android.widget.YearPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)>
<android.app.IActivityManager: int stopUser(int,boolean,android.app.IStopUserCallback)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean listCurrentCalls()>
<android.apex.IApexService: void unstagePackages(java.util.List)>
<android.security.keystore.DelegatingX509Certificate: java.util.Collection getSubjectAlternativeNames()>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive valueOf(java.lang.String)>
<android.security.keystore.DelegatingX509Certificate: java.util.Set getCriticalExtensionOIDs()>
<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.ImeInputEventReceiver: void onInputEvent(android.view.InputEvent)>
<android.widget.TextClock.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.service.notification.ManagedServicesProto.ServiceProto: void <init>(android.service.notification.ManagedServicesProto)>
<android.hardware.radio.TunerAdapter: boolean isAntennaConnected()>
<android.os.IIncidentCompanion: java.util.List getIncidentReportList(java.lang.String,java.lang.String)>
<android.widget.SuggestionsAdapter: void onClick(android.view.View)>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.widget.ExpandableListConnector: int getViewTypeCount()>
<android.app.FragmentManagerImpl.PopBackStackState: void <init>(android.app.FragmentManagerImpl,java.lang.String,int,int)>
<android.widget.RemoteViews.ReflectionAction: boolean prefersAsyncApply()>
<android.preference.VolumePreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.IBluetoothA2dp: void disableOptionalCodecs(android.bluetooth.BluetoothDevice)>
<android.util.MapCollections.EntrySet: boolean removeAll(java.util.Collection)>
<android.app.LoadedApk.WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onImsCallDisconnectCauseChanged(android.telephony.ims.ImsReasonInfo)>
<android.widget.RemoteViews.RemoteViewsContextWrapper: android.content.res.Resources getResources()>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,float[],int)>
<android.location.ILocationManager: int getGnssYearOfHardware()>
<android.speech.tts.BlockingAudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)>
<android.os.ProcrankProto.Summary: void <init>(android.os.ProcrankProto)>
<android.app.Dialog.ListenersHandler: void handleMessage(android.os.Message)>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.service.autofill.NegationValidator: boolean isValid(android.service.autofill.ValueFinder)>
<android.util.StatsLogInternal: int write(int,int,int,int,int,int,int,int,byte[])>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>
<android.content.res.XmlBlock: int nativeNext(long)>
<android.widget.AbsListView.PositionScroller: void startWithOffset(int,int,int)>
<android.view.inspector.InspectableProperty: boolean hasAttributeId()>
<android.speech.SpeechRecognizer.InternalListener: void onReadyForSpeech(android.os.Bundle)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.view.ViewRootImpl.AsyncInputStage: void apply(android.view.ViewRootImpl.QueuedInputEvent,int)>
<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>
<android.view.View.CheckForLongPress: void run()>
<android.os.IStatsManager: void setDataFetchOperation(long,android.os.IBinder,java.lang.String)>
<android.bluetooth.IBluetoothMapClient: int getSupportedFeatures(android.bluetooth.BluetoothDevice)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationStart(android.animation.Animator)>
<android.permission.PermissionControllerManager.PendingGetPermissionUsagesRequest: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.widget.GridLayout.Interval: void <init>(int,int)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getAcceptedNames()>
<android.widget.Spinner.DropDownAdapter: long getItemId(int)>
<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)>
<android.graphics.Paint.Style: android.graphics.Paint.Style[] values()>
<android.view.IWindowSession: void finishMovingTask(android.view.IWindow)>
<android.bluetooth.IBluetoothPbapClient: java.util.List getConnectedDevices()>
<android.net.Uri.PathPart: android.net.Uri.PathPart makeAbsolute(android.net.Uri.PathPart)>
<android.opengl.GLLogWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLErrorWrapper: void glFrustumf(float,float,float,float,float,float)>
<android.app.admin.IDevicePolicyManager: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)>
<android.animation.AnimatorSet.Node: void <init>(android.animation.Animator)>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(short[],int)>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode[] values()>
<android.hardware.biometrics.BiometricSourceType: int describeContents()>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,int[],int)>
<android.widget.StackView.StackSlider: void setYProgress(float)>
<android.hardware.Camera.EventHandler: void handleMessage(android.os.Message)>
<android.widget.RemoteViews.RunnableAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.NumberPicker.PressedStateHelper: void buttonPressDelayed(int)>
<android.media.ImageReader.SurfaceImage: void finalize()>
<android.media.MediaCodec.BufferMap.CodecBuffer: void free()>
<android.hardware.input.IInputManager: void vibrate(int,long[],int,android.os.IBinder)>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,int[],int)>
<android.inputmethodservice.IInputMethodWrapper: void showSoftInput(int,android.os.ResultReceiver)>
<android.location.ILocationManager: void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)>
<android.graphics.Picture.PictureCanvas: void onHwBitmapInSwMode()>
<android.app.IActivityManager: void enterSafeMode()>
<android.os.BugreportManager.DumpstateListener: void onProgressUpdated(int)>
<android.widget.ViewAnimator.InspectionCompanion: void readProperties(android.widget.ViewAnimator,android.view.inspector.PropertyReader)>
<android.net.Uri.OpaqueUri: java.util.List getPathSegments()>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.bluetooth.IBluetoothHidHost: boolean getIdleTime(android.bluetooth.BluetoothDevice)>
<android.net.LocalSocketImpl: void accept(android.net.LocalSocketImpl)>
<android.app.IActivityManager: boolean moveTopActivityToPinnedStack(int,android.graphics.Rect)>
<android.bluetooth.IBluetoothHidHost: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.view.GestureExclusionTracker: java.util.List computeChangedRects()>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.os.Bundle)>
<android.content.pm.IPackageManager: int checkPermission(java.lang.String,java.lang.String,int)>
<android.app.ContextImpl: void sendBroadcastAsUserMultiplePermissions(android.content.Intent,android.os.UserHandle,java.lang.String[])>
<android.bluetooth.IBluetooth: long getSupportedProfiles()>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,java.lang.String,java.lang.String,int)>
<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanCredential getLowpanCredential()>
<android.widget.SearchView.SavedState: java.lang.String toString()>
<android.speech.SpeechRecognizer.InternalListener: void onRmsChanged(float)>
<android.location.ILocationManager: boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback,java.lang.String)>
<android.widget.Editor.EasyEditPopupWindow: void initContentView()>
<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfoVersioned(android.content.pm.VersionedPackage,int,int)>
<android.app.BackStackRecord: int getTransitionStyle()>
<android.app.ResourcesManager.ApkKey: int hashCode()>
<android.bluetooth.IBluetoothSap: boolean connect(android.bluetooth.BluetoothDevice)>
<android.text.AlteredCharSequence.AlteredSpanned: int nextSpanTransition(int,int,java.lang.Class)>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<android.view.ViewOverlay.OverlayViewGroup: void onLayout(boolean,int,int,int,int)>
<android.widget.RemoteViews.ViewTree: android.view.View findViewById(int)>
<android.app.IntentService.ServiceHandler: void handleMessage(android.os.Message)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(android.util.Property,float[])>
<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<android.permission.PermissionControllerManager.FileReaderTask: void onPostExecute(byte[])>
<android.bluetooth.IBluetooth: int getState()>
<android.text.AlteredCharSequence.AlteredSpanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.app.IActivityManager: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority valueOf(java.lang.String)>
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()>
<android.app.IActivityManager: java.util.List getFilteredTasks(int,int,int)>
<android.filterfw.core.GenerateProgramPort: java.lang.Class type()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: int getViewTypeCount()>
<android.os.IStatsManager: void removeConfiguration(long,java.lang.String)>
<android.widget.Editor.ProcessTextIntentActionsHandler: void initializeAccessibilityActions()>
<android.widget.TextClock.FormatChangeObserver: void onChange(boolean,android.net.Uri)>
<android.widget.CompoundButton.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.ContextImpl: java.lang.String getBasePackageName()>
<android.widget.Editor.SuggestionHelper: int getSuggestionInfo(android.widget.Editor.SuggestionInfo[],android.widget.Editor.SuggestionSpanInfo)>
<android.media.AudioHandle: int hashCode()>
<android.providers.settings.GlobalSettingsProto.Auto: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.os.IVold: void mountDefaultEncrypted()>
<android.stats.dnsresolver.DnsResolver.DnsQueryEvents: void <init>(android.stats.dnsresolver.DnsResolver)>
<android.os.SystemPropertiesProto.Ro: void <init>(android.os.SystemPropertiesProto)>
<android.os.UidProto.WakeupAlarm: void <init>(android.os.UidProto)>
<android.app.admin.IDevicePolicyManager: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)>
<android.app.ContextImpl: boolean deleteFile(java.lang.String)>
<android.view.IWindowManager: boolean shouldShowWithInsecureKeyguard(int)>
<android.app.admin.IDevicePolicyManager: boolean isUsingUnifiedPassword(android.content.ComponentName)>
<android.view.ViewOverlay.OverlayViewGroup: void dispatchDraw(android.graphics.Canvas)>
<android.app.ActivityTransitionCoordinator: long getFadeDuration()>
<android.widget.ActionMenuPresenter.ActionButtonSubmenu: void <init>(android.widget.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.SubMenuBuilder,android.view.View)>
<android.opengl.GLErrorWrapper: void glLoadIdentity()>
<android.app.IWallpaperManager: boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback)>
<android.widget.CalendarViewMaterialDelegate: int getWeekDayTextAppearance()>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.widget.DayPickerView: int getMostVisiblePosition()>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,int[],int)>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean hasSensors()>
<android.content.EventLogTags: void writeContentQuerySample(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.widget.Spinner.SpinnerPopup: java.lang.CharSequence getHintText()>
<android.app.admin.IDevicePolicyManager: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)>
<android.hardware.usb.IUsbManager: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: boolean hasStableIds()>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind[] values()>
<android.widget.CalendarViewLegacyDelegate.WeekView: int getMonthOfFirstWeekDay()>
<android.widget.AutoCompleteTextView.PassThroughClickListener: void onClick(android.view.View)>
<android.security.KeyStore.CertificateChainPromise: void onFinished(android.security.keystore.KeystoreResponse,android.security.keymaster.KeymasterCertificateChain)>
<android.app.WallpaperManager.Globals: android.graphics.Bitmap peekWallpaperBitmap(android.content.Context,boolean,int)>
<android.bluetooth.IBluetoothGatt: void setAdvertisingData(int,android.bluetooth.le.AdvertiseData)>
<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void run()>
<android.security.keystore.IKeystoreService: byte[] get(java.lang.String,int)>
<android.graphics.drawable.RippleForeground: void enter()>
<android.net.lowpan.ILowpanInterface: void removeListener(android.net.lowpan.ILowpanInterfaceListener)>
<android.widget.Editor.SuggestionHelper.SuggestionSpanComparator: int compare(java.lang.Object,java.lang.Object)>
<android.hardware.biometrics.BiometricSourceType: android.hardware.biometrics.BiometricSourceType[] values()>
<android.media.ImageWriter.ListenerHandler: void <init>(android.media.ImageWriter,android.os.Looper)>
<android.graphics.ImageDecoder.ResourceSource: android.content.res.Resources getResources()>
<android.permission.PermissionControllerManager.PendingSetRuntimePermissionGrantStateByDeviceAdmin: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType valueOf(java.lang.String)>
<android.app.WallpaperManager.Globals: void addOnColorsChangedListener(android.app.WallpaperManager.OnColorsChangedListener,android.os.Handler,int,int)>
<android.media.ExifInterface.ByteOrderedDataInputStream: int available()>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onCallStateChanged(int,java.lang.String)>
<android.telecom.RemoteConnection.CallbackRecord: void <init>(android.telecom.RemoteConnection.Callback,android.os.Handler)>
<android.view.IWindowManager: float[] getAnimationScales()>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createULong(long,java.nio.ByteOrder)>
<android.webkit.WebViewLibraryLoader.RelroFileCreator: void main(java.lang.String[])>
<android.telephony.NetworkService.INetworkServiceWrapper: void unregisterForNetworkRegistrationInfoChanged(int,android.telephony.INetworkServiceCallback)>
<android.app.admin.IDevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>
<android.util.MapCollections.KeySet: boolean addAll(java.util.Collection)>
<android.speech.tts.AudioPlaybackHandler: void stopForApp(java.lang.Object)>
<android.media.AudioManager.BlockingFocusResultReceiver: void waitForResult(long)>
<android.media.WebVttRenderingWidget.CueLayout: android.media.TextTrackCue getCue()>
<android.location.IGeocodeProvider: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<android.widget.DayPickerView: void setOnDaySelectedListener(android.widget.DayPickerView.OnDaySelectedListener)>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState[] values()>
<android.content.pm.IPackageManagerNative: boolean[] isAudioPlaybackCaptureAllowed(java.lang.String[])>
<android.widget.DatePicker.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.content.pm.IPackageManager: int getFlagsForUid(int)>
<android.sysprop.TraceProperties: java.util.Optional user_initiated()>
<android.hardware.input.IInputManager: void cancelVibrate(int,android.os.IBinder)>
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)>
<android.transition.ChangeBounds.ViewBounds: void <init>(android.view.View)>
<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)>
<android.media.ImageWriter.WriterSurfaceImage: java.lang.Object getOwner()>
<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: int getTagLengthBits()>
<android.accounts.AccountManager.Future2Task: android.accounts.AccountManager.Future2Task start()>
<android.util.MapCollections.EntrySet: void clear()>
<android.widget.RemoteViews.ViewGroupActionAdd: boolean hasSameAppInfo(android.content.pm.ApplicationInfo)>
<android.accounts.AbstractAccountAuthenticator.Transport: void startUpdateCredentialsSession(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.net.Uri.StringUri: android.net.Uri.Builder buildUpon()>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,int[],int)>
<android.util.StatsLogInternal: int write(int,long,int,java.lang.String,java.lang.String,boolean)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void resetAll()>
<android.media.RemoteController.EventHandler: void handleMessage(android.os.Message)>
<android.util.Base64.Encoder: int maxOutputSize(int)>
<android.app.BackStackRecord: int commitAllowingStateLoss()>
<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.bluetooth.IBluetoothGattServerCallback: void onDescriptorReadRequest(java.lang.String,int,int,boolean,int)>
<android.permission.PermissionControllerManager.PendingGrantOrUpgradeDefaultRuntimePermissionsRequest: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.widget.TimePickerSpinnerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.os.SystemProto.ScreenBrightness: void <init>(android.os.SystemProto)>
<android.providers.settings.SecureSettingsProto.Launcher: void <init>(android.providers.settings.SecureSettingsProto)>
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)>
<android.opengl.GLErrorWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.widget.TabHost.IntentContentStrategy: void tabClosed()>
<android.speech.tts.EventLogger: void logSuccess(long,long,long)>
<android.security.keystore.IKeystoreService: int attestDeviceIds(android.security.keystore.IKeystoreCertificateChainCallback,android.security.keymaster.KeymasterArguments)>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: android.renderscript.ProgramVertexFixedFunction.InternalBuilder addInput(android.renderscript.Element)>
<android.hardware.radio.TunerCallbackAdapter: void onTuneFailed(int,android.hardware.radio.ProgramSelector)>
<android.util.MapCollections.EntrySet: java.lang.Object[] toArray()>
<android.app.IActivityManager: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<android.widget.RtlSpacingHelper: int getStart()>
<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,boolean,java.lang.String,int)>
<android.widget.Gallery.FlingRunnable: void startUsingVelocity(int)>
<android.animation.AnimationHandler.MyFrameCallbackProvider: void postFrameCallback(android.view.Choreographer.FrameCallback)>
<android.bluetooth.IBluetoothManager: boolean enableNoAutoConnect(java.lang.String)>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType[] values()>
<android.os.IVoldListener: void onDiskCreated(java.lang.String,int)>
<android.database.ContentObserver.Transport: void <init>(android.database.ContentObserver)>
<android.opengl.GLLogWrapper: void glDrawTexiOES(int,int,int,int,int)>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<android.view.LayoutInflater.BlinkLayout: void onDetachedFromWindow()>
<android.os.IVold: void fdeCheckPassword(java.lang.String)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition setTargets(android.transition.Transition,boolean)>
<android.media.WebVttRenderingWidget.RegionLayout: android.media.TextTrackRegion getRegion()>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.location.LocationManager.ListenerTransport: void onLocationChanged(android.location.Location)>
<android.widget.FastScroller: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
<android.media.MediaRouter.Static: void onDisplayChanged(int)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)>
<android.util.MapCollections: void colPut(java.lang.Object,java.lang.Object)>
<android.media.ImageWriter.WriterSurfaceImage: int getWidth()>
<android.net.Uri.OpaqueUri: java.lang.String getScheme()>
<android.bluetooth.IBluetoothHeadsetPhone: boolean hangupCall()>
<android.widget.TimePickerSpinnerDelegate: void <init>(android.widget.TimePicker,android.content.Context,android.util.AttributeSet,int,int)>
<android.filterfw.core.GenerateFinalPort: boolean hasDefault()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDestroy(android.content.Intent)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean needsDividerAfter()>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changePeerDimensions(int,int)>
<android.view.IWindowSession: boolean outOfMemory(android.view.IWindow)>
<android.service.autofill.OptionalValidators: int describeContents()>
<android.location.ILocationManager: void removeTestProvider(java.lang.String,java.lang.String)>
<android.view.IWindowManager: void removeRotationWatcher(android.view.IRotationWatcher)>
<android.providers.settings.SecureSettingsProto.Backup: void <init>(android.providers.settings.SecureSettingsProto)>
<android.view.View.DeclaredOnClickListener: void <init>(android.view.View,java.lang.String)>
<android.widget.SpellChecker.SpellParser: boolean isFinished()>
<android.view.IWindowManager: int getBaseDisplayDensity(int)>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.admin.IDevicePolicyManager: boolean isProvisioningAllowed(java.lang.String,java.lang.String)>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.AsyncRunner getAsyncRunner(android.filterfw.core.FilterContext)>
<android.content.pm.IPackageManager: void restoreIntentFilterVerification(byte[],int)>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void removeDelayedAnimation(android.view.RenderNodeAnimator)>
<android.media.WebVttRenderingWidget.RegionLayout: void <init>(android.content.Context,android.media.TextTrackRegion,android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.os.storage.IStorageEventListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void <init>(android.view.View)>
<android.app.LoadedApk.ServiceDispatcher.DeathMonitor: void binderDied()>
<android.app.IActivityManager: void registerUidObserver(android.app.IUidObserver,int,int,java.lang.String)>
<android.widget.SimpleMonthView: void onRtlPropertiesChanged(int)>
<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
<android.bluetooth.IBluetooth: boolean isOffloadedScanBatchingSupported()>
<android.permission.PermissionControllerManager.PendingGetRuntimePermissionBackup: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State[] values()>
<android.gamedriver.GameDriverProto.BlacklistsOrBuilder: java.util.List getBlacklistsList()>
<android.speech.tts.FileSynthesisCallback: void error(int)>
<android.telecom.ConnectionServiceAdapterServant: void <init>(com.android.internal.telecom.IConnectionServiceAdapter)>
<android.os.MessageQueue.FileDescriptorRecord: void <init>(java.io.FileDescriptor,int,android.os.MessageQueue.OnFileDescriptorEventListener)>
<android.app.EnterTransitionCoordinator: android.transition.Transition getSharedElementTransition()>
<android.widget.RemoteViews.OverrideTextColorsAction: int getActionTag()>
<android.app.ContextImpl: java.io.File[] getExternalMediaDirs()>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.bluetooth.IBluetoothHearingAid: int getPriority(android.bluetooth.BluetoothDevice)>
<android.app.IActivityManager: void removeContentProvider(android.os.IBinder,boolean)>
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.media.AudioManager.SafeWaitObject: void safeNotify()>
<android.app.admin.IDevicePolicyManager: int getCurrentFailedPasswordAttempts(int,boolean)>
<android.hardware.ICameraService: void notifySystemEvent(int,int[])>
<android.graphics.Picture.PictureCanvas: void setBitmap(android.graphics.Bitmap)>
<android.hardware.radio.Utils: java.util.Set createSet(android.os.Parcel,android.os.Parcelable.Creator)>
<android.providers.settings.GlobalSettingsProto.Emergency: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.admin.IDevicePolicyManager: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,int,int)>
<android.location.LocalListenerHelper: android.content.Context getContext()>
<android.providers.settings.SecureSettingsProto.ParentalControl: void <init>(android.providers.settings.SecureSettingsProto)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstantApps(int)>
<android.util.apk.WrappedX509Certificate: void checkValidity()>
<android.util.Log.ImmediateLogWriter: void flush()>
<android.opengl.GLLogWrapper: void glFogx(int,int)>
<android.preference.SeekBarVolumizer.H: void postUpdateSlider(int,int,boolean)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA256AndMGF1Padding: void finalize()>
<android.app.SharedPreferencesImpl: boolean contains(java.lang.String)>
<android.animation.LayoutTransition.CleanupCallback: void onViewDetachedFromWindow(android.view.View)>
<android.print.PrinterDiscoverySession.SessionHandler: void <init>(android.print.PrinterDiscoverySession,android.os.Looper)>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,int[],int)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDataSetChanged()>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,float[],int)>
<android.widget.RemoteViews.AsyncApplyTask: void onPostExecute(java.lang.Object)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: android.gamedriver.GameDriverProto.Blacklists.Builder setBlacklists(int,android.gamedriver.GameDriverProto.Blacklist)>
<android.opengl.GLErrorWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.media.Cea708CCWidget.CCWindowLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLLogWrapper: void glColor4f(float,float,float,float)>
<android.app.IActivityManager: android.app.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,java.lang.String,int,boolean)>
<android.hardware.camera2.ICameraDeviceUser: void beginConfigure()>
<android.widget.DatePickerCalendarDelegate: boolean getSpinnersShown()>
<android.security.keystore.IKeystoreService: int onUserRemoved(int)>
<android.os.IVold: void mkdirs(java.lang.String)>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,int)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(byte[],int,int)>
<android.app.admin.IDevicePolicyManager: int startUserInBackground(android.content.ComponentName,android.os.UserHandle)>
<android.app.IActivityManager: boolean startBinderTracking()>
<android.widget.DayPickerViewPager: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.ContextImpl: void performFinalCleanup(java.lang.String,java.lang.String)>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void writeShort(short)>
<android.app.ContextImpl: android.graphics.drawable.Drawable peekWallpaper()>
<android.opengl.GLErrorWrapper: void glGenerateMipmapOES(int)>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,float[],int)>
<android.widget.DatePickerSpinnerDelegate: android.icu.util.Calendar getMaxDate()>
<android.hardware.radio.TunerAdapter: boolean isConfigFlagSet(int)>
<android.app.IActivityManager: int restartUserInBackground(int)>
<android.providers.settings.GlobalSettingsProto.PrepaidSetup: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.os.IIncidentReportStatusListener: void onReportStarted()>
<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>
<android.bluetooth.IBluetoothGatt: void unregisterScanner(int)>
<android.app.IActivityManager: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams text(java.lang.CharSequence)>
<android.view.ViewRootImpl.QueuedInputEvent: boolean shouldSkipIme()>
<android.os.IStatsManager: void informDeviceShutdown()>
<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,android.preference.Preference,android.util.AttributeSet)>
<android.app.admin.IDevicePolicyManager: void uninstallCaCerts(android.content.ComponentName,java.lang.String,java.lang.String[])>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.security.keystore.IKeystoreService: int addRngEntropy(android.security.keystore.IKeystoreResponseCallback,byte[],int)>
<android.net.Uri.PathSegments: java.lang.Object get(int)>
<android.bluetooth.IBluetoothSap: int getState()>
<android.preference.EditTextPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.util.MapCollections.ValuesCollection: boolean isEmpty()>
<android.service.autofill.RequiredValidators: void writeToParcel(android.os.Parcel,int)>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineInit(int,java.security.Key,java.security.SecureRandom)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getEndUserSessionMessage(android.content.ComponentName)>
<android.providers.settings.SecureSettingsProto.Location: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.GridLayout.Axis: void setCount(int)>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,float[],int)>
<android.app.admin.IDevicePolicyManager: boolean removeOverrideApn(android.content.ComponentName,int)>
<android.app.IActivityManager: void setProcessImportant(android.os.IBinder,int,boolean,java.lang.String)>
<android.graphics.BlendMode: int toValue(android.graphics.BlendMode)>
<android.os.IVold: void fdeRestart()>
<android.app.IActivityManager: boolean dumpHeap(java.lang.String,int,boolean,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,android.os.RemoteCallback)>
<android.app.LauncherActivity.ActivityAdapter: android.app.LauncherActivity.ListItem itemForPosition(int)>
<android.util.apk.ApkSigningBlockUtils: int compareSignatureAlgorithm(int,int)>
<android.widget.StackView.LayoutParams: void setHorizontalOffset(int)>
<android.widget.DayPickerView: void setDate(long,boolean)>
<android.sysprop.DisplayProperties: java.util.Optional debug_opengl_trace()>
<android.media.MediaPlayer.EventHandler: void handleMessage(android.os.Message)>
<android.hardware.input.IInputManager: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>
<android.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setShowFooterView(boolean)>
<android.opengl.GLLogWrapper: void glColor4ub(byte,byte,byte,byte)>
<android.widget.DayPickerView: void onLayout(boolean,int,int,int,int)>
<android.nfc.tech.BasicTagTechnology: void close()>
<android.app.admin.IDevicePolicyManager: int setGlobalPrivateDns(android.content.ComponentName,int,java.lang.String)>
<android.security.IKeyChainService: boolean containsCaAlias(java.lang.String)>
<android.graphics.ImageDecoder.InputStreamSource: android.content.res.Resources getResources()>
<android.view.IWindowManager: float getAnimationScale(int)>
<android.view.AccessibilityInteractionController.PrivateHandler: void handleMessage(android.os.Message)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Object engineGetParameter(java.lang.String)>
<android.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.bluetooth.IBluetoothGattServerCallback: void onNotificationSent(java.lang.String,int)>
<android.telephony.TelephonyManager.MultiSimVariants: android.telephony.TelephonyManager.MultiSimVariants[] values()>
<android.provider.Settings.GenerationTracker: int getCurrentGeneration()>
<android.content.pm.IPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.opengl.GLErrorWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.content.res.XmlBlock.Parser: int getSourceResId()>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateParentCaches()>
<android.app.admin.IDevicePolicyManager: boolean resetPasswordWithToken(android.content.ComponentName,java.lang.String,byte[],int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.util.StatsLogInternal: int write(int,long)>
<android.opengl.GLLogWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.app.ITaskStackListener: void onActivityPinned(java.lang.String,int,int,int)>
<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)>
<android.widget.Editor.EasyEditPopupWindow: int getVerticalLocalPosition(int)>
<android.widget.AbsListView.AbsPositionScroller: void stop()>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int,java.lang.String,int)>
<android.telecom.RemoteConnectionService: java.lang.String toString()>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.bluetooth.IBluetoothGattCallback: void onConnectionUpdated(java.lang.String,int,int,int,int)>
<android.bluetooth.IBluetoothA2dp: boolean isAvrcpAbsoluteVolumeSupported()>
<android.widget.CalendarViewLegacyDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.RemoteViews.SetRippleDrawableColor: int getActionTag()>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getSystemAvailableFeatures()>
<android.app.BackStackState: void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord)>
<android.net.LocalSocketImpl: java.lang.String toString()>
<android.view.IWindowManager: void refreshScreenCaptureDisabled(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void finalize()>
<android.widget.RemoteViews.Action: boolean hasSameAppInfo(android.content.pm.ApplicationInfo)>
<android.util.MapCollections.ValuesCollection: boolean add(java.lang.Object)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],java.lang.String,int,int,int,int)>
<android.animation.IntKeyframeSet: void <init>(android.animation.Keyframe.IntKeyframe[])>
<android.text.HtmlToSpannedConverter.Background: void <init>(int)>
<android.util.apk.WrappedX509Certificate: java.lang.String toString()>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<android.app.EnterTransitionCoordinator: void forceViewsToAppear()>
<android.bluetooth.BluetoothInputStream: int read()>
<android.app.EnterTransitionCoordinator: void onReceiveResult(int,android.os.Bundle)>
<android.bluetooth.IBluetoothHidDevice: boolean reportError(android.bluetooth.BluetoothDevice,byte)>
<android.drm.DrmStore.Playback: boolean isValid(int)>
<android.hardware.radio.TunerAdapter: int setConfiguration(android.hardware.radio.RadioManager.BandConfig)>
<android.app.LauncherActivity.ActivityAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.widget.StackView.StackSlider: float getYProgress()>
<android.speech.tts.AbstractEventLogger: void logSuccess(long,long,long)>
<android.speech.tts.FileSynthesisCallback: boolean hasStarted()>
<android.opengl.GLErrorWrapper: void glSampleCoverage(float,boolean)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>
<android.media.midi.MidiPortImpl: long getPacketTimestamp(byte[],int)>
<android.content.pm.IPackageManager: java.lang.String getPermissionControllerPackageName()>
<android.app.admin.IDevicePolicyManager: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<android.content.res.XmlBlock.Parser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.providers.settings.SecureSettingsProto.Vr: void <init>(android.providers.settings.SecureSettingsProto)>
<android.location.GnssMeasurementCallbackTransport: long getGnssCapabilities()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: int getAdditionalEntropyAmountForSign()>
<android.media.PlayerBase.IPlayerWrapper: void applyVolumeShaper(android.media.VolumeShaper.Configuration,android.media.VolumeShaper.Operation)>
<android.security.KeyStore.KeyAttestationCallbackResult: void <init>(android.security.KeyStore,android.security.keystore.KeystoreResponse,android.security.keymaster.KeymasterCertificateChain)>
<android.app.FragmentManagerImpl.StartEnterTransitionListener: void startListening()>
<android.opengl.GLSurfaceView.GLThread: void requestReleaseEglContextLocked()>
<android.content.pm.IPackageManager: boolean isSafeMode()>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void clearAccessibilityFocus()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initAlgorithmSpecificParameters()>
<android.app.ContextImpl: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<android.stats.devicepolicy.nano.StringList: android.stats.devicepolicy.nano.StringList parseFrom(byte[])>
<android.media.MediaRouter.Static: void onDisplayAdded(int)>
<android.security.keymaster.KeymasterLongArgument: void writeValue(android.os.Parcel)>
<android.util.apk.ApkSigningBlockUtils: android.util.Pair getEocd(java.io.RandomAccessFile)>
<android.os.UEventObserver.UEventThread: void run()>
<android.speech.tts.AudioPlaybackHandler.MessageLoop: void run()>
<android.app.admin.IDevicePolicyManager: java.util.List getCrossProfileCalendarPackagesForUser(int)>
<android.widget.Editor.TextRenderNode: void <init>(java.lang.String)>
<android.media.Cea708CCWidget.CCWindowLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.NumberPicker.PressedStateHelper: void run()>
<android.media.Cea708CCWidget.CCWindowLayout: void sendBuffer(java.lang.String)>
<com.android.internal.messages.nano.SystemMessageProto.SystemMessage: com.android.internal.messages.nano.SystemMessageProto.SystemMessage clear()>
<android.media.Cea608CCWidget.CCLayout: void setFontScale(float)>
<android.bluetooth.IBluetoothGattCallback: void onClientConnectionState(int,int,boolean,java.lang.String)>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>
<android.app.EnterTransitionCoordinator: void prepareEnter()>
<android.os.storage.IStorageManager: long lastMaintenance()>
<android.inputmethodservice.IInputMethodSessionWrapper: void executeMessage(android.os.Message)>
<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.webkit.Plugin.DefaultClickHandler: void onClick(android.content.DialogInterface,int)>
<android.widget.ExpandableListConnector.GroupMetadata: int compareTo(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.hardware.radio.Utils: void close(android.hardware.radio.ICloseHandle)>
<android.os.IStatsManager: void informOnePackageRemoved(java.lang.String,int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setSelectedWeekBackgroundColor(int)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createSLong(int,java.nio.ByteOrder)>
<android.view.ViewGroup.HoverTarget: android.view.ViewGroup.HoverTarget obtain(android.view.View)>
<android.widget.CalendarViewMaterialDelegate: void setMaxDate(long)>
<android.widget.PopupWindow.PopupDecorView: void startExitTransition(android.transition.Transition,android.view.View,android.graphics.Rect,android.transition.Transition.TransitionListener)>
<android.bluetooth.le.IScannerCallback: void onScannerRegistered(int,int)>
<android.net.Uri.OpaqueUri: boolean isHierarchical()>
<android.os.Handler.MessengerImpl: void send(android.os.Message)>
<android.bluetooth.IBluetoothHeadsetClient: boolean sendDTMF(android.bluetooth.BluetoothDevice,byte)>
<android.util.Base64.Encoder: void <init>(int,byte[])>
<android.apex.IApexService: boolean stagePackages(java.util.List)>
<android.view.DisplayCutout.Bounds: boolean equals(java.lang.Object)>
<android.util.Log.ImmediateLogWriter: void <init>(int,int,java.lang.String)>
<android.media.Cea708CCWidget.ScaledLayout.ScaledLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.ExifInterface.ByteOrderedDataInputStream: void seek(long)>
<android.net.DnsResolver.InetAddressAnswerAccumulator: void onAnswer(java.lang.Object,int)>
<android.content.pm.IPackageManager: void querySyncProviders(java.util.List,java.util.List)>
<android.app.ActivityThread.CreateServiceData: java.lang.String toString()>
<android.bluetooth.IBluetoothHeadset: boolean getAudioRouteAllowed()>
<android.util.apk.WrappedX509Certificate: java.security.PublicKey getPublicKey()>
<android.widget.SmartSelectSprite.RectangleWithTextSelectionLayout: android.graphics.RectF getRectangle()>
<android.net.lowpan.ILowpanInterface: void addExternalRoute(android.net.IpPrefix,int)>
<android.app.admin.IDevicePolicyManager: boolean isProfileActivePasswordSufficientForParent(int)>
<android.view.ViewGroup.ChildListForAccessibility: int getChildCount()>
<android.widget.SelectionActionModeHelper.TextClassificationHelper: int getTimeoutDuration()>
<android.widget.AbsListView.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>
<android.opengl.GLLogWrapper: void glClipPlanex(int,int[],int)>
<android.text.Layout.SpannedEllipsizer: java.lang.CharSequence subSequence(int,int)>
<android.media.ExifInterface.ByteOrderedDataOutputStream: void writeUnsignedInt(long)>
<android.apex.IApexService: android.apex.ApexInfo[] getAllPackages()>
<android.widget.TimePicker.AbstractTimePickerDelegate: void setAutoFillChangeListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.widget.Filter.ResultsHandler: void handleMessage(android.os.Message)>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.view.IWindowSession: void updatePointerIcon(android.view.IWindow)>
<android.apex.ApexInfoList: void readFromParcel(android.os.Parcel)>
<android.widget.ScrollView.SavedState: void <init>(android.os.Parcel)>
<android.net.lowpan.ILowpanInterface: byte[] getExtendedAddress()>
<android.widget.DatePickerCalendarDelegate: android.icu.util.Calendar getMinDate()>
<android.media.ExifInterface.Rational: double calculate()>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void onPopulateNodeForVirtualView(int,android.view.accessibility.AccessibilityNodeInfo)>
<android.app.admin.IDevicePolicyManager: boolean installExistingPackage(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.media.MediaFormat.FilteredMappedKeySet.KeyIterator: void <init>(android.media.MediaFormat.FilteredMappedKeySet)>
<android.app.IActivityManager: boolean shutdown(int)>
<android.opengl.GLErrorWrapper: void glFogfv(int,float[],int)>
<android.opengl.GLErrorWrapper: void glDepthRangex(int,int)>
<android.app.ContextImpl: java.io.File getObbDir()>
<android.speech.tts.AudioPlaybackHandler: void start()>
<android.app.ActivityTransitionCoordinator: boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup)>
<android.app.IWallpaperManager: void setInAmbientMode(boolean,long)>
<android.widget.RemoteViews.TextViewSizeAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.accounts.AccountManager.BaseFutureTask.Response: void onError(int,java.lang.String)>
<android.opengl.GLErrorWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.app.IActivityManager: void killUid(int,int,java.lang.String)>
<android.widget.RemoteViews.BitmapReflectionAction: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>
<android.os.storage.IStorageManager: com.android.internal.os.AppFuseMount mountProxyFileDescriptorBridge()>
<android.sysprop.CryptoProperties.type_values: android.sysprop.CryptoProperties.type_values valueOf(java.lang.String)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: long getMinDate()>
<android.app.admin.SecurityLogTags: void writeSecurityMaxScreenLockTimeoutSet(java.lang.String,int,int,long)>
<android.provider.Settings.GenerationTracker: boolean isGenerationChanged()>
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateSelection(int,int,int,int,int,int)>
<android.view.ViewRootImpl.W: void dispatchAppVisibility(boolean)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,java.lang.String,int,int)>
<android.graphics.drawable.RippleComponent: void getBounds(android.graphics.Rect)>
<android.app.admin.IDevicePolicyManager: boolean isMeteredDataDisabledPackageForUser(android.content.ComponentName,java.lang.String,int)>
<android.bluetooth.IBluetoothPbap: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(java.nio.ByteBuffer)>
<android.widget.DayPickerViewPager: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.CursorAdapter.MyDataSetObserver: void onInvalidated()>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onMessageWaitingIndicatorChanged(boolean)>
<android.app.IWallpaperManager: boolean hasNamedWallpaper(java.lang.String)>
<android.os.IStatsManager: void systemRunning()>
<android.content.pm.IPackageManager: java.lang.String[] getUnsuspendablePackagesForUser(java.lang.String[],int)>
<android.gamedriver.GameDriverProto.Blacklists: java.util.List getBlacklistsOrBuilderList()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.view.IWindowManager: boolean destroyInputConsumer(java.lang.String,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void resetAll()>
<android.app.ITaskStackListener: void onTaskRemovalStarted(android.app.ActivityManager.RunningTaskInfo)>
<android.widget.Editor.SelectionModifierCursorController: void invalidateHandles()>
<android.sysprop.CarProperties: void headless_system_user(java.lang.Boolean)>
<android.net.DnsResolver.InetAddressAnswerAccumulator: void onError(android.net.DnsResolver.DnsException)>
<android.preference.PreferenceScreen.SavedState: void <init>(android.os.Parcelable)>
<android.os.IInstalld: boolean mergeProfiles(int,java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothSap: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.opengl.GLErrorWrapper: void glStencilOp(int,int,int)>
<android.app.Notification.StandardTemplateParams: android.app.Notification.StandardTemplateParams disallowColorization()>
<android.widget.DayPickerPagerAdapter: int getFirstDayOfWeek()>
<android.permission.PermissionControllerManager.FileWriterTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.bluetooth.IBluetoothHidDevice: java.lang.String getUserAppName()>
<android.net.Uri.AbstractPart: java.lang.String getEncoded()>
<android.media.Cea608CCParser.CCData: java.lang.String toString()>
<android.os.IVold: void checkEncryption(java.lang.String)>
<android.content.res.XmlBlock.Parser: java.lang.String getPrefix()>
<android.util.MapCollections.EntrySet: boolean isEmpty()>
<android.widget.ExpandableListConnector.GroupMetadata: int describeContents()>
<android.util.apk.WrappedX509Certificate: boolean[] getKeyUsage()>
<android.content.pm.IPackageManager: java.lang.String[] getNamesForUids(int[])>
<android.location.ILocationManager: boolean isProviderPackage(java.lang.String)>
<android.security.KeyStore.State: android.security.KeyStore.State valueOf(java.lang.String)>
<android.bluetooth.IBluetooth: boolean setScanMode(int,int)>
<android.bluetooth.IBluetoothGatt: void registerScanner(android.bluetooth.le.IScannerCallback,android.os.WorkSource)>
<android.stats.mediametrics.Mediametrics.NuPlayerData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(java.io.InputStream)>
<android.os.IVold: void abortIdleMaint(android.os.IVoldTaskListener)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getDeviceOwnerLockScreenInfo()>
<android.location.GnssNavigationMessageCallbackTransport.ListenerTransport: void onStatusChanged(int)>
<android.app.IActivityManager: boolean startUserInBackground(int)>
<android.view.ViewDebug.ExportedProperty: boolean deepExport()>
<android.opengl.GLLogWrapper: void glGetFixedv(int,java.nio.IntBuffer)>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<android.opengl.GLLogWrapper: void glFogfv(int,java.nio.FloatBuffer)>
<android.app.ActivityThread.ProviderKey: boolean equals(java.lang.Object)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: byte[] engineSign()>
<android.text.format.TimeFormatter: java.lang.String format(java.lang.String,libcore.util.ZoneInfo.WallTime,libcore.util.ZoneInfo)>
<android.os.IIncidentAuthListener: void onReportApproved()>
<android.app.IActivityManager: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<android.mtp.MtpPropertyList: void append(int,int,int,long)>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.preference.SeekBarVolumizer.Receiver: void onReceive(android.content.Context,android.content.Intent)>
<android.text.HtmlToSpannedConverter.Alignment: void <init>(android.text.Layout.Alignment)>
<android.animation.PathKeyframes.IntKeyframesBase: java.lang.Object getValue(float)>
<android.widget.DayPickerView: long getMaxDate()>
<android.os.SharedMemory.MemoryRegistration: void release()>
<android.service.pm.PackageServiceDumpProto.SharedLibraryProto: void <init>(android.service.pm.PackageServiceDumpProto)>
<android.widget.ViewAnimator.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getHost()>
<android.os.SystemPropertiesProto.Ro.Config: void <init>(android.os.SystemPropertiesProto.Ro)>
<android.app.WallpaperManager.FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.os.storage.IStorageManager: boolean isConvertibleToFBE()>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(int,int,int,int)>
<android.view.IWindowManager: void registerPinnedStackListener(int,android.view.IPinnedStackListener)>
<android.inputmethodservice.KeyboardView.SwipeTracker: void addMovement(android.view.MotionEvent)>
<android.media.ImageReader.SurfaceImage: void <init>(android.media.ImageReader,int)>
<android.app.admin.SecurityLogTags: void writeSecurityMediaMounted(java.lang.String,java.lang.String)>
<android.view.IWindowManager: void startWindowTrace()>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,int[],int)>
<android.content.pm.IPackageManager: void checkPackageStartable(java.lang.String,int)>
<android.content.pm.IPackageManager: android.os.PersistableBundle getSuspendedPackageAppExtras(java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glFogfv(int,java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.animation.PropertyValuesHolder.PointFToIntArray: int[] convert(android.graphics.PointF)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.KeyEventCallbackAdaptor: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.hardware.ICameraService: int getNumberOfCameras(int)>
<android.view.View.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.location.ILocationManager: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<android.accounts.AccountManager.BaseFutureTask: void doWork()>
<android.view.ViewRootImpl.EarlyPostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,int)>
<android.widget.DayPickerView: void <init>(android.content.Context)>
<android.media.Cea708CCWidget.CCWindowLayout: void hide()>
<android.widget.RemoteViews.ViewTree: void addChild(android.widget.RemoteViews.ViewTree)>
<android.bluetooth.IBluetoothHidDevice: boolean registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.IBluetoothHidDeviceCallback)>
<android.media.WebVttRenderingWidget.CueLayout: boolean isActive()>
<android.permission.PermissionControllerManager.FileReaderTask: void onPreExecute()>
<android.os.IVold: void startCheckpoint(int)>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc valueOf(java.lang.String)>
<android.gsi.GsiProgress: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityThread.ApplicationThread: void runIsolatedEntryPoint(java.lang.String,java.lang.String[])>
<android.opengl.GLLogWrapper: void glRotatef(float,float,float,float)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: android.widget.ActivityChooserModel getDataModel()>
<android.app.IActivityManager: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>
<android.widget.SimpleMonthView: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.app.IActivityManager: boolean isBackgroundRestricted(java.lang.String)>
<android.widget.TextView.ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.widget.Editor.TextActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.os.EventLogTags: void writeServiceManagerStats(int,int,int)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineInitVerify(java.security.PublicKey)>
<android.widget.ListPopupWindow.PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>
<android.opengl.GLLogWrapper: void glMultMatrixx(java.nio.IntBuffer)>
<android.util.ReflectiveProperty: void <init>(java.lang.Class,java.lang.Class,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean isDeviceProvisioningConfigApplied()>
<android.opengl.GLLogWrapper: void glClearColorx(int,int,int,int)>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(android.graphics.Rect)>
<android.telecom.InCallService.InCallServiceBinder: void onRttInitiationFailure(java.lang.String,int)>
<android.app.IActivityManager: void noteAlarmStart(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result valueOf(java.lang.String)>
<android.bluetooth.IBluetoothGattCallback: void onPhyRead(java.lang.String,int,int,int)>
<android.content.pm.IPackageManager: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,boolean)>
<android.widget.SmartSelectSprite: void cancelAnimation()>
<android.util.Base64.Decoder: void <init>(int,byte[])>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void notifyOnRemoteViewsLoaded(int,android.widget.RemoteViews)>
<android.media.Utils: android.util.Range alignRange(android.util.Range,int)>
<android.net.LocalSocketImpl.SocketOutputStream: void flush()>
<android.inputmethodservice.IInputMethodSessionWrapper: void notifyImeHidden()>
<android.widget.RemoteViews.SetDrawableTint: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLLogWrapper: void glLightModelxv(int,int[],int)>
<android.app.LoaderManagerImpl.LoaderInfo: void <init>(android.app.LoaderManagerImpl,int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.view.inspector.InspectableProperty.EnumEntry: java.lang.String name()>
<android.app.ActivityTransitionCoordinator: void stripOffscreenViews()>
<android.animation.AnimationHandler.MyFrameCallbackProvider: long getFrameTime()>
<android.opengl.GLErrorWrapper: void glMultMatrixf(java.nio.FloatBuffer)>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedInputMethodsForCurrentUser()>
<android.opengl.GLLogWrapper: void glFogfv(int,float[],int)>
<android.bluetooth.IBluetoothGatt: void enableAdvertisingSet(int,boolean,int,int)>
<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)>
<android.preference.PreferenceScreen.SavedState: void <init>(android.os.Parcel)>
<android.location.LocationManager.GnssStatusListenerTransport: void onGnssStopped()>
<android.widget.Magnifier.InternalPopupWindow: void setContentPositionForNextDraw(int,int)>
<android.hardware.SystemSensorManager.SensorEventQueue: void dispatchAdditionalInfoEvent(int,int,int,float[],int[])>
<android.os.IInstalld: void linkFile(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.GridLayout.Bounds: void include(int,int)>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void cancel(android.view.MotionEvent)>
<android.hardware.input.IInputManager: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>
<android.content.pm.IPackageManager: int getRuntimePermissionsVersion(int)>
<android.bluetooth.IBluetoothManager: boolean isBleScanAlwaysAvailable()>
<android.app.EnterTransitionCoordinator: boolean isWaitingForRemoteExit()>
<android.app.IWallpaperManager: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>
<android.app.ExitTransitionCoordinator: void onReceiveResult(int,android.os.Bundle)>
<android.view.LayoutInflater.BlinkLayout: void onAttachedToWindow()>
<android.providers.settings.SystemSettingsProto.Alarm: void <init>(android.providers.settings.SystemSettingsProto)>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,int[],int)>
<android.bluetooth.le.IScannerCallback: void onScanResult(android.bluetooth.le.ScanResult)>
<android.bluetooth.IBluetoothGatt: void discoverServiceByUuid(int,java.lang.String,android.os.ParcelUuid)>
<android.app.LoadedApk.ReceiverDispatcher.Args: void <init>(android.app.LoadedApk.ReceiverDispatcher,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.bluetooth.IBluetoothGatt: void unregisterClient(int)>
<android.security.IKeyChainService: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)>
<android.security.KeyStore.KeyCharacteristicsCallbackResult: void setKeystoreResponse(android.security.keystore.KeystoreResponse)>
<android.inputmethodservice.KeyboardView.SwipeTracker: float getXVelocity()>
<android.widget.TabHost.FactoryContentStrategy: void tabClosed()>
<android.app.ActivityThread.ApplicationThread: void updateHttpProxy()>
<android.graphics.ImageDecoder.FileSource: android.graphics.ImageDecoder createImageDecoder()>
<android.security.KeyStore.KeyCharacteristicsCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>
<android.app.admin.IDevicePolicyManager: boolean resetPassword(java.lang.String,int)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onNetwork()>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: android.widget.RemoteViewsAdapter.LoadingViewTemplate getLoadingTemplate(android.content.Context)>
<android.os.UidProto.Process: void <init>(android.os.UidProto)>
<android.content.ContentProvider.Transport: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>
<android.opengl.GLLogWrapper: void glDisable(int)>
<android.util.MapCollections: java.util.Collection getValues()>
<android.mtp.MtpPropertyList: void append(int,int,java.lang.String)>
<android.opengl.GLLogWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int,android.os.IBinder)>
<android.app.ActivityTransitionCoordinator: void removeExcludedViews(android.transition.Transition,java.util.ArrayList)>
<android.media.SoundPool.EventHandler: void handleMessage(android.os.Message)>
<android.app.ContextImpl: java.lang.String getPackageName()>
<android.app.admin.IDevicePolicyManager: void wipeDataWithReason(int,java.lang.String)>
<android.app.EnterTransitionCoordinator: java.util.ArrayList getPendingExitSharedElementNames()>
<android.widget.RemoteViews.ViewGroupActionAdd: boolean prefersAsyncApply()>
<android.widget.Editor.CorrectionHighlighter: void draw(android.graphics.Canvas,int)>
<android.opengl.GLLogWrapper: void glGenerateMipmapOES(int)>
<android.widget.GridLayout.Axis: android.widget.GridLayout.PackedMap getGroupBounds()>
<android.security.keymaster.KeymasterBooleanArgument: void <init>(int,android.os.Parcel)>
<android.permission.PermissionControllerManager.PendingGetAppPermissionRequest: void run()>
<android.opengl.GLLogWrapper: void glGenBuffers(int,java.nio.IntBuffer)>
<android.bluetooth.IBluetoothHearingAid: java.util.List getActiveDevices()>
<android.app.admin.IDevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int,boolean)>
<android.webkit.WebSettings.ZoomDensity: int getValue()>
<android.hardware.ICameraServiceListener: void onStatusChanged(int,java.lang.String)>
<android.app.Instrumentation.SyncRunnable: void run()>
<android.graphics.drawable.RippleForeground: void end()>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,boolean[],int)>
<android.gsi.IGsiService: int beginGsiInstall(android.gsi.GsiInstallParams)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],java.lang.String,java.lang.String,int)>
<android.bluetooth.IBluetoothGatt: void flushPendingBatchResults(int)>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: int getLineEdgeIndex(int,int)>
<android.speech.tts.AbstractEventLogger: void onCompleted(int)>
<android.app.Notification.BuilderRemoteViews: android.widget.RemoteViews clone()>
<android.app.IActivityManager: void resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.filterfw.GraphEnvironment.GraphHandle: void <init>(android.filterfw.GraphEnvironment,android.filterfw.core.FilterGraph)>
<android.widget.AbsListView.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(byte[],com.android.framework.protobuf.ExtensionRegistryLite)>
<android.app.ContextImpl: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.net.lowpan.ILowpanInterface: void addListener(android.net.lowpan.ILowpanInterfaceListener)>
<android.util.apk.ZipUtils: long getZipEocdCentralDirectoryOffset(java.nio.ByteBuffer)>
<android.app.admin.SecurityLogTags: void writeSecurityAppProcessStart(java.lang.String,long,int,int,java.lang.String,java.lang.String)>
<android.os.CpuInfoProto.CpuUsage: void <init>(android.os.CpuInfoProto)>
<android.app.ContextImpl: java.util.concurrent.Executor getMainExecutor()>
<android.app.admin.IDevicePolicyManager: int getGlobalPrivateDnsMode(android.content.ComponentName)>
<android.app.admin.IDevicePolicyManager: java.util.List retrieveNetworkLogs(android.content.ComponentName,java.lang.String,long)>
<android.widget.AbsListView.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.os.CpuFreqProto.Stats: void <init>(android.os.CpuFreqProto)>
<android.widget.DayPickerPagerAdapter: void setFirstDayOfWeek(int)>
<android.opengl.GLLogWrapper: void glLineWidth(float)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.InputMethodSessionImpl: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.preference.MultiCheckPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.RemoteViews.ViewContentNavigation: int getActionTag()>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int)>
<android.widget.Editor.PinnedPopupWindow: int clipVertically(int)>
<android.content.pm.IPackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>
<android.widget.RemoteViews.RemoteViewsContextWrapper: android.content.res.Resources.Theme getTheme()>
<android.app.Notification.BuilderRemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>
<android.view.IWindowManager: void setResizeDimLayer(boolean,int,float)>
<android.opengl.GLErrorWrapper: void glBindTexture(int,int)>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: android.graphics.Rect onGetEpicenter(android.transition.Transition)>
<android.bluetooth.IBluetoothMapClient: boolean connect(android.bluetooth.BluetoothDevice)>
<android.widget.TextView.Drawables: boolean hasMetadata()>
<android.view.ViewGroup.ChildListForAccessibility: void recycle()>
<android.app.IActivityManager: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>
<android.security.keymaster.KeymasterDateArgument: void <init>(int,android.os.Parcel)>
<android.os.IVoldListener: void onDiskMetadataChanged(java.lang.String,long,java.lang.String,java.lang.String)>
<android.location.ILocationManager: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties,java.lang.String)>
<android.content.pm.IPackageManager: void updatePackagesIfNeeded()>
<android.text.Layout.SpannedEllipsizer: int nextSpanTransition(int,int,java.lang.Class)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<android.bluetooth.IBluetooth: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.media.SubtitleTrack.CueList.EntryIterator: java.lang.Object next()>
<android.widget.DatePickerCalendarDelegate: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.hardware.usb.IUsbManager: boolean isFunctionEnabled(java.lang.String)>
<android.opengl.GLSurfaceView.GLThread: void setRenderMode(int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getUnfocusedMonthDateColor()>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void removeView(android.view.View)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],java.lang.String,int)>
<android.app.IActivityManager: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.ParcelableCrashInfo)>
<android.opengl.GLErrorWrapper: void glTexParameteri(int,int,int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean rejectCall(android.bluetooth.BluetoothDevice)>
<android.os.ProcrankProto.Process: void <init>(android.os.ProcrankProto)>
<android.widget.TabHost.ViewIndicatorStrategy: android.view.View createIndicatorView()>
<android.app.Instrumentation.ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation.ActivityWaiter)>
<android.view.IWindowManager: void showStrictModeViolation(boolean)>
<android.view.ViewRootImpl.W: void dispatchWallpaperOffsets(float,float,float,float,boolean)>
<android.os.IVold: void commitChanges()>
<com.android.internal.annotations.VisibleForTesting.Visibility: com.android.internal.annotations.VisibleForTesting.Visibility valueOf(java.lang.String)>
<android.media.MediaScanner.FileEntry: java.lang.String toString()>
<android.app.SystemServiceRegistry.StaticApplicationContextServiceFetcher: java.lang.Object createService(android.content.Context)>
<android.widget.ProgressBar.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.location.ILocationManager: java.util.List getTestProviderCurrentRequests(java.lang.String,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean isLogoutEnabled()>
<android.hardware.camera2.ICameraDeviceUser: void waitUntilIdle()>
<android.bluetooth.IBluetoothHeadsetPhone: boolean queryPhoneState()>
<android.os.IVold: void fdeEnable(int,java.lang.String,int)>
<android.os.SystemProto.BatteryDischarge: void <init>(android.os.SystemProto)>
<android.content.res.StringBlock.Height: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt,android.text.TextPaint)>
<android.providers.settings.SecureSettingsProto.Accessibility: void <init>(android.providers.settings.SecureSettingsProto)>
<android.view.ViewDebug.PictureCallbackHandler: void onPictureCaptured(android.graphics.Picture)>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onConfigurationChanged(android.content.res.Configuration)>
<android.mtp.MtpStorageManager.MtpObjectObserver: void finalize()>
<android.os.IVold: void setListener(android.os.IVoldListener)>
<android.hardware.radio.TunerAdapter: void tune(android.hardware.radio.ProgramSelector)>
<android.media.Cea708CCWidget.CCWindowLayout: void setPenColor(android.media.Cea708CCParser.CaptionPenColor)>
<android.media.MediaScanner.MyMediaScannerClient: void <init>(android.media.MediaScanner)>
<android.os.IInstalld: void freeCache(java.lang.String,long,long,int)>
<android.media.ImageReader.SurfaceImage: android.hardware.HardwareBuffer getHardwareBuffer()>
<android.media.ThumbnailUtils.Resizer: void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder.ImageInfo,android.graphics.ImageDecoder.Source)>
<android.widget.GridLayout.Bounds: void reset()>
<android.view.IWindowManager: void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>
<android.content.res.XmlBlock.Parser: int getEventType()>
<android.webkit.EventLogTags: void writeBrowserZoomLevelChange(int,int,long)>
<android.content.pm.IPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>
<android.bluetooth.BluetoothHidDevice.CallbackWrapper: void onVirtualCableUnplug(android.bluetooth.BluetoothDevice)>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(int[],int,int[],int)>
<android.app.ContextImpl: android.view.Display getDisplay()>
<android.bluetooth.IBluetoothHidDevice: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.view.AccessibilityIterators.WordTextSegmentIterator: int[] following(int)>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean unlinkToDeath(android.os.IBinder.DeathRecipient)>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean isReadOnly()>
<android.bluetooth.IBluetoothGatt: void writeDescriptor(int,java.lang.String,int,int,byte[])>
<android.app.IntentService.ServiceHandler: void <init>(android.app.IntentService,android.os.Looper)>
<android.opengl.GLErrorWrapper: boolean glIsBuffer(int)>
<android.opengl.GLLogWrapper: void glClipPlanef(int,float[],int)>
<android.app.IActivityManager: void setAgentApp(java.lang.String,java.lang.String)>
<android.app.Activity.HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int,int)>
<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>
<android.widget.CalendarViewLegacyDelegate: int getShownWeekCount()>
<android.hardware.usb.IUsbManager: void setCurrentFunction(java.lang.String,boolean)>
<android.os.IInstalld: void clearAppData(java.lang.String,java.lang.String,int,int,long)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.providers.settings.GlobalSettingsProto.GlobalHttpProxy: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.graphics.Path.Direction: android.graphics.Path.Direction[] values()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: long getProducedOutputSizeBytes()>
<android.app.IActivityManager: boolean isVrModePackageEnabled(android.content.ComponentName)>
<android.media.ImageReader.SurfaceImage: android.media.ImageReader getReader()>
<android.util.StatsLogInternal: int write(int,java.lang.String,boolean)>
<android.media.Cea608CCParser.StyleCode: java.lang.String toString()>
<android.bluetooth.IBluetoothManager: boolean isHearingAidProfileSupported()>
<android.view.ViewRootImpl.ConsumeBatchedInputImmediatelyRunnable: void run()>
<android.net.lowpan.ILowpanManager: void addListener(android.net.lowpan.ILowpanManagerListener)>
<android.opengl.GLLogWrapper: void glPushMatrix()>
<android.net.Uri.StringUri: java.lang.String getEncodedQuery()>
<android.providers.settings.SecureSettingsProto.Notification: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.RemoteViews.RuntimeAction: int getActionTag()>
<android.os.CpuInfoProto.Task: void <init>(android.os.CpuInfoProto)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createByte(java.lang.String)>
<android.util.apk.WrappedX509Certificate: boolean[] getSubjectUniqueID()>
<android.animation.StateListAnimator.StateListAnimatorConstantState: void <init>(android.animation.StateListAnimator)>
<android.hardware.input.IInputManager: void requestPointerCapture(android.os.IBinder,boolean)>
<android.widget.ActionMenuPresenter.OverflowPopup: void <init>(android.widget.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationUpdate(android.animation.ValueAnimator)>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,int[],int)>
<android.content.pm.IPackageManager: boolean performDexOptSecondary(java.lang.String,java.lang.String,boolean)>
<android.app.IActivityManager: android.app.ActivityManager.TaskSnapshot getTaskSnapshot(int,boolean)>
<android.transition.TransitionSet.TransitionSetListener: void onTransitionStart(android.transition.Transition)>
<android.widget.RemoteViews.TextViewSizeAction: int getActionTag()>
<android.bluetooth.IBluetoothGatt: void clientSetPreferredPhy(int,java.lang.String,int,int,int)>
<android.security.keymaster.KeymasterIntArgument: void <init>(int,int)>
<android.net.lowpan.ILowpanManager: void removeListener(android.net.lowpan.ILowpanManagerListener)>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: void reset()>
<android.util.jar.StrictJarManifestReader: void readEntries(java.util.Map,java.util.Map)>
<android.location.ILocationManager: java.lang.String getExtraLocationControllerPackage()>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(int[],int)>
<android.app.admin.IDevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<android.widget.SelectionActionModeHelper.SelectionMetricsLogger: void logSelectionAction(int,int,int,java.lang.String,android.view.textclassifier.TextClassification)>
<android.content.IntentSender.FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.app.ContextImpl: java.lang.String[] fileList()>
<android.speech.RecognitionService.RecognitionServiceBinder: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
<android.bluetooth.IBluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>
<android.security.keystore.Utils: byte[] cloneIfNotNull(byte[])>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config valueOf(java.lang.String)>
<android.os.storage.IStorageManager: void setDebugFlags(int,int)>
<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<android.speech.tts.EventLogTags: void writeTtsSpeakFailure(java.lang.String,int,int,int,java.lang.String,int,int)>
<android.app.admin.IDevicePolicyManager: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<android.view.HandlerActionQueue.HandlerAction: boolean matches(java.lang.Runnable)>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getLastPathSegment()>
<android.opengl.GLLogWrapper: void glViewport(int,int,int,int)>
<android.widget.YearPickerView: void setYear(int)>
<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor getControlFd(long)>
<android.hardware.usb.IUsbManager: void getDeviceList(android.os.Bundle)>
<android.os.CpuInfoProto.MemStats: void <init>(android.os.CpuInfoProto)>
<android.view.inspector.InspectableProperty.FlagEntry: int mask()>
<android.view.ViewRootImpl.SyntheticKeyboardHandler: void process(android.view.KeyEvent)>
<android.opengl.GLErrorWrapper: void glLineWidthx(int)>
<android.drm.DrmManagerClient.EventHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>
<android.bluetooth.IBluetoothManager: boolean bindBluetoothProfileService(int,android.bluetooth.IBluetoothProfileServiceConnection)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Void)>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchAccessibilityNodeInfos(android.view.View,int,int,java.util.List,android.os.Bundle)>
<android.app.ActivityThread.ApplicationThread: void scheduleSuicide()>
<android.media.Tokenizer.DataTokenizer: void tokenize()>
<android.bluetooth.le.BluetoothLeUtils: java.lang.String toString(android.util.SparseArray)>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value valueOf(java.lang.String)>
<android.widget.SimpleMonthView: int getMonthHeight()>
<android.os.SystemPropertiesProto.Log: void <init>(android.os.SystemPropertiesProto)>
<android.widget.Editor.SuggestionsPopupWindow.CustomPopupWindow: void dismiss()>
<android.renderscript.RenderScript.MessageThread: void run()>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: void glClipPlanex(int,java.nio.IntBuffer)>
<android.app.SharedPreferencesImpl: java.io.File makeBackupFile(java.io.File)>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(float[],int)>
<android.util.StatsLogInternal: int write(int,int,int,int,int)>
<android.os.SystemProto.WifiMulticastWakelockTotal: void <init>(android.os.SystemProto)>
<android.widget.GridLayout.Alignment: int getGravityOffset(android.view.View,int)>
<android.bluetooth.IBluetoothMapClient: boolean getUnreadMessages(android.bluetooth.BluetoothDevice)>
<android.opengl.GLSurfaceView.GLThread: void surfaceCreated()>
<android.media.ImageReader.SurfaceImage: long getTimestamp()>
<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: long getConsumedInputSizeBytes()>
<android.app.admin.SecurityLogTags: void writeSecurityRemoteLock(java.lang.String,int,int)>
<android.app.BackStackRecord: int getId()>
<android.widget.Gallery.FlingRunnable: void startUsingDistance(int)>
<android.app.admin.SecurityLogTags: void writeSecurityPasswordComplexitySet(java.lang.String,int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void process(android.view.MotionEvent)>
<android.widget.RemoteViews.SetEmptyView: int getActionTag()>
<android.location.GnssMeasurementCallbackTransport.ListenerTransport: void onGnssMeasurementsReceived(android.location.GnssMeasurementsEvent)>
<android.content.ContentProvider.Transport: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],android.os.Bundle,android.os.ICancellationSignal)>
<android.os.IProcessInfoService: void getProcessStatesAndOomScoresFromPids(int[],int[],int[])>
<android.accounts.AccountManager.BaseFutureTask.Response: void onResult(android.os.Bundle)>
<android.app.admin.IDevicePolicyManager: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)>
<android.media.MediaRouter.Static.Client: void onSelectedRouteChanged(java.lang.String)>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,int)>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.opengl.GLLogWrapper: void glScalex(int,int,int)>
<android.os.SystemPropertiesProto.Sys: void <init>(android.os.SystemPropertiesProto)>
<android.app.ActivityThread.ApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle,java.lang.String,android.content.AutofillOptions,android.content.ContentCaptureOptions)>
<android.opengl.GLErrorWrapper: void glClearColor(float,float,float,float)>
<android.app.EnterTransitionCoordinator: void <init>(android.app.Activity,android.os.ResultReceiver,java.util.ArrayList,boolean,boolean)>
<android.widget.PopupWindow.PopupDecorView: void requestKeyboardShortcuts(java.util.List,int)>
<android.media.MediaCas.EventHandler: void handleMessage(android.os.Message)>
<android.preference.SeekBarPreference.SavedState: void <init>(android.os.Parcelable)>
<android.widget.NumberPicker.InputTextFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.app.ContextImpl: void startActivities(android.content.Intent[])>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,int,long)>
<android.bluetooth.IBluetoothHeadsetClient: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.renderscript.Program.ProgramParam: android.renderscript.Program.ProgramParam valueOf(java.lang.String)>
<android.widget.Editor.PinnedPopupWindow: void show()>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>
<android.bluetooth.IBluetooth: android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()>
<android.widget.ImageView.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.widget.TimePickerClockDelegate: android.view.View getHourView()>
<android.util.StatsLogInternal: int write(int,int,int,float)>
<android.content.pm.IPackageManager: boolean setBlockUninstallForUser(java.lang.String,boolean,int)>
<android.bluetooth.IBluetoothMap: android.bluetooth.BluetoothDevice getClient()>
<android.net.lowpan.ILowpanInterface: void onHostWake()>
<android.telecom.RemoteConnection.CallbackRecord: android.os.Handler getHandler()>
<android.app.ActivityThread.BindServiceData: java.lang.String toString()>
<android.transition.Fade.FadeAnimatorListener: void onAnimationEnd(android.animation.Animator)>
<android.util.XmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void resetAll()>
<android.view.ViewRootImpl.W: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
<android.transition.Slide.CalculateSlideVertical: float getGoneX(android.view.ViewGroup,android.view.View,float)>
<android.net.Uri.StringUri: java.lang.String parseAuthority(java.lang.String,int)>
<android.inputmethodservice.InputMethodService.SettingsObserver: android.inputmethodservice.InputMethodService.SettingsObserver createAndRegister(android.inputmethodservice.InputMethodService)>
<android.sysprop.ContactsProperties: java.util.Optional display_photo_size()>
<android.security.IKeyChainService: byte[] getCaCertificates(java.lang.String)>
<android.bluetooth.IBluetoothMapClient: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.bluetooth.IBluetoothHeadsetPhone: java.lang.String getNetworkOperator()>
<android.app.IActivityManager: boolean switchUser(int)>
<android.transition.TransitionManager.MultiListener: void onViewDetachedFromWindow(android.view.View)>
<android.location.BatchedLocationCallbackTransport: void <init>(android.content.Context,android.location.ILocationManager)>
<android.sysprop.CarProperties: java.util.Optional trusted_device_device_name_prefix()>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.app.ContextImpl: java.io.File getNoBackupFilesDir()>
<android.util.StatsLogInternal: int write(int,int,int,java.lang.String)>
<android.widget.TextView.CharWrapper: int length()>
<android.net.INetdEventCallback: void onDnsEvent(int,int,int,java.lang.String,java.lang.String[],int,long,int)>
<android.security.KeyStore.KeyAttestationCallbackResult: android.security.keystore.KeystoreResponse getKeystoreResponse()>
<android.content.res.DrawableCache: boolean shouldInvalidateEntry(java.lang.Object,int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void resetWhilePreservingInitState()>
<android.sysprop.CarProperties: java.util.Optional headless_system_user()>
<android.opengl.GLErrorWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.Editor.CursorController: void hide()>
<android.os.KernelWakeSourcesProto.WakeupSource: void <init>(android.os.KernelWakeSourcesProto)>
<android.opengl.GLErrorWrapper: void glFrontFace(int)>
<android.widget.CheckedTextView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.IDevicePolicyManager: java.util.List getOverrideApns(android.content.ComponentName)>
<android.bluetooth.IBluetoothHidHost: boolean virtualUnplug(android.bluetooth.BluetoothDevice)>
<android.widget.FrameLayout.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.os.AsyncTask.SerialExecutor: void execute(java.lang.Runnable)>
<android.app.WallpaperManager.FastBitmapDrawable: int getIntrinsicHeight()>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc[] values()>
<android.security.keymaster.KeymasterArgument: void writeValue(android.os.Parcel)>
<android.bluetooth.IBluetooth: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>
<android.app.admin.IDevicePolicyManager: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: android.widget.AccessibilityIterators.LineTextSegmentIterator getInstance()>
<android.speech.SpeechRecognizer.Connection: void onServiceDisconnected(android.content.ComponentName)>
<android.inputmethodservice.IInputMethodSessionWrapper: void viewClicked(boolean)>
<android.app.ActivityThread.AppBindData: java.lang.String toString()>
<android.media.MediaActionSound.SoundState: void <init>(android.media.MediaActionSound,int)>
<android.opengl.GLLogWrapper: void glDepthFunc(int)>
<android.opengl.GLLogWrapper.PointerInfo: void bindByteBuffer()>
<android.app.ITaskStackListener: void onBackPressedOnTaskRoot(android.app.ActivityManager.RunningTaskInfo)>
<android.app.ActivityTransitionCoordinator: void notifySharedElementEnd(java.util.ArrayList)>
<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)>
<android.sysprop.CryptoProperties.state_values: android.sysprop.CryptoProperties.state_values[] values()>
<android.content.res.XmlBlock.Parser: java.lang.String getName()>
<android.opengl.GLErrorWrapper: void glDepthMask(boolean)>
<android.widget.SelectionActionModeHelper.SelectionMetricsLogger: boolean isEditTextLogger()>
<android.widget.GridLayout.Arc: void <init>(android.widget.GridLayout.Interval,android.widget.GridLayout.MutableInt)>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void onChange(boolean,android.net.Uri)>
<android.opengl.GLErrorWrapper: void glRotatef(float,float,float,float)>
<android.widget.DayPickerPagerAdapter.ViewHolder: void <init>(int,android.view.View,android.widget.SimpleMonthView)>
<android.opengl.GLErrorWrapper: void glLoadPaletteFromModelViewMatrixOES()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA512AndMGF1Padding: void finalize()>
<android.graphics.ImageDecoder.ContentResolverSource: android.graphics.ImageDecoder createImageDecoder()>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,java.nio.IntBuffer)>
<android.net.Uri.PathSegments: int size()>
<android.widget.RemoteViews.OverrideTextColorsAction: void <init>(android.widget.RemoteViews,int)>
<android.view.textclassifier.TextClassificationSession: android.view.textclassifier.TextSelection suggestSelection(android.view.textclassifier.TextSelection.Request)>
<android.app.ContextImpl: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
<android.bluetooth.BluetoothOutputStream: void write(byte[],int,int)>
<android.util.apk.ApkSigningBlockUtils.MultipleDigestDataDigester: void consume(java.nio.ByteBuffer)>
<android.app.FragmentTransition: void calculatePopFragments(android.app.BackStackRecord,android.util.SparseArray,boolean)>
<android.content.pm.IPackageManager: void setRuntimePermissionsVersion(int,int)>
<android.widget.ActivityChooserView.Callbacks: void onClick(android.view.View)>
<android.transition.Visibility.DisappearListener: void onAnimationStart(android.animation.Animator)>
<android.util.StatsLogInternal: int write(int,boolean)>
<android.transition.TransitionManager.MultiListener: boolean onPreDraw()>
<android.location.LocationManager.ListenerTransport: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.view.IWindowSession: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>
<android.view.ViewGroup.ViewLocationHolder: void setComparisonStrategy(int)>
<android.widget.SimpleMonthView: void setMonthTextAppearance(int)>
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>
<android.util.LauncherIcons.ShadowDrawable.MyConstantState: int getChangingConfigurations()>
<android.bluetooth.IBluetooth: byte[] getMetadata(android.bluetooth.BluetoothDevice,int)>
<android.webkit.EventLogTags: void writeExpDetAttemptToCallObjectGetclass(java.lang.String)>
<android.view.ViewRootImpl.AsyncInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>
<android.preference.GenericInflater: void setDefaultPackage(java.lang.String)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: boolean test(java.lang.Object)>
<android.bluetooth.IBluetoothHeadsetClient: int getPriority(android.bluetooth.BluetoothDevice)>
<android.view.inspector.InspectableProperty.FlagEntry: int target()>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onSuccess(android.app.PendingIntent)>
<android.view.DisplayCutout.Bounds: int hashCode()>
<android.view.View.VisibilityChangeForAutofillHandler: void handleMessage(android.os.Message)>
<android.media.Cea708CCWidget.CCWindowLayout: void removeFromCaptionView()>
<android.opengl.GLLogWrapper: void glStencilOp(int,int,int)>
<android.app.IWallpaperManager: android.app.WallpaperInfo getWallpaperInfo(int)>
<android.preference.GenericInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>
<android.preference.GenericInflater: android.content.Context getContext()>
<android.view.IWindowSession: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.view.InsetsState)>
<android.widget.TextView.CharWrapper: void drawText(android.graphics.BaseCanvas,int,int,float,float,android.graphics.Paint)>
<android.app.IActivityManager: int getMemoryTrimLevel()>
<android.app.ActivityThread.ApplicationThread: void dumpActivity(android.os.ParcelFileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>
<android.providers.settings.GlobalSettingsProto.Cdma: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.CalendarViewLegacyDelegate: long getDate()>
<android.app.ActivityThread.ApplicationThread: void scheduleApplicationInfoChanged(android.content.pm.ApplicationInfo)>
<android.mtp.MtpEvent.IllegalParameterAccess: void <init>(java.lang.String,int)>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.security.keymaster.KeymasterBooleanArgument: void <init>(int)>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineSetMode(java.lang.String)>
<com.android.internal.messages.nano.SystemMessageProto.SystemMessage: com.android.internal.messages.nano.SystemMessageProto.SystemMessage parseFrom(com.android.framework.protobuf.nano.CodedInputByteBufferNano)>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority[] values()>
<android.media.MediaPlayer.TimeProvider: void onStopped()>
<android.hardware.camera2.ICameraDeviceUser: void prepare(int)>
<android.media.WebVttRenderingWidget.SpanLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.app.ActivityView.TaskStackListenerImpl: void onTaskRemovalStarted(android.app.ActivityManager.RunningTaskInfo)>
<android.view.InputFilter.H: void <init>(android.view.InputFilter,android.os.Looper)>
<android.transition.Transition.ArrayListManager: java.util.ArrayList remove(java.util.ArrayList,java.lang.Object)>
<android.app.WallpaperManager.Globals: void removeOnColorsChangedListener(android.app.WallpaperManager.OnColorsChangedListener,int,int)>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.app.Activity.HostCallbacks: android.view.View onFindViewById(int)>
<android.accounts.AbstractAccountAuthenticator.Transport: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.webkit.WebSyncManager: void onSyncInit()>
<android.speech.SpeechRecognizer.InternalListener: void onResults(android.os.Bundle)>
<android.text.TextLine.DecorationInfo: boolean hasDecoration()>
<android.widget.Switch.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.app.FragmentManagerImpl.StartEnterTransitionListener: void <init>(android.app.BackStackRecord,boolean)>
<android.animation.FloatKeyframeSet: float getFloatValue(float)>
<android.widget.TextView.ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.app.admin.IDevicePolicyManager: java.util.List getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)>
<android.opengl.EGLLogWrapper: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.view.InputQueue.ActiveInputEvent: void recycle()>
<android.app.ContextImpl: java.io.FileInputStream openFileInput(java.lang.String)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setShownWeekCount(int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: java.security.AlgorithmParameters engineGetParameters()>
<android.app.admin.IDevicePolicyManager: java.util.List setMeteredDataDisabledPackages(android.content.ComponentName,java.util.List)>
<android.view.Choreographer.FrameDisplayEventReceiver: void onVsync(long,long,int)>
<android.media.Utils: android.util.Range intRangeFor(double)>
<android.widget.SelectionActionModeHelper.SelectionMetricsLogger: void endTextClassificationSession()>
<android.widget.DoubleDigitManager: void <init>(long,android.widget.DoubleDigitManager.CallBack)>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: java.lang.String glGetString(int)>
<android.appwidget.AppWidgetHost.UpdateHandler: void <init>(android.appwidget.AppWidgetHost,android.os.Looper)>
<android.widget.RemoteViews.LayoutParamAction: java.lang.String getUniqueKey()>
<android.app.ActivityTransitionCoordinator: void viewsTransitionComplete()>
<android.widget.Spinner.DropDownAdapter: java.lang.Object getItem(int)>
<android.widget.ActionMenuPresenter.ActionMenuPopupCallback: com.android.internal.view.menu.ShowableListMenu getPopup()>
<android.media.ExifInterface.ByteOrderedDataInputStream: long readUnsignedInt()>
<android.opengl.GLErrorWrapper: void glClientActiveTexture(int)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: int getSelectedMonth()>
<android.widget.Editor.InsertionPointCursorController: void hide()>
<android.view.contentcapture.ChildContentCaptureSession: void internalNotifyViewTreeEvent(boolean)>
<android.widget.Editor.Blink: void run()>
<android.media.MediaSync.AudioBuffer: void <init>(java.nio.ByteBuffer,int,long)>
<android.bluetooth.IBluetoothHeadsetClient: boolean explicitCallTransfer(android.bluetooth.BluetoothDevice)>
<android.hardware.usb.IUsbManager: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<android.util.MapCollections.EntrySet: java.util.Iterator iterator()>
<android.os.IStatsManager: void informAlarmForSubscriberTriggeringFired()>
<android.bluetooth.le.IAdvertisingSetCallback: void onAdvertisingSetStopped(int)>
<android.app.IWallpaperManager: java.lang.String getName()>
<android.accounts.AccountManager.BaseFutureTask.Response: void <init>(android.accounts.AccountManager.BaseFutureTask)>
<android.content.pm.IPackageManager: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(com.android.framework.protobuf.ByteString)>
<android.util.MapCollections.MapIterator: boolean equals(java.lang.Object)>
<android.security.keystore.IKeystoreResponseCallback: void onFinished(android.security.keystore.KeystoreResponse)>
<android.util.StatsLogInternal: int write(int,int[],java.lang.String[],int)>
<android.nfc.NfcActivityManager.NfcApplicationState: void unregister()>
<android.opengl.GLErrorWrapper: void glPointSize(float)>
<android.telephony.LocationAccessPolicy.LocationPermissionResult: android.telephony.LocationAccessPolicy.LocationPermissionResult[] values()>
<android.widget.ExpandableListConnector: boolean areAllItemsEnabled()>
<android.util.BinaryLogEntry.Elem: void <init>(android.util.BinaryLogEntry)>
<android.media.WebVttRenderingWidget.CueLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.widget.YearPickerView.YearAdapter: void <init>(android.content.Context)>
<android.media.ImageWriter.WriterSurfaceImage: android.hardware.HardwareBuffer getHardwareBuffer()>
<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)>
<android.apex.IApexService: void resumeRollbackIfNeeded()>
<android.widget.AbsListView.PositionScroller: void start(int,int)>
<android.util.apk.WrappedX509Certificate: byte[] getExtensionValue(java.lang.String)>
<android.bluetooth.IBluetoothHeadset: boolean isInbandRingingEnabled()>
<android.util.MapCollections.KeySet: boolean retainAll(java.util.Collection)>
<android.view.IWindowManager: android.graphics.Bitmap screenshotWallpaper()>
<android.animation.PathKeyframes.FloatKeyframesBase: java.lang.Object getValue(float)>
<android.widget.DatePickerSpinnerDelegate: void setEnabled(boolean)>
<android.providers.settings.SecureSettingsProto.ManagedProfile: void <init>(android.providers.settings.SecureSettingsProto)>
<android.os.IncidentMetadata.SectionStats: void <init>(android.os.IncidentMetadata)>
<android.opengl.GLLogWrapper: void glStencilMask(int)>
<android.security.keymaster.KeymasterBlobArgument: void <init>(int,android.os.Parcel)>
<android.widget.DayPickerPagerAdapter: void setRange(android.icu.util.Calendar,android.icu.util.Calendar)>
<android.widget.ProgressBar.InspectionCompanion: void readProperties(android.widget.ProgressBar,android.view.inspector.PropertyReader)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.media.ExifInterface.ByteOrderedDataInputStream: java.lang.String readLine()>
<android.gamedriver.GameDriverProto.Blacklist: com.android.framework.protobuf.ByteString getPackageNamesBytes(int)>
<android.view.IWindowManager: void disableKeyguard(android.os.IBinder,java.lang.String,int)>
<android.app.IntentReceiverLeaked: void <init>(java.lang.String)>
<android.app.BackStackRecord: android.app.FragmentTransaction setPrimaryNavigationFragment(android.app.Fragment)>
<android.location.ILocationManager: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String)>
<android.opengl.GLLogWrapper: void glGenTextures(int,java.nio.IntBuffer)>
<android.app.ITaskStackListener: void onPinnedActivityRestartAttempt(boolean)>
<android.media.ImageReader.SurfaceImage: android.media.Image.Plane[] getPlanes()>
<android.content.res.XmlBlock.Parser: int getAttributeCount()>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getProfileOwner(int)>
<android.speech.tts.FileSynthesisCallback: void error()>
<android.widget.CursorAdapter.ChangeObserver: boolean deliverSelfNotifications()>
<android.animation.AnimationHandler.MyFrameCallbackProvider: void setFrameDelay(long)>
<android.widget.FastScroller: void setEnabled(boolean)>
<android.app.admin.IDevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<android.security.IKeyChainService: java.lang.String requestPrivateKey(java.lang.String)>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void receiveSessionModifyRequest(android.telecom.VideoProfile)>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>
<android.widget.TimePicker.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>
<android.net.Uri.Part: android.net.Uri.Part nonNull(android.net.Uri.Part)>
<android.content.ContentProviderClient.NotRespondingRunnable: void run()>
<android.view.BatchedInputEventReceiver.BatchedInputRunnable: void run()>
<android.os.IVold: void destroyUserKey(int)>
<android.os.IStatsManager: void registerPullerCallback(int,android.os.IStatsPullerCallback,java.lang.String)>
<android.widget.DatePickerCalendarDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.app.LoadedApk.WarningContextClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>
<android.app.admin.IDevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>
<android.app.ContextImpl: int checkCallingOrSelfPermission(java.lang.String)>
<android.app.admin.IDevicePolicyManager: android.os.PersistableBundle getTransferOwnershipBundle()>
<android.widget.RemoteViews.ViewGroupActionRemove: int mergeBehavior()>
<android.app.timezone.Utils: java.lang.Object validateNull(java.lang.String,java.lang.Object)>
<android.app.IActivityManager: void setRequestedOrientation(android.os.IBinder,int)>
<android.content.pm.IPackageManager: void notifyPackagesReplacedReceived(java.lang.String[])>
<android.opengl.GLLogWrapper: void glClear(int)>
<android.opengl.GLErrorWrapper: void glScalef(float,float,float)>
<android.location.ILocationManager: java.lang.String getGnssHardwareModelName()>
<android.os.IVold: void destroyUserStorage(java.lang.String,int,int)>
<android.os.IVold: void restoreCheckpoint(java.lang.String)>
<android.inputmethodservice.IInputMethodSessionWrapper: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.telecom.VideoCallbackServant: com.android.internal.telecom.IVideoCallback getStub()>
<android.app.admin.IDevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothA2dpSink: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.permission.PermissionControllerManager.PendingGetPermissionUsagesRequest: void run()>
<android.media.AudioHandle: java.lang.String toString()>
<android.location.ILocationManager: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections,java.lang.String)>
<android.content.pm.IPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<android.media.ExifInterface.ByteOrderedDataInputStream: double readDouble()>
<android.content.SyncAdaptersCache.MySerializer: java.lang.Object createFromXml(org.xmlpull.v1.XmlPullParser)>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.content.pm.IPackageManager: void sendDeviceCustomizationReadyBroadcast()>
<android.app.admin.IDevicePolicyManager: java.util.List getAffiliationIds(android.content.ComponentName)>
<android.util.StatsLogInternal: int write_non_chained(int,int,java.lang.String,int,java.lang.String,int)>
<android.content.SyncAdaptersCache.MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineInitSign(java.security.PrivateKey)>
<android.app.LoadedApk.ServiceDispatcher: void doDeath(android.content.ComponentName,android.os.IBinder)>
<android.widget.Editor.SuggestionsPopupWindow: boolean isShowingUp()>
<android.telephony.PhoneNumberUtils.CountryCallingCodeAndNewIndex: void <init>(int,int)>
<android.app.IActivityManager: void registerIntentSenderCancelListener(android.content.IIntentSender,com.android.internal.os.IResultReceiver)>
<android.app.admin.IDevicePolicyManager: void setSystemSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists parseFrom(com.android.framework.protobuf.CodedInputStream)>
<android.view.IWindowManager: void thawDisplayRotation(int)>
<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.webkit.WebSyncManager: void <init>(android.content.Context,java.lang.String)>
<android.provider.MediaStore.InternalThumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,android.net.Uri,int,android.graphics.BitmapFactory.Options)>
<android.view.IWindowManager: boolean stopViewServer()>
<android.hardware.SystemSensorManager.BaseEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.content.pm.IPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<android.location.LocationManager.ListenerTransport: void onProviderEnabled(java.lang.String)>
<android.accounts.AccountManager.Future2Task: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback)>
<android.widget.TimePickerClockDelegate.ClickActionDelegate: void <init>(android.content.Context,int)>
<android.view.IWindowManager: int getInitialDisplayDensity(int)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>
<android.permission.PermissionControllerManager.PendingGrantOrUpgradeDefaultRuntimePermissionsRequest: void onTimeout(android.permission.PermissionControllerManager.RemoteService)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList createSnapshots(android.os.Bundle,java.util.Collection)>
<android.app.admin.IDevicePolicyManager: void lockNow(int,boolean)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<android.bluetooth.IBluetooth: boolean removeBond(android.bluetooth.BluetoothDevice)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.gamedriver.GameDriverProto.Blacklists: com.android.framework.protobuf.Parser parser()>
<android.opengl.GLLogWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.app.BackStackRecord: android.app.FragmentTransaction setTransitionStyle(int)>
<android.app.IActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>
<android.app.Dialog.ListenersHandler: void <init>(android.app.Dialog)>
<android.os.IIncidentCompanion: android.os.IncidentManager.IncidentReport getIncidentReport(java.lang.String,java.lang.String,java.lang.String)>
<android.media.RemoteController.TopTransportSessionListener: void onActiveSessionsChanged(java.util.List)>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,int[],int)>
<android.bluetooth.IBluetooth: boolean setIoCapability(int)>
<android.security.IKeyChainService: void setUserSelectable(java.lang.String,boolean)>
<android.telephony.PhoneStateListener.IPhoneStateListenerStub: void onDataActivationStateChanged(int)>
<android.app.ActivityTransitionCoordinator: void captureSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int,long)>
<android.opengl.GLErrorWrapper: void glColor4ub(byte,byte,byte,byte)>
<android.net.lowpan.ILowpanInterface: android.net.lowpan.LowpanChannelInfo[] getSupportedChannels()>
<android.service.procstats.PackageServiceOperationStatsProto.StateStats: void <init>(android.service.procstats.PackageServiceOperationStatsProto)>
<android.nfc.NfcActivityManager.NfcActivityState: void destroy()>
<android.util.RecurrenceRule.NonrecurringIterator: boolean hasNext()>
<android.content.pm.IPackageManager: boolean isInstantApp(java.lang.String,int)>
<android.security.keystore.DelegatingX509Certificate: java.security.Principal getIssuerDN()>
<android.app.IActivityManager: android.os.ParcelFileDescriptor getLifeMonitor()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: java.security.Key engineUnwrap(byte[],java.lang.String,int)>
<android.os.IUpdateEngine: void applyPayload(java.lang.String,long,long,java.lang.String[])>
<android.security.keystore.IKeystoreService: int importKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int)>
<android.print.PrinterDiscoverySession.SessionHandler: void handleMessage(android.os.Message)>
<android.os.ProcrankProto.Summary.Ram: void <init>(android.os.ProcrankProto.Summary)>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.EGLLogWrapper: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<android.content.res.XmlBlock.Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: void <init>(android.content.Context,android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache)>
<android.bluetooth.IBluetoothGatt: void clientDisconnect(int,java.lang.String)>
<android.providers.settings.GlobalSettingsProto.Data: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int getAdditionalEntropyAmountForBegin()>
<android.util.StatsLogInternal: int write(int,java.lang.String,int,java.lang.String)>
<android.gamedriver.GameDriverProto.Blacklists.Builder: int getBlacklistsCount()>
<android.speech.tts.BlockingAudioTrack: void stop()>
<android.apex.ApexSessionInfo: int describeContents()>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,int[],int)>
<android.apex.IApexService: boolean submitStagedSession(int,int[],android.apex.ApexInfoList)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean answerCall()>
<android.security.keystore.IKeystoreService: int cancelConfirmationPrompt(android.os.IBinder)>
<android.opengl.GLErrorWrapper: void glSampleCoveragex(int,boolean)>
<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>
<android.app.admin.IDevicePolicyManager: void uninstallPackageWithActiveAdmins(java.lang.String)>
<android.content.SyncAdaptersCache.MySerializer: android.content.SyncAdapterType createFromXml(org.xmlpull.v1.XmlPullParser)>
<android.util.FastImmutableArraySet.FastIterator: void <init>(java.lang.Object[])>
<android.widget.TimePickerClockDelegate: android.view.View getPmView()>
<android.view.ViewDebug.ExportedProperty: java.lang.String prefix()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.RemoteViews.SetOnClickResponse: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.IPackageManager: java.util.List getWhitelistedRestrictedPermissions(java.lang.String,int,int)>
<android.providers.settings.GlobalSettingsProto.CertPin: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.text.SpannableStringInternal: int hashCode()>
<android.security.IKeyChainService: byte[] getEncodedCaCertificate(java.lang.String,boolean)>
<android.graphics.ImageDecoder.Source: android.graphics.ImageDecoder createImageDecoder()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: java.security.AlgorithmParameters engineGetParameters()>
<android.util.MapCollections: java.util.Map colGetMap()>
<android.media.SubtitleTrack.CueList: void add(android.media.SubtitleTrack.Cue)>
<android.media.Cea708CCWidget.CCLayout: void addOrUpdateViewToSafeTitleArea(android.media.Cea708CCWidget.CCWindowLayout,android.media.Cea708CCWidget.ScaledLayout.ScaledLayoutParams)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void resetAll()>
<android.security.keymaster.KeymasterBooleanArgument: void writeValue(android.os.Parcel)>
<android.widget.DatePickerSpinnerDelegate: int getFirstDayOfWeek()>
<android.view.ViewDebug.CapturedViewProperty: boolean retrieveReturn()>
<android.app.ActivityThread.ApplicationThread: void updateTimeZone()>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getPersistentApplications(int)>
<android.widget.DateTimeView.ReceiverInfo: void removeView(android.widget.DateTimeView)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.webkit.WebView.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)>
<android.app.ContextImpl: android.content.Context getOuterContext()>
<android.app.ActivityTransitionCoordinator: void pauseInput()>
<android.hardware.radio.TunerAdapter: java.util.List getProgramList(java.util.Map)>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.util.MapCollections.EntrySet: boolean equals(java.lang.Object)>
<android.widget.Editor.CorrectionHighlighter: void <init>(android.widget.Editor)>
<android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)>
<android.opengl.GLErrorWrapper: void glLightf(int,int,float)>
<android.widget.AbsListView.InputConnectionWrapper: boolean performEditorAction(int)>
<android.widget.Editor.ProcessTextIntentActionsHandler: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>
<android.permission.PermissionControllerManager.FileReaderTask: void onPostExecute(java.lang.Object)>
<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)>
<android.widget.DatePickerSpinnerDelegate: boolean isEnabled()>
<android.opengl.GLErrorWrapper: void glTexEnvi(int,int,int)>
<android.opengl.GLErrorWrapper: void glAlphaFuncx(int,int)>
<android.telecom.VideoCallbackServant: void <init>(com.android.internal.telecom.IVideoCallback)>
<android.content.res.XmlBlock.Parser: java.lang.String getText()>
<android.media.Cea708CCWidget.CCHandler: void <init>(android.media.Cea708CCWidget.CCLayout)>
<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>
<android.opengl.GLLogWrapper: void glStencilFunc(int,int,int)>
<android.bluetooth.IBluetoothHidHost: boolean setIdleTime(android.bluetooth.BluetoothDevice,byte)>
<android.app.admin.IDevicePolicyManager: boolean setKeyguardDisabled(android.content.ComponentName,boolean)>
<android.animation.AnimatorSet.AnimationEvent: java.lang.String toString()>
<android.app.IActivityManager: int getLockTaskModeState()>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,int[],int)>
<android.os.SystemPropertiesProto.AacDrc: void <init>(android.os.SystemPropertiesProto)>
<android.widget.Spinner.DropdownPopup: void setAdapter(android.widget.ListAdapter)>
<android.widget.SimpleMonthView: java.lang.String getMonthYearLabel()>
<android.security.keystore.DelegatingX509Certificate: void checkValidity(java.util.Date)>
<android.widget.DayPickerView: long getDate()>
<android.widget.Spinner.DropdownPopup: void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int,int)>
<android.content.pm.IPackageManager: java.lang.String getSystemCaptionsServicePackageName()>
<android.app.ContextImpl: int startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)>
<android.hardware.SystemSensorManager.BaseEventQueue: void dispatchAdditionalInfoEvent(int,int,int,float[],int[])>
<android.appwidget.AppWidgetHost.Callbacks: void viewDataChanged(int,int)>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: void <init>(android.renderscript.RenderScript)>
<android.security.keymaster.KeymasterIntArgument: void <init>(int,android.os.Parcel)>
<android.permission.PermissionControllerManager.RemoteService: android.os.IInterface getServiceInterface(android.os.IBinder)>
<android.view.ViewRootImpl.AsyncInputStage: void defer(android.view.ViewRootImpl.QueuedInputEvent)>
<android.app.ActivityThread.Profiler: void setProfiler(android.app.ProfilerInfo)>
<android.bluetooth.IBluetoothHeadsetClient: boolean connectAudio(android.bluetooth.BluetoothDevice)>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: int getActionTag()>
<android.providers.settings.SecureSettingsProto.Tty: void <init>(android.providers.settings.SecureSettingsProto)>
<android.widget.YearPickerView.YearAdapter: boolean setSelection(int)>
<android.bluetooth.IBluetoothHearingAid: int getDeviceMode(android.bluetooth.BluetoothDevice)>
<android.opengl.GLWrapperBase: void <init>(javax.microedition.khronos.opengles.GL)>
<android.opengl.GLSurfaceView.LogWriter: void write(char[],int,int)>
<android.util.apk.ApkSigningBlockUtils: java.lang.String getContentDigestAlgorithmJcaDigestAlgorithm(int)>
<android.hardware.radio.TunerAdapter: android.graphics.Bitmap getMetadataImage(int)>
<android.app.IActivityManager: void removeStack(int)>
<android.widget.Editor.SelectionModifierCursorController: boolean isDragAcceleratorActive()>
<android.opengl.GLLogWrapper: void glGetFixedv(int,int[],int)>
<android.net.Uri.PathPart: android.net.Uri.PathPart fromDecoded(java.lang.String)>
<android.net.lowpan.ILowpanManager: void removeInterface(android.net.lowpan.ILowpanInterface)>
<android.security.keystore.KeyStoreCryptoOperationUtils: java.security.GeneralSecurityException getExceptionForCipherInit(android.security.KeyStore,android.security.keystore.AndroidKeyStoreKey,int)>
<android.bluetooth.IBluetoothA2dp: void setCodecConfigPreference(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothCodecConfig)>
<android.media.ExifInterface.ExifAttribute: android.media.ExifInterface.ExifAttribute createURational(android.media.ExifInterface.Rational,java.nio.ByteOrder)>
<android.widget.FastScroller: void setStyle(int)>
<android.app.ContextImpl: android.view.autofill.AutofillManager.AutofillClient getAutofillClient()>
<android.util.apk.ApkSigningBlockUtils: int getSignatureAlgorithmContentDigestAlgorithm(int)>
<android.widget.TimePicker.AbstractTimePickerDelegate: void autofill(android.view.autofill.AutofillValue)>
<android.bluetooth.IBluetooth: boolean fetchRemoteUuids(android.bluetooth.BluetoothDevice)>
<android.os.IVold: void onUserStopped(int)>
<android.speech.tts.SilencePlaybackQueueItem: void run()>
<android.os.SystemProto.WifiSupplicantState: void <init>(android.os.SystemProto)>
<android.app.BackStackRecord: void runOnCommitRunnables()>
<android.opengl.GLErrorWrapper: void glTexGeni(int,int,int)>
<android.app.Instrumentation.1ContextMenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>
<android.providers.settings.GlobalSettingsProto.Wfc: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.location.ILocationManager: void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)>
<android.app.admin.IDevicePolicyManager: void setForceEphemeralUsers(android.content.ComponentName,boolean)>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: boolean adjustConfigForEncryptingWithPrivateKey()>
<android.media.MediaScanner.WplHandler: void start(org.xml.sax.Attributes)>
<android.media.ImageWriter.WriterSurfaceImage: int getScalingMode()>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: long getMaxDate()>
<android.view.Choreographer.CallbackQueue: boolean hasDueCallbacksLocked(long)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: boolean isEncrypting()>
<android.widget.ExpandableListConnector: long getItemId(int)>
<android.app.admin.IDevicePolicyManager: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>
<android.os.IDumpstateListener: void onError(int)>
<android.service.procstats.ProcessStatsProto.Kill: void <init>(android.service.procstats.ProcessStatsProto)>
<android.os.IUpdateEngineCallback: void onPayloadApplicationComplete(int)>
<android.net.Uri.HierarchicalUri: java.lang.String getQuery()>
<android.net.Uri.StringUri: java.lang.String parsePath(java.lang.String,int)>
<android.app.IActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.app.IActivityManager: void requestSystemServerHeapDump()>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<android.util.MapCollections.KeySet: void clear()>
<android.opengl.GLLogWrapper: void glBindRenderbufferOES(int,int)>
<android.bluetooth.IBluetoothManager: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>
<android.app.IActivityManager: java.util.List getTasks(int)>
<android.opengl.GLSurfaceView.GLThread: int getRenderMode()>
<android.util.MapCollections.EntrySet: java.lang.Object[] toArray(java.lang.Object[])>
<android.providers.settings.GlobalSettingsProto.Tether: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.widget.Spinner.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.content.res.XmlBlock.Parser: void setFeature(java.lang.String,boolean)>
<android.gamedriver.GameDriverProto.Blacklist: android.gamedriver.GameDriverProto.Blacklist parseFrom(com.android.framework.protobuf.CodedInputStream,com.android.framework.protobuf.ExtensionRegistryLite)>
<android.opengl.GLErrorWrapper: java.lang.String glGetString(int)>
<android.security.keystore.IKeystoreExportKeyCallback: void onFinished(android.security.keymaster.ExportResult)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: java.lang.Object clone()>
<android.widget.RemoteViews.AsyncApplyTask: void onCancel()>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.opengl.GLLogWrapper: void glPolygonOffsetx(int,int)>
<android.app.admin.IDevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int,boolean)>
<android.providers.settings.GlobalSettingsProto.ApnDb: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.media.AudioTrack.StreamEventHandler: void handleMessage(android.os.Message)>
<android.os.storage.IStorageManager: void addUserKeyAuth(int,int,byte[],byte[])>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int getKeymasterPaddingOverride()>
<android.hardware.SystemSensorManager.TriggerEventQueue: void <init>(android.hardware.TriggerEventListener,android.os.Looper,android.hardware.SystemSensorManager,java.lang.String)>
<android.graphics.ColorSpace.Xyz: float getMaxValue(int)>
<android.stats.mediametrics.Mediametrics.AudioRecordData: void <init>(android.stats.mediametrics.Mediametrics)>
<android.widget.GridView.InspectionCompanion: void readProperties(android.widget.GridView,android.view.inspector.PropertyReader)>
<android.app.ContextImpl: boolean deleteDatabase(java.lang.String)>
<android.app.admin.IDevicePolicyManager: int getPasswordComplexity()>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists.Builder newBuilder()>
<android.util.apk.ApkSigningBlockUtils: java.nio.ByteBuffer findApkSignatureSchemeBlock(java.nio.ByteBuffer,int)>
<android.bluetooth.IBluetoothA2dp: boolean setActiveDevice(android.bluetooth.BluetoothDevice)>
<android.telephony.SmsMessage.NoEmsSupportConfig: java.lang.String toString()>
<android.location.ILocationManager: boolean injectLocation(android.location.Location)>
<android.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.sysprop.CryptoProperties: java.util.Optional type()>
<android.app.admin.IDevicePolicyManager: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)>
<android.widget.GridLayout.Assoc: android.widget.GridLayout.Assoc of(java.lang.Class,java.lang.Class)>
<android.sysprop.TraceProperties: void enable(java.lang.Boolean)>
<android.app.IActivityManager: void updateServiceGroup(android.app.IServiceConnection,int,int)>
<android.animation.PropertyValuesHolder.PointFToIntArray: java.lang.Object convert(java.lang.Object)>
<android.os.ZygoteProcess.ZygoteState: void close()>
<android.opengl.GLLogWrapper: void glOrthof(float,float,float,float,float,float)>
<android.view.IWindowManager: void removeWindowToken(android.os.IBinder,int)>
<android.providers.settings.GlobalSettingsProto.Selinux: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.appwidget.AppWidgetHost.Callbacks: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)>
<android.app.ExitTransitionCoordinator: void resetViews()>
<android.security.keystore.DelegatingX509Certificate: boolean hasUnsupportedCriticalExtension()>
<android.widget.Editor.TextActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>
<android.opengl.EGLLogWrapper: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.app.admin.IDevicePolicyManager: boolean isNotificationListenerServicePermitted(java.lang.String,int)>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespacePrefix(int)>
<android.graphics.ColorSpace.Adaptation: android.graphics.ColorSpace.Adaptation valueOf(java.lang.String)>
<android.security.keystore.DelegatingX509Certificate: java.security.Principal getSubjectDN()>
<android.animation.Keyframe.FloatKeyframe: android.animation.Keyframe.FloatKeyframe clone()>
<android.util.StatsLogInternal: int write(int,int,java.lang.String,java.lang.String,long,long,long,int,long,long)>
<org.chromium.arc.EventLogTags: void writeArcSystemEvent(java.lang.String)>
<android.util.StatsLogInternal: void write(int,android.os.WorkSource,int)>
<android.inputmethodservice.MultiClientInputMethodClientCallbackAdaptor.MultiClientInputMethodSessionImpl: void showSoftInput(int,android.os.ResultReceiver)>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,java.nio.IntBuffer)>
<android.util.Base64.Decoder: boolean process(byte[],int,int,boolean)>
<android.app.ContextImpl: void clearWallpaper()>
<android.gsi.IGsiService: boolean removeGsiInstall()>
<android.app.Instrumentation.SyncRunnable: void waitForComplete()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: boolean adjustConfigForEncryptingWithPrivateKey()>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,int[],int)>
<android.media.MediaScanner.MyMediaScannerClient: void setMimeType(java.lang.String)>
<android.text.HtmlToSpannedConverter.Foreground: void <init>(int)>
<android.speech.SpeechRecognizer.InternalListener: void onEvent(int,android.os.Bundle)>
<android.widget.RemoteViews.SetRemoteInputsAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.bluetooth.IBluetoothManagerCallback: void onBluetoothServiceDown()>
<android.graphics.Region.Op: android.graphics.Region.Op[] values()>
<android.util.StatsLogInternal: int write(int,java.lang.String,int,java.lang.String,int,java.lang.String,int,boolean,boolean,boolean)>
<android.widget.DatePicker.AbstractDatePickerDelegate.SavedState: int getListPosition()>
<android.app.ActivityThread.ApplicationThread: void scheduleTrimMemory(int)>
<android.hardware.SystemSensorManager.BaseEventQueue: void dispose()>
<android.widget.TimePickerClockDelegate: int getHour()>
<android.view.IWindowManager: void setShouldShowSystemDecors(int,boolean)>
<android.media.MediaPlayer.TimeProvider.EventHandler: void handleMessage(android.os.Message)>
<android.app.admin.IDevicePolicyManager: boolean setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean,java.util.List)>
<android.app.BackStackRecord: android.app.FragmentTransaction hide(android.app.Fragment)>
<android.os.MemoryFile.MemoryInputStream: int read()>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.bluetooth.IBluetooth: boolean setName(java.lang.String)>
<android.hardware.ICameraService: android.hardware.camera2.params.VendorTagDescriptor getCameraVendorTagDescriptor()>
<android.widget.SearchView.UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.Instrumentation.InstrumentationThread: void run()>
<android.widget.Chronometer.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.widget.Editor.PinnedPopupWindow: void createPopupWindow()>
<android.opengl.GLLogWrapper: void glDrawTexfOES(float,float,float,float,float)>
<android.widget.GridLayout.Bounds: void include(android.widget.GridLayout,android.view.View,android.widget.GridLayout.Spec,android.widget.GridLayout.Axis,int)>
<android.view.IWindowManager: boolean hasNavigationBar(int)>
<android.providers.settings.SystemSettingsProto.DtmfTone: void <init>(android.providers.settings.SystemSettingsProto)>
<android.security.keystore.IKeystoreService: java.lang.String grant(java.lang.String,int)>
<android.app.SharedPreferencesImpl.EditorImpl: void <init>(android.app.SharedPreferencesImpl)>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.app.admin.IDevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>
<android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.media.ImageWriter.WriterSurfaceImage: long getTimestamp()>
<android.widget.YearPickerView: void setSelectionCentered(int)>
<android.app.IActivityManager: void suppressResizeConfigChanges(boolean)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: java.lang.Object clone()>
<android.view.View.InspectionCompanion: void mapProperties(android.view.inspector.PropertyMapper)>
<android.app.BackStackRecord: android.app.FragmentTransaction attach(android.app.Fragment)>
<android.opengl.EGLLogWrapper: boolean eglReleaseThread()>
<android.media.Cea708CCWidget.CCWindowLayout: void setText(java.lang.String)>
<android.util.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)>
<android.gamedriver.GameDriverProto.Blacklists: android.gamedriver.GameDriverProto.Blacklists.Builder newBuilder(android.gamedriver.GameDriverProto.Blacklists)>
<android.widget.Editor.PositionListener: boolean onPreDraw()>
<android.content.ContentProvider.Transport: java.lang.String getProviderName()>
<android.util.Log.ImmediateLogWriter: void write(char[],int,int)>
<android.widget.Gallery.FlingRunnable: void run()>
<android.text.TextUtils.Reverser: char charAt(int)>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,java.nio.Buffer)>
<android.preference.VolumePreference.SavedState: void <init>(android.os.Parcelable)>
<android.util.MapCollections.KeySet: java.util.Iterator iterator()>
<android.app.admin.IDevicePolicyManager: void setStartUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.widget.AbsListView.InputConnectionWrapper: boolean finishComposingText()>
<android.os.storage.IStorageEventListener: void onDiskScanned(android.os.storage.DiskInfo,int)>
<android.content.AsyncTaskLoader.LoadTask: void run()>
<android.app.ContextImpl: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<android.bluetooth.BluetoothInputStream: void close()>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: int[] following(int)>
<android.bluetooth.IBluetoothGatt: void readCharacteristic(int,java.lang.String,int,int)>
<android.bluetooth.IBluetooth: java.lang.String getAddress()>
<android.graphics.ImageDecoder.InputStreamSource: int getDensity()>
<android.widget.AbsListView.PerformClick: void run()>
<android.app.admin.SecurityLogTags: void writeSecurityAdbSyncSend(java.lang.String)>
<android.view.ViewRootImpl.W: void insetsChanged(android.view.InsetsState)>
<android.media.AudioTrackRoutingProxy: void <init>(long)>
<android.view.MenuInflater.MenuState: android.view.SubMenu addSubMenuItem()>
<android.os.IVoldListener: void onDiskDestroyed(java.lang.String)>
<android.providers.settings.SecureSettingsProto.Search: void <init>(android.providers.settings.SecureSettingsProto)>
<android.content.pm.IPackageManager: int getInstallReason(java.lang.String,int)>
<android.drm.DrmManagerClient.InfoHandler: void handleMessage(android.os.Message)>
<android.widget.Editor.SelectionModifierCursorController: void onTouchModeChanged(boolean)>
<android.media.Cea608CCParser.PAC: java.lang.String toString()>
<android.widget.RemoteViews.ViewContentNavigation: int mergeBehavior()>
<android.opengl.GLErrorWrapper: void glBlendFuncSeparate(int,int,int,int)>
<android.bluetooth.IBluetoothGatt: void clientReadPhy(int,java.lang.String)>
<android.speech.tts.SynthesisPlaybackQueueItem: void run()>
<android.view.IWindowSession: boolean startMovingTask(android.view.IWindow,float,float)>
<android.media.ExifInterface.ByteOrderedDataInputStream: void readFully(byte[])>
<android.widget.SelectionActionModeHelper.SelectionTracker: void onSelectionUpdated(int,int,android.view.textclassifier.TextClassification)>
<android.sysprop.DisplayProperties: void debug_opengl_trace(java.lang.String)>
<android.util.StatsLogInternal: int write(int,int,int,int,long,boolean)>
<android.app.IActivityManager: void updateDeviceOwner(java.lang.String)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onActivityPaused(android.app.Activity)>
<android.bluetooth.IBluetooth: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>
<android.widget.CalendarViewMaterialDelegate: void setFirstDayOfWeek(int)>
<android.app.IActivityManager: void resizeTask(int,android.graphics.Rect,int)>
<android.content.pm.IPackageManager: android.content.pm.ChangedPackages getChangedPackages(int,int)>
<android.bluetooth.IBluetoothHeadsetPhone: void cdmaSwapSecondCallState()>
<android.widget.Spinner.DialogPopup: void setAdapter(android.widget.ListAdapter)>
<android.providers.settings.GlobalSettingsProto.LangId: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.companion.CompanionDeviceManager.CallbackProxy: void onActivityResumed(android.app.Activity)>
<android.stats.dnsresolver.DnsResolver.DnsQueryEvent: void <init>(android.stats.dnsresolver.DnsResolver)>
<android.view.IWindowSession: android.os.IBinder performDrag(android.view.IWindow,int,android.view.SurfaceControl,int,float,float,float,float,android.content.ClipData)>
<android.os.SystemProto.DataConnection: void <init>(android.os.SystemProto)>
<android.text.Layout.Ellipsizer: java.lang.String toString()>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,float[],int)>
<android.view.IWindowSession: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.widget.TimePickerClockDelegate: void <init>(android.widget.TimePicker,android.content.Context,android.util.AttributeSet,int,int)>
<android.sysprop.CryptoProperties.state_values: android.sysprop.CryptoProperties.state_values valueOf(java.lang.String)>
<android.bluetooth.IBluetooth: void registerCallback(android.bluetooth.IBluetoothCallback)>
<android.media.ImageWriter.WriterSurfaceImage: void <init>(android.media.ImageWriter)>
<android.animation.IntKeyframeSet: java.lang.Object clone()>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>
<android.media.Cea708CCWidget.ScaledLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.bluetooth.le.IPeriodicAdvertisingCallback: void onPeriodicAdvertisingReport(android.bluetooth.le.PeriodicAdvertisingReport)>
<android.hardware.input.IInputManager: int[] getInputDeviceIds()>
<android.app.IWallpaperManager: boolean isSetWallpaperAllowed(java.lang.String)>
<android.os.IVold: void addAppIds(java.lang.String[],int[])>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.opengl.GLErrorWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.apex.ApexInfo: int describeContents()>
<android.app.ActivityThread.ApplicationThread: void scheduleLowMemory()>
<android.animation.LayoutTransition.CleanupCallback: boolean onPreDraw()>
<android.app.IActivityManager: void killApplication(java.lang.String,int,int,java.lang.String)>
<android.media.Cea608CCParser.CCData: android.media.Cea608CCParser.CCData[] fromByteArray(byte[])>
<android.net.LocalSocketImpl.SocketInputStream: int read(byte[],int,int)>
<android.speech.SpeechRecognizer.Connection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.os.storage.IStorageManager: java.lang.String getPassword()>
<android.widget.StackView.StackSlider: void setXProgress(float)>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,float[],int)>
<android.os.storage.IStorageManager: void destroyUserKey(int)>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateParentIfNeeded()>
<android.accounts.AccountManager.BaseFutureTask: void <init>(android.accounts.AccountManager,android.os.Handler)>
<android.widget.DatePickerCalendarDelegate: int getFirstDayOfWeek()>
<android.opengl.GLErrorWrapper: boolean glIsRenderbufferOES(int)>
<android.webkit.WebSyncManager: void syncFromRamToFlash()>
<android.view.accessibility.WeakSparseArray: java.lang.Object get(int)>
<android.permission.PermissionControllerManager.PendingCountPermissionAppsRequest: void onTimeout(com.android.internal.infra.AbstractRemoteService)>
<android.accounts.AbstractAccountAuthenticator.Transport: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.app.ActivityView.SurfaceCallback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>
<android.bluetooth.IBluetoothManager: int getState()>
<android.widget.DayPickerView: void onMeasure(int,int)>
<android.widget.ArrayAdapter.ArrayFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>
<android.location.GnssMeasurementCallbackTransport: void <init>(android.content.Context,android.location.ILocationManager)>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void process(android.view.MotionEvent)>
<android.widget.GridLayout.Axis: int[] getLocations()>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean queuePositionsToBePreloadedFromRequestedPosition(int)>
<android.bluetooth.IBluetooth: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
<android.providers.settings.GlobalSettingsProto.Enable: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.view.textclassifier.TextClassificationSession: void destroy()>
<android.media.Cea708CCWidget.CCWindowLayout: void setFontScale(float)>
<android.hardware.camera2.ICameraDeviceUser: boolean isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration)>
<android.widget.TimePickerClockDelegate: java.lang.CharSequence obtainVerbatim(java.lang.String)>
<android.renderscript.Font.Style: android.renderscript.Font.Style valueOf(java.lang.String)>
<android.speech.tts.PlaybackQueueItem: void stop(int)>
<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType valueOf(java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.permission.PermissionControllerManager.PendingGrantOrUpgradeDefaultRuntimePermissionsRequest: void run()>
<android.hardware.camera2.ICameraDeviceUser: android.hardware.camera2.utils.SubmitInfo submitRequest(android.hardware.camera2.CaptureRequest,boolean)>
<android.location.ILocationManager: void locationCallbackFinished(android.location.ILocationListener)>
<android.app.admin.SecurityLogTags: void writeSecurityMaxPasswordAttemptsSet(java.lang.String,int,int,int)>
<android.opengl.GLLogWrapper: void glTexEnvx(int,int,int)>
<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetoothGatt getBluetoothGatt()>
<android.content.pm.IPackageManager: void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[],int)>
<android.widget.DatePickerCalendarDelegate: android.widget.CalendarView getCalendarView()>
<android.os.storage.IStorageManager: void allocateBytes(java.lang.String,long,int,java.lang.String)>
<android.net.wifi.SupplicantState: boolean isHandshakeState(android.net.wifi.SupplicantState)>
<android.content.pm.IPackageManager: boolean setDefaultBrowserPackageName(java.lang.String,int)>
<android.bluetooth.IBluetoothManagerCallback: void onBrEdrDown()>
<android.util.StatsLogInternal: int write(int,int,int,int,byte[],boolean)>
<android.app.admin.SecurityLogTags: void writeSecurityUserRestrictionRemoved(java.lang.String,int,java.lang.String)>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void <init>(android.database.IContentObserver,android.os.IBinder.DeathRecipient)>
<android.widget.Editor.PinnedPopupWindow: void updatePosition(int,int,boolean,boolean)>
<android.bluetooth.IBluetooth: int getIoCapability()>
<android.app.ContextImpl.ApplicationContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>
<android.opengl.GLLogWrapper: void glPixelStorei(int,int)>
<android.bluetooth.IBluetooth: boolean setSilenceMode(android.bluetooth.BluetoothDevice,boolean)>
<android.widget.AbsListView.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedPath()>
<android.app.ITaskStackListener: void onActivityForcedResizable(java.lang.String,int,int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getShownWeekCount()>
<android.widget.DatePickerSpinnerDelegate: boolean getCalendarViewShown()>
<android.content.res.ThemedResourceCache: void put(long,android.content.res.Resources.Theme,java.lang.Object,boolean)>
<android.widget.AbsListView.RecycleBin: void setViewTypeCount(int)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<android.app.admin.IDevicePolicyManager: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void setThreadPolicyMask(int)>
<android.util.MapCollections.ArrayIterator: void remove()>
<android.view.LayoutInflater.BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>
<android.app.IActivityManager: boolean isAppStartModeDisabled(int,java.lang.String)>
<android.widget.TimePickerSpinnerDelegate: boolean is24Hour()>
<android.app.PendingIntent.FinishedDispatcher: void run()>
<android.permission.PermissionControllerManager.PendingGetRuntimePermissionBackup: void accept(byte[])>
<android.widget.DatePickerCalendarDelegate: int getDaysInMonth(int,int)>
<android.appwidget.AppWidgetHostView.ViewApplyListener: void onViewApplied(android.view.View)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: android.widget.RemoteViews.Action initActionAsync(android.widget.RemoteViews.ViewTree,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void resetAll()>
<android.providers.settings.SecureSettingsProto.NightDisplay: void <init>(android.providers.settings.SecureSettingsProto)>
<android.bluetooth.IBluetoothHidDeviceCallback: void onConnectionStateChanged(android.bluetooth.BluetoothDevice,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.hardware.input.IInputManager: void setCustomPointerIcon(android.view.PointerIcon)>
<android.bluetooth.IBluetoothHeadset: void setAudioRouteAllowed(boolean)>
<android.view.ViewRootImpl.ViewRootHandler: boolean sendMessageAtTime(android.os.Message,long)>
<android.view.ViewRootImpl.ViewPostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA224AndMGF1Padding: void finalize()>
<android.opengl.GLErrorWrapper: void glEnableClientState(int)>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,float[],int)>
<android.content.pm.IPackageManagerNative: int getLocationFlags(java.lang.String)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationResume(android.animation.Animator)>
<android.hardware.camera2.ICameraDeviceUser: int createInputStream(int,int,int)>
<android.bluetooth.IBluetoothMap: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.util.MapCollections: java.lang.Object[] toArrayHelper(int)>
<android.widget.TimePickerSpinnerDelegate: void setMinute(int)>
<android.app.DownloadManager.CursorTranslator: long getLong(int)>
<android.app.IActivityManager: android.graphics.Rect getTaskBounds(int)>
<android.widget.Editor.ProcessTextIntentActionsHandler: void onInitializeMenu(android.view.Menu)>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket()>
<android.graphics.drawable.RippleBackground: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,boolean)>
<android.providers.settings.GlobalSettingsProto.MobileData: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.os.WorkSourceProto.WorkSourceContentProto: void <init>(android.os.WorkSourceProto)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean sendDtmf(int)>
<android.app.LoadedApk.ServiceDispatcher: void death(android.content.ComponentName,android.os.IBinder)>
<android.bluetooth.IBluetoothSap: java.util.List getConnectedDevices()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: java.security.AlgorithmParameters engineGetParameters()>
<android.app.LoaderManagerImpl.LoaderInfo: void onLoadCanceled(android.content.Loader)>
<android.app.admin.IDevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>
<android.widget.TabHost.IntentContentStrategy: android.view.View getContentView()>
<android.bluetooth.IBluetoothHearingAid: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.gsi.IGsiService: boolean disableGsiInstall()>
<android.widget.AbsListView.AbsPositionScroller: void startWithOffset(int,int,int)>
<android.widget.TimePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineUpdateAAD(byte[],int,int)>
<android.content.pm.IPackageManager: int getMoveStatus(int)>
<android.app.admin.SecurityLogTags: void writeSecurityLoggingStopped()>
<android.bluetooth.IBluetooth: boolean factoryReset()>
<android.widget.AdapterView.AdapterDataSetObserver: void clearSavedState()>
<android.widget.Spinner.DialogPopup: void dismiss()>
<android.app.ActivityThread.ApplicationThread: void dumpDbInfo(android.os.ParcelFileDescriptor,java.lang.String[])>
<android.opengl.GLErrorWrapper: boolean glIsEnabled(int)>
<android.media.ImageWriter.WriterSurfaceImage.SurfacePlane: java.nio.ByteBuffer getBuffer()>
<android.opengl.GLLogWrapper: void glLightfv(int,int,float[],int)>
<android.app.IActivityManager: boolean isIntentSenderAnActivity(android.content.IIntentSender)>
<android.widget.Editor.SuggestionsPopupWindow: void measureContent()>
<android.inputmethodservice.MultiClientInputMethodServiceDelegateImpl.ServiceImpl: void initialize(com.android.internal.inputmethod.IMultiClientInputMethodPrivilegedOperations)>
<android.widget.Chronometer.InspectionCompanion: void readProperties(java.lang.Object,android.view.inspector.PropertyReader)>
<android.view.GestureExclusionTracker: void updateRectsForView(android.view.View)>
<android.widget.AbsListView.InputConnectionWrapper: boolean setComposingRegion(int,int)>
<android.os.storage.IStorageEventListener: void onUsbMassStorageConnectionChanged(boolean)>
<android.preference.PreferenceInflater: android.preference.GenericInflater cloneInContext(android.content.Context)>
<android.os.storage.IStorageEventListener: void onVolumeForgotten(java.lang.String)>
<android.webkit.WebView.FindListenerDistributor: void onFindResultReceived(int,int,boolean)>
<android.app.IActivityManager: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<android.app.ContextImpl: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.providers.settings.GlobalSettingsProto.Notification: void <init>(android.providers.settings.GlobalSettingsProto)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
