<com.android.systemui.DessertCaseView.RescalingContainer: void <init>(android.content.Context)>
<com.android.server.Watchdog: void run()>
<com.android.server.notification.ZenModeFiltering: boolean shouldIntercept(int,android.service.notification.ZenModeConfig,com.android.server.notification.NotificationRecord)>
<com.android.documentsui.model.DocumentInfo: void updateFromCursor(android.database.Cursor,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.IBinder asBinder()>
<com.android.server.trust.TrustArchive: void logAgentConnected(int,android.content.ComponentName)>
<com.android.systemui.statusbar.CommandQueue: void showAssistDisclosure()>
<javax.obex.HeaderSet: void setEmptyNameHeader()>
<com.android.server.CountryDetectorService: void removeCountryListener(android.location.ICountryListener)>
<com.android.server.am.ActivityManagerService: void hang(android.os.IBinder,boolean)>
<android.text.LineWidth: void <init>(float,int,float)>
<com.android.systemui.statusbar.SpeedBumpView: void onFinishInflate()>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>
<com.android.systemui.statusbar.policy.DeadZone: float getFlash()>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationContentView getPublicLayout()>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.Result getViewParent(java.lang.Object)>
<com.android.location.provider.ActivityChangedEvent: java.lang.Iterable getActivityRecognitionEvents()>
<com.android.server.media.MediaSessionRecord: void onDestroy()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setOnGroupChangeListener(com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setRestingAlpha(float)>
<com.android.settingslib.bluetooth.PanProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentAirtimeExpandedMs()>
<javax.microedition.khronos.opengles.GL10: void glPointSize(float)>
<com.android.systemui.qs.GlobalSetting: void onChange(boolean)>
<com.android.systemui.BatteryMeterView: void draw(android.graphics.Canvas)>
<com.android.server.content.SyncManager: void cancelActiveSync(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle)>
<com.android.server.am.BatteryStatsService: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getNetworkBasedCountry()>
<com.android.server.am.ActivityManagerService: void notifyActivityDrawn(android.os.IBinder)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationEnd(android.animation.Animator)>
<android.graphics.PaintFlagsDrawFilter_Delegate: boolean isSupported()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.server.accounts.AccountManagerService: void onServiceChanged(android.accounts.AuthenticatorDescription,int,boolean)>
<com.android.systemui.statusbar.SignalClusterView: void onFinishInflate()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isEmptyElementTag()>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.GestureRecorder.Gesture.MotionEventRecord: void <init>(long,android.view.MotionEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportFailedPasswordAttempt(int)>
<com.android.systemui.volume.VolumeDialogController.State: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants.State)>
<com.android.documentsui.RecentLoader: void deliverResult(com.android.documentsui.DirectoryResult)>
<com.android.systemui.qs.tiles.UserDetailItemView: void bind(java.lang.String,android.graphics.Bitmap)>
<com.android.server.wm.WindowManagerService: void removeAppToken(android.os.IBinder)>
<com.android.location.provider.FusedProvider: void setFusedLocationHardware(com.android.location.provider.FusedLocationHardware)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDoneDrawing()>
<javax.obex.Operation: java.io.DataOutputStream openDataOutputStream()>
<com.example.android.networkusage.SettingsActivity: void onCreate(android.os.Bundle)>
<com.android.server.NetworkManagementService: boolean isTetheringStarted()>
<com.android.server.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.assist.AssistManager: void showDisclosure()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void dragRecipientExited(android.view.IWindow)>
<com.android.server.audio.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes)>
<com.android.server.audio.AudioService.VolumeStreamState: void applyAllVolumes()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.systemui.statusbar.policy.FlashlightController: boolean isEnabled()>
<com.android.keyguard.KeyguardSimPinView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.PanelView: void setOverExpansion(float,boolean)>
<android.net.ConnectivityManager.PacketKeepaliveCallback: void onStarted()>
<com.android.server.InputMethodManagerService: void setImeWindowStatus(android.os.IBinder,int,int)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getRenamedClasses()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onBluetoothStateChange(boolean)>
<com.android.systemui.qs.tiles.ColorInversionTile: void setListening(boolean)>
<android.view.IWindowManagerImpl: boolean isSafeModeEnabled()>
<com.android.server.accounts.IAccountAuthenticatorCache: void invalidateCache(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasConflictingGestures()>
<com.android.systemui.usb.UsbStorageActivity: void onResume()>
<com.android.systemui.usb.UsbPermissionActivity: void onDestroy()>
<com.android.server.pm.PermissionsState.PermissionState: void <init>(java.lang.String)>
<com.android.commands.pm.Pm: int runSetUserRestriction()>
<com.android.server.hdmi.HdmiCecMessageValidator: void <init>(com.android.server.hdmi.HdmiControlService)>
<com.android.server.policy.BarController: boolean isTransientShowRequested()>
<com.android.systemui.qs.tiles.HotspotTile: void setListening(boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void <init>(android.content.Context,android.view.View)>
<com.android.printspooler.ui.PageAdapter: void open(android.os.ParcelFileDescriptor,java.lang.Runnable)>
<com.android.printspooler.widget.PrintContentView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.wm.WindowManagerService: int getStackIdWithBounds(android.graphics.Rect)>
<com.android.documentsui.DocumentsActivity: void onBackPressed()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitArrayType()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,int[],int)>
<com.android.server.am.ActivityManagerService: void batteryPowerChanged(boolean)>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: android.graphics.Rect getUntransformedTaskViewSize()>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getEnabledAccessibilityServiceList(int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,float[],int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean setDefaultBrowserPackageName(java.lang.String,int)>
<android.graphics.BitmapShader_Delegate: java.awt.Paint getJavaPaint()>
<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getLegacyVpnConfig()>
<com.android.systemui.keyboard.KeyboardUI: void onBootCompleted()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.os.IBinder asBinder()>
<com.android.server.notification.CountdownConditionProvider: java.lang.String tryParseDescription(android.net.Uri)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getRightPreview()>
<com.android.keyguard.KeyguardPasswordView: void onFinishInflate()>
<com.android.systemui.doze.DozeHost: void startDozing(java.lang.Runnable)>
<com.android.server.am.BatteryStatsService: void noteSyncFinish(java.lang.String,int)>
<com.android.documentsui.RootsCache: void updatePackageAsync(java.lang.String)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: java.lang.Object getChild(int,int)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarWindowManager,com.android.systemui.statusbar.phone.DozeScrimController,com.android.systemui.keyguard.KeyguardViewMediator,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.server.wm.WindowManagerService: void switchKeyboardLayout(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<com.android.server.media.MediaSessionRecord: int getCurrentVolume()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.TrustDrawable: void start()>
<com.android.server.content.ContentService: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setLaunchingAffordance(boolean)>
<com.android.systemui.recents.RecentsConfiguration: boolean shouldAnimateStatusBarScrim()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.settings.ToggleSlider: void setMirrorController(com.android.systemui.statusbar.policy.BrightnessMirrorController)>
<com.android.gallery3d.common.BitmapUtils: boolean isRotationSupported(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void hideNotificationIconArea(boolean)>
<com.android.server.job.controllers.BatteryController.ChargingTracker: void onReceive(android.content.Context,android.content.Intent)>
<com.android.documentsui.LocalPreferences: void setDisplayAdvancedDevices(android.content.Context,boolean)>
<com.android.layoutlib.bridge.BridgeRenderSession: java.util.List getRootViews()>
<com.android.keyguard.KeyguardSimPinView: void verifyPasswordAndUnlock()>
<com.android.server.job.JobStore: boolean containsJobIdForUid(int,int)>
<android.net.dhcp.DhcpClient: android.net.BaseDhcpStateMachine makeDhcpStateMachine(android.content.Context,com.android.internal.util.StateMachine,java.lang.String)>
<com.android.layoutlib.bridge.BridgeRenderSession: java.util.List getSystemRootViews()>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onDestroy()>
<com.android.location.provider.GmsFusedBatchOptions: void resetSourceToUse(int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>
<com.android.location.provider.ActivityChangedEvent: java.lang.String toString()>
<com.android.server.wm.WindowManagerService: void showRecentApps()>
<com.android.server.AppOpsService: android.os.IBinder getToken(android.os.IBinder)>
<com.android.server.pm.PackageManagerService: boolean performDexOpt(java.lang.String,java.lang.String,boolean)>
<com.android.systemui.statusbar.policy.ZenModeController: android.content.ComponentName getEffectsSuppressor()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordHistoryLength(android.content.ComponentName,int)>
<com.android.systemui.power.PowerUI.WarningsUI: void updateLowBatteryWarning()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: int getInputMethodWindowVisibleHeight()>
<android.content.res.BridgeTypedArray: void recycle()>
<javax.obex.HeaderSet: java.lang.Object getHeader(int)>
<com.android.documentsui.DirectoryLoader: void onCanceled(com.android.documentsui.DirectoryResult)>
<com.android.systemui.volume.MediaSessions: void init()>
<com.android.server.am.ActivityManagerService: boolean isTopOfTask(android.os.IBinder)>
<com.android.server.pm.KeySetManagerService: void addScannedPackageLPw(android.content.pm.PackageParser.Package)>
<com.android.systemui.volume.VolumeDialogController: android.media.AudioManager getAudioManager()>
<com.android.layoutlib.bridge.impl.PlayAnimationThread: void <init>(android.animation.Animator,com.android.layoutlib.bridge.impl.RenderSessionImpl,java.lang.String,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Object getTagValue(int)>
<com.android.systemui.statusbar.phone.NavigationBarViewTaskSwitchHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setKeyguardMode(boolean)>
<com.android.server.am.ActivityManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.volume.MediaSessions: void postUpdateSessions()>
<com.android.server.connectivity.Vpn: boolean prepare(java.lang.String,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: boolean hasThumbnail()>
<com.android.gallery3d.exif.ExifInterface: android.util.SparseIntArray getTagInfo()>
<com.android.server.usb.UsbPortManager: void connectSimulatedPort(java.lang.String,int,boolean,int,boolean,int,boolean,com.android.internal.util.IndentingPrintWriter)>
<com.android.server.notification.PackageVisibilityExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.documentsui.RecentLoader.RecentTask: void runInternal()>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,int[],int)>
<com.android.wallpapercropper.CropView: void setTileSource(com.android.photos.views.TiledImageRenderer.TileSource,java.lang.Runnable)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void <init>(android.content.Context,android.os.storage.VolumeInfo,android.os.storage.VolumeInfo)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.notification.CountdownConditionProvider: void onBootComplete()>
<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)>
<com.android.server.InputMethodManagerService: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(java.lang.String,int)>
<com.android.systemui.statusbar.phone.BarTransitions: void transitionTo(int,boolean)>
<com.android.systemui.recents.model.RecentsTaskLoader: void registerReceivers(android.content.Context,com.android.systemui.recents.model.RecentsPackageMonitor.PackageCallbacks)>
<com.android.systemui.statusbar.policy.DeadZone: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.NetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void resetScrollPosition()>
<com.android.server.location.CountryDetectorBase: void stop()>
<com.android.systemui.statusbar.BaseStatusBar: boolean isPanelFullyCollapsed()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
<com.android.server.InputMethodManagerService: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>
<com.android.systemui.statusbar.stack.StackScrollState: void performSpeedBumpAnimation(int,com.android.systemui.statusbar.SpeedBumpView,com.android.systemui.statusbar.stack.StackViewState,long)>
<com.android.commands.hid.Device: void sendReport(byte[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onScrollChanged()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getNotGoneChildCount()>
<com.android.systemui.qs.UsageTracker: void showResetConfirmation(java.lang.String,java.lang.Runnable)>
<com.android.location.provider.LocationRequestUnbundled: long getInterval()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadRight()>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onStateChanged(com.android.systemui.volume.VolumeDialogController.State)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getChildrenCount(int)>
<android.util.BridgeXmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.BaseStatusBar: void onNotificationClear(android.service.notification.StatusBarNotification)>
<com.android.server.NetworkManagementService: void removeInterfaceFromNetwork(java.lang.String,int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.systemui.recents.misc.SystemServicesProxy: void removeTask(int)>
<android.graphics.AvoidXfermode_Delegate: java.awt.Composite getComposite(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>
<com.android.server.usb.UsbService: void <init>(android.content.Context)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator getInstance()>
<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<com.android.printspooler.util.PageRangeUtils: void offset(android.print.PageRange[],int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isSignedBy(java.lang.String,android.content.pm.KeySet)>
<com.android.server.wm.WindowManagerService: void reevaluateStatusBarVisibility()>
<com.android.server.am.ActivityManagerService: void resizeTask(int,android.graphics.Rect)>
<com.android.systemui.assist.AssistManager: void <init>(com.android.systemui.statusbar.BaseStatusBar,android.content.Context)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void <init>(android.content.Context)>
<com.android.commands.sm.Sm: void main(java.lang.String[])>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeValue(int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryUpdated(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.StatusBarNotification)>
<com.android.server.AttributeCache: void init(android.content.Context)>
<com.android.server.input.InputWindowHandle: void finalize()>
<com.android.server.pm.IntentFilterVerificationState: java.util.ArrayList getFilters()>
<com.android.systemui.SystemUIApplication: void startServicesIfNeeded()>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<com.android.server.input.InputManagerService: void switchKeyboardLayout(int,int)>
<com.android.statementservice.retriever.Relation: boolean equals(java.lang.Object)>
<com.android.server.job.JobSchedulerService: int schedule(android.app.job.JobInfo,int)>
<com.android.systemui.statusbar.phone.PanelBar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.gallery3d.exif.ExifInterface: boolean isOffsetTag(short)>
<com.android.server.notification.ManagedServices: void registerService(android.os.IInterface,android.content.ComponentName,int)>
<com.android.settingslib.bluetooth.MapProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postStartActivityDismissingKeyguard(android.content.Intent,int)>
<com.android.commands.telecom.Telecom: void onRun()>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isConnectable()>
<com.android.server.pm.PersistentPreferredIntentResolver: com.android.server.pm.PersistentPreferredActivity[] newArray(int)>
<com.android.server.am.ActivityManagerService: android.app.IActivityContainer createStackOnDisplay(int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isCurrentProfile(int)>
<com.android.systemui.recents.views.TaskViewTransform: void reset(android.view.View)>
<com.android.proxyhandler.SocketConnect: void connect(java.net.Socket,java.net.Socket)>
<javax.microedition.khronos.opengles.GL10: void glBindTexture(int,int)>
<com.android.systemui.qs.tiles.DndTile: boolean isCombinedIcon(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setNavigationIconHints(int)>
<com.android.gallery3d.glrenderer.BasicTexture: void setSize(int,int)>
<com.android.tools.layoutlib.create.OverrideMethod: int invokeI(java.lang.String,boolean,java.lang.Object)>
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentActivityName()>
<com.android.server.NetworkManagementService: android.net.RouteInfo[] getRoutes(java.lang.String)>
<com.android.server.NetworkManagementService: void setInterfaceAlert(java.lang.String,long)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void addTestListener(junit.framework.TestListener)>
<com.android.tools.layoutlib.create.Log: void errPrintln(java.lang.String)>
<com.android.server.location.GpsXtraDownloader: byte[] doDownload(java.lang.String)>
<com.android.systemui.qs.tiles.HotspotTile: int getMetricsCategory()>
<com.android.server.am.ActivityManagerService: void setVoiceKeepAwake(android.service.voice.IVoiceInteractionSession,boolean)>
<com.android.server.input.InputManagerService: int isInTabletMode()>
<com.android.layoutlib.bridge.impl.GcSnapshot: boolean clip(java.awt.Shape,int)>
<com.android.systemui.DessertCaseView.RescalingContainer: void setView(com.android.systemui.DessertCaseView)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
<com.android.location.provider.ActivityRecognitionProvider: boolean disableActivityEvent(java.lang.String,int)>
<com.android.systemui.qs.tiles.BluetoothTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.location.fused.FusedLocationProvider: void onEnable()>
<com.android.server.am.ActivityManagerService.GrantUri: com.android.server.am.ActivityManagerService.GrantUri resolve(int,android.net.Uri)>
<javax.microedition.khronos.egl.EGL10: int eglGetError()>
<com.android.gallery3d.glrenderer.GLCanvas: com.android.gallery3d.glrenderer.GLId getGLId()>
<com.android.systemui.recents.Recents: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setKeyguardIndicationController(com.android.systemui.statusbar.KeyguardIndicationController)>
<com.android.printspooler.ui.PrintActivity: void onResume()>
<com.android.commands.svc.DataCommand: java.lang.String longHelp()>
<com.android.layoutlib.bridge.impl.SystemViewInfo: void setViewType(com.android.ide.common.rendering.api.ViewType)>
<com.android.server.policy.PhoneWindowManager: void screenTurnedOff()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setNoCrop(boolean)>
<com.android.gallery3d.util.IntArray: int size()>
<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall.AMSInterface,android.os.Handler)>
<com.android.server.usage.UnixCalendar: void truncateToYear()>
<com.android.server.usb.UsbDeviceManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.server.policy.WindowOrientationListener: void onTouchStart()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitParameterType()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: boolean isHotspotSupported()>
<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long,java.lang.String)>
<com.android.systemui.qs.tiles.ColorInversionTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.recents.model.FilteredTaskList: int size()>
<com.android.pacprocessor.PacNative: boolean setCurrentProxyScript(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: android.view.ViewRootImpl getViewRootImpl()>
<com.android.server.wm.BlackFrame: void clearMatrix()>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,java.nio.IntBuffer)>
<com.android.settingslib.wifi.AccessPoint: int getRssi()>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnecting(android.hardware.display.WifiDisplay)>
<com.android.printspooler.model.MutexFileProvider: void releaseFile()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurnedOn()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendFuncSeparate(int,int,int,int)>
<com.android.server.SystemConfig: int[] getGlobalGids()>
<com.android.printspooler.model.RemotePrintDocument: void start()>
<com.android.server.LockSettingsService: void setLockPassword(java.lang.String,java.lang.String,int)>
<javax.obex.ObexPacket: javax.obex.ObexPacket read(int,java.io.InputStream)>
<com.android.systemui.statusbar.policy.BluetoothController: java.util.Collection getDevices()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void onClick(android.view.View)>
<com.android.uiautomator.core.UiScrollable: boolean scrollBackward()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void addCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<com.android.commands.telecom.Telecom: void onShowUsage(java.io.PrintStream)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void extendVerificationTimeout(int,int,long)>
<com.android.layoutlib.bridge.android.AndroidLocale: java.lang.String adjustLanguageCode(java.lang.String)>
<com.android.documentsui.DirectoryLoader: void <init>(android.content.Context,int,com.android.documentsui.model.RootInfo,com.android.documentsui.model.DocumentInfo,android.net.Uri,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean)>
<com.android.server.location.MockProvider: void <init>(java.lang.String,android.location.ILocationManager,com.android.internal.location.ProviderProperties)>
<com.android.uiautomator.core.UiObject: boolean longClickBottomRight()>
<com.android.printspooler.ui.PrintActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.tuner.QsTuner: void onResume()>
<com.android.server.hdmi.HdmiControlService: void onStart()>
<com.android.systemui.qs.SignalTileView: void <init>(android.content.Context)>
<com.android.server.notification.SystemConditionProviderService: void dumpUpcomingTime(java.io.PrintWriter,java.lang.String,long,long)>
<android.media.filterfw.samples.CameraEffectsRecordingSample: void onCreate(android.os.Bundle)>
<com.android.server.am.ActivityManagerService.PendingAssistExtras: void run()>
<javax.obex.ServerOperation: java.lang.String getEncoding()>
<com.android.settingslib.bluetooth.HidProfile: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: void setActivityController(android.app.IActivityController)>
<com.example.android.networkusage.NetworkActivity.NetworkReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void reboot(boolean,java.lang.String,boolean)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.LayoutLog getLog()>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onUpOrCancel()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setDozing(boolean,boolean)>
<com.android.server.media.RemoteDisplayProviderWatcher: void <init>(android.content.Context,com.android.server.media.RemoteDisplayProviderWatcher.Callback,android.os.Handler,int)>
<com.android.layoutlib.bridge.Bridge: java.lang.Integer getResourceId(com.android.resources.ResourceType,java.lang.String)>
<com.android.systemui.assist.AssistManager: boolean canVoiceAssistBeLaunchedFromKeyguard()>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: android.view.LayoutInflater getInflater(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlayIfNeeded()>
<com.android.server.SystemServiceManager: void stopUser(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void removePackageFromPreferred(java.lang.String)>
<com.android.systemui.egg.MLandActivity: void updateSplashPlayers()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback: void onSettingsActivityTriggered(android.content.Intent)>
<com.android.commands.svc.Svc.Command: java.lang.String shortHelp()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDeviceProvisioned()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void notifyContentUpdated()>
<com.android.systemui.power.PowerNotificationWarnings: void showInvalidChargerWarning()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserTrustIsManaged(int)>
<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices.Config getConfig()>
<com.android.settingslib.deviceinfo.StorageMeasurement: void measure()>
<com.android.server.ConnectivityService: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<com.android.documentsui.RootsFragment: void onResume()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasVoiceCallingFeature()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: boolean isManagerReady()>
<com.android.systemui.media.NotificationPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>
<com.android.gallery3d.exif.ExifTag: byte getValueAsByte(byte)>
<com.android.systemui.statusbar.NotificationContentView: void onAttachedToWindow()>
<com.android.server.InputMethodManagerService: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task)>
<com.android.systemui.qs.tiles.WifiTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.BatteryMeterView: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<com.android.keyguard.PasswordTextView: boolean hasOverlappingRendering()>
<com.android.commands.svc.NfcCommand: java.lang.String longHelp()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void sleep(long)>
<com.android.systemui.tuner.DemoModeFragment: void onResume()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void goToKeyguard()>
<com.android.server.notification.ZenModeFiltering: void <init>(android.content.Context)>
<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController getForTesting(com.android.server.job.StateChangedListener,android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void require(int,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isSnoozedPackage(android.service.notification.StatusBarNotification)>
<com.android.server.content.ContentService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.server.wm.WindowManagerService: int getPendingAppTransition()>
<com.android.systemui.statusbar.policy.SignalController: void <init>(java.lang.String,android.content.Context,int,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.server.accounts.AccountManagerService: void installNotification(int,android.app.Notification,android.os.UserHandle)>
<com.android.server.pm.PackageManagerService: int getMoveStatus(int)>
<com.android.server.audio.AudioService: void forceVolumeControlStream(int,android.os.IBinder)>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context)>
<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.SimpleBitmapRegionDecoder getBitmapRegionDecoder()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<com.android.statementservice.retriever.AbstractAsset: int lookupKey()>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void onFinishInflate()>
<com.android.systemui.statusbar.policy.Listenable: void setListening(boolean)>
<com.android.systemui.statusbar.stack.AmbientState: void setScrollY(int)>
<com.android.server.usage.UsageStatsService: void onStatsReloaded()>
<com.android.documentsui.SortingCursorWrapper: float getFloat(int)>
<com.android.server.pm.Installer: int getSizeInfo(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],android.content.pm.PackageStats)>
<com.android.server.location.GpsLocationProvider: android.location.IGpsGeofenceHardware getGpsGeofenceProxy()>
<com.android.proxyhandler.ProxyServer: int getPort()>
<com.android.server.notification.ManagedServices.UserProfiles: boolean isCurrentProfile(int)>
<com.android.systemui.statusbar.FlingAnimationUtils: void <init>(android.content.Context,float)>
<com.android.documentsui.DirectoryFragment: void onStop()>
<com.android.server.NetworkManagementService: void wifiFirmwareReload(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.location.provider.GmsFusedBatchOptions: int getSourcesToUse()>
<com.android.server.content.SyncStorageEngine: boolean getSyncAutomatically(android.accounts.Account,int,java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerNames(java.lang.String[])>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void updateIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon,com.android.internal.statusbar.StatusBarIcon)>
<com.android.gallery3d.glrenderer.UploadedTexture: void updateContent(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.systemui.statusbar.ExpandableView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL10: void glOrthox(int,int,int,int,int,int)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void dispose()>
<com.android.layoutlib.bridge.bars.IconLoader: java.lang.String getPath()>
<com.android.location.provider.LocationProviderBase: int onGetStatus(android.os.Bundle)>
<com.android.systemui.egg.MLand: void onAttachedToWindow()>
<com.android.server.audio.MediaFocusControl: void registerMediaButtonEventReceiverForCalls(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onClick(android.view.View)>
<javax.obex.ClientSession: boolean isSrmSupported()>
<com.android.systemui.recents.views.TaskView: void onFinishInflate()>
<android.graphics.PorterDuffXfermode_Delegate: android.graphics.PorterDuff.Mode getMode()>
<com.android.server.midi.MidiService: void openBluetoothDevice(android.os.IBinder,android.bluetooth.BluetoothDevice,android.media.midi.IMidiDeviceOpenCallback)>
<com.android.gallery3d.glrenderer.GLId: void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<com.android.systemui.ExpandHelper.Callback: void setUserExpandedChild(android.view.View,boolean)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateCanceled()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>
<com.android.systemui.recents.views.RecentsView: void onTaskViewClicked(com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothClass getBtClass()>
<com.android.server.am.BatteryStatsService: void noteScreenState(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<com.android.server.notification.ZenModeHelper: int getZenModeListenerInterruptionFilter()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isFalsingThresholdNeeded()>
<com.android.systemui.recents.misc.DebugTrigger: void onKeyEvent(int)>
<com.android.server.notification.NotificationRecord: boolean isAudioStream(int)>
<com.android.server.am.ActivityManagerService: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int,android.os.Bundle)>
<com.android.printspooler.ui.PrintActivity: void onOptionsOpened()>
<com.android.server.GestureLauncherService: boolean interceptPowerKeyDown(android.view.KeyEvent,boolean)>
<com.android.server.DeviceIdleController.LocalService: void setNetworkPolicyTempWhitelistCallback(java.lang.Runnable)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.server.accounts.AccountManagerService: boolean accountAuthenticated(android.accounts.Account)>
<javax.microedition.khronos.opengles.GL10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.policy.PreviewInflater: android.view.View inflatePreview(android.content.Intent)>
<com.android.systemui.volume.VolumePrefs: boolean get(android.content.Context,java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindFramebufferOES(int,int)>
<android.graphics.LayerRasterizer_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.doze.DozeHost: void stopDozing()>
<com.google.android.maps.MapView: void <init>(android.content.Context)>
<android.widget.SimpleMonthView_Delegate: void clearCache()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void removePendingHideExpandedRunnables()>
<com.android.keyguard.KeyguardStatusView: void onFinishInflate()>
<com.android.systemui.qs.QSTile.Icon: int hashCode()>
<com.android.layoutlib.bridge.android.BridgeContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<com.android.server.accounts.AccountManagerService: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>
<com.android.layoutlib.bridge.bars.Config: int getStatusBarColor(int)>
<com.android.server.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onConnectedChanged()>
<com.android.server.InputMethodManagerService: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitClassType(java.lang.String)>
<com.android.systemui.statusbar.DragDownHelper: void <init>(android.content.Context,android.view.View,com.android.systemui.ExpandHelper.Callback,com.android.systemui.statusbar.DragDownHelper.DragDownCallback)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void setScrimController(com.android.systemui.statusbar.phone.ScrimController)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: com.android.ide.common.rendering.api.ActionBarCallback getCallBack()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean isChildSelectable(int,int)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateZ()>
<com.android.server.hdmi.HdmiCecMessage: int getDestination()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void panelExpansionChanged(com.android.systemui.statusbar.phone.PanelView,float,boolean)>
<com.android.settingslib.applications.ApplicationsState.AppEntry: java.lang.String getNormalizedLabel()>
<com.android.keyguard.KeyguardAbsKeyInputView: void resetPasswordText(boolean)>
<com.android.server.am.DumpHeapProvider: java.lang.String getType(android.net.Uri)>
<com.android.server.pm.PackageInstallerSession: void close()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHintFinished()>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void onFinishInflate()>
<android.content.res.BridgeTypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onMeasure(int,int)>
<com.android.server.am.ActivityManagerService: java.util.List getAppTasks(java.lang.String)>
<com.android.tools.layoutlib.create.Log: void error(java.lang.String,java.lang.Object[])>
<com.android.keyguard.KeyguardUpdateMonitor: void handleBootCompleted()>
<com.android.systemui.statusbar.phone.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleUserSwitchComplete(int)>
<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.assist.AssistManager: android.content.ComponentName getVoiceInteractorComponentName()>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.Bitmap.CompressFormat convertExtensionToCompressFormat(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int setStorageEncryption(android.content.ComponentName,boolean)>
<com.android.systemui.doze.DozeLog: void tracePickupPulse(boolean)>
<com.android.server.NetworkManagementService: void setDnsForwarders(android.net.Network,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContext: void initResources()>
<com.android.keyguard.KeyguardAbsKeyInputView: void reset()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createDisplayContext(android.view.Display)>
<com.android.location.provider.GmsFusedBatchOptions: void setPeriodInNS(long)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothConnecting()>
<com.android.location.provider.GeofenceProvider: android.os.IBinder getBinder()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getStorageEncryptionStatus(int)>
<com.android.tools.layoutlib.java.Objects: java.lang.String toString(java.lang.Object)>
<com.android.systemui.recents.misc.Console: void logTraceTime(boolean,java.lang.String,java.lang.String)>
<com.android.photos.views.TiledImageView: void dispatchDraw(android.graphics.Canvas)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()>
<com.android.printspooler.model.PrintSpoolerService: void checkAllPrintJobsHandled()>
<com.android.server.pm.PackageInstallerSession: void addClientProgress(float)>
<com.android.statementservice.retriever.AbstractAssetMatcher: com.android.statementservice.retriever.AbstractAssetMatcher createMatcher(java.lang.String)>
<com.android.server.pm.PolicyComparator: int compare(com.android.server.pm.Policy,com.android.server.pm.Policy)>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context)>
<com.android.systemui.recents.RecentsActivity: void onTaskViewClicked()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getInputEncoding()>
<com.android.documentsui.model.RootInfo: void reset()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateOverflowContainerVisibility(boolean)>
<com.android.systemui.statusbar.policy.NetworkController.MobileDataController: boolean isMobileDataEnabled()>
<com.android.gallery3d.exif.ExifInterface: android.graphics.Bitmap getThumbnailBitmap()>
<com.android.systemui.qs.QSPanel: void updateResources()>
<com.android.gallery3d.glrenderer.GLPaint: int getColor()>
<com.android.systemui.statusbar.SignalClusterView: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>
<com.android.server.am.ActivityManagerService: void <init>(android.content.Context)>
<com.android.keyguard.EmergencyCarrierArea: void onFinishInflate()>
<com.android.systemui.qs.tiles.DndTile: boolean isVisible(android.content.Context)>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.wm.WindowManagerService: void setScreenCaptureDisabled(int,boolean)>
<com.android.server.am.ActivityManagerService: android.app.ActivityManager.StackInfo getStackInfo(int)>
<com.android.settingslib.bluetooth.MapProfile: boolean isProfileReady()>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: com.android.uiautomator.testrunner.UiAutomatorTestCaseFilter getTestCaseFilter()>
<com.android.server.connectivity.Tethering: int tether(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glNormal3f(float,float,float)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getIdAttributeResourceValue(int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelf(int,float)>
<com.android.server.policy.RecentApplicationsBackground: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.ScrimController: boolean onPreDraw()>
<com.android.keyguard.KeyguardPasswordView: void setPasswordEntryInputEnabled(boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getChildAtRawPosition(float,float)>
<com.android.fakeoemfeatures.FakeView: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setAsHorizontalList()>
<com.android.server.job.controllers.ConnectivityController: void dumpControllerState(java.io.PrintWriter)>
<com.android.server.notification.EventConditionProvider: void attachBase(android.content.Context)>
<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)>
<com.android.server.pm.PackageManagerService: int getInstallLocation()>
<com.android.systemui.doze.DozeLog: void traceKeyguardBouncerChanged(boolean)>
<com.android.server.am.DumpHeapProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.systemui.qs.tiles.CastTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onSwipeFromTop()>
<com.android.server.am.ActivityManagerService: void setTaskDescription(android.os.IBinder,android.app.ActivityManager.TaskDescription)>
<com.android.server.am.ActivityManagerService: boolean finishActivityAffinity(android.os.IBinder)>
<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)>
<com.android.systemui.statusbar.stack.PiecewiseLinearIndentationFunctor: float getValue(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void <init>(android.content.Context)>
<com.android.server.audio.AudioService.VolumeStreamState: java.lang.String getSettingNameForDevice(int)>
<com.android.printspooler.ui.PageAdapter: android.support.v7.widget.RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<com.android.server.policy.PhoneWindowManager: int rotationForOrientationLw(int,int)>
<com.android.systemui.qs.tiles.RotationLockTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.pm.PackageInstallerSession: void <init>(com.android.server.pm.PackageInstallerService.InternalCallback,android.content.Context,com.android.server.pm.PackageManagerService,android.os.Looper,int,int,java.lang.String,int,android.content.pm.PackageInstaller.SessionParams,long,java.io.File,java.lang.String,boolean,boolean)>
<com.android.printspooler.model.PrintSpoolerProvider: void onServiceDisconnected(android.content.ComponentName)>
<com.android.server.notification.ZenModeConditions: void evaluateConfig(android.service.notification.ZenModeConfig,boolean)>
<com.android.documentsui.model.DocumentInfo: boolean isDirectory()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showPromptReason(int)>
<android.graphics.BidiRenderer: void <init>(java.awt.Graphics2D,android.graphics.Paint_Delegate,char[])>
<com.android.systemui.statusbar.ExpandableView: boolean isChildInvisible(android.view.View)>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<com.android.server.policy.BurnInProtectionHelper: void cancelBurnInProtection()>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int movePrimaryStorage(android.os.storage.VolumeInfo)>
<com.android.systemui.recents.model.RecentsPackageMonitor: void onPackageRemoved(java.lang.String,int)>
<com.android.layoutlib.bridge.util.DynamicIdMap: java.lang.Integer getId(com.android.resources.ResourceType,java.lang.String)>
<com.android.uiautomator.core.UiObject: boolean isClickable()>
<com.android.keyguard.CarrierText: void onFinishInflate()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>
<com.android.server.pm.PackageManagerService: void registerMoveCallback(android.content.pm.IPackageMoveObserver)>
<android.view.WindowCallback: boolean onMenuOpened(int,android.view.Menu)>
<com.android.server.pm.PackageKeySetData: void removeAllDefinedKeySets()>
<com.android.location.fused.FusedLocationProvider: int onGetStatus(android.os.Bundle)>
<android.content.res.BridgeTypedArray: java.lang.String getString(int)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void recycle()>
<com.android.server.pm.Installer: int clearUserData(java.lang.String,int)>
<com.android.uiautomator.core.UiAutomatorBridge: int getRotation()>
<com.android.keyguard.KeyguardPatternView: void onEmergencyButtonClickedWhenInCall()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setBlockFlinging(boolean)>
<com.android.keyguard.KeyguardSecurityView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.server.voiceinteraction.DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.android.server.location.LocationProviderProxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.uiautomator.core.UiAutomationShellWrapper: android.app.UiAutomation getUiAutomation()>
<com.android.server.audio.AudioService.VolumeController: void postDismiss()>
<com.android.smspush.WapPushManager: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setHeadsUpGoingAway(boolean)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isContentValid()>
<com.android.server.location.GpsLocationProvider: boolean isEnabled()>
<com.android.layoutlib.bridge.Bridge: boolean isRtl(java.lang.String)>
<android.content.res.BridgeTypedArray: int length()>
<com.android.systemui.statusbar.phone.SettingsButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.BaseStatusBar: android.view.View getStatusBarView()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void initializeTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.Bitmap)>
<com.android.systemui.statusbar.policy.DeadZone: void setFlash(float)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onAttachedToWindow()>
<com.android.server.NetworkManagementService: void untetherInterface(java.lang.String)>
<com.android.settingslib.wifi.AccessPoint: boolean isConnectable()>
<com.android.bluetoothmidiservice.BluetoothMidiDevice: void <init>(android.content.Context,android.bluetooth.BluetoothDevice,com.android.bluetoothmidiservice.BluetoothMidiService)>
<com.android.server.twilight.TwilightState: boolean equals(java.lang.Object)>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<com.android.systemui.usb.UsbDebuggingActivity: void onStop()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean isInLockTaskMode()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isCollapsing()>
<com.android.server.pm.PackageManagerService: int getPackageUidEtc(java.lang.String,int,int)>
<com.android.commands.sm.Sm: void runSetForceAdoptable()>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onRebuildComplete(java.util.ArrayList)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setListening(com.android.systemui.statusbar.policy.NetworkControllerImpl.EmergencyListener,boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void nap(long)>
<com.android.systemui.statusbar.BaseStatusBar: void setLockscreenPublicMode(boolean)>
<com.android.server.policy.PhoneWindowManager: void keepScreenOnStoppedLw()>
<com.android.server.voiceinteraction.DatabaseHelper: boolean deleteKeyphraseSoundModel(int,int,java.lang.String)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onPause()>
<com.android.server.job.controllers.JobStatus: java.lang.String getTag()>
<com.android.systemui.RecentsComponent: void preloadRecents()>
<com.android.systemui.statusbar.policy.WifiSignalController: void notifyListeners()>
<com.android.server.audio.AudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.server.LockSettingsStrongAuth: void reportUnlock(int)>
<com.android.server.job.controllers.JobStatus: boolean hasConnectivityConstraint()>
<com.android.systemui.statusbar.ScrimView: int getScrimColor()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(int[])>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeIntValue(int,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setSlippery(boolean)>
<com.android.systemui.recents.model.Task.TaskCallbacks: void onTaskDataUnloaded()>
<com.android.server.am.BatteryStatsService: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setPressed(boolean)>
<com.android.systemui.statusbar.tv.TvStatusBar: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.statusbar.CommandQueue: void cancelPreloadRecentApps()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setWallpaperDisplayOffset(android.os.IBinder,int,int)>
<com.android.server.NetworkManagementService: void setFirewallEgressSourceRule(java.lang.String,boolean)>
<com.android.server.AppOpsService: void removeUser(int)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result animate(java.lang.Object,java.lang.String,boolean,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>
<com.android.systemui.egg.MLand: void L(java.lang.String,java.lang.Object[])>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.job.controllers.IdleController: void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector resourceId(java.lang.String)>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: void <init>(com.android.ide.common.rendering.api.ResourceReference,com.android.ide.common.rendering.api.AdapterBinding,com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.android.server.UiThread: android.os.Handler getHandler()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<android.view.IWindowManagerImpl: int getPreferredOptionsPanelGravity()>
<com.android.systemui.statusbar.phone.PanelHolder: void setBar(com.android.systemui.statusbar.phone.PanelBar)>
<com.android.commands.sm.Sm: void runListDisks()>
<com.android.systemui.doze.DozeLog: void traceKeyguard(boolean)>
<com.android.documentsui.DocumentsApplication: void onCreate()>
<com.android.nfc_extras.EeNfcDisabledException: void <init>(java.lang.String)>
<com.android.server.policy.WindowOrientationListener: void disable()>
<com.android.server.notification.CountdownConditionProvider: android.service.notification.IConditionProvider asInterface()>
<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onMalformedPdfFile()>
<com.android.server.LocationManagerService: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.documentsui.RecentLoader: void onCanceled(com.android.documentsui.DirectoryResult)>
<android.util.BridgeXmlPullAttributes: int getAttributeIntValue(int,int)>
<android.view.IWindowManagerImpl: void clearForcedDisplayDensity(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPermissionFlags(java.lang.String,java.lang.String,android.os.UserHandle)>
<com.android.server.pm.UserManagerService: android.os.Bundle getDefaultGuestRestrictions()>
<com.android.tools.layoutlib.create.InjectMethodsAdapter: void visitEnd()>
<com.android.systemui.recents.model.RecentsTaskLoader: android.graphics.Bitmap getAndUpdateThumbnail(com.android.systemui.recents.model.Task.TaskKey,com.android.systemui.recents.misc.SystemServicesProxy,boolean)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector packageNameMatches(java.lang.String)>
<com.android.layoutlib.bridge.util.DynamicIdMap: java.lang.Integer getId(com.android.util.Pair)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: java.lang.String getCurrentMediaNotificationKey()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void generateChildOrderChangedEvent()>
<com.android.server.content.SyncStorageEngine: void doDatabaseCleanup(android.accounts.Account[],int)>
<com.android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()>
<com.android.location.provider.ActivityRecognitionEvent: java.lang.String toString()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void save()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<com.android.server.ConnectivityService: int getRestoreDefaultNetworkDelay(int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void getState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackViewState)>
<com.android.server.policy.PhoneWindowManager: int getUserRotationMode()>
<com.android.keyguard.KeyguardPasswordView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.server.pm.PackageManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result getProperty(java.lang.Object,java.lang.String)>
<com.android.systemui.statusbar.policy.RotationLockController: boolean isRotationLockAffordanceVisible()>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffset(float,float)>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void createMenuPopup()>
<com.android.server.location.LocationProviderInterface: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.mediadrm.signer.MediaDrmSigner: byte[] signRSA(android.media.MediaDrm,byte[],java.lang.String,byte[],byte[])>
<com.android.layoutlib.bridge.impl.Stack: java.lang.Object pop()>
<com.android.printspooler.ui.SelectPrinterActivity: void onResume()>
<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean,boolean)>
<com.android.server.policy.BurnInProtectionHelper: void startBurnInProtection()>
<javax.microedition.khronos.opengles.GL11: void glVertexPointer(int,int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceOwner(java.lang.String)>
<com.android.settingslib.bluetooth.A2dpProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.server.notification.ManagedServices: com.android.server.notification.ManagedServices.Config getConfig()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void scale(float,float,float)>
<com.android.systemui.statusbar.ExpandableView: void onHeightReset()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.view.WindowCallback: void onActionModeStarted(android.view.ActionMode)>
<com.android.server.notification.ConditionProviders: void addSystemProvider(com.android.server.notification.SystemConditionProviderService)>
<com.android.server.notification.ZenModeConditions: void <init>(com.android.server.notification.ZenModeHelper,com.android.server.notification.ConditionProviders)>
<com.android.systemui.recents.views.TaskView: int getDim()>
<com.android.layoutlib.bridge.android.BridgeContentResolver: boolean releaseProvider(android.content.IContentProvider)>
<com.android.systemui.BitmapHelper: android.graphics.Bitmap createCircularClip(android.graphics.Bitmap,int,int)>
<com.android.server.pm.KeySetManagerService: void removeAppKeySetDataLPw(java.lang.String)>
<com.android.server.print.PrintManagerService: void onStartUser(int)>
<com.android.server.wm.WindowManagerService: void setCurrentUser(int,int[])>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>
<com.android.server.audio.AudioService: void unloadSoundEffects()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerDesc(java.lang.String)>
<com.android.systemui.statusbar.StackScrollerDecorView: void onFinishInflate()>
<com.android.layoutlib.bridge.android.BridgeContext: android.util.DisplayMetrics getMetrics()>
<com.android.server.job.controllers.JobStatus: void <init>(android.app.job.JobInfo,int,long,long)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void notifyKeyguardState(boolean,boolean)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: java.util.Map getAll()>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap_Delegate getDelegate(android.graphics.Bitmap)>
<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getAllSessions(int)>
<com.android.server.am.BatteryStatsService: void noteVibratorOn(int,long)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothDevice getDevice()>
<com.android.systemui.qs.QSDetailItems: void onDetachedFromWindow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.settingslib.wifi.WifiTracker: boolean isConnected()>
<com.android.printspooler.ui.SelectPrinterActivity: void onPause()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isShowing()>
<android.view.IWindowManagerImpl: void setForcedDisplayDensity(int,int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void releaseWakeLock(android.os.IBinder,int)>
<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void onStackAllTasksRemoved(com.android.systemui.recents.model.TaskStack,java.util.ArrayList)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateMediaMetaData(boolean)>
<com.android.keyguard.KeyguardHostView: void cleanUp()>
<com.android.systemui.statusbar.ActivatableNotificationView: void setShowingLegacyBackground(boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void hideRecentApps(boolean,boolean)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setWakeAndUnlocking(boolean)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationCancel(android.animation.Animator)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.systemui.egg.MLand: float rlerp(float,float,float)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: com.android.uiautomator.testrunner.TestCaseCollector getTestCaseCollector(java.lang.ClassLoader)>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.os.IBinder getBinder()>
<com.android.systemui.assist.AssistManager: void onConfigurationChanged()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.policy.ZenModeController: android.service.notification.ZenModeConfig.ZenRule getManualRule()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<com.android.server.content.ContentService: void unregisterContentObserver(android.database.IContentObserver)>
<com.android.systemui.tuner.TunerActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.SystemUIService: void onCreate()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onPowerSaveChanged()>
<com.android.vpndialogs.ManageDialog: void onResume()>
<com.android.keyguard.CarrierText: void onDetachedFromWindow()>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<com.android.server.audio.MediaFocusControl: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>
<com.android.server.am.ActivityManagerService: void stopLockTaskModeOnCurrent()>
<com.android.systemui.tuner.QsTuner: void stopDrag()>
<android.graphics.Paint_Delegate: int getColor()>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter.MethodReplacer: boolean isNeeded(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.accounts.AccountManagerService: java.lang.String readUserDataInternal(com.android.server.accounts.AccountManagerService.UserAccounts,android.accounts.Account,java.lang.String)>
<com.android.server.notification.RankingHelper: void <init>(android.content.Context,android.os.Handler,com.android.server.notification.NotificationUsageStats,java.lang.String[])>
<com.android.wallpapercropper.CropView: void onScaleEnd(android.view.ScaleGestureDetector)>
<android.graphics.CornerPathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.server.location.GpsLocationProvider: void enable()>
<com.android.wallpapercropper.CropView: void setTouchCallback(com.android.wallpapercropper.CropView.TouchCallback)>
<com.android.systemui.statusbar.phone.PanelBar: void startOpeningPanel(com.android.systemui.statusbar.phone.PanelView)>
<android.graphics.BidiRenderer: android.graphics.BidiRenderer setRenderLocation(float,float)>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.keyguard.EmergencyCarrierArea: void setCarrierTextVisible(boolean)>
<com.android.server.Watchdog.HandlerChecker: java.lang.String getName()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>
<android.graphics.ComposePathEffect_Delegate: boolean isSupported()>
<com.android.systemui.statusbar.phone.DozeScrimController: boolean isPulsing()>
<com.android.server.policy.PhoneWindowManager: boolean checkShowToOwnerOnly(android.view.WindowManager.LayoutParams)>
<com.android.server.lights.Light: void setFlashing(int,int,int,int)>
<com.android.printspooler.ui.PageAdapter: void startPreloadContent(android.print.PageRange)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: long getNextAlarm()>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void onLayout(boolean,int,int,int,int)>
<com.android.gallery3d.common.Utils: int clamp(int,int,int)>
<com.android.server.media.MediaRouterService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.SystemUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.ViewInvertHelper: void <init>(android.view.View,long)>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,java.nio.IntBuffer)>
<com.android.server.policy.RecentApplicationsBackground: void drawableStateChanged()>
<com.android.printspooler.widget.PrintContentView: void onClick(android.view.View)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector cloneSelector()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void showNotificationIconArea(boolean)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getPromotedFields()>
<com.android.server.pm.Installer: int install(java.lang.String,int,int,java.lang.String)>
<com.android.server.AttributeCache: void <init>(android.content.Context)>
<com.android.documentsui.DirectoryLoader: void onReset()>
<com.android.server.statusbar.StatusBarManagerService: void disableForUser(int,android.os.IBinder,java.lang.String,int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean needsFullscreenBouncer()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardBouncerChanged(boolean)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result insertChild(java.lang.Object,com.android.ide.common.rendering.api.ILayoutPullParser,int,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.systemui.statusbar.SystemBars: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.gallery3d.glrenderer.GLCanvas: void texSubImage2D(com.android.gallery3d.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int)>
<com.android.documentsui.RecentsProvider: android.net.Uri buildRecent()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getEmptyShadeViewHeight()>
<com.android.server.LockSettingsService: com.android.internal.widget.VerifyCredentialResponse verifyPattern(java.lang.String,long,int)>
<javax.obex.ClientOperation: void streamClosed(boolean)>
<com.android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setForceWindowCollapsed(boolean)>
<com.android.server.location.LocationProviderProxy: boolean isEnabled()>
<com.android.server.notification.ConditionProviders.Callback: void onUserSwitched()>
<com.android.gallery3d.common.Utils: void waitWithoutInterrupt(java.lang.Object)>
<com.android.documentsui.RootsLoader: java.util.Collection loadInBackground()>
<com.android.systemui.statusbar.policy.KeyButtonView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.volume.VolumeDialog: void setSilentMode(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: long calculateGoingToFullShadeDelay()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: int getExpandedHeight()>
<com.android.systemui.statusbar.policy.SignalController: void notifyListeners()>
<com.android.settingslib.bluetooth.PbapServerProfile: int getOrdinal()>
<com.android.systemui.statusbar.phone.NotificationPanelView: int getMaxPanelHeight()>
<com.android.tools.layoutlib.java.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>
<com.android.systemui.statusbar.BaseStatusBar: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<com.android.server.audio.MediaFocusControl.AudioFocusDeathHandler: android.os.IBinder getBinder()>
<com.android.server.am.ActivityManagerService: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<android.graphics.Path_Delegate: void setPathIterator(java.awt.geom.PathIterator)>
<com.android.server.statusbar.StatusBarManagerService: void cancelPreloadRecentApps()>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.layoutlib.bridge.android.BridgeXmlBlockParser getCurrentParser()>
<com.android.systemui.statusbar.phone.ScrimController: void animateKeyguardFadingOut(long,long,java.lang.Runnable,boolean)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.util.Map getDefaultProperties(java.lang.Object)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintAuthFailed()>
<com.android.systemui.volume.VolumeComponent: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,int[],int)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: void <init>(long)>
<com.android.systemui.recents.misc.Console: void logRawError(java.lang.String,java.lang.Exception)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<com.android.server.am.ActivityManagerService: void bootAnimationComplete()>
<com.android.server.lights.Light: void setColor(int)>
<com.android.documentsui.DocumentsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glFinish()>
<com.android.server.accounts.AccountManagerService: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[],java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackViewScroller getScroller()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void setOnNotificationPostedTrimLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo,int)>
<android.widget.Toolbar_Accessor: android.widget.ActionMenuPresenter getActionMenuPresenter(android.widget.Toolbar)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.PanelBar: void setPanelHolder(com.android.systemui.statusbar.phone.PanelHolder)>
<com.android.gallery3d.exif.ExifInterface: byte[] getTagByteValues(int)>
<com.android.systemui.statusbar.AnimatedImageView: void onDetachedFromWindow()>
<com.android.server.job.controllers.JobStatus: java.lang.String toShortString()>
<com.android.server.audio.MediaFocusControl: void setDuckingInExtPolicyAvailable(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: android.service.notification.StatusBarNotification removeNotificationViews(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.policy.RecentApplicationsBackground: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.SwipeHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.keyguard.KeyguardHostView: boolean dismiss(boolean)>
<com.android.settingslib.bluetooth.A2dpProfile: void finalize()>
<com.android.server.content.SyncStorageEngine: android.util.Pair getBackoff(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onPrintersAdded(java.util.List)>
<com.android.commands.svc.NfcCommand: void run(java.lang.String[])>
<com.android.documentsui.DocumentsActivity: com.android.documentsui.BaseActivity.State getDisplayState()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean isEnabled()>
<com.android.server.am.BatteryStatsService: void noteSyncStart(java.lang.String,int)>
<com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService getSingleton()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onScanningStateChanged(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.util.Pair inflateView(com.android.ide.common.rendering.api.ResourceReference,android.view.ViewGroup,boolean,boolean)>
<com.android.gallery3d.exif.ExifInterface: void setTags(java.util.Collection)>
<com.android.server.statusbar.StatusBarManagerService: void onClearAllNotifications(int)>
<com.android.server.pm.PackageManagerService: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>
<com.android.server.policy.PhoneWindowManager: int prepareAddWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<com.android.systemui.qs.QSTileView: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL10: void glFlush()>
<com.android.server.am.ActivityManagerService: void deleteActivityContainer(android.app.IActivityContainer)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onDiscoveryModeChanged(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onRtlPropertiesChanged(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGroupsProhibitedChanged()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void addListener(com.android.systemui.statusbar.policy.HeadsUpManager.OnHeadsUpChangedListener)>
<com.android.systemui.recents.views.TaskStackViewScroller: void <init>(android.content.Context,com.android.systemui.recents.RecentsConfiguration,com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.ComposeShader_Delegate: java.awt.Paint getJavaPaint()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onSetBackground(android.graphics.Bitmap)>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationRecord: boolean isIntercepted()>
<com.android.printspooler.ui.PageAdapter: void onOrientationChanged()>
<com.android.keyguard.KeyguardHostView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.server.content.SyncOperation: boolean isConflict(com.android.server.content.SyncOperation)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setRestingIndication(java.lang.String)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.util.List getViewInfos()>
<com.android.server.input.InputManagerService: boolean injectInputEvent(android.view.InputEvent,int)>
<com.android.systemui.statusbar.AnimatedImageView: void onAttachedToWindow()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>
<com.android.systemui.volume.SegmentedButtons: java.lang.Object getSelectedValue()>
<javax.obex.ClientOperation: void ensureNotDone()>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: java.io.OutputStream getExifWriterStream(java.lang.String)>
<com.android.tools.layoutlib.create.RenameClassAdapter: void <init>(org.objectweb.asm.ClassVisitor,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespace()>
<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String,java.lang.Throwable)>
<com.android.systemui.recents.model.RecentsTaskLoader: com.android.systemui.recents.model.RecentsTaskLoadPlan createLoadPlan(android.content.Context)>
<com.android.server.lights.Light: void setBrightness(int)>
<com.android.server.pm.Installer: int movedex(java.lang.String,java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFaceUnlockStateChanged(boolean,int)>
<javax.obex.ObexHelper: long convertToLong(byte[])>
<com.android.server.CountryDetectorService: void setCountryListener(android.location.CountryListener)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener: void onServiceConnected()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeCount()>
<com.android.server.notification.ZenModeConditions: void onConditionChanged(android.net.Uri,android.service.notification.Condition)>
<com.android.systemui.volume.VolumeDialog: void dismiss(int)>
<com.android.printspooler.widget.PrintContentView: void setOpenOptionsController(com.android.printspooler.widget.PrintContentView.OptionsStateController)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getTopPaddingOverflow()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean applyChildOrder(java.util.List)>
<com.android.server.policy.PhoneWindowManager: void setUserRotationMode(int,int)>
<com.android.systemui.statusbar.phone.NavigationBarViewTaskSwitchHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.views.RecentsView: void startExitToHomeAnimation(com.android.systemui.recents.views.ViewAnimation.TaskViewExitContext)>
<com.android.server.wm.WindowManagerService: void resumeKeyDispatching(android.os.IBinder)>
<com.android.gallery3d.glrenderer.GLCanvas: int uploadBuffer(java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context)>
<com.android.server.audio.AudioService: boolean isStreamMute(int)>
<com.android.gallery3d.common.Utils: void debug(java.lang.String,java.lang.Object[])>
<com.android.server.usb.UsbPortManager: void setPortRoles(java.lang.String,int,int,com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.BaseStatusBar: void startAssist(android.os.Bundle)>
<com.android.server.location.FusedLocationHardwareSecure: void injectDeviceContext(int)>
<com.android.systemui.statusbar.SignalClusterView: void setMobileDataEnabled(boolean)>
<com.android.systemui.statusbar.StackScrollerDecorView: void setInvisible()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.service.notification.ZenModeConfig getConfig()>
<com.android.uiautomator.core.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>
<com.android.uiautomator.core.UiCollection: void <init>(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getPeekHeight()>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.server.content.SyncOperation: boolean matchesAuthority(com.android.server.content.SyncOperation)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.testrunner.IAutomationSupport getAutomationSupport()>
<com.android.commands.svc.PowerCommand: java.lang.String shortHelp()>
<com.android.systemui.qs.tiles.IntentTile: int getMetricsCategory()>
<com.android.layoutlib.bridge.android.BridgeContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<com.android.providers.settings.SettingsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.server.DropBoxManagerService: boolean isTagEnabled(java.lang.String)>
<com.android.systemui.recents.views.TaskView: void fadeInActionButton(int,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showMessage(java.lang.String,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void fillRect(float,float,float,float,int)>
<com.android.systemui.recents.views.TaskStackView: void dispatchDraw(android.graphics.Canvas)>
<javax.obex.ClientOperation: void abort()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeightUpdated(float)>
<com.android.server.wm.WindowManagerService: int getOrientationLocked()>
<com.android.server.dreams.DreamManagerService: void onStart()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<com.android.server.ServiceWatcher: boolean start()>
<com.android.printspooler.ui.FusedPrintersProvider: void setTrackedPrinter(android.print.PrinterId)>
<com.android.server.wm.WindowManagerService: int getInitialDisplayDensity(int)>
<com.android.systemui.qs.QSTile.Host: java.util.Collection getTiles()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF)>
<javax.obex.ServerSession: javax.obex.ObexTransport getTransport()>
<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintAcquired()>
<javax.obex.ObexTransport: void connect()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.content.ComponentName getEffectsSuppressor()>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.view.View getContentView()>
<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByExactlyLPr(java.lang.String,com.android.server.pm.KeySetHandle)>
<com.android.server.content.SyncStorageEngine: java.util.ArrayList getPendingOperations()>
<com.android.server.notification.CountdownConditionProvider: void onConnected()>
<com.android.server.am.BatteryStatsService: void noteResetVideo()>
<com.android.server.job.controllers.JobStatus: void <init>(com.android.server.job.controllers.JobStatus,long,long,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onAnimationToSideEnded()>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: void receiveVerificationResponse(int)>
<com.android.photos.SimpleBitmapRegionDecoder: int getWidth()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(int[])>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchWallpaperOffsets(float,float,float,float,boolean)>
<android.view.IWindowManagerImpl: void freezeRotation(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void <init>(org.xmlpull.v1.XmlPullParser,com.android.layoutlib.bridge.android.BridgeContext,boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.OnHeadsUpChangedListener: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: boolean isUnlockingWithFingerprintAllowed()>
<com.android.systemui.recents.RecentsAppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.phone.PhoneStatusBar getBar()>
<com.android.systemui.recents.views.SwipeHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.policy.PhoneWindowManager: void setDisplayOverscan(android.view.Display,int,int,int,int)>
<com.android.server.am.UserState: void <init>(android.os.UserHandle,boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onAttachedToWindow()>
<com.android.server.job.controllers.JobStatus: boolean hasDeadlineConstraint()>
<com.android.layoutlib.bridge.util.SparseWeakArray: void clear()>
<com.android.systemui.DessertCase: void onResume()>
<com.android.server.SystemService: java.lang.Object getLocalService(java.lang.Class)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onDragDownReset()>
<com.android.gallery3d.glrenderer.BasicTexture: boolean isFlippedVertically()>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<com.android.commands.svc.PowerCommand: void run(java.lang.String[])>
<com.android.documentsui.model.DocumentInfo: void read(java.io.DataInputStream)>
<com.android.server.location.GpsLocationProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.policy.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>
<com.android.systemui.recents.views.TaskStackView.TaskStackViewCallbacks: void onTaskViewAppInfoClicked(com.android.systemui.recents.model.Task)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setAlpha(float)>
<com.android.keyguard.KeyguardSimPinView: void showUsabilityHint()>
<com.android.systemui.statusbar.policy.AccessibilityController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.location.provider.ProviderPropertiesUnbundled: com.android.location.provider.ProviderPropertiesUnbundled create(boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)>
<com.android.gallery3d.exif.ExifInterface: int getDefinedTagDefaultIfd(int)>
<android.text.OptimizingLineBreaker: void <init>(java.util.List,android.text.LineWidth,android.text.TabStops)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchFinishedGoingToSleep(int)>
<com.android.server.notification.NotificationUsageStats: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.printspooler.model.PrintSpoolerService: java.util.List getPrintJobInfos(android.content.ComponentName,int,int)>
<com.android.server.notification.ZenModeConditions: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.policy.NextAlarmController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback)>
<com.android.systemui.statusbar.tv.TvStatusBar: void maybeEscalateHeadsUp()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean)>
<com.android.server.policy.PhoneWindowManager: int focusChangedLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<android.graphics.Matrix_Delegate: java.awt.geom.AffineTransform getAffineTransform()>
<com.android.systemui.qs.QSTile: void longClick()>
<com.android.systemui.volume.ZenFooter: boolean isZen()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startLaunchTransitionTimeout()>
<com.android.keyguard.KeyguardUpdateMonitor: int getCurrentUser()>
<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties,java.lang.String)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Rect getWindowRect()>
<com.android.systemui.statusbar.KeyguardAffordanceView: boolean performClick()>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,float[],int)>
<com.android.server.wm.AppWindowAnimator: void clearThumbnail()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setFeature(java.lang.String,boolean)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerNames(java.lang.String[])>
<com.android.systemui.egg.MLand: int getGameHeight()>
<com.android.keyguard.KeyguardPatternView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.ScrimView: void setDrawAsSrc(boolean)>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,int[],int)>
<com.android.server.ConnectivityService: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int nextToken()>
<com.android.keyguard.KeyguardSimPinView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.BaseStatusBar: void refreshLayout(int)>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()>
<com.android.server.NetworkManagementService: void removeInterfaceQuota(java.lang.String)>
<com.android.systemui.DessertCase: void onStart()>
<com.android.systemui.statusbar.policy.FlashlightController: void addListener(com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener)>
<com.android.server.wm.WindowManagerService: void enableScreenIfNeeded()>
<com.android.systemui.statusbar.policy.SignalCallbackAdapter: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<com.android.server.wm.WindowManagerService: void setStrictModeVisualIndicatorPreference(java.lang.String)>
<com.android.systemui.statusbar.NotificationContentView: void setHeadsUpChild(android.view.View)>
<com.android.systemui.statusbar.phone.DozeParameters.PulseSchedule: java.lang.String toString()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void finishKeyguardFadingAway()>
<javax.microedition.khronos.opengles.GL11: void glNormalPointer(int,int,int)>
<com.android.server.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAuthority(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.server.NetworkScoreService: boolean clearScores()>
<com.android.server.DropBoxManagerService: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>
<com.android.server.pm.Installer: int remove(java.lang.String,java.lang.String,int)>
<com.android.server.location.GpsMeasurementsProvider: void onMeasurementsAvailable(android.location.GpsMeasurementsEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setPanelExpanded(boolean)>
<android.view.WindowCallback: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.graphics.Path_Delegate: void reset()>
<com.android.settingslib.bluetooth.MapProfile: boolean isAutoConnectable()>
<com.android.server.content.SyncStorageEngine: java.util.ArrayList getSyncStatus()>
<com.android.server.statusbar.StatusBarManagerService: void appTransitionCancelled()>
<com.android.server.wm.WindowManagerService: void systemReady()>
<com.android.commands.sm.Sm: void runListVolumes()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: boolean loadInBackground()>
<com.android.systemui.qs.tiles.BluetoothTile: void handleSecondaryClick()>
<com.android.printspooler.ui.PageAdapter: boolean isOpened()>
<com.android.commands.dpm.Dpm: void onShowUsage(java.io.PrintStream)>
<com.android.uiautomator.core.UiObject: int getChildCount()>
<com.android.layoutlib.bridge.bars.Config: boolean showOnScreenNavBar(int)>
<android.view.WindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<com.android.systemui.keyguard.KeyguardViewMediator: void keyguardDone(boolean)>
<com.android.statementservice.retriever.Relation: com.android.statementservice.retriever.Relation create(java.lang.String)>
<com.android.server.location.ComprehensiveCountryDetector: boolean isAirplaneModeOff()>
<com.android.server.wm.BlackFrame: void printTo(java.lang.String,java.io.PrintWriter)>
<com.android.tools.layoutlib.create.ICreateInfo: java.util.Map getInjectedMethodsMap()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquationSeparate(int,int)>
<com.android.server.job.JobSchedulerService: void cancelJob(int,int)>
<com.android.gallery3d.exif.ExifInterface: void removeCompressedThumbnail()>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchAppVisibility(boolean)>
<com.android.server.wm.WindowManagerService: void unregisterPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])>
<com.android.settingslib.datetime.ZoneGetter: java.util.List getZonesList(android.content.Context)>
<com.android.server.am.ProcessStatsService: void shutdownLocked()>
<com.android.keyguard.KeyguardPatternView: void onFinishInflate()>
<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.location.fused.FusionEngine: void switchUser()>
<com.android.systemui.recents.Recents: void hideRecents(boolean,boolean)>
<com.android.server.pm.PackageManagerService: boolean addPermission(android.content.pm.PermissionInfo)>
<com.android.layoutlib.bridge.util.ReflectionUtils: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: boolean considerDesc(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onPanelTrackingStarted()>
<com.android.systemui.keyguard.KeyguardViewMediator: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.audio.AudioService: void unregisterAudioPolicyAsync(android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.systemui.statusbar.policy.Clock: void onDetachedFromWindow()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void unregisterMoveCallback(android.content.pm.PackageManager.MoveCallback)>
<com.android.systemui.statusbar.NotificationContentView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasTranslationYChangedFrom(float)>
<javax.obex.ServerRequestHandler: int onConnect(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHeightRange(int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.server.pm.PackageManagerService: int getPermissionFlags(java.lang.String,java.lang.String,int)>
<com.android.server.notification.PropConfig: int getInt(android.content.Context,java.lang.String,int)>
<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)>
<android.graphics.PathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.server.ConnectivityService: void setAirplaneMode(boolean)>
<com.android.server.MountServiceIdler: void scheduleIdlePass(android.content.Context)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfOES(float,float,float,float,float)>
<com.android.server.SystemConfig: android.util.ArrayMap getSharedLibraries()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.server.am.DumpHeapProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.location.provider.FusedProvider: android.os.IBinder getBinder()>
<com.android.server.usage.UnixCalendar: void addMonths(int)>
<com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>
<com.android.keyguard.KeyguardUpdateMonitor: void sendKeyguardReset()>
<com.android.systemui.statusbar.NotificationContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: com.android.photos.SimpleBitmapRegionDecoderWrapper newInstance(java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL10: void glClearDepthx(int)>
<com.android.server.wm.AppTransition: void setCurrentUser(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void setNeedsInput(boolean)>
<com.android.systemui.statusbar.CommandQueue: void topAppWindowChanged(boolean)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseOutDuration()>
<com.android.gallery3d.glrenderer.BitmapTexture: void <init>(android.graphics.Bitmap)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.SessionParams)>
<javax.obex.PrivateOutputStream: boolean isClosed()>
<com.android.server.am.ActivityManagerService: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.os.Looper_Accessor: void cleanupThread()>
<com.android.systemui.volume.VolumePrefs: void unregisterCallbacks(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.settingslib.applications.ApplicationsState.Session: void resume()>
<com.android.systemui.settings.ToggleSeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.wm.WindowManagerService: void registerPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<com.android.server.content.SyncStorageEngine.EndPoint: java.lang.String toString()>
<com.android.server.audio.MediaFocusControl: void setRemoteStreamVolume(int)>
<com.android.server.LocationManagerService: int resolutionLevelToOp(int)>
<com.android.server.location.GpsLocationProvider: void reportNiNotification(int,int,int,int,int,java.lang.String,java.lang.String,int,int,java.lang.String)>
<javax.obex.PrivateOutputStream: void close()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isGoingToNotificationShade()>
<com.android.photos.BitmapRegionTileSource: int getTileSize()>
<com.android.keyguard.PasswordTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.doze.DozeLog: void traceFling(boolean,boolean,boolean,boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.android.systemui.statusbar.CommandQueue: void showScreenPinningRequest()>
<com.android.server.media.MediaRouterService: void registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int)>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[])>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void updateIsSmallScreen(int)>
<com.android.systemui.recents.RecentsActivity: void onTaskLaunchFailed()>
<com.android.systemui.statusbar.CommandQueue: void disable(int,int)>
<com.android.systemui.statusbar.StatusBarIconView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.recents.views.TaskViewHeader: void onDraw(android.graphics.Canvas)>
<com.android.server.pm.PackageManagerService: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<com.android.server.content.SyncStorageEngine.EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>
<android.graphics.SumPathEffect_Delegate: boolean isSupported()>
<com.android.systemui.statusbar.policy.CastController: void addCallback(com.android.systemui.statusbar.policy.CastController.Callback)>
<com.android.settingslib.TetherUtil: boolean isWifiTetherEnabled(android.content.Context)>
<com.android.gallery3d.exif.ExifInterface: boolean setTagValue(int,int,java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getApplicationEnabledSetting(java.lang.String)>
<com.android.server.policy.PhoneWindowManager: void layoutWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager registerStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.StatusBarWindowManager,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.FingerprintUnlockController)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingOrSelfPermission(java.lang.String)>
<com.android.systemui.volume.VolumeDialog: void destroy()>
<com.android.captiveportallogin.CaptivePortalLoginActivity: void onBackPressed()>
<com.android.server.am.ActivityManagerService: void enterSafeMode()>
<android.graphics.Bitmap_Delegate: boolean hasAlpha()>
<com.android.server.pm.PackageManagerService: void revokeRuntimePermission(java.lang.String,java.lang.String,int)>
<com.android.server.location.GpsLocationProvider: android.location.IGpsStatusProvider getGpsStatusProvider()>
<com.android.server.location.PassiveProvider: com.android.internal.location.ProviderProperties getProperties()>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector className(java.lang.Class)>
<com.android.systemui.statusbar.phone.QSTileHost: void <init>(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar,com.android.systemui.statusbar.policy.BluetoothController,com.android.systemui.statusbar.policy.LocationController,com.android.systemui.statusbar.policy.RotationLockController,com.android.systemui.statusbar.policy.NetworkController,com.android.systemui.statusbar.policy.ZenModeController,com.android.systemui.statusbar.policy.HotspotController,com.android.systemui.statusbar.policy.CastController,com.android.systemui.statusbar.policy.FlashlightController,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.KeyguardMonitor,com.android.systemui.statusbar.policy.SecurityController)>
<android.view.IWindowManagerImpl: void setForcedDisplaySize(int,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onStartedWakingUp()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void instantFinishAnimation()>
<com.android.server.accounts.AccountManagerService: boolean removeAccountExplicitly(android.accounts.Account)>
<com.android.server.wm.WindowManagerService: void clearForcedDisplayDensity(int)>
<com.android.gallery3d.exif.ExifTag: int getComponentCount()>
<android.graphics.BlendComposite: android.graphics.BlendComposite.BlendingMode getMode()>
<com.android.systemui.SwipeHelper.Callback: void onBeginDrag(android.view.View)>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onKeyguardViewManagerStatesUpdated()>
<com.android.server.audio.AudioService.VolumeStreamState: int getIndex(int)>
<com.android.systemui.statusbar.NotificationBackgroundView: void setRippleColor(int)>
<com.android.layoutlib.bridge.Bridge: void cleanupThread()>
<com.android.server.notification.ZenModeConditions: void onBootComplete()>
<com.android.server.accounts.AccountManagerService: android.accounts.AccountAndUser[] getRunningAccounts()>
<com.android.gallery3d.glrenderer.BasicTexture: void yield()>
<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog.Monitor)>
<com.android.systemui.recents.misc.Console: void logStartTracingTime(boolean,java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: java.util.List getNotificationChildren()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord getItem(int)>
<com.android.server.audio.AudioService.VolumeStreamState: int getStreamType()>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onStart()>
<com.android.systemui.recents.views.TaskView: void onMeasure(int,int)>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinitionForTag(short,short,int,int)>
<com.android.commands.requestsync.RequestSync: void main(java.lang.String[])>
<com.android.server.pm.Installer: int fixUid(java.lang.String,int,int)>
<com.android.server.notification.RankingConfig: boolean getPackagePeekable(java.lang.String,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelFullyOpened(com.android.systemui.statusbar.phone.PanelView)>
<com.android.server.wm.WindowManagerService: void executeAppTransition()>
<com.android.layoutlib.bridge.bars.StatusBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.resources.Density,boolean,boolean,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean shouldDelayChildPressedState()>
<com.android.documentsui.DocumentsToolBar.OnActionViewCollapsedListener: void onActionViewCollapsed()>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator,com.android.settingslib.animation.AppearAnimationUtils.RowTranslationScaler)>
<com.android.server.voiceinteraction.SoundTriggerHelper: void onServiceDied()>
<com.android.server.connectivity.Vpn: android.net.NetworkInfo getNetworkInfo()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String,boolean)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,java.lang.String,android.app.Notification,boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void startPreHideAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.PanelView: void setTouchDisabled(boolean)>
<com.android.systemui.GuestResumeSessionReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.documentsui.model.DocumentStack: java.lang.String buildKey()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAnimationToSideStarted(boolean,float,float)>
<com.android.gallery3d.exif.ExifInterface: short getDefinedTagType(int)>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinition(short,int)>
<com.android.server.InputMethodManagerService: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient,int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isKeyguardShowing()>
<android.view.accessibility.IAccessibilityInteractionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>
<com.android.systemui.statusbar.ExpandableView: int getMaxContentHeight()>
<com.android.systemui.statusbar.stack.AnimationFilter: void applyCombination(java.util.ArrayList)>
<com.android.uiautomator.core.UiObject: android.graphics.Rect getVisibleBounds()>
<com.android.documentsui.SortingCursorWrapper: double getDouble(int)>
<com.android.server.policy.ImmersiveModeConfirmation: boolean onPowerKeyDown(boolean,long,boolean)>
<com.android.server.pm.KeySetManagerService: boolean isIdValidKeySetId(long)>
<com.android.systemui.statusbar.ServiceMonitor.Callbacks: void onNoService()>
<com.example.android.networkusage.NetworkActivity: void onCreate(android.os.Bundle)>
<com.android.server.am.ActivityManagerService: void setUsageStatsManager(android.app.usage.UsageStatsManagerInternal)>
<javax.obex.Operation: java.io.InputStream openInputStream()>
<com.android.systemui.statusbar.policy.BluetoothController: void addStateChangedCallback(com.android.systemui.statusbar.policy.BluetoothController.Callback)>
<com.android.settingslib.bluetooth.HidProfile: boolean isConnectable()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void <init>(android.content.Context)>
<android.view.IWindowManagerImpl: void keyguardGoingAway(boolean,boolean)>
<com.android.uiautomator.core.UiObject: boolean isCheckable()>
<com.android.systemui.statusbar.policy.NetworkController.MobileDataController: void setMobileDataEnabled(boolean)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,int[],int)>
<com.android.server.LocationManagerService: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.systemui.qs.SecureSetting: void setListening(boolean)>
<android.graphics.Canvas_Delegate: android.graphics.DrawFilter_Delegate getDrawFilter()>
<com.android.statementservice.retriever.AbstractAssetMatcher: boolean matches(com.android.statementservice.retriever.AbstractAsset)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getCombinedGroupId(long)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setMaxSearchSwipes(int)>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: boolean hasOverlappingRendering()>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context)>
<com.android.systemui.recents.views.SystemBarScrimViews: void startExitRecentsAnimation()>
<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>
<com.android.server.notification.ManagedServices.UserProfiles: void updateCache(android.content.Context)>
<com.android.server.pm.PackageManagerService: java.util.List queryInstrumentation(java.lang.String,int)>
<com.android.systemui.volume.VolumeDialog: void setShowHeaders(boolean)>
<android.view.IWindowManagerImpl: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setStayOnSetting(int)>
<com.android.keyguard.KeyguardSimPukView: void startAppearAnimation()>
<com.android.layoutlib.bridge.android.BridgeContext: int getWallpaperDesiredMinimumHeight()>
<javax.microedition.khronos.opengles.GL10: void glDisableClientState(int)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.HotspotController getHotspotController()>
<com.android.proxyhandler.ProxyService: void onDestroy()>
<com.android.layoutlib.bridge.impl.GcSnapshot: java.awt.geom.AffineTransform getTransform()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurnedOn()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setCurrentUser(int)>
<com.android.systemui.statusbar.ExpandableView: void setActualHeight(int,boolean)>
<com.android.systemui.statusbar.policy.SignalController: int getCurrentIconId()>
<com.android.location.provider.FusedLocationHardware: void injectDeviceContext(int)>
<com.android.server.am.BatteryStatsService: void noteNetworkStatsEnabled()>
<com.android.gallery3d.glrenderer.GLCanvas: void rotate(float,float,float,float)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void switchIndication(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void startKeyguardExitAnimation(long,long)>
<com.android.server.AppOpsService: void shutdown()>
<com.android.server.location.LocationProviderProxy: long getStatusUpdateTime()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getBottomMostNotificationBottom()>
<com.android.layoutlib.bridge.util.SparseWeakArray: java.lang.Object valueAt(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDismissAllInProgress(boolean)>
<android.content.res.BridgeResources: java.lang.String getResourceTypeName(int)>
<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<android.view.WindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<com.android.documentsui.DirectoryFragment: void showRecentsOpen(android.app.FragmentManager,int)>
<com.android.server.display.DisplayManagerService: void <init>(android.content.Context)>
<com.android.server.policy.WindowOrientationListener: int getProposedRotation()>
<com.android.server.statusbar.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>
<com.android.printspooler.widget.EmbeddedContentContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printspooler.widget.PrintContentView: void closeOptions()>
<com.android.systemui.qs.QSDetailItems: void setItems(com.android.systemui.qs.QSDetailItems.Item[])>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintAuthenticated(int)>
<com.android.systemui.recents.RecentsActivity: void onStart()>
<com.android.server.am.BatteryStatsService: void noteMobileRadioPowerState(int,long)>
<com.android.server.twilight.TwilightState: boolean isNight()>
<com.android.server.am.CompatModePackages: void handlePackageAddedLocked(java.lang.String,boolean)>
<com.android.systemui.volume.VolumeDialogComponent: void <init>(com.android.systemui.SystemUI,android.content.Context,android.os.Handler,com.android.systemui.statusbar.policy.ZenModeController)>
<com.android.systemui.usb.UsbResolverActivity: void onDestroy()>
<com.android.systemui.settings.BrightnessDialog: void onStop()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.phone.LockIcon getLockIcon()>
<com.android.location.provider.GmsFusedBatchOptions: void setMaxPowerAllocationInMW(double)>
<com.android.server.am.ActivityManagerService: void appNotRespondingViaProvider(android.os.IBinder)>
<com.android.systemui.statusbar.phone.PanelView: void expand()>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffsetx(int,int)>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()>
<com.android.server.hdmi.HdmiCecFeatureAction.ActionTimer: void sendTimerMessage(int,long)>
<com.android.layoutlib.bridge.util.ReflectionUtils: boolean isInstanceOf(java.lang.Object,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<com.android.server.AnyMotionDetector: int getStationaryStatus()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void endRenderTarget()>
<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
<com.android.commands.dpm.Dpm: void onRun()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyInterruptionFilterChanged(int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void <init>(android.view.View)>
<com.android.systemui.statusbar.BaseStatusBar: void addNotificationViews(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.CountryDetectorService: void <init>(android.content.Context)>
<com.android.server.statusbar.StatusBarManagerInternal: void notificationLightPulse(int,int,int)>
<com.android.systemui.recents.views.RecentsView: boolean unfilterFilteredStacks()>
<com.android.systemui.statusbar.phone.PanelView: boolean hasConflictingGestures()>
<com.android.server.VibratorService: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getGroupId(int)>
<com.android.server.media.MediaRouterService: void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean)>
<com.android.photos.views.TiledImageView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.qs.QSFooter: void onClick(android.view.View)>
<com.android.layoutlib.bridge.impl.SystemViewInfo: void <init>(java.lang.String,java.lang.Object,int,int,int,int)>
<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()>
<com.android.server.usb.UsbAlsaManager: java.util.ArrayList getConnectedDevices()>
<com.android.server.audio.MediaFocusControl: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)>
<com.android.server.am.ActivityManagerService: java.util.List getAllStackInfos()>
<com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.Configuration getConfiguration()>
<com.android.server.twilight.TwilightState: long getTodaySunrise()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPrimaryStorageCandidateVolumes()>
<com.android.server.trust.TrustAgentWrapper: void onUnlockAttempt(boolean)>
<com.android.future.usb.UsbAccessory: boolean equals(java.lang.Object)>
<com.android.settingslib.bluetooth.A2dpProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.printspooler.ui.PrintActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.layoutlib.bridge.util.DynamicIdMap: com.android.util.Pair resolveId(int)>
<android.graphics.SumPathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.tools.layoutlib.create.OverrideMethod: float invokeF(java.lang.String,boolean,java.lang.Object)>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: long getSystemLongPressTime()>
<android.view.Choreographer_Delegate: float getRefreshRate()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setEmptyDragAmount(float)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.server.content.ContentService: void systemReady()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleDeviceProvisioned()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void clearPackagePreferredActivities(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<com.android.systemui.volume.VolumeDialogMotion: void <init>(android.app.Dialog,android.view.View,android.view.ViewGroup,android.view.View,com.android.systemui.volume.VolumeDialogMotion.Callback)>
<com.android.server.content.SyncStorageEngine: java.util.ArrayList getCopyOfAllAuthoritiesWithSyncStatus()>
<com.android.layoutlib.bridge.util.SparseWeakArray: void delete(long)>
<com.android.commands.uiautomator.Launcher.Command: void <init>(java.lang.String)>
<com.android.systemui.qs.QSPanel: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.tools.layoutlib.create.CreateInfo: java.util.Map getInjectedMethodsMap()>
<com.android.printspooler.model.PrintSpoolerProvider: com.android.printspooler.model.PrintSpoolerService getSpooler()>
<com.android.statementservice.retriever.WebContent: void <init>(java.lang.String,java.lang.Long)>
<com.android.tools.layoutlib.java.Objects: int hashCode(java.lang.Object)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.media.projection.MediaProjectionManagerService: void monitor()>
<com.android.server.am.ActivityManagerService: void resizeStack(int,android.graphics.Rect)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: boolean isForegroundActivity()>
<android.view.IWindowManagerImpl: android.os.IBinder asBinder()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void onScreenTurnedOff()>
<com.android.keyguard.NumPadKey: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.egg.MLand: boolean willNotDraw()>
<com.android.systemui.statusbar.policy.LocationController: boolean isLocationEnabled()>
<com.android.server.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.documentsui.FailureDialogFragment: void show(android.app.FragmentManager,int,java.util.ArrayList,com.android.documentsui.model.DocumentStack)>
<com.android.externalstorage.ExternalStorageProvider: boolean onCreate()>
<com.android.systemui.statusbar.policy.MobileSignalController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.NetworkControllerImpl.Config,boolean,android.telephony.TelephonyManager,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl,android.telephony.SubscriptionInfo,com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults,android.os.Looper)>
<com.android.layoutlib.bridge.bars.StatusBar: android.widget.TextView getStyleableTextView()>
<com.android.systemui.statusbar.NotificationData: void updateRanking(android.service.notification.NotificationListenerService.RankingMap)>
<android.graphics.FontFamily_Delegate: void setFontLocation(java.lang.String)>
<com.android.server.trust.TrustArchive: void logManagingTrust(int,android.content.ComponentName,boolean)>
<com.android.systemui.qs.tiles.RotationLockTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void systemReady()>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>
<com.android.systemui.recents.RecentsActivity: void onTaskResize(com.android.systemui.recents.model.Task)>
<com.android.keyguard.KeyguardPinBasedInputView: void reset()>
<com.android.systemui.recents.ScreenPinningRequest: void clearPrompt()>
<com.android.server.restrictions.RestrictionsManagerService: void <init>(android.content.Context)>
<com.android.server.fingerprint.FingerprintUtils: java.util.List getFingerprintsForUser(android.content.Context,int)>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.graphics.drawable.Drawable getDrawable(com.android.ide.common.rendering.api.ResourceValue,com.android.layoutlib.bridge.android.BridgeContext,android.content.res.Resources.Theme)>
<com.android.future.usb.UsbManager: void requestPermission(com.android.future.usb.UsbAccessory,android.app.PendingIntent)>
<com.android.systemui.recents.misc.Utilities: float computeContrastBetweenColors(int,int)>
<com.android.settingslib.bluetooth.HidProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.pm.PackageManagerService: java.util.List getAllPermissionGroups(int)>
<com.android.location.provider.FusedLocationHardware: boolean supportsDiagnosticDataInjection()>
<com.android.server.accessibility.EventStreamTransformation: void onDestroy()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean isRestricted()>
<com.android.gallery3d.exif.ExifInterface: java.lang.Byte getTagByteValue(int,int)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.fingerprint.FingerprintService: void handleEnrollResult(long,int,int,int)>
<com.android.systemui.qs.QSTile.ResourceIcon: java.lang.String toString()>
<com.android.server.ConnectivityService: void setVpnPackageAuthorization(java.lang.String,int,boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>
<com.android.keyguard.KeyguardPINView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.location.fused.FusedLocationProvider: void onDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.GlobalSetting: int getValue()>
<com.android.systemui.statusbar.policy.KeyguardMonitor.Callback: void onKeyguardChanged()>
<com.android.server.connectivity.NetworkDiagnostics: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.tools.layoutlib.create.CreateInfo: java.util.Set getExcludedClasses()>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onZenChanged(int)>
<com.android.keyguard.ViewMediatorCallback: void readyForKeyguardDone()>
<com.android.documentsui.ColumnAdapter: int getCount()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setBouncerShowing(boolean)>
<com.example.android.networkusage.NetworkActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.gallery3d.exif.ExifInterface: int setTagDefinition(short,int,short,short,int[])>
<android.graphics.Matrix_Delegate: android.graphics.Matrix_Delegate getDelegate(long)>
<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>
<com.android.systemui.statusbar.NotificationData: void add(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context)>
<com.android.systemui.statusbar.BaseStatusBar: void updateNotifications()>
<com.android.server.pm.UserManagerService: void prepareUserDirectory(android.content.Context,java.lang.String,int)>
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<com.android.server.pm.PackageInstallerService: void uninstall(java.lang.String,java.lang.String,int,android.content.IntentSender,int)>
<com.android.systemui.egg.MLand: int getGameWidth()>
<com.android.layoutlib.bridge.util.ReflectionUtils.ReflectionException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>
<com.android.server.pm.Installer: int fixUid(java.lang.String,java.lang.String,int,int)>
<android.content.res.Resources_Theme_Delegate: com.android.layoutlib.bridge.impl.DelegateManager getDelegateManager()>
<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: int getIcon(com.android.settingslib.wifi.AccessPoint)>
<com.android.layoutlib.bridge.android.BridgeContext: void pushParser(com.android.layoutlib.bridge.android.BridgeXmlBlockParser)>
<com.android.server.content.SyncQueue: void onBackoffChanged(com.android.server.content.SyncStorageEngine.EndPoint,long)>
<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionInPlace(java.lang.String,int)>
<com.android.server.notification.NotificationRecord: java.lang.String getKey()>
<com.android.providers.settings.SettingsHelper: void restoreValue(android.content.Context,android.content.ContentResolver,android.content.ContentValues,android.net.Uri,java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardSimPukView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributePrefix(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onFinishedGoingToSleep(int)>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: int getChargingSpeed(int,int)>
<com.android.gallery3d.exif.ExifInterface: java.util.List getTagsForIfdId(int)>
<com.android.layoutlib.bridge.impl.ParserFactory: org.xmlpull.v1.XmlPullParser create(java.io.File)>
<com.android.uiautomator.core.UiScrollable: boolean flingToEnd(int)>
<android.graphics.Gradient_Delegate.GradientPaint: int getTransparency()>
<com.android.uiautomator.core.UiScrollable: boolean scrollTextIntoView(java.lang.String)>
<com.android.server.display.OverlayDisplayWindow.Listener: void onStateChanged(int)>
<com.android.server.accounts.AccountManagerService: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>
<com.android.keyguard.KeyguardHostView: void dispatchDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.SignalClusterView: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.doze.DozeLog: void traceDozing(android.content.Context,boolean)>
<com.android.server.webkit.WebViewUpdateService: void onStart()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void getStackScrollState(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.tuner.TunerFragment: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.policy.PreviewInflater: void <init>(android.content.Context,com.android.internal.widget.LockPatternUtils)>
<com.android.gallery3d.exif.ExifTag: boolean isValidType(short)>
<com.android.server.policy.PhoneWindowManager: boolean allowAppAnimationsLw()>
<com.android.uiautomator.core.UiDevice: void setCompressedLayoutHeirarchy(boolean)>
<com.android.documentsui.SectionedListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.StatusBarIconView createIcon(android.service.notification.StatusBarNotification)>
<com.android.server.notification.ScheduleConditionProvider: void onRequestConditions(int)>
<com.android.server.am.ActivityManagerService: void showLockTaskEscapeMessage(android.os.IBinder)>
<com.android.documentsui.model.DocumentInfo: boolean isCreateSupported()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitching(int)>
<com.android.systemui.qs.QSDetailClipper: void <init>(android.view.View)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: boolean isTransformedTouchPointInView(float,float,android.view.View)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.qs.QSTile: void handleLongClick()>
<com.android.documentsui.RootsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<javax.microedition.khronos.opengles.GL10: void glLogicOp(int)>
<android.view.WindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onPrintersRemoved(java.util.List)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void dump(java.io.PrintWriter)>
<com.android.statementservice.retriever.Relation: java.lang.String toString()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<com.android.documentsui.RecentsProvider: android.net.Uri buildResume(java.lang.String)>
<com.android.systemui.statusbar.policy.BatteryController: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.audio.AudioService: void setRingerModeExternal(int,java.lang.String)>
<com.android.systemui.statusbar.ActivatableNotificationView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.ServiceWatcher: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.systemui.power.PowerNotificationWarnings: void <init>(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.systemui.statusbar.NotificationTemplateViewWrapper: void fadeGrayscale(android.widget.ImageView,boolean,long)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean canHaveBottomDecor()>
<com.android.systemui.statusbar.phone.PanelView: float getPeekHeight()>
<com.android.server.location.LocationProviderProxy: java.lang.String getName()>
<com.android.gallery3d.common.Utils: long crc64Long(byte[])>
<com.android.systemui.keyguard.KeyguardViewMediator: void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)>
<com.android.systemui.power.PowerUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.ScreenPinningRequest: void onConfigurationChanged()>
<com.android.layoutlib.bridge.android.BridgeContext: void revokeUriPermission(android.net.Uri,int)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void setRotationLocked(boolean)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void unregisterContentObserver(android.database.ContentObserver)>
<com.android.location.provider.ActivityRecognitionEvent: void <init>(java.lang.String,int,long)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setIcon(java.lang.String)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: com.android.location.provider.ActivityRecognitionProvider getActivityRecognitionProvider()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void dismiss()>
<com.android.externalstorage.ExternalStorageProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.content.ContentService: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)>
<com.android.systemui.settings.ToggleSlider.Listener: void onInit(com.android.systemui.settings.ToggleSlider)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onDismiss()>
<com.android.server.pm.PackageManagerService: java.lang.String getDefaultBrowserPackageName(int)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,int,boolean)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String,boolean)>
<javax.obex.BaseStream: boolean continueOperation(boolean,boolean)>
<com.android.server.InputMethodManagerService: void hideMySoftInput(android.os.IBinder,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean hasUserChangedExpansion()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.Relation getRelation()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean setScanMode(int,int)>
<com.android.systemui.recents.RecentsActivity: void onBackPressed()>
<com.android.systemui.qs.QSPanel: void setBrightnessMirror(com.android.systemui.statusbar.policy.BrightnessMirrorController)>
<com.android.systemui.statusbar.policy.BatteryController: void addStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.server.pm.PackageManagerService: boolean isUidPrivileged(int)>
<com.android.systemui.recents.model.Task.ComponentNameKey: void <init>(android.content.ComponentName,int)>
<com.android.systemui.statusbar.ExpandableView: boolean isContentExpandable()>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateHeight()>
<com.android.server.location.FlpHardwareProvider: boolean isSupported()>
<com.android.providers.settings.SettingsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getOverriddenMethods()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isTrackingBlocked()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setKeyguardUserSwitcherShowing(boolean,boolean)>
<android.graphics.Canvas_Delegate: android.graphics.Canvas_Delegate getDelegate(android.graphics.Canvas)>
<com.android.documentsui.RootsCache: java.util.Collection getRootsBlocking()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isPinned()>
<com.android.server.notification.EventConditionProvider: android.service.notification.IConditionProvider asInterface()>
<com.android.keyguard.KeyguardPINView: boolean hasOverlappingRendering()>
<com.android.layoutlib.bridge.impl.DelegateManager: long addNewDelegate(java.lang.Object)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getSimBasedCountry()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void setScene(com.android.ide.common.rendering.api.RenderSession)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.BaseStatusBar: void notifyUserAboutHiddenNotifications()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void hideMirror()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService main(android.content.Context,com.android.server.input.InputManagerService,boolean,boolean,boolean)>
<com.android.printspooler.ui.SelectPrinterActivity.AddPrinterAlertDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.statusbar.NotificationContentView: void reset(boolean)>
<com.android.settingslib.wifi.WifiTracker: boolean doSavedNetworksExist()>
<com.android.commands.svc.WifiCommand: java.lang.String longHelp()>
<com.android.systemui.recents.misc.Console: void logStackTrace(java.lang.String,int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void updateHeadsUp(java.lang.String,com.android.systemui.statusbar.NotificationData.Entry,boolean,boolean)>
<com.google.android.maps.MapView: void setStreetView(boolean)>
<com.android.systemui.recents.RecentsActivity: void onExitToHomeAnimationTriggered()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.server.connectivity.Nat464Xlat: void start()>
<com.android.server.audio.AudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>
<com.android.settingslib.bluetooth.PanProfile: void finalize()>
<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<com.android.server.job.StateChangedListener: void onRunJobNow(com.android.server.job.controllers.JobStatus)>
<com.android.commands.uiautomator.RunTestCommand: com.android.uiautomator.testrunner.UiAutomatorTestRunner getRunner()>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: boolean isActive()>
<com.android.gallery3d.exif.ExifTag: int[] getValueAsInts()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableView: void notifyHeightChanged(boolean)>
<com.android.tools.layoutlib.java.Charsets: void isoLatin1BytesToChars(byte[],int,int,char[])>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void setLocation(android.view.View)>
<com.android.layoutlib.bridge.util.DynamicIdMap: void reset(int)>
<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppInternal(int,java.lang.String,long,int,boolean,java.lang.String)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardLocked()>
<com.android.server.pm.PackageManagerException: com.android.server.pm.PackageManagerException from(android.content.pm.PackageParser.PackageParserException)>
<javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitExceptionType()>
<com.android.server.voiceinteraction.DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<com.android.server.pm.PackageManagerService: boolean isProtectedBroadcast(java.lang.String)>
<com.android.uiautomator.core.UiObject: java.lang.String getText()>
<com.android.server.notification.ZenLog: void traceListenerHintsChanged(int,int,int)>
<com.android.keyguard.KeyguardSimPinView: boolean shouldLockout(long)>
<com.android.systemui.statusbar.BaseStatusBar: android.view.View updateNotificationVetoButton(android.view.View,android.service.notification.StatusBarNotification)>
<android.view.IWindowManagerImpl: void updateRotation(boolean,boolean)>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>
<com.android.server.location.GpsNavigationMessageProvider: void onNavigationMessageAvailable(android.location.GpsNavigationMessageEvent)>
<android.view.IWindowManagerImpl: boolean isKeyguardLocked()>
<com.android.server.wm.WindowManagerService: void keyguardWaitingForActivityDrawn()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void dragRecipientEntered(android.view.IWindow)>
<com.android.uiautomator.core.UiAutomationShellWrapper: void setRunAsMonkey(boolean)>
<com.android.server.LockSettingsStrongAuth: void removeUser(int)>
<com.android.systemui.statusbar.BaseStatusBar: void setShowLockscreenNotifications(boolean)>
<com.android.server.job.controllers.JobStatus: int getNumFailures()>
<com.android.layoutlib.bridge.bars.NavigationBar: android.widget.TextView getStyleableTextView()>
<com.android.server.location.GeocoderProxy: java.lang.String getConnectedPackageName()>
<com.android.server.media.MediaSessionStack: void removeSession(com.android.server.media.MediaSessionRecord)>
<com.android.server.InputMethodManagerService: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>
<com.android.printspooler.widget.PreviewPageFrame: void setSelected(boolean,boolean)>
<com.android.systemui.statusbar.CommandQueue: void setWindowState(int,int)>
<com.android.systemui.statusbar.phone.BarTransitions: java.lang.String modeToString(int)>
<com.android.server.am.ProcessStatsService: void writeStateSyncLocked()>
<com.android.server.camera.CameraService: boolean handleMessage(android.os.Message)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setActionAcknowledgmentTimeout(long)>
<com.android.server.pm.PackageKeySetData: void addDefinedKeySet(long,java.lang.String)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.keyguard.KeyguardPasswordView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setUserSwitcherController(com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.server.content.SyncManager: void scheduleSyncOperation(com.android.server.content.SyncOperation)>
<com.android.server.am.BatteryStatsService: void initPowerManagement()>
<android.view.IWindowManagerImpl: void removeRotationWatcher(android.view.IRotationWatcher)>
<com.android.server.statusbar.StatusBarManagerInternal: void notificationLightOff()>
<com.android.systemui.qs.SecureSetting: void setUserId(int)>
<com.android.location.provider.FusedLocationHardware: int getVersion()>
<com.android.systemui.Prefs: void registerListener(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String,java.lang.String)>
<com.android.settingslib.wifi.AccessPoint: boolean isPasspoint()>
<com.android.settingslib.bluetooth.HidProfile: int getHidClassDrawable(android.bluetooth.BluetoothClass)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileEnabled(android.content.ComponentName)>
<com.android.systemui.statusbar.SpeedBumpView: void performAddAnimation(long,long)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void reset()>
<com.android.systemui.statusbar.NotificationBackgroundView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.FlashlightController getFlashlightController()>
<com.android.systemui.settings.BrightnessController: void unregisterCallbacks()>
<com.android.server.am.BatteryStatsService: void noteStartSensor(int,int)>
<com.android.systemui.DessertCaseDream: void onAttachedToWindow()>
<com.android.printspooler.ui.PrintErrorFragment.OnActionListener: void onActionPerformed()>
<android.view.IWindowManagerImpl: void setAnimationScales(float[])>
<com.android.server.policy.GlobalActions.Action: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>
<com.android.systemui.qs.tiles.WifiTile: boolean shouldAnnouncementBeDelayed()>
<com.android.documentsui.FilteringCursorWrapper: int getInt(int)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseDuration(boolean)>
<com.android.server.notification.NotificationRecord: boolean isRecentlyIntrusive()>
<android.graphics.ColorMatrixColorFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.AppOpsService: void publish(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onStateChanged(boolean,boolean)>
<com.android.systemui.recents.model.KeyStoreLruCache: void <init>(int)>
<com.android.systemui.statusbar.phone.IconMerger: void setOverflowIndicator(android.view.View)>
<com.android.server.am.ActivityManagerService: boolean isTopActivityImmersive()>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: int getPageIndex()>
<com.android.server.content.SyncStorageEngine: long getDelayUntilTime(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Integer getTagIntValue(int,int)>
<com.android.location.provider.ActivityRecognitionProvider: void registerSink(com.android.location.provider.ActivityRecognitionProvider.Sink)>
<com.android.systemui.volume.MediaSessions: void destroy()>
<android.graphics.SweepGradient_Delegate: java.awt.Paint getJavaPaint()>
<com.android.server.accounts.AccountManagerService: void validateAccounts(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getContentHeight()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setStatusBarNotification(android.service.notification.StatusBarNotification)>
<com.android.wallpapercropper.WallpaperCropActivity: void cropImageAndSetWallpaper(android.content.res.Resources,int,boolean)>
<com.android.systemui.statusbar.phone.SettingsButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.model.RecentsTaskLoader: com.android.systemui.recents.model.RecentsTaskLoader initialize(android.content.Context)>
<com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)>
<com.android.server.job.controllers.JobStatus: java.lang.String getName()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void animateToFullShade(long)>
<libcore.io.MemoryMappedFile_Delegate: void <init>(java.io.RandomAccessFile)>
<com.android.systemui.egg.MLand: boolean isGamePad(android.view.InputDevice)>
<com.android.systemui.qs.SignalTileView: void onMeasure(int,int)>
<com.android.photos.BitmapRegionTileSource: int getImageHeight()>
<com.android.systemui.statusbar.policy.SecurityController: void addCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: com.android.systemui.statusbar.phone.PlatformVelocityTracker obtain()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getInputMethodList()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isQsExpanded()>
<com.android.server.NetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>
<com.android.server.pm.PackageManagerService: void derivePackageAbi(android.content.pm.PackageParser.Package,java.io.File,java.lang.String,boolean)>
<com.android.systemui.power.PowerNotificationWarnings: void dismissLowBatteryWarning()>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.DismissView: void setClipBounds(android.graphics.Rect)>
<com.android.server.fingerprint.FingerprintUtils: com.android.server.fingerprint.FingerprintUtils getInstance()>
<com.android.systemui.volume.ZenModePanel: void onAttachedToWindow()>
<com.android.server.audio.AudioService.VolumeController: void setController(android.media.IVolumeController)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel.SecurityMode,boolean)>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onScreenTurningOn()>
<com.android.wallpapercropper.CropView: void moveToLeft()>
<com.android.keyguard.KeyguardUpdateMonitor: void handlePhoneStateChanged(java.lang.String)>
<com.android.server.CountryDetectorService: void run()>
<com.android.systemui.qs.tiles.FlashlightTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationUpdate(android.animation.ValueAnimator)>
<com.android.photos.views.TiledImageView: void setTileSource(com.android.photos.views.TiledImageRenderer.TileSource,java.lang.Runnable)>
<com.android.server.policy.RecentApplicationsBackground: void onDetachedFromWindow()>
<com.android.server.am.ActivityManagerService: boolean testIsSystemReady()>
<com.android.server.ConnectivityService: int untether(java.lang.String)>
<com.android.uiautomator.core.UiDevice: void waitForIdle(long)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteri(int,int,int)>
<com.android.photos.views.TiledImageRenderer: int getViewWidth()>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder setAsDefaultPolicy()>
<com.android.server.media.MediaSessionRecord: java.lang.String getTag()>
<javax.obex.HeaderSet: void createAuthenticationChallenge(java.lang.String,boolean,boolean)>
<android.content.res.BridgeTypedArray: int[] extractThemeAttrs()>
<com.android.systemui.volume.SpTexts: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL10: void glHint(int,int)>
<com.android.server.notification.PackagePriorityExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.recents.views.DebugOverlayView: void clear()>
<com.android.server.notification.CalendarTracker: void <init>(android.content.Context,android.content.Context)>
<com.android.server.am.ActivityManagerService: void closeSystemDialogs(java.lang.String)>
<com.android.printspooler.widget.CustomErrorEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.content.SyncOperation: boolean isIgnoreSettings()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isConnectable()>
<com.android.server.policy.PhoneWindowManager: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getMaxContentHeight()>
<com.android.systemui.DejankUtils: void postAfterTraversal(java.lang.Runnable)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespaceUri(int)>
<com.android.systemui.recents.model.RecentsTaskLoader: int getActivityPrimaryColor(android.app.ActivityManager.TaskDescription,com.android.systemui.recents.RecentsConfiguration)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setHeadsUpUser(int)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void addMovement(android.view.MotionEvent)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(long[])>
<com.android.location.provider.FusedLocationHardware: void unregisterSink(com.android.location.provider.FusedLocationHardwareSink)>
<com.android.systemui.tuner.AutoScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getActiveAdmins(int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexParameterf(int,int,float)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.KeyguardHostView: void showPrimarySecurityScreen()>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<com.android.systemui.settings.BrightnessController: void <init>(android.content.Context,android.widget.ImageView,com.android.systemui.settings.ToggleSlider)>
<com.android.server.location.LocationProviderProxy: com.android.server.location.LocationProviderProxy createAndBind(android.content.Context,java.lang.String,java.lang.String,int,int,int,android.os.Handler)>
<com.android.layoutlib.bridge.impl.SystemViewInfo: void <init>(java.lang.String,java.lang.Object,int,int,int,int,java.lang.Object,java.lang.Object)>
<com.android.server.wm.WindowManagerService: void saveANRStateLocked(com.android.server.wm.AppWindowToken,com.android.server.wm.WindowState,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnEmptySpaceClickListener: void onEmptySpaceClicked(float,float)>
<android.util.BridgeXmlPullAttributes: int getAttributeNameResource(int)>
<com.android.server.audio.MediaFocusControl: int getCurrentAudioFocus()>
<com.android.server.statusbar.StatusBarManagerService: void setSystemUiVisibility(int,int,java.lang.String)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void setReceiver(com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementReceiver)>
<com.android.systemui.statusbar.phone.PanelView: boolean onMiddleClicked()>
<com.android.systemui.tuner.TunerService: com.android.systemui.tuner.TunerService get(android.content.Context)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getRenamedClasses()>
<com.android.server.search.SearchManagerService: boolean launchLegacyAssist(java.lang.String,int,android.os.Bundle)>
<com.android.systemui.recents.views.TaskStackView: void startEnterRecentsAnimation(com.android.systemui.recents.views.ViewAnimation.TaskViewEnterContext)>
<com.android.systemui.recents.model.TaskStack: void addGroup(com.android.systemui.recents.model.TaskGrouping)>
<com.android.gallery3d.common.Utils: long clamp(long,long,long)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void cancelSync(android.net.Uri)>
<com.android.server.am.ActivityManagerService: void unstableProviderDied(android.os.IBinder)>
<com.android.server.pm.IntentFilterVerificationState: void <init>(int,int,java.lang.String)>
<com.android.systemui.recents.misc.Console: void log(boolean,java.lang.String,java.lang.Object,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIconsDark(boolean,boolean)>
<com.android.server.GestureLauncherService: void onBootPhase(int)>
<com.android.server.am.ActivityManagerService: void noteAlarmFinish(android.content.IIntentSender,int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>
<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>
<com.android.server.InputMethodManagerService: void systemRunning(com.android.server.statusbar.StatusBarManagerService)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<com.android.server.usb.UsbService: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void addSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.server.fingerprint.FingerprintService: android.hardware.fingerprint.IFingerprintDaemon getFingerprintDaemon()>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void removeCallback(android.media.MediaRouter.Callback)>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollIntoView(com.android.uiautomator.core.UiObject)>
<com.android.server.am.BatteryStatsService: void noteWifiRunning(android.os.WorkSource)>
<com.android.systemui.qs.QSPanel: void closeDetail()>
<com.android.documentsui.DirectoryContainerView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.settings.CurrentUserTracker: void onUserSwitched(int)>
<com.android.systemui.statusbar.StackScrollerDecorView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.INativeDaemonConnectorCallbacks: boolean onCheckHoldWakeLock(int)>
<com.android.documentsui.RootCursorWrapper: double getDouble(int)>
<com.android.documentsui.MimePredicate: void <init>(java.lang.String[])>
<com.android.server.SerialService: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>
<android.graphics.Path_Delegate: java.awt.Shape getJavaShape()>
<com.android.systemui.statusbar.phone.ObservableScrollView.Listener: void onOverscrolled(float,float,int)>
<com.android.tools.layoutlib.create.Log: void exception(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.android.gallery3d.glrenderer.BasicTexture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<com.android.gallery3d.exif.ExifInterface: int getRotationForOrientationValue(short)>
<com.android.systemui.SwipeHelper.LongPressListener: boolean onLongPress(android.view.View,int,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean startPairing()>
<com.android.server.am.ActivityManagerService: void stopAppSwitches()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addPostCollapseAction(java.lang.Runnable)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(int,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] getPackagesForUid(int)>
<com.android.uiautomator.core.UiScrollable: boolean flingBackward()>
<com.android.systemui.egg.MLand: void reset()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverscrollTopChangedListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasOverlappingRendering()>
<com.android.server.accessibility.ScreenMagnifier: void clear()>
<javax.obex.PrivateInputStream: int read(byte[],int,int)>
<com.android.photos.views.TiledImageRenderer: int suggestedTileSize(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void finishInput(com.android.internal.view.IInputMethodClient)>
<com.android.tools.layoutlib.create.AsmGenerator: java.util.Set getClassesNotRenamed()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getTimeSinceFirstRequestMs()>
<com.android.server.connectivity.Tethering: void interfaceRemoved(java.lang.String)>
<com.android.server.connectivity.NetworkAgentInfo: void setCurrentScore(int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onFinishedGoingToSleep(int)>
<com.android.server.pm.PackageKeySetData: boolean isUsingDefinedKeySets()>
<com.android.systemui.statusbar.policy.DateView: void onAttachedToWindow()>
<com.android.server.location.CountryDetectorBase: void <init>(android.content.Context)>
<com.android.tools.layoutlib.create.Main: void main(java.lang.String[])>
<javax.obex.ServerOperation: java.io.DataOutputStream openDataOutputStream()>
<com.android.server.notification.EventConditionProvider: void onRequestConditions(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateRowStates()>
<com.android.server.pm.Policy: boolean isDefaultStanza()>
<com.android.server.am.ActivityManagerService: void setFrontActivityScreenCompatMode(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onMiddleClicked()>
<com.android.server.usb.UsbAlsaManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setUserLockedChild(android.view.View,boolean)>
<com.android.printspooler.model.OpenDocumentCallback: void onFailure(int)>
<com.android.server.am.BatteryStatsService: void noteFlashlightOn(int)>
<com.android.systemui.volume.VolumeDialogController: void onUserActivityW()>
<com.android.gallery3d.exif.ExifInterface: double convertLatOrLongToDouble(com.android.gallery3d.exif.Rational[],java.lang.String)>
<com.android.location.provider.GeocodeProvider: java.lang.String onGetFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.systemui.volume.VolumeDialogController: android.service.notification.ZenModeConfig getZenModeConfig()>
<com.android.server.am.ContentProviderConnection: void toClientString(java.lang.StringBuilder)>
<com.android.systemui.statusbar.EmptyShadeView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.statementservice.retriever.WebContent: java.lang.String getContent()>
<com.android.systemui.statusbar.phone.PanelView: boolean isClearAllVisible()>
<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getSigningKeySetByPackageNameLPr(java.lang.String)>
<com.android.systemui.statusbar.ServiceMonitor: boolean isPackageAvailable()>
<com.android.gallery3d.common.Utils: boolean handleInterrruptedException(java.lang.Throwable)>
<com.android.systemui.statusbar.stack.AmbientState: void setTopPadding(int)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableBluetoothRegexs()>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayRemoved(int)>
<com.android.systemui.statusbar.phone.DozeParameters: void <init>(android.content.Context)>
<com.android.server.connectivity.Tethering: int getLastTetherError(java.lang.String)>
<com.android.server.DropBoxManagerService: void add(android.os.DropBoxManager.Entry)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
<com.android.server.usage.UsageStatsService: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot restoreTo(int)>
<com.android.location.provider.LocationRequestUnbundled: float getSmallestDisplacement()>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchSetBackground(android.graphics.Bitmap)>
<android.graphics.FontFamily_Delegate: boolean isValid()>
<com.android.server.NativeDaemonEvent: boolean isClassContinue()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.NetworkManagementService: void clearInterfaceAddresses(java.lang.String)>
<com.android.systemui.statusbar.stack.StackIndentationFunctor: void setPeekSize(int)>
<com.android.documentsui.model.DocumentInfo: int describeContents()>
<javax.microedition.khronos.opengles.GL11: boolean glIsEnabled(int)>
<com.android.server.accounts.AccountManagerService: java.lang.String readAuthTokenInternal(com.android.server.accounts.AccountManagerService.UserAccounts,android.accounts.Account,java.lang.String)>
<android.view.accessibility.IAccessibilityInteractionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>
<com.android.server.usb.UsbDeviceManager: void systemReady()>
<com.android.systemui.tuner.TunerService: void reregisterAll()>
<com.android.settingslib.bluetooth.PanProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.server.connectivity.Nat464Xlat: void <init>(android.content.Context,android.os.INetworkManagementService,android.os.Handler,com.android.server.connectivity.NetworkAgentInfo)>
<com.android.server.am.BatteryStatsService: void noteStartAudio(int)>
<com.android.server.media.RemoteDisplayProviderProxy.Callback: void onDisplayStateChanged(com.android.server.media.RemoteDisplayProviderProxy,android.media.RemoteDisplayState)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<android.graphics.Region_Delegate: java.awt.geom.Area getJavaArea()>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: int hashCode()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.BlendComposite: java.awt.CompositeContext createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)>
<com.android.systemui.BatteryMeterView: void onAttachedToWindow()>
<javax.obex.ClientSession: javax.obex.HeaderSet setPath(javax.obex.HeaderSet,boolean,boolean)>
<javax.obex.PrivateOutputStream: int size()>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.animation.Animator,float,float,float,float)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setAlpha(int)>
<com.android.gallery3d.exif.Rational: double toDouble()>
<com.android.server.accessibility.AccessibilityManagerService: void interrupt(int)>
<com.android.printspooler.ui.PrinterRegistry: boolean areHistoricalPrintersLoaded()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void createAndAddWindows()>
<com.android.server.display.OverlayDisplayWindow.Listener: void onWindowDestroyed()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
<com.android.server.am.UidRecord: void <init>(int)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.RotationLockController getRotationLockController()>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.obex.Authenticator: javax.obex.PasswordAuthentication onAuthenticationChallenge(java.lang.String,boolean,boolean)>
<com.android.server.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)>
<com.android.server.audio.AudioService: void setStreamVolume(int,int,int,java.lang.String)>
<android.app.Fragment_Delegate: void setLayoutlibCallback(com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.android.server.wallpaper.WallpaperManagerService: void setDimensionHints(int,int,java.lang.String)>
<com.android.keyguard.AlphaOptimizedLinearLayout: boolean hasOverlappingRendering()>
<com.android.server.job.JobStore: boolean add(com.android.server.job.controllers.JobStatus)>
<com.android.location.fused.FusedLocationService: boolean onUnbind(android.content.Intent)>
<com.android.server.location.MockProvider: void disable()>
<com.android.settingslib.bluetooth.BluetoothEventManager.Handler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>
<com.android.server.pm.PackageInstallerService: void updateSessionAppLabel(int,java.lang.String)>
<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.ContentResolver getContentResolver()>
<com.android.systemui.SwipeHelper: void setPagingTouchSlop(float)>
<com.android.server.pm.PackageManagerService: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int,java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getSimPermissionChoice()>
<com.android.server.notification.RankingReconsideration: void applyChangesLocked(com.android.server.notification.NotificationRecord)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.recents.misc.Console: void logStackTrace(int)>
<com.android.server.usb.UsbHostManager: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
<android.net.dhcp.DhcpClient: void setDhcpLeaseExpiry(android.net.dhcp.DhcpPacket)>
<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
<com.android.systemui.statusbar.phone.PanelView: void requestPanelHeightUpdate()>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseInDuration(boolean)>
<com.android.systemui.statusbar.ExpandableOutlineView: void setOutlineRect(android.graphics.RectF)>
<com.android.layoutlib.bridge.impl.Stack: void push(java.lang.Object)>
<com.android.server.input.InputManagerService.WiredAccessoryCallbacks: void systemReady()>
<com.android.systemui.qs.QSTile.DetailAdapter: int getMetricsCategory()>
<com.android.systemui.statusbar.BaseStatusBar: void updateNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setHomeAsUp(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerName(java.lang.String)>
<com.android.server.NetworkManagementService: void setInterfaceDown(java.lang.String)>
<com.android.server.LocationManagerService: boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener,java.lang.String)>
<com.android.documentsui.RootsCache: boolean isIconUniqueBlocking(com.android.documentsui.model.RootInfo)>
<com.android.systemui.egg.MLand: int irand(int,int)>
<com.android.systemui.qs.tiles.HotspotTile: void handleClick()>
<com.android.server.wm.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)>
<com.android.commands.pm.Pm: int runGetMaxUsers()>
<javax.microedition.khronos.opengles.GL11: void glTexEnvi(int,int,int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setBelowSpeedBump(boolean)>
<com.android.settingslib.bluetooth.HidProfile: int getOrdinal()>
<android.content.res.BridgeTypedArray: int getLayoutDimension(int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onTrackingStarted()>
<com.android.uiautomator.core.UiDevice: boolean drag(int,int,int,int,int)>
<com.android.systemui.statusbar.phone.DozeScrimController: void pulse(com.android.systemui.doze.DozeHost.PulseCallback,int)>
<com.android.server.location.GeofenceManager: void addFence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>
<com.android.systemui.statusbar.SystemBars: void onNoService()>
<com.android.systemui.statusbar.policy.SignalController: int getContentDescription()>
<com.android.tools.layoutlib.create.RenameClassAdapter: java.lang.String renameInternalType(java.lang.String)>
<com.android.systemui.statusbar.phone.DozeScrimController: void onScreenTurnedOn()>
<com.android.systemui.recents.RecentsResizeTaskDialog: void <init>(android.app.FragmentManager,com.android.systemui.recents.RecentsActivity)>
<com.android.server.notification.RankingReconsideration: long getDelay(java.util.concurrent.TimeUnit)>
<com.android.server.pm.PackageManagerService: int getPrivateFlagsForUid(int)>
<com.android.gallery3d.exif.ExifTag: boolean isValidIfd(int)>
<com.android.server.NetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayChanged(android.hardware.display.WifiDisplay)>
<com.android.documentsui.model.DocumentInfo: long getCursorLong(android.database.Cursor,java.lang.String)>
<com.android.server.notification.ZenLog: void traceSetZenMode(int,java.lang.String)>
<com.android.systemui.statusbar.phone.LockIcon: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.usage.UsageStatsService: long getAppIdleRollingWindowDurationMillis()>
<com.android.server.location.GeofenceState: java.lang.String toString()>
<javax.obex.PrivateInputStream: void writeBytes(byte[],int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawLine(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.documentsui.RecentsProvider: android.net.Uri buildState(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.notification.RankingConfig: void setPackageVisibilityOverride(java.lang.String,int,int)>
<com.android.pacprocessor.PacNative: boolean isActive()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void dismiss()>
<com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks: void runAfterPause(java.lang.Runnable)>
<com.android.systemui.qs.QSTile.Host: void warn(java.lang.String,java.lang.Throwable)>
<com.android.server.notification.ZenModeConditions: void onServiceAdded(android.content.ComponentName)>
<com.android.systemui.recents.views.TaskViewHeader: void dispatchDraw(android.graphics.Canvas)>
<com.android.server.usb.UsbDeviceManager: void setUsbDataUnlocked(boolean)>
<com.android.systemui.statusbar.stack.AmbientState: void setActivatedChild(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.systemui.keyboard.KeyboardUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.am.ActivityManagerService: boolean startUserInBackground(int)>
<com.android.documentsui.model.DocumentInfo: boolean isGridPreferred()>
<com.android.server.location.PassiveProvider: java.lang.String getName()>
<com.android.systemui.statusbar.phone.PanelBar: void onFinishInflate()>
<com.android.tools.layoutlib.create.AsmGenerator: void <init>(com.android.tools.layoutlib.create.Log,java.lang.String,com.android.tools.layoutlib.create.ICreateInfo)>
<com.android.systemui.settings.BrightnessController: void addStateChangedCallback(com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback)>
<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>
<com.android.server.NetworkManagementService: void setDefaultNetId(int)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setShowForAllUsers(boolean)>
<android.graphics.Rasterizer_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.statusbar.BaseStatusBar: void preloadRecents()>
<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfiguration()>
<com.android.systemui.recents.views.TaskViewThumbnail: void onLayout(boolean,int,int,int,int)>
<com.android.server.usb.UsbService: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>
<com.android.server.accessibility.AccessibilityManagerService: int addClient(android.view.accessibility.IAccessibilityManagerClient,int)>
<com.android.server.trust.TrustAgentWrapper: java.lang.CharSequence getMessage()>
<com.android.documentsui.PickFragment: void show(android.app.FragmentManager)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void addStateChangedCallback(android.os.Handler.Callback)>
<com.android.settingslib.bluetooth.PanProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.WirelessUtils: boolean isAirplaneModeOn(android.content.Context)>
<android.view.WindowCallback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<com.android.server.input.InputManagerService: android.view.InputChannel monitorInput(java.lang.String)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentAirtimeMs()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.android.layoutlib.bridge.util.ReflectionUtils.ReflectionException: void <init>(java.lang.Throwable)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.android.server.usb.UsbService: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>
<com.android.photos.views.BlockingGLTextureView: void destroy()>
<com.android.server.policy.PhoneWindowManager: android.view.animation.Animation createForceHideEnterAnimation(boolean,boolean)>
<android.animation.FakeAnimator: boolean isRunning()>
<com.android.server.am.ProcessStatsService: void addSysMemUsageLocked(long,long,long,long,long)>
<com.android.systemui.recents.model.Task: void setCallbacks(com.android.systemui.recents.model.Task.TaskCallbacks)>
<com.android.systemui.qs.tiles.IntentTile: void setListening(boolean)>
<com.android.server.CountryDetectorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.EmergencyButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: int getCount()>
<com.android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()>
<com.android.server.firewall.IntentFirewall: java.io.File getRulesDir()>
<com.android.server.am.ActivityManagerService: boolean isRootVoiceInteraction(android.os.IBinder)>
<com.android.server.am.ProcessMemInfo: void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: byte[] getTagByteValues(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: boolean isSplit()>
<com.android.gallery3d.glrenderer.GLES20Canvas: int uploadBuffer(java.nio.FloatBuffer)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onViewRemoved(android.view.View)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isInContentBounds(float,float)>
<com.android.systemui.recents.views.TaskStackView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsForServiceLocked(android.content.ComponentName)>
<com.android.server.policy.ImmersiveModeConfirmation: void loadSetting(int)>
<com.android.server.content.ContentService: boolean getMasterSyncAutomatically()>
<com.android.server.audio.AudioService: void setMicrophoneMute(boolean,java.lang.String,int)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.ActivityManagerService: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>
<com.android.proxyhandler.SocketConnect: void run()>
<com.android.server.LocationManagerService: void <init>(android.content.Context)>
<com.android.server.notification.NotificationUsageStats: void registerDismissedByUser(com.android.server.notification.NotificationRecord)>
<javax.obex.ClientSession: long getConnectionID()>
<com.android.server.wm.AppWindowAnimator: void setAnimation(android.view.animation.Animation,int,int,boolean)>
<com.android.layoutlib.bridge.Bridge: java.util.concurrent.locks.ReentrantLock getLock()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onCameraLaunchGestureDetected(int)>
<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()>
<com.android.systemui.statusbar.ActivatableNotificationView: void drawableHotspotChanged(float,float)>
<com.android.gallery3d.glrenderer.GLCanvas: void setTextureParameters(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToEnd(int)>
<com.android.server.am.ActivityManagerService: void unhandledBack()>
<com.android.server.notification.RankingConfig: int getPackageVisibilityOverride(java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<com.android.systemui.statusbar.BaseStatusBar: boolean inflateViews(com.android.systemui.statusbar.NotificationData.Entry,android.view.ViewGroup)>
<com.android.inputdevices.InputDeviceReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.am.ActivityManagerService: boolean isAssistDataAllowedOnCurrentActivity()>
<com.android.server.NetworkManagementService: void startTethering(java.lang.String[])>
<com.android.keyguard.KeyguardSimPukView: void onPause()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSavedNetworkSummary()>
<com.android.keyguard.CarrierText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)>
<com.android.systemui.statusbar.ExpandableView: int getActualHeight()>
<com.android.systemui.keyguard.KeyguardViewMediator: void startKeyguardExitAnimation(long,long)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onSwipingStarted(boolean)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowSafetyWarning(int)>
<com.android.server.SystemServiceManager: void startBootPhase(int)>
<com.android.systemui.statusbar.ExpandableView: int getBottomDecorHeight()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateEmptyShadeView(boolean)>
<com.android.systemui.statusbar.phone.PanelView: float getContentHeight()>
<com.android.server.policy.PhoneWindowManager: void lockNow(android.os.Bundle)>
<com.android.systemui.BatteryMeterView: void setDarkIntensity(float)>
<com.android.server.content.SyncOperation: void <init>(android.content.ComponentName,int,int,int,android.os.Bundle,long,long,long,long)>
<com.android.systemui.statusbar.BaseStatusBar: void cancelPreloadRecentApps()>
<com.android.gallery3d.exif.ExifTag: void setOffset(int)>
<android.view.IWindowManagerImpl: boolean isRotationFrozen()>
<com.android.systemui.recents.RecentsActivity: void onCreate(android.os.Bundle)>
<com.android.server.MountServiceIdler: boolean onStopJob(android.app.job.JobParameters)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: float getAttributeFloatValue(int,float)>
<com.android.server.statusbar.StatusBarManagerInternal: void showAssistDisclosure()>
<com.android.statementservice.retriever.Relation: boolean matches(com.android.statementservice.retriever.Relation)>
<com.android.server.power.ShutdownThread: void reboot(android.content.Context,java.lang.String,boolean)>
<android.view.WindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onStartedWakingUp()>
<com.android.systemui.volume.ZenModePanel: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.keyguard.KeyguardPINView: void <init>(android.content.Context)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setSize(int,int)>
<com.android.systemui.statusbar.SystemBars: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.EmergencyButton: void onFinishInflate()>
<com.android.keyguard.KeyguardHostView: void startDisappearAnimation(java.lang.Runnable)>
<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker.CheckEventResult checkEvent(android.service.notification.ZenModeConfig.EventInfo,long)>
<com.android.server.ConnectivityService: void setAcceptUnvalidated(android.net.Network,boolean,boolean)>
<com.android.server.pm.PackageManagerService: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result render(boolean)>
<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>
<com.android.proxyhandler.ProxyServer: void run()>
<com.android.location.provider.GmsFusedBatchOptions: long getPeriodInNS()>
<com.android.systemui.statusbar.stack.AmbientState: void onBeginDrag(android.view.View)>
<com.android.server.notification.PropConfig: java.lang.String[] getStringArray(android.content.Context,java.lang.String,int)>
<com.android.fakeoemfeatures.FakeCoreService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setUserInfoController(com.android.systemui.statusbar.policy.UserInfoController)>
<com.android.documentsui.model.DocumentStack: void updateRoot(java.util.Collection)>
<com.android.systemui.recents.RecentsActivity: void onDestroy()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result removeChild(android.view.View,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.server.SystemServer: void main(java.lang.String[])>
<com.android.server.job.controllers.StateController: void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getProfileOwnerName(int)>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void init()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.server.am.ActivityManagerService: void backupAgentCreated(java.lang.String,android.os.IBinder)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onSystemReady()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isLaunchTransitionFinished()>
<com.android.systemui.ExpandHelper: void onlyObserveMovements(boolean)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDonePending(boolean)>
<com.android.systemui.statusbar.phone.BarTransitions: int getMode()>
<android.view.IWindowManagerImpl: int getAppOrientation(android.view.IApplicationToken)>
<com.android.nfc_extras.NfcAdapterExtras: void setCardEmulationRoute(com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute)>
<com.android.server.notification.NotificationUsageStats: void registerClickedByUser(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.SignalClusterView: void onAttachedToWindow()>
<com.android.server.NetworkManagementService: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: com.android.settingslib.bluetooth.CachedBluetoothDevice findDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.stack.AmbientState: void setShadeExpanded(boolean)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean isDiscovering()>
<com.android.uiautomator.core.Tracer: boolean isTracingEnabled()>
<com.android.systemui.statusbar.NotificationData: int getVisibilityOverride(java.lang.String)>
<com.android.systemui.recents.ScreenPinningRequest: android.widget.FrameLayout.LayoutParams getRequestLayoutParams(boolean)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setTitle(java.lang.CharSequence)>
<com.android.systemui.statusbar.BaseStatusBar: void notifyHeadsUpScreenOff()>
<android.view.ShadowPainter: void drawRectangleShadow(java.awt.image.BufferedImage,int,int,int,int)>
<com.android.keyguard.ViewMediatorCallback: boolean isScreenOn()>
<com.android.systemui.qs.QSTile: void setCallback(com.android.systemui.qs.QSTile.Callback)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setTitle(java.lang.CharSequence)>
<com.android.tools.layoutlib.create.AsmGenerator: void setCopyFiles(java.util.Map)>
<com.android.systemui.statusbar.StatusBarIconView: void updateDrawable()>
<com.android.documentsui.SaveFragment: com.android.documentsui.SaveFragment get(android.app.FragmentManager)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setInTouchMode(boolean)>
<com.android.systemui.assist.AssistManager: void destroy()>
<com.android.gallery3d.glrenderer.BasicTexture: boolean isLoaded()>
<javax.microedition.khronos.opengles.GL10: void glTexParameterf(int,int,float)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void startAssist(android.os.Bundle)>
<com.android.systemui.qs.QSTile: java.lang.String composeChangeAnnouncement()>
<com.android.uiautomator.core.UiAutomatorBridge: android.view.Display getDefaultDisplay()>
<android.graphics.BlendComposite: android.graphics.BlendComposite getInstance(android.graphics.BlendComposite.BlendingMode,float)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDimmed(boolean,boolean)>
<com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback: void onNextAlarmChanged(android.app.AlarmManager.AlarmClockInfo)>
<com.android.server.NetworkTimeUpdateService: void <init>(android.content.Context)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.GestureRecorder: void <init>(java.lang.String)>
<android.view.ShadowPainter: void drawSmallRectangleShadow(java.awt.image.BufferedImage,int,int,int,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textContains(java.lang.String)>
<com.android.server.am.ActivityStackSupervisor: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.pm.PermissionsState: int revokeInstallPermission(com.android.server.pm.BasePermission)>
<com.android.systemui.volume.VolumeDialogController: void removeCallback(com.android.systemui.volume.VolumeDialogController.Callbacks)>
<com.android.systemui.volume.MediaSessions.Callbacks: void onRemoteRemoved(android.media.session.MediaSession.Token)>
<com.android.documentsui.SortingCursorWrapper: int getType(int)>
<com.android.gallery3d.glrenderer.GLCanvas: void fillRect(float,float,float,float,int)>
<com.android.systemui.statusbar.phone.QSTileHost: void collapsePanels()>
<com.android.server.input.InputManagerService: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>
<android.graphics.DiscretePathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.statusbar.phone.UserAvatarView: void onDraw(android.graphics.Canvas)>
<com.android.server.audio.FocusRequester: void finalize()>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational[] getValueAsRationals()>
<com.android.systemui.media.RingtonePlayer: void start()>
<com.android.systemui.recents.model.TaskGrouping: boolean containsTask(com.android.systemui.recents.model.Task)>
<com.android.keyguard.KeyguardSecurityView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.server.pm.PermissionsState.PermissionState: int getFlags()>
<com.android.server.AssetAtlasService: android.view.GraphicBuffer getBuffer()>
<com.android.server.AttributeCache: void removePackage(java.lang.String)>
<com.android.systemui.statusbar.NotificationData: boolean isAmbient(java.lang.String)>
<com.android.keyguard.KeyguardPatternView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.ExpandableView: void performAddAnimation(long,long)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void hideMySoftInput(android.os.IBinder,int)>
<com.android.systemui.recents.views.RecentsView: void disableLayersForOneFrame()>
<com.android.server.audio.AudioService: int setHdmiSystemAudioSupported(boolean)>
<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.wm.WindowManagerService)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleClick()>
<com.android.server.accessibility.ScreenMagnifier: void onMagnifedBoundsChanged(android.graphics.Region)>
<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<com.android.server.audio.AudioService.VolumeController: void setLayoutDirection(int)>
<javax.obex.ClientOperation: int getHeaderLength()>
<com.android.server.usb.UsbAudioDevice: java.lang.String toString()>
<com.android.documentsui.model.DocumentStack: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.tiles.BluetoothTile: void setListening(boolean)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void run(com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm.Result)>
<com.android.server.pm.PackageManagerService: boolean updateIntentVerificationStatus(java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarViewTaskSwitchHelper: void setBarState(boolean,boolean)>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor queryRoots(java.lang.String[])>
<android.content.res.BridgeTypedArray: int getDimensionPixelOffset(int,int)>
<com.android.server.notification.NotificationRecord: void setRecentlyIntrusive(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.internal.telephony.IccCardConstants.State getSimState(int)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void setHotspotEnabled(boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getNameForUid(int)>
<com.android.server.location.MockProvider: java.lang.String getName()>
<com.android.layoutlib.bridge.util.SparseWeakArray: void remove(long)>
<android.content.res.BridgeTypedArray: int getDimensionPixelSize(int,int)>
<com.android.server.pm.PackageManagerService: int movePackage(java.lang.String,java.lang.String)>
<com.android.systemui.qs.tiles.CastTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivity(android.content.Intent,boolean)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void addLastDecrementRunnable(java.lang.Runnable)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector checked(boolean)>
<com.android.server.connectivity.NetworkMonitor: void SetDefaultLingerTime(int)>
<com.android.systemui.statusbar.policy.LocationController: void addSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<com.android.uiautomator.core.UiDevice: void sleep()>
<com.android.printspooler.widget.EmbeddedContentContainer.OnSizeChangeListener: void onSizeChanged(int,int)>
<com.android.server.am.ProcessStatsService: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>
<com.android.server.wm.WindowManagerService: void reenableKeyguard(android.os.IBinder)>
<com.android.systemui.statusbar.stack.StackScrollState: void removeViewStateForView(android.view.View)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.volume.Events: void writeState(long,com.android.systemui.volume.VolumeDialogController.State)>
<com.android.server.wm.WindowManagerService: void dismissKeyguard()>
<com.android.gallery3d.exif.ExifTag: short getTagId()>
<com.android.systemui.qs.QSTile: void fireScanStateChanged(boolean)>
<com.android.systemui.recents.misc.DozeTrigger: void resetTrigger()>
<com.android.systemui.settings.BrightnessController: void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean)>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyRankingUpdateLocked()>
<com.android.server.notification.ValidateNotificationPeople: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl: void setMobileDataEnabled(boolean)>
<com.android.server.location.GeofenceState: double getDistanceToBoundary()>
<com.android.systemui.qs.QSDetailItems: void setItemsVisible(boolean)>
<com.android.systemui.volume.VolumeDialogComponent: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<com.android.server.wm.WindowManagerService: void clearForcedDisplaySize(int)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<com.android.server.AppOpsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPermissionPolicy(android.content.ComponentName,int)>
<com.android.keyguard.KeyguardStatusView: void refreshTime()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: boolean connect(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCameraDisabled(android.content.ComponentName,boolean)>
<com.android.server.midi.MidiService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: int getOpacity()>
<com.android.server.policy.PhoneWindowManager: void setRotationLw(int)>
<com.android.gallery3d.exif.ExifInterface: boolean rewriteExif(java.lang.String,java.util.Collection)>
<com.android.server.location.PassiveProvider: int getStatus(android.os.Bundle)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void multiplyAlpha(float)>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.NotificationData.Entry getEntry(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,java.nio.IntBuffer)>
<com.android.server.EntropyMixer: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<com.android.uiautomator.testrunner.TestCaseCollector: void addSingleTestMethod(java.lang.Class,java.lang.String)>
<com.android.sharedstoragebackup.SharedStorageAgent: void onCreate()>
<com.android.systemui.qs.QSTile.ResourceIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setSystemUiVisibility(int,int)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHardwareDeviceRemoved(android.media.tv.TvInputHardwareInfo)>
<android.view.IWindowManagerImpl: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>
<com.android.systemui.qs.QSContainer: void onFinishInflate()>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.layoutlib.bridge.android.BridgeContext getContext()>
<com.android.commands.am.Am: void onRun()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector packageName(java.lang.String)>
<com.android.server.audio.AudioService.VolumeStreamState: void setAllIndexes(com.android.server.audio.AudioService.VolumeStreamState,java.lang.String)>
<com.android.server.NetworkManagementService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,int[],int)>
<com.android.providers.settings.SettingsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: com.android.systemui.statusbar.phone.NoisyVelocityTracker obtain()>
<com.example.android.networkusage.NetworkActivity: void onDestroy()>
<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerSubtype(java.lang.String,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void doKeyguardTimeout(android.os.Bundle)>
<com.android.systemui.recents.model.RecentsTaskLoader: android.graphics.drawable.Drawable getAndUpdateActivityIcon(com.android.systemui.recents.model.Task.TaskKey,android.app.ActivityManager.TaskDescription,com.android.systemui.recents.misc.SystemServicesProxy,android.content.res.Resources,com.android.systemui.recents.model.ActivityInfoHandle,boolean)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.pm.Policy: java.util.Map getInnerPackages()>
<com.android.systemui.egg.MLandActivity: void onCreate(android.os.Bundle)>
<com.android.server.policy.PhoneWindowManager: boolean isForceHiding(android.view.WindowManager.LayoutParams)>
<com.android.systemui.statusbar.phone.PanelView: boolean onEmptySpaceClick(float)>
<com.android.server.location.GpsLocationProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.recents.views.TaskStackViewScroller: float getStackScroll()>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: boolean hasOverlappingRendering()>
<javax.microedition.khronos.opengles.GL11: void glBindBuffer(int,int)>
<com.android.server.accessibility.AccessibilityManagerService: void <init>(android.content.Context)>
<com.android.server.NetworkManagementService: void enableIpv6(java.lang.String)>
<com.android.location.provider.FusedLocationHardware: void registerSink(com.android.location.provider.FusedLocationHardwareSink,android.os.Looper)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void hideScrim()>
<com.android.server.ConnectivityService: android.net.NetworkState[] getAllNetworkState()>
<com.android.uiautomator.core.UiObject: boolean performMultiPointerGesture(android.view.MotionEvent.PointerCoords[][])>
<com.android.server.trust.TrustAgentWrapper: void onDeviceUnlocked()>
<com.android.layoutlib.bridge.BridgeRenderSession: boolean isAlphaChannelImage()>
<com.android.uiautomator.core.UiObject: java.lang.String getClassName()>
<com.android.systemui.volume.VolumeDialog: void setStreamImportant(int,boolean)>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.app.PendingIntent getSettingsPendingIntent()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.server.policy.GlobalActions.Action: boolean showBeforeProvisioning()>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchScreenTurnedOff()>
<com.android.nfc_extras.EeExternalFieldException: void <init>(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getIdAttributeResourceValue(int)>
<com.android.systemui.statusbar.policy.BluetoothController: void setBluetoothEnabled(boolean)>
<com.android.server.notification.ZenModeHelper: void requestFromListener(android.content.ComponentName,int)>
<com.android.systemui.statusbar.phone.DozeParameters.PulseSchedule: long getNextTime(long,long)>
<com.android.systemui.statusbar.policy.AccessibilityController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback)>
<android.view.ShadowPainter: java.awt.image.BufferedImage createDropShadow(java.awt.image.BufferedImage,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.notification.ManagedServices: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.job.StateChangedListener: void onControllerStateChanged()>
<com.android.documentsui.ColumnAdapter: java.lang.Object getItem(int)>
<com.android.systemui.qs.tiles.UserDetailItemView: void onFinishInflate()>
<com.android.systemui.statusbar.DismissViewButton: void showButton()>
<com.android.keyguard.KeyguardHostView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.GestureRecorder: void save()>
<com.android.systemui.qs.GlobalSetting: void handleValueChanged(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void keyguardGoingAway()>
<com.android.smspush.WapPushManager: boolean isDataExist(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.notification.RankingConfig: void setPackagePriority(java.lang.String,int,int)>
<com.android.server.AppOpsService.ClientState: java.lang.String toString()>
<com.android.systemui.statusbar.policy.NetworkController.MobileDataController: boolean isMobileDataSupported()>
<com.android.server.SystemService: void onStartUser(int)>
<com.android.systemui.assist.AssistManager: void startAssist(android.os.Bundle)>
<com.android.server.power.ShutdownThread: void rebootOrShutdown(android.content.Context,boolean,java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.gallery3d.common.Utils: int compare(long,long)>
<com.android.server.am.BroadcastQueue: void backgroundServicesFinishedLocked(int)>
<com.android.photos.views.BlockingGLTextureView: void render()>
<com.android.smspush.WapPushManager: boolean verifyData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>
<com.android.server.audio.AudioService: boolean isBluetoothA2dpOn()>
<com.android.systemui.tuner.TunerFragment: void onPause()>
<com.android.systemui.statusbar.policy.DeadZone: void setFlashOnTouchCapture(boolean)>
<com.android.systemui.qs.QSDualTileLabel: java.lang.String getText()>
<com.android.server.am.ActivityManagerService: boolean killPids(int[],java.lang.String,boolean)>
<com.android.server.SystemService: boolean isSafeMode()>
<javax.obex.Operation: long getLength()>
<com.android.server.input.InputManagerService.KeyboardLayoutVisitor: void visitKeyboardLayout(android.content.res.Resources,java.lang.String,java.lang.String,java.lang.String,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setUserEnabled(android.content.ComponentName)>
<com.android.commands.uiautomator.EventsCommand: java.lang.String shortHelp()>
<android.net.ConnectivityManager.PacketKeepalive: void stop()>
<com.android.server.wm.StackTapPointerEventListener: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayContent)>
<com.android.systemui.statusbar.NotificationViewWrapper: boolean needsRoundRectClipping()>
<com.android.settingslib.bluetooth.HidProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.statusbar.SignalClusterView: void <init>(android.content.Context)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onConnect(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.uiautomator.core.Configurator: long getScrollAcknowledgmentTimeout()>
<com.android.systemui.statusbar.phone.TrustDrawable: int getAlpha()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<com.android.server.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>
<com.android.server.usage.UnixCalendar: void addWeeks(int)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnectionFailed()>
<com.android.systemui.statusbar.policy.EthernetSignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<com.android.server.am.ActivityManagerService: int getLockTaskModeState()>
<com.android.server.notification.ScheduleConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayChanged(int)>
<com.android.keyguard.ViewMediatorCallback: void userActivity()>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void <init>(com.android.systemui.statusbar.phone.NavigationBarView)>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: com.android.systemui.recents.model.TaskStack getTaskStack(int)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerType(org.objectweb.asm.Type)>
<android.graphics.MaskFilter_Delegate: android.graphics.MaskFilter_Delegate getDelegate(long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getRestrictionsProvider(int)>
<com.android.future.usb.UsbAccessory: java.lang.String getManufacturer()>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getOrdinal()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
<com.android.future.usb.UsbAccessory: java.lang.String getModel()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitInterface()>
<com.android.systemui.statusbar.BaseStatusBar: void handleVisibleToUserChanged(boolean)>
<com.android.server.UpdateLockService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.model.TaskStack: void removeTaskImpl(com.android.systemui.recents.model.Task)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String nextText()>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void setDiscoverableAlarm(android.content.Context,long)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean deleteDatabase(java.lang.String)>
<com.android.server.policy.BarController: boolean isTransientShowing()>
<com.android.server.wm.WindowManagerService: float getCurrentAnimatorScale()>
<javax.obex.ServerRequestHandler: int onGet(javax.obex.Operation)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.server.pm.KeySetManagerService: void <init>(android.util.ArrayMap)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onDreamingStopped()>
<android.view.ShadowPainter: java.awt.image.BufferedImage createRectangularDropShadow(java.awt.image.BufferedImage)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void endAffordanceLaunch()>
<com.android.documentsui.model.DocumentInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setWaitForIdleTimeout(long)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setDark(boolean,boolean,long)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isScreenTurnedOn()>
<com.android.systemui.statusbar.policy.AccessibilityController: void onTouchExplorationStateChanged(boolean)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPermissionPolicy(android.content.ComponentName)>
<javax.obex.ServerSession: void sendResponse(int,byte[])>
<com.android.gallery3d.exif.ExifTag: java.lang.String getString()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.util.Set getBondedDevices()>
<com.android.server.policy.PolicyControl: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.settings.CurrentUserTracker: void stopTracking()>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onNextAlarmChanged()>
<com.android.shell.BugreportStorageProvider: boolean onCreate()>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLastKnownLocationBasedCountry()>
<com.android.server.audio.MediaFocusControl: boolean isPlaystateActive(int)>
<com.android.server.input.InputManagerService: int[] getInputDeviceIds()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getConnectionState()>
<com.android.server.job.controllers.JobStatus: long getEarliestRunTime()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearCrossProfileIntentFilters(android.content.ComponentName)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<com.android.server.NetworkScoreService: boolean updateScores(android.net.ScoredNetwork[])>
<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>
<com.android.server.notification.RankingHelper: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.server.storage.DeviceStorageMonitorInternal: void checkMemory()>
<com.android.server.usb.UsbHostManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getSharedPrefsFile(java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void onMeasure(int,int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
<com.android.server.statusbar.StatusBarManagerService: void collapsePanels()>
<com.android.server.usb.UsbDeviceManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager)>
<com.android.systemui.egg.MLand: float frand(float,float)>
<com.android.server.pm.IntentFilterVerificationState: java.lang.String getHostsString()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void doKeyguardTimeout(android.os.Bundle)>
<com.android.vpndialogs.ManageDialog: void onClick(android.content.DialogInterface,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getBluetoothContactSharingDisabledForUser(int)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: boolean isOverflowPopupNeeded()>
<javax.obex.ObexTransport: boolean isSrmSupported()>
<com.android.systemui.recents.views.RecentsView: void setCallbacks(com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int movePackage(java.lang.String,android.os.storage.VolumeInfo)>
<com.android.systemui.statusbar.policy.SecurityController: void removeCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.commands.bu.Backup: void run()>
<android.content.res.BridgeTypedArray: int getLayoutDimension(int,int)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<com.android.server.content.ContentService.ObserverNode: void addObserverLocked(android.net.Uri,android.database.IContentObserver,boolean,java.lang.Object,int,int,int)>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator)>
<com.android.server.notification.CalendarTracker.Callback: void onChanged()>
<com.android.systemui.recents.Recents: void startScreenPinning(android.content.Context,com.android.systemui.recents.misc.SystemServicesProxy)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setTextureParameters(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.server.audio.MediaFocusControl: void discardAudioFocusOwner()>
<com.android.systemui.recents.Recents: void onBootCompleted()>
<com.android.systemui.statusbar.ExpandableView: int resolveBottomDecorHeight()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateExpandNotificationsPanel()>
<com.android.systemui.qs.tiles.LocationTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.statusbar.ExpandableView: void onLayout(boolean,int,int,int,int)>
<com.android.location.provider.FusedLocationHardwareSink: void onCapabilities(int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener: void onPrintersInvalid()>
<com.android.server.media.MediaSessionStack: void addSession(com.android.server.media.MediaSessionRecord)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardShowingOrOccluded()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.core.UiDevice getUiDevice()>
<com.android.server.wm.WindowManagerService: void updateRotation(boolean,boolean)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitReturnType()>
<com.android.systemui.DessertCase: void onPause()>
<com.android.layoutlib.bridge.android.BridgeContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<com.android.server.notification.ZenModeHelper: void onUserRemoved(int)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowSilentHint()>
<com.android.layoutlib.bridge.impl.GcSnapshot: void translate(float,float)>
<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,com.android.server.pm.PreferredActivity)>
<android.text.LineBreaker: void <init>(java.util.List,android.text.LineWidth,android.text.TabStops)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void setValueAt(int,java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,android.os.UserHandle)>
<com.android.server.am.BatteryStatsService: void noteInteractive(boolean)>
<com.android.systemui.qs.tiles.RotationLockTile: void handleClick()>
<com.android.systemui.settings.CurrentUserTracker: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>
<com.android.systemui.qs.tiles.CellularTile: void setListening(boolean)>
<com.android.systemui.statusbar.stack.AmbientState: void setHideSensitive(boolean)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(int[],int)>
<android.view.BridgeInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean)>
<com.android.documentsui.RootsLoader: void onStopLoading()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void onGroupCollapsed(int)>
<com.android.server.pm.PackageInstallerSession: java.lang.String[] getNames()>
<com.android.systemui.power.PowerNotificationWarnings: void dismissInvalidChargerWarning()>
<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecord getDefaultSession(int)>
<com.android.server.policy.BarController: boolean checkShowTransientBarLw()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingToHeight(float,boolean,float,float,boolean)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>
<com.android.documentsui.RecentLoader.RecentTask: void close()>
<com.android.keyguard.KeyguardPasswordView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context)>
<com.android.documentsui.model.DocumentStack: java.lang.String getTitle()>
<com.android.media.remotedisplay.RemoteDisplay: void setStatus(int)>
<com.android.systemui.recents.RecentsActivity: void onUserInteraction()>
<com.android.server.am.LockTaskNotify: void handleShowToast(int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getExternalFilesDirs(java.lang.String)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void deleteRecycledResources()>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToBinaryString(int)>
<com.android.systemui.usb.UsbStorageActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setClipTopAmount(int)>
<com.android.systemui.recents.views.SwipeHelper: void resetTranslation(android.view.View)>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getMenuButton()>
<com.android.server.clipboard.ClipboardService: boolean hasPrimaryClip(java.lang.String)>
<com.android.server.am.ActivityManagerService: void updateDeviceOwner(java.lang.String)>
<com.android.systemui.statusbar.policy.MobileSignalController: void unregisterListener()>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.io.File,java.util.Set,com.android.resources.Density)>
<com.android.server.location.LocationFudger: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.Installer: int deleteCodeCacheFiles(java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.ide.common.rendering.api.RenderResources getRenderResources()>
<com.android.server.am.ActivityManagerService: void showBootMessage(java.lang.CharSequence,boolean)>
<com.android.systemui.ExpandHelper.Callback: void expansionStateChanged(boolean)>
<com.android.printspooler.renderer.IPdfEditor: int openDocument(android.os.ParcelFileDescriptor)>
<com.android.server.connectivity.Vpn: android.os.ParcelFileDescriptor establish(com.android.internal.net.VpnConfig)>
<com.android.server.notification.NotificationIntrusivenessExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.KeyguardAffordanceView getLeftView()>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedFraction(float)>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.content.res.BridgeTypedArray: int getInt(int,int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm.VisibilityReport computeStackVisibilityReport()>
<com.android.server.ConnectivityService: void startNattKeepalive(android.net.Network,int,android.os.Messenger,android.os.IBinder,java.lang.String,int,java.lang.String)>
<com.android.gallery3d.common.Utils: java.lang.String getUserAgent(android.content.Context)>
<com.android.server.notification.NotificationRecord: boolean setIntercepted(boolean)>
<com.android.server.GestureLauncherService: boolean isCameraDoubleTapPowerSettingEnabled(android.content.Context,int)>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(java.lang.CharSequence,boolean)>
<com.android.server.location.GeocoderProxy: com.android.server.location.GeocoderProxy createAndBind(android.content.Context,int,int,int,android.os.Handler)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showPromptReason(int)>
<com.android.uiautomator.core.ShellUiAutomatorBridge: void <init>(android.app.UiAutomation)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setAttentionLight(boolean,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void remove(android.view.IWindow)>
<com.android.systemui.statusbar.policy.NetworkController: void onUserSwitched(int)>
<com.android.server.wm.WindowManagerService: void setWindowWallpaperPositionLocked(com.android.server.wm.WindowState,float,float,float,float)>
<com.android.systemui.qs.QSTileView: void onLayout(boolean,int,int,int,int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean setInputMethodEnabled(java.lang.String,boolean)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void onReset(com.android.systemui.statusbar.ExpandableView)>
<com.android.systemui.recents.views.TaskStackView.TaskStackViewCallbacks: void onTaskStackUnfilterTriggered()>
<com.android.server.policy.PhoneWindowManager: void finishedGoingToSleep(int)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void switchIndication(java.lang.CharSequence)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: int getPreviewSize()>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<com.android.documentsui.SectionedListAdapter: void clearSections()>
<com.android.systemui.statusbar.policy.BatteryController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.server.notification.NotificationManagerService: void onStart()>
<com.android.systemui.SwipeHelper: void removeLongPressCallback()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.server.AppOpsService.Op: void <init>(int,java.lang.String,int)>
<javax.microedition.khronos.opengles.GL10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.android.gallery3d.exif.ExifTag: int getIfd()>
<javax.microedition.khronos.opengles.GL10: void glActiveTexture(int)>
<android.graphics.Shader_Delegate: boolean isSupported()>
<com.android.location.provider.LocationProviderBase: android.os.IBinder getBinder()>
<com.android.server.notification.ZenModeHelper: boolean setConfig(android.service.notification.ZenModeConfig,java.lang.String)>
<com.android.systemui.recents.model.FilteredTaskList: void updateFilteredTaskIndices()>
<com.android.commands.hid.Event: java.lang.String getName()>
<com.android.server.audio.AudioService: void setBluetoothScoOn(boolean)>
<com.android.systemui.recents.model.TaskStack: void filterTasks(com.android.systemui.recents.model.Task)>
<com.android.keyguard.KeyguardSimPinView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.NotificationContentView: void notifyContentUpdated()>
<com.android.server.wm.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: com.android.ide.common.rendering.api.ResourceValue getLayoutResource(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.server.location.FusedLocationHardwareSecure: void updateBatchingOptions(int,android.location.FusedBatchOptions)>
<com.android.server.notification.ZenModeHelper: boolean isCall(com.android.server.notification.NotificationRecord)>
<javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void draw(com.android.layoutlib.bridge.impl.GcSnapshot.Drawable)>
<com.android.server.location.PassiveProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.power.SuspendBlocker: void release()>
<com.android.systemui.recents.views.TaskStackView.TaskStackViewCallbacks: void onTaskViewDismissed(com.android.systemui.recents.model.Task)>
<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>
<com.android.server.pm.Installer: int removeUserDataDirs(int)>
<com.android.server.NetworkManagementService: void startClatd(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getExternalCacheDirs()>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnected(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>
<com.android.gallery3d.exif.ExifInterface: int getFlagsFromAllowedIfds(int[])>
<com.android.server.notification.NotificationDelegate: void onNotificationClear(int,int,java.lang.String,java.lang.String,int,int)>
<com.android.systemui.recents.model.TaskGrouping: int indexOf(com.android.systemui.recents.model.Task)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.documentsui.SortingCursorWrapper: android.os.Bundle getExtras()>
<javax.microedition.khronos.egl.EGL10: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: com.android.photos.SimpleBitmapRegionDecoderWrapper newInstance(java.io.InputStream,boolean)>
<com.android.documentsui.RootCursorWrapper: void <init>(java.lang.String,java.lang.String,android.database.Cursor,int)>
<com.android.systemui.statusbar.StatusBarIconView: void debug(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>
<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>
<com.android.server.notification.ConditionProviders: void notifyConditions(java.lang.String,com.android.server.notification.ManagedServices.ManagedServiceInfo,android.service.notification.Condition[])>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackageWithVerification(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>
<com.android.systemui.SwipeHelper.Callback: android.view.View getChildContentView(android.view.View)>
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentPackageName()>
<com.android.uiautomator.core.UiDevice: void registerWatcher(java.lang.String,com.android.uiautomator.core.UiWatcher)>
<com.android.server.policy.PhoneWindowManager: void exitKeyguardSecurely(android.view.WindowManagerPolicy.OnKeyguardExitResult)>
<com.android.systemui.recents.RecentsAppWidgetHost: void <init>(android.content.Context,int)>
<com.android.systemui.statusbar.EmptyShadeView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.statusbar.StatusBarManagerService: void removeIcon(java.lang.String)>
<com.android.location.provider.GmsFusedBatchOptions: void setFlag(int)>
<com.android.systemui.SystemUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<com.android.server.content.ContentService: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>
<com.android.documentsui.model.DocumentInfo: boolean isThumbnailSupported()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHeadsUp(boolean)>
<com.android.server.am.ActivityManagerService: void setFocusedStack(int)>
<com.android.systemui.statusbar.stack.AmbientState: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.server.notification.NotificationUsageStats: void registerUpdatedByApp(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.printspooler.widget.EmbeddedContentContainer: void setOnSizeChangeListener(com.android.printspooler.widget.EmbeddedContentContainer.OnSizeChangeListener)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void show(boolean)>
<com.android.server.statusbar.StatusBarManagerService: void onPanelRevealed(boolean,int)>
<com.android.systemui.tuner.QsTuner: void onTilesChanged()>
<com.android.systemui.statusbar.tv.TvStatusBar: void disable(int,int,boolean)>
<com.android.systemui.recents.model.Task.TaskKey: com.android.systemui.recents.model.Task.ComponentNameKey getComponentNameKey()>
<com.android.server.VibratorService: void onInputDeviceAdded(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearDeviceInitializer(android.content.ComponentName)>
<com.android.server.am.ActivityManagerService: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>
<com.android.server.am.ActivityManagerService: void monitor()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL10: void glBlendFunc(int,int)>
<com.android.server.am.ActivityManagerService: long inputDispatchingTimedOut(int,boolean,java.lang.String)>
<com.android.location.provider.FusedLocationHardware: void updateBatchingOptions(int,com.android.location.provider.GmsFusedBatchOptions)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,int[],int)>
<com.android.printspooler.ui.PrintActivity: boolean canOpenOptions()>
<com.android.server.NetworkManagementService: void setFirewallEnabled(boolean)>
<com.android.server.notification.NotificationRecord: boolean isAudioAttributesUsage(int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void onTrustChanged(int)>
<com.android.server.ConnectivityService: android.net.Network getNetworkForType(int)>
<com.android.commands.hid.Event: byte[] getReport()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>
<com.android.systemui.volume.VolumeDialogComponent: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: void computeRects(int,int,android.graphics.Rect)>
<com.android.server.pm.Policy: java.util.Set getSignatures()>
<android.graphics.CornerPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<com.android.server.display.DisplayManagerService: void systemReady(boolean,boolean)>
<com.android.server.NativeDaemonTimeoutException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>
<com.android.documentsui.model.RootInfo: boolean isImages()>
<com.android.settingslib.wifi.AccessPoint: void generateOpenNetworkConfig()>
<com.android.externalstorage.TestDocumentsProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: java.lang.String toString()>
<android.net.dhcp.DhcpClient: void registerForPreDhcpNotification()>
<com.android.server.job.controllers.JobStatus: android.os.PersistableBundle getExtras()>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void readIntArray(int[],int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void releaseAllImmediately()>
<com.android.systemui.recents.views.TaskStackView: void onStackUnfiltered(com.android.systemui.recents.model.TaskStack,java.util.ArrayList)>
<com.android.systemui.recents.views.RecentsView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.graphics.BlendComposite: int hashCode()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onClick(android.view.View)>
<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController get(com.android.server.job.JobSchedulerService)>
<com.android.location.provider.LocationProviderBase: void onDisable()>
<com.android.server.pm.PermissionsState: int grantInstallPermission(com.android.server.pm.BasePermission)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setUserExpanded(boolean)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onClick(android.content.DialogInterface,int)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.android.server.am.BatteryStatsService: void noteResetFlashlight()>
<com.android.systemui.doze.DozeHost.Callback: void onPowerSaveChanged(boolean)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothConnecting()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon()>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecurityMode()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onSecurePdfFile()>
<android.graphics.Shader_Delegate: java.awt.geom.AffineTransform getLocalMatrix()>
<com.android.tools.layoutlib.create.MethodAdapter: java.lang.Object onInvokeA(java.lang.String,boolean,java.lang.Object)>
<com.android.server.midi.MidiService: void closeDevice(android.os.IBinder,android.os.IBinder)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.BluetoothController getBluetoothController()>
<com.android.systemui.recents.model.FilteredTaskList: void add(com.android.systemui.recents.model.Task)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.StringBuilder appendByteAsHex(java.lang.StringBuilder,byte,boolean)>
<com.android.server.IntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void rewind()>
<com.android.server.content.ContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHideSensitiveForIntrinsicHeight(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.StatusBarWindowView getStatusBarWindow()>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.phone.NotificationGroupManager getGroupManager()>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingPermission(java.lang.String,java.lang.String)>
<com.android.server.lights.LightsManager: com.android.server.lights.Light getLight(int)>
<com.android.server.am.ProcessStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setNoSims(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getLeftPreview()>
<com.android.server.location.GeofenceManager: void <init>(android.content.Context,com.android.server.location.LocationBlacklist)>
<com.android.systemui.statusbar.policy.HeadsUpManager.OnHeadsUpChangedListener: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.systemui.statusbar.policy.MobileSignalController: void registerListener()>
<com.android.server.content.ContentService: com.android.server.content.ContentService main(android.content.Context,boolean)>
<com.android.server.location.PassiveProvider: void disable()>
<com.android.systemui.media.NotificationPlayer: void stop()>
<com.android.settingslib.animation.AppearAnimationUtils: void startTranslationYAnimation(android.view.View,long,long,float,android.view.animation.Interpolator)>
<com.android.gallery3d.glrenderer.RawTexture: void prepare(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.systemui.recents.Recents: void toggleRecents(android.view.Display,int,android.view.View)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void addCallback(android.media.MediaRouter.Callback)>
<com.android.photos.views.TiledImageRenderer.TileSource: com.android.gallery3d.glrenderer.BasicTexture getPreview()>
<com.android.server.pm.UserManagerService: boolean canAddMoreManagedProfiles()>
<com.android.layoutlib.bridge.android.BridgeContext: void clearWallpaper()>
<com.android.server.am.BatteryStatsService: void noteWifiSupplicantStateChanged(int,boolean)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: android.graphics.Bitmap getCroppedBitmap()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isFaceUnlockRunning(int)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean deleteFile(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<com.android.systemui.qs.QSPanel: void setListening(boolean)>
<com.android.server.pm.PackageManagerService: void setPackageStoppedState(java.lang.String,boolean,int)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setTitle(java.lang.CharSequence)>
<com.android.systemui.volume.VolumeDialog: void rescheduleTimeoutH()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.statusbar.phone.BarTransitions: void onTransition(int,int,boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean interceptMediaKey(android.view.KeyEvent)>
<android.graphics.Paint_Delegate: java.awt.Stroke getJavaStroke()>
<com.android.server.search.Searchables: void <init>(android.content.Context,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindRenderbufferOES(int,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMesh(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int,int,int)>
<com.android.server.GestureLauncherService: void onStart()>
<com.android.server.NetworkManagementService: void monitor()>
<com.android.server.NetworkManagementService: void clearPermission(int[])>
<com.android.gallery3d.common.Utils: byte[] getBytes(java.lang.String)>
<com.android.systemui.statusbar.phone.LockIcon: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.uiautomator.testrunner.TestCaseCollector: java.util.List getTestCases()>
<com.android.server.notification.ValidateNotificationPeople: float getContactAffinity(android.os.UserHandle,android.os.Bundle,int,float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsRenderbufferOES(int)>
<android.graphics.Shader_Delegate: android.graphics.Shader_Delegate getDelegate(long)>
<com.android.server.pm.PackageManagerService: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,int)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: float getYVelocity()>
<com.android.server.SystemService: void onSwitchUser(int)>
<com.android.tools.layoutlib.create.MethodListener: int onInvokeI(java.lang.String,boolean,java.lang.Object)>
<com.android.printspooler.ui.FusedPrintersProvider: void onStopLoading()>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayAdded(int)>
<com.android.server.location.LocationProviderInterface: boolean isEnabled()>
<com.android.uiautomator.core.UiScrollable: boolean scrollToBeginning(int)>
<javax.obex.ClientSession: javax.obex.Operation get(javax.obex.HeaderSet)>
<com.android.documentsui.model.DurableUtils: void writeToParcel(android.os.Parcel,com.android.documentsui.model.Durable)>
<com.android.server.NetworkManagementService: void setDnsServersForNetwork(int,java.lang.String[],java.lang.String)>
<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>
<com.android.server.audio.AudioService: int getLastAudibleStreamVolume(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isInContentBounds(float,float)>
<com.android.server.ConnectivityService: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>
<android.graphics.Bitmap_Delegate: void change()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: float getAffordanceFalsingFactor()>
<com.android.server.AnyMotionDetector: void <init>(android.os.PowerManager,android.os.Handler,android.hardware.SensorManager,com.android.server.AnyMotionDetector.DeviceIdleCallback)>
<com.android.printspooler.widget.CustomErrorEditText: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<com.android.media.remotedisplay.RemoteDisplayProvider: java.util.Collection getDisplays()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadDown()>
<android.graphics.Paint_Delegate: float getStrokeWidth()>
<android.animation.FakeAnimator: void setStartDelay(long)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>
<com.android.systemui.statusbar.AlphaOptimizedView: boolean hasOverlappingRendering()>
<com.android.systemui.recents.views.TaskStackView: void onScrollChanged(float)>
<com.android.wallpapercropper.CropView: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<com.android.systemui.statusbar.policy.ZenModeController: void removeCallback(com.android.systemui.statusbar.policy.ZenModeController.Callback)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)>
<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<com.android.documentsui.DirectoryContainerView: void dispatchDraw(android.graphics.Canvas)>
<com.android.server.pm.Installer: boolean restoreconData(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.server.am.ActivityManagerService.PendingAssistExtras: void <init>(com.android.server.am.ActivityRecord,android.os.Bundle,android.content.Intent,java.lang.String,com.android.internal.os.IResultReceiver,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void onTrustChanged(boolean,int,int)>
<android.graphics.BitmapShader_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.statusbar.FlingAnimationUtils: void applyDismissing(android.animation.Animator,float,float,float,float)>
<com.android.systemui.keyguard.KeyguardViewMediator: void start()>
<com.android.server.pm.UserManagerService: int[] getUserIds()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getIntentFilterVerifications(java.lang.String)>
<com.android.systemui.statusbar.policy.BatteryController: boolean isPowerSave()>
<com.android.server.job.controllers.JobStatus: boolean hasChargingConstraint()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector clickable(boolean)>
<com.android.server.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<com.android.systemui.statusbar.StatusBarIconView: com.android.internal.statusbar.StatusBarIcon getStatusBarIcon()>
<com.android.layoutlib.bridge.impl.RenderAction: void <init>(com.android.ide.common.rendering.api.RenderParams)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setExpansionDisabled(boolean)>
<com.android.server.job.controllers.JobStatus: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.recents.misc.DebugTrigger: void <init>(java.lang.Runnable)>
<com.android.systemui.statusbar.NotificationGuts: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.statementservice.retriever.AndroidPackageInfoFetcher: java.util.List getStatements(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void unstableProviderDied(android.content.IContentProvider)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isSecure()>
<javax.obex.ServerOperation: javax.obex.HeaderSet getReceivedHeader()>
<com.android.server.dreams.DreamManagerService: void onBootPhase(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void registerCallback(com.android.keyguard.KeyguardUpdateMonitorCallback)>
<com.android.server.media.RemoteDisplayProviderWatcher: void start()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onUnlockMethodStateChanged()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setMessagePermissionChoice(int)>
<com.android.systemui.volume.ZenFooter: void onFinishInflate()>
<com.android.server.notification.CountdownConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionStarting(long,long)>
<com.android.server.trust.TrustManagerService: void onBootPhase(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean checkAndIncreaseMessageRejectionCount()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(java.lang.Object)>
<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)>
<com.android.server.TextServicesManagerService: void <init>(android.content.Context)>
<com.android.server.pm.PackageInstallerService: void unregisterCallback(android.content.pm.IPackageInstallerCallback)>
<com.android.server.audio.MediaFocusControl: void unregisterMediaButtonIntentAsync(android.app.PendingIntent)>
<com.android.server.am.ActivityManagerService: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>
<com.android.systemui.statusbar.stack.AmbientState: void setDimmed(boolean)>
<com.android.systemui.settings.ToggleSlider: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: int getClearAllHeight()>
<com.android.server.am.ContentProviderConnection: java.lang.String toString()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getProfiles()>
<com.android.keyguard.ViewMediatorCallback: int getBouncerPromptReason()>
<javax.obex.ServerOperation: void streamClosed(boolean)>
<com.android.server.am.ActivityManagerService: int startActivityFromRecents(int,android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>
<com.android.server.pm.Installer: int freeCache(long)>
<com.android.server.audio.AudioService: void setBluetoothScoOnInt(boolean)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isOpaque()>
<com.android.printspooler.model.PageContentRepository.RenderSpec: int hashCode()>
<com.android.printspooler.model.RemotePrintDocument: void destroy()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void onMeasure(int,int)>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>
<com.android.commands.pm.Pm: int runCreateUser()>
<com.android.server.trust.TrustManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.ScrimController: void setTopHeadsUpDragAmount(android.view.View,float)>
<com.android.gallery3d.glrenderer.UploadedTexture: void onFreeBitmap(android.graphics.Bitmap)>
<com.android.keyguard.EmergencyButton.EmergencyButtonCallback: void onEmergencyButtonClickedWhenInCall()>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.Class[] getInjectedClasses()>
<com.android.server.audio.AudioService: void onSystemReady()>
<com.android.server.job.JobCompletedListener: void onJobCompleted(com.android.server.job.controllers.JobStatus,boolean)>
<android.view.IWindowManagerImpl: void dismissKeyguard()>
<com.android.systemui.usb.UsbConfirmActivity: void onDestroy()>
<android.view.IWindowManagerImpl: void <init>(android.content.res.Configuration,android.util.DisplayMetrics,int,boolean)>
<com.android.settingslib.datetime.ZoneGetter: java.lang.String getTimeZoneOffsetAndName(java.util.TimeZone,java.util.Date)>
<com.android.systemui.qs.DataUsageGraph: void onDraw(android.graphics.Canvas)>
<com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute: void <init>(int,com.android.nfc_extras.NfcExecutionEnvironment)>
<com.android.server.ServiceWatcher: int getBestVersion()>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean uploadLimitReached()>
<com.android.systemui.doze.DozeLog: void traceEmergencyCall()>
<com.android.server.am.ProcessStatsService: boolean shouldWriteNowLocked(long)>
<android.view.IWindowManagerImpl: void getBaseDisplaySize(int,android.graphics.Point)>
<javax.microedition.khronos.opengles.GL11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<com.android.systemui.qs.QSTileView: void setIcon(android.widget.ImageView,com.android.systemui.qs.QSTile.State)>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void reset()>
<com.android.server.am.BatteryStatsService: void noteStopAudio(int)>
<com.android.server.notification.ZenModeFiltering: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.PersistentDataBlockService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.GestureRecorder: void tag(java.lang.String,java.lang.String)>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTileView createTileView(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateCollapsePanels(int)>
<com.android.server.pm.PackageInstallerSession: void open()>
<com.android.printspooler.ui.PrintErrorFragment: com.android.printspooler.ui.PrintErrorFragment newInstance(java.lang.CharSequence,int)>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>
<com.android.server.location.FlpHardwareProvider: com.android.server.location.FlpHardwareProvider getInstance(android.content.Context)>
<com.android.server.wm.BlackFrame: void kill()>
<com.android.server.wm.WindowManagerService: float getAnimationScale(int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String)>
<com.android.server.audio.AudioService: void playSoundEffectVolume(int,float)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setSystemExpanded(boolean)>
<com.android.server.location.MockProvider: void setStatus(int,android.os.Bundle,long)>
<com.android.systemui.statusbar.EmptyShadeView: android.view.View findContentView()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService main(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>
<com.android.server.wm.WindowManagerService: void removeRotationWatcher(android.view.IRotationWatcher)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setLaunchTransitionEndRunnable(java.lang.Runnable)>
<com.android.server.am.ActivityManagerService: void activitySlept(android.os.IBinder)>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onSizeChanged(int,int,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setZenMode(int)>
<com.android.systemui.statusbar.BaseStatusBar: void createAndAddWindows()>
<com.android.systemui.recents.views.DebugOverlayView: void enable()>
<com.android.systemui.qs.QSTileView: void onStateChanged(com.android.systemui.qs.QSTile.State)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean isVertical()>
<com.android.systemui.recents.model.Task: void notifyTaskDataLoaded(android.graphics.Bitmap,android.graphics.drawable.Drawable)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onDown()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.MapProfile getMapProfile()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int[] getPackageGids(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean getPackageAskScreenCompat(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean isUserAMonkey()>
<com.android.systemui.statusbar.SpeedBumpView: void onMeasure(int,int)>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void onMeasure(int,int)>
<com.android.server.ConnectivityService: void factoryReset()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName,int)>
<com.android.systemui.statusbar.phone.PanelView: java.lang.String getName()>
<com.android.server.NetworkManagementService: void setInterfaceQuota(java.lang.String,long)>
<com.android.systemui.recents.model.TaskStack: void removeAllTasks()>
<com.android.media.remotedisplay.RemoteDisplay: int getPresentationDisplayId()>
<com.android.location.provider.LocationProviderBase: void onSetRequest(com.android.location.provider.ProviderRequestUnbundled,android.os.WorkSource)>
<com.android.systemui.statusbar.KeyguardIndicationController: void hideTransientIndication()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isShowing()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void removeActiveAdmin(android.content.ComponentName,int)>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Integer getTagIntValue(int)>
<com.android.server.IntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>
<com.android.server.pm.PackageManagerService: void restorePreferredActivities(byte[],int)>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,int[],int)>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine.AuthorityInfo getAuthority(int)>
<com.android.printspooler.model.PageContentRepository: com.android.printspooler.model.PageContentRepository.PageContentProvider acquirePageContentProvider(int,android.view.View)>
<com.android.commands.hid.Device: void <init>(int,java.lang.String,int,int,byte[],byte[])>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToString(long)>
<com.android.server.audio.AudioService.VolumeController: void postDisplaySafeVolumeWarning(int)>
<com.android.server.usb.UsbDebuggingManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.gallery3d.glrenderer.Texture: int getHeight()>
<android.content.res.BridgeTypedArray: boolean hasValue(int)>
<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)>
<com.android.systemui.recents.misc.Console: void logError(android.content.Context,java.lang.String)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.commands.svc.NfcCommand: java.lang.String shortHelp()>
<com.android.commands.appops.AppOpsCommand: void onShowUsage(java.io.PrintStream)>
<com.android.pacprocessor.PacNative: java.lang.String makeProxyRequest(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.impl.DelegateManager: java.lang.Object getDelegate(long)>
<android.content.res.BridgeResources.NinePatchInputStream: void <init>(java.io.File)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean hasSystemFeature(java.lang.String)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: android.view.View getMirror()>
<javax.microedition.khronos.opengles.GL10: int glGetError()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardSecure()>
<com.android.server.DeviceIdleController: int[] getAppIdWhitelistExceptIdleInternal()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvf(int,int,float)>
<com.android.server.media.MediaSessionRecord: void setVolumeTo(int,int,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAffordanceLaunchEnded()>
<com.android.systemui.statusbar.ExpandableView: void setWillBeGone(boolean)>
<com.android.media.remotedisplay.RemoteDisplay: void setVolumeMax(int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserHasTrust(int)>
<com.android.server.am.ActivityManagerService: android.app.ActivityOptions getActivityOptions(android.os.IBinder)>
<com.android.keyguard.KeyguardSecurityContainer: void showUsabilityHint()>
<com.android.server.job.controllers.StateController: void dumpControllerState(java.io.PrintWriter)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleRingerModeChange(int)>
<javax.obex.ObexHelper: byte[] computeMd5Hash(byte[])>
<com.android.settingslib.bluetooth.HeadsetProfile: void finalize()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onIconClicked(boolean)>
<com.android.server.audio.MediaFocusControl: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<com.android.printspooler.model.RemotePrintDocument: boolean isDestroyed()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDevicePolicyManagerStateChanged()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void removeOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)>
<com.android.keyguard.KeyguardPINView: int getPasswordTextViewId()>
<com.android.location.fused.FusionEngine: void onProviderEnabled(java.lang.String)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void addRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<com.android.server.pm.PackageManagerService: void setPermissionEnforced(java.lang.String,boolean)>
<com.android.systemui.recents.RecentsAppWidgetHostView: android.view.View getErrorView()>
<com.android.server.policy.WindowOrientationListener: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void <init>(android.widget.LinearLayout,int)>
<com.android.systemui.volume.Events: void writeEvent(android.content.Context,int,java.lang.Object[])>
<com.android.commands.svc.Svc.Command: java.lang.String longHelp()>
<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.IdleController get(com.android.server.job.JobSchedulerService)>
<com.android.tools.layoutlib.create.PromoteFieldClassAdapter: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<com.android.systemui.statusbar.phone.ScrimController: void setKeyguardShowing(boolean)>
<com.android.systemui.statusbar.policy.SignalController: boolean isDirty()>
<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String,int)>
<com.android.systemui.statusbar.policy.CastController: void setCurrentUserId(int)>
<com.android.server.accounts.AccountManagerService: void cancelNotification(int,android.os.UserHandle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void resetViews()>
<com.android.documentsui.ProviderExecutor.Preemptable: void preempt()>
<com.android.systemui.tuner.TunerService: void reloadSetting(android.net.Uri)>
<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>
<com.android.systemui.statusbar.BaseStatusBar: void updateRowStates()>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<com.android.systemui.recents.views.RecentsView: void setSearchBarVisibility(int)>
<javax.microedition.khronos.opengles.GL10: void glAlphaFuncx(int,int)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void prepare()>
<android.graphics.DrawFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] getRequestedPages()>
<com.android.systemui.recents.Recents: void showNextAffiliatedTask()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onFinishedGoingToSleep(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void hide(boolean)>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.ExpandHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.UserManagerService: void setUserIcon(int,android.graphics.Bitmap)>
<com.android.systemui.statusbar.policy.FlashlightController: void removeListener(com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener)>
<com.android.server.content.ContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver)>
<com.android.proxyhandler.ProxyServer: boolean isBound()>
<com.android.uiautomator.core.UiDevice: void unfreezeRotation()>
<com.android.systemui.recents.views.RecentsView: void setDebugOverlay(com.android.systemui.recents.views.DebugOverlayView)>
<com.android.server.pm.PackageManagerService: void updatePermissionFlagsForAllApps(int,int,int)>
<com.android.server.ConnectivityService: com.android.server.connectivity.NetworkMonitor createNetworkMonitor(android.content.Context,android.os.Handler,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkRequest)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setMobileDataEnabled(boolean)>
<com.android.server.location.ComprehensiveCountryDetector: void runAfterDetectionAsync(android.location.Country,android.location.Country,boolean,boolean)>
<com.android.systemui.statusbar.stack.StackScrollState: void resetViewStates()>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.UserSwitcherController getUserSwitcherController()>
<com.android.systemui.statusbar.policy.NextAlarmController: void addStateChangedCallback(com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: java.lang.String viewInfo(android.view.View)>
<com.android.systemui.statusbar.CommandQueue: void setSystemUiVisibility(int,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.A2dpProfile getA2dpProfile()>
<com.android.server.am.ActivityManagerService: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<com.android.printspooler.ui.PrintProgressFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<javax.microedition.khronos.egl.EGL10: boolean eglReleaseThread()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onSwipingAborted()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>
<com.android.systemui.volume.MediaSessions: void dumpMediaSessions(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setMenuVisibility(boolean)>
<com.android.gallery3d.exif.ExifInterface: void forceRewriteExif(java.lang.String,java.util.Collection)>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationGuts getGuts()>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>
<com.android.printspooler.widget.PageContentView: com.android.printspooler.model.PageContentRepository.PageContentProvider getPageContentProvider()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void decrement()>
<com.android.systemui.statusbar.StackScrollerDecorView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardSecurityView: void onPause()>
<com.android.server.statusbar.StatusBarManagerService: void registerStatusBar(com.android.internal.statusbar.IStatusBar,com.android.internal.statusbar.StatusBarIconList,int[],java.util.List)>
<com.android.systemui.recents.model.Task.TaskCallbacks: void onMultiStackDebugTaskStackIdChanged()>
<com.android.statementservice.retriever.AbstractAssetMatcher: int getMatchedLookupKey()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onDreamingStopped()>
<com.android.server.policy.BarController: void adjustSystemUiVisibilityLw(int,int)>
<com.android.systemui.qs.tiles.DndTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.VibratorService: void systemReady()>
<android.preference.BridgePreferenceInflater: android.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet)>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewFocusChanged(com.android.systemui.recents.views.TaskView,boolean)>
<com.android.server.job.controllers.BatteryController: void dumpControllerState(java.io.PrintWriter)>
<com.android.systemui.recents.misc.Utilities: void cancelAnimationWithoutCallbacks(android.animation.Animator)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean takeScreenshot(java.io.File,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<com.android.server.location.FusedLocationHardwareSecure: void startBatching(int,android.location.FusedBatchOptions)>
<com.android.systemui.egg.MLand: void start(boolean)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context)>
<com.android.documentsui.ColumnAdapter: long getItemId(int)>
<com.android.systemui.statusbar.SignalClusterView: void setIconTint(int,float)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getFileStreamPath(java.lang.String)>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void <init>(com.android.settingslib.applications.ApplicationsState.AppFilter,com.android.settingslib.applications.ApplicationsState.AppFilter)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getHomeActivityPackageName()>
<com.android.gallery3d.exif.ExifTag: void setHasDefinedCount(boolean)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Object getTagValue(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<com.android.server.am.BatteryStatsService: boolean isCharging()>
<com.android.documentsui.RootsCache: com.android.documentsui.model.RootInfo getRecentsRoot()>
<com.android.documentsui.RootsCache: void <init>(android.content.Context)>
<com.android.printspooler.ui.PrinterRegistry: void forgetFavoritePrinter(android.print.PrinterId)>
<com.android.systemui.statusbar.DismissViewButton: void onDraw(android.graphics.Canvas)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitEnd()>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPickupVibrationThreshold()>
<com.android.printspooler.widget.PrintOptionsLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.recents.model.Task.TaskCallbacks: void onTaskDataLoaded()>
<com.android.server.IntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>
<com.example.android.networkusage.SettingsActivity: void onResume()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onBackPressed()>
<com.android.server.am.ActivityManagerService: void startLockTaskMode(int)>
<com.android.server.connectivity.Tethering: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.os.Looper)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean enable()>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquired(int)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: int getCount()>
<com.android.server.location.LocationBlacklist: void init()>
<com.android.server.NetworkManagementService: void allowProtect(int)>
<android.view.IWindowManagerImpl: void prepareAppTransition(int,boolean)>
<com.android.server.wm.WindowManagerService: void moveTaskToStack(int,int,boolean)>
<com.android.server.wm.BlackFrame: void setMatrix(android.graphics.Matrix)>
<com.android.documentsui.DirectoryView: void setPosition(float)>
<com.android.server.NetworkManagementService: void setUidNetworkRules(int,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.FlashlightTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.server.trust.TrustManagerService: void onStartUser(int)>
<com.android.documentsui.SectionedListAdapter: boolean isEnabled(int)>
<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>
<com.android.wallpapercropper.CropView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.clipboard.ClipboardService: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: int getPackageScreenCompatMode(java.lang.String)>
<com.android.server.Watchdog.HandlerChecker: int getCompletionStateLocked()>
<com.android.server.usb.UsbService: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyBroadcast(android.content.Intent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getCurrentOverScrolledPixels(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName,int)>
<android.graphics.PixelXorXfermode_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.ViewInvertHelper: void fade(boolean,long)>
<android.view.IWindowManagerImpl: void setAnimationScale(int,float)>
<com.android.server.pm.PackageManagerService: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>
<com.android.server.notification.RankingHelper: boolean getPackagePeekable(java.lang.String,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void cancelExpandHelper()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void appTransitionStarting(long,long)>
<com.android.systemui.DessertCaseView: void fillFreeList()>
<com.android.systemui.qs.UsageTracker: void setListening(boolean)>
<com.android.server.media.MediaSessionService: void monitor()>
<com.android.systemui.volume.ZenModePanel: void onDetachedFromWindow()>
<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>
<com.android.gallery3d.exif.ExifInterface: java.util.List getAllTags()>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onRequestContentUpdate()>
<com.android.server.content.ContentService: void cancelSyncAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: android.content.SharedPreferences.Editor edit()>
<com.android.server.NativeDaemonEvent: boolean isClassOk()>
<com.android.systemui.statusbar.phone.TrustDrawable: int getOpacity()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onSimSecureStateChanged(boolean)>
<com.android.documentsui.model.RootInfo: void write(java.io.DataOutputStream)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int)>
<com.android.statementservice.IntentFilterVerificationReceiver: void onReceive(android.content.Context,android.content.Intent)>
<javax.microedition.khronos.opengles.GL11: void glGetPointerv(int,java.nio.Buffer[])>
<com.android.systemui.recents.misc.Utilities: void scaleRectAboutCenter(android.graphics.Rect,float)>
<com.android.server.pm.PackageManagerService: boolean isStorageLow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName,int)>
<com.android.systemui.statusbar.DismissView: void setDismissAllInProgress(boolean)>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getPublicContentView()>
<com.android.systemui.statusbar.SystemBars: void start()>
<com.android.server.audio.AudioService: void reloadAudioSettings()>
<com.android.server.voiceinteraction.VoiceInteractionSessionConnection.Callback: void sessionConnectionGone(com.android.server.voiceinteraction.VoiceInteractionSessionConnection)>
<com.android.systemui.tuner.TunerService.Tunable: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: void deleteTag(int)>
<com.android.commands.wm.Wm: void onRun()>
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(int)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: long convertTimestampToNanotime(int,long)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setSystemUiVisibility(int,int)>
<com.android.server.NetworkScoreService: void <init>(android.content.Context)>
<com.android.server.input.InputManagerService: void setFocusedApplication(com.android.server.input.InputApplicationHandle)>
<com.android.server.NetworkManagementService: void addInterfaceToNetwork(java.lang.String,int)>
<com.example.android.networkusage.SettingsActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.android.server.pm.PackageManagerService: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<com.android.nfc_extras.EeIOException: void <init>(java.lang.String)>
<com.android.server.wallpaper.WallpaperManagerService: android.app.WallpaperInfo getWallpaperInfo()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels()>
<com.android.settingslib.bluetooth.PbapServerProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void clearNotificattonEffects()>
<com.android.server.LockSettingsService: boolean getBoolean(java.lang.String,boolean,int)>
<com.android.server.SystemConfig: android.util.ArrayMap getPermissions()>
<com.android.systemui.qs.QSTile.Host.Callback: void onTilesChanged()>
<com.android.gallery3d.exif.ExifInterface: long[] getTagLongValues(int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onVisibilityChanged(android.view.View,int)>
<com.android.server.job.controllers.ConnectivityController: com.android.server.job.controllers.ConnectivityController get(com.android.server.job.JobSchedulerService)>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getTagStringValue(int)>
<com.android.systemui.recents.views.DebugOverlayView: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<com.android.server.audio.AudioService: int getStreamMaxVolume(int)>
<com.android.server.am.ActivityManagerService: void unregisterProcessObserver(android.app.IProcessObserver)>
<android.content.res.BridgeTypedArray: float getFloat(int,float)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void userActivity()>
<com.android.server.usb.UsbService: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>
<com.android.layoutlib.bridge.impl.PorterDuffUtility: android.graphics.PorterDuff.Mode getPorterDuffMode(int)>
<com.android.server.fingerprint.FingerprintService: boolean hasEnrolledFingerprints(int)>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute getCardEmulationRoute()>
<com.android.server.job.controllers.IdleController: void dumpControllerState(java.io.PrintWriter)>
<com.android.location.provider.GmsFusedBatchOptions: int getFlags()>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.Class[] getInjectedClasses()>
<com.android.server.pm.PackageManagerService: void resetApplicationPreferences(int)>
<com.android.uiautomator.core.UiObject: boolean dragTo(com.android.uiautomator.core.UiObject,int)>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable applyTintAttr(android.content.Context,int,int)>
<android.view.IWindowManagerImpl: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>
<com.android.server.usb.UsbPortManager: void addSimulatedPort(java.lang.String,int,com.android.internal.util.IndentingPrintWriter)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void enforceCanManageCaCerts(android.content.ComponentName)>
<com.android.server.NetworkManagementService: void denyProtect(int)>
<com.android.documentsui.DocumentsToolBar: void setOnActionViewCollapsedListener(com.android.documentsui.DocumentsToolBar.OnActionViewCollapsedListener)>
<com.android.server.media.MediaSessionRecord: java.lang.String toString()>
<com.android.systemui.recents.views.RecentsViewLayoutAlgorithm: void <init>(com.android.systemui.recents.RecentsConfiguration)>
<android.content.res.BridgeTypedArray: void bridgeSetValue(int,java.lang.String,boolean,com.android.ide.common.rendering.api.ResourceValue)>
<com.android.tools.layoutlib.create.OverrideMethod: void setDefaultListener(com.android.tools.layoutlib.create.MethodListener)>
<javax.microedition.khronos.opengles.GL10: void glClear(int)>
<com.android.keyguard.AlphaOptimizedImageButton: boolean hasOverlappingRendering()>
<android.view.ShadowPainter: void drawRectangleShadow(java.awt.Graphics2D,int,int,int,int)>
<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<com.android.server.UpdateLockService: void acquireUpdateLock(android.os.IBinder,java.lang.String)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void inflateMenus()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<com.android.server.usb.UsbService: void systemReady()>
<android.view.IWindowManagerImpl: void removeAppToken(android.os.IBinder)>
<com.android.server.InputMethodManagerService: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean enabledAndUserMatches(int)>
<com.google.android.maps.MapView: void displayZoomControls(boolean)>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: boolean isScreenOn()>
<com.android.uiautomator.core.UiObject: boolean click()>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,java.nio.FloatBuffer)>
<com.android.printspooler.widget.PageContentView: void init(com.android.printspooler.model.PageContentRepository.PageContentProvider,android.graphics.drawable.Drawable,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<com.android.server.wm.WindowManagerService: void pokeDrawLock(com.android.server.wm.Session,android.os.IBinder)>
<com.android.server.NetworkManagementService: void removeInterfaceFromLocalNetwork(java.lang.String)>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.Host getHost()>
<com.android.server.job.controllers.ConnectivityController: void onNetworkActive()>
<com.android.keyguard.KeyguardSecurityContainer: boolean needsInput()>
<com.android.server.wm.WindowManagerService: boolean clearWindowContentFrameStats(android.os.IBinder)>
<com.android.server.content.SyncQueue: void removeUserLocked(int)>
<com.android.printspooler.util.BitmapSerializeUtils: void readBitmapPixels(android.graphics.Bitmap,android.os.ParcelFileDescriptor)>
<com.android.server.accessibility.AccessibilityManagerService: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onEmergencyButtonClickedWhenInCall()>
<com.android.server.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int)>
<com.android.gallery3d.exif.ExifInterface: long[] getTagLongValues(int,int)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean)>
<com.android.systemui.qs.SecureSetting: void setValue(int)>
<com.android.statementservice.retriever.Statement: boolean equals(java.lang.Object)>
<com.android.systemui.recents.RecentsConfiguration: com.android.systemui.recents.RecentsConfiguration reinitialize(android.content.Context,com.android.systemui.recents.misc.SystemServicesProxy)>
<com.android.providers.settings.SettingsBackupAgent: void onCreate()>
<com.android.documentsui.DocumentsToolBar: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL10: void glLightf(int,int,float)>
<com.android.server.pm.PackageInstallerService: int createSession(android.content.pm.PackageInstaller.SessionParams,java.lang.String,int)>
<com.android.systemui.recents.misc.DozeTrigger: void stopDozing()>
<com.google.android.maps.MapView: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewFocusChanged(com.android.systemui.recents.views.TaskView,boolean)>
<com.android.settingslib.wifi.AccessPoint.AccessPointListener: void onAccessPointChanged(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.GraphicsStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void updateEverything()>
<com.android.systemui.qs.tiles.AirplaneModeTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<com.android.systemui.egg.MLand: float lerp(float,float,float)>
<com.android.server.am.BatteryStatsService: void noteStopGps(int)>
<com.android.server.wm.WindowManagerService: void createDisplayContentLocked(android.view.Display)>
<com.android.server.am.ActivityManagerService: void moveTaskBackwards(int)>
<com.android.systemui.BatteryMeterView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.policy.AccessibilityController: boolean isTouchExplorationEnabled()>
<com.android.server.connectivity.KeepalivePacketData: com.android.server.connectivity.KeepalivePacketData nattKeepalivePacket(java.net.InetAddress,int,java.net.InetAddress,int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollDescriptionIntoView(java.lang.String)>
<com.android.pacprocessor.PacNative: boolean stopPacSupport()>
<android.animation.FakeAnimator: long getStartDelay()>
<com.android.location.provider.ProviderPropertiesUnbundled: com.android.internal.location.ProviderProperties getProviderProperties()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFrameColor(int)>
<android.content.res.BridgeTypedArray: int getThemeAttributeId(int,int)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.Throwable)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isInputRestricted()>
<com.android.systemui.statusbar.DragDownHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setupActionBar()>
<com.android.keyguard.NumPadKey: void doHapticKeyClick()>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.documentsui.DocumentsActivity: void onPostCreate(android.os.Bundle)>
<com.android.server.AppOpsService.ClientState: void binderDied()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isPinnedHeadsUp(android.view.View)>
<com.android.server.wm.WindowManagerService.WindowChangeListener: void focusChanged()>
<com.android.systemui.statusbar.phone.ActivityStarter: void preventNextAnimation()>
<com.android.systemui.statusbar.stack.StackViewState: void copyFrom(com.android.systemui.statusbar.stack.ViewState)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector childSelector(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isOccluded()>
<com.android.uiautomator.core.UiObject: boolean longClickTopLeft()>
<com.android.keyguard.KeyguardSecurityCallback: void userActivity()>
<com.android.server.content.SyncStorageEngine: void writeAllState()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setInterceptDelegateEnabled(boolean)>
<com.android.server.NetworkManagementService: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>
<com.android.server.NetworkManagementService: void systemReady()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.server.input.InputManagerService: void registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener)>
<com.android.server.am.BatteryStatsService: void noteNetworkInterfaceType(java.lang.String,int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitTypeArgument()>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onThresholdReached()>
<com.android.tools.layoutlib.create.AbstractClassAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.gallery3d.glrenderer.BasicTexture: int getTarget()>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getJavaPkgClasses()>
<com.android.server.am.BatteryStatsService: void noteUserActivity(int,int)>
<javax.microedition.khronos.opengles.GL10: void glLineWidthx(int)>
<com.android.server.notification.ConditionProviders: android.service.notification.Condition findCondition(android.content.ComponentName,android.net.Uri)>
<com.android.documentsui.ColumnAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onAccessPointsChanged()>
<com.android.systemui.tuner.QsTuner: void onPause()>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onZenAvailableChanged(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void refresh()>
<com.android.systemui.statusbar.policy.DateView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.obex.PrivateOutputStream: void write(byte[],int,int)>
<javax.microedition.khronos.opengles.GL10: void glClientActiveTexture(int)>
<com.android.systemui.recents.misc.SystemServicesProxy: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>
<com.android.gallery3d.glrenderer.BasicTexture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int,int,int)>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl: com.android.systemui.statusbar.policy.NetworkController.MobileDataController.DataUsageInfo getDataUsageInfo()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getId()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createPackageContext(java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableView: void setOnHeightChangedListener(com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener)>
<com.android.systemui.statusbar.StackScrollerDecorView: boolean isTransparent()>
<com.android.server.notification.NotificationManagerInternal: void enqueueNotification(java.lang.String,java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[],int)>
<com.android.gallery3d.glrenderer.Texture: int getWidth()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void removeChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldDisableNavbarGestures()>
<com.android.systemui.statusbar.policy.RemoteInputView: void onFinishInflate()>
<com.android.systemui.recents.views.DebugOverlayView.DebugOverlayViewCallbacks: void onSecondarySeekBarChanged(float)>
<com.android.server.wm.WindowManagerService: int getCameraLensCoverState()>
<com.android.server.audio.AudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>
<com.android.systemui.volume.MediaSessions: java.lang.String getControllerName(android.media.session.MediaController)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte[],int,int)>
<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>
<com.android.server.audio.AudioService: int getMode()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener: void flingTopOverscroll(float,boolean)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.qs.QSTile: void handleDestroy()>
<com.android.systemui.statusbar.ActivatableNotificationView: android.view.View getContentView()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.ScrimView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.NotificationGuts: void onFinishInflate()>
<com.android.systemui.statusbar.phone.QSTileHost: void warn(java.lang.String,java.lang.Throwable)>
<com.android.systemui.recents.RecentsConfiguration: com.android.systemui.recents.RecentsConfiguration getInstance()>
<com.android.server.audio.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>
<com.android.server.firewall.FilterFactory: java.lang.String getTagName()>
<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>
<com.android.documentsui.model.DocumentInfo: com.android.documentsui.model.DocumentInfo fromCursor(android.database.Cursor,java.lang.String)>
<com.android.documentsui.RecentLoader: void onStopLoading()>
<com.android.server.accounts.AccountManagerService: void clearPassword(android.accounts.Account)>
<com.android.location.provider.GmsFusedBatchOptions: android.location.FusedBatchOptions getParcelableOptions()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void notificationLightOff()>
<com.android.systemui.recents.model.FilteredTaskList: void updateFilteredTasks()>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.BaseStatusBar: void updateVisibleToUser()>
<com.android.gallery3d.exif.ExifInterface: int getDefinedTagCount(int)>
<com.android.server.notification.RankingHelper: com.android.server.notification.NotificationSignalExtractor findExtractor(java.lang.Class)>
<com.android.server.policy.WakeGestureListener: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.tuner.QsTuner: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.server.power.ShutdownThread: void run()>
<com.android.systemui.volume.SpTexts: void update()>
<com.android.gallery3d.glrenderer.BasicTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.server.wm.WindowManagerService: float getTransitionAnimationScaleLocked()>
<com.android.shell.BugreportWarningActivity: void onCreate(android.os.Bundle)>
<com.android.server.audio.AudioService.VolumeStreamState: int getMaxIndex()>
<com.android.systemui.qs.tiles.AirplaneModeTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.gallery3d.glrenderer.RawTexture: void setIsFlippedVertically(boolean)>
<com.android.documentsui.model.RootInfo: boolean isDownloads()>
<com.android.server.DropBoxManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.view.ViewPropertyAnimator,float,float,float,float)>
<javax.microedition.khronos.opengles.GL10: void glMaterialx(int,int,int)>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.ConnectivityService: int getDefaultTcpRwnd()>
<com.android.server.audio.AudioService: void setSpeakerphoneOn(boolean)>
<com.android.server.location.LocationProviderInterface: void disable()>
<com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementReceiver: void onDetailsChanged(com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementDetails)>
<com.android.documentsui.LocalPreferences: void setDisplayFileSize(android.content.Context,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.View getChildContentView(android.view.View)>
<com.android.server.wm.WindowAnimator: void dumpLocked(java.io.PrintWriter,java.lang.String,boolean)>
<com.android.layoutlib.bridge.android.BridgeWindow: void onAnimationStopped()>
<com.android.server.clipboard.ClipboardService: boolean hasClipboardText(java.lang.String)>
<com.android.systemui.egg.MLand: void <init>(android.content.Context)>
<com.android.server.statusbar.StatusBarManagerService: void disable2ForUser(int,android.os.IBinder,java.lang.String,int)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getOrdinal()>
<com.android.server.am.ActivityManagerService: void notifyEnterAnimationComplete(android.os.IBinder)>
<com.android.systemui.statusbar.policy.UserSwitcherController: boolean isSimpleUserSwitcher()>
<com.android.documentsui.FilteringCursorWrapper: android.os.Bundle getExtras()>
<com.android.systemui.statusbar.stack.AmbientState: int getInnerHeight()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onDreamingStarted()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void removeAutoRemovalCallbacks()>
<com.android.systemui.recents.views.SwipeHelper.Callback: void onSwipeChanged(android.view.View,float)>
<com.android.systemui.statusbar.NotificationContentView: int getContentHeight()>
<com.android.keyguard.KeyguardSecurityContainer: void showMessage(java.lang.String,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isBusy()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void removeRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<com.android.systemui.statusbar.ExpandableView: void onMeasure(int,int)>
<com.android.server.pm.PackageInstallerService: android.content.pm.IPackageInstallerSession openSession(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardVisibilityChanged(boolean)>
<com.android.systemui.qs.tiles.AirplaneModeTile: int getMetricsCategory()>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitSource(java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String byteToHexString(byte,boolean)>
<com.android.systemui.statusbar.CommandQueue: void startAssist(android.os.Bundle)>
<com.android.server.policy.WakeGestureListener: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void destroy()>
<com.android.server.trust.TrustArchive: void logAgentDied(int,android.content.ComponentName)>
<com.android.server.am.BatteryStatsService: long computeBatteryTimeRemaining()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.server.am.ActivityManagerService: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isAutoConnectable()>
<com.android.documentsui.DocumentsToolBar: android.view.MenuItem getSearchMenu()>
<com.android.printspooler.model.PrintSpoolerService: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<com.android.documentsui.model.DocumentInfo: void updateSelf(android.content.ContentResolver)>
<com.android.settingslib.bluetooth.MapProfile: java.lang.String toString()>
<com.android.server.ConnectivityService: void registerNetworkFactory(android.os.Messenger,java.lang.String)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: byte readByte()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering()>
<com.android.uiautomator.testrunner.TestCaseCollector: void <init>(java.lang.ClassLoader,com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter)>
<com.android.server.usb.UsbService.Lifecycle: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)>
<com.android.commands.pm.Pm: int runMovePrimaryStorage()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getStackTranslation()>
<android.os.HandlerThread_Delegate: void cleanUp(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyConfigurationChanged()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>
<com.android.commands.svc.WifiCommand: void run(java.lang.String[])>
<com.android.server.wallpaper.WallpaperManagerService: void setDisplayPadding(android.graphics.Rect,java.lang.String)>
<com.android.gallery3d.glrenderer.UploadedTexture: void setOpaque(boolean)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.layoutlib.bridge.android.BridgeContext getCurrentContext()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean isEmergencyOnly()>
<com.android.server.am.ActivityManagerService: int getUidForIntentSender(android.content.IIntentSender)>
<com.android.documentsui.RecentsCreateFragment.RecentsCreateLoader: java.util.List loadInBackground(android.net.Uri,android.os.CancellationSignal)>
<com.android.systemui.statusbar.phone.TrustDrawable: void setTrustManaged(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long)>
<com.android.systemui.statusbar.StackScrollerDecorView: void performVisibilityAnimation(boolean,java.lang.Runnable)>
<com.android.systemui.tuner.DemoModeFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context)>
<com.android.server.wm.WindowManagerService: void enableScreenAfterBoot()>
<com.android.server.audio.AudioService.VolumeController: boolean suppressAdjustment(int,int,boolean)>
<javax.obex.ServerOperation: void noBodyHeader()>
<com.android.server.pm.PermissionsState: void copyFrom(com.android.server.pm.PermissionsState)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getExternalCacheDir()>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isScreenBrightnessBoosted()>
<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>
<com.android.systemui.settings.ToggleSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
<com.android.documentsui.DirectoryView: void <init>(android.content.Context)>
<com.android.server.content.SyncStorageEngine: void setOnSyncRequestListener(com.android.server.content.SyncStorageEngine.OnSyncRequestListener)>
<com.android.keyguard.KeyguardUpdateMonitor: void onKeyguardVisibilityChanged(boolean)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Long getTagLongValue(int,int)>
<com.android.systemui.qs.tiles.DndTile: void setVisible(android.content.Context,boolean)>
<com.android.layoutlib.bridge.impl.Stack: void <init>(int)>
<com.android.gallery3d.glrenderer.Texture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,java.nio.IntBuffer)>
<com.android.server.AttributeCache: com.android.server.AttributeCache.Entry get(java.lang.String,int,int[],int)>
<com.android.systemui.qs.QSTileView: android.view.View createIcon()>
<com.android.server.LocationManagerService: void locationCallbackFinished(android.location.ILocationListener)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setBouncerShowing(boolean)>
<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySet(java.lang.String,android.content.pm.KeySet)>
<com.android.systemui.qs.tiles.WifiTile: void handleClick()>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.notification.NotificationUsageStats: void registerBlocked(com.android.server.notification.NotificationRecord)>
<com.android.server.job.controllers.JobStatus: boolean hasUnmeteredConstraint()>
<android.view.IWindowManagerImpl: void removeWindowToken(android.os.IBinder)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setListening(com.android.systemui.statusbar.policy.NetworkController.SignalCallback,boolean)>
<com.android.systemui.tuner.DemoModeFragment: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.android.server.pm.PackageInstallerService: void setPermissionsResult(int,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.policy.HeadsUpManager: java.util.TreeSet getSortedEntries()>
<com.android.commands.settings.SettingsCmd: void main(java.lang.String[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onDragCancelled(android.view.View)>
<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent.Callbacks,int,android.content.ComponentName[],android.content.ComponentName,boolean)>
<com.android.systemui.recents.views.TaskView: void setDim(int)>
<com.android.systemui.statusbar.AnimatedImageView: void setImageResource(int)>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightAvailabilityChanged(boolean)>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: void add(android.view.MotionEvent)>
<com.android.server.am.ActivityManagerService: void activityDestroyed(android.os.IBinder)>
<com.android.systemui.settings.CurrentUserTracker: int getCurrentUserId()>
<com.android.systemui.volume.VolumeDialogController: void notifyVisible(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getProfileWithMinimumFailedPasswordsForWipe(int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: java.util.List getNotificationChildren()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageScale(float,boolean)>
<com.android.systemui.recents.views.TaskStackView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.recents.model.TaskStack: void createAffiliatedGroupings(com.android.systemui.recents.RecentsConfiguration)>
<com.android.server.connectivity.NetworkAgentInfo: boolean addRequest(android.net.NetworkRequest)>
<com.android.systemui.statusbar.tv.TvStatusBar: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<android.graphics.Paint_Delegate: android.graphics.ColorFilter_Delegate getColorFilter()>
<com.android.media.remotedisplay.RemoteDisplay: void setVolume(int)>
<com.android.server.audio.AudioService: void <init>(android.content.Context)>
<com.android.providers.settings.SettingsBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.systemui.volume.VolumeDialog.Callback: void onSettingsClicked()>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCancel(android.content.DialogInterface)>
<com.android.server.power.PowerManagerService: void lowLevelReboot(java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getBadgedLabel(java.lang.String,int)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,java.lang.String,android.app.Notification)>
<com.android.server.trust.TrustManagerService: void onSwitchUser(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName,int)>
<com.android.keyguard.AlphaOptimizedImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.res.BridgeResources: void getValue(int,android.util.TypedValue,boolean)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setOccluded(boolean)>
<com.android.systemui.volume.VolumeDialogMotion.Callback: void onAnimatingChanged(boolean)>
<com.android.systemui.qs.tiles.DndTile: void handleClick()>
<com.android.keyguard.CarrierText: void updateCarrierText()>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean,float,boolean)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurnedOff()>
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean hasStableIds()>
<com.android.systemui.recents.views.TaskViewHeader: void onFinishInflate()>
<android.util.BridgeXmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)>
<com.android.location.provider.ProviderRequestUnbundled: java.lang.String toString()>
<com.android.server.location.GeofenceManager: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.content.res.BridgeTypedArray: void sealArray()>
<com.android.systemui.recents.RecentsAppWidgetHostView: boolean isReinflateRequired()>
<com.android.systemui.recents.misc.DozeTrigger: void <init>(int,java.lang.Runnable)>
<com.android.systemui.recents.model.RecentsPackageMonitor: void unregister()>
<com.android.gallery3d.exif.ExifTag: java.lang.String toString()>
<com.android.server.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)>
<com.android.server.content.SyncOperation: boolean isManual()>
<com.android.systemui.statusbar.SignalClusterView: void onStateChanged()>
<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isDismissViewVisible()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onVisibilityChanged(boolean)>
<com.android.server.audio.AudioService: void setRingerModeInternal(int,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.gallery3d.exif.ExifTag: int getValueAsInt(int)>
<com.android.systemui.doze.DozeHost.Callback: void onBuzzBeepBlinked()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void showMySoftInput(android.os.IBinder,int)>
<com.android.server.media.MediaSessionRecord: void adjustVolume(int,int,java.lang.String,int,boolean)>
<com.android.server.policy.BarController: void <init>(java.lang.String,int,int,int,int,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void rotate(float,float,float,float)>
<com.android.server.usb.UsbService: void clearUsbDebuggingKeys()>
<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle(long)>
<com.android.documentsui.SortingCursorWrapper: void close()>
<com.android.server.pm.PreferredIntentResolver: com.android.server.pm.PreferredActivity[] newArray(int)>
<com.android.server.am.ActivityManagerService: void registerProcessObserver(android.app.IProcessObserver)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context getBaseContext(android.content.Context)>
<com.android.server.SystemServiceManager: void <init>(android.content.Context)>
<com.android.server.job.JobStore: android.util.ArraySet getJobs()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void connect(boolean)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSettingsSummary()>
<com.android.location.provider.ProviderRequestUnbundled: java.util.List getLocationRequests()>
<com.android.documentsui.model.DurableUtils: byte[] writeToArray(com.android.documentsui.model.Durable)>
<com.android.server.am.ActivityManagerService: void takePersistableUriPermission(android.net.Uri,int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvx(int,int,int)>
<com.android.systemui.statusbar.stack.AmbientState: void setLayoutHeight(int)>
<com.android.layoutlib.bridge.impl.ParserFactory: org.xmlpull.v1.XmlPullParser create(java.io.InputStream,java.lang.String)>
<com.android.systemui.volume.ZenModePanel.Callback: void onExpanded(boolean)>
<com.android.systemui.qs.tiles.UserDetailItemView: void bind(java.lang.String,android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onClosingFinished()>
<com.android.systemui.statusbar.policy.NetworkController.MobileDataController: com.android.systemui.statusbar.policy.NetworkController.MobileDataController.DataUsageInfo getDataUsageInfo()>
<com.android.server.NetworkManagementService: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void addSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setChildLocationsChangedListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnChildLocationsChangedListener)>
<com.android.systemui.qs.UsageTracker: boolean isRecentlyUsed()>
<com.android.uiautomator.core.UiAutomationShellWrapper: void disconnect()>
<com.android.systemui.power.PowerNotificationWarnings: void showSaverMode(boolean)>
<com.android.systemui.volume.Interaction.Callback: void onInteraction()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionContains(java.lang.String)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation(android.view.View[],java.lang.Runnable)>
<com.android.server.Watchdog: void processStarted(java.lang.String,int)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: boolean dismiss(boolean)>
<com.android.server.policy.EnableAccessibilityController: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearProfileOwner(android.content.ComponentName)>
<com.android.server.audio.AudioService: boolean isStreamAffectedByMute(int)>
<com.android.server.audio.MediaFocusControl: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector index(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setService(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.server.policy.PhoneWindowManager: boolean validateRotationAnimationLw(int,int,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getDoNotAskCredentialsOnBoot()>
<javax.obex.ObexTransport: void disconnect()>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glGenBuffers(int,int[],int)>
<com.android.systemui.egg.MLand: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.recents.views.TaskStackView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.content.SyncStorageEngine: void removePeriodicSync(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle)>
<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>
<com.android.server.pm.IntentFilterVerificationState: int getUserId()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMasterVolumeMuted(android.content.ComponentName,boolean)>
<com.android.documentsui.RootsLoader: void deliverResult(java.util.Collection)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void reset(boolean)>
<com.android.server.pm.PackageManagerService: java.util.List getAllIntentFilters(java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setSubs(java.util.List)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintRunningStateChanged(boolean)>
<com.android.server.accounts.AccountManagerService: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL10: void glOrthof(float,float,float,float,float,float)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void setWifiEnabled(boolean)>
<com.android.systemui.statusbar.policy.CastController: void setDiscovering(boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isGoingToNotificationShade()>
<com.android.server.am.ActivityManagerService: android.app.IActivityContainer createVirtualActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothSupported()>
<com.android.server.NetworkManagementService: void createPhysicalNetwork(int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void enableSystemApp(android.content.ComponentName,java.lang.String)>
<com.android.keyguard.KeyguardSecurityContainer: void dismiss(boolean)>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context)>
<com.android.server.TwilightCalculator: void calculateTwilight(long,double,double)>
<com.android.server.am.ActivityManagerService: android.graphics.Point getAppTaskThumbnailSize()>
<com.android.statementservice.DirectStatementService: void onCreate()>
<com.android.printspooler.model.PrintSpoolerService: void onCreate()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
<com.android.server.policy.PhoneWindowManager: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<com.android.location.provider.FusedLocationHardware: void stopBatching(int)>
<com.android.photos.BitmapRegionTileSource: com.android.gallery3d.glrenderer.BasicTexture getPreview()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onDreamingStopped()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.systemui.statusbar.phone.QSTileHost: android.os.Looper getLooper()>
<com.android.server.LockSettingsService: boolean havePassword(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getMinHeight()>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldInterrupt(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.keyguard.KeyguardSecurityCallback: void dismiss(boolean)>
<com.android.systemui.statusbar.phone.TrustDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.server.input.InputManagerService: void setSystemUiVisibility(int)>
<com.android.server.am.ContentProviderConnection: void <init>(com.android.server.am.ContentProviderRecord,com.android.server.am.ProcessRecord)>
<com.android.settingslib.animation.AppearAnimationCreator: void createAnimation(java.lang.Object,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardFadingAway(boolean)>
<com.android.server.LockSettingsService: boolean checkVoldPassword(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void generateHeadsUpAnimation(com.android.systemui.statusbar.ExpandableNotificationRow,boolean)>
<com.android.systemui.volume.ZenFooter: void update()>
<android.view.WindowCallback: void onPanelClosed(int,android.view.Menu)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag getTag(int,int)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.applications.ApplicationsState.AppFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<android.graphics.LinearGradient_Delegate: java.awt.Paint getJavaPaint()>
<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>
<com.android.keyguard.KeyguardAbsKeyInputView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.server.policy.ImmersiveModeConfirmation: void <init>(android.content.Context)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setClient(android.print.IPrintSpoolerClient)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.keyguard.KeyguardDisplayManager: void hide()>
<com.android.systemui.statusbar.NotificationBackgroundView: int getActualHeight()>
<com.android.settingslib.bluetooth.PanProfile: int getOrdinal()>
<com.android.gallery3d.glrenderer.GLCanvas: void scale(float,float,float)>
<com.android.keyguard.KeyguardPasswordView: int getPasswordTextViewId()>
<com.android.documentsui.DirectoryFragment: void showNormal(android.app.FragmentManager,com.android.documentsui.model.RootInfo,com.android.documentsui.model.DocumentInfo,int)>
<com.android.uiautomator.core.UiObject: boolean isScrollable()>
<com.android.server.notification.PackagePriorityExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.location.GeofenceManager: void onProviderDisabled(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardNeedsInput(boolean)>
<com.android.systemui.volume.SegmentedButtons: void updateLocale()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>
<com.android.server.media.MediaSessionRecord: android.app.PendingIntent getMediaButtonReceiver()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitEnd()>
<com.android.systemui.volume.SegmentedButtons: void setSelectedValue(java.lang.Object,boolean)>
<com.android.documentsui.ProviderExecutor: void execute(android.os.AsyncTask,java.lang.Object[])>
<com.android.gallery3d.glrenderer.GLCanvas: void getBounds(android.graphics.Rect,int,int,int,int)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.awt.image.BufferedImage getImage()>
<com.android.systemui.recents.views.TaskStackViewScroller: boolean setStackScrollToInitialState()>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>
<com.android.externalstorage.TestDocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHideSensitive(boolean,boolean,long,long)>
<com.android.documentsui.SaveFragment: void setPending(boolean)>
<com.android.server.am.AppTimeTracker: void <init>(android.app.PendingIntent)>
<com.android.systemui.statusbar.tv.TvStatusBar: void updateIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon,com.android.internal.statusbar.StatusBarIcon)>
<com.android.server.accessibility.AccessibilityManagerService: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>
<com.android.documentsui.SectionedListAdapter: int getItemViewType(int)>
<com.android.uiautomator.core.UiDevice: boolean click(int,int)>
<com.android.server.am.ActivityManagerService: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>
<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>
<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>
<android.graphics.ColorFilter_Delegate: void applyFilter(java.awt.Graphics2D,int,int)>
<com.android.server.pm.Installer: int rmPackageDir(java.lang.String)>
<com.android.documentsui.RecentsCreateFragment: void onStart()>
<com.android.server.policy.BarController: int applyTranslucentFlagLw(android.view.WindowManagerPolicy.WindowState,int,int)>
<com.android.systemui.statusbar.phone.DozeScrimController: void <init>(com.android.systemui.statusbar.phone.ScrimController,android.content.Context)>
<com.android.systemui.statusbar.policy.SignalController: int getQsCurrentIconId()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateSpeedBumpIndex(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.GestureRecorder getGestureRecorder()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getNoBackupFilesDir()>
<com.android.server.connectivity.Tethering: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.LockSettingsService: long getLong(java.lang.String,long,int)>
<com.android.printspooler.model.PrintSpoolerService: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: android.view.View getRightPreview()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.gallery3d.common.Utils: java.lang.String maskDebugInfo(java.lang.Object)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onInputRestrictedStateChanged(boolean)>
<com.android.printspooler.model.PrintSpoolerService: void createPrintJob(android.print.PrintJobInfo)>
<com.android.systemui.recents.misc.Utilities: int getColorWithOverlay(int,int,float)>
<com.android.server.connectivity.Vpn: void setPackageAuthorization(java.lang.String,boolean)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onPause()>
<com.android.server.location.FusedLocationHardwareSecure: void flushBatchedLocations()>
<com.android.server.MmsServiceBroker: void <init>(android.content.Context)>
<com.android.server.notification.SystemConditionProviderService: java.lang.String ts(long)>
<com.android.documentsui.model.DocumentInfo: int compareToIgnoreCaseNullable(java.lang.String,java.lang.String)>
<com.android.documentsui.FilteringCursorWrapper: void close()>
<com.android.systemui.qs.DataUsageGraph: void setLevels(long,long,long)>
<com.android.server.notification.NotificationSignalExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.server.camera.CameraService: void onSwitchUser(int)>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.am.ActivityManagerService: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
<com.android.documentsui.DirectoryFragment: void onUserModeChanged()>
<com.android.systemui.recents.views.TaskStackView: boolean performAccessibilityAction(int,android.os.Bundle)>
<com.android.server.pm.PackageManagerService: void clearCrossProfileIntentFilters(int,java.lang.String)>
<com.android.location.provider.ActivityRecognitionEvent: java.lang.String getActivity()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setTrackingHeadsUp(boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onLayout(boolean,int,int,int,int)>
<com.android.location.fused.FusionEngine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSPanel.Callback: void onToggleStateChanged(boolean)>
<android.graphics.PixelXorXfermode_Delegate: java.awt.Composite getComposite(int)>
<com.android.server.connectivity.Vpn: com.android.internal.net.VpnInfo getVpnInfo()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: java.util.ArrayList getAllTaskStacks()>
<com.android.server.fingerprint.FingerprintService: long getAuthenticatorId()>
<com.android.server.pm.Installer: int removeUserDataDirs(java.lang.String,int)>
<com.android.tools.layoutlib.create.ICreateInfo: java.util.Set getExcludedClasses()>
<com.android.server.fingerprint.FingerprintService: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.Bridge: void setCachedBitmap(java.lang.String,android.graphics.Bitmap,java.lang.Object)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onEmptySpaceClicked(float,float)>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,java.nio.FloatBuffer)>
<com.android.keyguard.KeyguardStatusView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.SignalClusterView: void setSubs(java.util.List)>
<com.android.server.am.ActivityManagerService: void dumpHeapFinished(java.lang.String)>
<android.view.IWindowManagerImpl: void stopFreezingScreen()>
<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<com.android.gallery3d.common.Utils: java.lang.String escapeXml(java.lang.String)>
<com.android.server.content.SyncStorageEngine: boolean isSyncActive(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>
<com.android.server.location.MockProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.server.media.MediaSessionRecord: boolean hasFlag(int)>
<com.android.systemui.statusbar.policy.NetworkController: com.android.systemui.statusbar.policy.NetworkController.MobileDataController getMobileDataController()>
<com.android.location.provider.ActivityChangedEvent: void <init>(java.util.List)>
<com.android.systemui.qs.QSContainer: void setHeightOverride(int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.gallery3d.exif.ExifTag: boolean setTimeValue(long)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<com.android.server.location.FusedLocationHardwareSecure: boolean supportsDiagnosticDataInjection()>
<com.android.server.content.SyncOperation: boolean ignoreBackoff()>
<com.android.server.input.InputManagerService: void updateShowTouchesFromSettings()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.server.pm.PackageManagerService: boolean setBlockUninstallForUser(java.lang.String,boolean,int)>
<com.android.gallery3d.common.Utils: java.lang.String[] copyOf(java.lang.String[],int)>
<com.android.server.am.ActivityManagerService: void stopLockTaskMode()>
<com.android.keyguard.KeyguardPasswordView: void showUsabilityHint()>
<com.android.server.audio.AudioService.VolumeStreamState: int observeDevicesForStream_syncVSS(boolean)>
<com.android.systemui.statusbar.policy.HotspotController: void addCallback(com.android.systemui.statusbar.policy.HotspotController.Callback)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setupActionBar()>
<com.android.printspooler.util.PrintOptionUtils: java.lang.String getAdvancedOptionsActivityName(android.content.Context,android.content.ComponentName)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getObbDirs()>
<com.android.server.pm.UserManagerService: void setUserName(int,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon()>
<com.android.systemui.statusbar.NotificationData: java.util.ArrayList getActiveNotifications()>
<com.android.server.connectivity.NetworkAgentInfo: int compareTo(com.android.server.connectivity.NetworkAgentInfo)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setUserSwitcherController(com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStrongAuthStateChanged(int)>
<com.android.server.location.GpsNavigationMessageProvider: void <init>(android.os.Handler)>
<com.android.systemui.settings.CurrentUserTracker: void startTracking()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector text(java.lang.String)>
<com.android.server.location.LocationProviderInterface: com.android.internal.location.ProviderProperties getProperties()>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,int[],int)>
<com.android.tools.layoutlib.create.DependencyFinder: void <init>(com.android.tools.layoutlib.create.Log)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.content.SyncStorageEngine: void updateOrAddPeriodicSync(com.android.server.content.SyncStorageEngine.EndPoint,long,long,android.os.Bundle)>
<com.android.systemui.statusbar.AnimatedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.content.ContentService.ObserverNode: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,int[],android.util.SparseIntArray)>
<com.android.printspooler.widget.PageContentView: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>
<com.android.layoutlib.bridge.android.BridgeContext: void unbindService(android.content.ServiceConnection)>
<com.android.server.pm.PackageManagerService: void finishPackageInstall(int)>
<com.android.server.am.BatteryStatsService: void noteJobStart(java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setGroupExpanded(android.service.notification.StatusBarNotification,boolean)>
<com.android.documentsui.DirectoryFragment: void onActivityCreated(android.os.Bundle)>
<com.android.systemui.statusbar.stack.AmbientState: int getScrollY()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<com.android.keyguard.KeyguardSimPinView: int getPromtReasonStringRes(int)>
<com.android.server.ConnectivityService: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager)>
<com.android.server.content.SyncStorageEngine: void clearAllBackoffsLocked(com.android.server.content.SyncQueue)>
<android.graphics.ColorFilter_Delegate: android.graphics.ColorFilter_Delegate getDelegate(long)>
<com.android.server.twilight.TwilightListener: void onTwilightStateChanged()>
<android.graphics.DashPathEffect_Delegate: boolean isSupported()>
<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.State getState()>
<com.android.uiautomator.core.UiObject: boolean clickAndWaitForNewWindow(long)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isSafeMode()>
<com.android.systemui.qs.QSPanel: void showDetailAdapter(boolean,com.android.systemui.qs.QSTile.DetailAdapter,int[])>
<com.android.server.policy.GlobalActions.Action: boolean isEnabled()>
<com.android.systemui.tuner.TunerService: void addTunable(com.android.systemui.tuner.TunerService.Tunable,java.lang.String[])>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getGlobalSetting(android.content.Context,java.lang.String)>
<com.android.server.location.GeofenceManager: void onProviderEnabled(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean shouldDisableNavbarGestures()>
<com.android.server.content.SyncStorageEngine: int getSyncRandomOffset()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: java.lang.String getType(android.net.Uri)>
<com.android.layoutlib.bridge.android.BridgeContext: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.gallery3d.exif.ExifInterface: void deleteTag(int,int)>
<com.android.systemui.LoadAverageService: void onCreate()>
<com.android.server.job.controllers.AppIdleController: void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.server.am.ActivityManagerService: void setUserIsMonkey(boolean)>
<com.android.server.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
<com.android.server.power.PowerManagerService: void systemReady(com.android.internal.app.IAppOpsService)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getSecurityMode()>
<com.android.server.media.MediaSessionRecord: android.media.session.ISessionController getControllerBinder()>
<com.android.server.connectivity.DataConnectionStats: void startMonitoring()>
<android.graphics.PorterDuffColorFilter_Delegate: void applyFilter(java.awt.Graphics2D,int,int)>
<com.android.systemui.recents.model.TaskStack: void reset()>
<com.example.android.networkusage.NetworkActivity: void onStart()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void userActivity()>
<com.android.server.location.LocationProviderInterface: int getStatus(android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<com.android.server.fingerprint.FingerprintService: void binderDied()>
<com.android.documentsui.SortingCursorWrapper: java.lang.String[] getColumnNames()>
<com.android.server.DiskStatsService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.NotificationOverflowContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void <init>(android.content.Context)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitEnd()>
<javax.obex.ClientOperation: java.io.DataOutputStream openDataOutputStream()>
<com.android.keyguard.CarrierText: void onAttachedToWindow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>
<com.android.server.DeviceIdleController: void <init>(android.content.Context)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onScreenOff()>
<com.android.systemui.recents.views.TaskStackView.TaskStackViewCallbacks: void onTaskResize(com.android.systemui.recents.model.Task)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceInitializer(java.lang.String)>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable loadMimeIcon(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.LoadAverageService: void onDestroy()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFramePadding(float)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter hasDelays()>
<com.android.server.policy.WindowOrientationListener: boolean canDetectOrientation()>
<com.android.bluetoothmidiservice.BluetoothPacketDecoder: void decodePacket(byte[],android.media.midi.MidiReceiver)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean needsInput()>
<com.android.server.SystemService: void onStart()>
<javax.microedition.khronos.opengles.GL10: void glColorPointer(int,int,int,java.nio.Buffer)>
<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)>
<com.android.server.input.InputWindowHandle: void <init>(com.android.server.input.InputApplicationHandle,java.lang.Object,int)>
<com.android.server.am.UidRecord: java.lang.String toString()>
<com.android.server.content.SyncStorageEngine: void setIsTargetServiceActive(android.content.ComponentName,int,boolean)>
<com.android.documentsui.RecentsCreateFragment.RecentsCreateLoader: void <init>(android.content.Context,com.android.documentsui.RootsCache,com.android.documentsui.BaseActivity.State)>
<com.android.keyguard.KeyguardPinBasedInputView: void resetPasswordText(boolean)>
<com.android.printspooler.model.RemotePrintDocument.RemoteAdapterDeathObserver: void onDied()>
<javax.obex.ClientSession: javax.obex.HeaderSet disconnect(javax.obex.HeaderSet)>
<com.android.systemui.tuner.QsTuner: void onStartDrag()>
<com.android.server.notification.EventConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.BaseStatusBar: void showNextAffiliatedTask()>
<com.android.server.notification.SystemConditionProviderService: void onBootComplete()>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.io.File,boolean,com.android.resources.Density)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,float[],int)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.uiautomator.core.ShellUiAutomatorBridge: long getSystemLongPressTime()>
<com.android.server.trust.TrustAgentWrapper: void destroy()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerName(java.lang.String)>
<com.android.externalstorage.ExternalStorageProvider: void updateVolumes()>
<com.android.future.usb.UsbAccessory: java.lang.String getDescription()>
<com.android.systemui.statusbar.phone.PanelView: boolean shouldGestureIgnoreXTouchSlop(float,float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin(int)>
<com.android.server.notification.ZenLog: void traceUpdateZenMode(int,int)>
<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String,java.lang.String)>
<android.view.Display.ColorTransform: void <init>(int,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsOES(short,short,short,short,short)>
<android.content.res.BridgeResources: java.lang.CharSequence[] getTextArray(int)>
<android.content.res.BridgeResources: java.lang.String getResourceEntryName(int)>
<javax.microedition.khronos.egl.EGL10: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: void <init>(android.content.Context,android.app.UiAutomation)>
<com.android.systemui.recents.views.DebugOverlayView: void disable()>
<android.view.WindowCallback: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.android.server.am.ActivityManagerService: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void scale(float,float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<com.android.documentsui.RootCursorWrapper: java.lang.String[] getColumnNames()>
<com.android.printspooler.model.PrintSpoolerProvider: void <init>(android.content.Context,java.lang.Runnable)>
<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScoreAsValidated()>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.Prefs: void putBoolean(android.content.Context,java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,java.nio.IntBuffer)>
<com.android.server.am.ActivityManagerService: void notifyLaunchTaskBehindComplete(android.os.IBinder)>
<com.android.location.provider.GeofenceProvider: void onGeofenceHardwareChange(android.hardware.location.GeofenceHardware)>
<com.android.server.statusbar.StatusBarManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>
<com.android.server.wm.InputConsumerImpl: void dismiss()>
<com.android.server.LocationManagerService: void removeGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener)>
<com.android.server.am.ActivityManagerService.GrantUri: boolean equals(java.lang.Object)>
<android.view.IWindowManagerImpl: float getAnimationScale(int)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: android.content.Context getForegroundActivity()>
<com.android.systemui.statusbar.phone.PanelView: void setBar(com.android.systemui.statusbar.phone.PanelBar)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,int)>
<com.android.server.media.MediaSessionRecord: android.media.session.ISessionCallback getCallback()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustGrantedWithFlags(int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabled(int)>
<com.android.server.SystemServiceManager: void dump()>
<com.android.layoutlib.bridge.android.BridgeContext: android.graphics.drawable.Drawable peekWallpaper()>
<android.content.res.BridgeTypedArray: float getFraction(int,int,int,float)>
<com.android.location.fused.FusedLocationProvider: void onDisable()>
<javax.obex.Operation: java.io.DataInputStream openDataInputStream()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void reset()>
<com.android.systemui.assist.AssistOrbView: void onFinishInflate()>
<com.android.settingslib.wifi.WifiTracker: void dump(java.io.PrintWriter)>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissLowBatteryWarning()>
<com.android.server.am.ActivityManagerService: void unregisterReceiver(android.content.IIntentReceiver)>
<com.android.server.pm.PackageInstallerService: void updateSessionAppIcon(int,android.graphics.Bitmap)>
<com.android.server.wm.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>
<com.android.systemui.SwipeHelper: void setDensityScale(float)>
<com.android.server.audio.AudioService.VolumeStreamState: void checkFixedVolumeDevices()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.DemoMode: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.wm.WindowManagerService: boolean isRotationFrozen()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onBootCompleted()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,int[],int)>
<com.android.systemui.recents.model.RecentsTaskLoader: void onTrimMemory(int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isVolumeRestricted()>
<com.android.server.accessibility.ScreenMagnifier: void setNext(com.android.server.accessibility.EventStreamTransformation)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setSubTitle(java.lang.CharSequence)>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSave()>
<com.android.layoutlib.bridge.android.BridgeWindow: android.os.IBinder asBinder()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardOccluded(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showKeyguard()>
<com.android.server.pm.Installer: int linkNativeLibraryDirectory(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onSwipingAborted()>
<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.util.List getRecentTasks(int,int,boolean)>
<com.android.server.notification.ScheduleCalendar: void setSchedule(android.service.notification.ZenModeConfig.ScheduleInfo)>
<com.android.documentsui.DirectoryContainerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.systemui.recents.model.RecentsTaskLoader: void unloadTaskData(com.android.systemui.recents.model.Task)>
<android.graphics.LayerRasterizer_Delegate: boolean isSupported()>
<com.android.server.job.JobSchedulerService: void onStartUser(int)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerSignature(java.lang.String)>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.qs.QSTileView createTileView(android.content.Context)>
<com.android.server.pm.PackageManagerService: void forceDexOpt(java.lang.String)>
<com.android.server.am.ContentProviderConnection: void toShortString(java.lang.StringBuilder)>
<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)>
<com.android.systemui.recents.RecentsActivity: void onNewIntent(android.content.Intent)>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabledFromSource(android.os.WorkSource)>
<com.android.server.Watchdog: void addThread(android.os.Handler)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setQsScrimEnabled(boolean)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: java.lang.Object getGroup(int)>
<com.android.settingslib.wifi.AccessPoint: int hashCode()>
<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()>
<com.android.bluetoothmidiservice.BluetoothMidiService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.recents.RecentsConfiguration: boolean shouldAnimateNavBarScrim()>
<com.android.server.media.MediaSessionService: void notifyRemoteVolumeChanged(int,com.android.server.media.MediaSessionRecord)>
<com.android.systemui.qs.QSContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.FontFamily_Delegate: android.graphics.FontFamily_Delegate getDelegate(long)>
<com.android.server.job.JobSchedulerService: java.util.List getPendingJobs(int)>
<com.android.uiautomator.core.UiDevice: void setOrientationNatural()>
<com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener: void onUnlockMethodStateChanged()>
<com.android.server.notification.EventConditionProvider: void <init>(android.os.Looper)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.BitmapRegionTileSource.BitmapSource.State getLoadingState()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void runAfterAnimationFinished(java.lang.Runnable)>
<com.android.server.audio.AudioService: boolean isValidRingerMode(int)>
<com.android.server.connectivity.Tethering: int untether(java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener: void onDrawn()>
<com.android.server.usb.UsbDeviceManager: void bootCompleted()>
<com.android.server.trust.TrustArchive: void logTrustTimeout(int,android.content.ComponentName)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void findAndUpdateMediaNotifications()>
<com.android.systemui.qs.QSDualTileLabel: void setTypeface(android.graphics.Typeface)>
<com.android.keyguard.KeyguardUpdateMonitor: void onTrustManagedChanged(boolean,int)>
<com.android.server.accounts.AccountManagerService: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,int[],int)>
<com.android.commands.uiautomator.DumpCommand: java.lang.String detailedOptions()>
<com.google.android.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.content.ContentService: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.policy.AccessibilityController: void onAccessibilityStateChanged(boolean)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isTouchExplorationEnabled()>
<javax.obex.ServerOperation: void abort()>
<com.android.server.InputMethodManagerService: void notifyUserAction(int)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.RenderSession getSession()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getProfileOwner(int)>
<com.android.server.notification.ZenModeHelper: void onUserSwitched(int)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: void removeListener(com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrolledPixels(float,boolean,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void lockNow()>
<com.android.documentsui.FilteringCursorWrapper: void <init>(android.database.Cursor,java.lang.String[],java.lang.String[],long)>
<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean,java.lang.String,java.lang.String,int,boolean,boolean,java.lang.String,boolean)>
<com.android.systemui.ImageWallpaper: void onTrimMemory(int)>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.keyguard.KeyguardSecurityView: void onResume(int)>
<com.android.server.pm.PackageManagerService: boolean hasSystemFeature(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getInstalledApplications(int)>
<com.android.server.usb.UsbDeviceManager: void updateUserRestrictions()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void maybeEscalateHeadsUp()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>
<com.android.server.policy.PhoneWindowManager: void startKeyguardExitAnimation(long,long)>
<com.android.server.trust.TrustAgentWrapper: boolean isTrusted()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isFingerprintDetectionRunning()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitBaseType(char)>
<com.android.systemui.statusbar.phone.PanelView: int getClearAllHeight()>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void prepareTestCase(junit.framework.TestCase)>
<com.android.commands.sm.Sm: void runBenchmark()>
<com.android.systemui.qs.QSTileView: void init(android.view.View.OnClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String bytesToHexString(byte[],boolean)>
<com.android.systemui.doze.DozeHost: void pulseWhileDozing(com.android.systemui.doze.DozeHost.PulseCallback,int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void setHasNativeMethods(boolean,java.lang.String)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void start()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isBelowLastNotification(float,float)>
<com.android.server.pm.PackageInstallerService: java.io.File allocateStageDirLegacy(java.lang.String)>
<com.android.server.notification.RankingHelper: void extractSignals(com.android.server.notification.NotificationRecord)>
<com.android.server.NetworkManagementService: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyRemovedLocked(android.service.notification.StatusBarNotification)>
<com.android.server.notification.NotificationRecord: int getUserId()>
<com.android.systemui.statusbar.policy.RemoteInputView: void onClick(android.view.View)>
<com.android.systemui.qs.SignalTileView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void resetHeight()>
<com.android.systemui.volume.VolumeDialogMotion: boolean isAnimating()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAccessibilityController(com.android.systemui.statusbar.policy.AccessibilityController)>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.wallpapercropper.CropView: android.graphics.RectF getCrop()>
<com.android.keyguard.EmergencyCarrierArea: void <init>(android.content.Context)>
<android.graphics.Xfermode_Delegate: java.awt.Composite getComposite(int)>
<com.android.printspooler.widget.PrintContentView: void openOptions()>
<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean,java.lang.String,int,boolean)>
<com.android.server.notification.NotificationUsageStats: void registerPeopleAffinity(com.android.server.notification.NotificationRecord,boolean,boolean,boolean)>
<com.android.printspooler.ui.PrinterRegistry: void setTrackedPrinter(android.print.PrinterId)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.widget.FrameLayout getContentRoot()>
<com.android.keyguard.NumPadKey: void onMeasure(int,int)>
<com.android.documentsui.DocumentsToolBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.policy.NetworkController: void setWifiEnabled(boolean)>
<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionScaleUp(int,int,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getOverExpansionPixels()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setDeviceInitializer(android.content.ComponentName,android.content.ComponentName)>
<android.graphics.PorterDuffXfermode_Delegate: java.lang.String getSupportMessage()>
<com.android.layoutlib.bridge.android.AndroidLocale: java.util.Locale getDefault()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector selected(boolean)>
<com.android.server.am.CompatModePackages: boolean getFrontActivityAskCompatModeLocked()>
<com.android.systemui.volume.VolumeDialogController: void setZenMode(int)>
<com.android.statementservice.retriever.Statement: int hashCode()>
<com.android.systemui.recents.Recents: void start()>
<com.android.systemui.ExpandHelper.Callback: boolean canChildBeExpanded(android.view.View)>
<com.android.nfc_extras.EeAlreadyOpenException: void <init>(java.lang.String)>
<com.android.systemui.ExpandHelper: void cancel()>
<com.android.settingslib.bluetooth.BluetoothEventManager: void unregisterCallback(com.android.settingslib.bluetooth.BluetoothCallback)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: void <init>(com.android.internal.view.menu.MenuBuilder,android.content.Context)>
<com.android.server.content.ContentService: boolean getMasterSyncAutomaticallyAsUser(int)>
<com.android.statementservice.retriever.AbstractAsset: java.lang.String toJson()>
<com.android.documentsui.model.RootInfo: boolean isVideos()>
<com.android.keyguard.KeyguardUpdateMonitor: android.telephony.SubscriptionInfo getSubscriptionInfoForSubId(int)>
<com.android.systemui.statusbar.NotificationCustomViewWrapper: void setDark(boolean,boolean,long)>
<android.graphics.Gradient_Delegate.GradientPaint: void <init>(int[],float[],android.graphics.Shader.TileMode)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>
<com.android.systemui.recents.RecentsActivity: void onPrimarySeekBarChanged(float)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(int[],int)>
<android.graphics.Matrix_Delegate: boolean isIdentity()>
<com.android.server.pm.UserManagerService: void setUserRestrictions(android.os.Bundle,int)>
<com.android.server.pm.PackageManagerService: int getFlagsForUid(int)>
<com.android.layoutlib.bridge.Bridge: void setLog(com.android.ide.common.rendering.api.LayoutLog)>
<com.android.server.am.ActivityManagerService: void activityResumed(android.os.IBinder)>
<com.android.server.am.ActivityManagerService: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>
<com.android.layoutlib.bridge.impl.GcSnapshot: java.awt.Shape getClip()>
<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)>
<com.android.server.statusbar.StatusBarManagerService: void disable2(int,android.os.IBinder,java.lang.String)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean hasBorder()>
<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>
<android.content.res.BridgeResources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>
<com.android.server.location.FusedLocationHardwareSecure: void stopBatching(int)>
<com.android.tools.layoutlib.create.MethodListener: long onInvokeL(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.recents.views.TaskStackViewScroller: boolean boundScroll()>
<javax.obex.ClientOperation: void setGetFinalFlag(boolean)>
<com.android.wallpapercropper.CropView: android.graphics.Point getSourceDimensions()>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getDelegateClassNatives()>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onUserInput()>
<com.android.server.am.BatteryStatsService: android.os.ParcelFileDescriptor getStatisticsStream()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onExpansionChanged(boolean,boolean)>
<com.android.systemui.statusbar.GestureRecorder.Gesture.TagRecord: void <init>(long,java.lang.String,java.lang.String)>
<com.android.server.notification.NotificationComparator: int compare(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.systemui.volume.SafetyWarningDialog: void <init>(android.content.Context,android.media.AudioManager)>
<com.android.server.SystemConfig: android.util.ArraySet getLinkedApps()>
<com.android.systemui.statusbar.stack.StackScrollState: boolean applyState(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.StackViewState)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateTopInset()>
<com.android.server.LockSettingsService: void systemReady()>
<com.android.printspooler.ui.PageAdapter: void update(android.print.PageRange[],android.print.PageRange[],int,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<javax.obex.ObexTransport: int getMaxTransmitPacketSize()>
<android.content.res.BridgeResources: android.content.res.XmlResourceParser getAnimation(int)>
<com.android.gallery3d.util.IntArray: int removeLast()>
<com.android.systemui.statusbar.phone.PanelBar: void onTrackingStopped(com.android.systemui.statusbar.phone.PanelView,boolean)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getPositionDescription()>
<com.android.systemui.recents.misc.Console: void logDivider(boolean)>
<com.android.server.notification.ConditionProviders: void onUserSwitched(int)>
<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void sendKeyguardBouncerChanged(boolean)>
<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setFlashlightController(com.android.systemui.statusbar.policy.FlashlightController)>
<com.android.layoutlib.bridge.bars.TitleBar: android.widget.TextView getStyleableTextView()>
<com.android.systemui.recents.views.TaskView: float getTaskProgress()>
<com.android.documentsui.RecentLoader: void onStartLoading()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onFinishedGoingToSleep()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte[])>
<com.android.server.am.ActivityManagerService: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isTrackingBlocked()>
<com.android.location.provider.ActivityRecognitionProvider: boolean enableActivityEvent(java.lang.String,int,long)>
<android.graphics.Paint_Delegate: int getAlpha()>
<com.android.gallery3d.util.IntArray: void clear()>
<com.android.server.am.ActivityManagerService: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>
<com.android.keyguard.KeyguardStatusView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.StackScrollerDecorView: void cancelAnimation()>
<com.android.commands.pm.Pm: int runRemoveUser()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void preloadRecentApps()>
<com.android.server.am.ActivityManagerService: void setImmersive(android.os.IBinder,boolean)>
<com.android.systemui.recents.views.SwipeHelper: void <init>(int,com.android.systemui.recents.views.SwipeHelper.Callback,float,float)>
<com.android.server.NetworkManagementService: void setGlobalAlert(long)>
<com.android.systemui.statusbar.NotificationViewWrapper: void notifyContentUpdated()>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.am.DumpHeapProvider: java.io.File getJavaFile()>
<com.android.systemui.qs.QSContainer: int getDesiredHeight()>
<com.android.server.print.PrintManagerService: void onStart()>
<com.android.systemui.statusbar.ExpandableOutlineView: void setActualHeight(int,boolean)>
<android.util.BridgeXmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isProfileReady()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isDozing()>
<com.android.gallery3d.common.Utils: long crc64Long(java.lang.String)>
<com.android.commands.bu.Backup: void main(java.lang.String[])>
<com.android.systemui.recents.views.TaskStackView: void updateMinMaxScrollForStack(com.android.systemui.recents.model.TaskStack,boolean,boolean)>
<com.android.server.NetworkManagementService: void addVpnUidRanges(int,android.net.UidRange[])>
<com.android.server.statusbar.StatusBarManagerService: void expandSettingsPanel()>
<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>
<com.android.server.AppOpsService: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)>
<com.android.server.wm.WindowManagerService: void setWindowWallpaperDisplayOffsetLocked(com.android.server.wm.WindowState,int,int)>
<com.android.systemui.recents.model.Task: java.lang.String toString()>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<com.android.server.am.ActivityManagerService: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int,int)>
<com.android.server.AppOpsService: int noteOperation(int,int,java.lang.String)>
<com.android.server.webkit.WebViewUpdateService: void <init>(android.content.Context)>
<com.android.systemui.recents.Recents: com.android.systemui.recents.model.RecentsTaskLoadPlan consumeInstanceLoadPlan()>
<com.android.server.policy.PhoneWindowManager: boolean isTopLevelWindow(int)>
<com.android.server.am.ActivityManagerService: boolean releaseActivityInstance(android.os.IBinder)>
<com.android.server.policy.GlobalActions.Action: boolean showDuringKeyguard()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageAlpha(float,boolean)>
<android.content.res.BridgeResources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
<com.android.server.pm.PackageManagerService: boolean isSafeMode()>
<com.android.server.connectivity.Tethering: int setUsbTethering(boolean)>
<com.android.gallery3d.glrenderer.BasicTexture: void setBorder(boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurningOn()>
<com.android.systemui.statusbar.DismissViewButton: boolean isButtonStatic()>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder addInnerPackageMapOrThrow(java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardSimPukView: int getPromtReasonStringRes(int)>
<com.android.systemui.statusbar.phone.PanelHolder: void onFinishInflate()>
<com.android.systemui.statusbar.ActivatableNotificationView: int getRippleColor()>
<com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks: void onAllTaskViewsDismissed()>
<com.android.commands.pm.Pm: int run(java.lang.String[])>
<com.android.server.am.ActivityManagerService: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<com.android.systemui.statusbar.policy.BatteryController: void <init>(android.content.Context)>
<com.android.systemui.statusbar.BaseStatusBar: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.pacprocessor.PacService: void onCreate()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.ZenModeController.Callback)>
<android.view.IWindowManagerImpl: android.util.DisplayMetrics getMetrics()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String convertToQuotedString(java.lang.String)>
<com.android.keyguard.KeyguardHostView: void finish(boolean)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvx(int,int,int)>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.model.Task.TaskKey: void <init>(int,int,android.content.Intent,int,long,long)>
<com.android.layoutlib.bridge.android.BridgeContext: void setScrollYPos(android.view.View,int)>
<com.android.server.policy.PhoneWindowManager: android.view.animation.Animation createForceHideWallpaperExitAnimation(boolean)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: void recycle()>
<com.android.server.policy.WakeGestureListener: boolean isSupported()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.server.firewall.FilterFactory: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>
<com.android.keyguard.KeyguardPasswordView: java.lang.String getPasswordText()>
<javax.microedition.khronos.opengles.GL10: void glVertexPointer(int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.wm.KeyguardDisableHandler: void handleMessage(android.os.Message)>
<com.android.server.TextServicesManagerService: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>
<com.android.server.notification.EventConditionProvider: void onSubscribe(android.net.Uri)>
<com.android.server.policy.BarController: void setShowTransparent(boolean)>
<com.android.server.pm.PermissionsState: int grantRuntimePermission(com.android.server.pm.BasePermission,int)>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,int[],int)>
<com.android.server.connectivity.Vpn: boolean appliesToUid(int)>
<android.graphics.Matrix_Delegate: void set(float[])>
<com.android.systemui.qs.QSFooter: void onClick(android.content.DialogInterface,int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerSignature(java.lang.String)>
<com.android.systemui.statusbar.NotificationData.Environment: boolean shouldHideSensitiveContents(int)>
<javax.obex.ObexTransport: void create()>
<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter: boolean accept(java.lang.reflect.Method)>
<com.android.server.am.ActivityManagerService: void updateLockTaskPackages(int,java.lang.String[])>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean onMenuPressed()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: float getAttributeFloatValue(int,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setKeyguardFadingAway(long,long,long)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.io.InputStream,java.io.OutputStream)>
<com.android.systemui.qs.tiles.CastTile: void setListening(boolean)>
<com.android.gallery3d.common.Utils: int floorLog2(float)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: void tag(long,java.lang.String,java.lang.String)>
<com.android.gallery3d.exif.ExifTag: short getDataType()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isPluggedIn()>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>
<com.android.tools.layoutlib.create.MethodAdapter: long onInvokeL(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isChildInGroupWithSummary(android.service.notification.StatusBarNotification)>
<com.android.systemui.keyboard.BluetoothDialog: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.HidProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.stack.AmbientState: float getTopPadding()>
<com.android.location.provider.FusedLocationHardware: int getSupportedBatchSize()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getClassAttribute()>
<com.android.systemui.recents.ScreenPinningRequest: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<com.android.documentsui.RootsCache: com.android.documentsui.model.RootInfo getRootBlocking(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.BarTransitions: void finishAnimations()>
<com.android.keyguard.KeyguardSecurityCallback: boolean isVerifyUnlockOnly()>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setHomeAsUp(boolean)>
<com.android.systemui.statusbar.ExpandableView: int getContentHeight()>
<com.android.systemui.recents.RecentsConfiguration: void getAvailableTaskStackBounds(int,int,int,int,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.volume.ZenModePanel: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void launchCamera(boolean,int)>
<com.android.server.ConnectivityService: void reportInetCondition(int,int)>
<com.android.server.usb.UsbHostManager: void systemReady()>
<com.android.keyguard.KeyguardHostView.OnDismissAction: boolean onDismiss()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void <init>(com.android.systemui.statusbar.policy.UserSwitcherController)>
<javax.microedition.khronos.opengles.GL10: void glClearStencil(int)>
<com.android.systemui.statusbar.policy.RotationLockController: boolean isRotationLocked()>
<com.android.uiautomator.core.UiDevice: void initialize(com.android.uiautomator.core.UiAutomatorBridge)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onPanelTrackingStopped()>
<com.android.server.FgThread: android.os.Handler getHandler()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void snooze()>
<com.android.server.notification.RankingReconsideration: boolean isCancelled()>
<com.android.keyguard.KeyguardSimPukView: void onFinishInflate()>
<com.android.systemui.volume.VolumeDialog: void dismissH(int)>
<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isQsDetailShowing()>
<com.android.layoutlib.bridge.impl.ResourceHelper: int getColor(java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults: int getDefaultVoiceSubId()>
<com.android.systemui.statusbar.NotificationOverflowContainer: void onFinishInflate()>
<com.android.server.ConnectivityService: boolean removeVpnAddress(java.lang.String,int)>
<com.android.printspooler.widget.PrintContentView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.layoutlib.bridge.Bridge: void setCached9Patch(java.lang.String,com.android.ninepatch.NinePatchChunk,java.lang.Object)>
<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>
<com.android.systemui.LoadAverageService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void bindService(android.content.Context)>
<com.android.server.usage.AppIdleHistory: boolean isIdle(int,java.lang.String)>
<com.android.keyguard.AlphaOptimizedRelativeLayout: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: int getMode()>
<com.android.server.connectivity.Nat464Xlat: void interfaceLinkStateChanged(java.lang.String,boolean)>
<com.android.tools.layoutlib.create.MethodAdapter: double onInvokeD(java.lang.String,boolean,java.lang.Object)>
<com.android.providers.settings.SettingsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.tv.TvInputManagerService: void onStart()>
<com.android.keyguard.KeyguardSecurityCallback: void reportUnlockAttempt(boolean,int)>
<javax.obex.ServerOperation: int getMaxPacketSize()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onAdjustVolume(com.android.media.remotedisplay.RemoteDisplay,int)>
<com.android.systemui.Somnambulator: void onStart()>
<javax.obex.ClientOperation: java.io.OutputStream openOutputStream()>
<com.android.systemui.recents.views.TaskStackView.TaskStackViewCallbacks: void onTaskStackFilterTriggered()>
<com.android.documentsui.RecentLoader: void <init>(android.content.Context,com.android.documentsui.RootsCache,com.android.documentsui.BaseActivity.State)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks: void onTaskViewClicked()>
<com.android.server.am.ActivityManagerService: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>
<com.android.server.wm.WindowManagerService: void pauseKeyDispatching(android.os.IBinder)>
<com.android.server.clipboard.ClipboardService: android.content.ClipDescription getPrimaryClipDescription(java.lang.String)>
<android.view.IWindowManagerImpl: boolean inKeyguardRestrictedInputMode()>
<com.android.keyguard.KeyguardPinBasedInputView: void onFinishInflate()>
<com.android.server.location.PassiveProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: java.lang.String getMobileDataNetworkName()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getCollapseSecondCardPadding()>
<com.android.server.accessibility.EventStreamTransformation: void clear()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTimeChanged()>
<com.android.server.Watchdog: void addThread(android.os.Handler,long)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setJustClicked(boolean)>
<android.view.IWindowManagerImpl: void showStrictModeViolation(boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void setNotificationDelegate(com.android.server.notification.NotificationDelegate)>
<com.android.systemui.recents.views.RecentsView: void onTaskStackUnfilterTriggered()>
<com.android.systemui.SwipeHelper: void setMinSwipeProgress(float)>
<com.android.documentsui.model.RootInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installCaCert(android.content.ComponentName,byte[])>
<com.android.server.pm.PackageManagerService: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onBluetoothStateChanged(int)>
<com.google.android.maps.MapView: android.view.View getZoomControls()>
<com.android.server.ServiceThread: void run()>
<com.android.server.notification.ZenLog: void traceDowntimeAutotrigger(java.lang.String)>
<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)>
<com.android.server.policy.PhoneWindowManager: void setCurrentUserLw(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void clearCrossProfileIntentFilters(int)>
<com.android.server.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)>
<com.android.statementservice.retriever.JsonParser: java.util.List parseArray(android.util.JsonReader)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.gallery3d.exif.Rational: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintAuthFailed()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.recents.RecentsConfiguration: boolean hasStatusBarScrim()>
<android.graphics.Paint_Delegate: int getStyle()>
<com.android.systemui.statusbar.policy.ScrollAdapter: boolean isScrolledToBottom()>
<com.android.server.NsdService: android.os.Messenger getMessenger()>
<com.android.server.notification.NotificationSignalExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.server.audio.MediaFocusControl: boolean checkUpdateRemoteStateIfActive(int)>
<com.android.server.pm.PermissionsState: void setGlobalGids(int[])>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,float[],int)>
<com.android.keyguard.KeyguardSimPinView: int getPasswordTextViewId()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>
<com.android.server.media.MediaSessionStack: java.util.ArrayList getActiveSessions(int)>
<com.android.systemui.statusbar.policy.MobileSignalController: int getDataContentDescription()>
<com.android.future.usb.UsbAccessory: java.lang.String getVersion()>
<com.android.systemui.qs.GlobalSetting: void <init>(android.content.Context,android.os.Handler,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Byte getTagByteValue(int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setActivityStarter(com.android.systemui.statusbar.phone.ActivityStarter)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)>
<javax.microedition.khronos.opengles.GL10: void glColor4x(int,int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabledForUser(int)>
<javax.obex.ApplicationParameter: byte[] getAPPparam()>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean isOnAffordanceIcon(float,float)>
<com.android.keyguard.KeyguardAbsKeyInputView: void showPromptReason(int)>
<com.android.server.hdmi.DeviceDiscoveryAction.DeviceDiscoveryCallback: void onDeviceDiscoveryDone(java.util.List)>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,int[],int)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationStart(android.animation.Animator)>
<com.android.systemui.keyguard.KeyguardService: void onCreate()>
<com.android.systemui.qs.tiles.BluetoothTile: java.lang.String composeChangeAnnouncement()>
<com.android.uiautomator.core.UiObject: boolean swipeUp(int)>
<com.android.systemui.recents.model.RecentsTaskLoader: com.android.systemui.recents.model.RecentsTaskLoader getInstance()>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.NetworkController getNetworkController()>
<com.android.documentsui.model.RootInfo: android.graphics.drawable.Drawable loadToolbarIcon(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isScrolledToBottom()>
<com.android.systemui.volume.VolumeDialogController.StreamState: com.android.systemui.volume.VolumeDialogController.StreamState copy()>
<com.android.server.media.MediaSessionStack: boolean onPlaystateChange(com.android.server.media.MediaSessionRecord,int,int)>
<com.android.systemui.statusbar.ExpandableOutlineView: void setClipTopAmount(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setForceStatusBarVisible(boolean)>
<com.android.systemui.statusbar.NotificationOverflowContainer: android.view.View getContentView()>
<com.android.server.content.SyncStorageEngine: boolean deleteFromPending(com.android.server.content.SyncStorageEngine.PendingOperation)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.PbapServerProfile getPbapProfile()>
<com.android.keyguard.KeyguardSecurityContainer: void announceCurrentSecurityMethod()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>
<com.android.server.tv.TvInputHal.Callback: void onDeviceAvailable(android.media.tv.TvInputHardwareInfo,android.media.tv.TvStreamConfig[])>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation2d(java.lang.Object[][],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator)>
<com.android.documentsui.DocumentsApplication: com.android.documentsui.RootsCache getRootsCache(android.content.Context)>
<android.view.BridgeInflater: void <init>(android.view.LayoutInflater,android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAutoTimeRequired(android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setExpandingEnabled(boolean)>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: void <init>(android.content.pm.UserInfo,android.graphics.Bitmap,boolean,boolean,boolean,boolean)>
<com.android.server.notification.ZenLog: void traceEffectsSuppressorChanged(android.content.ComponentName,android.content.ComponentName)>
<com.android.documentsui.FilteringCursorWrapper: void <init>(android.database.Cursor,java.lang.String[],java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int next()>
<com.android.systemui.recents.views.TaskView: void onTaskDataUnloaded()>
<com.android.server.notification.NotificationRecord: java.lang.String toString()>
<com.android.settingslib.wifi.AccessPoint: boolean isEphemeral()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getBondState()>
<com.android.server.wm.TaskGroup: java.lang.String toString()>
<com.android.printspooler.ui.PrinterRegistry: void addHistoricalPrinter(android.print.PrinterInfo)>
<com.android.systemui.statusbar.policy.MobileSignalController: boolean isEmergencyOnly()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isKeyguardCurrentlySecure()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setSubtitle(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void addCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.server.wm.WindowManagerService: void onDisplayRemoved(int)>
<com.android.layoutlib.bridge.bars.StatusBar: void loadIcon(int,java.lang.String,com.android.resources.Density)>
<com.android.server.NetworkManagementService: void setNetworkPermission(int,java.lang.String)>
<com.android.server.audio.MediaFocusControl: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onPhoneStateChanged(int)>
<com.android.server.GestureLauncherService: boolean isCameraDoubleTapPowerEnabled(android.content.res.Resources)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void buzzBeepBlinked()>
<com.android.systemui.recents.RecentsAppWidgetHost: void startListening(com.android.systemui.recents.RecentsAppWidgetHost.RecentsAppWidgetHostCallbacks)>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onExpandingStarted()>
<android.graphics.ComposeShader_Delegate: boolean isSupported()>
<com.android.server.audio.AudioService: void clearAllScoClients(int,boolean)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Rect getTaskBounds(int)>
<com.android.systemui.statusbar.DragDownHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.gallery3d.common.Utils: boolean equals(java.lang.Object,java.lang.Object)>
<com.android.settingslib.bluetooth.A2dpProfile: int getOrdinal()>
<android.view.IWindowManagerImpl: void statusBarVisibilityChanged(int)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setKeyInjectionDelay(long)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void addCallback(com.android.systemui.statusbar.policy.ZenModeController.Callback)>
<com.android.systemui.doze.DozeHost.PulseCallback: void onPulseFinished()>
<com.android.systemui.settings.ToggleSlider: void setChecked(boolean)>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.view.BridgeInflater: void <init>(android.content.Context,com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.android.server.notification.CountdownConditionProvider: void onSubscribe(android.net.Uri)>
<com.android.systemui.statusbar.NotificationMediaViewWrapper: void <init>(android.content.Context,android.view.View)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getAttributeValue(int)>
<com.android.systemui.statusbar.policy.BatteryController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getViewKey(android.view.View)>
<com.android.server.wm.WindowManagerService: int handleAppTransitionReadyLocked(com.android.server.wm.WindowList)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.documentsui.ColumnAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.android.server.audio.AudioService: int getVibrateSetting(int)>
<com.android.systemui.DessertCaseView: void stop()>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightAvailabilityChanged(boolean)>
<com.android.server.notification.NotificationManagerService: void savePolicyFile()>
<com.android.server.am.ActivityManagerService: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>
<javax.obex.ServerRequestHandler: int onDelete(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void updateExpandButton()>
<com.android.layoutlib.bridge.android.BridgeWindow: void onAnimationStarted(int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,java.nio.IntBuffer)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector fromParent(com.android.uiautomator.core.UiSelector)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void dumpStatisticsAndClear()>
<com.android.systemui.ExpandHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<javax.obex.ClientOperation: java.io.InputStream openInputStream()>
<com.android.systemui.qs.tiles.UserDetailItemView: boolean hasOverlappingRendering()>
<com.android.systemui.recents.Recents: void onAnimationStarted()>
<com.android.systemui.statusbar.ActivatableNotificationView: void onLayout(boolean,int,int,int,int)>
<com.android.layoutlib.bridge.android.support.DesignLibUtil: void setTitle(android.view.View,java.lang.String)>
<com.android.server.wm.WindowManagerService: boolean startViewServer(int)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.doze.DozeHost: boolean isPulsingBlocked()>
<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaper(java.lang.String)>
<com.android.systemui.statusbar.stack.AmbientState: void setDismissAllInProgress(boolean)>
<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<com.android.server.pm.PermissionsState: boolean hasInstallPermission(java.lang.String)>
<com.android.server.pm.Installer: int linkFile(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void removeIcon(java.lang.String,int,int)>
<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()>
<com.android.systemui.statusbar.SystemBars: long onServiceStartAttempt()>
<com.android.systemui.FontSizeUtils: void updateFontSize(android.view.View,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>
<com.android.systemui.statusbar.ExpandableView: boolean filterMotionEvent(android.view.MotionEvent)>
<android.graphics.PorterDuffColorFilter_Delegate: boolean isSupported()>
<com.android.tools.layoutlib.java.UnsafeByteSequence: byte[] toByteArray()>
<com.android.systemui.settings.ToggleSlider: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setInput(java.io.InputStream,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setQSPanel(com.android.systemui.qs.QSPanel)>
<com.android.server.GestureLauncherService: boolean isCameraLaunchEnabled(android.content.res.Resources)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>
<com.android.tools.layoutlib.create.OverrideMethod: void setMethodListener(java.lang.String,com.android.tools.layoutlib.create.MethodListener)>
<com.android.uiautomator.core.UiAutomatorBridge: long getSystemLongPressTime()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
<com.android.systemui.qs.QSTile: void setDetailListening(boolean)>
<com.android.server.usb.UsbService: void setPortRoles(java.lang.String,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPackageUid(java.lang.String,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void launchCamera(java.lang.String)>
<com.android.systemui.statusbar.phone.UserAvatarView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.server.pm.PackageManagerService: void verifyPendingInstall(int,int)>
<com.android.server.job.JobStore: void clear()>
<com.android.systemui.assist.AssistOrbView: void startExitAnimation(long)>
<com.android.server.connectivity.Nat464Xlat: boolean isStarted()>
<javax.microedition.khronos.opengles.GL10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
<com.android.systemui.recents.model.TaskStack: void setTasks(java.util.List)>
<com.android.settingslib.applications.ApplicationsState: void ensureIcon(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.Prefs: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<com.android.keyguard.AlphaOptimizedRelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<com.android.server.connectivity.Vpn: boolean removeAddress(java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.Resources.Theme getTheme()>
<com.android.systemui.recents.model.RecentsTaskLoader: java.lang.String getAndUpdateContentDescription(com.android.systemui.recents.model.Task.TaskKey,java.lang.String,com.android.systemui.recents.misc.SystemServicesProxy,android.content.res.Resources)>
<com.android.server.wm.WindowManagerService: void showCircularMask(boolean)>
<com.android.systemui.ExpandHelper: void setScrollAdapter(com.android.systemui.statusbar.policy.ScrollAdapter)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAssistManager(com.android.systemui.assist.AssistManager)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getFastestIntervalMs()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent)>
<com.android.location.fused.FusionEngine: void deinit()>
<com.android.systemui.recents.views.RecentsView: void onTaskViewAppInfoClicked(com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getVibrateOnSigMotion()>
<com.android.uiautomator.core.UiDevice: java.lang.String getLastTraversedText()>
<android.graphics.Paint_Delegate: int getJavaJoin()>
<com.android.server.notification.NotificationRecord: void setVisibility(boolean,int)>
<com.android.systemui.volume.VolumeDialog: void setAutomute(boolean)>
<com.android.location.fused.FusedLocationProvider: void onSetRequest(com.android.location.provider.ProviderRequestUnbundled,android.os.WorkSource)>
<com.android.settingslib.bluetooth.MapProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isPackageAvailable(java.lang.String)>
<com.android.server.NetworkManagementService: void setMtu(java.lang.String,int)>
<com.android.systemui.egg.MLand: void hideSplash()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<com.android.server.notification.PackageVisibilityExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(long)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationRepeat(android.animation.Animator)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void applyState(com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onViewAdded(android.view.View)>
<com.android.documentsui.DocumentsToolBar: void <init>(android.content.Context)>
<com.android.settingslib.wifi.AccessPoint: void setTag(java.lang.Object)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.res.BridgeTypedArray: android.content.res.Resources getResources()>
<com.android.systemui.qs.tiles.WifiTile: void handleSecondaryClick()>
<com.android.proxyhandler.ProxyService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.search.Searchables: java.util.ArrayList getSearchablesList()>
<com.android.systemui.recents.RecentsActivity: void onTrimMemory(int)>
<com.android.keyguard.KeyguardSimPinView: void onDetachedFromWindow()>
<com.android.uiautomator.core.Tracer: void setOutputFilename(java.lang.String)>
<com.android.systemui.statusbar.policy.MobileSignalController: com.android.systemui.statusbar.policy.MobileSignalController.MobileState cleanState()>
<com.android.systemui.recents.RecentsActivity: void onStop()>
<com.android.server.accessibility.ScreenMagnifier: void onRotationChanged(int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyInputChannelBroken(com.android.server.input.InputWindowHandle)>
<com.android.server.notification.SystemConditionProviderService: boolean isValidConditionId(android.net.Uri)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setWindowState(int,int)>
<com.android.server.twilight.TwilightState: boolean equals(com.android.server.twilight.TwilightState)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,android.content.res.Resources,int,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void startHintAnimation(boolean,java.lang.Runnable)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onDraw(android.graphics.Canvas)>
<com.android.server.appwidget.AppWidgetService: void <init>(android.content.Context)>
<com.android.documentsui.FilteringCursorWrapper: java.lang.String getString(int)>
<com.android.server.ConnectivityService: boolean requestRouteToHostAddress(int,byte[])>
<com.android.server.wm.WindowManagerService: void displayReady()>
<com.android.systemui.volume.ZenModePanel: void updateLocale()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void notifyVisibleChildrenChanged()>
<com.android.settingslib.wifi.AccessPoint: android.net.wifi.WifiInfo getInfo()>
<com.android.server.notification.ManagedServices: com.android.server.notification.ManagedServices.ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context)>
<javax.obex.ObexTransport: int getMaxReceivePacketSize()>
<com.android.server.power.ScreenOnBlocker: void acquire()>
<com.android.documentsui.model.DocumentInfo: com.android.documentsui.model.DocumentInfo fromDirectoryCursor(android.database.Cursor)>
<com.android.server.pm.PackageManagerService: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String,int)>
<com.android.server.location.GpsMeasurementsProvider: void onCapabilitiesUpdated(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void animateCollapsePanels(int,boolean)>
<javax.obex.ClientSession: void setAuthenticator(javax.obex.Authenticator)>
<com.android.server.display.DisplayManagerService: void onBootPhase(int)>
<com.android.server.pm.PackageManagerService: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<com.android.documentsui.FailureDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isCollapsing()>
<com.android.systemui.egg.MLand: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateTopPadding(float,int,boolean,boolean)>
<com.android.printspooler.widget.PreviewPageFrame: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.volume.ZenFooter: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<com.android.systemui.statusbar.policy.MobileSignalController: void handleBroadcast(android.content.Intent)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.ScrimController: void setWakeAndUnlocking()>
<com.android.systemui.recents.views.TaskView: void setFocusedTask(boolean)>
<com.android.systemui.SystemUIApplication: java.lang.Object getComponent(java.lang.Class)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.SignalCallbackAdapter: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.server.usb.UsbPortManager: void <init>(android.content.Context)>
<com.android.systemui.qs.GlobalSetting: void setValue(int)>
<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()>
<javax.obex.ServerRequestHandler: int onPut(javax.obex.Operation)>
<com.android.systemui.statusbar.stack.AmbientState: java.util.ArrayList getDraggedViews()>
<com.android.systemui.recents.views.TaskStackViewFilterAlgorithm: void <init>(com.android.systemui.recents.RecentsConfiguration,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.ViewPool)>
<com.android.server.job.controllers.JobStatus: boolean matches(int,int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,float[],int)>
<javax.microedition.khronos.opengles.GL10: void glScalef(float,float,float)>
<com.android.server.pm.Installer: int remove(java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean updateIntentVerificationStatus(java.lang.String,int,int)>
<com.android.server.pm.PackageManagerService: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>
<com.android.systemui.statusbar.KeyguardAffordanceView: float getRestingAlpha()>
<android.graphics.BlendComposite: boolean equals(java.lang.Object)>
<com.android.documentsui.DirectoryFragment: void onDestroyView()>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PanelView: boolean isDozing()>
<com.android.server.am.LaunchWarningWindow: void <init>(android.content.Context,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>
<com.android.server.audio.MediaFocusControl: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes)>
<com.android.gallery3d.glrenderer.GLES20Canvas: com.android.gallery3d.glrenderer.GLId getGLId()>
<com.android.systemui.recents.views.SwipeHelper: void cancelOngoingDrag()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: com.android.systemui.statusbar.phone.UnlockMethodCache getInstance(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasUserSetupCompleted()>
<com.android.server.usb.UsbService.Lifecycle: void onBootPhase(int)>
<com.android.keyguard.KeyguardAbsKeyInputView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.systemui.statusbar.phone.KeyguardPreviewContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PanelView: boolean isScrolledToBottom()>
<javax.obex.ClientOperation: void <init>(int,javax.obex.ClientSession,javax.obex.HeaderSet,boolean)>
<com.android.server.location.FusedLocationHardwareSecure: void <init>(android.hardware.location.IFusedLocationHardware,android.content.Context,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
<com.android.systemui.SwipeHelper.Callback: float getFalsingThresholdFactor()>
<com.android.server.CountryDetectorService: void addCountryListener(android.location.ICountryListener)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.server.AnyMotionDetector: void checkForAnyMotion()>
<com.android.server.usb.UsbService: boolean hasDefaults(java.lang.String,int)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getImageWidth()>
<com.android.commands.media.Media: void onRun()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setListener(com.android.systemui.statusbar.phone.ObservableScrollView.Listener)>
<com.android.server.location.LocationProviderInterface: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void verifyPendingInstall(int,int)>
<com.android.server.policy.ImmersiveModeConfirmation: void confirmCurrentPrompt()>
<com.android.keyguard.KeyguardPatternView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.commands.sm.Sm: void runMount()>
<com.android.commands.svc.PowerCommand: java.lang.String longHelp()>
<com.android.server.GestureLauncherService: void <init>(android.content.Context)>
<com.android.bluetoothmidiservice.PacketEncoder.PacketReceiver: void writePacket(byte[],int)>
<com.android.systemui.statusbar.phone.BarTransitions: boolean isLightsOut(int)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void createMenuPopup()>
<com.android.systemui.statusbar.policy.KeyButtonView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.UsbService: boolean isFunctionEnabled(java.lang.String)>
<com.android.commands.sm.Sm: void runFormat()>
<com.android.location.provider.GmsFusedBatchOptions: boolean isSourceToUseSet(int)>
<com.android.server.location.FusedLocationHardwareSecure: boolean supportsDeviceContextInjection()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,float[],int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.graphics.Paint_Delegate: android.graphics.Rasterizer_Delegate getRasterizer()>
<com.android.server.pm.PackageManagerService: boolean isPermissionEnforced(java.lang.String)>
<com.google.android.maps.MapView: void preLoad()>
<com.android.server.trust.TrustManagerService: void updateTrust(int,int)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.ide.common.rendering.api.LayoutlibCallback getLayoutlibCallback()>
<com.android.server.am.BatteryStatsService: void noteWifiScanStarted(int)>
<com.android.server.content.ContentService: void sync(android.content.SyncRequest)>
<com.android.systemui.statusbar.CommandQueue: void animateCollapsePanels()>
<com.android.server.AppOpsService: int permissionToOpCode(java.lang.String)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: boolean isAlphaChannelImage()>
<com.android.server.media.MediaSessionService: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardSecurityContainer: void onPause()>
<com.android.systemui.assist.AssistOrbContainer: com.android.systemui.assist.AssistOrbView getOrb()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dismissKeyguardThenExecute(com.android.keyguard.KeyguardHostView.OnDismissAction,boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: void <init>(int,int,int,int,int)>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<com.android.server.voiceinteraction.DatabaseHelper: boolean updateKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel)>
<com.android.documentsui.DirectoryLoader: void cancelLoadInBackground()>
<com.android.systemui.statusbar.BaseStatusBar.H: void handleMessage(android.os.Message)>
<com.android.server.fingerprint.FingerprintService: void onStart()>
<com.android.server.trust.TrustManagerService: void onCleanupUser(int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<com.android.server.accounts.AccountManagerService: boolean addSharedAccountAsUser(android.accounts.Account,int)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void fling(int)>
<com.android.server.notification.NotificationDelegate: void onNotificationClick(int,int,java.lang.String)>
<com.android.settingslib.wifi.WifiTracker: android.net.wifi.WifiManager getManager()>
<javax.obex.Operation: java.lang.String getEncoding()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void removeTestListener(junit.framework.TestListener)>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionClipReveal(int,int,int,int)>
<com.android.server.audio.AudioService: boolean isMasterMute()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.obex.ClientOperation: int getMaxPacketSize()>
<com.android.server.job.controllers.TimeController: void dumpControllerState(java.io.PrintWriter)>
<com.android.server.NetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>
<android.graphics.Rasterizer_Delegate: android.graphics.Rasterizer_Delegate getDelegate(long)>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewClicked(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task,boolean)>
<com.android.server.policy.PhoneWindowManager: int checkAddPermission(android.view.WindowManager.LayoutParams,int[])>
<android.content.res.BridgeAssetManager: void setAssetRepository(com.android.ide.common.rendering.api.AssetRepository)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onSetVolume(com.android.media.remotedisplay.RemoteDisplay,int)>
<com.android.systemui.settings.BrightnessController: void registerCallbacks()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void stopWaitingForKeyguardExit()>
<javax.obex.ObexHelper: byte[] computeAuthenticationChallenge(byte[],java.lang.String,boolean,boolean)>
<android.app.trust.IStrongAuthTracker: void onStrongAuthRequiredChanged(int,int)>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl: void setCallback(com.android.systemui.statusbar.policy.MobileDataControllerImpl.Callback)>
<com.android.server.notification.EventConditionProvider: void onConnected()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)>
<com.android.server.media.MediaSessionService: void onStartUser(int)>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(int)>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackFiltered(com.android.systemui.recents.model.TaskStack,java.util.ArrayList,com.android.systemui.recents.model.Task)>
<android.graphics.Typeface_Delegate: void resetDefaults()>
<com.android.systemui.qs.tiles.WifiTile: void setDetailListening(boolean)>
<com.android.systemui.RecentsComponent: void hideRecents(boolean,boolean)>
<com.android.systemui.recents.views.TaskStackView: void focusNextTask(boolean,boolean)>
<android.graphics.FontFamily_Delegate: android.graphics.FontFamily_Delegate.FontVariant getVariant()>
<com.android.systemui.statusbar.phone.PanelView: float getCannedFlingDurationFactor()>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.wm.WindowManagerService: void showStrictModeViolation(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,int[],int)>
<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)>
<com.android.server.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<com.android.server.camera.CameraService: void onStartUser(int)>
<com.android.layoutlib.bridge.Bridge: java.util.Map getEnumValues(java.lang.String)>
<com.android.server.pm.PackageManagerService: void getUsageStatsIfNoPackageUsageInfo()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getInstalledPackages(int)>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String[],java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabledFromSource(android.os.WorkSource)>
<android.graphics.PathDashPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.systemui.statusbar.phone.PanelView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void updateNotification(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)>
<com.android.server.notification.ZenLog: void traceUnsubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>
<javax.obex.ObexTransport: void close()>
<com.android.systemui.statusbar.DismissView: boolean isButtonVisible()>
<com.android.documentsui.model.DocumentStack: void read(java.io.DataInputStream)>
<com.android.proxyhandler.ProxyServer: void setCallback(com.android.net.IProxyPortListener)>
<com.android.systemui.recents.views.RecentsView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.LockIcon: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onClick(android.content.DialogInterface,int)>
<com.android.server.power.ScreenOnBlocker: void release()>
<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>
<javax.obex.ClientSession: void close()>
<com.android.server.usage.AppIdleHistory: void removeUser(int)>
<com.android.systemui.recents.views.TaskViewTransform: void reset()>
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>
<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDisplayContentLocked(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void start()>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int)>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.String,java.lang.Exception)>
<com.android.location.provider.GmsFusedBatchOptions: void resetFlag(int)>
<com.android.server.am.ActivityManagerService: void releaseSomeActivities(android.app.IApplicationThread)>
<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(android.net.Network)>
<com.android.keyguard.KeyguardSimPukView: void showUsabilityHint()>
<com.android.server.pm.Installer: int createUserData(java.lang.String,java.lang.String,int,int,java.lang.String)>
<com.android.gallery3d.glrenderer.GLCanvas: void setAlpha(float)>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,int[],int)>
<com.android.settingslib.bluetooth.PbapServerProfile: void finalize()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: boolean cropBitmap()>
<com.android.systemui.statusbar.policy.ScrollAdapter: boolean isScrolledToTop()>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.util.TypedValue getValue(java.lang.String,java.lang.String,boolean)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine.DayStats[] getDayStatistics()>
<com.android.layoutlib.bridge.android.BridgeContext: void setTheme(int)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: java.lang.String toJson()>
<com.android.systemui.recents.misc.SystemServicesProxy: int getSearchAppWidgetId(android.content.Context)>
<com.android.printspooler.widget.PrintOptionsLayout: void setColumnCount(int)>
<com.android.server.NetworkManagementService: void addRoute(int,android.net.RouteInfo)>
<com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromArrayOrNull(byte[],com.android.documentsui.model.Durable)>
<com.android.server.job.JobSchedulerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.GestureRecorder: void saveLater()>
<android.net.dhcp.DhcpClient: void onQuitting()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.server.pm.PackageManagerService: int checkPermission(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.View getLeftPreview()>
<com.android.server.wm.WindowManagerService: void setAppWillBeHidden(android.os.IBinder)>
<com.android.systemui.qs.tiles.RotationLockTile: void setListening(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void closeQs()>
<com.android.systemui.tuner.StatusBarSwitch: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.documentsui.ProviderExecutor: com.android.documentsui.ProviderExecutor forAuthority(java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setKeyguardEnabled(boolean)>
<com.android.uiautomator.core.UiObject: boolean clickBottomRight()>
<com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],int)>
<com.android.server.policy.PhoneWindowManager: int adjustSystemUiVisibilityLw(int)>
<com.android.systemui.recents.views.TaskStackView.TaskStackViewCallbacks: void onTaskViewClicked(com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,boolean)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.server.am.ActivityManagerService.GrantUri: java.lang.String toString()>
<com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromArray(byte[],com.android.documentsui.model.Durable)>
<com.android.server.media.MediaRouterService: void systemRunning()>
<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
<com.android.server.pm.PolicyComparator: boolean foundDuplicate()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<com.android.server.pm.UserManagerService: boolean removeUser(int)>
<com.android.keyguard.KeyguardUpdateMonitor: int getFailedUnlockAttempts()>
<javax.microedition.khronos.opengles.GL11: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<com.android.documentsui.RootsFragment: com.android.documentsui.RootsFragment get(android.app.FragmentManager)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: com.android.systemui.statusbar.ExpandableNotificationRow getViewAtPosition(float)>
<com.android.systemui.qs.QSTile.DetailAdapter: java.lang.Boolean getToggleState()>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<com.android.gallery3d.glrenderer.Texture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int,int,int)>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbManager getInstance(android.content.Context)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void startViewAnimations(android.view.View,com.android.systemui.statusbar.stack.ViewState,long,long)>
<com.android.server.input.InputManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContext: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.android.systemui.statusbar.BackDropView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void <init>(android.content.Context,android.view.View,android.view.View,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showWithDismissAction(com.android.keyguard.KeyguardHostView.OnDismissAction,java.lang.Runnable)>
<javax.microedition.khronos.opengles.GL10: void glMaterialf(int,int,float)>
<com.android.server.NetworkManagementService: void stopTethering()>
<com.android.gallery3d.common.Utils: boolean isOpaque(int)>
<com.android.systemui.statusbar.stack.StackStateAnimator: java.lang.Object getChildTag(android.view.View,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void verifyPasswordAndUnlock()>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.NotificationData.Entry createNotificationViews(android.service.notification.StatusBarNotification)>
<com.android.server.wm.AppWindowAnimator: void setDummyAnimation()>
<com.android.server.media.MediaSessionRecord: int getOptimisticVolume()>
<com.android.server.camera.CameraService: void binderDied()>
<com.android.systemui.statusbar.phone.PanelView: void onTrackingStopped(boolean)>
<com.android.server.location.GeofenceManager: void dump(java.io.PrintWriter)>
<com.android.gallery3d.exif.Rational: void <init>(long,long)>
<com.android.systemui.statusbar.BaseStatusBar: void dismissPopups()>
<com.android.server.am.CompatModePackages: int computeCompatModeLocked(android.content.pm.ApplicationInfo)>
<com.android.printspooler.ui.PrintProgressFragment: com.android.printspooler.ui.PrintProgressFragment newInstance()>
<android.content.res.BridgeTypedArray: android.util.TypedValue peekValue(int)>
<com.android.systemui.volume.VolumeDialogController: void setStreamVolume(int,int)>
<com.android.systemui.statusbar.ExpandableView: int getInitialHeight()>
<com.android.server.InputMethodManagerService: void finishInput(com.android.internal.view.IInputMethodClient)>
<com.android.systemui.qs.UsageTracker: void trackUsage()>
<com.android.systemui.statusbar.phone.QSTileHost: void destroy()>
<com.android.systemui.statusbar.tv.TvStatusBar: android.view.View getStatusBarView()>
<com.android.systemui.statusbar.NotificationTemplateViewWrapper: void setDark(boolean,boolean,long)>
<com.android.uiautomator.core.UiScrollable: boolean flingForward()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void close()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.SerialService: java.lang.String[] getSerialPorts()>
<com.android.documentsui.model.RootInfo: java.lang.String getDirectoryString()>
<com.android.server.ConnectivityService: android.os.HandlerThread createHandlerThread()>
<com.android.systemui.statusbar.phone.NavigationBarView: void onFinishInflate()>
<com.android.server.wm.WindowManagerService: void statusBarVisibilityChanged(int)>
<com.android.systemui.qs.tiles.UserDetailItemView: void drawableStateChanged()>
<com.android.server.wm.WindowManagerService.WindowChangeListener: void windowsChanged()>
<android.graphics.PorterDuffXfermode_Delegate: boolean isSupported()>
<com.android.server.am.BatteryStatsService: void scheduleWriteToDisk()>
<com.android.server.wm.WindowManagerService: void hideBootMessagesLocked()>
<javax.microedition.khronos.opengles.GL10: void glPushMatrix()>
<com.android.server.pm.PackageManagerService: void extendVerificationTimeout(int,int,long)>
<com.android.server.audio.AudioService.VolumeController: android.os.IBinder asBinder()>
<android.content.res.BridgeResources: int getInteger(int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.policy.NetworkController: void removeSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.server.NativeDaemonEvent: int getCmdNumber()>
<com.android.systemui.egg.MLand: int pick(int[])>
<com.android.gallery3d.glrenderer.GLCanvas: void clearBuffer()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getClosestChildAtRawPosition(float,float)>
<com.android.systemui.statusbar.BaseStatusBar: void maybeEscalateHeadsUp()>
<com.android.layoutlib.bridge.impl.DelegateManager: void removeJavaReferenceFor(long)>
<com.android.uiautomator.core.UiObject: android.graphics.Rect getBounds()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,int[],int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespacePrefix(int)>
<com.android.systemui.volume.VolumeDialogController.State: java.lang.String toString(int)>
<com.android.gallery3d.glrenderer.RawTexture: boolean isOpaque()>
<com.android.photos.views.TiledImageRenderer.TileSource: int getImageHeight()>
<com.android.settingslib.animation.DisappearAnimationUtils: long calculateDelay(int,int)>
<com.android.server.notification.ZenModeHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean)>
<com.android.server.telecom.TelecomLoaderService: void onBootPhase(int)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,float[],int)>
<android.view.IWindowManagerImpl: void startAppFreezingScreen(android.os.IBinder,int)>
<android.view.IWindowManagerImpl: void setAppTask(android.os.IBinder,int)>
<com.android.gallery3d.exif.ExifInterface: void resetTagDefinitions()>
<com.android.systemui.qs.QSPanel: void setExpanded(boolean)>
<com.android.server.notification.GlobalSortKeyComparator: int compare(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.server.statusbar.StatusBarManagerService: void expandNotificationsPanel()>
<com.android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()>
<com.android.systemui.recents.misc.SystemServicesProxy: void registerTaskStackListener(android.app.ITaskStackListener)>
<com.android.printspooler.util.PageRangeUtils: int getNormalizedPageCount(android.print.PageRange[],int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<com.android.photos.DumbBitmapRegionDecoder: int getHeight()>
<com.android.server.pm.UserManagerService: void setUserRestriction(java.lang.String,boolean,int)>
<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>
<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<com.android.server.am.ActivityManagerService: int stopUser(int,android.app.IStopUserCallback)>
<com.android.server.notification.ZenModeConditions: void onUserSwitched()>
<com.android.server.LocationManagerService: boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener,java.lang.String)>
<com.android.server.ConnectivityService: boolean requestBandwidthUpdate(android.net.Network)>
<com.android.systemui.statusbar.phone.DozeParameters: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void setColorFilter(android.graphics.ColorFilter)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setInteracting(int,boolean)>
<com.android.systemui.statusbar.phone.ScrimController: float getDozeBehindAlpha()>
<com.android.server.ServiceWatcher: void onServiceDisconnected(android.content.ComponentName)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothProfileManager getProfileManager()>
<com.android.server.media.MediaRouterService: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>
<com.android.systemui.statusbar.ExpandableView: void setDimmed(boolean,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void start()>
<com.android.server.ServiceWatcher: boolean isSignatureMatch(android.content.pm.Signature[],java.util.List)>
<com.android.server.print.PrintManagerService: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardPinBasedInputView: void setPasswordEntryInputEnabled(boolean)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getNamespaceCount(int)>
<com.android.systemui.statusbar.phone.QSTileHost: void startActivityDismissingKeyguard(android.content.Intent)>
<com.android.vpndialogs.ConfirmDialog: void onResume()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateExpandNotificationsPanel()>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: boolean addOneIntentFilterVerification(int,int,int,android.content.IntentFilter,java.lang.String)>
<com.android.systemui.statusbar.StackScrollerDecorView: void performAddAnimation(long,long)>
<com.android.future.usb.UsbManager: boolean hasPermission(com.android.future.usb.UsbAccessory)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onSwipeFromBottom()>
<com.android.server.ConnectivityService: java.lang.String[] getTetheredDhcpRanges()>
<com.android.systemui.volume.VolumePrefs: void registerCallbacks(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.qs.tiles.RotationLockTile: java.lang.String composeChangeAnnouncement()>
<com.android.uiautomator.core.UiDevice: boolean pressHome()>
<com.android.uiautomator.core.ShellUiAutomatorBridge: android.view.Display getDefaultDisplay()>
<com.android.photos.views.TiledImageRenderer.TileSource: android.graphics.Bitmap getTile(int,int,int,android.graphics.Bitmap)>
<com.android.server.SerialService: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchStartedGoingToSleep(int)>
<com.android.systemui.egg.MLand: int getControllerPlayer(int)>
<com.android.tools.layoutlib.create.MethodAdapter: float onInvokeF(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.statusbar.DismissViewButton: boolean performClick()>
<com.android.systemui.statusbar.SpeedBumpView: boolean isTransparent()>
<com.android.server.pm.PackageManagerService: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<com.android.server.voiceinteraction.SoundTriggerHelper: void onSoundModelUpdate(android.hardware.soundtrigger.SoundTrigger.SoundModelEvent)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void <init>(org.objectweb.asm.signature.SignatureVisitor)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] normalize(android.print.PageRange[])>
<com.android.commands.uiautomator.DumpCommand: java.lang.String shortHelp()>
<com.android.server.job.controllers.JobStatus: boolean isConstraintsSatisfied()>
<com.android.systemui.statusbar.SignalClusterView: void setNetworkController(com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.systemui.qs.QSFooter: android.view.View getView()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>
<com.android.systemui.qs.QSPanel: int getGridHeight()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void multiplyMatrix(float[],int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isScrolledToBottom()>
<com.android.server.tv.TvInputHal.Callback: void onStreamConfigurationChanged(int,android.media.tv.TvStreamConfig[])>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: com.android.systemui.statusbar.phone.BarTransitions getBarTransitions()>
<com.android.documentsui.FilteringCursorWrapper: double getDouble(int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void showScreenPinningRequest()>
<com.android.layoutlib.bridge.impl.GcSnapshot.Drawable: void draw(java.awt.Graphics2D,android.graphics.Paint_Delegate)>
<com.android.server.am.CompatModePackages: void <init>(com.android.server.am.ActivityManagerService,java.io.File,android.os.Handler)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>
<com.android.systemui.keyguard.KeyguardViewMediator: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>
<com.android.uiautomator.core.UiScrollable: boolean scrollIntoView(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.statusbar.BaseStatusBar: void preloadRecentApps()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.pm.PackageManager getPackageManager()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: org.xmlpull.v1.XmlPullParser getParser()>
<com.android.server.usb.UsbService: void denyUsbDebugging()>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,int[],int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToEnd(int,int)>
<com.android.systemui.statusbar.NotificationTemplateViewWrapper: void <init>(android.content.Context,android.view.View)>
<com.android.server.notification.ManagedServices.UserProfiles: int[] getCurrentProfileIds()>
<com.android.server.am.BroadcastQueue: void enqueueOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>
<com.android.server.content.ContentService: void cancelRequest(android.content.SyncRequest)>
<javax.obex.Operation: javax.obex.HeaderSet getReceivedHeader()>
<com.android.server.twilight.TwilightState: java.lang.String toString()>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getDisplayStateSupported()>
<com.android.printspooler.renderer.IPdfEditor: void write(android.os.ParcelFileDescriptor)>
<com.android.server.connectivity.NetworkMonitor: void <init>(android.content.Context,android.os.Handler,com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkRequest)>
<com.android.commands.am.Am: void onShowUsage(java.io.PrintStream)>
<com.android.server.LocationManagerService: boolean geocoderIsPresent()>
<com.android.server.am.ActivityManagerService: void moveTaskToStack(int,int,boolean)>
<com.android.server.audio.AudioService: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>
<com.android.server.input.InputManagerService: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onStartedWakingUp()>
<com.android.systemui.assist.AssistDisclosure: void postShow()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setTitle(java.lang.CharSequence)>
<android.graphics.BitmapShader_Delegate: boolean isSupported()>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.SystemUI: java.lang.Object getComponent(java.lang.Class)>
<com.android.systemui.statusbar.policy.SignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<com.android.location.provider.FusedLocationHardware: void startBatching(int,com.android.location.provider.GmsFusedBatchOptions)>
<com.android.systemui.recents.RecentsActivity: void refreshSearchWidgetView()>
<com.android.systemui.statusbar.SpeedBumpView: void performRemoveAnimation(long,float,java.lang.Runnable)>
<com.android.location.provider.FusedLocationHardware: void <init>(android.hardware.location.IFusedLocationHardware)>
<com.android.server.am.ActivityManagerService: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>
<com.android.server.wm.AppWindowAnimator: void <init>(com.android.server.wm.AppWindowToken)>
<com.android.server.wm.WindowManagerService: void setCurrentProfileIds(int[])>
<com.android.systemui.recents.views.AnimateableViewBounds: void <init>(com.android.systemui.recents.views.TaskView,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.keyguard.ViewMediatorCallback getViewMediatorCallback()>
<javax.obex.ServerRequestHandler: void onClose()>
<com.android.gallery3d.exif.ExifInterface: boolean isIfdAllowed(int,int)>
<com.android.keyguard.PasswordTextView.UserActivityListener: void onUserActivity()>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToBinaryString(long)>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl: boolean isMobileDataEnabled()>
<com.android.layoutlib.bridge.impl.RenderDrawable: com.android.ide.common.rendering.api.Result render()>
<com.android.settingslib.wifi.AccessPoint: void clearConfig()>
<com.android.systemui.statusbar.tv.TvStatusBar: void updateNotifications()>
<com.android.uiautomator.core.UiObject: boolean clickAndWaitForNewWindow()>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.drawable.Drawable getBadgedIcon(android.graphics.drawable.Drawable,int)>
<com.android.server.hdmi.HdmiCecStandbyModeHandler.CecMessageHandler: boolean handle(com.android.server.hdmi.HdmiCecMessage)>
<com.android.gallery3d.glrenderer.UploadedTexture: void recycle()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<com.android.server.wm.AppWindowAnimator: boolean isAnimating()>
<android.view.AttachInfo_Accessor: void setAttachInfo(android.view.View)>
<android.graphics.PathEffect_Delegate: android.graphics.PathEffect_Delegate getDelegate(long)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.keyguard.KeyguardPinBasedInputView: void resetState()>
<com.android.systemui.qs.tiles.BluetoothTile: boolean supportsDualTargets()>
<com.android.documentsui.DirectoryView: void onSizeChanged(int,int,int,int)>
<com.android.server.am.ActivityManagerService: void killAllBackgroundProcesses()>
<com.android.systemui.statusbar.NotificationViewWrapper: void setDark(boolean,boolean,long)>
<com.android.systemui.volume.VolumeDialogMotion: void startDismiss(java.lang.Runnable)>
<com.android.printspooler.widget.PrintContentView: int getChildDrawingOrder(int,int)>
<com.android.server.content.ContentService: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.keyguard.KeyguardPINView: int getWrongPasswordStringId()>
<com.android.server.pm.Installer: int rename(java.lang.String,java.lang.String)>
<com.android.systemui.media.NotificationPlayer: void setUsesWakeLock(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskView getChildViewForTask(com.android.systemui.recents.model.Task)>
<com.android.printspooler.widget.PageContentView: void onSizeChanged(int,int,int,int)>
<com.android.server.job.JobServiceContext: void acknowledgeStartMessage(int,boolean)>
<com.android.wallpapercropper.CropView.TouchCallback: void onTouchUp()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: android.content.Context getActionMenuContext()>
<com.android.keyguard.KeyguardPasswordView: void reset()>
<com.android.server.policy.SystemGesturesPointerEventListener: void systemReady()>
<android.graphics.MaskFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.BrickReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.DessertCaseDream: void onDreamingStarted()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void goToLockedShade(android.view.View)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result removeChild(java.lang.Object,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean isScrolledToBottom()>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>
<com.android.server.notification.NotificationDelegate: void onNotificationExpansionChanged(java.lang.String,boolean,boolean)>
<com.android.systemui.volume.VolumeDialogController: void setActiveStream(int)>
<com.android.tools.layoutlib.java.System_Delegate: void log(java.lang.String)>
<com.android.systemui.statusbar.NotificationContentView: void setShowingLegacyBackground(boolean)>
<com.android.server.am.ActivityManagerService: int getFocusedStackId()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,float[],int)>
<com.android.server.location.ComprehensiveCountryDetector: void <init>(android.content.Context)>
<com.android.documentsui.model.RootInfo: int describeContents()>
<com.android.systemui.volume.MediaSessions.Callbacks: void onRemoteUpdate(android.media.session.MediaSession.Token,java.lang.String,android.media.session.MediaController.PlaybackInfo)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void texSubImage2D(com.android.gallery3d.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int)>
<com.android.server.notification.ZenLog: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.gallery3d.glrenderer.Texture: boolean isOpaque()>
<com.android.documentsui.DocumentsApplication: void onTrimMemory(int)>
<com.android.gallery3d.glrenderer.GLCanvas: void deleteRecycledResources()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational[] getTagRationalValues(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void addChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.recents.ScreenPinningRequest: void showPrompt(boolean)>
<com.google.android.maps.MapView: boolean isTraffic()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onStartedWakingUp()>
<com.android.layoutlib.bridge.android.BridgeContext: void popParser()>
<com.android.location.provider.ActivityRecognitionProviderClient: android.os.IBinder getBinder()>
<com.android.systemui.qs.QSPanel.Callback: void onScanStateChanged(boolean)>
<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<com.android.systemui.qs.tiles.FlashlightTile: java.lang.String composeChangeAnnouncement()>
<javax.obex.ClientSession: void setConnectionID(long)>
<com.android.server.policy.PhoneWindowManager: int getNonDecorDisplayWidth(int,int,int)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean isEnabledForCurrentProfiles()>
<com.android.server.wm.WindowManagerService.OnHardKeyboardStatusChangeListener: void onHardKeyboardStatusChange(boolean)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result insertChild(android.view.ViewGroup,com.android.ide.common.rendering.api.ILayoutPullParser,int,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.systemui.keyboard.KeyboardUI: void start()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String toString()>
<com.android.server.location.LocationBasedCountryDetector: java.lang.String getCountryFromLocation(android.location.Location)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void notifyKeyguardAuthenticated(boolean)>
<com.android.server.hdmi.HdmiControlService: void onBootPhase(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void updateNotificationIcons(com.android.systemui.statusbar.NotificationData)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isShowing()>
<com.android.statementservice.retriever.Utils: boolean hasCommonString(java.util.List,java.util.List)>
<com.android.server.notification.ValidateNotificationPeople: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.accounts.AccountManagerService: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>
<com.android.systemui.qs.tiles.HotspotTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.statementservice.retriever.URLFetcher: com.android.statementservice.retriever.WebContent getWebContentFromUrlWithRetry(java.net.URL,long,int,int,int)>
<com.android.systemui.statusbar.stack.AmbientState: void setDark(boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: com.android.settingslib.bluetooth.CachedBluetoothDevice addDevice(com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.LocalBluetoothProfileManager,android.bluetooth.BluetoothDevice)>
<com.android.systemui.volume.VolumeDialogController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: float getFloat(java.lang.String,float)>
<javax.obex.ClientSession: void <init>(javax.obex.ObexTransport)>
<com.android.server.location.ComprehensiveCountryDetector: boolean isGeoCoderImplemented()>
<javax.microedition.khronos.opengles.GL10: void glColor4f(float,float,float,float)>
<com.android.systemui.statusbar.policy.FlashlightController: void setFlashlight(boolean)>
<com.android.server.notification.ZenModeHelper: android.os.Looper getLooper()>
<com.android.systemui.qs.tiles.CastTile: void handleClick()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkUriPermission(android.net.Uri,int,int,int)>
<android.graphics.BidiRenderer: android.graphics.RectF renderText(int,int,int,float[],int,boolean)>
<com.android.server.am.ActivityManagerService: int getLaunchedFromUid(android.os.IBinder)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int calculateContentHeightFromActualHeight(int)>
<com.android.systemui.statusbar.NotificationBigMediaNarrowViewWrapper: boolean needsRoundRectClipping()>
<com.android.systemui.doze.DozeLog: void tracePulseStart(int)>
<com.android.uiautomator.core.UiDevice: boolean isScreenOn()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.server.pm.PackageManagerService: void freeStorage(java.lang.String,long,android.content.IntentSender)>
<com.android.systemui.statusbar.SignalClusterView: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<com.android.printspooler.ui.PrintActivity: void onSecurePdfFile()>
<com.android.tools.layoutlib.java.Objects: boolean deepEquals(java.lang.Object,java.lang.Object)>
<com.android.server.wm.WindowManagerService: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>
<com.android.commands.hid.Hid: void main(java.lang.String[])>
<com.android.providers.settings.SettingsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<com.android.server.wm.WindowManagerService: android.content.res.Configuration forceStackToFullscreen(int,boolean)>
<com.android.systemui.statusbar.phone.LockIcon: void onDetachedFromWindow()>
<com.android.server.content.ContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.server.ConnectivityService: int reserveNetId()>
<com.android.systemui.statusbar.GestureRecorder.Gesture.TagRecord: java.lang.String toJson()>
<com.android.server.statusbar.StatusBarManagerInternal: void startAssist(android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnectedProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildTag(int,int,java.lang.Object)>
<com.android.systemui.volume.VolumeDialog: void show(int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.view.IWindowManagerImpl: void setForcedDisplayScalingMode(int,int)>
<com.android.shell.BugreportWarningActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.qs.tiles.IntentTile: com.android.systemui.qs.QSTile.State newTileState()>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String getName()>
<com.android.systemui.settings.ToggleSlider: void onAttachedToWindow()>
<com.android.systemui.statusbar.NotificationCustomViewWrapper: boolean needsRoundRectClipping()>
<com.android.documentsui.LocalPreferences: boolean getDisplayFileSize(android.content.Context)>
<com.android.gallery3d.exif.ExifInterface: byte[] getThumbnailBytes()>
<android.graphics.Canvas_Delegate: com.android.layoutlib.bridge.impl.GcSnapshot getSnapshot()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getConnectionSummary()>
<com.android.server.power.PowerManagerService: void onStart()>
<javax.obex.ClientOperation: java.lang.String getEncoding()>
<com.android.server.media.MediaSessionRecord: int getVolumeControl()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getState()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.tools.layoutlib.create.DelegateClassAdapter: void <init>(com.android.tools.layoutlib.create.Log,org.objectweb.asm.ClassVisitor,java.lang.String,java.util.Set)>
<android.view.IWindowManagerImpl: void setInTouchMode(boolean)>
<com.android.server.pm.UserManagerService: int getUserSerialNumber(int)>
<com.android.server.LocationManagerService: void removeGpsMeasurementsListener(android.location.IGpsMeasurementsListener)>
<com.android.server.content.ContentService: void removeStatusChangeListener(android.content.ISyncStatusObserver)>
<com.android.systemui.qs.tiles.CellularTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.qs.QSTile createTile(java.lang.String)>
<com.android.systemui.qs.tiles.CellularTile: int getMetricsCategory()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquation(int)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.server.power.PowerManagerService: void onBootPhase(int)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setNextAlarmController(com.android.systemui.statusbar.policy.NextAlarmController)>
<com.android.systemui.power.PowerUI.WarningsUI: void userSwitched()>
<android.view.Display.ColorTransform: java.lang.String toString()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void setTintColor(int)>
<com.android.layoutlib.bridge.android.support.DrawerLayoutUtil: void openDrawer(android.view.View,java.lang.String)>
<com.android.printspooler.ui.PrinterRegistry: boolean isFavoritePrinter(android.print.PrinterId)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String securityToString(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<com.android.keyguard.KeyguardDisplayManager: void show()>
<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>
<com.android.server.LockSettingsService: void setBoolean(java.lang.String,boolean,int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(android.graphics.Bitmap,java.lang.String)>
<com.android.server.wm.WindowManagerService: void setOverscan(int,int,int,int,int)>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void addNotification(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeIntValue(int,int)>
<com.android.server.am.ActivityManagerService: void setInstaller(com.android.server.pm.Installer)>
<com.android.systemui.egg.MLand: boolean onTrackballEvent(android.view.MotionEvent)>
<com.android.systemui.qs.tiles.FlashlightTile: void handleClick()>
<com.android.server.connectivity.NetworkAgentInfo: boolean satisfies(android.net.NetworkRequest)>
<com.android.uiautomator.core.UiObject: boolean waitForExists(long)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon)>
<android.graphics.PaintFlagsDrawFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.pm.PackageManagerService: int movePrimaryStorage(java.lang.String)>
<com.android.systemui.qs.tiles.LocationTile: int getMetricsCategory()>
<com.android.gallery3d.glrenderer.UploadedTexture: void <init>(boolean)>
<com.android.settingslib.animation.AppearAnimationUtils: long calculateDelay(int,int)>
<javax.obex.Operation: java.io.OutputStream openOutputStream()>
<com.android.server.statusbar.StatusBarManagerService: void clearNotificationEffects()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void finishAnimation(float,java.lang.Runnable)>
<com.android.server.policy.PhoneWindowManager: boolean isScreenOn()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onCameraLaunchGestureDetected(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setLayoutDirection(int)>
<com.android.server.wm.WindowManagerService: void validateAppTokens(int,java.util.List)>
<com.android.server.am.ActivityStackSupervisor: void onDisplayAdded(int)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawRect(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.commands.appwidget.AppWidget: void main(java.lang.String[])>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: float getXVelocity()>
<com.android.server.trust.TrustAgentWrapper: boolean isBound()>
<com.android.server.pm.PackageManagerService: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>
<com.android.systemui.SystemUIApplication: com.android.systemui.SystemUI[] getServices()>
<com.android.gallery3d.glrenderer.GLCanvas: void initializeTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.Bitmap)>
<com.android.systemui.qs.QSDualTileLabel: void setText(java.lang.CharSequence)>
<com.android.systemui.statusbar.StatusBarIconView: boolean set(com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl.EmergencyListener: void setEmergencyCallsOnly(boolean)>
<com.android.settingslib.wifi.AccessPoint: java.lang.Object getTag()>
<com.android.keyguard.KeyguardPinBasedInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onExpansionStopped()>
<com.android.server.pm.PackageManagerService: void querySyncProviders(java.util.List,java.util.List)>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord copyWithIsCurrent(boolean)>
<com.android.server.AttributeCache.Entry: void <init>(android.content.Context,android.content.res.TypedArray)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>
<com.android.defcontainer.DefaultContainerService: void onHandleIntent(android.content.Intent)>
<com.android.server.location.LocationProviderInterface: void enable()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void keyguardGoingAway()>
<com.android.server.policy.PhoneWindowManager: void beginLayoutLw(boolean,int,int,int)>
<com.android.systemui.qs.tiles.WifiTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onThresholdReached()>
<com.example.android.networkusage.StackOverflowXmlParser: java.util.List parse(java.io.InputStream)>
<com.android.systemui.statusbar.ExpandableView: int getClipTopAmount()>
<com.android.server.usb.UsbPortManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,float[],int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getUidForSharedUser(java.lang.String)>
<com.android.gallery3d.exif.ExifTag: java.lang.Object getValue()>
<com.android.layoutlib.bridge.impl.GcSnapshot: boolean clipRect(float,float,float,float,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector instance(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setDisabledFlags(int,boolean)>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>
<com.android.printspooler.widget.PreviewPageFrame: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.twilight.TwilightService: void onStart()>
<com.android.keyguard.KeyguardSecurityView: boolean needsInput()>
<com.android.server.accounts.AccountManagerService: void systemReady()>
<com.android.settingslib.bluetooth.HidProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.wifi.WifiTracker: void resumeScanning()>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewAppInfoClicked(com.android.systemui.recents.views.TaskView)>
<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: void <init>(android.content.Context)>
<com.android.server.MountServiceIdler: boolean onStartJob(android.app.job.JobParameters)>
<com.android.server.NetworkManagementService: void enableNat(java.lang.String,java.lang.String)>
<com.android.server.location.FusedLocationHardwareSecure: void injectDiagnosticData(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isContentExpandable()>
<com.android.server.am.ActivityManagerService: void initPowerManagement()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void unbindCameraPrewarmService(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isChildInvisible(android.view.View)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenerateMipmapOES(int)>
<com.android.settingslib.bluetooth.HeadsetProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.server.midi.MidiService: void unregisterListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>
<com.android.gallery3d.glrenderer.RawTexture: void yield()>
<com.android.server.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)>
<com.android.server.policy.PhoneWindowManager: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int)>
<com.android.keyguard.KeyguardPasswordView: void resetState()>
<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>
<com.android.settingslib.bluetooth.Utils.ErrorListener: void onShowError(android.content.Context,java.lang.String,int)>
<com.android.systemui.statusbar.policy.SplitClockView: void onAttachedToWindow()>
<android.content.res.BridgeTypedArray: int getResourceId(int,int)>
<com.android.statementservice.DirectStatementService: void onCreate(com.android.statementservice.retriever.AbstractStatementRetriever,android.os.Looper,java.io.File)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.systemui.statusbar.policy.NetworkController.MobileDataController getMobileDataController()>
<com.android.server.am.AppTimeTracker: void start(java.lang.String)>
<com.android.location.provider.LocationProviderBase: void reportLocation(android.location.Location)>
<com.android.server.pm.PreferredComponent: boolean sameSet(android.content.ComponentName[])>
<javax.obex.ServerOperation: java.lang.String getType()>
<com.android.wallpapercropper.WallpaperCropActivity: java.lang.String getFileExtension(java.lang.String)>
<com.android.server.SystemService: void onCleanupUser(int)>
<com.android.server.connectivity.Tethering: void interfaceLinkStateChanged(java.lang.String,boolean)>
<com.android.settingslib.bluetooth.MapProfile: java.util.List getConnectedDevices()>
<com.android.server.am.ActivityManagerService: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<com.android.server.notification.ManagedServices: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void registerMoveCallback(android.content.pm.PackageManager.MoveCallback,android.os.Handler)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setCurrentUser(int)>
<com.android.server.usb.UsbDebuggingManager: void setAdbEnabled(boolean)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isZenAvailable()>
<com.android.systemui.statusbar.policy.PreviewInflater: boolean wouldLaunchResolverActivity(android.content.Context,android.content.Intent,int)>
<com.android.keyguard.PasswordTextView: void append(char)>
<com.android.server.notification.NotificationRecord: int getLifespanMs(long)>
<com.android.keyguard.KeyguardUpdateMonitor: void clearFailedUnlockAttempts()>
<com.android.systemui.usb.UsbDebuggingActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void showSystemIconArea(boolean)>
<android.graphics.MaskFilter_Delegate: boolean isSupported()>
<com.android.server.ConnectivityService: void releasePendingNetworkRequest(android.app.PendingIntent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverflowContainer(com.android.systemui.statusbar.NotificationOverflowContainer)>
<com.android.location.fused.FusionEngine: void <init>(android.content.Context,android.os.Looper)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.app.ActivityManager.RunningTaskInfo getTopMostTask()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setExpandable(boolean)>
<com.android.server.AppOpsService: void <init>(java.io.File,android.os.Handler)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onFocusLost()>
<com.android.server.wm.WindowManagerService: boolean requestAssistScreenshot(com.android.internal.app.IAssistScreenshotReceiver)>
<com.android.systemui.recents.misc.NamedCounter: java.lang.String nextName()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void appTransitionCancelled()>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void loadDimens(android.content.res.Resources)>
<com.android.systemui.statusbar.StackScrollerDecorView: void performVisibilityAnimation(boolean)>
<com.android.gallery3d.exif.ExifInterface: int getAllowedIfdFlagsFromInfo(int)>
<javax.microedition.khronos.opengles.GL10: void glFogf(int,float)>
<com.android.server.wallpaper.WallpaperManagerService: void <init>(android.content.Context)>
<com.android.systemui.recents.RecentsConfiguration: boolean hasNavBarScrim()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void choosePrivateKeyAlias(int,android.net.Uri,java.lang.String,android.os.IBinder)>
<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties getProperties()>
<com.android.systemui.recents.misc.Utilities: float mapCoordInSelfToDescendent(android.view.View,android.view.View,float[],android.graphics.Matrix)>
<com.android.server.notification.NotificationDelegate: void onPanelRevealed(boolean,int)>
<com.android.documentsui.model.RootInfo: java.lang.String toString()>
<javax.microedition.khronos.egl.EGL10: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<com.android.server.am.ActivityManagerService: void setLockScreenShown(boolean)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void readByteArray(byte[],int,int)>
<com.android.printspooler.renderer.IPdfEditor: void applyPrintAttributes(android.print.PrintAttributes)>
<com.android.systemui.statusbar.BaseStatusBar: boolean userAllowsPrivateNotificationsInPublic(int)>
<com.android.server.am.ActivityManagerService: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setName(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void startSync(android.net.Uri,android.os.Bundle)>
<com.android.systemui.statusbar.NotificationData.Environment: boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onBluetoothDevicesChanged()>
<com.android.systemui.statusbar.phone.LockIcon: void setAccessibilityController(com.android.systemui.statusbar.policy.AccessibilityController)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,float[],int)>
<com.android.server.notification.ManagedServices: void onBootPhaseAppsCanStart()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>
<com.android.settingslib.bluetooth.MapProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.policy.BluetoothController: void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.layoutlib.bridge.impl.SystemViewInfo: com.android.ide.common.rendering.api.ViewType getViewType()>
<com.android.printspooler.model.PageContentRepository: void destroy(java.lang.Runnable)>
<com.android.gallery3d.util.IntArray: int[] toArray(int[])>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setInput(java.io.Reader)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,java.nio.FloatBuffer)>
<com.android.server.pm.PermissionsState.PermissionState: void <init>(com.android.server.pm.PermissionsState.PermissionState)>
<com.android.server.pm.PackageManagerService: void addOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<android.view.ViewConfiguration_Accessor: void clearConfigurations()>
<com.android.server.am.ActivityManagerService: void crashApplication(int,int,java.lang.String,java.lang.String)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onRemoved()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getIndicationView()>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.Exception)>
<com.android.systemui.statusbar.policy.NextAlarmController: void <init>(android.content.Context)>
<com.android.server.TextServicesManagerService: void setSpellCheckerEnabled(boolean)>
<com.android.systemui.statusbar.NotificationCustomViewWrapper: void <init>(android.view.View)>
<com.android.server.usage.UnixCalendar: void <init>(long)>
<com.android.documentsui.RootCursorWrapper: void close()>
<com.android.gallery3d.exif.ExifInterface: short getOrientationValueForRotation(int)>
<com.android.server.am.CompatModePackages: boolean getPackageAskCompatModeLocked(java.lang.String)>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<android.view.Display.ColorTransform: int hashCode()>
<com.android.server.NetworkManagementService: void createVirtualNetwork(int,boolean,boolean)>
<android.graphics.Matrix_Delegate: boolean hasPerspective(android.graphics.Matrix)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getProfileConnectionState(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.systemui.recents.views.TaskStackView: void startExitToHomeAnimation(com.android.systemui.recents.views.ViewAnimation.TaskViewExitContext)>
<com.android.gallery3d.common.BitmapUtils: boolean isSupportedByRegionDecoder(java.lang.String)>
<com.android.systemui.BatteryMeterView: void onPowerSaveChanged()>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.tools.layoutlib.create.OverrideMethod: void invokeV(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: com.android.systemui.statusbar.phone.PanelView selectPanelForTouch(android.view.MotionEvent)>
<com.android.systemui.qs.QSTile.BooleanState: boolean copyTo(com.android.systemui.qs.QSTile.State)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<com.android.settingslib.bluetooth.PbapServerProfile: java.lang.String toString()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: boolean canConfigWifi()>
<com.android.layoutlib.bridge.android.BridgeContext: void setWallpaper(android.graphics.Bitmap)>
<com.android.server.policy.WakeGestureListener: void cancelWakeUpTrigger()>
<com.android.documentsui.DocumentsApplication: com.android.documentsui.ThumbnailCache getThumbnailsCache(android.content.Context,android.graphics.Point)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: android.animation.Animator.AnimatorListener decrementOnAnimationEnd()>
<com.android.systemui.statusbar.ActivatableNotificationView: void setDimmed(boolean,boolean)>
<com.android.systemui.recents.views.SwipeHelper: void setDensityScale(float)>
<com.android.layoutlib.bridge.impl.RenderDrawable: java.awt.image.BufferedImage getImage(int,int)>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.printspooler.ui.PageAdapter: void destroy(java.lang.Runnable)>
<com.android.server.job.JobSchedulerService: void onRunJobNow(com.android.server.job.controllers.JobStatus)>
<com.android.server.pm.InstructionSets: java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void setBitmap(android.graphics.Bitmap_Delegate)>
<com.android.systemui.statusbar.ExpandableView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void onScrollChanged(int,int,int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.OnHeadsUpChangedListener: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.documentsui.UriDerivativeLoader: void cancelLoadInBackground()>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String shortHelp()>
<com.android.tools.layoutlib.create.DependencyFinder: void printMissingDeps(java.util.List)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean shouldLockout(long)>
<com.android.commands.dpm.Dpm: void main(java.lang.String[])>
<com.android.systemui.statusbar.ScrimView: void animateViewAlpha(float,long,android.view.animation.Interpolator)>
<com.android.server.content.ContentService: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.media.remotedisplay.RemoteDisplay: int getVolumeMax()>
<com.android.systemui.qs.QSTileView: android.view.View updateAccessibilityOrder(android.view.View)>
<com.android.systemui.qs.tiles.WifiTile: void handleUpdateState(com.android.systemui.qs.QSTile.SignalState,java.lang.Object)>
<android.view.WindowCallback: void onContentChanged()>
<com.android.uiautomator.testrunner.TestCaseCollector: void addTestClass(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,int[],int)>
<com.android.documentsui.SortingCursorWrapper: boolean isNull(int)>
<com.android.settingslib.applications.ApplicationsState: android.os.Looper getBackgroundLooper()>
<com.android.server.pm.IntentFilterVerificationState: void setState(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void addChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow,int)>
<com.android.documentsui.DocumentsActivity: com.android.documentsui.DocumentsActivity get(android.app.Fragment)>
<com.android.systemui.statusbar.policy.AccessibilityController: boolean isAccessibilityEnabled()>
<com.android.layoutlib.bridge.android.BridgeWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPulseOnSigMotion()>
<com.android.server.DropBoxManagerService: void stop()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onResume(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: void setWindowMillis(int)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagDefinitionsForTagId(short)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildTag(int,java.lang.Object)>
<com.android.server.pm.Installer: int copyCompleteApp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivity(android.content.Intent,boolean,android.graphics.drawable.Drawable.Callback)>
<com.android.tools.layoutlib.create.Log: void debugNoln(java.lang.String,java.lang.Object[])>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivity(android.content.Intent)>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedGoingToSleep(int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinSecure()>
<com.android.systemui.statusbar.ExpandableView: void setHideSensitive(boolean,boolean,long,long)>
<com.android.systemui.statusbar.StatusBarIconView: void onSizeChanged(int,int,int,int)>
<com.android.server.am.ActivityManagerService: void setDumpHeapDebugLimit(java.lang.String,int,long,java.lang.String)>
<com.android.keyguard.KeyguardAbsKeyInputView: void doHapticKeyClick()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onChildSnappedBack(android.view.View)>
<com.android.server.accounts.IAccountAuthenticatorCache: android.content.pm.RegisteredServicesCache.ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)>
<com.android.server.TextServicesManagerService: boolean isSpellCheckerEnabled()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void updateSystemIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.recents.views.SwipeHelper: boolean isLayoutRtl(android.view.View)>
<com.android.server.wallpaper.WallpaperManagerService: void settingsRestored()>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>
<com.android.documentsui.model.RootInfo: boolean isExternalStorage()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<com.android.documentsui.FailureDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.android.server.location.MockProvider: com.android.internal.location.ProviderProperties getProperties()>
<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)>
<com.android.server.SystemConfig: android.util.ArraySet getBackupTransportWhitelist()>
<com.android.systemui.recents.views.DebugOverlayView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.BaseStatusBar: void toggleRecents()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadUp()>
<com.android.server.content.SyncQueue: boolean add(com.android.server.content.SyncOperation)>
<com.android.server.wm.WindowManagerService: void removeTask(int)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor getInstance(android.content.Context)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void connectProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean hasBottomDecor()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void topAppWindowChanged(boolean)>
<com.android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()>
<com.android.keyguard.KeyguardSecurityContainer: void verifyUnlock()>
<com.android.server.LockSettingsStrongAuth: void registerStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkPermission(java.lang.String,int,int)>
<com.android.commands.uiautomator.Launcher.Command: void run(java.lang.String[])>
<com.android.systemui.recents.misc.Console: void log(boolean,java.lang.String)>
<com.android.captiveportallogin.CaptivePortalLoginActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.server.display.OverlayDisplayWindow.Listener: void onWindowCreated(android.graphics.SurfaceTexture,float,long,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onChildAnimationFinished()>
<com.android.server.NetworkManagementService: void detachPppd(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onBeginDrag(android.view.View)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getBasePackageName()>
<com.android.server.SystemConfig: android.util.SparseArray getSystemPermissions()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationVisibilityChanged(com.android.internal.statusbar.NotificationVisibility[],com.android.internal.statusbar.NotificationVisibility[])>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onSwitchUser(int)>
<com.android.systemui.statusbar.StatusBarIconView: void setNotification(android.app.Notification)>
<com.android.documentsui.SaveFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.server.location.GpsNavigationMessageProvider: void onGpsEnabledChanged()>
<com.android.server.IntentResolver: void sortResults(java.util.List)>
<com.android.systemui.statusbar.phone.QSTileHost: android.content.Context getContext()>
<com.android.systemui.statusbar.BaseStatusBar: void animateCollapsePanels(int,boolean,boolean)>
<com.android.statementservice.DirectStatementService: int onStartCommand(android.content.Intent,int,int)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvf(int,int,float)>
<com.android.server.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>
<com.android.server.location.GpsLocationProvider: boolean isSupported()>
<com.android.systemui.recents.model.FilteredTaskList: int indexOf(com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.policy.BluetoothController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.BluetoothController.Callback)>
<com.android.systemui.SystemUIApplication: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.providers.settings.SettingsProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<com.android.server.notification.NotificationUsageStats: void registerRemovedByApp(com.android.server.notification.NotificationRecord)>
<com.android.server.policy.LogDecelerateInterpolator: float getInterpolation(float)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.view.IWindowId getWindowId(android.os.IBinder)>
<com.android.layoutlib.bridge.impl.RenderAction: void checkLock()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void notifyDeviceWakeUpRequested()>
<com.android.systemui.settings.ToggleSeekBar: void setAccessibilityLabel(java.lang.String)>
<com.android.server.pm.IntentFilterVerificationState: void setPendingState()>
<com.android.server.AppOpsService: void packageRemoved(int,java.lang.String)>
<com.android.server.connectivity.NetworkMonitor: void log(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void startPreHideAnimation(java.lang.Runnable)>
<com.android.server.location.FusedLocationHardwareSecure: int getVersion()>
<com.android.server.notification.NotificationRecord: void setPackagePriority(int)>
<com.android.documentsui.ThumbnailCache: int sizeOf(android.net.Uri,android.graphics.Bitmap)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToString(long,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean getAttributeBooleanValue(int,boolean)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: boolean applyChildOrder(java.util.List)>
<com.android.documentsui.DirectoryContainerView: void setDrawDisappearingFirst(boolean)>
<com.android.keyguard.KeyguardAbsKeyInputView: void handleAttemptLockout(long)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void setBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isCountdownConditionSupported()>
<com.android.location.provider.ProviderRequestUnbundled: long getInterval()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getSystemService(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,int[],int)>
<com.android.location.provider.GeocodeProvider: java.lang.String onGetFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>
<com.android.server.lights.LightsService: void <init>(android.content.Context)>
<com.android.settingslib.wifi.AccessPoint: boolean matches(android.net.wifi.WifiConfiguration)>
<com.android.commands.svc.UsbCommand: java.lang.String longHelp()>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(float)>
<com.android.systemui.recents.model.Task.ComponentNameKey: boolean equals(java.lang.Object)>
<com.android.printspooler.widget.PrintOptionsLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.server.job.controllers.TimeController: void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.server.pm.PackageManagerService: void clearPackagePreferredActivities(java.lang.String)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateScale()>
<com.android.systemui.statusbar.policy.ZenModeController: int getZen()>
<com.android.server.AppOpsService.Ops: void <init>(java.lang.String,com.android.server.AppOpsService.UidState,boolean)>
<com.android.server.location.GpsMeasurementsProvider: void <init>(android.os.Handler)>
<com.android.systemui.statusbar.phone.PanelBar: void onExpandingFinished()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void removeClient(com.android.internal.view.IInputMethodClient)>
<com.android.systemui.recents.model.Task: void <init>(com.android.systemui.recents.model.Task.TaskKey,boolean,int,int,java.lang.String,java.lang.String,android.graphics.drawable.Drawable,int,boolean,boolean,android.graphics.Bitmap,java.lang.String)>
<com.android.systemui.statusbar.SpeedBumpView: int getIntrinsicHeight()>
<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean,java.lang.String,java.lang.String,int,boolean,boolean,java.lang.String)>
<com.android.systemui.assist.AssistOrbView: void animateCircleSize(float,long,long,android.view.animation.Interpolator)>
<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void userActivity(long,int,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.UpdateLockService: void releaseUpdateLock(android.os.IBinder)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void hideIfNotSimple(boolean)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagIntValues(int)>
<com.android.server.usage.UsageStatsXml: void read(android.util.AtomicFile,com.android.server.usage.IntervalStats)>
<com.android.systemui.statusbar.stack.StackStateAnimator: boolean isRunning()>
<com.android.server.AssetAtlasService: void <init>(android.content.Context)>
<com.android.systemui.assist.AssistOrbView: void onLayout(boolean,int,int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glNormalPointer(int,int,java.nio.Buffer)>
<com.android.systemui.recents.views.RecentsView: boolean hasValidSearchBar()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.audio.AudioService.VolumeController: void postVolumeChanged(int,int)>
<com.android.systemui.recents.model.RecentsTaskLoader: void unregisterReceivers()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int)>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: boolean setCompressedThumbnail(byte[])>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap_Delegate getDelegate(long)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onResume(int)>
<com.android.server.notification.NotificationRecord: int getFreshnessMs(long)>
<com.android.systemui.qs.SecureSetting: void <init>(android.content.Context,android.os.Handler,java.lang.String)>
<com.android.gallery3d.common.Utils: void closeSilently(android.os.ParcelFileDescriptor)>
<android.view.BridgeInflater: void setResourceReference(com.android.ide.common.rendering.api.ResourceReference)>
<com.android.systemui.statusbar.policy.KeyButtonView: void abortCurrentGesture()>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: int getCount()>
<com.android.server.content.SyncStorageEngine: java.util.List getCurrentSyncsCopy(int,boolean)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPulseOnPickup()>
<android.util.BridgeXmlPullAttributes: int getAttributeUnsignedIntValue(int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean interceptTouchEvent(android.view.MotionEvent)>
<com.android.server.policy.ImmersiveModeConfirmation: android.view.WindowManager.LayoutParams getClingWindowLayoutParams()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void getBounds(android.graphics.Rect,int,int,int,int)>
<com.android.systemui.statusbar.AlphaOptimizedButton: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean wasJustClicked()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry getTopEntry()>
<com.android.systemui.statusbar.phone.DozeScrimController: boolean isDozing()>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation2d(android.view.View[][],java.lang.Runnable)>
<com.android.systemui.statusbar.ExpandableView: void setHideSensitiveForIntrinsicHeight(boolean)>
<com.android.tools.layoutlib.create.DelegateClassAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String eventTypeToString(int)>
<com.android.server.twilight.TwilightState: long getTodaySunset()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte)>
<com.android.systemui.statusbar.ServiceMonitor: android.content.ComponentName getComponent()>
<com.android.systemui.statusbar.ExpandableNotificationRow.ExpansionLogger: void logNotificationExpansion(java.lang.String,boolean,boolean)>
<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.server.notification.ManagedServices: void <init>(android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices.UserProfiles)>
<com.android.systemui.statusbar.policy.FlashlightController: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.Bridge: android.graphics.Bitmap getCachedBitmap(java.lang.String,java.lang.Object)>
<android.graphics.Matrix_Delegate: boolean hasPerspective()>
<com.android.server.ConnectivityService: android.net.Network[] getAllNetworks()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void resetUserExpansion()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.exif.ExifInterface: int getActualTagCount(int,int)>
<com.android.server.wm.InputConsumerImpl: void <init>(com.android.server.wm.WindowManagerService,android.os.Looper,android.view.InputEventReceiver.Factory)>
<com.android.systemui.volume.SegmentedButtons.Callback: void onSelected(java.lang.Object,boolean)>
<com.android.layoutlib.bridge.impl.RenderAction: void release()>
<com.android.server.notification.ScheduleCalendar: long getNextChangeTime(long)>
<com.android.server.notification.ZenModeHelper: void requestZenModeConditions(android.service.notification.IConditionListener,int)>
<com.android.server.pm.PackageManagerService: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setOnActivatedListener(com.android.systemui.statusbar.ActivatableNotificationView.OnActivatedListener)>
<com.android.systemui.recents.RecentsConfiguration: void getSearchBarBounds(int,int,int,android.graphics.Rect)>
<com.android.systemui.statusbar.BaseStatusBar: void showAssistDisclosure()>
<com.android.systemui.statusbar.policy.MobileSignalController: void setConfiguration(com.android.systemui.statusbar.policy.NetworkControllerImpl.Config)>
<javax.obex.PrivateInputStream: int available()>
<com.android.uiautomator.core.UiDevice: boolean openQuickSettings()>
<com.android.layoutlib.bridge.util.SparseWeakArray: void append(long,java.lang.Object)>
<com.android.gallery3d.glrenderer.RawTexture: void <init>(int,int,boolean)>
<com.android.server.wallpaper.WallpaperManagerService: boolean isWallpaperSupported(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: int getWallpaperDesiredMinimumWidth()>
<com.android.server.wm.PointerEventDispatcher: void <init>(android.view.InputChannel)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: void computeCurrentVelocity(int)>
<com.android.systemui.doze.DozeHost: void removeCallback(com.android.systemui.doze.DozeHost.Callback)>
<com.android.uiautomator.core.UiObject: boolean setText(java.lang.String)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void setDependencySet(java.util.Set)>
<com.android.server.notification.NotificationRecord: void setGlobalSortKey(java.lang.String)>
<android.graphics.Path_Delegate: android.graphics.Path_Delegate getDelegate(long)>
<android.util.BridgeXmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)>
<com.android.server.notification.RankingHelper: void onPackagesChanged(boolean,java.lang.String[])>
<com.android.settingslib.wifi.AccessPoint: void saveWifiState(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,java.nio.IntBuffer)>
<javax.microedition.khronos.opengles.GL10: void glRotatef(float,float,float,float)>
<com.android.gallery3d.glrenderer.GLCanvas: void deleteBuffer(int)>
<com.android.systemui.recents.model.RecentsTaskLoader: void deleteTaskData(com.android.systemui.recents.model.Task,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>
<com.android.layoutlib.bridge.android.support.RecyclerViewUtil: void setAdapter(android.view.View,com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.LayoutlibCallback,int)>
<com.android.keyguard.PasswordTextView: void reset(boolean)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onActivityDrawn()>
<com.android.systemui.statusbar.phone.PanelView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.PersistentDataBlockService: void onStart()>
<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>
<com.android.systemui.qs.tiles.HotspotTile: void handleLongClick()>
<com.android.server.notification.ZenModeHelper: void setEffectsSuppressed(boolean)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.KeyguardMonitor getKeyguardMonitor()>
<com.android.media.remotedisplay.RemoteDisplay: int getStatus()>
<com.android.printspooler.model.RemotePrintDocument: void writeContent(android.content.ContentResolver,android.net.Uri)>
<com.android.documentsui.DirectoryFragment: void onUserSortOrderChanged()>
<com.android.systemui.statusbar.phone.VelocityTrackerFactory: com.android.systemui.statusbar.phone.VelocityTrackerInterface obtain(android.content.Context)>
<com.android.uiautomator.core.UiDevice: void removeWatcher(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: float getOverExpansionPixels()>
<com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>
<com.android.systemui.statusbar.NotificationData: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.server.VibratorService: void onInputDeviceRemoved(int)>
<com.android.systemui.statusbar.stack.AmbientState: void onDragFinished(android.view.View)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getText()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.egg.MLand: void setupPlayers(int)>
<com.android.location.provider.ActivityRecognitionProvider: boolean isActivitySupported(java.lang.String)>
<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<javax.obex.Operation: void abort()>
<com.android.systemui.statusbar.CommandQueue: void animateExpandNotificationsPanel()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onVoiceAssistHintStarted()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getAllPermissionGroups(int)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: int readInt()>
<com.android.server.content.SyncStorageEngine: void init(android.content.Context)>
<com.android.systemui.statusbar.phone.ScrimController: void setDozeInFrontAlpha(float)>
<com.android.systemui.SwipeHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.QSTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String toString()>
<com.android.layoutlib.bridge.bars.Config: java.util.List getResourceDirs(int)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getProxCheckBeforePulse()>
<com.android.systemui.qs.tiles.DndTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.server.wm.WindowManagerService: int getInputMethodWindowVisibleHeight()>
<com.android.server.pm.PackageManagerService: android.content.ComponentName getHomeActivities(java.util.List)>
<com.android.gallery3d.glrenderer.GLES20Canvas: int uploadBuffer(java.nio.ByteBuffer)>
<android.content.res.BridgeTypedArray: int getChangingConfigurations()>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasScaleChangedFrom(float)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.server.location.PassiveProvider: boolean isEnabled()>
<com.android.printspooler.widget.PrintContentView: void onMeasure(int,int)>
<com.android.server.job.controllers.JobStatus: boolean isPersisted()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitSource(java.lang.String,java.lang.String)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onCreate(android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)>
<javax.microedition.khronos.opengles.GL10: void glAlphaFunc(int,float)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getAutoTimeRequired()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getDepth()>
<android.view.IWindowManagerImpl: void pauseKeyDispatching(android.os.IBinder)>
<com.android.server.NetworkManagementService: void setIpForwardingEnabled(boolean)>
<com.android.keyguard.ViewMediatorCallback: void resetKeyguard()>
<com.android.systemui.qs.QSTile.Host: void collapsePanels()>
<com.android.server.policy.PhoneWindowManager: int finishPostLayoutPolicyLw()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateIsSmallScreen(int)>
<javax.obex.ServerOperation: java.io.InputStream openInputStream()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateDismissView(boolean)>
<com.android.systemui.recents.RecentsActivity: void onDebugModeTriggered()>
<com.android.server.location.MockProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void init()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean,int)>
<javax.microedition.khronos.opengles.GL10: void glMatrixMode(int)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(byte[],java.io.OutputStream)>
<com.android.systemui.statusbar.NotificationBackgroundView: void onDraw(android.graphics.Canvas)>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<com.android.server.pm.PreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PreferredActivity)>
<com.android.server.notification.ZenLog: void traceSubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName,int)>
<com.android.server.pm.PackageInstallerSession: void commit(android.content.IntentSender)>
<com.android.server.LockSettingsService: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: void clearPendingBackup()>
<com.android.server.pm.PackageManagerService: boolean getBlockUninstallForUser(java.lang.String,int)>
<com.android.layoutlib.bridge.android.AndroidLocale: java.lang.String toLanguageTag(java.util.Locale)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getBluetoothState()>
<com.android.documentsui.RootCursorWrapper: android.os.Bundle getExtras()>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupCreatedFromChildren(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.wallpapercropper.CropView.TouchCallback: void onTouchDown()>
<com.android.server.SystemService: android.os.IBinder getBinderService(java.lang.String)>
<com.android.systemui.recents.views.ViewAnimation.TaskViewExitContext: void <init>(com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
<com.android.systemui.Gefingerpoken: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.location.MockProvider: void enable()>
<com.android.systemui.statusbar.ExpandableView: boolean canHaveBottomDecor()>
<com.android.server.pm.Installer: int freeCache(java.lang.String,long)>
<com.android.server.IntentResolver: java.util.Set filterSet()>
<com.android.server.usb.UsbDeviceManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<com.android.systemui.statusbar.BaseStatusBar: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getItemHeight()>
<com.android.server.notification.NotificationUsageStats: void registerPostedByApp(com.android.server.notification.NotificationRecord)>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleased(int)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getDeviceOwnerName()>
<com.android.systemui.DessertCaseView: void place(android.view.View,android.graphics.Point,boolean)>
<com.android.server.NetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void disableLayersForOneFrame()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(com.android.gallery3d.exif.Rational)>
<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void finish(boolean)>
<com.android.server.pm.PackageInstallerService: boolean isStageName(java.lang.String)>
<com.android.server.LockSettingsService: void unregisterStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter: boolean isReplacementNeeded(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: void topAppWindowChanged(boolean)>
<com.android.server.connectivity.Tethering: void checkDunRequired()>
<com.android.server.ConnectivityService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.wm.WindowManagerService: void setForcedDisplayDensity(int,int)>
<com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener: void onOptionsOpened()>
<com.android.externalstorage.ExternalStorageProvider: void deleteDocument(java.lang.String)>
<com.android.server.content.SyncStorageEngine.OnSyncRequestListener: void onSyncRequest(com.android.server.content.SyncStorageEngine.EndPoint,int,android.os.Bundle)>
<com.android.server.audio.AudioService.VolumeController: void postMasterMuteChanged(int)>
<com.android.printspooler.renderer.IPdfEditor: void closeDocument()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.documentsui.DocumentsActivity: void onPickRequested(com.android.documentsui.model.DocumentInfo)>
<com.android.systemui.recents.views.SwipeHelper.Callback: boolean canChildBeDismissed(android.view.View)>
<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>
<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>
<com.android.systemui.SwipeHelper.Callback: boolean updateSwipeProgress(android.view.View,boolean,float)>
<com.android.server.pm.PackageManagerService: int getIntentVerificationStatus(java.lang.String,int)>
<com.android.server.am.ActivityManagerService: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
<com.android.commands.hid.Device: void addDelay(int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setupActionBar()>
<com.android.printspooler.ui.SelectPrinterActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.ExpandableOutlineView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void setKeyguard(boolean,boolean)>
<com.android.server.wm.BlackFrame: void <init>(android.view.SurfaceSession,android.graphics.Rect,android.graphics.Rect,int,int,boolean)>
<android.view.WindowCallback: android.view.View onCreatePanelView(int)>
<com.android.systemui.tuner.TunerService: void removeTunable(com.android.systemui.tuner.TunerService.Tunable)>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String getDocumentType(java.lang.String)>
<com.android.keyguard.KeyguardSecurityContainer: java.lang.CharSequence getCurrentSecurityModeContentDescription()>
<javax.obex.ServerRequestHandler: int onAbort(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.server.accessibility.EventStreamTransformation: void setNext(com.android.server.accessibility.EventStreamTransformation)>
<com.android.systemui.statusbar.phone.SettingsButton: boolean isTunerClick()>
<com.android.server.NetworkManagementService: void setFirewallChainEnabled(int,boolean)>
<com.android.systemui.statusbar.NotificationViewWrapper: void <init>(android.view.View)>
<com.android.server.am.BatteryStatsService: void onLowPowerModeChanged(boolean)>
<com.android.server.storage.DeviceStorageMonitorService: void onStart()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.os.UserHandle getCurrentUserHandle()>
<com.android.systemui.statusbar.NotificationContentView: android.view.View getHeadsUpChild()>
<android.graphics.EmbossMaskFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)>
<com.android.server.wm.WindowManagerService: void setForcedDisplayScalingMode(int,int)>
<com.android.server.am.BatteryStatsService: void noteStartCamera(int)>
<com.android.server.firewall.SenderPackageFilter: void <init>(java.lang.String)>
<com.android.systemui.statusbar.NotificationBackgroundView: void setCustomBackground(int)>
<android.view.WindowManagerGlobal_Delegate: void setWindowManagerService(android.view.IWindowManager)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void cancelDiscovery()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexiOES(int,int,int,int,int)>
<com.android.systemui.doze.DozeLog: void traceScreenOn()>
<com.android.documentsui.RecentLoader: void cancelLoadInBackground()>
<com.android.server.pm.UserManagerService: void onUserForeground(int)>
<com.android.uiautomator.core.UiObject: java.lang.String getContentDescription()>
<com.android.systemui.qs.QSDetailItems: void onFinishInflate()>
<com.android.documentsui.UriDerivativeLoader: void onStopLoading()>
<com.android.systemui.statusbar.ActivatableNotificationView: void setClipTopAmount(int)>
<com.android.systemui.statusbar.policy.PreviewInflater: android.content.pm.ActivityInfo getTargetActivityInfo(android.content.Context,android.content.Intent,int)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.am.ActivityManagerService: boolean removeTask(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isSecure(int)>
<com.android.server.accounts.IAccountAuthenticatorCache: void setListener(android.content.pm.RegisteredServicesCacheListener,android.os.Handler)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void loadDimens()>
<libcore.io.MemoryMappedFile_Delegate: void setDataDir(java.io.File)>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.server.content.SyncOperation: java.lang.String wakeLockName()>
<com.android.server.content.SyncStorageEngine: int getPendingOperationCount()>
<javax.obex.BaseStream: void streamClosed(boolean)>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable loadPackageIcon(android.content.Context,java.lang.String,int)>
<com.android.server.IoThread: com.android.server.IoThread get()>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionInPlace(java.lang.String,int)>
<com.android.systemui.statusbar.NotificationContentView: void onMeasure(int,int)>
<com.android.server.pm.PackageInstallerService: java.lang.String allocateExternalStageCidLegacy()>
<com.android.layoutlib.bridge.android.AndroidLocale: java.util.Locale forLanguageTag(java.lang.String)>
<com.android.systemui.statusbar.DismissView: void onFinishInflate()>
<com.android.server.display.DisplayBlanker: void requestDisplayState(int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setHeadsUpBoundaries(int,int)>
<com.android.systemui.statusbar.policy.RotationLockController: void setRotationLocked(boolean)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.Result acquire(long)>
<com.android.documentsui.ColumnAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.documentsui.RecentLoader.RecentTask: void <init>(java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int)>
<com.android.systemui.qs.tiles.DndTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void encodeProperties(android.view.ViewHierarchyEncoder)>
<com.android.server.media.RemoteDisplayProviderWatcher.Callback: void addProvider(com.android.server.media.RemoteDisplayProviderProxy)>
<com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest: byte[] getData()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onStartedGoingToSleep()>
<com.android.server.notification.ValidateNotificationPeople: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.tools.layoutlib.create.DependencyFinder: java.util.List findDeps(java.util.List)>
<com.android.server.policy.PhoneWindowManager: void startedWakingUp()>
<com.android.photos.views.TiledImageRenderer: void setViewSize(int,int)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void startAnimationForEvents(java.util.ArrayList,com.android.systemui.statusbar.stack.StackScrollState,long)>
<com.android.systemui.recents.RecentsActivity: void onPause()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void toggleRecents()>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context)>
<com.android.server.firewall.IntentFirewall.AMSInterface: int checkComponentPermission(java.lang.String,int,int,int,boolean)>
<com.android.server.usage.UsageStatsService: void onBootPhase(int)>
<com.android.server.accessibility.EventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getNotificationTopPadding()>
<com.android.systemui.recents.misc.Console: void log(java.lang.String)>
<com.android.location.provider.ProviderRequestUnbundled: void <init>(com.android.internal.location.ProviderRequest)>
<com.android.server.policy.PhoneWindowManager: void systemReady()>
<com.android.server.pm.PackageInstallerSession: void abandon()>
<com.android.layoutlib.bridge.Bridge: java.util.Map getPlatformProperties()>
<com.android.systemui.qs.QSFooter: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<com.android.settingslib.wifi.WifiTracker: void forceUpdate()>
<com.android.commands.sm.Sm: void run(java.lang.String[])>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean canSkipBouncer()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void showNotification(com.android.systemui.statusbar.NotificationData.Entry)>
<javax.obex.ClientOperation: long getLength()>
<com.android.server.am.AppTimeTracker: void dump(java.io.PrintWriter,java.lang.String,boolean)>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine.PendingOperation insertIntoPending(com.android.server.content.SyncOperation)>
<com.android.server.location.LocationProviderInterface: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.server.wm.WindowManagerService: void updateCircularDisplayMaskIfNeeded()>
<com.android.server.usb.UsbDebuggingManager: void clearUsbDebuggingKeys()>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: int compare(android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.MediaSize)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ActivatableNotificationView getActivatedChild()>
<com.android.layoutlib.bridge.android.BridgeContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.policy.CastControllerImpl: void setDiscovering(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
<com.android.server.statusbar.StatusBarManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.BaseStatusBar: void destroy()>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateFailed(java.lang.CharSequence)>
<com.android.server.audio.AudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>
<com.android.systemui.egg.MLand: java.util.ArrayList getGameControllers()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getPackageName()>
<com.android.systemui.statusbar.policy.CallbackHandler: void handleMessage(android.os.Message)>
<com.android.tools.layoutlib.create.PromoteFieldClassAdapter: void <init>(org.objectweb.asm.ClassVisitor,java.util.Set)>
<com.android.server.location.ComprehensiveCountryDetector: void setCountryListener(android.location.CountryListener)>
<com.android.server.audio.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: void setPackageAskScreenCompat(java.lang.String,boolean)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateDark()>
<javax.obex.ClientSession: void <init>(javax.obex.ObexTransport,boolean)>
<com.android.commands.settings.SettingsCmd: void run()>
<com.android.systemui.keyboard.KeyboardUI: void onTabletModeChanged(long,boolean)>
<com.android.printspooler.renderer.IPdfRenderer: void renderPage(int,int,int,android.print.PrintAttributes,android.os.ParcelFileDescriptor)>
<com.android.settingslib.bluetooth.MapProfile: boolean isConnectable()>
<com.android.systemui.qs.QSTile.Callback: void onShowDetail(boolean)>
<com.android.systemui.egg.MLand: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.BluetoothController.Callback: void onBluetoothDevicesChanged()>
<com.android.systemui.statusbar.phone.ScrimController: void abortKeyguardFadingOut()>
<com.android.server.LockSettingsService: void setLockPattern(java.lang.String,java.lang.String,int)>
<com.android.systemui.recents.model.TaskStack: void addTask(com.android.systemui.recents.model.Task)>
<com.android.systemui.recents.views.TaskStackView: void onTaskResize(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.recents.RecentsUserEventProxyReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.am.ProcessStatsService: boolean setMemFactorLocked(int,boolean,long)>
<com.android.server.usb.UsbDeviceManager: void setCurrentUser(int,com.android.server.usb.UsbSettingsManager)>
<com.android.server.job.controllers.BatteryController.ChargingTracker: void startTracking()>
<com.android.tools.layoutlib.create.OverrideMethod: double invokeD(java.lang.String,boolean,java.lang.Object)>
<javax.obex.ObexTransport: java.io.InputStream openInputStream()>
<com.android.server.am.AppTimeTracker: void deliverResult(android.content.Context)>
<com.android.printspooler.model.RemotePrintDocument: boolean hasLaidOutPages()>
<com.android.systemui.egg.MLand: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.documentsui.RootCursorWrapper: float getFloat(int)>
<com.android.systemui.statusbar.policy.ZenModeController: int getCurrentUser()>
<android.view.WindowCallback: boolean onSearchRequested(android.view.SearchEvent)>
<com.android.gallery3d.glrenderer.BasicTexture: int getId()>
<com.android.gallery3d.exif.ExifInterface: boolean rewriteExif(java.nio.ByteBuffer,java.util.Collection)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
<com.android.keyguard.KeyguardPinBasedInputView: void setPasswordEntryEnabled(boolean)>
<com.android.uiautomator.core.UiObject: boolean isFocusable()>
<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)>
<com.android.statementservice.retriever.AndroidPackageInfoFetcher: java.util.List getCertFingerprints(java.lang.String)>
<com.android.printspooler.model.RemotePrintDocument: boolean hasUpdateError()>
<com.android.systemui.statusbar.CommandQueue: void appTransitionPending()>
<com.android.server.hdmi.HdmiCecLocalDevice.PendingActionClearedCallback: void onCleared(com.android.server.hdmi.HdmiCecLocalDevice)>
<com.android.server.hdmi.HdmiCecFeatureAction.ActionTimer: void clearTimerMessage()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void finishKeyguardFadingAway()>
<com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback: void onStateChanged(boolean,boolean)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageListChanged()>
<javax.microedition.khronos.opengles.GL10: void glCullFace(int)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionStarting(long,long)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitTypeVariable(java.lang.String)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: android.os.IBinder getBinder()>
<com.android.server.location.FusedLocationHardwareSecure: void registerSink(android.hardware.location.IFusedLocationHardwareSink)>
<com.android.server.pm.PackageManagerService: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchScreenTurnedOn()>
<com.android.systemui.egg.MLand: float getLastTimeStep()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void reset()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean supportsProfiles()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isBouncerShowing()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeUnsignedIntValue(int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void startUnlockHintAnimation()>
<com.android.systemui.qs.tiles.IntentTile: void handleDestroy()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.android.systemui.statusbar.CommandQueue: void notificationLightPulse(int,int,int)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteFramebuffers(javax.microedition.khronos.opengles.GL11ExtensionPack,int,int[],int)>
<com.android.server.audio.AudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: android.os.IBinder asBinder()>
<android.view.IWindowManagerImpl: void stopAppFreezingScreen(android.os.IBinder,boolean)>
<com.android.systemui.qs.QSDetailItems: void setMinHeightInItems(int)>
<com.android.settingslib.applications.ApplicationsState.Session: void release()>
<com.android.server.pm.InstructionSets: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>
<com.android.server.policy.StatusBarController: android.view.WindowManagerInternal.AppTransitionListener getAppTransitionListener()>
<com.android.server.NetworkManagementService: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>
<com.android.systemui.qs.UsageTracker: void <init>(android.content.Context,java.lang.String,java.lang.Class,int)>
<com.android.systemui.qs.QSDetailItems: void setTagSuffix(java.lang.String)>
<com.android.keyguard.KeyguardSecurityView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.server.pm.IntentFilterVerificationState: boolean isVerificationComplete()>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getCurrentView()>
<com.android.systemui.statusbar.DismissView: android.view.View findContentView()>
<com.android.gallery3d.glrenderer.GLPaint: float getLineWidth()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onFinishInflate()>
<com.android.systemui.statusbar.BaseStatusBar: void showRecents(boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void disconnect(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.server.media.MediaRouterService: void requestSetVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats.ProcessState getProcessStateLocked(java.lang.String,int,int,java.lang.String)>
<com.android.systemui.qs.QSTile.AnimationIcon: void <init>(int)>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.recents.views.SwipeHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig getConfig()>
<com.android.providers.settings.SettingsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.server.am.ActivityManagerService: void keyguardWaitingForActivityDrawn()>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightError()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.qs.tiles.CellularTile: void handleClick()>
<android.graphics.Xfermode_Delegate: android.graphics.Xfermode_Delegate getDelegate(long)>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: void recycle()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadius(float)>
<com.android.server.content.SyncStorageEngine.PendingOperation: boolean equals(com.android.server.content.SyncStorageEngine.PendingOperation)>
<com.android.systemui.qs.tiles.HotspotTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.statusbar.tv.TvStatusBar: void appTransitionStarting(long,long)>
<com.android.server.accounts.AccountManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistExceptIdleInternal()>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void notifyGroupChildRemoved(android.view.View)>
<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<com.android.server.notification.RankingHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean)>
<com.android.tools.layoutlib.create.Log: void debug(java.lang.String,java.lang.Object[])>
<android.graphics.Gradient_Delegate.GradientPaint: void precomputeGradientColors()>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.view.ViewPropertyAnimator,float,float,float)>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void removeSystemIcon(java.lang.String,int,int)>
<com.android.server.fingerprint.FingerprintService: void handleRemoved(long,int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onExpansionStarted()>
<com.android.server.notification.ZenModeHelper: void removeCallback(com.android.server.notification.ZenModeHelper.Callback)>
<com.android.server.notification.RankingReconsideration: boolean isDone()>
<com.android.systemui.statusbar.NotificationContentView: void setDark(boolean,boolean,long)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyLidSwitchChanged(long,boolean)>
<com.android.documentsui.SectionedListAdapter: long getItemId(int)>
<com.android.systemui.assist.AssistManager: void onUserSwitched(int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void setAlpha(int)>
<com.android.systemui.recents.model.Task: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: boolean isComplete()>
<com.android.server.IntentResolver: boolean isFilterVerified(android.content.IntentFilter)>
<com.android.uiautomator.core.UiDevice: void runWatchers()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void scanForAccessPoints()>
<com.android.server.trust.TrustManagerService: void resetAgent(android.content.ComponentName,int)>
<android.view.IWindowManagerImpl: float[] getAnimationScales()>
<com.android.server.LockSettingsService: java.lang.String getStringUnchecked(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.stack.AmbientState: void setOverScrollAmount(float,boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: int getScrollYPos(android.view.View)>
<com.android.settingslib.bluetooth.HidProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<com.android.gallery3d.glrenderer.UploadedTexture: android.graphics.Bitmap onGetBitmap()>
<com.android.server.am.ActivityManagerService: void resumeAppSwitches()>
<com.android.layoutlib.bridge.util.SparseWeakArray: long keyAt(int)>
<com.android.commands.ime.Ime: void main(java.lang.String[])>
<com.android.server.pm.Installer: int dexopt(java.lang.String,int,boolean,java.lang.String,int)>
<com.android.server.wm.WindowManagerService: void updateRotationUnchecked(boolean,boolean)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector checkable(boolean)>
<javax.obex.ServerOperation: boolean continueOperation(boolean,boolean)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintError(int,java.lang.String)>
<com.android.server.power.ShutdownThread: void rebootSafeMode(android.content.Context,boolean)>
<com.android.server.policy.PhoneWindowManager: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getSystemProperty(java.lang.String)>
<com.android.server.ConnectivityService: boolean setUnderlyingNetworksForVpn(android.net.Network[])>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onBootPhase(int)>
<com.android.server.audio.AudioService: boolean isCameraSoundForced()>
<javax.obex.PrivateOutputStream: void write(byte[])>
<com.android.systemui.qs.tiles.UserDetailItemView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void showBouncerMessage(java.lang.String,int)>
<com.android.layoutlib.bridge.Bridge: boolean isLocaleRtl(java.lang.String)>
<com.android.systemui.tuner.DemoModeFragment: void onDestroy()>
<com.android.photos.views.TiledImageView: void destroy()>
<com.android.proxyhandler.SocketConnect: void <init>(java.net.Socket,java.net.Socket)>
<com.android.systemui.recents.RecentsAppWidgetHost: void stopListening()>
<com.android.systemui.statusbar.policy.SignalController: java.lang.String getStringIfExists(int)>
<com.android.server.DeviceIdleController.LocalService: void addPowerSaveTempWhitelistAppDirect(int,long,boolean,java.lang.String)>
<com.android.server.connectivity.PacManager: void <init>(android.content.Context,android.os.Handler,int)>
<javax.obex.ServerOperation: void <init>(javax.obex.ServerSession,java.io.InputStream,int,int,javax.obex.ServerRequestHandler)>
<com.android.server.am.ContentProviderConnection: java.lang.String toShortString()>
<com.android.systemui.statusbar.NotificationContentView: void setExpandedChild(android.view.View)>
<com.android.printspooler.ui.FusedPrintersProvider: void onAbandon()>
<com.android.printspooler.ui.FusedPrintersProvider: void addHistoricalPrinter(android.print.PrinterInfo)>
<com.android.statementservice.DirectStatementService: void onDestroy()>
<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo getDocumentInfo()>
<com.android.systemui.recents.views.SwipeHelper.Callback: void onBeginDrag(android.view.View)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void setQsExpanded(boolean)>
<com.android.server.pm.Installer: int rmdex(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onDraw(android.graphics.Canvas)>
<javax.obex.Operation: int getMaxPacketSize()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()>
<com.android.systemui.qs.tiles.CellularTile: java.lang.String removeTrailingPeriod(java.lang.String)>
<com.android.systemui.statusbar.BaseStatusBar: void setZenMode(int)>
<com.android.settingslib.wifi.AccessPoint: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.stack.AmbientState: boolean isShadeExpanded()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void removeLongPressCallback()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onBluetoothStateChanged(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<com.android.systemui.volume.VolumeDialogController.State: android.service.notification.Condition getManualExitCondition()>
<com.android.server.display.DisplayManagerService: void windowManagerAndInputReady()>
<com.android.server.media.MediaSessionRecord: boolean isTransportControlEnabled()>
<com.android.server.usage.UsageStatsDatabase.CheckinAction: boolean checkin(com.android.server.usage.IntervalStats)>
<com.android.layoutlib.bridge.android.BridgeContext: void addViewKey(android.view.View,java.lang.Object)>
<com.android.keyguard.KeyguardPinBasedInputView: void <init>(android.content.Context)>
<android.util.BridgeXmlPullAttributes: int getAttributeResourceValue(int,int)>
<com.android.gallery3d.glrenderer.GLId: int generateTexture()>
<com.android.server.content.SyncManager: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMesh(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int,int,int)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSize(float)>
<com.android.gallery3d.common.Utils: int prevPowerOf2(int)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: int getItemViewType(int)>
<com.android.gallery3d.exif.ExifInvalidFormatException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setBarState(int)>
<com.android.server.pm.PackageManagerService: void enterSafeMode()>
<com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService.UserAccounts getUserAccounts(int)>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.wm.WindowManagerService: void disableKeyguard(android.os.IBinder,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,int[],int)>
<com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromParcel(android.os.Parcel,com.android.documentsui.model.Durable)>
<com.android.systemui.qs.tiles.FlashlightTile: void handleUserSwitch(int)>
<com.android.server.usage.UsageStatsService: void onStatsUpdated()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.server.usage.UnixCalendar: void truncateToDay()>
<com.android.documentsui.model.DocumentStack: void write(java.io.DataOutputStream)>
<com.android.printspooler.ui.PageAdapter: int getItemCount()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean filterMotionEvent(android.view.MotionEvent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeni(int,int,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isInputRestricted()>
<com.android.server.power.PowerManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.keyguard.KeyguardSimPukView: void <init>(android.content.Context)>
<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void dumpWindowToFile(android.view.accessibility.AccessibilityNodeInfo,int,int,int)>
<com.android.keyguard.KeyguardSecurityContainer: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void refreshLayout(int)>
<com.android.commands.uiautomator.RunTestCommand: void run(java.lang.String[])>
<com.android.settingslib.bluetooth.MapProfile: int getOrdinal()>
<com.android.layoutlib.bridge.bars.Config: boolean isGreaterOrEqual(int,int)>
<com.android.server.notification.RankingConfig: int getPackagePriority(java.lang.String,int)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result moveChild(java.lang.Object,java.lang.Object,int,java.util.Map,com.android.ide.common.rendering.api.IAnimationListener)>
<android.graphics.Matrix_Delegate: float[] makeValues(java.awt.geom.AffineTransform)>
<com.android.settingslib.bluetooth.PanProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.SwipeHelper.Callback: boolean isAntiFalsingNeeded()>
<com.android.server.pm.PackageManagerService: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>
<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>
<com.android.server.ConnectivityService: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
<com.android.printspooler.renderer.IPdfRenderer: void closeDocument()>
<com.android.server.input.InputManagerService: void setInputDispatchMode(boolean,boolean)>
<com.android.server.wm.WindowManagerService: int getBaseDisplayDensity(int)>
<com.android.printspooler.ui.PrintActivity: void onUpdateFailed(java.lang.CharSequence)>
<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()>
<android.graphics.RadialGradient_Delegate: java.awt.Paint getJavaPaint()>
<com.android.server.am.ActivityManagerService: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void fadeKeyguardWhilePulsing()>
<android.graphics.Xfermode_Delegate: boolean isSupported()>
<com.android.systemui.qs.QSTile: void fireToggleStateChanged(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.printspooler.model.MutexFileProvider: void <init>(java.io.File)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<com.android.server.policy.LogDecelerateInterpolator: void <init>(int,int)>
<android.graphics.Rasterizer_Delegate: boolean isSupported()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getLineNumber()>
<com.android.server.am.BatteryStatsService: void noteResetCamera()>
<com.android.systemui.qs.QSDetailItems: void onAttachedToWindow()>
<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<com.android.server.midi.MidiService: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)>
<com.android.documentsui.ProviderExecutor: void execute(java.lang.Runnable)>
<com.android.server.connectivity.Tethering: boolean isBluetooth(java.lang.String)>
<com.android.server.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<com.android.uiautomator.core.UiAutomatorBridge: void setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)>
<com.android.systemui.statusbar.phone.PanelBar: void panelExpansionChanged(com.android.systemui.statusbar.phone.PanelView,float,boolean)>
<com.android.tools.layoutlib.create.MethodListener: java.lang.Object onInvokeA(java.lang.String,boolean,java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glPopMatrix()>
<com.android.server.job.JobStore: java.util.List getJobsByUid(int)>
<com.android.server.wm.WindowManagerService: com.android.server.wm.InputConsumerImpl addInputConsumer(android.os.Looper,android.view.InputEventReceiver.Factory)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<com.android.server.audio.AudioService.VolumeStreamState: boolean adjustIndex(int,int,java.lang.String)>
<com.android.systemui.volume.IconPulser: void <init>(android.content.Context)>
<com.android.gallery3d.exif.ExifTag: int getElementSize(short)>
<com.android.server.notification.NotificationIntrusivenessExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.systemui.statusbar.NotificationData: void <init>(com.android.systemui.statusbar.NotificationData.Environment)>
<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] getSelectedPages()>
<com.android.server.wm.BlackFrame: void setAlpha(float)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.SignalClusterView: boolean hasOverlappingRendering()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setPanelExpanded(boolean)>
<com.android.server.notification.RankingHelper: void setPackageVisibilityOverride(java.lang.String,int,int)>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityContainer getSecurityContainer()>
<com.android.server.Watchdog.HandlerChecker: void scheduleCheckLocked()>
<com.android.server.AssetAtlasService: long[] getMap()>
<com.android.server.policy.RecentApplicationsBackground: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)>
<com.android.printspooler.widget.PrintContentView: void onFinishInflate()>
<com.android.server.usb.UsbAlsaManager: void logDevicesList(java.lang.String)>
<com.android.server.notification.PackagePriorityExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.systemui.qs.tiles.ColorInversionTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.content.res.BridgeResources: android.content.res.XmlResourceParser getLayout(int)>
<com.android.location.provider.ActivityRecognitionProviderClient: void onProviderChanged(boolean,com.android.location.provider.ActivityRecognitionProvider)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void hideSystemIconArea(boolean)>
<com.android.systemui.statusbar.stack.AmbientState: float getStackTranslation()>
<com.android.gallery3d.exif.ExifInterface: short getTypeFromInfo(int)>
<javax.obex.PrivateOutputStream: void <init>(javax.obex.BaseStream,int)>
<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>
<javax.obex.ObexSession: boolean handleAuthChall(javax.obex.HeaderSet)>
<com.android.systemui.recents.views.DebugOverlayView.DebugOverlayViewCallbacks: void onPrimarySeekBarChanged(float)>
<com.android.server.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.server.audio.MediaFocusControl: int getRemoteStreamVolume()>
<com.android.photos.BitmapRegionTileSource: android.graphics.Bitmap getTile(int,int,int,android.graphics.Bitmap)>
<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()>
<com.android.server.SystemConfig: android.util.ArraySet getFixedImeApps()>
<com.android.server.wm.WindowManagerService: int getRotation()>
<com.android.systemui.statusbar.SpeedBumpView: int getInitialHeight()>
<com.android.server.policy.SystemGesturesPointerEventListener: void onPointerEvent(android.view.MotionEvent)>
<com.android.server.VibratorService: boolean hasVibrator()>
<com.android.providers.settings.SettingsProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.mediadrm.signer.MediaDrmSigner.Certificate: byte[] getContent()>
<com.android.documentsui.model.Durable: void write(java.io.DataOutputStream)>
<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>
<com.android.systemui.statusbar.policy.SplitClockView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredDhcpRanges()>
<com.android.server.am.ActivityManagerService: void attachApplication(android.app.IApplicationThread)>
<com.android.systemui.recents.views.TaskStackView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.SystemService: void onBootPhase(int)>
<com.android.layoutlib.bridge.Bridge: boolean supports(int)>
<com.android.server.pm.BackgroundDexOptService: boolean onStartJob(android.app.job.JobParameters)>
<javax.microedition.khronos.opengles.GL10: void glLineWidth(float)>
<com.android.printspooler.ui.PrintActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.qs.QSDetailItems: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.pm.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.BasePermission,int,int,int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.statementservice.retriever.AbstractAsset: boolean followInsecureInclude()>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onConnectedChanged()>
<com.android.server.usage.UserUsageStatsService.StatsUpdatedListener: long getAppIdleRollingWindowDurationMillis()>
<com.android.systemui.qs.QSTile.Host: android.os.Looper getLooper()>
<com.android.server.usb.UsbService: void bootCompleted()>
<com.android.server.notification.ZenModeHelper: void setNotificationPolicy(android.app.NotificationManager.Policy)>
<com.android.server.am.BatteryStatsService: void notePhoneOn()>
<com.android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()>
<javax.obex.Operation: int getHeaderLength()>
<com.android.printspooler.ui.PageAdapter.PreviewArea: int getHeight()>
<com.android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<com.android.server.accessibility.AccessibilityManagerService: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>
<com.android.keyguard.KeyguardSecurityContainer: void setSecurityCallback(com.android.keyguard.KeyguardSecurityContainer.SecurityCallback)>
<com.android.systemui.statusbar.SpeedBumpView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.uiautomator.core.UiObject: boolean exists()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.job.controllers.JobStatus: long getLatestRunTimeElapsed()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary(android.content.Context,android.net.NetworkInfo.DetailedState,boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void translate(float,float)>
<android.graphics.Gradient_Delegate.GradientPaint: int getGradientColor(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int,boolean,boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean hasBootCompleted()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void startKeyguardExitAnimation(long,long)>
<com.android.server.content.ContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<com.android.documentsui.SaveFragment: void setSaveEnabled(boolean)>
<com.android.uiautomator.core.UiAutomatorBridge: void setCompressedLayoutHierarchy(boolean)>
<com.android.server.NetworkManagementService: boolean getIpForwardingEnabled()>
<com.android.server.notification.NotificationDelegate: void onSetDisabled(int)>
<com.android.server.pm.Installer: int deleteCacheFiles(java.lang.String,int)>
<com.android.server.job.controllers.ConnectivityController: void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.systemui.statusbar.policy.EthernetSignalController: com.android.systemui.statusbar.policy.SignalController.State cleanState()>
<com.android.commands.sm.Sm: void runGetPrimaryStorageUuid()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onOverscrollTopChanged(float,boolean)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.server.statusbar.StatusBarManagerInternal: void onCameraLaunchGestureDetected(int)>
<com.android.server.connectivity.Vpn: void interfaceStatusChanged(java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,int[],int)>
<com.android.server.wm.WindowManagerService: int getLidState()>
<com.android.systemui.ExpandHelper.Callback: void setUserLockedChild(android.view.View,boolean)>
<com.android.server.location.LocationRequestStatistics: void startRequesting(java.lang.String,java.lang.String,long)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.opengles.GL getGL()>
<com.android.systemui.volume.VolumeDialogComponent: void dismissNow()>
<com.android.systemui.statusbar.NotificationData.Entry: void <init>(android.service.notification.StatusBarNotification,com.android.systemui.statusbar.StatusBarIconView)>
<android.view.WindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.systemui.statusbar.NotificationTemplateViewWrapper: void updateGrayscale(android.widget.ImageView,boolean)>
<com.android.systemui.BatteryMeterView: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.statusbar.GestureRecorder: void tag(long,java.lang.String)>
<android.view.IWindowManagerImpl: void resumeKeyDispatching(android.os.IBinder)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.server.BatteryService: void onStart()>
<com.android.keyguard.KeyguardHostView: void onFinishInflate()>
<com.android.server.SystemService: void publishLocalService(java.lang.Class,java.lang.Object)>
<com.android.uiautomator.testrunner.UiAutomatorTestCaseFilter: boolean accept(java.lang.Class)>
<com.android.server.InputMethodManagerService: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setVisibility(int)>
<com.android.server.location.FusedLocationHardwareSecure: void requestBatchOfLocations(int)>
<com.android.systemui.recents.views.RecentsView: void setTaskStacks(java.util.ArrayList)>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: int getHeight()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isUpgrade()>
<com.android.systemui.qs.tiles.BluetoothTile: void handleClick()>
<com.android.server.am.ActivityStackSupervisor: void <init>(com.android.server.am.ActivityManagerService,com.android.server.am.RecentTasks)>
<com.android.server.policy.PhoneWindowManager: int subWindowTypeToLayerLw(int)>
<com.android.settingslib.bluetooth.BluetoothEventManager: void registerCallback(com.android.settingslib.bluetooth.BluetoothCallback)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
<com.android.systemui.statusbar.phone.PanelBar: void onAllPanelsCollapsed()>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getVibrateOnPickup()>
<com.android.server.notification.ScheduleCalendar: long nextScheduleStart(long)>
<android.graphics.Path_Delegate: void setJavaShape(java.awt.Shape)>
<com.android.systemui.statusbar.policy.MobileSignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getMaxConnectionState()>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewAppIconClicked(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.power.PowerUI: void start()>
<com.android.server.pm.Installer: int deleteCacheFiles(java.lang.String,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getStyleAttribute()>
<com.android.layoutlib.bridge.Bridge: java.util.EnumSet getCapabilities()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector enabled(boolean)>
<com.android.keyguard.KeyguardAbsKeyInputView: void setPasswordEntryInputEnabled(boolean)>
<com.android.server.notification.ManagedServices: void onUserSwitched(int)>
<android.net.ConnectivityManager.PacketKeepaliveCallback: void onError(int)>
<javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onFinishInflate()>
<com.android.keyguard.KeyguardSecurityContainer: void reset()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isSystemExpanded()>
<com.android.systemui.assist.AssistOrbView: android.widget.ImageView getLogo()>
<com.android.systemui.statusbar.BaseStatusBar: void workAroundBadLayerDrawableOpacity(android.view.View)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<com.android.systemui.volume.Interaction: void register(android.view.View,com.android.systemui.volume.Interaction.Callback)>
<com.android.server.content.SyncManager: void clearScheduledSyncOperations(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo)>
<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>
<com.android.server.am.ActivityManagerService: boolean isIntentSenderAnActivity(android.content.IIntentSender)>
<com.android.server.content.SyncManager: void <init>(android.content.Context,boolean)>
<com.android.location.fused.FusionEngine: void setRequest(com.android.location.provider.ProviderRequestUnbundled,android.os.WorkSource)>
<com.android.documentsui.UriDerivativeLoader: void onCanceled(java.lang.Object)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void <init>(android.content.Context)>
<com.android.server.audio.MediaFocusControl: void unregisterMediaButtonEventReceiverForCalls()>
<com.android.server.wm.WindowManagerService: void onDisplayChanged(int)>
<com.android.systemui.statusbar.phone.PanelView: void collapse(boolean,float)>
<com.android.server.audio.MediaFocusControl.AudioFocusDeathHandler: void binderDied()>
<com.android.server.media.MediaRouterService: void unregisterClient(android.media.IMediaRouterClient)>
<com.android.server.content.SyncStorageEngine: void dumpPendingOperations(java.lang.StringBuilder)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onAllSizesComputed()>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.BluetoothController: void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.graphics.ColorFilter_Delegate: boolean isSupported()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: void preloadRawTasks(boolean)>
<com.android.systemui.doze.DozeLog: void traceNotificationPulse(long)>
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<com.android.server.notification.ConditionProviders.Callback: void onBootComplete()>
<com.android.server.NetworkManagementService: void shutdown()>
<com.android.shell.BugreportPrefs: void setWarningState(android.content.Context,int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getSystemServiceName(java.lang.Class)>
<com.android.systemui.statusbar.phone.PanelView: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitGL()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isAntiFalsingNeeded()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFinishedGoingToSleep(int)>
<com.android.keyguard.KeyguardSimPukView: void resetState()>
<com.android.printspooler.ui.PageAdapter: int getFilePageCount()>
<com.android.systemui.keyboard.KeyboardUI: void onBootCompletedInternal()>
<com.android.server.content.SyncManager: boolean syncExtrasEquals(android.os.Bundle,android.os.Bundle,boolean)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result setProperty(java.lang.Object,java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.create.OverrideMethod: long invokeL(java.lang.String,boolean,java.lang.Object)>
<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>
<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase createLocationBasedCountryDetector()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onReset(com.android.systemui.statusbar.ExpandableView)>
<com.android.location.provider.LocationRequestUnbundled: long getFastestInterval()>
<com.android.systemui.volume.SafetyWarningDialog: void cleanUp()>
<android.content.res.BridgeResources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
<com.android.server.usb.UsbPortManager: void resetSimulation(com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJsonLocked()>
<com.android.settingslib.wifi.WifiTracker: java.util.List getCurrentAccessPoints(android.content.Context,boolean,boolean,boolean)>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context)>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList getTaskKeys()>
<com.android.systemui.recents.views.TaskViewTransform: void <init>(com.android.systemui.recents.views.TaskViewTransform)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearDeviceOwner(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: void onStrongAuthRequiredChanged(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.Object getViewCookie()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: int getOpacity()>
<com.android.server.connectivity.Vpn: void stopLegacyVpnPrivileged()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.statementservice.retriever.URLFetcher: java.lang.String inputStreamToString(java.io.InputStream,int,long)>
<javax.microedition.khronos.opengles.GL10: void glRotatex(int,int,int,int)>
<com.android.documentsui.PickFragment: com.android.documentsui.PickFragment get(android.app.FragmentManager)>
<com.android.server.InputMethodManagerService: boolean setInputMethodEnabled(java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.SettingsButton: void startContinuousSpin()>
<com.android.systemui.statusbar.phone.NavigationBarView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.IntentFilterVerificationState: void addFilter(android.content.pm.PackageParser.ActivityIntentInfo)>
<com.android.server.location.LocationBasedCountryDetector: void <init>(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isInContentBounds(float)>
<android.view.BridgeInflater: java.lang.String[] getClassPrefixList()>
<com.android.systemui.volume.ZenModePanel: void onFinishInflate()>
<com.android.systemui.statusbar.ServiceMonitor: void <init>(java.lang.String,boolean,android.content.Context,java.lang.String,com.android.systemui.statusbar.ServiceMonitor.Callbacks)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: boolean hasOverlappingRendering()>
<com.android.server.audio.AudioService.VolumeController: void loadSettings(android.content.ContentResolver)>
<com.android.keyguard.NumPadKey: void userActivity()>
<com.android.server.am.AppTimeTracker: void dumpWithHeader(java.io.PrintWriter,java.lang.String,boolean)>
<com.android.server.pm.PackageInstallerService: void abandonSession(int)>
<com.android.ims.ImsSuppServiceNotification: void <init>(android.os.Parcel)>
<com.android.systemui.qs.QSContainer: void onLayout(boolean,int,int,int,int)>
<android.view.WindowCallback: void onWindowFocusChanged(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context)>
<com.android.server.location.LocationProviderProxy: void disable()>
<com.android.server.audio.AudioService: int getStreamMinVolume(int)>
<com.android.server.location.MockProvider: void clearStatus()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setBluetoothEnabled(boolean)>
<com.android.systemui.statusbar.phone.SettingsButton: void startAccelSpin()>
<com.android.server.wm.StackTapPointerEventListener: void onPointerEvent(android.view.MotionEvent)>
<com.android.server.ConnectivityService: boolean prepareVpn(java.lang.String,java.lang.String,int)>
<com.android.server.location.CountryDetectorBase: void notifyListener(android.location.Country)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: int getRotation()>
<com.android.systemui.statusbar.ExpandableView: void getDrawingRect(android.graphics.Rect)>
<com.android.server.input.InputManagerService.WiredAccessoryCallbacks: void notifyWiredAccessoryChanged(long,int,int)>
<com.android.commands.uiautomator.EventsCommand: void run(java.lang.String[])>
<com.android.printspooler.widget.PrintContentView.OptionsStateController: boolean canOpenOptions()>
<com.android.uiautomator.testrunner.UiAutomatorInstrumentationTestRunner: void onStart()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void setUserId(int)>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.server.policy.GlobalActions.Action: java.lang.CharSequence getLabelForAccessibility(android.content.Context)>
<com.android.server.job.controllers.StateController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>
<com.android.systemui.statusbar.ExpandableView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.tools.layoutlib.create.InjectMethodsAdapter: void <init>(org.objectweb.asm.ClassVisitor,com.android.tools.layoutlib.create.ICreateInfo.InjectMethodRunnable)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserInfoChanged(int)>
<com.android.server.LocationManagerService: void clearTestProviderEnabled(java.lang.String,java.lang.String)>
<com.android.server.LockSettingsService: com.android.internal.widget.VerifyCredentialResponse checkPattern(java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService.DevicePolicyData: void <init>(int)>
<com.android.server.tv.TvInputManagerService: void onBootPhase(int)>
<com.android.server.location.PassiveProvider: void <init>(android.location.ILocationManager)>
<com.android.systemui.qs.QSTile.DetailAdapter: android.content.Intent getSettingsIntent()>
<com.android.location.provider.ActivityRecognitionProvider: java.lang.String[] getSupportedActivities()>
<android.graphics.Shader_Delegate: java.awt.Paint getJavaPaint()>
<com.android.uiautomator.core.UiObject: boolean pinchIn(int,int)>
<com.android.server.accessibility.ScreenMagnifier: void onRectangleOnScreenRequested(int,int,int,int)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.LocationController getLocationController()>
<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
<com.android.tools.layoutlib.create.MethodListener: double onInvokeD(java.lang.String,boolean,java.lang.Object)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: long getItemId(int)>
<com.android.server.VibratorService: void onInputDeviceChanged(int)>
<com.android.server.am.ActivityManagerService: void setSystemProcess()>
<com.android.server.content.SyncOperation: boolean isExpedited()>
<com.android.keyguard.KeyguardPatternView: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardPatternView: boolean needsInput()>
<com.android.server.audio.AudioService.VolumeController: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,java.nio.IntBuffer)>
<com.android.uiautomator.core.UiDevice: void setOrientationRight()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: java.lang.Runnable decrementAsRunnable()>
<com.android.server.AnyMotionDetector: void stop()>
<com.android.server.wm.KeyguardDisableHandler: void <init>(android.content.Context,android.view.WindowManagerPolicy)>
<com.android.systemui.statusbar.policy.Clock: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: float getGlowAlpha()>
<com.android.server.job.JobSchedulerService: void onStart()>
<com.android.wallpapercropper.WallpaperCropActivity: void setCropViewTileSource(com.android.photos.BitmapRegionTileSource.BitmapSource,boolean,boolean,java.lang.Runnable)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothConnected()>
<com.android.fakeoemfeatures.FakeView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.PanelView: void notifyExpandingFinished()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getChildAtPosition(float,float)>
<com.android.systemui.recents.views.SwipeHelper.Callback: android.view.View getChildAtPosition(android.view.MotionEvent)>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.AbstractAsset getSource()>
<com.android.server.policy.EnableAccessibilityController: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
<com.android.server.pm.PackageManagerService: java.util.List getIntentFilterVerifications(java.lang.String)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.settingslib.bluetooth.Utils: int getConnectionStateSummary(int)>
<com.android.layoutlib.bridge.util.SparseWeakArray: int size()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void ensurePopped()>
<com.android.server.input.InputApplicationHandle: void <init>(java.lang.Object)>
<com.android.systemui.statusbar.policy.SplitClockView: void onFinishInflate()>
<com.android.documentsui.ProviderExecutor: void run()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.usage.UsageStatsXml: long parseBeginTime(java.io.File)>
<com.android.server.NetworkManagementService: void registerNetworkActivityListener(android.os.INetworkActivityListener)>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon()>
<com.android.server.notification.CountdownConditionProvider: void onRequestConditions(int)>
<com.android.server.job.JobSchedulerService: void onBootPhase(int)>
<com.android.layoutlib.bridge.impl.Stack: java.lang.Object peek()>
<com.android.settingslib.bluetooth.PanProfile: boolean isConnectable()>
<com.android.keyguard.KeyguardHostView: void cancelDismissAction()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void changeViewPosition(android.view.View,int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeAssetManager getAssets()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setSwipeDeadZonePercentage(double)>
<com.android.server.am.BroadcastQueue: boolean replaceParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>
<com.android.keyguard.KeyguardPasswordView: void setPasswordEntryEnabled(boolean)>
<com.android.keyguard.KeyguardSecurityContainer: void showPromptReason(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<com.android.systemui.volume.VolumeDialogController: com.android.systemui.volume.MediaSessions createMediaSessions(android.content.Context,android.os.Looper,com.android.systemui.volume.MediaSessions.Callbacks)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void setKeyguardShowing(boolean)>
<com.android.systemui.recents.model.Task.ComponentNameKey: int hashCode()>
<com.android.printspooler.model.PrintSpoolerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.accounts.AccountManagerService: java.lang.String readCachedTokenInternal(com.android.server.accounts.AccountManagerService.UserAccounts,android.accounts.Account,java.lang.String,java.lang.String,byte[])>
<com.android.systemui.statusbar.tv.TvStatusBar: void animateExpandSettingsPanel()>
<com.android.gallery3d.glrenderer.GLId: void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<android.graphics.NinePatch_Delegate: byte[] serialize(com.android.ninepatch.NinePatchChunk)>
<com.android.keyguard.KeyguardSimPinView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.server.wm.WindowManagerService: void lockNow(android.os.Bundle)>
<com.android.server.AppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>
<com.android.server.input.InputManagerService: void setInputFilter(android.view.IInputFilter)>
<android.view.Display.ColorTransform: int getColorTransform()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.uiautomator.core.UiDevice: void resetWatcherTriggers()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>
<com.android.server.storage.DeviceStorageMonitorInternal: boolean isMemoryLow()>
<android.graphics.Gradient_Delegate: boolean isSupported()>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.DebugOverlayView: void onMeasure(int,int)>
<android.view.WindowCallback: void onAttachedToWindow()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<com.android.server.pm.PackageInstallerService: android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)>
<com.android.layoutlib.bridge.bars.IconLoader: com.android.resources.Density getDensity()>
<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>
<com.android.documentsui.model.DurableUtils: void writeNullableString(java.io.DataOutputStream,java.lang.String)>
<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.ZenModeController getZenModeController()>
<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurningOn(com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener)>
<com.android.location.provider.ProviderRequestUnbundled: boolean getReportLocation()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<com.android.server.content.SyncStorageEngine: void reportActiveChange()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.server.am.ActivityManagerService: void reportActivityFullyDrawn(android.os.IBinder)>
<javax.microedition.khronos.opengles.GL10: void glDepthMask(boolean)>
<com.android.systemui.qs.QSPanel: boolean isClosingDetail()>
<com.android.systemui.usb.UsbStorageActivity: void onCancel(android.content.DialogInterface)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onDebug()>
<com.android.server.pm.InstructionSets: java.lang.String[] getAllDexCodeInstructionSets()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void finishDrawing(android.view.IWindow)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void setTracker(android.view.VelocityTracker)>
<com.android.systemui.DessertCaseView.RescalingContainer: void setDarkness(float)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getContentDescription(android.content.Intent,int,java.lang.String,android.content.res.Resources)>
<com.android.gallery3d.exif.ExifTag: void getBytes(byte[])>
<com.android.server.am.ActivityManagerService: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.graphics.Paint_Delegate: java.util.List getFonts()>
<android.text.LineWidth: float getLineWidth(int)>
<com.android.systemui.statusbar.GestureRecorder.Gesture.MotionEventRecord: java.lang.String toJson()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setExpansion(float)>
<com.android.systemui.recents.views.RecentsView: void onAllTaskViewsDismissed(java.util.ArrayList)>
<com.android.documentsui.DirectoryFragment: void onDisplayStateChanged()>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.CastController getCastController()>
<com.android.server.NsdService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.bluetooth.MapProfile: void finalize()>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<com.android.systemui.recents.Recents: void preloadRecents()>
<com.android.fakeoemfeatures.FakeView: void onDraw(android.graphics.Canvas)>
<com.android.keyguard.SecurityMessageDisplay: void setTimeout(int)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.documentsui.RecentsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>
<com.android.server.ConnectivityService: void unregisterNetworkFactory(android.os.Messenger)>
<com.android.server.policy.PhoneWindowManager: void setLastInputMethodWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<com.android.systemui.recents.views.FixedSizeImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.recents.views.TaskStackView: void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldHideSensitiveContents(int)>
<com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter: boolean accept(java.lang.Class)>
<com.android.tools.layoutlib.java.System_Delegate: void log(java.lang.String,java.lang.Throwable)>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isCharged()>
<com.android.server.pm.UserManagerService: void enforceSerialNumber(java.io.File,int)>
<com.android.systemui.statusbar.ExpandableView: boolean isTransparent()>
<com.android.systemui.statusbar.policy.DeadZone: void poke(android.view.MotionEvent)>
<com.android.media.remotedisplay.RemoteDisplay: int getVolumeHandling()>
<com.android.systemui.settings.BrightnessDialog: void onStart()>
<android.content.res.BridgeResources: float getDimension(int)>
<com.android.systemui.statusbar.NotificationOverflowContainer: void setDark(boolean,boolean,long)>
<com.android.server.notification.ZenModeConditions: void requestConditions(android.service.notification.IConditionListener,int)>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.AbstractAsset getTarget()>
<com.android.systemui.settings.ToggleSlider: void setMirror(com.android.systemui.settings.ToggleSlider)>
<com.android.server.media.MediaSessionRecord: boolean isActive()>
<javax.microedition.khronos.opengles.GL10: void glFrustumf(float,float,float,float,float,float)>
<android.content.res.BridgeResources: int getDimensionPixelOffset(int)>
<com.android.server.am.ActivityManagerService: void requestBugReport()>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsFromCacheLocked(com.android.server.accounts.AccountManagerService.UserAccounts,java.lang.String,int,java.lang.String)>
<com.android.server.pm.PackageKeySetData: android.util.ArrayMap getAliases()>
<com.android.documentsui.SectionedListAdapter: int getCount()>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.qs.QSTile.SignalState newTileState()>
<com.android.tools.layoutlib.java.AutoCloseable: void close()>
<com.android.systemui.statusbar.policy.ZenModeController: long getNextAlarm()>
<com.android.media.remotedisplay.RemoteDisplay: void <init>(java.lang.String,java.lang.String)>
<com.android.systemui.recents.RecentsActivity: void onSecondarySeekBarChanged(float)>
<com.android.server.audio.AudioService: int getCurrentAudioFocus()>
<com.android.server.NetworkManagementService: void clearDefaultNetId()>
<com.android.server.notification.RankingHelper: void setPackagePeekable(java.lang.String,int,boolean)>
<com.android.systemui.doze.DozeHost.PulseCallback: void onPulseStarted()>
<com.android.server.notification.ZenLog: void traceConfig(java.lang.String,android.service.notification.ZenModeConfig,android.service.notification.ZenModeConfig)>
<com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler: void onBitmapCropped(byte[])>
<com.android.layoutlib.bridge.android.BridgeWindow: void closeSystemDialogs(java.lang.String)>
<com.android.captiveportallogin.CaptivePortalLoginActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.android.systemui.recents.misc.Console: java.lang.String motionEventActionToString(int)>
<com.android.systemui.qs.QSTile.DetailAdapter: void setToggleState(boolean)>
<com.android.systemui.recents.views.TaskStackView: void <init>(android.content.Context,com.android.systemui.recents.model.TaskStack)>
<com.android.keyguard.EmergencyButton: void setCallback(com.android.keyguard.EmergencyButton.EmergencyButtonCallback)>
<com.android.systemui.recents.model.Task.TaskKey: java.lang.String toString()>
<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean isLocationEnabled()>
<android.view.inputmethod.InputMethodManager_Accessor: void resetInstance()>
<com.android.server.wm.WindowManagerService: void freezeRotation(int)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onStartUser(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void wakeUpIfDozing(long,android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getClassAttribute()>
<com.android.layoutlib.bridge.bars.NavigationBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isWakeUpComingFromTouch()>
<com.android.vpndialogs.ConfirmDialog: void onBackPressed()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDismissView(com.android.systemui.statusbar.DismissView)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.recents.views.TaskView: void onMultiStackDebugTaskStackIdChanged()>
<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.systemui.doze.DozeHost.Callback: void onNotificationLight(boolean)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onAnimationToSideStarted(boolean,float,float)>
<com.android.server.display.WifiDisplayController.Listener: void onScanFinished()>
<android.content.res.BridgeResources: java.lang.CharSequence getText(int)>
<com.android.server.pm.Policy: java.lang.String toString()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void onPostExecute(java.lang.Boolean)>
<com.android.commands.svc.Svc.Command: java.lang.String name()>
<com.android.server.pm.PackageManagerService: boolean isPackageFrozen(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,java.nio.IntBuffer)>
<com.android.server.accounts.AccountManagerService: void writeUserDataIntoCacheLocked(com.android.server.accounts.AccountManagerService.UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: void noteAlarmStart(android.content.IIntentSender,int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.ComponentName startService(android.content.Intent)>
<android.view.WindowCallback: void onActionModeFinished(android.view.ActionMode)>
<com.android.server.policy.PhoneWindowManager: void keepScreenOnStartedLw()>
<com.android.systemui.statusbar.policy.HotspotController: boolean isHotspotEnabled()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: long getKeyguardFadingAwayDuration()>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<com.android.uiautomator.testrunner.TestCaseCollector: void addTestClasses(java.util.List)>
<com.android.server.notification.NotificationDelegate: void clearEffects()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: android.os.IBinder asBinder()>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParent(int)>
<com.android.layoutlib.bridge.bars.TitleBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,java.lang.String,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGroupExpansionChanged(com.android.systemui.statusbar.ExpandableNotificationRow,boolean)>
<com.android.layoutlib.bridge.MockView: void onDraw(android.graphics.Canvas)>
<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>
<android.view.IWindowManagerImpl: void enableScreenIfNeeded()>
<com.android.documentsui.RootsFragment: void onDisplayStateChanged()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isMaxExpandHeightInitialized()>
<com.android.keyguard.KeyguardAbsKeyInputView: void setPasswordEntryEnabled(boolean)>
<com.android.settingslib.bluetooth.BluetoothEventManager: void setReceiverHandler(android.os.Handler)>
<com.android.systemui.statusbar.phone.PanelView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: boolean isRotationLocked()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onVisibilityChanged(boolean)>
<javax.obex.ObexHelper: int getMaxTxPacketSize(javax.obex.ObexTransport)>
<com.android.systemui.statusbar.NotificationData: boolean hasActiveClearableNotifications()>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams)>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,int)>
<com.android.server.am.BatteryStatsService: void noteAlarmStart(java.lang.String,int)>
<com.android.systemui.statusbar.phone.ScrimController: void forceHideScrims(boolean)>
<com.android.server.wm.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.server.accounts.AccountManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.WindowCallback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void writeComplete()>
<com.android.commands.hid.Event: int getVendorId()>
<com.android.server.job.JobStore: com.android.server.job.JobStore initAndGetForTesting(android.content.Context,java.io.File)>
<com.android.server.am.ActivityManagerService: void batteryNeedsCpuUpdate()>
<com.android.systemui.recents.RecentsActivity: void runAfterPause(java.lang.Runnable)>
<com.android.systemui.volume.SegmentedButtons: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot save(int)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.gallery3d.glrenderer.UploadedTexture: void setIsUploading(boolean)>
<com.android.systemui.power.PowerUI.WarningsUI: void update(int,int,long)>
<com.android.server.pm.PackageManagerService: void removePackageFromPreferred(java.lang.String)>
<com.android.server.pm.PackageManagerService: boolean isPackageAvailable(java.lang.String,int)>
<com.android.systemui.statusbar.StatusBarIconView: android.graphics.drawable.Drawable getIcon(android.content.Context,com.android.internal.statusbar.StatusBarIcon)>
<com.android.commands.hid.Device: void close()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,float[],int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.commands.settings.SettingsCmd: java.lang.String resolveCallingPackage()>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<com.android.commands.pm.Pm: int runMovePackage()>
<com.android.commands.hid.Event: int getDuration()>
<com.android.server.usage.UsageStatsService: void onStart()>
<android.content.res.BridgeResources: android.content.res.BridgeTypedArray newTypeArray(int,boolean)>
<com.android.location.fused.FusedLocationProvider: void <init>(android.content.Context)>
<com.android.server.audio.AudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String,java.lang.String)>
<com.android.systemui.qs.QSDualTileLabel: void <init>(android.content.Context)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDone(boolean)>
<com.android.keyguard.ViewMediatorCallback: void keyguardGone()>
<com.android.tools.layoutlib.create.MethodAdapter: int onInvokeI(java.lang.String,boolean,java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<com.android.server.audio.AudioService: void adjustStreamVolume(int,int,int,java.lang.String)>
<com.android.server.content.SyncQueue: void addPendingOperations(int)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.AlphaImageView: boolean hasOverlappingRendering()>
<com.android.server.am.BatteryStatsService: void noteWifiRssiChanged(int)>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,int[],int)>
<com.android.documentsui.model.DocumentStack: int describeContents()>
<android.view.IWindowManagerImpl: void setNewConfiguration(android.content.res.Configuration)>
<com.android.printspooler.model.PageContentRepository: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeContext: int getUserId()>
<com.android.systemui.egg.MLand: void setScoreFieldHolder(android.view.ViewGroup)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToHexString(long)>
<com.android.server.media.MediaSessionService: void onStart()>
<com.android.systemui.statusbar.ScrimView: void onDraw(android.graphics.Canvas)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isAttributeDefault(int)>
<com.android.systemui.qs.tiles.IntentTile: void handleUpdateState(com.android.systemui.qs.QSTile.State,java.lang.Object)>
<com.android.systemui.statusbar.tv.TvStatusBar: void onCameraLaunchGestureDetected(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void add(android.view.View,int)>
<com.android.commands.svc.Svc: void main(java.lang.String[])>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener: void onServiceDisconnected()>
<com.android.printspooler.model.PageContentRepository: void stopPreload()>
<com.android.systemui.statusbar.tv.TvStatusBar: int getMaxKeyguardNotifications()>
<com.android.printspooler.ui.PageAdapter: void finalize()>
<com.android.statementservice.retriever.Relation: java.lang.String getDetail()>
<com.android.systemui.statusbar.DismissViewButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.server.AppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>
<com.android.settingslib.WirelessUtils: boolean isRadioAllowed(android.content.Context,java.lang.String)>
<com.android.server.notification.NotificationRecord: int getExposureMs(long)>
<com.android.server.twilight.TwilightState: long getYesterdaySunset()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isConnectable()>
<com.android.photos.views.TiledImageView: void onResume()>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothEnabled()>
<com.android.systemui.recents.misc.SystemServicesProxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<com.android.systemui.statusbar.BaseStatusBar: void setNotificationShown(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: void notifyFling(boolean)>
<javax.obex.ServerOperation: void sendHeaders(javax.obex.HeaderSet)>
<com.android.photos.views.TiledImageRenderer: int getViewHeight()>
<com.android.systemui.statusbar.policy.EthernetSignalController: void notifyListeners()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.BaseStatusBar.H createHandler()>
<com.android.systemui.volume.VolumeDialogComponent: void register()>
<com.android.server.hdmi.HdmiControlService.SendMessageCallback: void onSendCompleted(int)>
<com.android.printspooler.ui.PrintActivity: void onUpdateCanceled()>
<com.android.systemui.recents.views.RecentsView: void onTaskStackFilterTriggered()>
<com.android.server.am.ActivityManagerService: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>
<com.android.systemui.statusbar.policy.KeyButtonView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.future.usb.UsbAccessory: int hashCode()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isSecure()>
<com.android.systemui.statusbar.phone.StatusBarIconController: android.util.ArraySet getIconBlacklist(java.lang.String)>
<com.android.location.provider.FusedLocationHardware: void injectDiagnosticData(java.lang.String)>
<com.android.printspooler.widget.PrintOptionsLayout: void onMeasure(int,int)>
<com.android.gallery3d.common.Utils: void swap(int[],int,int)>
<com.android.server.wm.WindowManagerService: android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>
<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderProperties getProperties()>
<com.android.uiautomator.core.Tracer: void setOutputMode(com.android.uiautomator.core.Tracer.Mode)>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.input.InputManagerService: void setWiredAccessoryCallbacks(com.android.server.input.InputManagerService.WiredAccessoryCallbacks)>
<com.android.systemui.statusbar.BaseStatusBar: void setAreThereNotifications()>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.ZenModeController getZenModeController()>
<com.android.server.wm.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
<com.android.systemui.qs.tiles.WifiTile: boolean supportsDualTargets()>
<com.android.layoutlib.bridge.bars.NavigationBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.resources.Density,int,boolean,boolean,int)>
<com.android.server.content.SyncManager: void scheduleLocalSync(android.accounts.Account,int,int,java.lang.String)>
<com.android.server.job.controllers.JobStatus: int getUid()>
<com.android.gallery3d.glrenderer.BasicTexture: void yieldAllTextures()>
<com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider findConditionProvider(android.content.ComponentName)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.content.res.BridgeResources.NinePatchInputStream: boolean markSupported()>
<android.graphics.Path_Delegate: void offset(float,float,android.graphics.Path_Delegate)>
<com.android.documentsui.CreateDirectoryFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void onUserSwitched(int)>
<com.android.settingslib.animation.AppearAnimationUtils.RowTranslationScaler: float getRowTranslationScale(int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDark(boolean,boolean,android.graphics.PointF)>
<com.android.systemui.statusbar.phone.DozeParameters.PulseSchedule: com.android.systemui.statusbar.phone.DozeParameters.PulseSchedule parse(java.lang.String)>
<com.android.wallpapercropper.CropView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.BatteryStatsService: void noteStopSensor(int,int)>
<com.android.systemui.statusbar.phone.PanelView: void resetViews()>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: float getYVelocity()>
<com.android.systemui.volume.SafetyWarningDialog: void onDismiss(android.content.DialogInterface)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: void getPageContent(com.android.printspooler.model.PageContentRepository.RenderSpec,com.android.printspooler.model.PageContentRepository.OnPageContentAvailableCallback)>
<com.android.server.Watchdog.HandlerChecker: java.lang.String describeBlockedStateLocked()>
<com.android.server.accessibility.ScreenMagnifier: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onFinishInflate()>
<com.android.server.job.controllers.AppIdleController: void dumpControllerState(java.io.PrintWriter)>
<com.android.server.media.MediaSessionService: void onSessionPlaybackTypeChanged(com.android.server.media.MediaSessionRecord)>
<com.android.server.wm.WindowManagerService: void updateAppOpsState()>
<com.android.systemui.statusbar.NotificationContentView: void onLayout(boolean,int,int,int,int)>
<com.android.uiautomator.core.UiScrollable: int getMaxSearchSwipes()>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void write(byte[],int,int)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<com.android.server.pm.SELinuxMMAC: boolean assignSeinfoValue(android.content.pm.PackageParser.Package)>
<com.android.systemui.statusbar.StackScrollerDecorView: boolean hasOverlappingRendering()>
<com.android.gallery3d.glrenderer.GLId: void glGenBuffers(int,int[],int)>
<com.android.commands.appops.AppOpsCommand: void main(java.lang.String[])>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getDeleteReturns()>
<com.android.systemui.FontSizeUtils: void updateFontSize(android.widget.TextView,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void appTransitionStarting(long,long)>
<com.android.systemui.statusbar.stack.StackScrollState: void apply()>
<com.android.fakeoemfeatures.FakeApp: void onCreate()>
<com.android.server.Watchdog: void init(android.content.Context,com.android.server.am.ActivityManagerService)>
<com.android.systemui.statusbar.phone.QSTileHost: void setCallback(com.android.systemui.qs.QSTile.Callback)>
<com.android.server.NetworkTimeUpdateService: void systemRunning()>
<com.android.server.NativeDaemonEvent: boolean isClassServerError()>
<com.android.server.am.ActivityManagerService: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<com.android.server.trust.TrustArchive: void dump(java.io.PrintWriter,int,int,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onFinishInflate()>
<com.android.server.InputMethodManagerService: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getBarState()>
<com.android.server.am.ActivityManagerService: boolean switchUser(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isTracking()>
<com.android.systemui.qs.QSDualTileLabel: void setTextSize(int,float)>
<com.android.tools.layoutlib.create.LogAbortException: void <init>(java.lang.String,java.lang.Object[])>
<com.android.server.pm.PackageManagerService: void setInstallerPackageName(java.lang.String,java.lang.String)>
<com.android.gallery3d.common.Utils: java.lang.Object checkNotNull(java.lang.Object)>
<com.android.systemui.recents.model.TaskStack: void setCallbacks(com.android.systemui.recents.model.TaskStack.TaskStackCallbacks)>
<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsMeasurementsProvider getGpsMeasurementsProvider()>
<com.android.systemui.statusbar.stack.AmbientState: void setStackTranslation(float)>
<com.android.printspooler.widget.PrintContentView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.wallpaper.WallpaperManagerService: boolean hasNamedWallpaper(java.lang.String)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setGlowAlpha(float)>
<com.android.systemui.qs.QSTile: void click()>
<com.android.server.am.BatteryStatsService: void noteAlarmFinish(java.lang.String,int)>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context)>
<com.android.server.audio.AudioService: void onMediaServerDied()>
<com.android.systemui.statusbar.NotificationBigPictureViewWrapper: boolean needsRoundRectClipping()>
<com.android.systemui.recents.misc.Console: void log(boolean,java.lang.String,java.lang.Object)>
<com.android.server.wm.WindowManagerService: void getStackBounds(int,android.graphics.Rect)>
<com.android.server.pm.PackageKeySetData: void addUpgradeKeySetById(long)>
<com.android.location.fused.FusionEngine: void onProviderDisabled(java.lang.String)>
<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothAdapter getBluetoothAdapter()>
<com.android.server.am.ActivityManagerService: void moveTaskToFront(int,int,android.os.Bundle)>
<android.view.IWindowManagerImpl: void setAppOrientation(android.view.IApplicationToken,int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean canSkipBouncer()>
<com.android.gallery3d.exif.ExifInterface: int[] getAllowedIfdsFromInfo(int)>
<com.example.android.networkusage.SettingsActivity: void onPause()>
<com.android.server.location.MockProvider: long getStatusUpdateTime()>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context)>
<com.android.tools.idea.editors.theme.widgets.PressedButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<com.android.server.policy.BarController: boolean checkHiddenLw()>
<com.android.systemui.volume.VolumeDialog.Callback: void onZenSettingsClicked()>
<com.android.systemui.statusbar.policy.CastController: void stopCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<javax.obex.SessionNotifier: javax.obex.ObexSession acceptAndOpen(javax.obex.ServerRequestHandler)>
<com.android.server.location.MockProvider: void clearLocation()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setListening(boolean)>
<com.android.server.NetworkManagementService: void removeVpnUidRanges(int,android.net.UidRange[])>
<com.android.server.policy.ImmersiveModeConfirmation: void immersiveModeChanged(java.lang.String,boolean,boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: android.os.IBinder asBinder()>
<com.android.documentsui.DocumentsToolBar: void collapseActionView()>
<com.android.systemui.qs.QSTile.Callback: void onStateChanged(com.android.systemui.qs.QSTile.State)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<com.android.layoutlib.bridge.Bridge: boolean init(java.util.Map,java.io.File,java.util.Map,com.android.ide.common.rendering.api.LayoutLog)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getIdAttribute()>
<com.android.server.content.SyncStorageEngine.AuthorityInfo: java.lang.String toString()>
<com.android.settingslib.bluetooth.BluetoothDeviceFilter.Filter: boolean matches(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onStartedGoingToSleep()>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.View getRightPreview()>
<com.android.systemui.recents.misc.SystemServicesProxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName)>
<com.android.statementservice.retriever.Relation: java.lang.String getKind()>
<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>
<com.android.systemui.qs.tiles.ColorInversionTile: int getMetricsCategory()>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardDrawnLw()>
<com.android.systemui.qs.tiles.HotspotTile: void handleDestroy()>
<com.android.keyguard.KeyguardDisplayManager: void updateDisplays(boolean)>
<javax.obex.ClientSession: javax.obex.HeaderSet delete(javax.obex.HeaderSet)>
<com.android.server.am.ActivityManagerService.Lifecycle: com.android.server.am.ActivityManagerService getService()>
<com.android.server.notification.ScheduleCalendar: boolean isInSchedule(long)>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.State newTileState()>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getHeadsUpHeight()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getManagedUserId(int)>
<com.android.commands.telecom.Telecom: void main(java.lang.String[])>
<com.android.gallery3d.glrenderer.RawTexture: int getTarget()>
<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>
<android.view.IWindowManagerImpl: void thawRotation()>
<com.android.gallery3d.common.Utils: void closeSilently(android.database.Cursor)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isWhitespace()>
<com.android.systemui.qs.tiles.UserDetailView: void createAndSetAdapter(com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onBootCompleted()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setNoSims(boolean)>
<com.android.systemui.statusbar.tv.TvStatusBar: void animateExpandNotificationsPanel()>
<com.android.systemui.tuner.QsTuner.DropListener: void onDrop(java.lang.String)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: java.lang.Object getItem(int)>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState.AppEntry getEntry(java.lang.String,int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void disable(int,int,boolean)>
<com.android.documentsui.model.DocumentInfo: void updateFromUri(android.content.ContentResolver,android.net.Uri)>
<com.android.commands.svc.Svc.Command: void <init>(java.lang.String)>
<com.android.server.usb.UsbPortManager: void disconnectSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getSharedAccountsAsUser(int)>
<javax.microedition.khronos.opengles.GL10: void glScalex(int,int,int)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getMaxTranslationDistance()>
<com.android.server.pm.IntentFilterVerificationState: int getState()>
<com.android.systemui.statusbar.CommandQueue: void <init>(com.android.systemui.statusbar.CommandQueue.Callbacks,com.android.internal.statusbar.StatusBarIconList)>
<javax.obex.ClientOperation: void ensureOpen()>
<com.android.tools.layoutlib.create.MethodListener: void onInvokeV(java.lang.String,boolean,java.lang.Object)>
<com.android.server.connectivity.Vpn: android.net.Network[] getUnderlyingNetworks()>
<com.android.server.notification.NotificationSignalExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.SessionParams)>
<com.android.documentsui.model.DurableUtils: java.lang.String readNullableString(java.io.DataInputStream)>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,java.nio.FloatBuffer)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag setTag(com.android.gallery3d.exif.ExifTag)>
<com.android.server.wm.DisplaySettings.Entry: void <init>(java.lang.String)>
<com.android.server.am.BatteryStatsService: void noteVibratorOff(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.server.pm.KeySetManagerService: android.util.ArraySet getPublicKeysFromKeySetLPr(long)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isExpandable()>
<com.android.uiautomator.core.ShellUiAutomatorBridge: int getRotation()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void updateResources()>
<com.android.systemui.statusbar.DismissViewButton: boolean hasOverlappingRendering()>
<com.android.systemui.tuner.TunerService: void clearAll()>
<com.android.server.audio.MediaFocusControl: void postReevaluateRemote()>
<android.content.res.BridgeResources: java.lang.String[] getStringArray(int)>
<com.android.systemui.statusbar.BaseStatusBar: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.voiceinteraction.SoundTriggerHelper: void onServiceStateChange(int)>
<com.android.systemui.volume.VolumeDialogComponent: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.printspooler.model.PrintSpoolerService: void updatePrintJobUserConfigurableOptionsNoPersistence(android.print.PrintJobInfo)>
<com.android.server.DeviceIdleController: boolean removePowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.systemui.statusbar.phone.ScrimController: void setDozing(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleFinishedGoingToSleep(int)>
<com.android.systemui.power.PowerNotificationWarnings: void updateLowBatteryWarning()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setClockVisibility(boolean)>
<com.android.server.am.ActivityManagerService: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>
<com.android.systemui.qs.QSPanel: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.gallery3d.exif.ExifTag: boolean hasValue()>
<com.android.server.AttributeCache: com.android.server.AttributeCache instance()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onIconClicked(boolean)>
<com.android.keyguard.KeyguardSimPukView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.SamplingProfilerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onUnlockMethodStateChanged()>
<com.android.systemui.statusbar.policy.WifiSignalController: com.android.systemui.statusbar.policy.WifiSignalController.WifiState cleanState()>
<com.android.server.midi.MidiService: void <init>(android.content.Context)>
<com.android.systemui.usb.UsbDebuggingActivity: void onCreate(android.os.Bundle)>
<com.android.uiautomator.core.UiDevice: void freezeRotation()>
<com.android.gallery3d.glrenderer.GLCanvas: void endRenderTarget()>
<com.android.server.ConnectivityService: int checkMobileProvisioning(int)>
<com.android.settingslib.bluetooth.MapProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.volume.SpTexts: int add(android.widget.TextView)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void prepareExpansionChanged(com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getDelegateMethods()>
<com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.BatteryStatsService: void noteStartVideo(int)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setDiscoverableTimeout(int)>
<com.android.location.provider.ActivityRecognitionProvider: void unregisterSink(com.android.location.provider.ActivityRecognitionProvider.Sink)>
<com.android.server.notification.RankingReconsideration: boolean cancel(boolean)>
<com.android.systemui.qs.tiles.FlashlightTile: void handleDestroy()>
<com.android.server.connectivity.Tethering: void interfaceAdded(java.lang.String)>
<com.android.server.accounts.AccountManagerService: java.lang.String getPreviousName(android.accounts.Account)>
<com.android.systemui.statusbar.policy.UserSwitcherController: java.lang.String getCurrentUserName(android.content.Context)>
<com.android.server.am.ProcessStatsService: int getCurrentMemoryState()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void notifyUserAction(int)>
<com.android.systemui.statusbar.BaseStatusBar: void showRecentsPreviousAffiliatedTask()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void animateCloseQs()>
<com.android.server.usb.UsbDebuggingManager: void allowUsbDebugging(boolean,java.lang.String)>
<com.android.printspooler.ui.PrintActivity: void onActionPerformed()>
<com.android.server.pm.PackageManagerService: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void prepareExpansionChanged(com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.server.accounts.AccountManagerService: boolean renameSharedAccountAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.pacprocessor.PacNative: boolean startPacSupport()>
<com.android.printspooler.ui.PrintActivity: void onUpdateCompleted(com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onActivityDrawn()>
<com.android.server.policy.PhoneWindowManager: void setInitialDisplaySize(android.view.Display,int,int,int)>
<com.google.android.maps.MapView: void setTraffic(boolean)>
<com.android.server.pm.PackageManagerService: void removePermission(java.lang.String)>
<com.android.server.notification.RankingHelper: int getPackagePriority(java.lang.String,int)>
<com.android.server.connectivity.NetworkMonitor: int isCaptivePortal()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void startAnimationToState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackStateAnimator,boolean,long,long)>
<com.android.server.connectivity.KeepaliveTracker: void handleCheckKeepalivesStillValid(com.android.server.connectivity.NetworkAgentInfo)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothEnabled()>
<com.android.systemui.recents.model.TaskFilter: boolean acceptTask(com.android.systemui.recents.model.Task,int)>
<com.android.systemui.qs.tiles.UserDetailItemView: com.android.systemui.qs.tiles.UserDetailItemView convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.server.NetworkManagementService: void tetherInterface(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setProperty(java.lang.String,java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glStencilMask(int)>
<com.android.systemui.qs.QSFooter: void onConfigurationChanged()>
<com.android.keyguard.KeyguardUpdateMonitor: void reportSuccessfulStrongAuthUnlockAttempt()>
<com.android.server.policy.PhoneWindowManager: void enableScreenAfterBoot()>
<com.android.server.pm.PermissionsState: void reset()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isTopLevelChild(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.server.accessibility.AccessibilityManagerService: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isShowing()>
<com.android.server.content.SyncOperation: void <init>(android.accounts.Account,int,int,int,java.lang.String,android.os.Bundle,long,long,long,long,boolean)>
<com.android.systemui.qs.tiles.FlashlightTile: int getMetricsCategory()>
<com.android.layoutlib.bridge.android.BridgeContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<com.android.systemui.keyguard.KeyguardViewMediator: void userActivity()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setForceDozeBrightness(boolean)>
<com.android.systemui.statusbar.policy.NetworkController.IconState: void <init>(boolean,int,int,android.content.Context)>
<com.android.server.wallpaper.WallpaperManagerService: void finalize()>
<com.android.systemui.qs.QSFooter: void refreshState()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageScale(float,boolean,long,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isDeviceProvisioned()>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void onChanged()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothConnected()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void grantRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>
<com.android.server.content.ContentService: void cancelSync(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isTrustManaged()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isBatteryLow()>
<com.android.systemui.statusbar.phone.TrustDrawable: void stop()>
<com.android.systemui.qs.QSDetailItems.Callback: void onDetailItemClick(com.android.systemui.qs.QSDetailItems.Item)>
<com.android.systemui.doze.DozeLog: void traceProximityResult(android.content.Context,boolean,long,int)>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot restore()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecurityMode()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isAutoConnectable()>
<com.android.server.wm.WindowManagerService: void performBootTimeout()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setPanelScrimMinFraction(float)>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryRecentDocuments(java.lang.String,java.lang.String[])>
<com.android.gallery3d.glrenderer.BasicTexture: int getTextureHeight()>
<android.view.IWindowManagerImpl: void addWindowToken(android.os.IBinder,int)>
<com.android.uiautomator.core.UiObject: boolean isFocused()>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: float getYVelocity()>
<com.android.keyguard.KeyguardSimPukView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setDisabledFlags(int)>
<com.android.systemui.SystemUIApplication: void onCreate()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void clearProfileConnectionState()>
<com.android.server.LockSettingsService.CredentialUtil: java.lang.String adjustForKeystore(java.lang.String)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setTintColor(int)>
<com.android.systemui.Prefs: java.util.Map getAll(android.content.Context)>
<com.android.server.audio.AudioService: int getUiSoundsStreamType()>
<com.android.settingslib.bluetooth.PbapServerProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.statusbar.phone.StatusBarWindowView.LayoutParams: void <init>(int,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean needsInput()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setShadeExpanded(boolean)>
<com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback: void onPowerSaveChanged()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: java.lang.String getName(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.server.policy.PhoneWindowManager: void adjustWindowParamsLw(android.view.WindowManager.LayoutParams)>
<com.android.systemui.egg.MLand: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.util.BridgeXmlPullAttributes: float getAttributeFloatValue(int,float)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void addSwipedOutNotification(java.lang.String)>
<com.android.server.wm.WindowManagerService: void setFocusedApp(android.os.IBinder,boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void rebindToTask(com.android.systemui.recents.model.Task)>
<com.android.systemui.recents.views.TaskViewThumbnail: void onFinishInflate()>
<android.content.res.BridgeResources: int getDimensionPixelSize(int)>
<com.android.systemui.recents.model.TaskGrouping: boolean isTaskAboveTask(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task)>
<com.android.server.wm.DisplaySettings: void readSettingsLocked()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleStartedGoingToSleep(int)>
<com.android.server.media.MediaSessionRecord: void sendMediaButton(android.view.KeyEvent,int,android.os.ResultReceiver)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onStart()>
<com.android.server.wm.WindowManagerService: float[] getAnimationScales()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: boolean hasNativeMethods()>
<com.android.server.policy.RecentApplicationsBackground: void draw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.PanelView: int getMaxPanelHeight()>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4f(int,float,float,float,float)>
<com.android.server.accounts.AccountManagerService: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasMobileDataFeature()>
<com.android.systemui.statusbar.policy.LocationController: boolean setLocationEnabled(boolean)>
<com.android.keyguard.KeyguardAbsKeyInputView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.RemoteInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printspooler.widget.PrintContentView: void focusableViewAvailable(android.view.View)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setUserLocked(boolean)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionCancelled()>
<com.android.server.statusbar.StatusBarManagerService: void preloadRecentApps()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getChildId(int,int)>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onRunningStateChanged(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isDeviceProvisioned()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadiusWithoutAnimation(float)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeNameResource(int)>
<com.android.server.wm.WindowManagerService: void setEventDispatching(boolean)>
<android.view.IWindowManagerImpl: boolean isKeyguardSecure()>
<com.android.systemui.statusbar.phone.ScrimController: void onTrackingStarted()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: boolean isRotationLockAffordanceVisible()>
<com.android.systemui.net.NetworkOverLimitActivity: void onCreate(android.os.Bundle)>
<com.android.commands.content.Content: void main(java.lang.String[])>
<com.android.smspush.WapPushManager: com.android.smspush.WapPushManager.WapPushManDBHelper getDatabase(android.content.Context)>
<com.android.systemui.statusbar.NotificationGuts: void setActualHeight(int)>
<com.android.server.ConnectivityService: android.net.Network getActiveNetwork()>
<com.android.server.pm.PackageManagerService: int[] getPackageGidsEtc(java.lang.String,int,int)>
<com.android.statementservice.retriever.Relation: com.android.statementservice.retriever.Relation create(java.lang.String,java.lang.String)>
<com.android.server.usb.UsbDeviceManager: void allowUsbDebugging(boolean,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void dismissViewAnimated(android.view.View,java.lang.Runnable,int,long)>
<com.android.printspooler.model.PageContentRepository: void close(java.lang.Runnable)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSecurityString(boolean)>
<com.android.documentsui.DocumentsActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.server.audio.AudioService.VolumeStreamState: boolean setIndex(int,int,java.lang.String)>
<android.view.LayoutInflater_Delegate: void parseInclude(android.view.LayoutInflater,org.xmlpull.v1.XmlPullParser,android.content.Context,android.view.View,android.util.AttributeSet)>
<com.android.systemui.volume.SegmentedButtons: void addButton(int,int,java.lang.Object)>
<com.android.server.pm.UserManagerService: void removeRestrictions()>
<android.graphics.DrawFilter_Delegate: android.graphics.DrawFilter_Delegate getDelegate(long)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGroupCreatedFromChildren(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void <init>(int)>
<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfoPrivileged()>
<com.android.systemui.statusbar.SignalClusterView: void setNoSims(boolean)>
<android.os.Handler_Delegate.IHandlerCallback: void sendMessageAtTime(android.os.Handler,android.os.Message,long)>
<com.android.defcontainer.DefaultContainerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.documentsui.UriDerivativeLoader: java.lang.Object loadInBackground(java.lang.Object,android.os.CancellationSignal)>
<com.android.systemui.statusbar.NotificationData: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustChanged(int)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setHomeAsUp(boolean)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onWifiStateChanged(int)>
<com.android.server.connectivity.Tethering: boolean isWifi(java.lang.String)>
<android.net.util.IpUtils: short ipChecksum(java.nio.ByteBuffer,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<com.android.server.notification.ZenModeHelper: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.settingslib.bluetooth.PanProfile: java.lang.String toString()>
<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>
<com.android.server.GestureLauncherService: boolean isGestureLauncherEnabled(android.content.res.Resources)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>
<com.android.systemui.qs.SignalTileView: android.view.View createIcon()>
<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,java.lang.String,int)>
<com.android.server.LocationManagerService: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.recents.Recents: void showRecents(boolean,android.view.View)>
<com.android.systemui.statusbar.SpeedBumpView: void performVisibilityAnimation(boolean,long)>
<com.android.keyguard.KeyguardHostView: void dispatchSystemUiVisibilityChanged(int)>
<com.android.server.fingerprint.FingerprintService: java.util.List getEnrolledFingerprints(int)>
<com.android.systemui.power.PowerNotificationWarnings: void userSwitched()>
<com.android.systemui.statusbar.SpeedBumpView: void setInvisible()>
<android.graphics.ColorFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyListenerHintsChangedLocked(int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollForward(int)>
<com.android.server.content.SyncQueue: void dump(java.lang.StringBuilder)>
<javax.obex.ServerRequestHandler: void setConnectionId(long)>
<com.android.server.GestureLauncherService: boolean isCameraLaunchSettingEnabled(android.content.Context,int)>
<com.android.location.provider.GmsFusedBatchOptions: void setSourceToUse(int)>
<com.android.systemui.Prefs: void putString(android.content.Context,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isProfileReady()>
<com.android.nfc_extras.NfcExecutionEnvironment: byte[] transceive(byte[])>
<com.android.server.notification.NotificationRecord: boolean isSeen()>
<com.android.systemui.recents.views.TaskStackView: void computeScroll()>
<com.android.commands.uiautomator.DumpCommand: void run(java.lang.String[])>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showAssistDisclosure()>
<com.android.server.accessibility.ScreenMagnifier: void onUserContextChanged()>
<com.android.location.fused.FusionEngine: void disable()>
<android.content.res.BridgeResources.NinePatchInputStream: void disableFakeMarkSupport()>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>
<com.android.uiautomator.core.UiObject: boolean isChecked()>
<android.net.util.IpUtils: java.lang.String addressAndPortToString(java.net.InetAddress,int)>
<com.android.systemui.statusbar.ExpandableOutlineView: void setOutlineRect(float,float,float,float)>
<com.android.server.statusbar.StatusBarManagerService: void setCurrentUser(int)>
<com.android.server.wm.WindowManagerService: void setAnimationScales(float[])>
<com.android.systemui.statusbar.phone.ScrimController: void onExpandingFinished()>
<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>
<com.android.server.media.projection.MediaProjectionManagerService: void <init>(android.content.Context)>
<com.android.server.notification.ManagedServices: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.tools.layoutlib.create.AsmGenerator: void setKeep(java.util.Map)>
<com.android.systemui.recents.model.FilteredTaskList: void removeFilter()>
<com.android.server.NetworkManagementService: java.lang.String[] listInterfaces()>
<com.android.location.provider.ActivityRecognitionProvider: boolean flush()>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowVibrateHint()>
<com.android.systemui.statusbar.BaseStatusBar: void applyColorsAndBackgrounds(android.service.notification.StatusBarNotification,com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.documentsui.DocumentsActivity: void onDocumentPicked(com.android.documentsui.model.DocumentInfo)>
<com.android.documentsui.CopyService: int onStartCommand(android.content.Intent,int,int)>
<com.android.systemui.statusbar.DismissView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setWindowState(int,int)>
<com.android.documentsui.CopyService: void onHandleIntent(android.content.Intent)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager)>
<com.android.settingslib.bluetooth.HidProfile: boolean isAutoConnectable()>
<com.android.server.notification.ConditionProviders: void onBootPhaseAppsCanStart()>
<com.android.server.clipboard.ClipboardService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.systemui.volume.VolumeDialogController: void dismiss()>
<com.android.server.hdmi.HdmiControlService.DevicePollingCallback: void onPollingFinished(java.util.List)>
<com.android.systemui.usb.UsbPermissionActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.tuner.QsTuner: void onCreate(android.os.Bundle)>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByInstance(com.android.uiautomator.core.UiSelector,int)>
<com.android.documentsui.RootsFragment.RootComparator: int compare(com.android.documentsui.model.RootInfo,com.android.documentsui.model.RootInfo)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getIntrinsicPadding()>
<android.util.BridgeXmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<com.android.keyguard.KeyguardAbsKeyInputView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getOpPackageName()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>
<com.android.server.am.ActivityStackSupervisor: void onDisplayRemoved(int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskView createView(android.content.Context)>
<com.android.systemui.assist.AssistOrbContainer: void show(boolean,boolean)>
<com.android.systemui.statusbar.stack.AmbientState: float getOverScrollAmount(boolean)>
<com.android.server.pm.UserManagerService: int getUserHandle(int)>
<com.android.server.search.SearchManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getEmptyBottomMargin()>
<com.android.server.notification.RankingHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean)>
<com.android.printspooler.model.PageContentRepository: void releasePageContentProvider(com.android.printspooler.model.PageContentRepository.PageContentProvider)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToString(int)>
<com.android.server.audio.MediaFocusControl: void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>
<com.android.future.usb.UsbAccessory: java.lang.String getUri()>
<com.android.documentsui.SectionedListAdapter: boolean areAllItemsEnabled()>
<com.android.settingslib.deviceinfo.StorageMeasurement: void onDestroy()>
<com.android.server.content.SyncStorageEngine.PendingOperation: java.lang.String toString()>
<com.android.gallery3d.common.Utils: void assertTrue(boolean)>
<com.android.server.notification.ConditionProviders: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.systemui.SystemUIService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks: void onScreenPinningRequest()>
<com.android.location.provider.LocationProviderBase: void <init>(java.lang.String,com.android.location.provider.ProviderPropertiesUnbundled)>
<com.android.systemui.qs.QSPanel: void setCallback(com.android.systemui.qs.QSPanel.Callback)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: void prepareViewToLeavePool(java.lang.Object,java.lang.Object,boolean)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.io.InputStream,boolean,com.android.resources.Density)>
<com.android.vpndialogs.ConfirmDialog: void onClick(android.content.DialogInterface,int)>
<com.android.server.SamplingProfilerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.StackScrollerDecorView: android.view.View findContentView()>
<com.android.server.am.ActivityManagerService: android.content.pm.UserInfo getCurrentUser()>
<com.android.systemui.statusbar.policy.SignalCallbackAdapter: void setNoSims(boolean)>
<com.android.systemui.volume.VolumeDialogController: void register()>
<com.android.systemui.statusbar.stack.AmbientState: boolean isDismissAllInProgress()>
<com.android.systemui.recents.views.TaskStackView: void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task)>
<com.android.gallery3d.glrenderer.GLCanvas: void setSize(int,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionMatches(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: void clearFingerprintRecognized()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean onBackPressed()>
<com.android.server.notification.ZenModeHelper: void addCallback(com.android.server.notification.ZenModeHelper.Callback)>
<com.android.server.location.ComprehensiveCountryDetector: java.lang.String toString()>
<com.android.gallery3d.exif.ExifInterface: void readExif(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setName(java.lang.String)>
<com.android.photos.views.TiledImageRenderer: boolean draw(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getActivityLabel(android.content.pm.ActivityInfo)>
<com.android.uiautomator.core.UiDevice: boolean pressDelete()>
<com.android.server.am.BatteryStatsService: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable applyTintColor(android.content.Context,int,int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getGroupType(int)>
<com.android.systemui.statusbar.policy.HotspotController: void removeCallback(com.android.systemui.statusbar.policy.HotspotController.Callback)>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<com.android.commands.appops.AppOpsCommand: void onRun()>
<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPort[] getPorts()>
<com.android.keyguard.KeyguardPatternView: void showUsabilityHint()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: int getRotationLockOrientation()>
<com.android.systemui.GuestResumeSessionReceiver: void register(android.content.Context)>
<com.android.server.location.LocationBlacklist: void dump(java.io.PrintWriter)>
<com.android.systemui.tuner.DemoModeFragment: void onCreate(android.os.Bundle)>
<com.android.server.media.MediaSessionRecord: boolean isPlaybackActive(boolean)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result getResult()>
<com.android.externalstorage.ExternalStorageProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<com.android.systemui.recents.model.RecentsTaskLoader: void loadTasks(android.content.Context,com.android.systemui.recents.model.RecentsTaskLoadPlan,com.android.systemui.recents.model.RecentsTaskLoadPlan.Options)>
<com.android.systemui.statusbar.policy.KeyButtonView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecord getDefaultMediaButtonSession(int,boolean)>
<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: int compareTo(com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry)>
<javax.obex.ServerOperation: java.io.OutputStream openOutputStream()>
<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getKeySetByAliasAndPackageNameLPr(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.NotificationData: com.android.systemui.statusbar.NotificationData.Entry remove(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setIcon(java.lang.String)>
<com.android.server.wm.DisplaySettings: void setOverscanLocked(java.lang.String,int,int,int,int)>
<com.android.server.pm.PermissionsState: int[] computeGids(int)>
<com.android.keyguard.SecurityMessageDisplay: void setNextMessageColor(int)>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: void computeCurrentVelocity(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setPinned(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: void reportEmergencyCallAction(boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>
<javax.obex.PrivateInputStream: int read(byte[])>
<com.android.systemui.qs.QSTile: void secondaryClick()>
<com.android.systemui.RecentsComponent: void showRecents(boolean,android.view.View)>
<com.android.server.connectivity.Vpn: void startLegacyVpnPrivileged(com.android.internal.net.VpnProfile,android.security.KeyStore,android.net.LinkProperties)>
<com.android.server.notification.RankingReconsideration: void work()>
<com.android.systemui.recents.model.FilteredTaskList: void reset()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)>
<com.android.server.ConnectivityService: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)>
<com.android.settingslib.bluetooth.PanProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.opengles.GL10: void glLoadIdentity()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.model.DocumentInfo: void reset()>
<com.android.server.audio.AudioService.VolumeStreamState: void mute(boolean)>
<com.android.server.am.ActivityManagerService: void startObservingNativeCrashes()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setStatusBarState(int)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onDismissRequested(int)>
<com.android.systemui.qs.QSTileView: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.PanelView: void onFinishInflate()>
<android.graphics.Gradient_Delegate: void <init>(int[],float[])>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,float[],int,int,int,int)>
<com.android.server.wm.WindowManagerService: void monitor()>
<com.android.server.accessibility.AccessibilityManagerService: android.os.IBinder getWindowToken(int)>
<com.android.server.am.UidRecord: void reset()>
<android.net.util.IpUtils: boolean isValidUdpOrTcpPort(int)>
<com.android.gallery3d.util.IntArray: void add(int)>
<com.android.server.audio.AudioService: int getRingerModeExternal()>
<com.android.server.InputMethodManagerService: int getInputMethodWindowVisibleHeight()>
<com.android.systemui.qs.tiles.DndTile: int getMetricsCategory()>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean setLocationEnabled(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<com.android.server.NetworkManagementService: void removeNetwork(int)>
<com.android.server.trust.TrustManagerService: void onStart()>
<com.android.server.connectivity.KeepaliveTracker: void <init>(android.os.Handler)>
<com.android.settingslib.bluetooth.PanProfile: boolean isAutoConnectable()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onPhoneHintStarted()>
<com.android.systemui.settings.ToggleSlider.Listener: void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean)>
<com.android.systemui.usb.UsbAccessoryUriActivity: void onCreate(android.os.Bundle)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: void removeServiceListener(com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<com.android.systemui.recents.views.TaskStackView: void setStackInsetRect(android.graphics.Rect)>
<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)>
<com.android.tools.layoutlib.java.Charsets: byte[] toAsciiBytes(char[],int,int)>
<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()>
<com.android.location.provider.GmsFusedBatchOptions: void setSmallestDisplacementMeters(float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.gallery3d.glrenderer.GLCanvas: void initializeTextureSize(com.android.gallery3d.glrenderer.BasicTexture,int,int)>
<com.android.server.notification.ConditionProviders: void <init>(android.content.Context,android.os.Handler,com.android.server.notification.ManagedServices.UserProfiles)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void setUp()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result init(long)>
<com.android.server.media.MediaSessionRecord: boolean isSystemPriority()>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getOverriddenMethods()>
<com.android.server.am.ActivityManagerService: int getTaskForActivity(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.GestureRecorder: void add(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarView)>
<com.android.server.Watchdog: void setAllowRestart(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void applyExpansionToLayout()>
<com.android.systemui.statusbar.phone.ScrimController: void <init>(com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.ScrimView,android.view.View,boolean)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isVolumeRestricted()>
<javax.obex.Operation: int getResponseCode()>
<com.android.providers.settings.SettingsHelper: void <init>(android.content.Context)>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.Task findTaskWithId(int)>
<com.android.server.am.ActivityManagerService: int getActivityDisplayId(android.os.IBinder)>
<com.android.settingslib.bluetooth.PanProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.pacprocessor.PacService: android.os.IBinder onBind(android.content.Intent)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onScanningStateChanged(boolean)>
<com.android.printspooler.widget.PreviewPageFrame: java.lang.CharSequence getAccessibilityClassName()>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String renameDocument(java.lang.String,java.lang.String)>
<com.android.server.wm.WindowManagerService: void removeWindowToken(android.os.IBinder)>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onContextItemSelected(android.view.MenuItem)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitTypeInsn(int,java.lang.String)>
<com.android.settingslib.bluetooth.MapProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferTexture2DOES(int,int,int,int,int)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<com.android.systemui.assist.AssistManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean onLongClick(android.view.View)>
<com.android.server.policy.PhoneWindowManager: int getMaxWallpaperLayer()>
<com.android.server.am.ActivityManagerService: void releasePersistableUriPermission(android.net.Uri,int,int)>
<com.android.systemui.recents.views.TaskView: void onClick(android.view.View)>
<com.android.keyguard.KeyguardPinBasedInputView: java.lang.String getPasswordText()>
<com.android.server.policy.PhoneWindowManager: void getContentRectLw(android.graphics.Rect)>
<com.android.layoutlib.bridge.android.BridgeContext: void disposeResources()>
<com.android.server.policy.BarController: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.NetworkManagementService: void flushNetworkDnsCache(int)>
<com.android.server.policy.RecentApplicationsBackground: void jumpDrawablesToCurrentState()>
<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistExceptIdleInternal()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void setIsExpanded(boolean)>
<javax.microedition.khronos.opengles.GL10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.server.ConnectivityService: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<com.android.server.notification.CalendarTracker: void setCallback(com.android.server.notification.CalendarTracker.Callback)>
<com.android.server.notification.NotificationRecord: void setAuthoritativeRank(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onCameraHintStarted()>
<com.android.keyguard.KeyguardSecurityView: void showMessage(java.lang.String,int)>
<com.android.server.audio.AudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>
<com.android.keyguard.PasswordTextView: void setUserActivityListener(com.android.keyguard.PasswordTextView.UserActivityListener)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: void binderDied()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionCancelled()>
<android.graphics.Paint_Delegate: boolean isAntiAliased()>
<com.android.systemui.egg.MLandActivity: void playerPlus(android.view.View)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void show(boolean)>
<com.android.systemui.qs.tiles.UserDetailView: void refreshAdapter()>
<com.android.settingslib.applications.ApplicationsState.AppFilter: void init()>
<com.android.systemui.recents.views.TaskStackView: void onPackagesChanged(com.android.systemui.recents.model.RecentsPackageMonitor,java.lang.String,int)>
<com.android.commands.svc.Svc.Command: void run(java.lang.String[])>
<com.android.server.wm.WindowManagerService: boolean isSafeModeEnabled()>
<com.android.settingslib.wifi.AccessPoint: android.net.wifi.WifiConfiguration getConfig()>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: android.view.View getOwner()>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String toString()>
<android.view.Display.ColorTransform: int describeContents()>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)>
<com.android.keyguard.KeyguardSecurityView: void showUsabilityHint()>
<com.android.server.location.GpsLocationProvider: void <init>(android.content.Context,android.location.ILocationManager,android.os.Looper)>
<com.android.server.pm.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean hasActiveNotifications()>
<com.android.uiautomator.core.UiObject: boolean longClick()>
<com.android.uiautomator.core.UiSelector: java.lang.String toString()>
<android.view.IWindowManagerImpl: int watchRotation(android.view.IRotationWatcher)>
<com.android.server.am.ActivityManagerService: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.android.photos.views.BlockingGLTextureView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>
<com.android.systemui.statusbar.policy.NetworkController: boolean hasMobileDataFeature()>
<com.android.systemui.volume.VolumeDialogController: void destroy()>
<com.android.systemui.statusbar.CommandQueue: void toggleRecentApps()>
<com.android.systemui.statusbar.SignalClusterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewDismissed(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.android.documentsui.SortingCursorWrapper: long getLong(int)>
<android.content.res.BridgeTypedArray: java.lang.CharSequence getText(int)>
<com.android.server.connectivity.NetworkDiagnostics: void <init>(android.net.Network,android.net.LinkProperties,long)>
<com.android.server.media.MediaRouterService: void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean)>
<com.android.server.connectivity.Nat464Xlat: void interfaceRemoved(java.lang.String)>
<com.android.server.notification.RankingHelper: void setPackagePriority(java.lang.String,int,int)>
<com.android.systemui.qs.QSDetailItems: void setCallback(com.android.systemui.qs.QSDetailItems.Callback)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void expansionStateChanged(boolean)>
<com.android.server.am.BatteryStatsService: void noteResetAudio()>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.Statement create(com.android.statementservice.retriever.AbstractAsset,com.android.statementservice.retriever.AbstractAsset,com.android.statementservice.retriever.Relation)>
<com.android.server.content.SyncQueue: void onDelayUntilTimeChanged(com.android.server.content.SyncStorageEngine.EndPoint,long)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.keyguard.KeyguardUpdateMonitor: void removeCallback(com.android.keyguard.KeyguardUpdateMonitorCallback)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.view.View getDecorContent()>
<com.android.systemui.settings.CurrentUserTracker: void onReceive(android.content.Context,android.content.Intent)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,java.lang.String,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleDestroy()>
<com.android.documentsui.UriDerivativeLoader: java.lang.Object loadInBackground()>
<com.android.server.policy.PhoneWindowManager: boolean canMagnifyWindow(int)>
<com.android.systemui.recents.model.FilteredTaskList: boolean remove(com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.stack.AmbientState: float getMaxHeadsUpTranslation()>
<com.android.server.notification.ZenModeHelper: boolean shouldIntercept(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateNotifications()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getChildType(int,int)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void setOccluded(boolean)>
<com.android.server.Watchdog.HandlerChecker: java.lang.Thread getThread()>
<com.android.systemui.egg.MLand: int getNumPlayers()>
<javax.obex.ServerOperation: void ensureOpen()>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onFling(int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>
<com.android.layoutlib.bridge.impl.ParserFactory: void setParserFactory(com.android.ide.common.rendering.api.ParserFactory)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setWaitForSelectorTimeout(long)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.awt.image.BufferedImage,boolean,com.android.resources.Density)>
<com.android.server.telecom.TelecomLoaderService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void getChildrenStates(com.android.systemui.statusbar.stack.StackScrollState)>
<android.view.IWindowManagerImpl: void lockNow(android.os.Bundle)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector description(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getAttributeName(int)>
<android.graphics.PathEffect_Delegate: boolean isSupported()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void startScanning(boolean)>
<com.android.systemui.volume.SafetyWarningDialog: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.notification.ConditionProviders: void requestConditions(android.service.notification.IConditionListener,int)>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context)>
<com.android.server.NetworkManagementService: void stopClatd(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.View getHostView()>
<android.view.IWindowManagerImpl: void disableKeyguard(android.os.IBinder,java.lang.String)>
<com.android.server.location.LocationFudger: android.location.Location getOrCreate(android.location.Location)>
<com.android.gallery3d.exif.ExifInterface: void readExif(java.io.InputStream)>
<com.android.server.am.BroadcastQueue: boolean replaceOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>
<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>
<com.android.server.policy.PhoneWindowManager: void showGlobalActions()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void reset()>
<com.android.server.pm.InstructionSets: java.lang.String getDexCodeInstructionSet(java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setOccluded(boolean)>
<com.android.server.CountryDetectorService: void notifyReceivers(android.location.Country)>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.animation.Animator,float,float,float)>
<android.graphics.SumPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.systemui.Prefs: void putInt(android.content.Context,java.lang.String,int)>
<com.android.server.am.ActivityManagerService: void cancelIntentSender(android.content.IIntentSender)>
<com.android.printspooler.ui.SelectPrinterActivity: void updateEmptyView(com.android.printspooler.ui.SelectPrinterActivity.DestinationAdapter)>
<android.graphics.Matrix_Delegate: android.graphics.Matrix_Delegate make(java.awt.geom.AffineTransform)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isGoingToSleep()>
<com.android.layoutlib.bridge.android.AndroidLocale: java.lang.String getScript(java.util.Locale)>
<com.android.systemui.statusbar.BaseStatusBar: void showRecentsNextAffiliatedTask()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean shouldShowRequestPermissionRationale(java.lang.String)>
<com.android.server.am.ActivityStackSupervisor: void onDisplayChanged(int)>
<com.android.server.notification.EventConditionProvider: void onBootComplete()>
<com.android.server.NetworkManagementService: java.lang.String getFirewallChainName(int)>
<com.android.server.wm.BlackFrame: void hide()>
<com.google.android.maps.MapView: boolean isSatellite()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focusable(boolean)>
<com.android.keyguard.KeyguardPasswordView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.settingslib.bluetooth.MapProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.printspooler.model.OpenDocumentCallback: void onSuccess()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onAllPanelsCollapsed()>
<com.android.server.location.GpsMeasurementsProvider: void onGpsEnabledChanged()>
<com.android.server.location.LocationProviderProxy: void enable()>
<com.android.systemui.tuner.TunerService: void start()>
<com.android.systemui.BatteryMeterView: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissInvalidChargerWarning()>
<com.android.printspooler.ui.PrintActivity: void onMalformedPdfFile()>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void reset()>
<javax.microedition.khronos.opengles.GL10: void glDepthRangef(float,float)>
<com.android.server.fingerprint.FingerprintUtils: void removeFingerprintIdForUser(android.content.Context,int,int)>
<com.android.systemui.statusbar.SignalClusterView: void setSecurityController(com.android.systemui.statusbar.policy.SecurityController)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.View getStatusBarView()>
<com.android.keyguard.KeyguardPasswordView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.util.BridgeXmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<com.android.systemui.statusbar.policy.LocationController: void removeSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<com.android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void dispatchSetPressed(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getMaxKeyguardNotifications()>
<com.android.server.policy.RecentApplicationsBackground: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.bars.Config: java.lang.String getWifiIconType(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordExpirationTimeout(android.content.ComponentName,long)>
<com.android.server.policy.PhoneWindowManager: boolean isDefaultOrientationForced()>
<android.content.res.BridgeTypedArray: int getType(int)>
<com.android.systemui.qs.tiles.BluetoothTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.audio.MediaFocusControl: void unregisterMediaButtonIntent(android.app.PendingIntent)>
<com.android.server.notification.NotificationDelegate: void onClearAll(int,int,int)>
<com.android.server.am.ActivityManagerService: void killApplicationProcess(java.lang.String,int)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: com.android.systemui.statusbar.ExpandableNotificationRow getGroupSummary(android.service.notification.StatusBarNotification)>
<javax.microedition.khronos.opengles.GL10: void glSampleCoveragex(int,boolean)>
<com.android.systemui.statusbar.policy.FlashlightController: boolean isAvailable()>
<com.android.statementservice.retriever.JsonParser: org.json.JSONObject parse(android.util.JsonReader)>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void onSend(byte[],int,int,long)>
<com.android.gallery3d.common.Utils: float interpolateAngle(float,float,float)>
<com.android.location.fused.FusionEngine: void enable()>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName,int)>
<com.android.layoutlib.bridge.util.ReflectionUtils: java.lang.Throwable getCause(java.lang.Throwable)>
<com.android.server.usb.UsbService: void setUsbDataUnlocked(boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void showScreenPinningRequest()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>
<com.android.server.AppOpsService: void resetAllModes(int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.ICancellationSignal createCancellationSignal()>
<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void dumpWindowToFile(android.view.accessibility.AccessibilityNodeInfo,java.io.File,int,int,int)>
<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor getStatsOverTime(long)>
<com.android.systemui.statusbar.ExpandableView: void setBelowSpeedBump(boolean)>
<com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks: void onTaskResize(com.android.systemui.recents.model.Task)>
<com.android.server.wm.WindowManagerService: int getPreferredOptionsPanelGravity()>
<com.android.systemui.statusbar.phone.PanelBar: float getBarHeight()>
<com.android.systemui.statusbar.ExpandableView: void resetActualHeight()>
<com.android.server.wm.WindowManagerService: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>
<com.android.server.power.PowerManagerService: void lowLevelShutdown()>
<com.android.systemui.qs.QSTile: void handleRefreshState(java.lang.Object)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getPrimaryVpnName()>
<com.android.systemui.doze.DozeHost: boolean isNotificationLightOn()>
<com.android.server.hdmi.HdmiCecMessage: java.lang.String toString()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void draw(android.graphics.Canvas)>
<com.android.future.usb.UsbAccessory: java.lang.String toString()>
<com.android.externalstorage.TestDocumentsProvider: boolean onCreate()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void setDimmed(boolean)>
<com.android.server.clipboard.ClipboardService: void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void onNextAlarmChanged(android.app.AlarmManager.AlarmClockInfo)>
<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor getInputMonitor()>
<com.android.layoutlib.bridge.android.BridgeContext: android.os.Looper getMainLooper()>
<com.android.server.connectivity.KeepaliveTracker: void handleEventPacketKeepalive(com.android.server.connectivity.NetworkAgentInfo,android.os.Message)>
<com.android.server.input.InputManagerService: void cancelVibrate(int,android.os.IBinder)>
<com.android.systemui.statusbar.ActivatableNotificationView: void cancelAppearDrawing()>
<com.android.keyguard.KeyguardSimPinView: void onAttachedToWindow()>
<com.android.server.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<com.android.captiveportallogin.CaptivePortalLoginActivity: void onDestroy()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.NavigationBarView getNavigationBarView()>
<com.android.photos.views.TiledImageView: void setTranslationX(float)>
<com.android.server.content.ContentService.ObserverNode: void collectObserversLocked(android.net.Uri,int,android.database.IContentObserver,boolean,int,java.util.ArrayList)>
<com.android.server.wm.DisplaySettings: void writeSettingsLocked()>
<com.android.gallery3d.exif.ExifTag: void setIfd(int)>
<com.android.systemui.qs.QSPanel: void onLayout(boolean,int,int,int,int)>
<android.view.BridgeInflater: android.view.View inflate(int,android.view.ViewGroup)>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String[],java.lang.String)>
<com.android.wallpapercropper.WallpaperCropActivity: void cropImageAndSetWallpaper(android.net.Uri,com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler,boolean)>
<com.android.server.content.ContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<com.android.systemui.statusbar.ExpandableView: int getIntrinsicHeight()>
<com.android.systemui.statusbar.phone.IconMerger: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.tuner.TunerService: void showResetRequest(android.content.Context,java.lang.Runnable)>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,int[],int)>
<com.android.keyguard.NumPadKey: boolean hasOverlappingRendering()>
<com.android.server.am.LockTaskNotify: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.ExpandableView: void performRemoveAnimation(long,float,java.lang.Runnable)>
<com.android.tools.layoutlib.java.Objects: int hash(java.lang.Object[])>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.graphics.Paint_Delegate: android.graphics.Paint_Delegate getDelegate(long)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void releaseImmediately(java.lang.String)>
<com.android.server.notification.ScheduleConditionProvider: void attachBase(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarViewTaskSwitchHelper: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<com.android.server.pm.UserManagerService: boolean markGuestForDeletion(int)>
<com.android.server.pm.Installer: int createUserConfig(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<com.android.server.restrictions.RestrictionsManagerService: void onStart()>
<com.android.location.provider.ActivityRecognitionProvider: void <init>(android.hardware.location.IActivityRecognitionHardware)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(short[],int)>
<com.android.documentsui.SectionedListAdapter: java.lang.Object getItem(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getCurrentOverScrollAmount(boolean)>
<com.android.server.notification.NotificationRecord: float getContactAffinity()>
<com.android.server.lights.Light: void setBrightness(int,int)>
<android.view.IWindowManagerImpl: android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>
<com.android.server.Watchdog.HandlerChecker: boolean isOverdueLocked()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: boolean shouldDelayChildPressedState()>
<com.android.systemui.ExpandHelper: void setGravity(int)>
<android.content.res.BridgeResources: java.lang.String getString(int,java.lang.Object[])>
<com.android.server.wm.WindowManagerService: java.lang.Object getWindowManagerLock()>
<com.android.server.notification.SystemConditionProviderService: android.service.notification.IConditionProvider asInterface()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void generateAddAnimation(android.view.View,boolean)>
<com.android.systemui.tuner.TunerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.server.connectivity.KeepalivePacketData: void <init>(java.net.InetAddress,int,java.net.InetAddress,int,byte[])>
<android.preference.BridgePreferenceInflater: void <init>(android.content.Context,android.preference.PreferenceManager)>
<com.android.keyguard.KeyguardHostView: void onPause()>
<com.android.systemui.statusbar.SignalClusterView: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getFocusedStack()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void preventNextAnimation()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.server.wm.WindowManagerService: void updateShowImeWithHardKeyboard()>
<android.graphics.DrawFilter_Delegate: boolean isSupported()>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm.VisibilityReport computeStackVisibilityReport(java.util.ArrayList)>
<com.android.server.notification.CountdownConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleStartedWakingUp()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean equals(java.lang.Object)>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.statementservice.retriever.AbstractStatementRetriever.Result: java.util.List getStatements()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadCenter()>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getOverExpansionAmount()>
<com.android.server.MmsServiceBroker: void onStart()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: boolean notificationGroupsDesired()>
<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderAccess(java.lang.String,int)>
<com.android.documentsui.DirectoryLoader: void onStartLoading()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.providers.settings.SettingsHelper: java.lang.String onBackupValue(java.lang.String,java.lang.String)>
<com.android.systemui.qs.QSTile.BooleanState: java.lang.StringBuilder toStringBuilder()>
<com.android.server.policy.BarController: void showTransient()>
<com.android.server.wm.WindowManagerService: void setAppFullscreen(android.os.IBinder,boolean)>
<com.android.documentsui.CopyService: void onCreate()>
<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionAspectScaledThumb(android.graphics.Bitmap,int,int,int,int,android.os.IRemoteCallback,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFinishedGoingToSleep(int)>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getContentView()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int getPointerLayer()>
<com.android.server.location.GeofenceProxy: com.android.server.location.GeofenceProxy createAndBind(android.content.Context,int,int,int,android.os.Handler,android.location.IGpsGeofenceHardware,android.location.IFusedGeofenceHardware)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setActivityStarter(com.android.systemui.statusbar.phone.ActivityStarter)>
<com.android.server.appwidget.AppWidgetService: void onStart()>
<com.android.server.search.SearchManagerService: void <init>(android.content.Context)>
<com.android.server.wm.WindowManagerService: void setAppOrientation(android.view.IApplicationToken,int)>
<com.android.systemui.statusbar.phone.PanelView: boolean fullyExpandedClearAllVisible()>
<com.android.gallery3d.common.Utils: int parseIntSafely(java.lang.String,int)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.awt.image.BufferedImage,java.util.Set,com.android.resources.Density)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isMethodSecure()>
<com.android.server.statusbar.StatusBarManagerService: void appTransitionStarting(long,long)>
<com.android.server.NetworkManagementService: void removeRoute(int,android.net.RouteInfo)>
<com.android.server.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean)>
<com.android.documentsui.PackageReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.layoutlib.bridge.util.ReflectionUtils.ReflectionException: void <init>(java.lang.String)>
<com.android.server.ConnectivityService: int setUsbTethering(boolean)>
<com.android.systemui.volume.SafetyWarningDialog: void onClick(android.content.DialogInterface,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onUuidChanged(android.bluetooth.BluetoothDevice)>
<com.android.server.NetworkManagementService: void removeIdleTimer(java.lang.String)>
<com.android.systemui.statusbar.AnimatedImageView: void <init>(android.content.Context)>
<com.android.systemui.assist.AssistManager: void replaceDrawable(android.widget.ImageView,android.content.ComponentName,java.lang.String,boolean)>
<com.android.server.ConsumerIrService: boolean hasIrEmitter()>
<com.android.server.pm.UserManagerService: void setSystemControlledUserRestriction(java.lang.String,boolean,int)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageIconChanged()>
<android.graphics.PorterDuffColorFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: void <init>(android.content.res.Resources,int,int)>
<com.android.printspooler.ui.PrinterRegistry: void <init>(android.app.Activity,java.lang.Runnable)>
<com.android.server.am.ActivityManagerService: int getPackageProcessState(java.lang.String,java.lang.String)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationClick(java.lang.String)>
<com.android.uiautomator.core.UiDevice: boolean takeScreenshot(java.io.File)>
<com.android.printspooler.util.BitmapSerializeUtils: void writeBitmapPixels(android.graphics.Bitmap,android.os.ParcelFileDescriptor)>
<android.graphics.ComposePathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.uiautomator.core.UiObject: boolean pinchOut(int,int)>
<com.android.systemui.recents.views.TaskStackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.DateView: void updateClock()>
<com.android.fakeoemfeatures.FakeBackgroundService: void onDestroy()>
<com.android.server.content.ContentService.ObserverNode: void <init>(java.lang.String)>
<com.android.systemui.statusbar.ActivatableNotificationView.OnActivatedListener: void onActivated(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.keyguard.KeyguardSimPinView: void onPause()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<com.android.wallpapercropper.CropView: int getImageRotation()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void toggleRecentApps()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindTexture(int,int)>
<com.android.systemui.statusbar.policy.SignalController: void resetLastState()>
<com.android.systemui.recents.views.TaskStackView: void dismissFocusedTask()>
<com.android.documentsui.RootsCache: boolean isRecentsRoot(com.android.documentsui.model.RootInfo)>
<android.content.res.BridgeTypedArray: int getColor(int,int)>
<com.android.server.search.Searchables: void buildSearchableList()>
<com.android.systemui.statusbar.policy.RotationLockController: int getRotationLockOrientation()>
<com.android.gallery3d.glrenderer.BasicTexture: int getWidth()>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getPrimaryVpnName()>
<com.android.server.notification.PackageVisibilityExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.server.location.ActivityRecognitionProxy: com.android.server.location.ActivityRecognitionProxy createAndBind(android.content.Context,android.os.Handler,boolean,android.hardware.location.ActivityRecognitionHardware,int,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getIntrinsicHeight()>
<com.android.photos.views.TiledImageRenderer: void freeTextures()>
<com.android.photos.DumbBitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getGroupCount()>
<com.android.gallery3d.exif.ExifTag: void forceSetComponentCount(int)>
<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<com.android.systemui.egg.MLandActivity: void startButtonPressed(android.view.View)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void startFinishDozeAnimation()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,int[],int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean getFeature(java.lang.String)>
<com.android.location.provider.LocationProviderBase: long onGetStatusUpdateTime()>
<com.android.server.statusbar.StatusBarManagerService: void hideRecentApps(boolean,boolean)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void handleClick()>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.content.res.ColorStateList getColorStateList(com.android.ide.common.rendering.api.ResourceValue,com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.server.am.BatteryStatsService: void noteStopCamera(int)>
<com.android.server.pm.PermissionsState: int[] computeGids(int[])>
<com.android.uiautomator.core.UiObject: boolean swipeDown(int)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: void <init>(java.lang.String,int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm getStackAlgorithm()>
<com.android.systemui.statusbar.BaseStatusBar: boolean isCameraAllowedByAdmin()>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context)>
<com.android.server.notification.ZenModeHelper: boolean matchesCallFilter(android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<javax.obex.PrivateInputStream: int read()>
<com.android.documentsui.SortingCursorWrapper: void <init>(android.database.Cursor,int)>
<com.android.server.wm.WindowManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.ConnectivityService: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder)>
<com.android.systemui.volume.IconPulser: void start(android.view.View)>
<com.android.server.SystemServiceManager: void switchUser(int)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.layoutlib.bridge.util.SparseWeakArray: int indexOfKey(long)>
<com.android.systemui.statusbar.phone.PanelBar: void onTrackingStarted(com.android.systemui.statusbar.phone.PanelView)>
<com.android.printspooler.model.RemotePrintDocument: void cancel()>
<com.android.server.policy.PhoneWindowManager: int getSystemDecorLayerLw()>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.LocationController getLocationController()>
<com.android.settingslib.bluetooth.HidProfile: boolean isProfileReady()>
<com.android.settingslib.wifi.WifiTracker: void pauseScanning()>
<com.android.statementservice.DirectStatementService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes(int)>
<com.android.tools.layoutlib.create.LogAbortException: void error(com.android.tools.layoutlib.create.Log)>
<com.android.server.wm.WindowManagerService: void setInTouchMode(boolean)>
<com.android.keyguard.KeyguardSimPukView: boolean shouldLockout(long)>
<com.android.server.content.SyncStorageEngine: void removeActiveSync(android.content.SyncInfo,int)>
<com.android.server.trust.TrustAgentWrapper: boolean isConnected()>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String detailedOptions()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getConnectableProfiles()>
<com.android.server.midi.MidiService.Lifecycle: void onStart()>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: com.android.ide.common.rendering.api.ResourceValue getLayoutResource(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.server.am.ActivityManagerService: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String,java.lang.String)>
<com.android.systemui.assist.AssistManager: void onLockscreenShown()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void finish()>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper getActionBarWrapper(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.ActionBarCallback,android.view.View)>
<com.android.server.content.SyncManager: void cancelScheduledSyncOperation(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle)>
<com.android.tools.layoutlib.create.AsmGenerator: void setRewriteMethodCallClasses(java.util.Set)>
<com.android.server.media.MediaSessionService: void onStopUser(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void setZenMode(int)>
<com.android.systemui.volume.MediaSessions: void setVolume(android.media.session.MediaSession.Token,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>
<com.android.server.wm.WindowManagerService: void performEnableScreen()>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getDelegateMethods()>
<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbAccessory[] getAccessoryList()>
<com.android.documentsui.RootCursorWrapper: java.lang.String getString(int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void translate(float,float,float)>
<com.android.settingslib.animation.AppearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator)>
<com.android.systemui.DejankUtils: void removeCallbacks(java.lang.Runnable)>
<com.android.tools.layoutlib.java.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<com.android.gallery3d.glrenderer.UploadedTexture: int getTarget()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isDeviceInteractive()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void <init>(android.content.Context,android.view.ViewStub,com.android.systemui.statusbar.phone.KeyguardStatusBarView,com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector className(java.lang.String)>
<com.android.systemui.volume.ZenFooter: void onConfigurationChanged()>
<android.view.IWindowManagerImpl: int getRotation()>
<com.android.keyguard.KeyguardAbsKeyInputView: void showMessage(java.lang.String,int)>
<com.android.keyguard.KeyguardSimPukView: void verifyPasswordAndUnlock()>
<com.android.server.audio.AudioService: boolean loadSoundEffects()>
<com.android.gallery3d.glrenderer.GLId: void glDeleteFramebuffers(javax.microedition.khronos.opengles.GL11ExtensionPack,int,int[],int)>
<com.android.systemui.statusbar.BaseStatusBar: void setBouncerShowing(boolean)>
<com.android.systemui.qs.tiles.LocationTile: java.lang.String composeChangeAnnouncement()>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitNative(int,java.lang.Object)>
<com.android.server.notification.RankingReconsideration: void <init>(java.lang.String)>
<javax.obex.ServerOperation: long getLength()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: void release()>
<com.android.keyguard.KeyguardHostView: void setOnDismissAction(com.android.keyguard.KeyguardHostView.OnDismissAction,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onFinishedGoingToSleep()>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.obex.ServerSession: void close()>
<com.android.server.job.JobStore: int size()>
<android.graphics.PathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.RotationLockController getRotationLockController()>
<com.android.server.am.ActivityManagerService: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,int)>
<com.android.systemui.recents.views.TaskViewTransform: java.lang.String toString()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<com.android.server.AppOpsService: int checkPackage(int,java.lang.String)>
<com.android.systemui.doze.DozeService: void onDreamingStopped()>
<com.android.layoutlib.bridge.BridgeRenderSession: void dispose()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onLauncherInfoChanged()>
<javax.microedition.khronos.opengles.GL11Ext: void glTexParameterfv(int,int,float[],int)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context)>
<com.android.systemui.qs.GlobalSetting: void setListening(boolean)>
<com.android.systemui.statusbar.phone.ActivityStarter: void startActivity(android.content.Intent,boolean)>
<com.android.server.firewall.IntentFirewall: boolean checkService(android.content.ComponentName,android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>
<com.android.gallery3d.exif.ExifTag: boolean hasDefinedCount()>
<com.android.server.pm.PackageInstallerSession: android.content.pm.PackageInstaller.SessionInfo generateInfo()>
<com.android.server.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter)>
<com.android.documentsui.RecentsCreateFragment: void show(android.app.FragmentManager)>
<com.android.systemui.volume.ZenModePanel: void setHidden(boolean)>
<com.android.server.usage.UnixCalendar: void truncateToMonth()>
<com.android.commands.pm.Pm: int runForceDexOpt()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onConfigurationChanged(android.content.res.Configuration)>
<javax.obex.ClientOperation: void sendHeaders(javax.obex.HeaderSet)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getDatabasePath(java.lang.String)>
<com.android.documentsui.model.RootInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespace(java.lang.String)>
<com.android.server.display.WifiDisplayController.Listener: void onScanResults(android.hardware.display.WifiDisplay[])>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabled(int)>
<com.android.keyguard.KeyguardPasswordView: int getWrongPasswordStringId()>
<android.graphics.NinePatch_Delegate: com.android.ninepatch.NinePatchChunk getChunk(byte[])>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void removeCallback(android.os.Handler.Callback)>
<com.android.server.am.ActivityManagerService: void registerTaskStackListener(android.app.ITaskStackListener)>
<com.android.server.wm.WindowManagerService: void addWindowChangeListener(com.android.server.wm.WindowManagerService.WindowChangeListener)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>
<com.android.server.NetworkManagementService: void stopInterfaceForwarding(java.lang.String,java.lang.String)>
<com.android.server.LockSettingsService: void requireStrongAuth(int,int)>
<com.android.server.pm.Installer: int getSizeInfo(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],android.content.pm.PackageStats)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getPrefix()>
<com.android.server.location.LocationBasedCountryDetector: void stop()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setColorFilter(android.graphics.ColorFilter)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,int,int,int,int)>
<com.android.keyguard.EmergencyButton: void onDetachedFromWindow()>
<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)>
<com.android.systemui.SystemUI: void onBootCompleted()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void notificationLightOff()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(int[],int)>
<com.android.server.usb.UsbMidiDevice: com.android.server.usb.UsbMidiDevice create(android.content.Context,android.os.Bundle,int,int)>
<com.android.systemui.recents.model.TaskGrouping: boolean isFrontMostTask(com.android.systemui.recents.model.Task)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean outOfMemory(android.view.IWindow)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void setZen(int,android.net.Uri,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: void forceRewriteExif(java.lang.String)>
<com.android.server.notification.EventConditionProvider: android.content.ComponentName getComponent()>
<com.android.documentsui.RootsLoader: void <init>(android.content.Context,com.android.documentsui.RootsCache,com.android.documentsui.BaseActivity.State)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,android.net.Uri,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.server.trust.TrustArchive: void logRevokeTrust(int,android.content.ComponentName)>
<android.graphics.PathDashPathEffect_Delegate: boolean isSupported()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<com.android.uiautomator.core.UiDevice: boolean swipe(android.graphics.Point[],int)>
<com.android.location.provider.FusedLocationHardwareSink: void onStatusChanged(int)>
<com.android.server.pm.PackageManagerService: byte[] getIntentFilterVerificationBackup(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void animateCollapsePanels(float)>
<com.android.keyguard.KeyguardSecurityView: void reset()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getGroupTypeCount()>
<com.android.settingslib.bluetooth.A2dpProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.RenderSession createSession(com.android.ide.common.rendering.api.SessionParams)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkSelfPermission(java.lang.String)>
<javax.obex.ObexSession: boolean handleAuthResp(byte[])>
<com.android.server.notification.ZenModeHelper: void setConfigAsync(android.service.notification.ZenModeConfig,java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkController: com.android.systemui.statusbar.policy.NetworkController.AccessPointController getAccessPointController()>
<com.android.server.NsdService: com.android.server.NsdService create(android.content.Context)>
<com.android.photos.DumbBitmapRegionDecoder: com.android.photos.DumbBitmapRegionDecoder newInstance(java.io.InputStream)>
<com.android.systemui.statusbar.policy.MobileSignalController: void notifyListeners()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: boolean isStateful()>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasAlphaChangedFrom(float)>
<com.android.server.Watchdog.HandlerChecker: void addMonitor(com.android.server.Watchdog.Monitor)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onDragDownReset()>
<com.android.photos.BitmapRegionTileSource: int getImageWidth()>
<com.android.server.location.GeofenceManager: void onLocationChanged(android.location.Location)>
<com.android.server.location.LocationProviderInterface: java.lang.String getName()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void setBluetoothEnabled(boolean)>
<com.android.server.audio.MediaFocusControl: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onFinishInflate()>
<com.android.layoutlib.bridge.impl.PlayAnimationThread: void postAnimation()>
<com.android.server.audio.AudioService.AudioPolicyProxy: void binderDied()>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: void <init>(java.lang.String)>
<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>
<com.android.systemui.Gefingerpoken: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.content.SyncStorageEngine.EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.keyguard.KeyguardPasswordView: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isClickedHeadsUpNotification(android.view.View)>
<com.android.server.am.BatteryStatsService: void notePackageInstalled(java.lang.String,int)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.photos.views.BlockingGLTextureView: void <init>(android.content.Context)>
<com.android.systemui.SwipeHelper.Callback: void onDragCancelled(android.view.View)>
<com.android.server.usage.UserUsageStatsService.StatsUpdatedListener: void onStatsReloaded()>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: void <init>(int,android.view.View)>
<com.android.systemui.statusbar.policy.CastController: java.util.Set getCastDevices()>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getValueAsRational(com.android.gallery3d.exif.Rational)>
<com.android.commands.sm.Sm: void runPartition()>
<com.android.uiautomator.core.UiDevice: void setOrientationLeft()>
<com.android.printspooler.model.RemotePrintDocument: boolean isUpdating()>
<com.android.systemui.recents.views.TaskStackViewScroller.TaskStackViewScrollerCallbacks: void onScrollChanged(float)>
<com.android.server.clipboard.ClipboardService: android.content.ClipData getPrimaryClip(java.lang.String)>
<com.android.systemui.statusbar.ScrimView: void setScrimColor(int)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void stopCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<com.android.server.LockSettingsService: void setLong(java.lang.String,long,int)>
<com.android.systemui.qs.tiles.HotspotTile.APChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.qs.tiles.DndTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawRect(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean onBackPressed()>
<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>
<com.android.systemui.recents.views.DebugOverlayView: void onStartTrackingTouch(android.widget.SeekBar)>
<com.android.server.NativeDaemonEvent: boolean isClassClientError()>
<android.graphics.Matrix_Delegate: void reset()>
<com.android.server.wm.WindowManagerService: android.view.IWindowId getWindowId(android.os.IBinder)>
<com.android.server.am.ActivityManagerService: boolean shutdown(int)>
<com.android.server.usb.UsbDeviceManager: void denyUsbDebugging()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<com.android.server.NetworkScoreService: boolean setActiveScorer(java.lang.String)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean isHandlingTouchEvent()>
<com.google.android.maps.MapView: int getLongitudeSpan()>
<com.android.gallery3d.exif.ExifInterface: boolean addGpsTags(double,double)>
<com.android.server.location.GpsNavigationMessageProvider: void onCapabilitiesUpdated(boolean)>
<com.android.documentsui.DocumentsActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void write(int)>
<com.android.server.audio.AudioService: int getRingerModeInternal()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: boolean onDeviceDisappeared(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<com.android.server.pm.PackageManagerService: void deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>
<com.android.systemui.recents.model.RecentsTaskLoader: java.lang.String getAndUpdateActivityLabel(com.android.systemui.recents.model.Task.TaskKey,android.app.ActivityManager.TaskDescription,com.android.systemui.recents.misc.SystemServicesProxy,com.android.systemui.recents.model.ActivityInfoHandle)>
<com.android.commands.sm.Sm: void runForget()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isFaceUnlockRunning()>
<com.android.server.usage.UnixCalendar: void addDays(int)>
<com.android.systemui.volume.VolumeDialogController: void setExitCondition(android.service.notification.Condition)>
<javax.microedition.khronos.opengles.GL10: void glTexParameterx(int,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.PackageManagerService: int installExistingPackageAsUser(java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.BackDropView: void setOnVisibilityChangedRunnable(java.lang.Runnable)>
<com.android.server.notification.NotificationRecord: void setContactAffinity(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isSnoozedPackage(android.service.notification.StatusBarNotification)>
<com.android.tools.layoutlib.java.IntegralToString: void appendInt(java.lang.StringBuilder,int)>
<com.android.media.remotedisplay.RemoteDisplayProvider: com.android.media.remotedisplay.RemoteDisplay findRemoteDisplay(java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onConfigurationChanged()>
<com.android.systemui.usb.UsbStorageActivity: void onPause()>
<android.content.res.BridgeTypedArray: int getInteger(int,int)>
<com.android.systemui.tuner.AutoScrollView: boolean onDragEvent(android.view.DragEvent)>
<android.graphics.Canvas_Delegate: android.graphics.Canvas_Delegate getDelegate(long)>
<com.android.server.audio.AudioService: boolean isHdmiSystemAudioSupported()>
<com.android.server.FgThread: com.android.server.FgThread get()>
<com.android.systemui.qs.SecureSetting: int getValue()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent,java.lang.String,int)>
<com.android.server.policy.PhoneWindowManager: void screenTurnedOn()>
<com.android.server.lights.Light: void turnOff()>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.documentsui.DirectoryLoader: com.android.documentsui.DirectoryResult loadInBackground()>
<com.android.layoutlib.bridge.util.SparseWeakArray: java.lang.Object get(long)>
<com.android.systemui.ExpandHelper: void setEventSource(android.view.View)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPickupPerformsProxCheck()>
<com.android.settingslib.bluetooth.MapProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getInstalledAccessibilityServiceList(int)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitEnd()>
<com.android.server.trust.TrustAgentWrapper: boolean isManagingTrust()>
<com.android.systemui.statusbar.phone.TrustDrawable: void draw(android.graphics.Canvas)>
<android.view.ShadowPainter: java.awt.image.BufferedImage createSmallRectangularDropShadow(java.awt.image.BufferedImage)>
<com.android.server.am.ActivityManagerService: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>
<com.android.systemui.doze.DozeHost: boolean isPowerSaveActive()>
<com.android.server.AppOpsService: int checkOperation(int,int,java.lang.String)>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.location.GpsLocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setActualHeight(int,boolean)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitMultiANewArrayInsn(java.lang.String,int)>
<com.android.systemui.egg.MLandActivity: void onResume()>
<android.text.TabStops: float width(float)>
<com.android.systemui.statusbar.policy.UserSwitcherController: boolean isUserSwitcherAvailable(android.os.UserManager)>
<com.android.keyguard.KeyguardSecurityContainer: void onResume(int)>
<com.android.uiautomator.core.UiDevice: boolean pressBack()>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,float[],int)>
<com.android.systemui.settings.BrightnessController: boolean removeStateChangedCallback(com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback)>
<com.android.server.AppOpsService.ClientState: void <init>(android.os.IBinder)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getStorageEncryption(android.content.ComponentName,int)>
<com.android.server.DeviceIdleController: void onStart()>
<com.android.systemui.qs.QSTile: void handleClearState()>
<com.android.server.am.ActivityManagerService: boolean willActivityBeVisible(android.os.IBinder)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseScheduleResets()>
<com.android.systemui.usb.StorageNotification: void start()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void scanForAccessPoints()>
<com.android.server.media.MediaRouterService: void <init>(android.content.Context)>
<com.android.uiautomator.core.UiScrollable: boolean scrollForward()>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getName()>
<com.android.systemui.recents.model.RecentsTaskLoader: void preloadTasks(com.android.systemui.recents.model.RecentsTaskLoadPlan,boolean)>
<com.android.systemui.statusbar.AnimatedImageView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>
<com.android.server.location.LocationFudger: void <init>(android.content.Context,android.os.Handler)>
<com.android.printspooler.util.MediaSizeUtils: android.print.PrintAttributes.MediaSize getDefault(android.content.Context)>
<com.android.systemui.qs.QSDetailItems.Callback: void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems.Item)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isAutoConnectable()>
<com.android.documentsui.DirectoryView: float getPosition()>
<com.android.systemui.volume.VolumeUI: void start()>
<android.graphics.PorterDuffXfermode_Delegate: java.awt.Composite getComposite(int)>
<com.android.server.content.SyncOperation: java.lang.String dump(android.content.pm.PackageManager,boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void unpair()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postStartActivityDismissingKeyguard(android.app.PendingIntent)>
<com.android.systemui.statusbar.phone.PanelView: void onClosingFinished()>
<com.android.systemui.RecentsComponent: void cancelPreloadingRecents()>
<com.android.systemui.recents.views.SystemBarScrimViews: void prepareEnterRecentsAnimation()>
<com.android.systemui.statusbar.phone.PanelHolder: int getPanelIndex(com.android.systemui.statusbar.phone.PanelView)>
<com.android.gallery3d.glrenderer.BasicTexture: void setAssociatedCanvas(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void addIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRingerModeChanged(int)>
<android.content.res.BridgeAssetManager: com.android.ide.common.rendering.api.AssetRepository getAssetRepository()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setAreThereNotifications()>
<android.graphics.DiscretePathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onSystemReady()>
<android.graphics.Typeface_Delegate: void <init>(android.graphics.FontFamily_Delegate[],int,int)>
<android.graphics.DiscretePathEffect_Delegate: boolean isSupported()>
<com.android.keyguard.KeyguardUpdateMonitor: int getNextSubIdForState(com.android.internal.telephony.IccCardConstants.State)>
<com.android.server.notification.ScheduleCalendar: void setTimeZone(java.util.TimeZone)>
<com.android.systemui.statusbar.phone.NavigationBarView: void reorient()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurnedOn()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: long getKeyguardFadingAwayDelay()>
<com.android.systemui.egg.MLand: void setSplash(android.view.View)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void revokeRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isAddOrRemoveAnimationPending()>
<com.android.photos.SimpleBitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.systemui.recents.model.RecentsTaskLoader: com.android.systemui.recents.misc.SystemServicesProxy getSystemServicesProxy()>
<com.android.server.pm.PackageManagerService: int checkSignatures(java.lang.String,java.lang.String)>
<com.android.server.tv.TvInputManagerService: void <init>(android.content.Context)>
<com.android.server.notification.ZenModeHelper: void initZenMode()>
<com.android.systemui.statusbar.ExpandableView: void setClipTopOptimization(int)>
<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void executeRunnableDismissingKeyguard(java.lang.Runnable,java.lang.Runnable,boolean,boolean)>
<com.google.android.maps.MapView: void onRestoreInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean isTrackingHeadsUp()>
<com.android.layoutlib.bridge.Bridge: com.android.util.Pair resolveResourceId(int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void addNotification(com.android.systemui.statusbar.ExpandableNotificationRow,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.content.pm.ResolveInfo resolveCameraIntent()>
<com.android.systemui.statusbar.policy.SignalCallbackAdapter: void setMobileDataEnabled(boolean)>
<android.os.Handler_Delegate: void setCallback(android.os.Handler_Delegate.IHandlerCallback)>
<com.android.server.IntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void install(byte[],int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector resourceIdMatches(java.lang.String)>
<com.android.server.audio.AudioService: void startBluetoothSco(android.os.IBinder,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleUserSwitching(int,android.os.IRemoteCallback)>
<com.android.server.pm.PackageManagerService: void clearPackagePersistentPreferredActivities(java.lang.String,int)>
<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>
<com.android.server.am.ActivityManagerService: void setTaskResizeable(int,boolean)>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String name()>
<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean)>
<com.android.server.storage.DeviceStorageMonitorService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.shell.BugreportStorageProvider: void deleteDocument(java.lang.String)>
<com.android.server.pm.PackageManagerService: java.util.List getPersistentApplications(int)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: com.android.systemui.statusbar.policy.RemoteInputView inflate(android.content.Context,android.view.ViewGroup,android.app.Notification.Action,android.app.RemoteInput)>
<com.android.server.notification.ZenModeHelper: java.lang.String toString()>
<com.android.systemui.statusbar.phone.DozeParameters: com.android.systemui.statusbar.phone.DozeParameters.PulseSchedule getPulseSchedule()>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl: boolean isMobileDataSupported()>
<android.view.WindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>
<com.android.systemui.qs.tiles.WifiTile: int getMetricsCategory()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: int getAlpha()>
<javax.obex.ObexTransport: void listen()>
<com.android.systemui.qs.QSTile.Icon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setEmptyShadeView(com.android.systemui.statusbar.EmptyShadeView)>
<com.android.keyguard.KeyguardSecurityContainer: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.server.accessibility.ScreenMagnifier: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<com.android.gallery3d.common.Utils: int ceilLog2(float)>
<javax.obex.ServerRequestHandler: int onSetPath(javax.obex.HeaderSet,javax.obex.HeaderSet,boolean,boolean)>
<com.android.server.audio.MediaFocusControl: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName,android.os.IBinder)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getDeviceOwnerName()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurnedOn()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void expandWithQs()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setMessage(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getIdAttribute()>
<com.android.systemui.power.PowerUI.WarningsUI: void showInvalidChargerWarning()>
<com.android.systemui.statusbar.phone.PanelView: void notifyBarPanelExpansionChanged()>
<com.android.server.BatteryService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isDozing()>
<com.android.gallery3d.glrenderer.RawTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.server.pm.UserManagerService: void setUserEnabled(int)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewAppIconClicked(com.android.systemui.recents.views.TaskView)>
<com.android.backupconfirm.BackupRestoreConfirmation: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: java.lang.String getLastDeviceName()>
<com.android.printspooler.widget.PrintOptionsLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.RecentsAppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void cancelDiscoverableAlarm(android.content.Context)>
<com.android.systemui.statusbar.policy.KeyButtonView: void onWindowVisibilityChanged(int)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateHideSensitive()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean areAllItemsEnabled()>
<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent.Callbacks,org.xmlpull.v1.XmlPullParser)>
<com.android.server.audio.AudioService: boolean isBluetoothScoOn()>
<com.android.systemui.egg.MLand: float frand()>
<com.android.server.audio.MediaFocusControl: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int)>
<com.android.server.policy.PhoneWindowManager: void adjustConfigurationLw(android.content.res.Configuration,int,int)>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: int getRotation()>
<com.android.systemui.statusbar.NotificationGuts: void drawableHotspotChanged(float,float)>
<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport.CrashInfo)>
<com.android.systemui.statusbar.ExpandableOutlineView: void setOutlineAlpha(float)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLocaleCountry()>
<com.android.server.wm.WindowManagerService: void startAppFreezingScreen(android.os.IBinder,int)>
<com.android.server.IntentResolver: void dumpFilterLabel(java.io.PrintWriter,java.lang.String,java.lang.Object,int)>
<com.android.bluetoothmidiservice.BluetoothMidiDevice: android.os.IBinder getBinder()>
<com.android.systemui.qs.QSFooter: void <init>(com.android.systemui.qs.QSPanel,android.content.Context)>
<com.android.server.pm.PackageInstallerSession: boolean isSealed()>
<com.android.layoutlib.bridge.android.BridgeContext: void setBridgeInflater(android.view.BridgeInflater)>
<com.android.server.location.GpsMeasurementsProvider: com.android.server.location.RemoteListenerHelper.ListenerOperation getHandlerOperation(int)>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.SwipeHelper.LongPressListener getNotificationLongClicker()>
<com.android.server.ConsumerIrService: void transmit(java.lang.String,int,int[])>
<android.content.res.BridgeAssetManager: void clearSystem()>
<android.animation.FakeAnimator: long getDuration()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.policy.KeyButtonView getHomeButton()>
<com.android.systemui.statusbar.NotificationBackgroundView: void setTint(int)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHardwareDeviceAdded(android.media.tv.TvInputHardwareInfo)>
<com.android.server.audio.MediaFocusControl: int getRemoteStreamMaxVolume()>
<android.content.res.BridgeTypedArray: java.lang.CharSequence[] getTextArray(int)>
<com.android.systemui.recents.views.TaskViewHeader: boolean hasOverlappingRendering()>
<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setScrollingEnabled(boolean)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.HotspotController getHotspotController()>
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshCarrierInfo()>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.settingslib.wifi.AccessPoint: void <init>(android.content.Context,android.os.Bundle)>
<com.android.server.AppOpsService: void uidRemoved(int)>
<com.android.server.policy.PhoneWindowManager: void beginPostLayoutPolicyLw(int,int)>
<com.android.server.usb.UsbAudioDevice: java.lang.String toShortString()>
<com.android.systemui.statusbar.phone.DozeScrimController: void abortPulsing()>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(android.content.ComponentName)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isInputRestricted()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: long getItemId(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onExpandingFinished()>
<com.android.documentsui.model.DocumentInfo: java.io.FileNotFoundException asFileNotFoundException(java.lang.Throwable)>
<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getScanMode()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addPackageToPreferred(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getShortcutInputMethodsAndSubtypes()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getPeekHeight()>
<com.android.systemui.egg.MLandActivity: void onPause()>
<com.android.printspooler.widget.PrintContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileName(android.content.ComponentName,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getStatusBarHeight()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient,int)>
<com.android.server.am.BatteryStatsService: void noteStopWakelock(int,int,java.lang.String,java.lang.String,int)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setAsVerticalList()>
<javax.microedition.khronos.opengles.GL10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<com.android.keyguard.EmergencyButton: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.settingslib.wifi.WifiTracker: void stopTracking()>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void removeViewImmediate(android.view.View)>
<com.android.server.notification.NotificationDelegate: void onPanelHidden()>
<com.android.systemui.statusbar.BaseStatusBar: void visibilityChanged(boolean)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational getTagRationalValue(int)>
<com.android.commands.uiautomator.RunTestCommand: java.lang.String detailedOptions()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void addSystemIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon)>
<com.android.server.NetworkManagementService: void stopAccessPoint(java.lang.String)>
<com.android.location.provider.LocationProviderBase: boolean onSendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.qs.QSTile: void refreshState()>
<com.android.systemui.SysUIToast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.android.server.audio.AudioService.VolumeController: void setVisible(boolean)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.os.storage.VolumeInfo getPrimaryStorageCurrentVolume()>
<com.android.systemui.volume.ZenModePanel.Callback: void onInteraction()>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewAppInfoClicked(com.android.systemui.recents.views.TaskView)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.LocationManagerService: void clearTestProviderLocation(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.ActivatableNotificationView: void drawableStateChanged()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setShowingLegacyBackground(boolean)>
<com.android.systemui.qs.tiles.BluetoothTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onStop()>
<javax.microedition.khronos.opengles.GL10: void glNormal3x(int,int,int)>
<com.android.systemui.statusbar.NotificationGuts: boolean hasOverlappingRendering()>
<com.android.server.policy.PhoneWindowManager: void removeWindowLw(android.view.WindowManagerPolicy.WindowState)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setScrimController(com.android.systemui.statusbar.phone.ScrimController)>
<android.util.BridgeXmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<com.android.server.notification.NotificationRecord: void <init>(android.service.notification.StatusBarNotification,int)>
<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>
<com.android.keyguard.KeyguardHostView: void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel.SecurityMode,boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<com.android.defcontainer.MeasurementUtils: long measureDirectory(java.lang.String)>
<com.android.server.pm.InstructionSets: java.util.List getAllInstructionSets()>
<com.android.server.location.LocationProviderProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.StatusBarIconController: void appTransitionPending()>
<com.android.server.policy.PhoneWindowManager: void startedGoingToSleep(int)>
<com.android.server.DeviceIdleController: void setNetworkPolicyTempWhitelistCallbackInternal(java.lang.Runnable)>
<android.text.GreedyLineBreaker: void <init>(java.util.List,android.text.LineWidth,android.text.TabStops)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<com.android.server.media.MediaSessionRecord: int getUserId()>
<com.android.systemui.statusbar.tv.TvStatusBar: void createAndAddWindows()>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onPrintJobQueued(android.print.PrintJobInfo)>
<com.android.printspooler.ui.PrintActivity: void onRequestContentUpdate()>
<com.android.keyguard.KeyguardAbsKeyInputView: java.lang.String getPasswordText()>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getProfileOwnerName()>
<com.android.systemui.qs.tiles.AirplaneModeTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void hide(long,long)>
<com.android.uiautomator.core.UiCollection: int getChildCount(com.android.uiautomator.core.UiSelector)>
<com.android.settingslib.wifi.AccessPoint: boolean isActive()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getProjectKey()>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecuritySelection()>
<com.android.server.connectivity.PacManager: boolean setCurrentProxyScriptUrl(android.net.ProxyInfo)>
<com.android.gallery3d.exif.ExifTag: long getValueAsLong(long)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<com.android.systemui.recents.views.RecentsView: void onTaskViewDismissed(com.android.systemui.recents.model.Task)>
<com.android.server.content.SyncQueue: void remove(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle)>
<com.android.server.connectivity.DataConnectionStats: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isWakeLockLevelSupported(int)>
<com.android.server.pm.PackageManagerService: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector longClickable(boolean)>
<com.android.tools.layoutlib.create.OverrideMethod: java.lang.Object invokeA(java.lang.String,boolean,java.lang.Object)>
<javax.microedition.khronos.egl.EGL10: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isSecure()>
<com.android.server.media.MediaSessionRecord: long getFlags()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>
<com.android.location.fused.FusedLocationProvider: long onGetStatusUpdateTime()>
<com.android.keyguard.EmergencyButton: void takeEmergencyCallAction()>
<com.android.systemui.ExpandHelper: void setEnabled(boolean)>
<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel,com.android.server.input.InputWindowHandle)>
<com.android.systemui.statusbar.policy.ZenModeController: void addCallback(com.android.systemui.statusbar.policy.ZenModeController.Callback)>
<com.android.wallpapercropper.WallpaperCropActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.Task getFrontMostTask()>
<com.android.server.audio.AudioService: int setFocusPropertiesForPolicy(int,android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.systemui.recents.views.SwipeHelper.Callback: void onSnapBackCompleted(android.view.View)>
<com.google.android.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.LockSettingsStorage.Callback: void initialize(android.database.sqlite.SQLiteDatabase)>
<com.android.systemui.recents.model.FilteredTaskList: void set(java.util.List)>
<com.android.gallery3d.exif.ExifInterface: int getTrueIfd(int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getObbDir()>
<com.android.server.am.BatteryStatsService: boolean isOnBattery()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeCount()>
<com.android.server.location.GpsLocationProvider: void updateNetworkState(int,android.net.NetworkInfo)>
<com.android.server.notification.ConditionProviders: boolean subscribeIfNecessary(android.content.ComponentName,android.net.Uri)>
<com.android.server.usb.UsbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<com.android.server.am.ActivityManagerService: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.systemui.statusbar.BaseStatusBar: int getMaxKeyguardNotifications()>
<com.android.server.media.MediaSessionRecord: java.lang.String getPackageName()>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange,int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void <init>(org.objectweb.asm.ClassVisitor)>
<com.android.settingslib.bluetooth.MapProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<javax.obex.ServerSession: void <init>(javax.obex.ObexTransport,javax.obex.ServerRequestHandler,javax.obex.Authenticator)>
<com.android.documentsui.DocumentsToolBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.PackageManagerService: void verifyIntentFilter(int,int,java.util.List)>
<com.android.statementservice.retriever.Relation: int hashCode()>
<android.net.ConnectivityManager.PacketKeepaliveCallback: void onStopped()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName,int)>
<com.android.server.ConnectivityService: boolean addVpnAddress(java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryRemoved(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.server.SystemServiceManager: boolean isSafeMode()>
<com.android.server.location.LocationProviderProxy: java.lang.String getConnectedPackageName()>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: long getItemId(int)>
<android.graphics.Gradient_Delegate: java.lang.String getSupportMessage()>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] computePrintedPages(android.print.PageRange[],android.print.PageRange[],int)>
<com.android.server.wm.WindowManagerService: boolean isKeyguardLocked()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setIconAnimationRunning(boolean)>
<com.android.media.remotedisplay.RemoteDisplay: void setVolumeHandling(int)>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean,boolean)>
<com.android.server.location.GpsLocationProvider: void disable()>
<com.android.systemui.statusbar.DismissViewButton: void getDrawingRect(android.graphics.Rect)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: boolean canChildBeDismissed(android.view.View)>
<com.android.systemui.statusbar.phone.NavigationBarViewTaskSwitchHelper: void setBar(com.android.systemui.statusbar.BaseStatusBar)>
<com.android.server.fingerprint.FingerprintUtils: void renameFingerprintForUser(android.content.Context,int,int,java.lang.CharSequence)>
<com.android.server.twilight.TwilightState: int hashCode()>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityModel.SecurityMode getSecurityMode()>
<com.android.commands.hid.Event.Reader: void <init>(java.io.InputStreamReader)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isTrusted()>
<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setPhoneStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<javax.microedition.khronos.egl.EGL10: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<com.android.server.usage.UnixCalendar: void truncateToWeek()>
<com.android.systemui.statusbar.NotificationContentView: void setContractedChild(android.view.View)>
<com.android.server.am.AppTimeTracker: void stop()>
<com.android.keyguard.PasswordTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>
<com.android.sharedstoragebackup.SharedStorageAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.server.location.MockProvider: void setLocation(android.location.Location)>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.RectF getMaxCropRect(int,int,int,int,boolean)>
<com.android.server.notification.ZenModeHelper: void onSystemReady()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void <init>(android.content.Context,com.android.internal.policy.IKeyguardService)>
<com.android.server.fingerprint.FingerprintUtils: void vibrateFingerprintError(android.content.Context)>
<com.android.systemui.SystemUI: void start()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<com.android.systemui.recents.views.DebugOverlayView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PanelView: boolean isFullyCollapsed()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getDir(java.lang.String,int)>
<com.android.commands.media.Media: void main(java.lang.String[])>
<com.android.server.notification.NotificationManagerService: void onBootPhase(int)>
<com.android.systemui.qs.tiles.CastTile: void handleUserSwitch(int)>
<com.android.systemui.tuner.TunerService: void setTunerEnabled(android.content.Context,boolean)>
<com.android.gallery3d.exif.ExifInterface: boolean addGpsDateTimeStampTag(long)>
<com.android.systemui.statusbar.ActivatableNotificationView: void performAddAnimation(long,long)>
<com.android.keyguard.KeyguardPINView: void onFinishInflate()>
<com.android.location.provider.ActivityRecognitionProvider.Sink: void onActivityChanged(com.android.location.provider.ActivityChangedEvent)>
<com.android.server.job.controllers.JobStatus: void <init>(android.app.job.JobInfo,int)>
<com.android.server.policy.PhoneWindowManager: int getInputMethodWindowVisibleHeightLw()>
<com.android.printspooler.ui.FusedPrintersProvider: boolean areHistoricalPrintersLoaded()>
<com.android.server.AppOpsService: void setMode(int,int,java.lang.String,int)>
<com.android.server.job.controllers.JobStatus: boolean hasIdleConstraint()>
<com.android.server.am.ActivityManagerService: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>
<com.android.fakeoemfeatures.FakeView: void onDetachedFromWindow()>
<com.android.documentsui.RootsCache: void updateAuthorityAsync(java.lang.String)>
<com.android.printspooler.ui.FusedPrintersProvider: void forgetFavoritePrinter(android.print.PrinterId)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setPreviewView(android.view.View)>
<com.android.systemui.recents.model.RecentsTaskLoader: int getThumbnailCacheSize()>
<com.android.systemui.statusbar.policy.NetworkController: void addSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.gallery3d.exif.ExifInterface: boolean addDateTimeStampTag(int,long,java.util.TimeZone)>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasTranslationZChangedFrom(float)>
<com.android.printspooler.ui.PrintActivity: void onPrinterAvailable(android.print.PrinterInfo)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.drawable.Drawable getActivityIcon(android.content.pm.ActivityInfo,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurnedOff()>
<com.android.systemui.recents.views.TaskStackView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setQsExpanded(boolean)>
<com.android.server.DisplayThread: com.android.server.DisplayThread get()>
<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>
<com.android.systemui.volume.ZenModePanel: void setCallback(com.android.systemui.volume.ZenModePanel.Callback)>
<com.android.vpndialogs.ConfirmDialog: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
<com.android.externalstorage.MountReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.ExpandableView: int getMinClipTopAmount()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: int glCheckFramebufferStatusOES(int)>
<com.android.systemui.RecentsComponent: void setCallback(com.android.systemui.RecentsComponent.Callbacks)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>
<android.text.GreedyLineBreaker: void computeBreaks(android.text.StaticLayout.LineBreaks)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.gallery3d.glrenderer.GLCanvas: void save()>
<com.android.systemui.statusbar.tv.TvStatusBar: void notificationLightOff()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void inflateGuts()>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getCannedFlingDurationFactor()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int checkSignatures(int,int)>
<com.android.systemui.qs.QSTile: void handleUserSwitch(int)>
<com.android.server.notification.ConditionProviders: java.lang.Iterable getSystemProviders()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void doKeyguardTimeout(android.os.Bundle)>
<com.android.server.pm.BackgroundDexOptService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.policy.ZenModeController: void setZen(int,android.net.Uri,java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean isSleeping()>
<com.android.server.am.BatteryStatsService: void noteWifiRadioPowerState(int,long)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void appTransitionPending()>
<com.android.keyguard.KeyguardPINView: void startAppearAnimation()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>
<com.android.gallery3d.glrenderer.BitmapTexture: android.graphics.Bitmap onGetBitmap()>
<com.android.documentsui.FilteringCursorWrapper: void <init>(android.database.Cursor,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void topAppWindowChanged(boolean)>
<com.android.printspooler.ui.PageAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)>
<com.android.uiautomator.core.UiObject: boolean isLongClickable()>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onPrintJobStateChanged(android.print.PrintJobInfo)>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarView.OnVerticalChangedListener: void onVerticalChanged(boolean)>
<com.android.server.location.LocationBlacklist: void <init>(android.content.Context,android.os.Handler)>
<com.android.server.wm.AppTransition: java.lang.String toString()>
<android.graphics.EmbossMaskFilter_Delegate: boolean isSupported()>
<android.graphics.Paint_Delegate: boolean isFilterBitmap()>
<com.android.mediadrm.signer.MediaDrmSigner: com.android.mediadrm.signer.MediaDrmSigner.Certificate provideCertificateResponse(android.media.MediaDrm,byte[])>
<com.android.systemui.recents.model.TaskStack: java.lang.String toString()>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.util.Pair searchAttr(int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void setCollapseClickListener(android.view.View.OnClickListener)>
<com.android.systemui.qs.tiles.IntentTile: void handleClick()>
<com.android.uiautomator.core.UiAutomationShellWrapper: void connect()>
<com.android.server.notification.ScheduleConditionProvider: android.content.ComponentName getComponent()>
<com.android.server.am.ActivityManagerService.GrantUri: java.lang.String toSafeString()>
<javax.obex.ServerOperation: java.io.DataInputStream openDataInputStream()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedAccessibilityServicesForUser(int)>
<com.android.systemui.recents.views.TaskStackView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.documentsui.RecentsProvider: java.lang.String getType(android.net.Uri)>
<com.android.systemui.statusbar.NotificationData: void filterAndSort()>
<com.android.systemui.usb.UsbAccessoryUriActivity: void onClick(android.content.DialogInterface,int)>
<com.android.gallery3d.exif.ExifInterface: void removeTagDefinition(int)>
<com.android.systemui.recents.misc.Console: java.lang.String trimMemoryLevelToString(int)>
<com.android.server.notification.RankingHelper: int indexOf(java.util.ArrayList,com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setCarrierNetworkChangeMode(boolean)>
<com.android.server.content.SyncStorageEngine: android.content.SyncInfo addActiveSync(com.android.server.content.SyncManager.ActiveSyncContext)>
<com.android.gallery3d.common.Utils: boolean isNullOrEmpty(java.lang.String)>
<com.android.gallery3d.exif.ExifTag: byte[] getStringByte()>
<com.android.layoutlib.bridge.android.BridgeContext: int getFrameworkResourceValue(com.android.resources.ResourceType,java.lang.String,int)>
<com.android.externalstorage.TestDocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getDismissViewHeight()>
<com.android.systemui.statusbar.ExpandableView: void setClipTopAmount(int)>
<com.android.systemui.qs.QSTile.SignalState: boolean copyTo(com.android.systemui.qs.QSTile.State)>
<com.android.server.job.JobStore: void readJobMapFromDisk(android.util.ArraySet)>
<com.android.layoutlib.bridge.BridgeRenderSession: java.util.Map getDefaultProperties(java.lang.Object)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onWindowFocusChanged(boolean)>
<com.android.systemui.volume.ZenFooter: void init(com.android.systemui.statusbar.policy.ZenModeController)>
<com.android.server.audio.MediaFocusControl: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeWindow: void windowFocusChanged(boolean,boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void clearNonBondedDevices()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getExternalFilesDir(java.lang.String)>
<com.android.systemui.egg.MLand: void onDraw(android.graphics.Canvas)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>
<com.android.server.LockSettingsService: com.android.internal.widget.VerifyCredentialResponse checkPassword(java.lang.String,int)>
<com.android.systemui.statusbar.GestureRecorder.Gesture.Record: java.lang.String toJson()>
<com.android.server.media.MediaSessionStack: void onSessionStateChange(com.android.server.media.MediaSessionRecord)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isInputRestricted()>
<com.android.systemui.statusbar.phone.QSTileHost: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelBar: com.android.systemui.statusbar.phone.PanelView selectPanelForTouch(android.view.MotionEvent)>
<com.android.server.content.ContentService: void setMasterSyncAutomatically(boolean)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<com.android.systemui.qs.QSPanel.Callback: void onShowingDetail(com.android.systemui.qs.QSTile.DetailAdapter)>
<com.android.location.fused.FusionEngine: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<com.android.systemui.recents.model.Task: void notifyTaskDataUnloaded(android.graphics.Bitmap,android.graphics.drawable.Drawable)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getRotation()>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.LocationManagerService: void systemRunning()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setOnVerticalChangedListener(com.android.systemui.statusbar.phone.NavigationBarView.OnVerticalChangedListener)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void draw(com.android.layoutlib.bridge.impl.GcSnapshot.Drawable,android.graphics.Paint_Delegate,boolean,boolean)>
<com.android.server.pm.PackageManagerService: java.util.List getPreferredPackages(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean shouldDelayChildPressedState()>
<com.android.documentsui.DocumentsActivity: void onAppPicked(android.content.pm.ResolveInfo)>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String,java.lang.String[])>
<com.android.uiautomator.core.UiDevice: int getDisplayHeight()>
<com.android.systemui.statusbar.phone.LockIcon: void update()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void show(android.os.Bundle)>
<com.android.systemui.BatteryMeterView: void onSizeChanged(int,int,int,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isProfileReady()>
<javax.microedition.khronos.opengles.GL10: void glViewport(int,int,int,int)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getDurationMs()>
<com.android.printspooler.widget.PageContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<com.android.systemui.qs.tiles.LocationTile: void setListening(boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsFramebufferOES(int)>
<com.android.systemui.RecentsComponent: void showNextAffiliatedTask()>
<com.android.gallery3d.exif.ExifTag: java.lang.String forceGetValueAsString()>
<com.android.server.power.PowerManagerService: void monitor()>
<com.android.systemui.statusbar.policy.MobileSignalController: void dump(java.io.PrintWriter)>
<com.android.server.DeviceIdleController: void addPowerSaveTempWhitelistAppDirectInternal(int,int,long,boolean,java.lang.String)>
<com.android.keyguard.KeyguardPinBasedInputView: int getPromtReasonStringRes(int)>
<com.android.server.pm.PackageManagerService: void unregisterMoveCallback(android.content.pm.IPackageMoveObserver)>
<javax.microedition.khronos.opengles.GL10: void glEnableClientState(int)>
<com.android.keyguard.KeyguardStatusView: void onAttachedToWindow()>
<com.android.server.notification.NotificationManagerService.DumpFilter: com.android.server.notification.NotificationManagerService.DumpFilter parseFromArguments(java.lang.String[])>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferRenderbufferOES(int,int,int,int)>
<com.android.server.am.ActivityManagerService: boolean isUserRunning(int,boolean)>
<com.android.server.am.ActivityManagerService: void removeContentProvider(android.os.IBinder,boolean)>
<com.android.documentsui.RecentsCreateFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.qs.QSTile: int getMetricsCategory()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setQsPanel(com.android.systemui.qs.QSPanel)>
<com.android.server.input.InputManagerService: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>
<com.android.systemui.qs.QSTile.State: boolean copyTo(com.android.systemui.qs.QSTile.State)>
<com.android.keyguard.KeyguardHostView: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: com.android.printspooler.model.PrintSpoolerService getService()>
<com.android.documentsui.model.RootInfo: android.graphics.drawable.Drawable loadGridIcon(android.content.Context)>
<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController.ChargingTracker getTracker()>
<com.android.server.media.MediaSessionRecord: android.media.session.ISession getSessionBinder()>
<com.android.systemui.Prefs: int getInt(android.content.Context,java.lang.String,int)>
<com.android.systemui.recents.views.RecentsView: boolean launchTask(com.android.systemui.recents.model.Task)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewClicked(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task,boolean)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbPort[] getPorts()>
<com.android.statementservice.retriever.URLFetcher: com.android.statementservice.retriever.WebContent getWebContentFromUrl(java.net.URL,long,int)>
<javax.microedition.khronos.opengles.GL10: void glDrawArrays(int,int,int)>
<javax.microedition.khronos.opengles.GL11: boolean glIsBuffer(int)>
<com.android.systemui.recents.RecentsResizeTaskDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.server.policy.WindowOrientationListener: void enable()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelFullyOpened(com.android.systemui.statusbar.phone.PanelView)>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void link(android.view.ViewGroup,android.widget.BaseAdapter)>
<com.android.systemui.assist.AssistManager: void hideAssist()>
<com.android.server.usage.UsageStatsXml: long parseBeginTime(android.util.AtomicFile)>
<com.android.server.wm.WindowManagerService: boolean inKeyguardRestrictedInputMode()>
<javax.obex.SessionNotifier: javax.obex.ObexSession acceptAndOpen(javax.obex.ServerRequestHandler,javax.obex.Authenticator)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glEnable(int)>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.IconGroup getIcons()>
<com.android.server.job.JobSchedulerService: void onJobCompleted(com.android.server.job.controllers.JobStatus,boolean)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setAirplaneMode(boolean)>
<com.android.systemui.volume.VolumeDialogController: void setRingerMode(int,boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.Clock: void onAttachedToWindow()>
<com.android.server.audio.AudioService.VolumeStreamState: void setAllIndexesToMax()>
<com.android.server.content.SyncStorageEngine: android.util.Pair getCopyOfAuthorityWithSyncStatus(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.server.am.ActivityManagerService: void registerUidObserver(android.app.IUidObserver)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setKeyguardEnabled(boolean)>
<com.android.location.fused.FusionEngine: void onLocationChanged(android.location.Location)>
<com.android.wallpapercropper.CropView: void <init>(android.content.Context)>
<com.android.gallery3d.exif.Rational: long getDenominator()>
<com.android.layoutlib.bridge.android.BridgeWindow: void moved(int,int)>
<com.android.server.notification.ZenLog: void traceSetRingerModeExternal(int,int,java.lang.String,int,int)>
<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionClipReveal(int,int,int,int)>
<com.android.server.wm.WindowManagerService: void validateStackOrder(java.lang.Integer[])>
<com.android.server.media.MediaSessionRecord: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void disconnect()>
<com.android.server.content.SyncOperation: void <init>(com.android.server.content.SyncOperation,long)>
<com.android.server.NativeDaemonEvent: void checkCode(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelPeeked()>
<com.android.systemui.statusbar.phone.ScrimController: void animateGoingToFullShade(long,long)>
<com.android.server.audio.MediaFocusControl: void <init>(android.os.Looper,android.content.Context,com.android.server.audio.AudioService.VolumeController,com.android.server.audio.AudioService)>
<com.android.systemui.statusbar.policy.HeadsUpManager: int compare(com.android.systemui.statusbar.NotificationData.Entry,com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.statusbar.policy.AccessibilityController: void addStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback)>
<com.android.server.MmsServiceBroker: void systemRunning()>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.BluetoothEventManager getEventManager()>
<com.android.server.statusbar.StatusBarManagerService: void showRecentApps(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabled()>
<com.android.server.pm.PackageManagerService: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>
<com.android.server.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: java.lang.String getCurrentMediaNotificationKey()>
<com.android.systemui.statusbar.ActivatableNotificationView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.views.SystemBarScrimViews: void startEnterRecentsAnimation()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onScanningStateChanged(boolean)>
<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String,int)>
<com.android.server.IntentResolver: java.util.ArrayList findFilters(android.content.IntentFilter)>
<com.android.server.DropBoxManagerService: void <init>(android.content.Context,java.io.File)>
<com.android.server.InputMethodManagerService: void onServiceDisconnected(android.content.ComponentName)>
<com.android.systemui.qs.tiles.WifiTile: void setListening(boolean)>
<com.android.server.location.ComprehensiveCountryDetector: void stop()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isUserLocked()>
<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()>
<com.android.systemui.statusbar.phone.UserAvatarView: void drawableStateChanged()>
<com.android.server.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()>
<android.graphics.Shader_Delegate: android.graphics.Shader.TileMode getTileMode(int)>
<android.content.res.TypedArray_Delegate: boolean getValueAt(android.content.res.TypedArray,int,android.util.TypedValue)>
<com.android.server.usb.UsbService: void setCurrentFunction(java.lang.String)>
<com.android.gallery3d.exif.ExifTag: long forceGetValueAsLong(long)>
<com.android.printspooler.model.RemotePrintDocument: void finish()>
<com.android.uiautomator.core.UiDevice: int getDisplayRotation()>
<android.view.IWindowManagerImpl: void closeSystemDialogs(java.lang.String)>
<com.android.systemui.qs.QSDetailItems: void onConfigurationChanged(android.content.res.Configuration)>
<javax.microedition.khronos.opengles.GL10: void glDisable(int)>
<com.android.server.audio.AudioService: boolean isSpeakerphoneOn()>
<com.android.systemui.statusbar.policy.HotspotController: boolean isHotspotSupported()>
<javax.microedition.khronos.opengles.GL11Ext: void glEnable(int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void boostScreenBrightness(long)>
<com.android.future.usb.UsbAccessory: java.lang.String getSerial()>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.content.SyncStorageEngine: java.util.List getPeriodicSyncs(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getCombinedChildId(long,long)>
<com.android.settingslib.animation.AppearAnimationUtils: android.view.animation.Interpolator getInterpolator()>
<com.android.uiautomator.core.UiDevice: boolean isNaturalOrientation()>
<com.android.layoutlib.bridge.impl.GcSnapshot: void setTransform(java.awt.geom.AffineTransform)>
<com.android.keyguard.KeyguardHostView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.util.SparseWeakArray: java.lang.Object get(long,java.lang.Object)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean,boolean,boolean)>
<com.android.systemui.settings.ToggleSlider: void setMax(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean shouldSwallowClick(java.lang.String)>
<com.android.server.audio.MediaFocusControl: void dispatchMediaKeyEvent(android.view.KeyEvent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glStencilOp(int,int,int)>
<com.android.systemui.statusbar.NotificationBigMediaNarrowViewWrapper: void <init>(android.content.Context,android.view.View)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void <init>(long,java.nio.ByteBuffer)>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(java.lang.String)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitFormalTypeParameter(java.lang.String)>
<com.android.uiautomator.core.UiObject: boolean clickTopLeft()>
<com.android.server.location.GpsNavigationMessageProvider: com.android.server.location.RemoteListenerHelper.ListenerOperation getHandlerOperation(int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>
<com.android.server.IntentResolver: java.util.List queryIntentFromList(android.content.Intent,java.lang.String,boolean,java.util.ArrayList,int)>
<javax.obex.ObexTransport: java.io.DataOutputStream openDataOutputStream()>
<com.android.systemui.recents.views.ViewPool: void <init>(android.content.Context,com.android.systemui.recents.views.ViewPool.ViewPoolConsumer)>
<com.android.server.wm.PointerEventDispatcher: void onInputEvent(android.view.InputEvent)>
<com.android.uiautomator.core.UiWatcher: boolean checkForCondition()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: android.view.View getLeftPreview()>
<com.android.server.location.MockProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.screenshot.TakeScreenshotService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.fingerprint.FingerprintService: void handleError(long,int)>
<com.android.settingslib.animation.AppearAnimationUtils: float getStartTranslation()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onStartedGoingToSleep(int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>
<com.android.server.am.ActivityManagerService: android.os.IBinder newUriPermissionOwner(java.lang.String)>
<com.android.server.usage.AppIdleHistory: void addEntry(java.lang.String,int,boolean,long)>
<android.graphics.ComposeShader_Delegate: java.lang.String getSupportMessage()>
<com.android.server.AppOpsService.Callback: void binderDied()>
<com.android.settingslib.bluetooth.LocalBluetoothManager.BluetoothManagerCallback: void onBluetoothManagerInitialized(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void verifyIntentFilter(int,int,java.util.List)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setOnEndRunnable(java.lang.Runnable)>
<com.android.systemui.assist.AssistOrbView: void startEnterAnimation()>
<com.android.systemui.statusbar.tv.TvStatusBar: void appTransitionPending()>
<com.android.systemui.qs.tiles.CastTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.server.NativeDaemonEvent: java.lang.String[] filterMessageList(com.android.server.NativeDaemonEvent[],int)>
<com.android.server.am.ActivityStackSupervisor: void startBackgroundUserLocked(int,com.android.server.am.UserState)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dismiss()>
<com.android.gallery3d.exif.ExifTag: int getOffset()>
<com.android.systemui.recents.views.TaskStackView: void startDismissAllAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean hasProfileOwner()>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbAccessory getAccessory(android.content.Intent)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchWindowShown()>
<com.android.gallery3d.exif.ExifInterface: java.io.OutputStream getExifWriterStream(java.io.OutputStream)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void beginRenderTarget(com.android.gallery3d.glrenderer.RawTexture)>
<com.android.server.Watchdog: com.android.server.Watchdog getInstance()>
<com.android.documentsui.ColumnAdapter: void <init>(android.widget.ListAdapter,com.android.documentsui.ColumnAdapter.OnItemClickListener)>
<com.android.systemui.statusbar.SignalClusterView: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int)>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getTagStringValue(int,int)>
<com.android.server.notification.NotificationRecord: boolean isCategory(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintAcquired()>
<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder,boolean)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setVisible(boolean)>
<com.android.documentsui.RecentLoader.RecentTask: void run()>
<com.android.systemui.statusbar.phone.PanelView: void startUnlockHintAnimation()>
<com.android.server.location.MockProvider: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateExpandSettingsPanel()>
<com.android.server.pm.PackageInstallerService: void onSecureContainersAvailable()>
<com.android.server.input.InputManagerService: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void appTransitionStarting(long,long)>
<com.android.layoutlib.bridge.bars.IconLoader: java.io.InputStream getIcon()>
<com.android.systemui.qs.QSTile: boolean shouldAnnouncementBeDelayed()>
<com.android.systemui.tuner.QsTuner: void onDestroyView()>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine newTestInstance(android.content.Context)>
<com.android.uiautomator.core.Configurator: long getWaitForSelectorTimeout()>
<com.android.systemui.settings.BrightnessController: void onInit(com.android.systemui.settings.ToggleSlider)>
<com.android.server.wm.WindowManagerService: void addTask(int,int,boolean)>
<com.android.systemui.statusbar.NotificationContentView: android.view.View getExpandedChild()>
<com.android.server.audio.AudioService.VolumeStreamState: void readSettings()>
<com.android.commands.svc.UsbCommand: void run(java.lang.String[])>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: boolean hasTasks()>
<com.android.layoutlib.bridge.impl.ParserFactory: org.xmlpull.v1.XmlPullParser instantiateParser(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onTrackingStopped(boolean)>
<com.android.server.am.ActivityManagerService: boolean unbindService(android.app.IServiceConnection)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void bindCameraPrewarmService()>
<com.android.server.pm.PreferredComponent: void dump(java.io.PrintWriter,java.lang.String,java.lang.Object)>
<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
<com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener: void onOptionsClosed()>
<com.android.systemui.usb.UsbConfirmActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isZenAvailable()>
<com.android.server.wm.WindowManagerService: void notifyActivityDrawnForKeyguard()>
<com.android.documentsui.model.DocumentInfo: boolean isDeleteSupported()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isRemovingAdmin(android.content.ComponentName,int)>
<com.android.server.job.controllers.StateController: void deviceIdleModeChanged(boolean)>
<com.android.systemui.statusbar.phone.PanelBar: void go(int)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.KeyguardMonitor getKeyguardMonitor()>
<javax.obex.ObexTransport: java.io.OutputStream openOutputStream()>
<com.android.externalstorage.ExternalStorageProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.systemui.statusbar.BaseStatusBar: void setNotificationsShown(java.lang.String[])>
<com.android.printspooler.widget.CustomErrorEditText: java.lang.CharSequence getError()>
<com.android.keyguard.KeyguardSimPukView: int getPasswordTextViewId()>
<com.android.systemui.qs.DataUsageGraph: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.QSTile: void handleSecondaryClick()>
<com.android.server.notification.ConditionProviders: void setCallback(com.android.server.notification.ConditionProviders.Callback)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getPhonebookPermissionChoice()>
<com.android.location.provider.FusedLocationHardwareSink: void onLocationAvailable(android.location.Location[])>
<com.android.server.usb.UsbMidiDevice: void close()>
<com.android.server.content.SyncStorageEngine: void stopSyncEvent(long,long,java.lang.String,long,long)>
<android.view.IWindowManagerImpl: boolean isViewServerRunning()>
<com.android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onActivated(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()>
<com.android.tools.layoutlib.java.Charsets: byte[] toBigEndianUtf16Bytes(char[],int,int)>
<com.android.server.notification.ManagedServices: boolean isComponentEnabledForPackage(java.lang.String)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void tearDown()>
<com.android.server.notification.CountdownConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.android.systemui.statusbar.policy.DeadZone: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.NotificationData.Environment: java.lang.String getCurrentMediaNotificationKey()>
<com.android.systemui.statusbar.phone.LockIcon: void setDeviceInteractive(boolean)>
<com.android.systemui.power.PowerNotificationWarnings: void update(int,int,long)>
<com.android.printspooler.ui.PageAdapter: void <init>(android.content.Context,com.android.printspooler.ui.PageAdapter.ContentCallbacks,com.android.printspooler.ui.PageAdapter.PreviewArea)>
<com.android.server.job.controllers.AppIdleController: void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.server.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
<android.content.res.BridgeTypedArray: java.lang.String toString()>
<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getRational(int)>
<com.android.server.policy.PhoneWindowManager: void hideBootMessages()>
<com.android.systemui.statusbar.CommandQueue: void showRecentApps(boolean)>
<com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>
<com.android.server.print.PrintManagerService: void onStopUser(int)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onEffectsSupressorChanged()>
<com.android.systemui.recents.model.Task.TaskKey: boolean equals(java.lang.Object)>
<com.android.server.am.ActivityManagerService: void startLockTaskModeOnCurrent()>
<com.android.wallpapercropper.WallpaperCropActivity: void onDestroy()>
<com.android.layoutlib.bridge.impl.RenderDrawable: void <init>(com.android.ide.common.rendering.api.DrawableParams)>
<com.android.server.pm.PackageInstallerService: android.util.ArraySet newArraySet(java.lang.Object[])>
<com.android.systemui.statusbar.policy.SplitClockView: void onDetachedFromWindow()>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList getTasks()>
<com.android.server.pm.PackageKeySetData: void setAliases(android.util.ArrayMap)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onClosingFinished()>
<com.android.server.pm.PackageManagerService: void installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isHeadsUp(java.lang.String)>
<com.android.server.ConnectivityService: int registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>
<com.android.systemui.statusbar.NotificationContentView: int getMinHeight()>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getApplicationLabel(android.content.Intent,int)>
<android.content.res.BridgeTypedArray: void setTheme(android.content.res.Resources.Theme)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onStateChanged(java.lang.String,int)>
<com.android.systemui.recents.model.FilteredTaskList: boolean contains(com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.StatusBarIconView: void onRtlPropertiesChanged(int)>
<com.android.systemui.statusbar.phone.IconMerger: void onMeasure(int,int)>
<com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void createMenuPopup()>
<com.android.server.location.LocationProviderProxy: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Bitmap getThumbnail(android.app.ActivityManager,int)>
<com.android.gallery3d.exif.ExifTag: long[] getValueAsLongs()>
<com.android.systemui.recents.RecentsActivity: void onScreenPinningRequest()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getMinStackHeight()>
<com.android.server.voiceinteraction.DatabaseHelper: android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel getKeyphraseSoundModel(int,int,java.lang.String)>
<com.android.server.notification.ConditionProviders: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.server.job.controllers.JobStatus: android.content.ComponentName getServiceComponent()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>
<android.animation.AnimationThread: com.android.ide.common.rendering.api.Result preAnimation()>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String getSlot()>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: android.view.Display getDefaultDisplay()>
<com.android.systemui.egg.MLand: float getGameTime()>
<com.android.server.input.InputManagerService: void tryPointerSpeed(int)>
<com.android.server.am.ActivityManagerService: void forceStopPackage(java.lang.String,int)>
<com.android.server.notification.ManagedServices: void onPackagesChanged(boolean,java.lang.String[])>
<com.android.systemui.statusbar.policy.KeyButtonRipple: float getGlowScale()>
<com.android.keyguard.KeyguardPasswordView: void resetPasswordText(boolean)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onStartedGoingToSleep(int)>
<com.android.systemui.statusbar.phone.ScrimController: void setDozeBehindAlpha(float)>
<com.android.server.pm.PackageManagerService: int checkUidSignatures(int,int)>
<com.android.server.pm.UserManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.location.provider.LocationRequestUnbundled: java.lang.String toString()>
<com.android.fakeoemfeatures.FakeBackgroundService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>
<com.android.server.wm.WindowManagerService: void getWindowDisplayFrame(com.android.server.wm.Session,android.view.IWindow,android.graphics.Rect)>
<com.android.server.am.ActivityManagerService: void finishHeavyWeightApp()>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<com.android.server.location.GeofenceState: void <init>(android.location.Geofence,long,int,int,java.lang.String,android.app.PendingIntent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.View getChildAtPosition(android.view.MotionEvent)>
<com.android.server.statusbar.StatusBarManagerService: void onPanelHidden()>
<com.android.printspooler.widget.PrintContentView: void setOptionsStateChangeListener(com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener)>
<com.android.server.location.FlpHardwareProvider: android.location.IFusedGeofenceHardware getGeofenceHardware()>
<com.android.systemui.SwipeHelper: void dismissChild(android.view.View,float,java.lang.Runnable,long,boolean,long)>
<com.android.settingslib.bluetooth.HidProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.media.remotedisplay.RemoteDisplay: void setName(java.lang.String)>
<com.android.server.notification.ConditionProviders: boolean isSystemProviderEnabled(java.lang.String)>
<javax.obex.ServerOperation: boolean sendReply(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void cancelExpandHelper()>
<com.android.systemui.qs.UsageTracker: void reset()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void notificationLightPulse(int,int,int)>
<com.android.server.ConnectivityService: android.net.ProxyInfo getGlobalProxy()>
<com.android.systemui.DessertCaseView: void onSizeChanged(int,int,int,int)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getTileSize()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: boolean connect(com.android.settingslib.wifi.AccessPoint)>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context)>
<com.android.server.fingerprint.FingerprintService: int startPostEnroll(android.os.IBinder)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.Result getViewIndex(java.lang.Object)>
<com.android.server.wallpaper.WallpaperManagerService: void setWallpaperComponent(android.content.ComponentName)>
<com.android.uiautomator.testrunner.TestCaseCollector: void addTestClass(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int,boolean,boolean,float)>
<com.android.location.provider.LocationProviderBase: void onDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeType(int)>
<com.android.server.pm.PackageInstallerService: void onPrivateVolumeMounted(java.lang.String)>
<com.android.location.fused.FusedLocationService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.job.controllers.StateController: void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)>
<android.animation.AnimationThread: void <init>(com.android.layoutlib.bridge.impl.RenderSessionImpl,java.lang.String,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void setHeadsUpAppearHeightBottom(int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void refreshLayout(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getBottomStackPeekSize()>
<com.android.systemui.recents.views.RecentsView: boolean launchFocusedTask()>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void removeView(android.view.View)>
<com.android.documentsui.model.RootInfo: android.graphics.drawable.Drawable loadDrawerIcon(android.content.Context)>
<com.android.printspooler.model.RemotePrintDocument: boolean update(android.print.PrintAttributes,android.print.PageRange[],boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.View getLastChildNotGone()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentPosttimeMs()>
<com.android.server.notification.EventConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void fadeKeyguardAfterLaunchTransition(java.lang.Runnable,java.lang.Runnable)>
<com.android.systemui.keyguard.KeyguardViewMediator: void dismiss()>
<com.android.keyguard.EmergencyButton: void <init>(android.content.Context)>
<com.android.documentsui.SectionedListAdapter.SectionAdapter: android.view.View getHeaderView(android.view.View,android.view.ViewGroup)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setUserInfoController(com.android.systemui.statusbar.policy.UserInfoController)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int compareTo(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.gallery3d.exif.ExifInterface: int defineTag(int,short)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void keyguardDone(boolean,boolean)>
<com.android.systemui.recents.Recents: void notifyVisibilityChanged(android.content.Context,com.android.systemui.recents.misc.SystemServicesProxy,boolean)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setClickable(boolean)>
<com.android.settingslib.wifi.AccessPoint: int getLevel()>
<com.android.systemui.qs.QSTileView: void handleStateChanged(com.android.systemui.qs.QSTile.State)>
<com.android.server.usb.UsbDebuggingManager: void <init>(android.content.Context)>
<android.graphics.BlendComposite: float getAlpha()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void closeQsDetail()>
<com.android.gallery3d.glrenderer.UploadedTexture: int getHeight()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isPanelFullyCollapsed()>
<com.android.systemui.recents.views.RecentsView: void setSearchBar(com.android.systemui.recents.RecentsAppWidgetHostView)>
<com.android.server.media.projection.MediaProjectionManagerService: void onSwitchUser(int)>
<com.android.server.am.BatteryStatsService: void noteWifiState(int,java.lang.String)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.job.controllers.BatteryController: void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.gallery3d.glrenderer.UploadedTexture: void resetUploadLimit()>
<com.android.server.DeviceIdleController: void exitIdleInternal(java.lang.String)>
<com.android.server.policy.PhoneWindowManager: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<com.android.systemui.SwipeHelper: void snapChild(android.view.View,float)>
<com.android.documentsui.model.Durable: void read(java.io.DataInputStream)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,android.graphics.RectF,android.graphics.RectF)>
<com.android.server.accessibility.AccessibilityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<com.android.server.ConnectivityService: boolean isActiveNetworkMetered()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void <init>(com.android.ide.common.rendering.api.ResourceReference,com.android.ide.common.rendering.api.AdapterBinding,com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.android.server.location.FlpHardwareProvider: android.hardware.location.IFusedLocationHardware getLocationHardware()>
<com.android.uiautomator.core.UiDevice: java.lang.String getProductName()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isVisible(android.service.notification.StatusBarNotification)>
<com.android.server.NetworkManagementService: java.lang.String[] listTtys()>
<com.android.systemui.volume.VolumeDialogMotion: void startShow()>
<com.android.keyguard.KeyguardSecurityContainer: void onFinishInflate()>
<com.android.server.content.SyncStorageEngine: boolean isSyncPending(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.server.am.DumpHeapProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<javax.obex.ServerOperation: int getResponseCode()>
<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>
<com.android.keyguard.KeyguardPasswordView: void onPause()>
<com.android.server.twilight.TwilightManager: void registerListener(com.android.server.twilight.TwilightListener,android.os.Handler)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onOverscrolled(float,float,int)>
<com.android.systemui.recents.views.TaskView: boolean isFocusedTask()>
<com.android.server.content.SyncStorageEngine: void setPeriodicSyncTime(int,android.content.PeriodicSync,long)>
<com.android.server.pm.Policy: boolean hasInnerPackages()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void removeIcon(java.lang.String,int,int)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void setListening(boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void deleteBuffer(int)>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(int,boolean)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void performDeferredDestroy(android.view.IWindow)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void goToSleep(long,int,int)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void appTransitionCancelled()>
<com.android.systemui.statusbar.policy.SignalController: void dump(java.io.PrintWriter)>
<com.android.pacprocessor.PacService: void onDestroy()>
<com.android.keyguard.KeyguardAbsKeyInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.tiles.DndTile: java.lang.String composeChangeAnnouncement()>
<com.android.settingslib.animation.AppearAnimationUtils: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPulseOnNotifications()>
<com.android.server.am.ActivityManagerService: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<com.android.server.am.ActivityManagerService: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>
<com.android.server.usage.UnixCalendar: void truncateTo(com.android.server.usage.UnixCalendar,int)>
<com.google.android.maps.MapView: boolean isStreetView()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: void flingToHeight(float,boolean,float,float,boolean)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: void <init>(int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isCountdownConditionSupported()>
<com.android.documentsui.model.DocumentInfo: java.lang.String getCursorString(android.database.Cursor,java.lang.String)>
<com.android.documentsui.SectionedListAdapter: void addSection(com.android.documentsui.SectionedListAdapter.SectionAdapter)>
<com.android.server.policy.PhoneWindowManager: void getInsetHintLw(android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<com.android.server.EntropyMixer: void <init>(android.content.Context)>
<com.android.systemui.volume.ZenModePanel: void init(com.android.systemui.statusbar.policy.ZenModeController)>
<com.android.settingslib.bluetooth.PbapServerProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.settings.CurrentUserTracker: boolean isCurrentUserOwner()>
<com.android.server.content.SyncOperation: void updateEffectiveRunTime()>
<com.android.settingslib.bluetooth.PanProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(float[],int)>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivity(android.content.Intent,android.os.Bundle)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateAlpha()>
<com.android.systemui.recents.model.RecentsPackageMonitor: void onPackageModified(java.lang.String)>
<com.android.server.power.ShutdownThread: void shutdown(android.content.Context,boolean)>
<com.android.systemui.statusbar.NotificationData.Entry: void notifyFullScreenIntentLaunched()>
<com.android.documentsui.RootsFragment: void onActivityCreated(android.os.Bundle)>
<com.android.wallpapercropper.WallpaperCropActivity: boolean enableRotation()>
<com.android.server.usb.UsbService: void clearDefaults(java.lang.String,int)>
<com.android.systemui.BatteryMeterView: void onDetachedFromWindow()>
<com.android.server.wm.WindowManagerService: void removeStack(int)>
<com.android.systemui.statusbar.phone.ScrimController: void setBouncerShowing(boolean)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void onConfigurationChanged()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: boolean getAttributeBooleanValue(int,boolean)>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.tv.TvStatusBar: void animateCollapsePanels(int)>
<com.android.server.policy.PhoneWindowManager: int windowTypeToLayerLw(int)>
<com.android.printspooler.model.PageContentRepository: void open(android.os.ParcelFileDescriptor,com.android.printspooler.model.OpenDocumentCallback)>
<com.android.server.notification.NotificationUsageStats: org.json.JSONObject dumpJson(com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.recents.views.DebugOverlayView: void onFinishInflate()>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.FlingAnimationUtils: void applyDismissing(android.view.ViewPropertyAnimator,float,float,float,float)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy build()>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(java.lang.String)>
<com.android.systemui.statusbar.policy.DeadZone: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.policy.EnableAccessibilityController: boolean canEnableAccessibilityViaGesture(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: boolean flingExpands(float,float,float,float)>
<com.android.server.AppOpsService: void systemReady()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onDisconnect(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.server.policy.PhoneWindowManager: void setSafeMode(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isBouncerShowing()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.server.pm.PermissionsState: java.util.List getInstallPermissionStates()>
<com.android.server.location.LocationBlacklist: boolean isBlacklisted(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
<com.android.server.accounts.IAccountAuthenticatorCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void startManagedQuickContact(java.lang.String,long,android.content.Intent)>
<com.android.server.am.ActivityManagerService: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<com.android.server.location.LocationRequestStatistics: void stopRequesting(java.lang.String,java.lang.String)>
<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>
<com.android.server.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>
<com.android.systemui.usb.UsbStorageActivity: void onDestroy()>
<com.android.systemui.keyboard.KeyboardUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(int)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: boolean isHotspotEnabled()>
<com.android.server.pm.PermissionsState: void <init>(com.android.server.pm.PermissionsState)>
<com.android.location.fused.FusionEngine.Callback: void reportLocation(android.location.Location)>
<com.android.keyguard.EmergencyCarrierArea: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.midi.MidiService: void registerListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxOES(int,int,int,int,int)>
<com.android.systemui.statusbar.phone.PanelBar: boolean panelsEnabled()>
<com.android.server.notification.ManagedServices: void settingRestored(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.gallery3d.common.Utils: float clamp(float,float,float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>
<com.android.server.pm.PackageInstallerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService)>
<com.android.settingslib.wifi.AccessPoint: int getSecurity()>
<com.android.server.notification.ScheduleConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.settingslib.wifi.WifiTracker: void forceScan()>
<com.android.documentsui.SortingCursorWrapper: boolean onMove(int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void setEntry(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.documentsui.FilteringCursorWrapper: int getCount()>
<com.android.server.location.GpsLocationProvider: java.lang.String getName()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onScreenTurningOn()>
<com.android.server.notification.NotificationRecord: android.os.UserHandle getUser()>
<com.android.printspooler.ui.PrintActivity: boolean canCloseOptions()>
<com.android.systemui.statusbar.policy.SecurityController: boolean isVpnEnabled()>
<com.android.server.display.DisplayManagerService: void onStart()>
<com.android.gallery3d.common.Utils: java.lang.String ensureNotNull(java.lang.String)>
<com.android.server.LocationManagerService: void clearTestProviderStatus(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void updateNoSims()>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,android.os.Looper,boolean,boolean,boolean)>
<com.android.server.SystemServiceManager: void startUser(int)>
<javax.obex.BaseStream: void ensureNotDone()>
<com.android.server.pm.Installer: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardPasswordView: int getPromtReasonStringRes(int)>
<javax.obex.ServerOperation: int getHeaderLength()>
<com.android.server.NetworkScoreService: void disableScoring()>
<com.android.tools.layoutlib.create.AsmGenerator: void setDeps(java.util.Map)>
<com.android.systemui.statusbar.policy.ZenModeController: android.service.notification.ZenModeConfig getConfig()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isDismissViewNotGone()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getTopPadding()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onClick(android.view.View)>
<com.android.settingslib.bluetooth.A2dpProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsLocked()>
<com.android.systemui.SwipeHelper.Callback: android.view.View getChildAtPosition(android.view.MotionEvent)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.BluetoothController getBluetoothController()>
<com.android.server.wm.WindowManagerService: int watchRotation(android.view.IRotationWatcher)>
<com.android.keyguard.KeyguardAbsKeyInputView: int getPromtReasonStringRes(int)>
<android.widget.Toolbar_Accessor: android.content.Context getPopupContext(android.widget.Toolbar)>
<com.android.server.NetworkManagementService: void setPermission(java.lang.String,int[])>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void removeCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<com.android.server.job.controllers.BatteryController: void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void restore()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<com.android.server.wm.WindowManagerService: void performDeferredDestroyWindow(com.android.server.wm.Session,android.view.IWindow)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setTrackingHeadsUp(boolean)>
<com.android.systemui.recents.views.TaskStackView: boolean hasPreferredData(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: int getCount()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>
<com.android.nfc_extras.NfcAdapterExtras: java.lang.String getDriverName()>
<com.android.server.am.ActivityManagerService: boolean convertFromTranslucent(android.os.IBinder)>
<com.android.keyguard.KeyguardPatternView: void onResume(int)>
<com.android.systemui.Prefs: long getLong(android.content.Context,java.lang.String,long)>
<com.android.systemui.doze.DozeService: void onAttachedToWindow()>
<com.android.settingslib.applications.ApplicationsState.AppEntry: java.lang.String getVersion(android.content.Context)>
<com.android.printspooler.ui.FusedPrintersProvider: void onReset()>
<com.android.server.am.ActivityManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>
<com.android.systemui.recents.views.TaskViewHeader: int[] onCreateDrawableState(int)>
<com.android.server.notification.RankingHelper: void sort(java.util.ArrayList)>
<com.android.systemui.statusbar.policy.RotationLockController: void addRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<com.android.systemui.recents.views.TaskStackView: void prepareViewToLeavePool(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task,boolean)>
<android.graphics.LightingColorFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: boolean isEnabled(int)>
<com.android.photos.DumbBitmapRegionDecoder: int getWidth()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean flingExpands(float,float,float,float)>
<com.android.documentsui.PickFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.gallery3d.exif.ExifTag: void getBytes(byte[],int,int)>
<com.android.server.camera.CameraService: void <init>(android.content.Context)>
<com.android.server.wm.PointerEventDispatcher: void unregisterInputEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<com.android.systemui.statusbar.stack.AmbientState: void setSpeedBumpIndex(int)>
<javax.obex.PrivateOutputStream: void write(int)>
<com.android.printspooler.ui.PrinterRegistry: java.util.List getPrinters()>
<com.android.server.location.PassiveProvider: void enable()>
<com.android.server.SystemService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinVoiceSecure()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>
<com.android.server.pm.PersistentPreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PersistentPreferredActivity)>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.systemui.RecentsComponent: void toggleRecents(android.view.Display,int,android.view.View)>
<com.android.server.usb.UsbHostManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager)>
<com.android.systemui.statusbar.policy.CastController: void removeCallback(com.android.systemui.statusbar.policy.CastController.Callback)>
<android.hardware.location.IActivityRecognitionHardwareClient: void onAvailabilityChanged(boolean,android.hardware.location.IActivityRecognitionHardware)>
<com.android.server.audio.AudioService.VolumeStreamState: void applyDeviceVolume_syncVSS(int)>
<com.android.documentsui.DirectoryFragment: void onResume()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionPending()>
<com.android.server.pm.PackageManagerService: boolean shouldShowRequestPermissionRationale(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onStartedWakingUp()>
<com.android.systemui.statusbar.tv.TvStatusBar: boolean isSnoozedPackage(android.service.notification.StatusBarNotification)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setSubtitle(java.lang.CharSequence)>
<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>
<android.graphics.Paint_Delegate: android.graphics.Shader_Delegate getShader()>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,float[],int)>
<com.android.documentsui.DirectoryContainerView: void <init>(android.content.Context)>
<com.android.server.camera.CameraService: void onStart()>
<com.android.server.am.BatteryStatsService: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>
<javax.obex.ServerRequestHandler: void onAuthenticationFailure(byte[])>
<com.android.keyguard.KeyguardUpdateMonitor: void reportSimUnlocked(int)>
<android.util.BridgeXmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.GestureRecorder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int,java.lang.String)>
<com.android.systemui.qs.QSTile: void showDetail(boolean)>
<com.android.settingslib.bluetooth.HeadsetProfile: java.util.List getConnectedDevices()>
<com.android.systemui.qs.SecureSetting: void onChange(boolean)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void setCurrentUser(int)>
<com.android.systemui.SwipeHelper: void dismissChild(android.view.View,float)>
<com.android.server.GraphicsStatsService: android.os.ParcelFileDescriptor requestBufferForProcess(java.lang.String,android.os.IBinder)>
<com.android.keyguard.KeyguardPatternView: void showMessage(java.lang.String,int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isMediaNotification(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.server.am.ActivityManagerService: boolean requestVisibleBehind(android.os.IBinder,boolean)>
<com.android.server.am.ActivityManagerService: void performIdleMaintenance()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
<com.android.server.power.SuspendBlocker: void acquire()>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getUserComment()>
<com.android.server.policy.PhoneWindowManager: void showBootMessage(java.lang.CharSequence,boolean)>
<com.android.keyguard.KeyguardStatusView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int)>
<com.android.server.audio.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>
<com.android.server.IntentResolver: android.content.IntentFilter[] newArray(int)>
<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()>
<com.android.systemui.statusbar.ExpandableView: int getMinHeight()>
<javax.obex.PasswordAuthentication: byte[] getPassword()>
<com.android.layoutlib.bridge.Bridge.StaticMethodNotImplementedException: void <init>(java.lang.String)>
<com.android.systemui.recents.model.TaskStack: int indexOfTask(com.android.systemui.recents.model.Task)>
<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)>
<com.android.settingslib.bluetooth.HidProfile: void finalize()>
<com.android.server.TextServicesManagerService: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<com.android.server.audio.AudioService: void unregisterAudioFocusClient(java.lang.String)>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightChanged(boolean)>
<com.android.mediadrm.signer.MediaDrmSigner: com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest getCertificateRequest(android.media.MediaDrm,int,java.lang.String)>
<com.android.photos.views.TiledImageView: boolean isTilingSupported()>
<com.android.systemui.keyguard.KeyguardViewMediator: void setOccluded(boolean)>
<com.android.server.am.ActivityManagerService: void activityPaused(android.os.IBinder)>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightChanged(boolean)>
<com.android.server.wm.WindowManagerService: void shutdown(boolean)>
<com.android.layoutlib.bridge.bars.Config: int getTimeColor(int)>
<com.android.gallery3d.glrenderer.GLPaint: void setColor(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void reset()>
<com.android.server.updates.ConfigUpdateInstallReceiver: void writeUpdate(java.io.File,java.io.File,byte[])>
<com.android.keyguard.PasswordTextView: java.lang.String getText()>
<com.android.systemui.recents.model.Task.TaskKey: int hashCode()>
<com.android.keyguard.KeyguardHostView: boolean handleBackKey()>
<com.android.systemui.egg.MLand: float clamp(float)>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onWifiStateChanged(int)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.recents.views.AnimateableViewBounds: void setClipBottom(int)>
<com.android.server.policy.WindowOrientationListener: void setCurrentRotation(int)>
<com.android.systemui.statusbar.ScrimView: void setViewAlpha(float)>
<com.android.server.wm.WindowManagerService: boolean isHardKeyboardAvailable()>
<com.android.gallery3d.exif.ExifInterface: boolean setTagValue(int,java.lang.Object)>
<com.android.systemui.statusbar.policy.ScrollAdapter: android.view.View getHostView()>
<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream,boolean)>
<com.android.server.content.SyncStorageEngine: void clearAndReadState()>
<android.graphics.DashPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean canCameraGestureBeLaunched(boolean)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setEmergencyCallsOnly(boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean canChildBeExpanded(android.view.View)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setTrackingHeadsUp(boolean)>
<com.android.fakeoemfeatures.FakeBackgroundService: void onCreate()>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.State getState()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setPanelVisible(boolean)>
<com.android.server.pm.PackageInstallerService: void systemReady()>
<com.android.server.policy.PhoneWindowManager: void selectRotationAnimationLw(int[])>
<com.android.systemui.qs.tiles.UserDetailView: com.android.systemui.qs.tiles.UserDetailView inflate(android.content.Context,android.view.ViewGroup,boolean)>
<com.android.systemui.volume.ZenModePanel: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.pm.PackageManagerService: void freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>
<com.android.systemui.statusbar.phone.PanelView: void onExpandingStarted()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceOwner()>
<com.android.server.policy.PhoneWindowManager: boolean hasNavigationBar()>
<com.android.systemui.qs.tiles.DndTile: void setListening(boolean)>
<com.android.server.firewall.SenderPackageFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>
<com.android.keyguard.KeyguardHostView: boolean dismiss()>
<com.android.keyguard.KeyguardPatternView: void cleanUp()>
<com.android.server.am.ActivityManagerService: boolean isImmersive(android.os.IBinder)>
<com.android.systemui.qs.QSTileView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.policy.PhoneWindowManager: int getConfigDisplayWidth(int,int,int)>
<com.android.gallery3d.glrenderer.GLCanvas: void multiplyMatrix(float[],int)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void init()>
<com.android.systemui.statusbar.phone.ActivityStarter.Callback: void onActivityStarted(int)>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void notifyKeyguardAuthenticated(boolean)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onStartedGoingToSleep(int)>
<com.android.gallery3d.glrenderer.UploadedTexture: int getWidth()>
<com.android.printspooler.ui.PrintActivity: void onPause()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int nextTag()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setPhoneStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByLPr(java.lang.String,com.android.server.pm.KeySetHandle)>
<javax.obex.ServerOperation: void close()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void crash(java.lang.String)>
<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openWrite(java.lang.String,long,long)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector scrollable(boolean)>
<com.android.server.InputMethodManagerService: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
<com.android.server.pm.PermissionsState.PermissionState: java.lang.String getName()>
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchDragEvent(android.view.DragEvent)>
<com.android.keyguard.KeyguardSecurityViewFlipper: com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.server.content.SyncStorageEngine: void setDelayUntilTime(com.android.server.content.SyncStorageEngine.EndPoint,long)>
<com.android.systemui.qs.tiles.HotspotTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setSystemUiVisibility(int,int)>
<com.android.systemui.usb.UsbConfirmActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.view.IWindowManagerImpl: int getBaseDisplayDensity(int)>
<com.android.server.connectivity.NetworkAgentInfo: void <init>(android.os.Messenger,com.android.internal.util.AsyncChannel,android.net.Network,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.content.Context,android.os.Handler,android.net.NetworkMisc,android.net.NetworkRequest,com.android.server.ConnectivityService)>
<com.android.server.content.SyncManager: void dumpSyncState(java.io.PrintWriter)>
<com.android.server.audio.AudioService: void setBluetoothA2dpOnInt(boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setTemporaryScreenBrightnessSettingOverride(int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Bitmap getTaskThumbnail(int)>
<com.android.server.notification.ScheduleConditionProvider: void onConnected()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<com.android.keyguard.KeyguardPasswordView: void onResume(int)>
<com.android.gallery3d.exif.ExifTag: byte[] getValueAsBytes()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<com.android.systemui.recents.RecentsConfiguration: void updateOnConfigurationChange()>
<com.android.server.pm.Installer: int createUserData(java.lang.String,int,int,java.lang.String)>
<com.android.server.pm.PermissionsState: int revokeRuntimePermission(com.android.server.pm.BasePermission,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts(int)>
<com.android.systemui.statusbar.phone.BounceInterpolator: float getInterpolation(float)>
<com.android.systemui.qs.tiles.LocationTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.server.am.ActivityManagerService: boolean isBackgroundVisibleBehind(android.os.IBinder)>
<com.android.systemui.recents.views.AnimateableViewBounds: void getOutline(android.view.View,android.graphics.Outline)>
<com.android.uiautomator.testrunner.UiAutomatorTestCaseFilter: boolean accept(java.lang.reflect.Method)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isVpnEnabled()>
<com.android.keyguard.KeyguardPatternView: void showPromptReason(int)>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: void initializeCurve()>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.server.policy.PhoneWindowManager: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy.WindowState,int,boolean)>
<com.android.server.notification.CalendarTracker: void dumpContent(android.net.Uri)>
<com.android.server.wm.AppTransition: void notifyAppTransitionFinishedLocked(android.os.IBinder)>
<com.android.printspooler.model.PrintSpoolerService: void setPrintJobCancelling(android.print.PrintJobId,boolean)>
<com.android.keyguard.KeyguardHostView: void setViewMediatorCallback(com.android.keyguard.ViewMediatorCallback)>
<com.android.server.notification.ManagedServices: java.lang.String restoredSettingName(com.android.server.notification.ManagedServices.Config)>
<com.android.systemui.statusbar.phone.ActivityStarter: void startActivity(android.content.Intent,boolean,com.android.systemui.statusbar.phone.ActivityStarter.Callback)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,int[],int)>
<com.android.photos.views.BlockingGLTextureView: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>
<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getFilesDir()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean onMenuPressed()>
<com.android.systemui.recents.model.TaskGrouping: int getTaskCount()>
<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>
<com.android.systemui.qs.tiles.CastTile: int getMetricsCategory()>
<javax.obex.Authenticator: byte[] onAuthenticationResponse(byte[])>
<com.android.layoutlib.bridge.Bridge: int getApiLevel()>
<com.android.server.midi.MidiService: void unregisterDeviceServer(android.media.midi.IMidiDeviceServer)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getJavaPkgClasses()>
<com.android.systemui.statusbar.NotificationTemplateViewWrapper: void notifyContentUpdated()>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getImeSwitchButton()>
<com.android.server.am.ActivityManagerService: int[] getRunningUserIds()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
<com.android.server.job.controllers.JobStatus: boolean hasTimingDelayConstraint()>
<com.android.server.wm.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)>
<com.android.printspooler.ui.PageAdapter: void onViewRecycled(android.support.v7.widget.RecyclerView.ViewHolder)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getSystemSetting(android.content.Context,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.ClassLoader getClassLoader()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNumeric(android.content.ComponentName,int)>
<com.android.server.ConnectivityService: int tether(java.lang.String)>
<com.android.uiautomator.core.UiDevice: int getDisplayWidth()>
<com.android.documentsui.model.DocumentStack: boolean isRecents()>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightError()>
<com.android.server.policy.BarController: boolean setBarShowingLw(boolean)>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.LocationManagerService: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: void removeIcon(java.lang.String,int,int)>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelHolder: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationRecord: void copyRankingInformation(com.android.server.notification.NotificationRecord)>
<com.android.server.NativeDaemonEvent: int getCode()>
<com.android.server.ConnectivityService: void startLegacyVpn(com.android.internal.net.VpnProfile)>
<com.android.systemui.recents.views.FixedSizeImageView: boolean hasOverlappingRendering()>
<com.android.server.media.MediaRouterService: void requestUpdateVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<com.android.systemui.statusbar.NotificationContentView: int getMaxHeight()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.bluetoothmidiservice.PacketEncoder: void writeComplete()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setChildrenExpanded(boolean,boolean)>
<com.android.location.provider.ProviderPropertiesUnbundled: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glScissor(int,int,int,int)>
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJson()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setMobileDataEnabled(boolean)>
<com.android.server.wm.WindowManagerService: void getInitialDisplaySize(int,android.graphics.Point)>
<com.android.systemui.tuner.TunerService.ClearReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.documentsui.DirectoryView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterx(int,int)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setSubs(java.util.List)>
<com.android.keyguard.KeyguardPatternView: boolean hasOverlappingRendering()>
<com.android.uiautomator.core.UiDevice: boolean pressEnter()>
<com.android.server.pm.KeySetManagerService: void dumpLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService.DumpState)>
<com.android.systemui.qs.QSTile: void refreshState(java.lang.Object)>
<com.android.gallery3d.exif.ExifInterface: void setExif(java.util.Collection)>
<com.android.server.content.SyncOperation: int compareTo(java.lang.Object)>
<android.view.IWindowManagerImpl: float getCurrentAnimatorScale()>
<com.android.systemui.volume.MediaSessions: void <init>(android.content.Context,android.os.Looper,com.android.systemui.volume.MediaSessions.Callbacks)>
<android.content.res.BridgeTypedArray: java.lang.String getPositionDescription()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>
<android.graphics.AvoidXfermode_Delegate: boolean isSupported()>
<com.android.server.pm.PackageManagerService: boolean performDexOptIfNeeded(java.lang.String,java.lang.String)>
<com.android.sharedstoragebackup.SharedStorageAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<com.android.server.am.ActivityManagerService: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>
<com.android.server.pm.PackageManagerService: byte[] getPreferredActivityBackup(int)>
<com.android.server.pm.SELinuxMMAC: void setRestoreconDone()>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: void <init>(java.lang.String,java.lang.String)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintHelp(int,java.lang.String)>
<javax.obex.ClientOperation: int getResponseCode()>
<android.view.IWindowManagerImpl: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>
<android.content.res.BridgeAssetManager: android.content.res.AssetManager initSystem()>
<com.android.server.notification.ManagedServices: void unregisterService(android.os.IInterface,int)>
<com.android.server.content.SyncStorageEngine: boolean getIsTargetServiceActive(android.content.ComponentName,int)>
<com.android.server.AppOpsService.Callback: void unlinkToDeath()>
<com.android.server.content.SyncStorageEngine: void setBackoff(com.android.server.content.SyncStorageEngine.EndPoint,long,long)>
<com.android.shell.BugreportStorageProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUnlockingWithFingerprintAllowed()>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onSwipeFromRight()>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: boolean getBoolean(java.lang.String,boolean)>
<com.android.keyguard.KeyguardSimPukView: boolean confirmPin()>
<com.android.server.notification.ZenLog: void traceSetRingerModeInternal(int,int,java.lang.String,int,int)>
<com.android.commands.svc.UsbCommand: java.lang.String shortHelp()>
<com.android.systemui.volume.VolumeComponent: void register()>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void onMeasure(int,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textMatches(java.lang.String)>
<com.android.server.audio.AudioService: void setVibrateSetting(int,int)>
<android.hardware.input.ITabletModeChangedListener: void onTabletModeChanged(long,boolean)>
<com.android.systemui.statusbar.stack.AmbientState: boolean isDimmed()>
<com.android.printspooler.ui.PrintActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.settingslib.applications.ApplicationsState.Session: void pause()>
<com.android.systemui.qs.QSPanel: com.android.systemui.statusbar.phone.QSTileHost getHost()>
<com.android.tools.layoutlib.create.RefactorClassAdapter: java.lang.String renameInternalType(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void userSwitched(int)>
<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float,float)>
<com.android.server.VibratorService: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>
<com.android.systemui.recents.views.TaskStackView: void setDebugOverlay(com.android.systemui.recents.views.DebugOverlayView)>
<com.android.systemui.statusbar.stack.StackScrollState: android.view.ViewGroup getHostView()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<com.android.systemui.statusbar.phone.QSTileHost: void startActivityDismissingKeyguard(android.app.PendingIntent)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onCancel()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothSupported()>
<com.android.documentsui.RootsLoader: void onStartLoading()>
<com.android.server.AppOpsService: int noteProxyOperation(int,java.lang.String,int,java.lang.String)>
<com.android.systemui.media.NotificationPlayer: void play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void setCurrentUserId(int)>
<com.android.printspooler.widget.PrintContentView.OptionsStateController: boolean canCloseOptions()>
<com.android.settingslib.applications.ApplicationsState: void requestSize(java.lang.String,int)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void removeDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.systemui.SwipeHelper: void <init>(int,com.android.systemui.SwipeHelper.Callback,android.content.Context)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onConfigChanged(android.service.notification.ZenModeConfig)>
<com.android.server.pm.Installer: int install(java.lang.String,java.lang.String,int,int,java.lang.String)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: android.os.Bundle getParams()>
<com.android.backupconfirm.BackupRestoreConfirmation: void onCreate(android.os.Bundle)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,float[],int,int,int,int)>
<com.android.server.location.LocationBasedCountryDetector: boolean isAcceptableProvider(java.lang.String)>
<com.android.server.trust.TrustAgentWrapper: long getScheduledRestartUptimeMillis()>
<com.android.systemui.volume.VolumeComponent: void dismissNow()>
<com.android.systemui.volume.ZenModePanel.Callback: void onPrioritySettings()>
<com.android.systemui.statusbar.SignalClusterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: android.graphics.Bitmap getPreviewBitmap()>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void setup(int,int,float,int,int,int,float)>
<com.android.server.notification.NotificationRecord: java.lang.String getGlobalSortKey()>
<com.android.layoutlib.bridge.impl.GcSnapshot: int size()>
<com.android.server.pm.PreferredComponent: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>
<com.android.systemui.volume.VolumeDialogController: void <init>(android.content.Context,android.content.ComponentName)>
<com.android.server.audio.AudioService: void setMode(int,android.os.IBinder,java.lang.String)>
<com.android.documentsui.RootCursorWrapper: boolean onMove(int,int)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void computeCurrentVelocity(int)>
<com.android.server.usage.UsageStatsXml: void write(android.util.AtomicFile,com.android.server.usage.IntervalStats)>
<com.android.systemui.statusbar.policy.AccessibilityController: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setStatusBarFocusable(boolean)>
<com.android.server.am.ProcessStatsService: byte[] getCurrentStats(java.util.List)>
<com.android.wallpapercropper.CropView: void setTouchEnabled(boolean)>
<com.android.systemui.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.layoutlib.bridge.android.BridgeContext: android.graphics.drawable.Drawable getWallpaper()>
<android.net.dhcp.DhcpClient: void doQuit()>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void hideRecents(boolean,boolean)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void notifyChildrenChanged(android.view.ViewGroup)>
<javax.obex.PrivateInputStream: void close()>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: boolean contains(java.lang.String)>
<com.android.systemui.statusbar.ActivatableNotificationView: void dispatchDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onExpandingFinished()>
<com.android.server.content.SyncOperation: java.lang.Object[] toEventLog(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setHideSensitive(boolean,boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: void reportFailedStrongAuthUnlockAttempt()>
<com.android.server.accounts.AccountManagerService: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void reportDropResult(android.view.IWindow,boolean)>
<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsNavigationMessageProvider getGpsNavigationMessageProvider()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback: void onAccessPointsChanged(java.util.List)>
<com.android.server.am.BatteryStatsService: void noteJobFinish(java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setUserSetupComplete(boolean)>
<com.android.location.provider.GmsFusedBatchOptions: double getMaxPowerAllocationInMW()>
<com.android.server.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onSystemReady()>
<com.android.server.job.JobSchedulerService: void onControllerStateChanged()>
<com.android.server.am.ActivityManagerService.GrantUri: void <init>(int,android.net.Uri,boolean)>
<android.content.res.BridgeResources: boolean getBoolean(int)>
<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>
<com.android.server.tv.TvInputHal.Callback: void onDeviceUnavailable(int)>
<com.android.server.ConnectivityService: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getPermissionControllerPackageName()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkPermission(java.lang.String,int,int,android.os.IBinder)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.LayoutLog getLog()>
<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openRead(java.lang.String)>
<com.android.systemui.settings.BrightnessDialog: void onCreate(android.os.Bundle)>
<com.android.printspooler.ui.PrinterRegistry: void setOnPrintersChangeListener(com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener)>
<com.android.server.LockSettingsService.CredentialUtil: void setCredential(java.lang.String,java.lang.String,int)>
<com.android.server.pm.PreferredComponent: boolean sameSet(java.util.List)>
<com.android.server.usage.UnixCalendar: long getTimeInMillis()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<com.android.layoutlib.bridge.Bridge: boolean dispose()>
<com.android.systemui.volume.VolumeDialogController: void addCallback(com.android.systemui.volume.VolumeDialogController.Callbacks,android.os.Handler)>
<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<javax.microedition.khronos.egl.EGL10: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: int getWindowMillis()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void startKeyguardFadingAway()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshBatteryInfo(com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus)>
<com.android.server.usb.UsbDebuggingManager: void denyUsbDebugging()>
<javax.microedition.khronos.opengles.GL11: void glDrawElements(int,int,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isPanelVisibleBecauseOfHeadsUp()>
<com.android.server.pm.PackageInstallerService: void registerCallback(android.content.pm.IPackageInstallerCallback,int)>
<com.android.systemui.statusbar.phone.BarTransitions: void applyModeBackground(int,int,boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onTouchSlopExceeded()>
<com.android.systemui.statusbar.stack.StackStateAnimator: void cancelOverScrollAnimators(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void showRecentApps(boolean)>
<com.android.server.wm.WindowManagerService: void closeSystemDialogs(java.lang.String)>
<com.android.systemui.usb.UsbDebuggingActivity: void onStart()>
<android.graphics.FontFamily_Delegate: java.awt.Font getFont(int,boolean)>
<com.android.systemui.statusbar.phone.PanelView: boolean isPanelVisibleBecauseOfHeadsUp()>
<com.android.server.location.GeofenceManager: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<com.android.gallery3d.exif.Rational: void <init>(com.android.gallery3d.exif.Rational)>
<com.android.systemui.ImageWallpaper: void onCreate()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo)>
<com.android.server.policy.PhoneWindowManager: void showRecentApps()>
<com.android.server.CertBlacklister: void <init>(android.content.Context)>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiSelector getSelector()>
<com.android.server.audio.AudioService: boolean isStreamAffectedByRingerMode(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getNotificationsTopY()>
<com.android.server.am.BatteryStatsService: void noteStartGps(int)>
<com.android.server.wm.WindowManagerService: int addWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onMenuPressed()>
<com.android.printspooler.ui.SelectPrinterActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setGlowScale(float)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToHexString(int,boolean,int)>
<android.graphics.Path_Delegate: void transform(android.graphics.Matrix_Delegate,android.graphics.Path_Delegate)>
<com.android.server.am.ActivityManagerService: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>
<com.android.documentsui.SaveFragment: void show(android.app.FragmentManager,java.lang.String,java.lang.String)>
<com.android.documentsui.model.DurableUtils: byte[] writeToArrayOrNull(com.android.documentsui.model.Durable)>
<com.android.server.SystemConfig: android.util.ArrayMap getAvailableFeatures()>
<com.android.statementservice.retriever.Utils: java.util.List getCertFingerprintsFromPackageManager(java.lang.String,android.content.Context)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder addSignature(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.views.SystemBarScrimViews: void <init>(android.app.Activity,com.android.systemui.recents.RecentsConfiguration)>
<com.android.statementservice.retriever.Statement: java.lang.String toString()>
<com.android.server.pm.IntentFilterVerificationState: boolean isVerified()>
<com.android.systemui.statusbar.GestureRecorder: void tag(long,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.ServiceMonitor: void setComponent(android.content.ComponentName)>
<com.android.systemui.statusbar.stack.ViewState: void initFrom(android.view.View)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onUserSwitched(int)>
<com.android.systemui.settings.BrightnessDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int,boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.notification.EventConditionProvider: void onDestroy()>
<com.android.systemui.qs.QSTile.Host: android.content.Context getContext()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void dispatchDraw(android.graphics.Canvas)>
<com.android.commands.input.Input: void main(java.lang.String[])>
<com.android.tools.layoutlib.create.MethodAdapter: void onInvokeV(java.lang.String,boolean,java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(float[],int)>
<com.android.commands.uiautomator.Launcher: void main(java.lang.String[])>
<com.android.server.notification.NotificationRecord: long getRankingTimeMs()>
<com.android.server.policy.PolicyControl: void reloadFromSetting(android.content.Context)>
<com.android.keyguard.PasswordTextView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.recents.views.RecentsView: void onRecentsHidden()>
<com.android.server.am.BatteryStatsService: void noteStopVideo(int)>
<com.android.photos.BitmapRegionTileSource: void <init>(android.content.Context,com.android.photos.BitmapRegionTileSource.BitmapSource)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder setGlobalSeinfoOrThrow(java.lang.String)>
<android.view.IWindowManagerImpl: boolean requestAssistScreenshot(com.android.internal.app.IAssistScreenshotReceiver)>
<com.android.server.job.JobServiceContext: void acknowledgeStopMessage(int,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void setInteracting(int,boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.systemui.statusbar.policy.NetworkController.AccessPointController getAccessPointController()>
<com.android.server.input.InputManagerService: void monitor()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.ComponentName getHomeActivities(java.util.List)>
<com.android.settingslib.animation.AppearAnimationUtils: void createAnimation(android.view.View,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.server.content.SyncStorageEngine: long calculateDefaultFlexTime(long)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.server.pm.PackageManagerService: void restoreIntentFilterVerification(byte[],int)>
<com.android.server.wm.WindowManagerService: boolean hasNavigationBar()>
<com.android.server.wm.WindowManagerService: void moveTaskToBottom(int)>
<com.android.server.pm.PermissionsState.PermissionState: boolean isDefault()>
<com.android.server.media.RemoteDisplayProviderWatcher: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.policy.RotationLockController: void removeRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<com.android.server.pm.PackageManagerService: void removeOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<com.android.uiautomator.core.UiDevice: boolean waitForWindowUpdate(java.lang.String,long)>
<com.android.systemui.recents.model.RecentsPackageMonitor.PackageCallbacks: void onPackagesChanged(com.android.systemui.recents.model.RecentsPackageMonitor,java.lang.String,int)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowRequested(int)>
<android.view.WindowManagerGlobal_Delegate: android.view.IWindowManager getWindowManagerService()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void applyChildrenState(com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.gallery3d.exif.ExifTag: long getValueAt(int)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: boolean hasOverlappingRendering()>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackUnfiltered(com.android.systemui.recents.model.TaskStack,java.util.ArrayList)>
<com.android.systemui.statusbar.CommandQueue: void preloadRecentApps()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: int getOnNotificationPostedTrim(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.systemui.statusbar.phone.LockIcon: void setTransientFpError(boolean)>
<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
<com.android.systemui.ImageWallpaper: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenx(int,int,int)>
<com.android.settingslib.bluetooth.Utils: void setErrorListener(com.android.settingslib.bluetooth.Utils.ErrorListener)>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.policy.ZenModeController: void setUserId(int)>
<com.android.server.statusbar.StatusBarManagerService: void setWindowState(int,int)>
<com.android.systemui.statusbar.phone.PanelHolder: int getChildDrawingOrder(int,int)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean isScreenOn()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void startChildAnimation(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackStateAnimator,boolean,long,long)>
<com.android.server.job.JobStore: boolean remove(com.android.server.job.controllers.JobStatus)>
<com.android.systemui.recents.RecentsAppWidgetHostView: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<com.android.documentsui.SortingCursorWrapper: int getInt(int)>
<com.android.server.wm.WindowManagerService: void thawRotation()>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState.Session newSession(com.android.settingslib.applications.ApplicationsState.Callbacks)>
<com.android.printspooler.widget.PrintContentView: void requestDisallowInterceptTouchEvent(boolean)>
<com.android.uiautomator.core.UiAutomationShellWrapper: void setCompressedLayoutHierarchy(boolean)>
<com.android.documentsui.RootsCache: void updateAsync()>
<com.android.server.am.ProcessStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getEnabledInputMethodList()>
<com.android.systemui.statusbar.ActivatableNotificationView: void setActualHeight(int,boolean)>
<android.view.ShadowPainter: void drawSmallRectangleShadow(java.awt.Graphics2D,int,int,int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setUserExpandedChild(android.view.View,boolean)>
<com.android.server.policy.ImmersiveModeConfirmation: android.widget.FrameLayout.LayoutParams getBubbleLayoutParams()>
<com.android.uiautomator.core.UiObject: boolean isEnabled()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.graphics.Typeface_Delegate: java.util.List getFonts(android.graphics.FontFamily_Delegate.FontVariant)>
<com.android.server.location.LocationProviderInterface: long getStatusUpdateTime()>
<com.android.systemui.statusbar.ExpandableView: boolean isDark()>
<com.android.systemui.statusbar.BaseStatusBar: void hideRecents(boolean,boolean)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleUserSwitch(int)>
<com.android.server.dreams.DreamManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onLayout(boolean,int,int,int,int)>
<android.view.IWindowManagerImpl: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setSpeedBumpView(com.android.systemui.statusbar.SpeedBumpView)>
<android.graphics.Paint_Delegate: int getJavaCap()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
<com.android.printspooler.renderer.IPdfEditor: void removePages(android.print.PageRange[])>
<com.android.printspooler.renderer.PdfManipulationService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.policy.PhoneWindowManager: android.view.WindowManagerPolicy.WindowState getWinShowWhenLockedLw()>
<com.android.systemui.recents.RecentsConfiguration: void updateSystemInsets(android.graphics.Rect)>
<com.android.documentsui.RootsFragment: void show(android.app.FragmentManager,android.content.Intent)>
<com.android.systemui.statusbar.ExpandableView: boolean areChildrenExpanded()>
<com.android.printspooler.ui.PrintErrorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.server.am.BatteryStatsService: void noteWifiScanStoppedFromSource(android.os.WorkSource)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setCropBounds(android.graphics.RectF)>
<com.android.server.input.InputManagerService: void setWindowManagerCallbacks(com.android.server.input.InputManagerService.WindowManagerCallbacks)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,android.os.Looper,boolean,boolean)>
<com.android.server.usb.UsbHostManager: void getDeviceList(android.os.Bundle)>
<com.android.server.LockSettingsService: void setString(java.lang.String,java.lang.String,int)>
<com.android.systemui.recents.views.RecentsView: void onPackagesChanged(com.android.systemui.recents.model.RecentsPackageMonitor,java.lang.String,int)>
<com.android.server.wm.WindowManagerService: android.os.Bundle sendWindowWallpaperCommandLocked(com.android.server.wm.WindowState,java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.preference.Preference_Delegate: android.view.View inflatePreference(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>
<com.android.server.usb.UsbAudioDevice: void <init>(int,int,boolean,boolean,int)>
<com.android.systemui.recents.misc.Utilities: float mapCoordInDescendentToSelf(android.view.View,android.view.View,float[],boolean)>
<com.android.systemui.statusbar.policy.SignalCallbackAdapter: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getBackButton()>
<com.android.gallery3d.glrenderer.GLCanvas: int uploadBuffer(java.nio.ByteBuffer)>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getValueAsRational(long)>
<com.android.systemui.qs.tiles.CellularTile: void handleUpdateState(com.android.systemui.qs.QSTile.SignalState,java.lang.Object)>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<com.android.server.notification.ValidateNotificationPeople: java.lang.String[] getExtraPeople(android.os.Bundle)>
<com.android.server.job.controllers.JobStatus: int getServiceToken()>
<com.android.systemui.statusbar.policy.CastController.Callback: void onCastDevicesChanged()>
<com.android.systemui.statusbar.stack.StackStateAnimator: void setShadeExpanded(boolean)>
<com.android.systemui.statusbar.NotificationBackgroundView: void setClipTopAmount(int)>
<com.android.systemui.statusbar.NotificationBackgroundView: void setActualHeight(int)>
<com.android.systemui.volume.VolumeDialogController: void setStreamMute(int,boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isSnoozed(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<com.android.settingslib.applications.ApplicationsState: void removePackage(java.lang.String,int)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: int getViewTypeCount()>
<com.android.systemui.recents.model.TaskStack: void removeTask(com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: boolean shouldScaleDimmed()>
<com.android.server.pm.PackageInstallerSession: void setClientProgress(float)>
<com.android.server.wm.WindowManagerService: void removeWindow(com.android.server.wm.Session,android.view.IWindow)>
<com.android.layoutlib.bridge.util.ReflectionUtils: java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<com.android.systemui.statusbar.ServiceMonitor: void start()>
<com.android.server.pm.SELinuxMMAC: boolean shouldRestorecon()>
<com.android.systemui.statusbar.BaseStatusBar: void hideRecentApps(boolean,boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean disable()>
<android.media.midi.IBluetoothMidiService: android.os.IBinder addBluetoothDevice(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.KeyguardPINView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onExpandingFinished()>
<com.android.server.pm.PackageManagerService: android.content.pm.IPackageInstaller getPackageInstaller()>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform)>
<com.android.systemui.recents.views.TaskStackView: boolean ensureFocusedTask(boolean)>
<com.android.systemui.statusbar.KeyguardIndicationController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.KeyguardIndicationTextView,com.android.systemui.statusbar.phone.LockIcon)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void registerCallback(com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback)>
<android.graphics.DashPathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void updateLeftAffordance()>
<com.android.server.accessibility.AccessibilityManagerService: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>
<com.android.tools.layoutlib.create.Log: void outPrintln(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glPixelStorei(int,int)>
<com.android.documentsui.DirectoryLoader: void deliverResult(com.android.documentsui.DirectoryResult)>
<com.android.server.connectivity.Nat464Xlat: void fixupLinkProperties(android.net.LinkProperties)>
<com.android.systemui.statusbar.phone.PanelBar: void setBouncerShowing(boolean)>
<com.android.systemui.qs.QSTile: void userSwitch(int)>
<com.android.server.am.ActivityManagerService: boolean requestAssistContextExtras(int,com.android.internal.os.IResultReceiver,android.os.IBinder)>
<com.android.settingslib.bluetooth.HidProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.documentsui.CreateDirectoryFragment: void show(android.app.FragmentManager)>
<com.android.systemui.qs.QSDetailClipper: void animateCircularClip(int,int,boolean,android.animation.Animator.AnimatorListener)>
<com.android.systemui.volume.VolumeDialogComponent: com.android.systemui.statusbar.policy.ZenModeController getZenController()>
<com.android.server.accessibility.EventStreamTransformation: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSsidStr()>
<com.android.server.DeviceIdleController: int[] getAppIdWhitelistInternal()>
<com.android.server.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>
<com.android.server.pm.PackageManagerService: boolean setDefaultBrowserPackageName(java.lang.String,int)>
<com.android.server.notification.ConditionProviders: void unsubscribeIfNecessary(android.content.ComponentName,android.net.Uri)>
<com.android.commands.media.Media: void onShowUsage(java.io.PrintStream)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.view.View getRootView()>
<javax.microedition.khronos.opengles.GL10: void glStencilOp(int,int,int)>
<javax.obex.BaseStream: void ensureOpen()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isGroupExpanded(android.service.notification.StatusBarNotification)>
<com.android.server.am.BatteryStatsService: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<com.android.printspooler.ui.PageAdapter: long getItemId(int)>
<com.android.server.am.BatteryStatsService: void noteDeviceIdleMode(boolean,java.lang.String,int)>
<com.android.systemui.statusbar.FlingAnimationUtils: float getMinVelocityPxPerSecond()>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean removeNotification(java.lang.String)>
<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForType(int)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: void <init>(android.os.IInterface,android.content.ComponentName,int,boolean,android.content.ServiceConnection,int)>
<com.android.server.firewall.Filter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnChildLocationsChangedListener: void onChildLocationsChanged(com.android.systemui.statusbar.stack.NotificationStackScrollLayout)>
<com.android.server.pm.PackageManagerService: void systemReady()>
<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: android.graphics.Point getImageBounds()>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onServiceDied(com.android.server.print.RemotePrintService)>
<com.android.server.ConnectivityService: void notifyNetworkCallback(com.android.server.connectivity.NetworkAgentInfo,com.android.server.ConnectivityService.NetworkRequestInfo)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void <init>(android.util.DisplayMetrics)>
<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService.WindowChangeListener)>
<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyInfo)>
<com.android.server.wm.WindowManagerService: void stopFreezingScreen()>
<com.android.systemui.DessertCaseView.RescalingContainer: void onLayout(boolean,int,int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void uninstallCaCerts(android.content.ComponentName,java.lang.String[])>
<javax.microedition.khronos.opengles.GL10: void glPointSizex(int)>
<com.android.layoutlib.bridge.android.BridgeContext: int getDynamicIdByStyle(com.android.ide.common.rendering.api.StyleResourceValue)>
<com.android.server.content.SyncQueue: void remove(com.android.server.content.SyncOperation)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setLightsOn(boolean)>
<com.android.systemui.qs.SecureSetting: void handleValueChanged(int,boolean)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onInflate(android.view.ViewStub,android.view.View)>
<com.android.server.audio.AudioService.VolumeController: boolean isSameBinder(android.media.IVolumeController)>
<com.android.documentsui.FilteringCursorWrapper: long getLong(int)>
<com.android.server.connectivity.DataConnectionStats: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isKeyguardFadingAway()>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot createDefaultSnapshot(android.graphics.Bitmap_Delegate)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getPositionDescription()>
<com.android.server.pm.PermissionsState: java.util.Set getPermissions(int)>
<com.android.server.wm.WindowManagerService: void setAnimationScale(int,float)>
<com.android.server.twilight.TwilightState: long getTomorrowSunrise()>
<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>
<com.android.documentsui.ColumnAdapter: void setColumns(int)>
<com.android.server.notification.ScheduleCalendar: java.lang.String toString()>
<com.android.server.pm.IntentFilterVerificationState: java.lang.String getPackageName()>
<com.android.keyguard.KeyguardSecurityContainer: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<android.content.res.BridgeResources: android.content.res.Resources initSystem(com.android.layoutlib.bridge.android.BridgeContext,android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeAndCropCenter(android.graphics.Bitmap,int,boolean)>
<com.android.documentsui.RecentsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.server.content.SyncQueue: java.util.Collection getOperations()>
<com.android.keyguard.KeyguardSimPinView: void <init>(android.content.Context)>
<javax.obex.ObexHelper: int getMaxRxPacketSize(javax.obex.ObexTransport)>
<com.android.commands.sm.Sm: void runHasAdoptable()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void shutdown(boolean,boolean)>
<com.android.server.hdmi.HdmiCecMessage: int getSource()>
<com.android.server.am.BatteryStatsService: void notePhoneSignalStrength(android.telephony.SignalStrength)>
<com.android.documentsui.SortingCursorWrapper: java.lang.String getString(int)>
<com.android.server.content.SyncOperation: java.lang.String toString()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void draw(android.graphics.Canvas)>
<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void showMirror()>
<com.android.server.notification.CountdownConditionProvider: void onDestroy()>
<com.android.systemui.statusbar.policy.DateView: void onDetachedFromWindow()>
<com.android.server.input.InputManagerService: boolean hasKeys(int,int,int[],boolean[])>
<com.android.server.NetworkManagementService: void disableNat(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.os.IBinder getBinder()>
<android.graphics.Paint_Delegate: android.graphics.Xfermode_Delegate getXfermode()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.service.notification.ZenModeConfig.ZenRule getManualRule()>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getDeleteReturns()>
<javax.obex.ClientSession: javax.obex.HeaderSet connect(javax.obex.HeaderSet)>
<com.android.systemui.recents.model.RecentsPackageMonitor: java.util.HashSet computeComponentsRemoved(java.util.List,java.lang.String,int)>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<com.android.uiautomator.core.UiDevice: boolean pressRecentApps()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean stopService(android.content.Intent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlay()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onActivityDrawn()>
<android.graphics.Bitmap_Delegate: java.awt.image.BufferedImage getImage()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onUserSwitched(int)>
<com.android.statementservice.retriever.Utils: java.lang.String joinStrings(java.lang.String,java.util.List)>
<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getVpnConfig()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onStartedGoingToSleep(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnected()>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.BatteryStatsService: void noteWifiScanStopped(int)>
<com.android.keyguard.KeyguardSimPinView: void startAppearAnimation()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleSimSubscriptionInfoChanged()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector classNameMatches(java.lang.String)>
<com.android.server.location.GpsLocationProvider: android.location.INetInitiatedListener getNetInitiatedListener()>
<com.android.systemui.qs.QSTile.ResourceIcon: boolean equals(java.lang.Object)>
<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecord getDefaultVolumeSession(int)>
<com.android.server.connectivity.KeepaliveTracker: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.view.IWindowManagerImpl: boolean clearWindowContentFrameStats(android.os.IBinder)>
<com.android.gallery3d.glrenderer.GLES20Canvas: float getAlpha()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.documentsui.model.RootInfo: boolean equals(java.lang.Object)>
<com.android.location.fused.FusedLocationService: void onDestroy()>
<com.android.server.am.BatteryStatsService: void noteWifiStopped(android.os.WorkSource)>
<com.android.server.content.SyncQueue: void clearBackoffs()>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoUnfiltered()>
<com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks: void onExitToHomeAnimationTriggered()>
<com.android.server.notification.RankingHelper: int getPackageVisibilityOverride(java.lang.String,int)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseVisibleDuration()>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupsProhibitedChanged()>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.systemui.statusbar.ActivatableNotificationView.OnActivatedListener: void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.server.am.ActivityManagerService: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,int)>
<com.android.server.wm.WindowManagerService: float getWindowAnimationScaleLocked()>
<com.android.server.usb.UsbService: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>
<com.android.systemui.SwipeHelper.Callback: void onChildSnappedBack(android.view.View)>
<com.android.server.wm.PointerEventDispatcher: void registerInputEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<com.android.systemui.recents.views.RecentsView.RecentsViewCallbacks: void onTaskLaunchFailed()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isProfileReady()>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(android.content.Context,android.net.Uri)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothManager getInstance(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager.BluetoothManagerCallback)>
<com.android.server.pm.Policy: java.lang.String getMatchedSeinfo(android.content.pm.PackageParser.Package)>
<com.android.server.audio.AudioService: void setVolumeController(android.media.IVolumeController)>
<com.android.nfc_extras.NfcExecutionEnvironment: void close()>
<com.android.server.fingerprint.FingerprintService: void handleAuthenticated(long,int,int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewDismissed(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getFalsingThresholdFactor()>
<com.android.systemui.statusbar.phone.PanelHolder: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.PanelView: void loadDimens()>
<com.android.server.content.SyncStorageEngine: void removeAuthority(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.keyguard.NumPadKey: void onDetachedFromWindow()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void onExpansionStarted(com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.server.policy.PhoneWindowManager: void dismissKeyguardLw()>
<com.android.server.media.RemoteDisplayProviderWatcher: void stop()>
<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean)>
<com.android.gallery3d.exif.ExifInterface: void closeSilently(java.io.Closeable)>
<com.android.systemui.recents.misc.DozeTrigger: boolean hasTriggered()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: boolean hasUserAuthenticatedSinceBoot()>
<com.android.systemui.recents.views.TaskStackViewScroller: void setStackScroll(float)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.systemui.usb.UsbStorageActivity: void onCreate(android.os.Bundle)>
<com.android.printspooler.model.MutexFileProvider.OnReleaseRequestCallback: void onReleaseRequested(java.io.File)>
<com.android.server.am.ActiveServices: void <init>(com.android.server.am.ActivityManagerService)>
<com.android.systemui.power.PowerUI.WarningsUI: void showSaverMode(boolean)>
<com.android.server.policy.PhoneWindowManager: void finishLayoutLw()>
<com.android.documentsui.FilteringCursorWrapper: int getType(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setOverExpansion(float,boolean)>
<com.android.systemui.egg.MLand: void showSplash()>
<com.android.systemui.usb.UsbStorageActivity: void onClick(android.view.View)>
<com.android.wallpapercropper.WallpaperCropActivity: java.lang.String getSharedPreferencesKey()>
<com.android.systemui.statusbar.phone.PanelView: void startExpandMotion(float,float,boolean,float)>
<com.android.systemui.usb.UsbConfirmActivity: void onCreate(android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void freeStorage(java.lang.String,long,android.content.IntentSender)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingUriPermission(android.net.Uri,int)>
<com.android.systemui.recents.views.TaskViewThumbnail: void onDraw(android.graphics.Canvas)>
<javax.microedition.khronos.opengles.GL11: void glColorPointer(int,int,int,int)>
<com.android.systemui.assist.AssistOrbContainer: void onFinishInflate()>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onSpacePressed()>
<com.android.gallery3d.exif.ExifInterface: int getComponentCountFromInfo(int)>
<com.android.layoutlib.bridge.impl.PorterDuffUtility: java.awt.Composite getComposite(android.graphics.PorterDuff.Mode,int)>
<com.android.server.wm.TaskStack: java.lang.String toString()>
<com.android.server.LockSettingsStrongAuth: void requireStrongAuth(int,int)>
<com.android.systemui.statusbar.phone.PanelBar: void onClosingFinished()>
<com.android.server.policy.BurnInProtectionHelper: void <init>(android.content.Context,int,int,int,int,int)>
<com.android.server.wm.WindowManagerService: boolean isViewServerRunning()>
<com.android.systemui.statusbar.phone.ScrimController: float getDozeInFrontAlpha()>
<com.android.server.NetworkManagementService: boolean isNetworkActive()>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.RenderParams getParams()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: char[] getTextCharacters(int[])>
<com.android.server.am.ActivityManagerService: com.android.internal.app.IAppOpsService getAppOpsService()>
<com.android.systemui.statusbar.policy.UserInfoController: void addListener(com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,int[],int)>
<com.android.systemui.statusbar.DismissView: void showClearButton()>
<com.android.server.policy.GlobalActions.LongPressAction: boolean onLongPress()>
<com.android.server.media.MediaSessionService: void enforcePhoneStatePermission(int,int)>
<com.android.server.accounts.AccountManagerService: java.util.HashMap readAuthTokensForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setVisible(boolean)>
<com.android.server.statusbar.StatusBarManagerService: void startAssist(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isLaunchTransitionRunning()>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>
<com.android.systemui.statusbar.phone.QSTileHost: java.util.Collection getTiles()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean shouldDisableWindowAnimationsForUnlock()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setExpansionLogger(com.android.systemui.statusbar.ExpandableNotificationRow.ExpansionLogger,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(java.nio.FloatBuffer)>
<com.android.photos.views.TiledImageView: void onPause()>
<com.android.systemui.recents.views.TaskView: void onTaskBound(com.android.systemui.recents.model.Task)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleLongClick()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean performHapticFeedback(android.view.IWindow,int,boolean)>
<com.android.keyguard.EmergencyButton: void onAttachedToWindow()>
<com.android.settingslib.bluetooth.A2dpProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.layoutlib.bridge.impl.DelegateManager: void <init>(java.lang.Class)>
<com.android.server.media.MediaSessionStack: java.util.ArrayList getTransportControlSessions(int)>
<com.android.server.content.SyncStorageEngine: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onConfigurationChanged()>
<com.android.documentsui.model.RootInfo: com.android.documentsui.model.RootInfo fromRootsCursor(java.lang.String,android.database.Cursor)>
<com.android.layoutlib.bridge.impl.ResourceHelper: boolean getBooleanThemeValue(com.android.ide.common.rendering.api.RenderResources,java.lang.String,boolean,boolean)>
<com.android.settingslib.bluetooth.PanProfile: boolean isProfileReady()>
<com.android.server.location.LocationBlacklist: void onChange(boolean)>
<com.android.server.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>
<com.android.server.policy.PhoneWindowManager: void systemBooted()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showMessage(java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.ims.ImsSuppServiceNotification: void writeToParcel(android.os.Parcel,int)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean setPowerSaveMode(boolean)>
<com.android.server.notification.NotificationManagerInternal: void removeForegroundServiceFlagFromNotification(java.lang.String,int,int)>
<com.android.server.am.CompatModePackages: void setFrontActivityAskCompatModeLocked(boolean)>
<com.android.printspooler.ui.PageAdapter: void stopPreloadContent()>
<com.android.server.AppOpsService: void setUserRestrictions(android.os.Bundle,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void checkError()>
<com.android.server.notification.RankingConfig: void setPackagePeekable(java.lang.String,int,boolean)>
<android.view.WindowCallback: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<com.android.server.notification.NotificationIntrusivenessExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.server.TextServicesManagerService: void setCurrentSpellChecker(java.lang.String,java.lang.String)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isForegroundUserOwner()>
<com.android.systemui.recents.views.RecentsView: void startEnterRecentsAnimation(com.android.systemui.recents.views.ViewAnimation.TaskViewEnterContext)>
<com.android.keyguard.KeyguardDisplayManager: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setSubtitle(java.lang.CharSequence)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(java.nio.IntBuffer)>
<com.android.server.ConnectivityService: boolean updateLockdownVpn()>
<com.android.systemui.recents.views.RecentsView: void dismissFocusedTask()>
<com.google.android.maps.MapView: int getZoomLevel()>
<com.android.systemui.SystemUIService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setUser(int)>
<javax.microedition.khronos.opengles.GL10: void glStencilFunc(int,int,int)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToOctalString(long)>
<com.android.systemui.statusbar.StackScrollerDecorView: boolean isVisible()>
<com.android.gallery3d.common.BitmapUtils: byte[] compressToBytes(android.graphics.Bitmap)>
<javax.obex.ClientSession: void ensureOpen()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onUnlockHintStarted()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setScrollView(android.view.ViewGroup)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryAdded(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.recents.misc.SystemServicesProxy: void resizeTask(int,android.graphics.Rect)>
<com.android.uiautomator.core.UiScrollable: boolean exists(com.android.uiautomator.core.UiSelector)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange asAbsoluteRange(android.print.PageRange,int)>
<com.android.systemui.statusbar.NotificationData.Entry: void setInterruption()>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onLayoutDirectionChanged(int)>
<com.android.settingslib.applications.ApplicationsState: java.lang.String normalize(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getCodeCacheDir()>
<com.android.server.SystemService: android.content.Context getContext()>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: boolean equals(java.lang.Object)>
<com.android.server.audio.AudioService: int getStreamVolume(int)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker getStrongAuthTracker()>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateY()>
<android.animation.FakeAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isConnectable()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitSuperclass()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showScreenPinningRequest(boolean)>
<com.android.systemui.ViewInvertHelper: android.view.View getTarget()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBootCompleted()>
<com.android.gallery3d.glrenderer.BasicTexture: int getHeight()>
<com.android.systemui.statusbar.policy.KeyButtonView: void sendEvent(int,int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean isEmpty()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void dump(java.io.PrintWriter)>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(android.content.res.Resources,int)>
<com.android.server.policy.WindowOrientationListener: void <init>(android.content.Context,android.os.Handler)>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiObject getChild(com.android.uiautomator.core.UiSelector)>
<com.android.gallery3d.exif.Rational: long getNumerator()>
<com.android.server.LockSettingsService: void registerStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.systemui.statusbar.BaseStatusBar: void toggleRecentApps()>
<android.content.res.BridgeResources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>
<com.android.systemui.statusbar.policy.HotspotController.Callback: void onHotspotChanged(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<com.android.layoutlib.bridge.android.BridgeContext: int getProjectResourceValue(com.android.resources.ResourceType,java.lang.String,int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: int getCurrentUser()>
<com.android.server.am.LockTaskNotify: void showToast(int)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBitmap(android.graphics.Bitmap)>
<com.android.uiautomator.core.UiObject: void clearTextField()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean getInTouchMode()>
<android.text.TabStops: void <init>(int[],int)>
<com.android.systemui.volume.SafetyWarningDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.NetworkManagementService: void setInterfaceUp(java.lang.String)>
<android.graphics.BlurMaskFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setExpirationAlarmCheckLocked(android.content.Context,com.android.server.devicepolicy.DevicePolicyManagerService.DevicePolicyData)>
<com.android.server.pm.Installer: int createOatDir(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.StackScrollerDecorView: void performRemoveAnimation(long,float,java.lang.Runnable)>
<com.android.systemui.SwipeHelper: void invalidateGlobalRegion(android.view.View,android.graphics.RectF)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,android.graphics.RectF,android.graphics.RectF)>
<com.android.systemui.statusbar.BaseStatusBar: android.content.pm.PackageManager getPackageManagerForUser(int)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setHomeAsUp(boolean)>
<com.android.server.wm.WindowManagerService: android.content.res.Configuration resizeStack(int,android.graphics.Rect)>
<com.android.systemui.statusbar.phone.ScrimController: void dontAnimateBouncerChangesUntilNextFrame()>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,boolean[],int)>
<com.android.server.wm.WindowManagerService: void rebootSafeMode(boolean)>
<com.android.documentsui.DirectoryLoader: void onStopLoading()>
<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setHeadsUpUser(int)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.CachedBluetoothDeviceManager getCachedDeviceManager()>
<com.android.printspooler.model.PrintSpoolerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.wm.AppTransition: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.settingslib.bluetooth.HidProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.server.accounts.AccountManagerService: java.util.HashMap readUserDataForAccountFromDatabaseLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)>
<javax.microedition.khronos.opengles.GL11: void glTexCoordPointer(int,int,int,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void initializeTextureSize(com.android.gallery3d.glrenderer.BasicTexture,int,int)>
<com.android.documentsui.LocalPreferences: boolean getDisplayAdvancedDevices(android.content.Context)>
<com.android.printspooler.model.PageContentRepository.RenderSpec: void <init>(int,int,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<com.android.systemui.recents.views.RecentsView: void onTaskResize(com.android.systemui.recents.model.Task)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean inFinalizer()>
<com.android.systemui.statusbar.phone.NavigationBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PanelView: void instantCollapse()>
<com.android.settingslib.wifi.AccessPoint: void setListener(com.android.settingslib.wifi.AccessPoint.AccessPointListener)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeResourceValue(int,int)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: void <init>(java.util.Map)>
<com.android.systemui.statusbar.NotificationBigPictureViewWrapper: void <init>(android.content.Context,android.view.View)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.policy.PhoneWindowManager: void enableKeyguard(boolean)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean hasDeviceOwner()>
<android.view.IWindowManagerImpl: void setAppWillBeHidden(android.os.IBinder)>
<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForNetwork(android.net.Network)>
<com.android.systemui.assist.AssistOrbView: void reset()>
<com.android.systemui.statusbar.policy.WifiSignalController: void handleBroadcast(android.content.Intent)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setScanMode(int)>
<com.android.server.audio.AudioService: void setBluetoothA2dpOn(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onClosingFinished()>
<com.android.systemui.statusbar.ServiceMonitor.Callbacks: long onServiceStartAttempt()>
<com.android.commands.sm.Sm: void runUnmount()>
<com.android.server.IntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>
<com.android.systemui.qs.tiles.DataUsageDetailView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPreferredPackages(int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void notificationLightPulse(int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setKeyguardDisabled(android.content.ComponentName,boolean)>
<com.android.server.connectivity.Vpn: boolean setUnderlyingNetworks(android.net.Network[])>
<com.android.settingslib.bluetooth.HeadsetProfile: java.lang.String toString()>
<com.android.server.pm.Policy: boolean hasGlobalSeinfo()>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.AvoidXfermode_Delegate: java.lang.String getSupportMessage()>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot saveLayer(android.graphics.RectF,android.graphics.Paint_Delegate,int)>
<com.android.documentsui.RecentsCreateFragment: void onStop()>
<com.android.systemui.DessertCaseView.RescalingContainer: float getDarkness()>
<com.android.location.provider.GeocodeProvider: android.os.IBinder getBinder()>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,int[],int)>
<com.android.systemui.qs.QSTile.DetailAdapter: int getTitle()>
<com.android.settingslib.wifi.AccessPoint: boolean matches(android.net.wifi.ScanResult)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeDownBySideLength(android.graphics.Bitmap,int,boolean)>
<com.android.server.am.ActivityManagerService: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>
<com.android.systemui.recents.RecentsAppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onBtClassChanged(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: java.util.Collection getDevices()>
<com.android.server.updates.TzDataInstallReceiver: void install(byte[],int)>
<com.android.server.am.ActivityManagerService.GrantUri: int hashCode()>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivities(android.content.Intent[],android.os.Bundle)>
<com.android.gallery3d.common.BitmapUtils: void recycleSilently(android.graphics.Bitmap)>
<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)>
<com.android.server.wm.TaskStack: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void removeSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.documentsui.RootCursorWrapper: int getCount()>
<com.android.server.ServiceWatcher: java.util.ArrayList getSignatureSets(android.content.Context,java.util.List)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void clearBuffer()>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,boolean,boolean)>
<com.android.systemui.statusbar.SpeedBumpView: void animateDivider(boolean,long,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.server.usb.UsbPortManager: void removeSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>
<com.android.server.AssetAtlasService: boolean isCompatible(int)>
<com.android.server.am.ContentProviderConnection: java.lang.String toClientString()>
<com.android.systemui.Prefs: boolean getBoolean(android.content.Context,java.lang.String,boolean)>
<com.android.server.SystemService: void onStopUser(int)>
<android.graphics.Region_Delegate: android.graphics.Region_Delegate getDelegate(long)>
<com.android.server.content.SyncStorageEngine: void queueBackup()>
<com.android.systemui.statusbar.phone.SettingsButton: boolean isAnimating()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.KeyguardAffordanceView getRightView()>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSize(int,int,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isClearable()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeNamespace(int)>
<com.android.gallery3d.common.Utils: int nextPowerOf2(int)>
<com.android.server.notification.SystemConditionProviderService: void attachBase(android.content.Context)>
<com.android.server.am.ActivityManagerService: boolean refContentProvider(android.os.IBinder,int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>
<com.android.documentsui.DocumentsActivity: void updateActionBar()>
<android.content.res.BridgeResources: android.content.res.TypedArray obtainTypedArray(int)>
<com.android.server.media.MediaRouterService: void monitor()>
<com.android.systemui.qs.tiles.UserDetailView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.commands.am.Am: void main(java.lang.String[])>
<com.android.keyguard.KeyguardSecurityViewFlipper: void <init>(android.content.Context)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardHostWindow(android.view.WindowManager.LayoutParams)>
<com.android.tools.layoutlib.create.AsmAnalyzer: void analyze()>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: java.lang.String toString()>
<com.android.server.content.ContentService.ObserverNode: boolean removeObserverLocked(android.database.IContentObserver)>
<com.android.keyguard.KeyguardSimPukView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.server.location.GpsLocationProvider: long getStatusUpdateTime()>
<com.android.documentsui.FilteringCursorWrapper: java.lang.String[] getColumnNames()>
<com.android.server.lights.LightsService: void onStart()>
<com.android.systemui.statusbar.policy.EthernetSignalController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)>
<android.view.IWindowManagerImpl: void setFocusedApp(android.os.IBinder,boolean)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<com.android.server.notification.CountdownConditionProvider: void attachBase(android.content.Context)>
<javax.obex.ApplicationParameter: void addAPPHeader(byte,byte,byte[])>
<com.android.server.display.RampAnimator.Listener: void onAnimationEnd()>
<android.graphics.Typeface_Delegate: android.graphics.Typeface_Delegate getDelegate(long)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showScreenPinningRequest()>
<com.android.settingslib.applications.ApplicationsState.AppEntry: void ensureLabel(android.content.Context)>
<com.android.server.am.ActivityManagerService: boolean killProcessesBelowForeground(java.lang.String)>
<com.android.systemui.qs.PseudoGridView: void onMeasure(int,int)>
<com.android.systemui.assist.AssistOrbView: boolean hasOverlappingRendering()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinSecure(com.android.internal.telephony.IccCardConstants.State)>
<android.view.IWindowManagerImpl: int getPendingAppTransition()>
<com.android.server.pm.Installer: void onStart()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void notifyFpAuthModeChanged()>
<com.android.layoutlib.bridge.util.SparseWeakArray: int indexOfValue(java.lang.Object)>
<com.android.settingslib.bluetooth.A2dpProfile: java.util.List getConnectedDevices()>
<com.android.systemui.qs.QSTile: void destroy()>
<javax.microedition.khronos.opengles.GL11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: java.lang.Object createView(android.content.Context)>
<com.android.systemui.statusbar.tv.TvStatusBar: void buzzBeepBlinked()>
<android.view.IWindowManagerImpl: void reenableKeyguard(android.os.IBinder)>
<com.android.server.wm.WindowManagerService: void setNewConfiguration(android.content.res.Configuration)>
<com.android.server.accounts.AccountManagerService: void removeAccountInternal(android.accounts.Account)>
<com.android.server.InputMethodManagerService: void updateKeyboardFromSettingsLocked()>
<com.android.server.wm.WindowManagerService: boolean isKeyguardSecure()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void jumpToCurrentState()>
<com.android.systemui.qs.QSPanel: boolean isShowingDetail()>
<com.android.photos.BitmapRegionTileSource: int getRotation()>
<com.android.printspooler.model.PrintSpoolerProvider: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<android.view.WindowCallback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinitionForTag(com.android.gallery3d.exif.ExifTag)>
<com.android.server.policy.BarController: void setWindow(android.view.WindowManagerPolicy.WindowState)>
<com.android.server.LockSettingsService.CredentialUtil: byte[] toHash(java.lang.String,int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showRecentApps(boolean)>
<com.android.commands.hid.Event: byte[] getDescriptor()>
<com.android.media.remotedisplay.RemoteDisplayProvider: int getDiscoveryMode()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>
<com.android.server.location.LocationBlacklist: void switchUser(int)>
<com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer getInstance()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setMenuVisibility(boolean,boolean)>
<com.android.photos.views.TiledImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isLockscreenPublicMode()>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,int[],int)>
<android.content.res.BridgeResources: java.lang.String getResourceName(int)>
<com.android.keyguard.KeyguardHostView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.documentsui.ThumbnailCache: void <init>(int)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: android.content.Context getContext()>
<com.android.server.am.BatteryStatsService: void noteScreenBrightness(int)>
<com.android.documentsui.DirectoryFragment: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.tuner.QsTuner: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.systemui.qs.tiles.RotationLockTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String)>
<com.android.server.lights.Light: void pulse()>
<com.android.server.pm.PackageManagerService: void grantRuntimePermission(java.lang.String,java.lang.String,int)>
<com.android.keyguard.KeyguardPatternView: void startAppearAnimation()>
<com.android.server.am.BatteryStatsService: void noteStartWakelock(int,int,java.lang.String,java.lang.String,int,boolean)>
<com.android.systemui.power.PowerUI.WarningsUI: boolean isInvalidChargerWarningShowing()>
<com.android.server.media.MediaSessionRecord: void binderDied()>
<com.android.externalstorage.ExternalStorageProvider: boolean isChildDocument(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,int[],int)>
<android.view.IWindowManagerImpl: void setAppVisibility(android.os.IBinder,boolean)>
<com.android.tools.layoutlib.java.IntegralToString: void appendLong(java.lang.StringBuilder,long)>
<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void onExpansionStopped()>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,java.nio.IntBuffer)>
<com.android.server.policy.BarController: com.android.internal.statusbar.IStatusBarService getStatusBarService()>
<android.view.Display.ColorTransform: void writeToParcel(android.os.Parcel,int)>
<com.android.server.statusbar.StatusBarManagerService: void toggleRecentApps()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: java.util.Collection getCachedDevicesCopy()>
<com.android.server.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.doze.DozeHost: void addCallback(com.android.systemui.doze.DozeHost.Callback)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void requestDisallowInterceptTouchEvent(boolean)>
<com.android.systemui.statusbar.policy.SecurityController: void onUserSwitched(int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldInterrupt(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.server.policy.PhoneWindowManager: void userActivity()>
<com.android.systemui.statusbar.stack.StackScrollState: com.android.systemui.statusbar.stack.StackViewState getViewStateForView(android.view.View)>
<com.android.printspooler.ui.PageAdapter: void close(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.IconMerger: void onLayout(boolean,int,int,int,int)>
<com.android.server.NetworkManagementService: void setInterfaceIpv6NdOffload(java.lang.String,boolean)>
<com.android.server.policy.PhoneWindowManager: int getConfigDisplayHeight(int,int,int)>
<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getRemovedProfiles()>
<com.android.systemui.recents.views.TaskView: void disableLayersForOneFrame()>
<com.android.systemui.ViewInvertHelper: void update(boolean)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: com.android.ide.common.rendering.api.ResourceValue getLayoutResource(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setEmergencyCallsOnly(boolean)>
<com.android.server.audio.AudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,boolean,boolean,boolean)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int)>
<javax.microedition.khronos.egl.EGL10: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<com.android.server.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean,int)>
<com.android.keyguard.KeyguardPasswordView: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: long[] getProcessPss(int[])>
<com.android.settingslib.wifi.AccessPoint: boolean isSaved()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurnedOff()>
<javax.obex.PrivateOutputStream: byte[] readBytes(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setShadeEmpty(boolean)>
<javax.obex.Operation: void sendHeaders(javax.obex.HeaderSet)>
<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistInternal()>
<android.content.res.BridgeTypedArray: android.content.res.ColorStateList getColorStateList(int)>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.qs.QSTileView createTileView(android.content.Context)>
<com.android.documentsui.RecentLoader: void onReset()>
<com.android.systemui.statusbar.tv.TvStatusBar: void addIcon(java.lang.String,int,int,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void onInvalidated()>
<com.android.systemui.SwipeHelper: void invalidateGlobalRegion(android.view.View)>
<com.android.systemui.statusbar.ActivatableNotificationView: void makeInactive(boolean)>
<com.android.systemui.keyguard.KeyguardService: android.os.IBinder onBind(android.content.Intent)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeResourceValue(int,int)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setWindowState(int,int)>
<com.android.server.NetworkManagementService: java.lang.String[] listTetheredInterfaces()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults: int getDefaultDataSubId()>
<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<com.android.server.NetworkManagementService: void setUidCleartextNetworkPolicy(int,int)>
<com.android.printspooler.model.RemotePrintDocument: void clearUpdateError()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: void onClick(android.view.View)>
<com.android.systemui.qs.tiles.BluetoothTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>
<com.android.server.CountryDetectorService: android.location.Country detectCountry()>
<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational getTagRationalValue(int,int)>
<com.android.uiautomator.core.Tracer: void trace(java.lang.Object[])>
<com.android.server.pm.PackageManagerService: void scanAvailableAsecs()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: java.lang.String toString()>
<com.android.server.connectivity.Nat464Xlat: void stop()>
<com.android.documentsui.RecentLoader: com.android.documentsui.DirectoryResult loadInBackground()>
<com.android.systemui.recents.views.SwipeHelper: void setMinAlpha(float)>
<com.android.server.hdmi.HdmiControlService: void <init>(android.content.Context)>
<com.android.systemui.egg.MLand: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.FlashlightTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.recents.views.DebugOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.proxyhandler.ProxyServer: void setPort(int)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result moveChild(android.view.ViewGroup,android.view.View,int,java.util.Map,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.keyguard.KeyguardAbsKeyInputView: int getWrongPasswordStringId()>
<com.android.systemui.statusbar.NotificationTemplateViewWrapper: void setPictureGrayscale(boolean,boolean,long)>
<com.android.systemui.statusbar.stack.StackScrollState: void applyViewState(android.view.View,com.android.systemui.statusbar.stack.ViewState)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postAnimateCollapsePanels()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isSecure()>
<com.android.server.policy.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.android.systemui.SwipeHelper.Callback: void onChildDismissed(android.view.View)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToString(int,int)>
<com.android.documentsui.FilteringCursorWrapper: float getFloat(int)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: int getCollapsedHeight()>
<com.android.systemui.qs.tiles.RotationLockTile: int getMetricsCategory()>
<com.android.tools.layoutlib.java.Objects: int compare(java.lang.Object,java.lang.Object,java.util.Comparator)>
<com.android.server.fingerprint.FingerprintService: void handleEnumerate(long,int[],int[])>
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getDefaultWindowListLocked()>
<com.android.media.remotedisplay.RemoteDisplay: void setPresentationDisplayId(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getAffordanceFalsingFactor()>
<com.android.printspooler.ui.FusedPrintersProvider: boolean isFavoritePrinter(android.print.PrinterId)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: int getIntrinsicHeight()>
<com.android.keyguard.KeyguardHostView: void showMessage(java.lang.String,int)>
<com.android.settingslib.wifi.WifiTracker: java.util.List getAccessPoints()>
<com.android.systemui.statusbar.NotificationContentView: void setContentHeight(int)>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.tools.layoutlib.java.Charsets: void asciiBytesToChars(byte[],int,int,char[])>
<com.android.printspooler.model.PrintSpoolerService: java.io.File generateFileForPrintJob(android.content.Context,android.print.PrintJobId)>
<com.android.server.dreams.DreamController.Listener: void onDreamStopped(android.os.Binder)>
<com.android.systemui.doze.DozeLog: java.lang.String pulseReasonToString(int)>
<com.android.systemui.volume.VolumeDialogController: boolean hasVibrator()>
<com.android.systemui.qs.QSTile.SignalState: java.lang.StringBuilder toStringBuilder()>
<com.android.server.am.ActivityManagerService: void notifyCleartextNetwork(int,byte[])>
<com.android.keyguard.KeyguardSecurityViewFlipper: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.server.job.controllers.JobStatus: android.app.job.JobInfo getJob()>
<com.android.systemui.qs.QSTile.Host: void startActivityDismissingKeyguard(android.app.PendingIntent)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onBootPhase(int)>
<com.android.server.content.SyncStorageEngine.DayStats: void <init>(int)>
<com.android.systemui.statusbar.phone.LockIcon: void setScreenOn(boolean)>
<com.android.server.am.ActivityManagerService: int getFrontActivityScreenCompatMode()>
<com.android.uiautomator.core.UiObject: boolean performTwoPointerGesture(android.graphics.Point,android.graphics.Point,android.graphics.Point,android.graphics.Point,int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerType(org.objectweb.asm.Type)>
<android.view.IWindowManagerImpl: void setStrictModeVisualIndicatorPreference(java.lang.String)>
<com.android.server.pm.PackageManagerService: void performBootDexOpt()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setListening(boolean)>
<javax.obex.ServerOperation: boolean isValidBody()>
<com.android.printspooler.widget.PreviewPageFrame: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.WindowCallback: boolean onSearchRequested()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getCenterIcon()>
<com.android.server.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.RecentsView: boolean launchPreviousTask()>
<com.android.gallery3d.glrenderer.RawTexture: boolean isFlippedVertically()>
<com.android.server.content.SyncStorageEngine: void handleMessage(android.os.Message)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int hashCode()>
<com.android.server.twilight.TwilightService: void <init>(android.content.Context)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void verifyUnlock(android.view.WindowManagerPolicy.OnKeyguardExitResult)>
<com.android.server.NsdService: void setEnabled(boolean)>
<com.android.systemui.media.NotificationPlayer: void <init>(java.lang.String)>
<com.android.server.location.PassiveProvider: void updateLocation(android.location.Location)>
<com.android.server.policy.PhoneWindowManager: void setCurrentOrientationLw(int)>
<com.android.settingslib.bluetooth.A2dpProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.Installer: int markBootComplete(java.lang.String)>
<com.android.systemui.tuner.TunerFragment: void onResume()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>
<com.android.systemui.recents.misc.Console: void logStackTrace()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.SessionParams)>
<com.android.server.content.ContentService: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isSecure()>
<com.android.server.wm.WindowManagerService: void addWindowToken(android.os.IBinder,int)>
<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>
<javax.microedition.khronos.opengles.GL10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<com.android.server.pm.PermissionsState.PermissionState: boolean isGranted()>
<com.android.server.location.PassiveProvider: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.documentsui.SortingCursorWrapper: int getCount()>
<com.android.systemui.statusbar.phone.UserAvatarView: void onLayout(boolean,int,int,int,int)>
<com.android.server.notification.NotificationRecord: void setSeen()>
<com.android.server.am.ActivityManagerService: void setSystemServiceManager(com.android.server.SystemServiceManager)>
<com.android.systemui.statusbar.phone.NavigationBarViewTaskSwitchHelper: void <init>(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setIntrinsicPadding(int)>
<com.android.server.NetworkManagementService: void setFirewallEgressDestRule(java.lang.String,int,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setEmptyDragAmount(float)>
<com.android.server.accounts.IAccountAuthenticatorCache: java.util.Collection getAllServices(int)>
<com.android.systemui.statusbar.policy.KeyButtonView: void playSoundEffect(int)>
<com.android.server.pm.PackageManagerService: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver2,int,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isSecure()>
<com.android.systemui.statusbar.ExpandableView: void setMinClipTopAmount(int)>
<com.android.systemui.egg.MLand: void stop()>
<com.android.server.am.ProcessStatsService: void writeStateAsyncLocked()>
<com.android.server.notification.ZenLog: void traceExitCondition(android.service.notification.Condition,android.content.ComponentName,java.lang.String)>
<com.android.server.pm.PackageKeySetData: void setProperSigningKeySet(long)>
<com.android.server.updates.SELinuxPolicyInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<com.android.server.media.MediaSessionStack: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.pm.UserManagerService: boolean exists(int)>
<com.android.systemui.recents.views.TaskStackView: void disableLayersForOneFrame()>
<com.android.server.InputMethodManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>
<com.android.gallery3d.glrenderer.BitmapTexture: android.graphics.Bitmap getBitmap()>
<com.android.systemui.recents.views.TaskStackView.TaskStackViewCallbacks: void onAllTaskViewsDismissed(java.util.ArrayList)>
<com.android.printspooler.widget.PrintContentView: boolean isOptionsOpened()>
<com.android.keyguard.KeyguardAbsKeyInputView: void resetState()>
<com.android.server.wm.WindowManagerService: android.view.DisplayInfo getDefaultDisplayInfoLocked()>
<com.android.systemui.statusbar.policy.SecurityController: boolean hasProfileOwner()>
<com.android.systemui.media.NotificationPlayer: void onCompletion(android.media.MediaPlayer)>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getHeadsUpContentView()>
<com.android.proxyhandler.ProxyService: void onCreate()>
<com.android.printspooler.ui.FusedPrintersProvider: boolean onCancelLoad()>
<com.android.location.provider.FusedLocationHardware: void flushBatchedLocations()>
<com.android.server.LocationManagerService: void reportLocation(android.location.Location,boolean)>
<com.android.systemui.power.PowerNotificationWarnings: boolean isInvalidChargerWarningShowing()>
<javax.obex.ObexPacket: javax.obex.ObexPacket read(java.io.InputStream)>
<com.android.keyguard.KeyguardAbsKeyInputView: int getPasswordTextViewId()>
<com.android.keyguard.KeyguardPatternView: void createAnimation(com.android.internal.widget.LockPatternView.CellState,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgeContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<com.android.systemui.media.NotificationPlayer: boolean onError(android.media.MediaPlayer,int,int)>
<com.android.systemui.SystemUI: void putComponent(java.lang.Class,com.android.server.ResettableTimeout.T)>
<javax.microedition.khronos.opengles.GL10: void glTranslatef(float,float,float)>
<com.android.server.location.MockProvider: boolean isEnabled()>
<com.android.server.hdmi.HdmiCecStandbyModeHandler: void <init>(com.android.server.hdmi.HdmiControlService,com.android.server.hdmi.HdmiCecLocalDeviceTv)>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.ExpandableNotificationRow getViewAtPosition(float)>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsForPackage(java.lang.String,int,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glLightModelx(int,int)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void onPowerSaveChanged()>
<com.android.systemui.statusbar.stack.AmbientState: int getSpeedBumpIndex()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadius(float,boolean)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean isSwipingInProgress()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName,int)>
<com.android.tools.layoutlib.java.Charsets: byte[] toIsoLatin1Bytes(char[],int,int)>
<com.android.server.clipboard.ClipboardService: void setPrimaryClip(android.content.ClipData,java.lang.String)>
<com.android.server.policy.PhoneWindowManager: boolean rotationHasCompatibleMetricsLw(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean hasOverlappingRendering()>
<com.android.printspooler.model.PageContentRepository: void finalize()>
<com.android.server.policy.PhoneWindowManager: void screenTurningOn(android.view.WindowManagerPolicy.ScreenOnListener)>
<com.android.printspooler.model.PageContentRepository.RenderSpec: boolean equals(java.lang.Object)>
<android.net.util.IpUtils: short tcpChecksum(java.nio.ByteBuffer,int,int,int)>
<com.android.server.policy.PhoneWindowManager: void applyPostLayoutPolicyLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams,android.view.WindowManagerPolicy.WindowState)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setStackHeight(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getProfileVpnName()>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList rebuild(com.android.settingslib.applications.ApplicationsState.AppFilter,java.util.Comparator)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.CrashInfo)>
<javax.microedition.khronos.opengles.GL10: void glFrustumx(int,int,int,int,int,int)>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context)>
<com.android.server.input.InputManagerService: void start()>
<com.android.systemui.statusbar.BaseStatusBar: void setHeadsUpUser(int)>
<com.android.server.content.ContentService: java.util.List getCurrentSyncsAsUser(int)>
<com.android.server.wm.WindowManagerService: void setForcedDisplaySize(int,int,int)>
<com.android.settingslib.bluetooth.PanProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.SignalClusterView: void onDetachedFromWindow()>
<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.server.pm.PackageManagerService: java.lang.String getPermissionControllerPackageName()>
<com.android.systemui.recents.model.FilteredTaskList: java.util.ArrayList getTasks()>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onConditionsChanged(android.service.notification.Condition[])>
<com.android.server.am.ActivityManagerService: void backgroundResourcesReleased(android.os.IBinder)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void <init>(org.objectweb.asm.MethodVisitor)>
<com.android.systemui.statusbar.policy.UserInfoController: void reloadUserInfo()>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void onTransition(int,int,boolean)>
<com.android.systemui.statusbar.NotificationGuts: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean)>
<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>
<com.android.gallery3d.glrenderer.UploadedTexture: void invalidateContent()>
<com.android.server.am.BatteryStatsService: void noteWifiScanStartedFromSource(android.os.WorkSource)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void showScrim()>
<com.android.settingslib.deviceinfo.StorageMeasurement: void forceMeasure()>
<com.android.systemui.tuner.DemoModeFragment: void onPause()>
<com.android.server.location.MockProvider: int getStatus(android.os.Bundle)>
<com.android.systemui.statusbar.policy.SignalController: void recordLastState()>
<com.android.systemui.recents.views.TaskViewThumbnail: void setDimAlpha(float)>
<com.android.gallery3d.exif.ExifTag: int getDataSize()>
<com.android.server.GraphicsStatsService: void <init>(android.content.Context)>
<com.android.tools.layoutlib.java.Objects: boolean equals(java.lang.Object,java.lang.Object)>
<com.android.server.am.ActivityManagerService: void setTestPssMode(boolean)>
<com.android.systemui.qs.QSFooter: boolean hasFooter()>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onStart()>
<com.android.server.pm.PackageManagerService: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.systemui.qs.tiles.DataUsageDetailView: void bind(com.android.systemui.statusbar.policy.NetworkController.MobileDataController.DataUsageInfo)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onChildDismissed(android.view.View)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isActivePasswordSufficient(int)>
<javax.microedition.khronos.opengles.GL10: void glShadeModel(int)>
<com.android.server.notification.NotificationRecord: int getAuthoritativeRank()>
<com.android.server.notification.ScheduleConditionProvider: void onSubscribe(android.net.Uri)>
<com.android.systemui.statusbar.phone.PanelBar: void LOG(java.lang.String,java.lang.Object[])>
<com.android.systemui.qs.QSTile.DetailAdapter: android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.server.content.ContentService: java.util.List getCurrentSyncs()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void <init>(android.content.Context,com.android.systemui.statusbar.policy.CastController,com.android.systemui.statusbar.policy.HotspotController,com.android.systemui.statusbar.policy.UserInfoController,com.android.systemui.statusbar.policy.BluetoothController)>
<com.android.systemui.qs.tiles.IntentTile: void handleUserSwitch(int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void wakeUp(long,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelBar: void collapseAllPanels(boolean,boolean,float)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void stopScanning()>
<com.android.server.job.controllers.TimeController: void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeContext: void setWallpaper(java.io.InputStream)>
<com.android.systemui.statusbar.phone.NavigationBarView: void notifyScreenOn(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean hasFingerprintUnlockTimedOut(int)>
<com.android.server.storage.DeviceStorageMonitorInternal: long getMemoryLowThreshold()>
<com.android.server.job.JobSchedulerService: void onStopUser(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getStyleAttribute()>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,java.nio.FloatBuffer)>
<com.android.server.wm.WindowManagerService: boolean stopViewServer()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int installExistingPackage(java.lang.String)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setTouchEnabled(boolean)>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: void addMovement(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: float getMaxTranslationDistance()>
<com.android.systemui.statusbar.phone.PanelBar: void addPanel(com.android.systemui.statusbar.phone.PanelView)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateHeadsUp(java.lang.String,com.android.systemui.statusbar.NotificationData.Entry,boolean,boolean)>
<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)>
<com.android.server.fingerprint.FingerprintUtils: void addFingerprintForUser(android.content.Context,int,int)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateCompleted(com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo)>
<com.android.server.connectivity.NetworkAgentInfo: boolean satisfiesImmutableCapabilitiesOf(android.net.NetworkRequest)>
<com.android.documentsui.model.DocumentStack: void reset()>
<com.android.systemui.recents.views.DebugOverlayView: void onDraw(android.graphics.Canvas)>
<com.android.uiautomator.core.UiDevice: boolean hasWatcherTriggered(java.lang.String)>
<com.android.printspooler.ui.PrintActivity: void onOptionsClosed()>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: float getXVelocity()>
<com.android.server.am.ActivityManagerService: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.view.IWindowManagerImpl: boolean stopViewServer()>
<com.android.server.am.BatteryStatsService: void notePhoneOff()>
<com.android.layoutlib.bridge.android.BridgeContext: void removeStickyBroadcast(android.content.Intent)>
<com.android.wallpapercropper.WallpaperCropActivity: void setWallpaper(java.lang.String,boolean)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: boolean isHeld()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>
<com.android.server.pm.KeySetManagerService: java.lang.String encodePublicKey(java.security.PublicKey)>
<com.android.server.notification.NotificationUsageStats.Aggregate: void addSample(long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isLockTaskPermitted(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void cancelHeightAnimator()>
<com.android.commands.ime.Ime: void run(java.lang.String[])>
<com.android.systemui.qs.PseudoGridView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printspooler.ui.PageAdapter.PreviewArea: void setPadding(int,int,int,int)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void <init>(com.android.ide.common.rendering.api.SessionParams)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isPlatformFile()>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: void <init>(android.content.Context,android.net.Uri,int)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary(android.content.Context,java.lang.String,android.net.NetworkInfo.DetailedState,boolean,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.io.InputStream,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setStatusBarState(int)>
<com.android.layoutlib.bridge.Bridge: java.lang.String resolveResourceId(int[])>
<com.android.systemui.qs.tiles.ColorInversionTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.statusbar.NotificationMediaViewWrapper: void setDark(boolean,boolean,long)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<com.android.server.os.SchedulingPolicyService: int requestPriority(int,int,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glRenderbufferStorageOES(int,int,int,int)>
<com.android.server.notification.ManagedServices: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleDevicePolicyManagerStateChanged()>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,java.nio.IntBuffer)>
<com.android.systemui.volume.VolumeDialog: void dump(java.io.PrintWriter)>
<com.android.externalstorage.TestDocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.server.wm.WindowManagerService: void removeAppStartingWindow(android.os.IBinder)>
<com.android.server.connectivity.Vpn: boolean addAddress(java.lang.String,int)>
<com.android.server.InputMethodManagerService: boolean switchToLastInputMethod(android.os.IBinder)>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.recents.views.FixedSizeImageView: void invalidate()>
<android.graphics.Region_Delegate: java.awt.geom.Area combineShapes(java.awt.Shape,java.awt.Shape,int)>
<com.android.systemui.recents.views.TaskView: void setTaskProgress(float)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToOctalString(int)>
<com.android.server.ConnectivityService: boolean isNetworkSupported(int)>
<com.android.documentsui.model.DocumentInfo: int getCursorInt(android.database.Cursor,java.lang.String)>
<com.android.server.job.controllers.IdleController: void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: int generateTexture()>
<com.android.server.accounts.AccountManagerService: void writeAuthTokenIntoCacheLocked(com.android.server.accounts.AccountManagerService.UserAccounts,android.database.sqlite.SQLiteDatabase,android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void onExpandingFinished()>
<com.android.gallery3d.glrenderer.BasicTexture: void finalize()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setDrawable(android.graphics.drawable.Drawable)>
<com.android.keyguard.ViewMediatorCallback: void setNeedsInput(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void buzzBeepBlinked()>
<com.android.server.input.InputManagerService: void vibrate(int,long[],int,android.os.IBinder)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isFullscreenBouncer()>
<com.android.server.media.MediaSessionStack: boolean isGlobalPriorityActive()>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOff()>
<com.android.layoutlib.bridge.impl.PlayAnimationThread: com.android.ide.common.rendering.api.Result preAnimation()>
<com.android.systemui.statusbar.policy.SignalCallbackAdapter: void setSubs(java.util.List)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<com.android.gallery3d.common.Utils: float parseFloatSafely(java.lang.String,float)>
<android.view.IWindowManagerImpl: void setEventDispatching(boolean)>
<com.android.layoutlib.bridge.impl.ResourceHelper: boolean parseFloatAttribute(java.lang.String,java.lang.String,android.util.TypedValue,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void cancelPreloadingRecents()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isVisible()>
<com.android.server.policy.PhoneWindowManager: void updateSettings()>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)>
<com.android.gallery3d.glrenderer.BasicTexture: void <init>(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<com.android.server.input.InputManagerService: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>
<com.android.server.usb.UsbService: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>
<com.android.systemui.keyguard.KeyguardViewMediator: void setCurrentUser(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer: void <init>(com.android.tools.layoutlib.create.Log,java.util.List,com.android.tools.layoutlib.create.AsmGenerator,java.lang.String[],java.lang.String[],java.util.Set,java.lang.String[])>
<com.android.server.ConnectivityService: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>
<com.android.server.wm.DisplaySettings: void getOverscanLocked(java.lang.String,java.lang.String,android.graphics.Rect)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(int,int[])>
<com.android.settingslib.bluetooth.A2dpProfile: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,float[],int)>
<com.android.systemui.statusbar.CommandQueue: void removeIcon(int)>
<com.android.server.NetworkManagementService: void unregisterObserver(android.net.INetworkManagementEventObserver)>
<com.android.server.clipboard.ClipboardService: void removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)>
<com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback: void onLocationSettingsChanged(boolean)>
<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>
<com.android.gallery3d.glrenderer.GLCanvas: void beginRenderTarget(com.android.gallery3d.glrenderer.RawTexture)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onDraggedDown(android.view.View,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionStartsWith(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void instantExpand()>
<com.android.uiautomator.core.UiScrollable: double getSwipeDeadZonePercentage()>
<com.android.systemui.settings.ToggleSlider: boolean isChecked()>
<android.graphics.CornerPathEffect_Delegate: boolean isSupported()>
<com.android.server.content.ContentService: void setMasterSyncAutomaticallyAsUser(boolean,int)>
<com.android.server.ConnectivityService: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)>
<com.android.location.provider.FusedLocationHardware: boolean supportsDeviceContextInjection()>
<com.android.systemui.DessertCaseView: void place(android.view.View,boolean)>
<com.android.printspooler.model.RemotePrintDocument: void <init>(android.content.Context,android.print.IPrintDocumentAdapter,com.android.printspooler.model.MutexFileProvider,com.android.printspooler.model.RemotePrintDocument.RemoteAdapterDeathObserver,com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks)>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState getInstance(android.app.Application)>
<com.android.server.am.DumpHeapProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.android.systemui.qs.tiles.LocationTile: void handleClick()>
<com.android.server.wm.WindowManagerService: int relayoutWindow(com.android.server.wm.Session,android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>
<com.android.systemui.statusbar.phone.ScrimController: void setPanelExpansion(float)>
<com.android.systemui.volume.VolumeDialogController: void getState()>
<com.android.systemui.qs.tiles.CastTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.documentsui.ColumnAdapter.OnItemClickListener: void onItemClick(android.widget.ListAdapter,int)>
<com.android.systemui.power.PowerUI.WarningsUI: void dump(java.io.PrintWriter)>
<com.android.server.am.DumpHeapProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.systemui.qs.tiles.BluetoothTile: int getMetricsCategory()>
<com.android.server.usb.UsbService: void allowUsbDebugging(boolean,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void fling(float,boolean)>
<com.android.server.usb.UsbAlsaManager: void systemReady()>
<com.android.systemui.statusbar.tv.TvStatusBar: void toggleRecentApps()>
<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceInitializer()>
<com.android.systemui.qs.QSPanel: void refreshAllTiles()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>
<com.android.systemui.recents.model.RecentsTaskLoader: void loadTaskData(com.android.systemui.recents.model.Task)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF)>
<com.android.server.policy.PhoneWindowManager: int getNonDecorDisplayHeight(int,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setBarState(int,boolean,boolean)>
<com.android.documentsui.DirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onReset(com.android.systemui.statusbar.ExpandableView)>
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int,int)>
<com.android.systemui.statusbar.NotificationBackgroundView: void setState(int[])>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getDescription()>
<com.android.systemui.RecentsComponent: void showPrevAffiliatedTask()>
<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String)>
<com.android.server.wm.WindowManagerService: void detachStack(int)>
<com.android.systemui.qs.QSTile.AnimationIcon: void setAllowAnimation(boolean)>
<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats.ServiceState getServiceStateLocked(java.lang.String,int,int,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.State cleanState()>
<com.android.server.content.SyncManager: void updateRunningAccounts()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.util.List getSystemViewInfos()>
<com.android.keyguard.KeyguardSecurityView: void showPromptReason(int)>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onBluetoothStateChanged(int)>
<com.android.future.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(com.android.future.usb.UsbAccessory)>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcExecutionEnvironment getEmbeddedExecutionEnvironment()>
<com.android.server.ConnectivityService: void stopKeepalive(android.net.Network,int)>
<com.android.server.job.controllers.JobStatus: int getJobId()>
<com.android.systemui.keyguard.KeyguardViewMediator: void setKeyguardEnabled(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onTrackingStopped(com.android.systemui.statusbar.phone.PanelView,boolean)>
<com.android.systemui.statusbar.CommandQueue: void hideRecentApps(boolean,boolean)>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(int,boolean,java.lang.Object[])>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void <init>(android.content.Context,android.view.View)>
<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setIsClickedNotification(android.view.View,boolean)>
<com.android.server.trust.TrustArchive: void logAgentStopped(int,android.content.ComponentName)>
<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices.ManagedServiceInfo checkServiceToken(android.service.notification.IConditionProvider)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getAllIntentFilters(java.lang.String)>
<com.android.systemui.statusbar.phone.TrustDrawable: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardPasswordView: boolean needsInput()>
<javax.obex.ClientOperation: java.io.DataInputStream openDataInputStream()>
<com.android.keyguard.KeyguardUpdateMonitor: void setCurrentUser(int)>
<com.android.server.ConnectivityService: void releaseNetworkRequest(android.net.NetworkRequest)>
<com.android.systemui.statusbar.NotificationBackgroundView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.WindowOrientationListener: void onTouchEnd()>
<android.graphics.Matrix_Delegate: java.awt.geom.AffineTransform getAffineTransform(android.graphics.Matrix)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onTouchSlopExceeded()>
<com.android.settingslib.bluetooth.LocalBluetoothManager: void setForegroundActivity(android.content.Context)>
<com.android.systemui.qs.QSTile: void handleClick()>
<com.android.systemui.statusbar.ExpandableView: void setContentHeight(int)>
<com.android.systemui.qs.PseudoGridView: void onLayout(boolean,int,int,int,int)>
<com.android.server.am.ActivityManagerService: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,boolean,int)>
<com.android.systemui.statusbar.phone.PanelView: float getOverExpansionAmount()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void setCurrentUserSetup(boolean)>
<com.android.server.ConsumerIrService: int[] getCarrierFrequencies()>
<com.android.server.wm.WindowManagerService: void showBootMessage(java.lang.CharSequence,boolean)>
<com.android.systemui.tuner.TunerService: boolean isTunerEnabled(android.content.Context)>
<com.android.systemui.statusbar.policy.NextAlarmController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.IntentTile: void handleLongClick()>
<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: void init()>
<com.android.systemui.qs.QSDualTileLabel: void setFirstLineCaret(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag getTag(int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(byte[],android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.systemui.statusbar.stack.StackScrollState: void <init>(android.view.ViewGroup)>
<com.android.documentsui.RootCursorWrapper: long getLong(int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.server.wm.WindowManagerService: void setWindowOpaqueLocked(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void unpinAll()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setStatusBarDisabled(android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplaySessionInfo(android.hardware.display.WifiDisplaySessionInfo)>
<com.android.server.twilight.TwilightManager: com.android.server.twilight.TwilightState getCurrentState()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(com.android.gallery3d.exif.Rational[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.gallery3d.common.Utils: void fail(java.lang.String,java.lang.Object[])>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getExternalMediaDirs()>
<com.android.server.wm.WindowManagerService: boolean outOfMemoryWindow(com.android.server.wm.Session,android.view.IWindow)>
<com.android.systemui.statusbar.phone.TrustDrawable: void setAlpha(int)>
<com.android.tools.layoutlib.java.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<com.android.server.content.SyncOperation: java.lang.String reasonToString(android.content.pm.PackageManager,int)>
<android.graphics.Paint_Delegate: int getTextAlign()>
<com.android.settingslib.TetherUtil: boolean isTetheringSupported(android.content.Context)>
<com.android.systemui.statusbar.policy.KeyButtonView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.shell.BugreportReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.settings.ToggleSlider: void setValue(int)>
<com.android.server.audio.AudioService: void playSoundEffect(int)>
<com.android.server.am.ActivityManagerService: android.os.Bundle getAssistContextExtras(int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
<android.view.IWindowManagerImpl: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)>
<com.android.server.connectivity.NetworkMonitor: android.util.LocalLog.ReadOnlyLocalLog getValidationLogs()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void registerStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.StatusBarWindowManager,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.FingerprintUnlockController)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.KeyguardAffordanceView: float getCircleRadius()>
<com.android.systemui.keyguard.KeyguardViewMediator: void handleDismiss()>
<com.android.server.usb.UsbAlsaManager: void logDevices(java.lang.String)>
<com.android.server.pm.Installer: int deleteCodeCacheFiles(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: android.graphics.drawable.Drawable getDrawable(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.server.AppOpsService: void stopWatchingMode(com.android.internal.app.IAppOpsCallback)>
<com.android.systemui.recents.model.TaskStack: void removeGroup(com.android.systemui.recents.model.TaskGrouping)>
<com.android.systemui.egg.MLand: void addPlayer()>
<com.android.systemui.statusbar.NotificationBackgroundView: boolean hasOverlappingRendering()>
<com.android.server.NativeDaemonEvent: java.lang.String getField(int)>
<com.android.server.pm.PackageManagerService: int checkUidPermission(java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener: void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean)>
<com.android.systemui.recents.views.DebugOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.trust.TrustAgentWrapper: void <init>(android.content.Context,com.android.server.trust.TrustManagerService,android.content.Intent,android.os.UserHandle)>
<com.android.systemui.statusbar.policy.SignalCallbackAdapter: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int)>
<com.android.server.location.GeofenceManager: void removeFence(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: void addMovement(android.view.MotionEvent)>
<com.android.sharedstoragebackup.ObbBackupService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>
<com.android.providers.settings.SettingsProvider: boolean onCreate()>
<com.android.documentsui.RecentsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,android.os.UserHandle)>
<com.android.server.accounts.AccountManagerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: float getXVelocity()>
<com.android.systemui.qs.QSFooter: void setListening(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>
<com.android.systemui.statusbar.phone.ObservableScrollView.Listener: void onScrollChanged()>
<com.android.server.am.ActivityManagerService: boolean setProcessMemoryTrimLevel(java.lang.String,int,int)>
<com.android.documentsui.SortingCursorWrapper: short getShort(int)>
<com.android.server.content.ContentService: void syncAsUser(android.content.SyncRequest,int)>
<com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildStandby(int,int)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.Result init(long)>
<com.android.systemui.statusbar.policy.HeadsUpManager.Clock: long currentTimeMillis()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageAlpha(float,boolean,long,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.server.wm.WindowManagerService: void setAppTask(android.os.IBinder,int)>
<com.android.commands.wm.Wm: void onShowUsage(java.io.PrintStream)>
<com.android.server.am.ProcessStatsService: boolean isMemFactorLowered()>
<com.android.photos.views.TiledImageView: void positionFromMatrix(android.graphics.Matrix)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUnlockWithFingerprintPossible(int)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getPromotedFields()>
<com.android.systemui.qs.QSTile.State: java.lang.String toString()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: int getZen()>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.layoutlib.bridge.android.BridgeXmlBlockParser getPreviousParser()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void disable(int,int,boolean)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: java.lang.Runnable incrementAsRunnable()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void panelScrimMinFractionChanged(float)>
<com.android.systemui.statusbar.NotificationData.Environment: boolean isDeviceProvisioned()>
<com.android.vpndialogs.ManageDialog: boolean handleMessage(android.os.Message)>
<com.android.captiveportallogin.CaptivePortalLoginActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.doze.DozeService: void onDreamingStarted()>
<com.android.server.notification.ConditionProviders: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isScrimSrcModeEnabled()>
<com.android.settingslib.wifi.AccessPoint: android.net.NetworkInfo.DetailedState getDetailedState()>
<com.android.server.audio.AudioService.VolumeStreamState: int getMinIndex()>
<com.android.systemui.ExpandHelper: void <init>(android.content.Context,com.android.systemui.ExpandHelper.Callback,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCameraDisabled(android.content.ComponentName,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void wipeData(int,int)>
<com.android.server.ConnectivityService: java.lang.String getMobileProvisioningUrl()>
<com.android.systemui.DessertCaseView: void fillFreeList(int)>
<com.android.server.Watchdog.Monitor: void monitor()>
<com.android.documentsui.model.DocumentInfo: java.lang.String toString()>
<com.android.server.input.InputManagerService: boolean transferTouchFocus(android.view.InputChannel,android.view.InputChannel)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onFinishInflate()>
<com.android.systemui.power.PowerUI.WarningsUI: void showLowBatteryWarning(boolean)>
<com.android.server.am.BatteryStatsService: void noteWakeUp(java.lang.String,int)>
<com.android.server.pm.PermissionsState: boolean hasPermission(java.lang.String,int)>
<com.android.server.media.MediaSessionService: void onSwitchUser(int)>
<com.android.server.pm.LauncherAppsService: void <init>(android.content.Context)>
<com.android.server.DeviceIdleController: void onBootPhase(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>
<com.android.server.connectivity.PermissionMonitor: void startMonitoring()>
<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<android.text.LineBreaker: void computeBreaks(android.text.StaticLayout.LineBreaks)>
<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>
<com.android.systemui.statusbar.policy.HotspotController: void setHotspotEnabled(boolean)>
<com.android.printspooler.ui.FusedPrintersProvider: void onForceLoad()>
<javax.obex.PasswordAuthentication: byte[] getUserName()>
<android.view.IWindowManagerImpl: void setOverscan(int,int,int,int,int)>
<com.android.server.connectivity.Tethering: void interfaceStatusChanged(java.lang.String,boolean)>
<com.android.server.VibratorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.UserAvatarView: void setActiveFrameColor(int)>
<com.android.uiautomator.core.Configurator: long getKeyInjectionDelay()>
<android.graphics.Paint_Delegate: void setAlpha(int)>
<com.android.server.pm.InstructionSets: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitClassBound()>
<com.android.server.content.SyncManager: void scheduleSync(android.content.ComponentName,int,int,android.os.Bundle,long,long)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onWakeAndUnlocking()>
<com.android.systemui.statusbar.policy.HeadsUpManager: int getTopHeadsUpHeight()>
<com.android.server.usage.UserUsageStatsService.StatsUpdatedListener: void onStatsUpdated()>
<com.android.server.policy.BurnInProtectionHelper: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.ActivatableNotificationView: void onFinishInflate()>
<com.android.systemui.statusbar.NotificationData: com.android.systemui.statusbar.NotificationData.Entry get(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isClearAllVisible()>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(android.view.Display)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void updateDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.wm.WindowManagerService: void handleDisplayAdded(int)>
<com.android.server.input.InputManagerService: java.lang.String[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistInternal()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean areChildrenExpanded()>
<com.android.printspooler.model.PageContentRepository.OnPageContentAvailableCallback: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4x(int,int,int,int,int)>
<com.android.server.notification.NotificationDelegate: void onNotificationVisibilityChanged(com.android.internal.statusbar.NotificationVisibility[],com.android.internal.statusbar.NotificationVisibility[])>
<com.android.server.display.DisplayAdapter.Listener: void onTraversalRequested()>
<com.android.server.lights.LightsService: void finalize()>
<com.android.server.pm.PackageManagerService: void updateExternalMediaStatus(boolean,boolean)>
<com.android.uiautomator.core.Configurator: long getActionAcknowledgmentTimeout()>
<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>
<com.android.documentsui.model.DocumentInfo: void write(java.io.DataOutputStream)>
<com.android.location.provider.ActivityRecognitionEvent: int getEventType()>
<com.android.layoutlib.bridge.impl.RenderAction: java.lang.Integer getId(com.android.resources.ResourceType,java.lang.String)>
<com.android.systemui.tuner.StatusBarSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isShowingAndNotOccluded()>
<com.android.server.notification.ZenModeHelper: void <init>(android.content.Context,android.os.Looper,com.android.server.notification.ConditionProviders)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAdminActive(android.content.ComponentName,int)>
<com.android.server.job.JobStore: java.util.List getJobsByUser(int)>
<com.android.gallery3d.glrenderer.BitmapTexture: void <init>(android.graphics.Bitmap,boolean)>
<com.android.systemui.recents.model.RecentsPackageMonitor: void register(android.content.Context,com.android.systemui.recents.model.RecentsPackageMonitor.PackageCallbacks)>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon()>
<com.android.systemui.statusbar.tv.TvStatusBar: void appTransitionCancelled()>
<com.android.systemui.recents.misc.DozeTrigger: boolean isDozing()>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.TaskGrouping getGroupWithAffiliation(int)>
<com.android.systemui.recents.model.TaskStack: boolean hasFilteredTasks()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<com.android.systemui.volume.VolumeUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.model.TaskStack: void setBounds(android.graphics.Rect,android.graphics.Rect)>
<com.android.server.media.MediaSessionService: void updateSession(com.android.server.media.MediaSessionRecord)>
<javax.microedition.khronos.opengles.GL10: void glFogx(int,int)>
<javax.microedition.khronos.opengles.GL11: boolean glIsTexture(int)>
<com.android.photos.DumbBitmapRegionDecoder: com.android.photos.DumbBitmapRegionDecoder newInstance(java.lang.String)>
<com.android.uiautomator.core.UiObject: boolean waitUntilGone(long)>
<com.android.server.UiThread: com.android.server.UiThread get()>
<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>
<com.android.server.ConnectivityService: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: void moveTaskToFront(int,android.app.ActivityOptions)>
<com.android.server.pm.BackgroundDexOptService: void schedule(android.content.Context,long)>
<com.android.server.location.RemoteListenerHelper.ListenerOperation: void execute(android.os.IInterface)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getIntentVerificationStatus(java.lang.String,int)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onTrackingStarted(com.android.systemui.statusbar.phone.PanelView)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagIntValues(int,int)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<com.android.server.am.BatteryStatsService: void noteWifiOff()>
<com.android.systemui.statusbar.NotificationData.Environment: com.android.systemui.statusbar.phone.NotificationGroupManager getGroupManager()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getCookie(java.lang.Object)>
<com.android.server.accounts.AccountManagerService: void copyAccountToUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getDeviceInitializerComponent()>
<com.android.server.InputMethodManagerService: void showMySoftInput(android.os.IBinder,int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void updateWakeLockUids(android.os.IBinder,int[])>
<com.android.commands.hid.Event: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean hideKeyguard()>
<com.android.server.location.FusedLocationHardwareSecure: int getSupportedBatchSize()>
<com.android.systemui.statusbar.BaseStatusBar: void updateHeadsUp(java.lang.String,com.android.systemui.statusbar.NotificationData.Entry,boolean,boolean)>
<com.android.server.wm.AppWindowAnimator: void clearAnimation()>
<com.android.systemui.statusbar.SignalClusterView: void onRtlPropertiesChanged(int)>
<com.android.keyguard.KeyguardHostView: void onResume()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener: void onOverscrollTopChanged(float,boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: boolean unloadTexture(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setDeviceOwner(java.lang.String,java.lang.String)>
<com.android.server.audio.AudioService: void setVolumePolicy(android.media.VolumePolicy)>
<com.android.server.policy.EnableAccessibilityController: void onDestroy()>
<android.graphics.Matrix_Delegate: void set(android.graphics.Matrix_Delegate)>
<com.android.server.connectivity.Vpn: void <init>(android.os.Looper,android.content.Context,android.os.INetworkManagementService,int)>
<android.view.IWindowManagerImpl: void startFreezingScreen(int,int)>
<com.android.systemui.statusbar.policy.SecurityController: boolean hasDeviceOwner()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void computeScroll()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getMoveStatus(int)>
<com.android.server.pm.InstructionSets: java.lang.String getPreferredInstructionSet()>
<android.graphics.PixelXorXfermode_Delegate: boolean isSupported()>
<com.android.gallery3d.exif.ExifTag: java.lang.String getValueAsString(java.lang.String)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void invalidateRenderingSize()>
<com.android.server.NetworkManagementService: void addIdleTimer(java.lang.String,int,int)>
<com.android.server.am.ActivityManagerService: int getProcessLimit()>
<com.android.server.notification.ScheduleConditionProvider: void onBootComplete()>
<android.view.IWindowManagerImpl: void executeAppTransition()>
<com.android.server.trust.TrustArchive: java.lang.String formatDuration(long)>
<com.android.systemui.recents.views.RecentsView: void onUserInteraction()>
<com.android.server.LockSettingsStrongAuth: void unregisterStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.systemui.recents.views.SwipeHelper: void setPagingTouchSlop(float)>
<javax.obex.ObexHelper: byte[] convertToByteArray(long)>
<com.android.systemui.recents.views.TaskStackView: void computeRects(int,int,android.graphics.Rect,boolean,boolean)>
<com.android.commands.pm.Pm: void main(java.lang.String[])>
<com.android.uiautomator.core.UiObject: boolean swipeRight(int)>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.job.controllers.JobStatus: java.lang.String toString()>
<com.android.server.notification.NotificationDelegate: void onNotificationActionClick(int,int,java.lang.String,int)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getSlowestIntervalMs()>
<com.android.systemui.recents.views.TaskStackView: void startLaunchTaskAnimation(com.android.systemui.recents.views.TaskView,java.lang.Runnable,boolean)>
<com.android.systemui.statusbar.NotificationGuts: int getActualHeight()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(java.nio.IntBuffer)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textStartsWith(java.lang.String)>
<com.android.commands.wm.Wm: void main(java.lang.String[])>
<com.android.server.notification.NotificationUsageStats: void emit()>
<com.android.printspooler.ui.PrintActivity: void onPrinterUnavailable(android.print.PrinterInfo)>
<com.android.systemui.statusbar.NotificationData.Entry: void reset()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateExpandSettingsPanel()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void verifyUnlock()>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onKeyPreIme(int,android.view.KeyEvent)>
<com.android.server.hdmi.HdmiCecController.AllocateAddressCallback: void onAllocated(int,int)>
<android.content.res.BridgeResources: java.lang.String getString(int)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void <init>(android.content.Context)>
<com.android.systemui.doze.DozeService: void onCreate()>
<com.android.server.InputMethodManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.gallery3d.exif.ExifInterface: boolean isThumbnailCompressed()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void startAppearAnimation()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.google.android.maps.MapView: int getLatitudeSpan()>
<com.android.uiautomator.core.UiDevice: boolean hasAnyWatcherTriggered()>
<com.android.systemui.statusbar.NotificationContentView: boolean isContentExpandable()>
<com.android.server.pm.PermissionsState: com.android.server.pm.PermissionsState.PermissionState getRuntimePermissionState(java.lang.String,int)>
<com.android.systemui.statusbar.phone.UserAvatarView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.android.wallpapercropper.WallpaperCropActivity: void init()>
<com.android.systemui.statusbar.DismissView: boolean isOnEmptySpace(float,float)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.PanelView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.qs.QSTileView: boolean setDual(boolean)>
<com.android.server.policy.RecentApplicationsBackground: boolean setFrame(int,int,int,int)>
<com.android.layoutlib.bridge.Bridge: void prepareThread()>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.android.gallery3d.exif.ExifInterface: double[] getLatLongAsDoubles()>
<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>
<com.android.server.am.ActivityManagerService: boolean isInHomeStack(int)>
<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String)>
<com.android.statementservice.retriever.Utils: java.lang.String computeNormalizedSha256Fingerprint(byte[])>
<android.content.res.BridgeResources: int getColor(int,android.content.res.Resources.Theme)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.commands.svc.DataCommand: void run(java.lang.String[])>
<com.android.systemui.statusbar.policy.CastControllerImpl: java.util.Set getCastDevices()>
<com.android.server.policy.GlobalActions.Action: void onPress()>
<com.android.server.policy.WakeGestureListener: void onWakeUp()>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean onTouchEvent(android.view.MotionEvent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenf(int,int,float)>
<javax.obex.ServerRequestHandler: void onDisconnect(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.systemui.volume.VolumeDialogController: void setVolumePolicy(android.media.VolumePolicy)>
<com.android.systemui.statusbar.ExpandableView: boolean willBeGone()>
<android.animation.AnimationThread: void postAnimation()>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedHeightInternal(float)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardShowing(boolean)>
<com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback: void onStateChanged()>
<com.android.server.lights.Light: void pulse(int,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void onRtlPropertiesChanged()>
<com.android.nfc_extras.NfcAdapterExtras: void authenticate(byte[])>
<com.android.systemui.statusbar.BaseStatusBar: void onVisibilityChanged(boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: java.lang.String getName(android.bluetooth.BluetoothDevice)>
<com.android.commands.uiautomator.RunTestCommand: java.lang.String shortHelp()>
<com.android.server.trust.TrustArchive: void logGrantTrust(int,android.content.ComponentName,java.lang.String,long,int)>
<android.graphics.Xfermode_Delegate: java.lang.String getSupportMessage()>
<com.android.layoutlib.bridge.bars.Config: java.lang.String getTime(int)>
<com.android.systemui.SwipeHelper: void setMaxSwipeProgress(float)>
<com.android.statementservice.retriever.AbstractStatementRetriever: com.android.statementservice.retriever.AbstractStatementRetriever.Result retrieveStatements(com.android.statementservice.retriever.AbstractAsset)>
<com.android.server.pm.PackageManagerService: android.util.ArraySet getPackagesThatNeedDexOpt()>
<com.android.systemui.volume.VolumeDialog.Callback: void onZenPrioritySettingsClicked()>
<com.android.server.wm.WindowManagerService: void setWindowOpaque(android.os.IBinder,boolean)>
<com.android.server.connectivity.Tethering: int[] getUpstreamIfaceTypes()>
<com.android.keyguard.KeyguardHostView: void showPromptReason(int)>
<com.android.server.notification.ZenModeFiltering: boolean matchesCallFilter(android.content.Context,int,android.service.notification.ZenModeConfig,android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>
<com.android.systemui.statusbar.GestureRecorder: void tag(java.lang.String)>
<com.android.server.wm.WindowManagerService: void saveLastInputMethodWindowForTransition()>
<com.android.photos.views.TiledImageView: void invalidate()>
<com.android.server.wm.WindowManagerService: void attachStack(int,int)>
<com.android.settingslib.wifi.AccessPoint: long getSeen()>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isInLaunchTransition()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: void prepareViewToEnterPool(java.lang.Object)>
<com.android.systemui.statusbar.phone.DozeScrimController: void setDozing(boolean,boolean)>
<com.android.systemui.statusbar.stack.AmbientState: com.android.systemui.statusbar.ActivatableNotificationView getActivatedChild()>
<com.android.server.NativeDaemonEvent: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PanelView: float getExpandedFraction()>
<com.android.systemui.DessertCaseDream: void onDreamingStopped()>
<com.android.ims.ImsSuppServiceNotification: int describeContents()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getColumnNumber()>
<android.graphics.Paint_Delegate: android.graphics.MaskFilter_Delegate getMaskFilter()>
<com.android.server.connectivity.KeepaliveTracker: void handleStopKeepalive(com.android.server.connectivity.NetworkAgentInfo,int,int)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void skip(int)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void <init>(android.content.Context,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintError(int,java.lang.String)>
<com.android.systemui.settings.ToggleSlider: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.stack.AmbientState: boolean isDark()>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onAccessPointsChanged()>
<com.android.gallery3d.glrenderer.BasicTexture: void recycle()>
<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void dismissKeyguardThenExecute(com.android.keyguard.KeyguardHostView.OnDismissAction,boolean)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry()>
<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>
<com.android.systemui.assist.AssistOrbContainer: boolean isShowing()>
<com.android.server.LocationManagerService: boolean addGpsStatusListener(android.location.IGpsStatusListener,java.lang.String)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceAttributesChanged()>
<android.view.BridgeInflater: void onDoneInflation()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isMasterVolumeMuted(android.content.ComponentName)>
<com.android.server.audio.AudioService: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>
<com.android.server.am.BatteryStatsService: void notePhoneState(int)>
<com.android.systemui.qs.QSTile.Host: void startActivityDismissingKeyguard(android.content.Intent)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isHeadsUp(java.lang.String)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.view.LayoutInflater getInflater(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.documentsui.FilteringCursorWrapper: boolean isNull(int)>
<com.android.systemui.recents.views.RecentsView: void focusNextTask(boolean)>
<com.android.layoutlib.bridge.util.DynamicIdMap: void <init>(int)>
<com.android.systemui.statusbar.CommandQueue: void onCameraLaunchGestureDetected(int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onDreamingStarted()>
<com.android.server.pm.PackageManagerService: void restoreDefaultApps(byte[],int)>
<com.android.systemui.recents.Recents: com.android.systemui.recents.Recents getInstanceAndStartIfNeeded(android.content.Context)>
<javax.obex.ServerRequestHandler: void updateStatus(java.lang.String)>
<com.android.server.location.FusedLocationHardwareSecure: void unregisterSink(android.hardware.location.IFusedLocationHardwareSink)>
<javax.microedition.khronos.opengles.GL10: void glSampleCoverage(float,boolean)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void setListening(boolean)>
<com.android.server.display.WifiDisplayController.Listener: void onScanStarted()>
<com.android.server.pm.PermissionsState: boolean updatePermissionFlagsForAllPermissions(int,int,int)>
<com.android.systemui.statusbar.stack.AmbientState: int getLayoutHeight()>
<com.android.server.wm.WindowManagerService: void getBaseDisplaySize(int,android.graphics.Point)>
<com.android.systemui.statusbar.NotificationGuts: void drawableStateChanged()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()>
<com.android.systemui.qs.tiles.CastTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.BaseStatusBar: void overrideActivityPendingAppTransition(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean panelsEnabled()>
<com.android.systemui.recents.views.DebugOverlayView: void setCallbacks(com.android.systemui.recents.views.DebugOverlayView.DebugOverlayViewCallbacks)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String[] fileList()>
<com.android.uiautomator.core.UiScrollable: boolean flingToBeginning(int)>
<com.android.gallery3d.common.BitmapUtils: byte[] compressToBytes(android.graphics.Bitmap,int)>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: void startVerifications(int)>
<com.android.server.usage.UsageStatsDatabase.StatCombiner: void combine(com.android.server.usage.IntervalStats,boolean,java.util.List)>
<com.android.server.notification.ZenLog: void traceNotIntercepted(com.android.server.notification.NotificationRecord,java.lang.String)>
<com.android.server.NetworkManagementService: void setFirewallUidRules(int,int[],int[])>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void keyguardDone(boolean,boolean)>
<com.android.systemui.qs.QSPanel: void setTiles(java.util.Collection)>
<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>
<com.android.systemui.qs.tiles.DataUsageDetailView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.stack.StackIndentationFunctor: float getValue(float)>
<com.android.documentsui.model.DocumentInfo: boolean isGridTitlesHidden()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: boolean wasShownLongEnough()>
<com.android.server.input.InputManagerService: void systemRunning()>
<com.android.tools.layoutlib.java.Charsets: byte[] toUtf8Bytes(char[],int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isUserExpanded()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void recoverFromLightCycle()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<com.android.systemui.statusbar.BaseStatusBar: java.lang.Object createHandler()>
<com.android.nfc_extras.EeInitializationException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onActivityDrawn()>
<com.android.systemui.recents.ScreenPinningRequest: void onClick(android.view.View)>
<com.android.systemui.statusbar.StatusBarIconView: void onDraw(android.graphics.Canvas)>
<com.android.uiautomator.core.UiObject: boolean dragTo(int,int,int)>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>
<android.view.IWindowManagerImpl: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,float[],int)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean injectInputEvent(android.view.InputEvent,boolean)>
<com.android.server.firewall.IntentFirewall: boolean checkStartActivity(android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setOnBitmapCropped(com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler)>
<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<com.android.server.SystemServiceManager: void cleanupUser(int)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void put(long,java.lang.Object)>
<javax.microedition.khronos.opengles.GL11: void glColor4ub(byte,byte,byte,byte)>
<com.android.server.policy.SystemGesturesPointerEventListener: void <init>(android.content.Context,com.android.server.policy.SystemGesturesPointerEventListener.Callbacks)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getDelegateClassNatives()>
<com.android.server.policy.PhoneWindowManager: int selectAnimationLw(android.view.WindowManagerPolicy.WindowState,int)>
<android.graphics.BidiRenderer: android.graphics.RectF renderText(int,int,boolean,float[],int,boolean)>
<com.android.printspooler.ui.PageAdapter.PreviewArea: void setColumnCount(int)>
<javax.obex.ClientOperation: java.lang.String getType()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,int[],int)>
<com.android.systemui.qs.QSTile.AnimationIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.server.notification.RankingReconsideration: java.lang.String getKey()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean hasPinnedHeadsUp()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onDeviceNameUpdated(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.ViewMediatorCallback: boolean isInputRestricted()>
<android.animation.AnimationThread: void run()>
<com.android.systemui.qs.QSTile: void clearState()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void startCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<javax.obex.ClientOperation: void noBodyHeader()>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.io.InputStream,java.util.Set,com.android.resources.Density)>
<com.android.server.location.FusedProxy: com.android.server.location.FusedProxy createAndBind(android.content.Context,android.os.Handler,android.hardware.location.IFusedLocationHardware,int,int,int)>
<com.android.server.policy.PolicyControl: int adjustClearableFlags(android.view.WindowManagerPolicy.WindowState,int)>
<com.android.server.wm.WindowManagerService: boolean detectSafeMode()>
<com.android.keyguard.KeyguardHostView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isQsExpanded()>
<com.android.gallery3d.glrenderer.BasicTexture: void invalidateAllTextures()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean isLeftVoiceAssist()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.gallery3d.exif.ExifInterface: short getTrueTagKey(int)>
<com.android.server.location.PassiveProvider: long getStatusUpdateTime()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<com.android.server.input.InputManagerService: void setInputWindows(com.android.server.input.InputWindowHandle[])>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine getSingleton()>
<com.android.settingslib.wifi.WifiTracker: void startTracking()>
<com.android.systemui.statusbar.policy.NextAlarmController: void onReceive(android.content.Context,android.content.Intent)>
<javax.obex.ObexHelper: java.lang.String convertToUnicode(byte[],boolean)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setPositiveButton(int,android.view.View.OnClickListener)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustManagedChanged(int)>
<javax.microedition.khronos.opengles.GL10: void glClearDepthf(float)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void notifyGroupChildAdded(android.view.View)>
<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.egg.MLand: void removePlayer()>
<com.android.server.accessibility.ScreenMagnifier: void <init>(android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService)>
<com.android.systemui.statusbar.phone.ScrimController: void setBackDropView(com.android.systemui.statusbar.BackDropView)>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.android.server.LockSettingsService: java.lang.String getString(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void setMoreText(android.widget.TextView)>
<com.android.server.notification.RankingReconsideration: void run()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setQsExpansionEnabled(boolean)>
<com.android.systemui.qs.QSDualTileLabel: void setTextColor(int)>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,java.nio.IntBuffer)>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void <init>(com.android.bluetoothmidiservice.PacketEncoder.PacketReceiver,int)>
<android.graphics.BlurMaskFilter_Delegate: boolean isSupported()>
<com.android.server.pm.Installer: int moveFiles()>
<android.content.res.BridgeResources: java.io.InputStream openRawResource(int)>
<javax.microedition.khronos.opengles.GL10: void glClearColorx(int,int,int,int)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: boolean onStateChange(int[])>
<com.android.printspooler.ui.FusedPrintersProvider: void onStartLoading()>
<com.android.server.media.MediaSessionRecord: int getPlaybackType()>
<com.android.gallery3d.common.Utils: float interpolateScale(float,float,float)>
<com.android.systemui.Prefs: void remove(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isScrolledToTop()>
<com.android.server.audio.AudioService: void setRemoteStreamVolume(int)>
<com.android.systemui.statusbar.phone.PanelView: void onHeightUpdated(float)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskResize(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable)>
<javax.obex.Operation: void close()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.Object getProperty(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void launchLeftAffordance()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
<android.graphics.Shader_Delegate: java.lang.String getSupportMessage()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.server.fingerprint.FingerprintUtils: void vibrateFingerprintSuccess(android.content.Context)>
<com.android.systemui.recents.model.TaskGrouping: com.android.systemui.recents.model.Task.TaskKey getNextTaskInGroup(com.android.systemui.recents.model.Task)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result animate(java.lang.Object,java.lang.String,boolean,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.server.am.ActivityManagerService: void restart()>
<com.android.server.NetworkManagementService: boolean isClatdStarted(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isShowing()>
<com.android.systemui.statusbar.NotificationOverflowContainer: int getContentHeightFromActualHeight(int)>
<com.android.uiautomator.core.UiObject: boolean isSelected()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void openQs()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void createPrintJob(android.print.PrintJobInfo)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: java.lang.String toString()>
<com.android.systemui.RecentsComponent.Callbacks: void onVisibilityChanged(boolean)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void seek(int)>
<com.android.wallpapercropper.CropView: void setScale(float)>
<com.android.server.connectivity.NetworkAgentInfo: java.lang.String toString()>
<com.android.documentsui.RootCursorWrapper: short getShort(int)>
<com.android.server.notification.NotificationDelegate: void onNotificationError(int,int,java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeUnsignedIntValue(int,int)>
<com.android.systemui.statusbar.NotificationViewWrapper: com.android.systemui.statusbar.NotificationViewWrapper wrap(android.content.Context,android.view.View)>
<com.android.server.job.JobSchedulerService: void cancelJobsForUid(int)>
<com.android.photos.views.TiledImageRenderer: void setPosition(int,int,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showScreenPinningRequest()>
<com.android.gallery3d.glrenderer.GLCanvas: void multiplyAlpha(float)>
<android.content.res.BridgeTypedArray: float getDimension(int,float)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void rotate(double)>
<com.android.gallery3d.glrenderer.GLPaint: void setLineWidth(float)>
<com.android.systemui.qs.QSTile.ResourceIcon: com.android.systemui.qs.QSTile.Icon get(int)>
<com.android.bluetoothmidiservice.PacketDecoder: void decodePacket(byte[],android.media.midi.MidiReceiver)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<com.android.server.LocationManagerService: java.util.List getAllProviders()>
<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setSensitive(boolean)>
<com.android.location.provider.LocationRequestUnbundled: int getQuality()>
<com.android.media.remotedisplay.RemoteDisplay: void setDescription(java.lang.String)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayDisconnected()>
<com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback: void onBrightnessLevelChanged()>
<com.android.keyguard.KeyguardHostView: boolean handleMenuKey()>
<com.android.systemui.DessertCaseView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.recents.model.RecentsTaskLoader: int getApplicationIconCacheSize()>
<com.android.server.notification.NotificationRecord: void setPackageVisibilityOverride(int)>
<com.android.systemui.SwipeHelper: void setLongPressListener(com.android.systemui.SwipeHelper.LongPressListener)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void removeAt(int)>
<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiDevice getInstance()>
<com.android.commands.bmgr.Bmgr: void main(java.lang.String[])>
<com.android.server.media.MediaSessionStack: com.android.server.media.MediaSessionRecord getDefaultRemoteSession(int)>
<android.content.res.BridgeResources: int[] getIntArray(int)>
<com.android.server.audio.AudioService: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationClear(java.lang.String,java.lang.String,int,int)>
<com.android.server.usb.UsbDeviceManager: void clearUsbDebuggingKeys()>
<com.android.server.DeviceIdleController: void onAnyMotionResult(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getMaxExpandHeight()>
<com.android.uiautomator.core.UiDevice: void clearLastTraversedText()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void <init>(android.content.Context,com.android.internal.policy.IKeyguardService)>
<com.android.server.AppOpsService: java.util.List getPackagesForOps(int[])>
<com.android.gallery3d.glrenderer.GLCanvas: void restore()>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getRecentsButton()>
<com.android.documentsui.RecentsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.location.provider.GmsFusedBatchOptions: boolean isFlagSet(int)>
<com.android.printspooler.ui.PageAdapter.PreviewArea: int getWidth()>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiObject getFromParent(com.android.uiautomator.core.UiSelector)>
<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: void acquire()>
<com.android.systemui.media.RingtonePlayer: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.content.SyncStorageEngine: long insertStartSyncEvent(com.android.server.content.SyncOperation,long)>
<com.android.server.pm.PackageKeySetData: void addUpgradeKeySet(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,float[],int)>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isInputRestricted()>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[],int)>
<com.android.systemui.recents.RecentsActivity: void onAllTaskViewsDismissed()>
<com.android.server.audio.AudioService: void stopBluetoothSco(android.os.IBinder)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void removeAsSoonAsPossible()>
<com.android.server.audio.AudioService: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<com.android.server.notification.ZenLog: void traceIntercepted(com.android.server.notification.NotificationRecord,java.lang.String)>
<com.android.server.am.ActivityManagerService: void addPackageDependency(java.lang.String)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.KeyguardSimPinView: void resetState()>
<com.android.server.notification.NotificationRecord: int getFlags()>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void launchAffordance(boolean,boolean)>
<com.android.documentsui.model.RootInfo: boolean isAudio()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onClockVisibilityChanged()>
<com.android.systemui.qs.QSTile.Host: void setCallback(com.android.systemui.qs.QSTile.Host.Callback)>
<com.android.systemui.volume.VolumeDialogController: void showDndTile(boolean)>
<com.android.server.pm.PermissionsState: com.android.server.pm.PermissionsState.PermissionState getInstallPermissionState(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onTrackingStarted()>
<com.android.server.IntentResolver: java.lang.Object filterToLabel(android.content.IntentFilter)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setNegativeButton(int,android.view.View.OnClickListener)>
<com.android.systemui.qs.QSDetailItems: void setEmptyState(int,int)>
<com.android.settingslib.wifi.AccessPoint.AccessPointListener: void onLevelChanged(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.NetworkManagementService: boolean isBandwidthControlEnabled()>
<com.android.printspooler.model.PageContentRepository: int getFilePageCount()>
<com.android.server.AppOpsService: void setUidMode(int,int,int)>
<javax.obex.ObexHelper: int findHeaderEnd(byte[],int,int)>
<com.android.server.notification.ConditionProviders.Callback: void onConditionChanged(android.net.Uri,android.service.notification.Condition)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int)>
<android.print.IPrintClient: void startPrintJobConfigActivity(android.content.IntentSender)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showUsabilityHint()>
<com.android.systemui.power.PowerNotificationWarnings: void showLowBatteryWarning(boolean)>
<com.android.systemui.egg.MLand: com.android.systemui.egg.MLand.Player getPlayer(int)>
<com.android.server.job.JobServiceContext: void jobFinished(int,boolean)>
<com.android.server.pm.PreferredComponent.Callbacks: boolean onReadTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>
<com.android.layoutlib.bridge.android.BridgeWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>
<javax.obex.Operation: void noBodyHeader()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager)>
<com.android.server.LocationManagerService: java.lang.String getNetworkProviderPackage()>
<javax.microedition.khronos.opengles.GL10: void glDepthRangex(int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void forceNoOverlappingRendering(boolean)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setAreThereNotifications()>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: int getInt(java.lang.String,int)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(java.lang.String,int,int)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: void onClick(android.view.View)>
<com.android.bluetoothmidiservice.BluetoothPacketDecoder: void <init>(int)>
<com.android.server.job.controllers.TimeController: com.android.server.job.controllers.TimeController get(com.android.server.job.JobSchedulerService)>
<com.android.server.statusbar.StatusBarManagerService: void appTransitionPending()>
<android.content.res.BridgeTypedArray: void <init>(android.content.res.BridgeResources,com.android.layoutlib.bridge.android.BridgeContext,int,boolean)>
<com.android.documentsui.RecentsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.phone.KeyguardPreviewContainer: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.server.notification.ScheduleConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.server.policy.PhoneWindowManager: int interceptMotionBeforeQueueingNonInteractive(long,int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void onActivated(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.systemui.tuner.TunerFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.server.pm.Installer: int clearUserData(java.lang.String,java.lang.String,int)>
<com.android.systemui.recents.misc.DozeTrigger: void startDozing()>
<com.android.systemui.statusbar.ExpandableView: boolean hasBottomDecor()>
<com.android.server.pm.PackageManagerService: byte[] getDefaultAppsBackup(int)>
<com.android.systemui.volume.Events.Callback: void writeEvent(long,int,java.lang.Object[])>
<com.android.uiautomator.core.UiDevice: void wakeUp()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeNameResource(int)>
<com.android.server.am.ActivityManagerService: void unregisterUidObserver(android.app.IUidObserver)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void <init>(android.content.Context)>
<com.android.server.wm.WindowManagerService: void keyguardGoingAway(boolean,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGoToKeyguard()>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationContentView getPrivateLayout()>
<com.android.systemui.recents.RecentsActivity: void onEnterAnimationTriggered()>
<com.android.server.wm.WindowManagerService: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,int[],int)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation(java.lang.Object[],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator)>
<com.android.printspooler.model.PageContentRepository.RenderSpec: boolean hasSameSize(com.android.printspooler.model.PageContentRepository.RenderedPage)>
<com.android.tools.layoutlib.create.Log: void info(java.lang.String,java.lang.Object[])>
<com.google.android.maps.MapView: int getMaxZoomLevel()>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>
<com.android.systemui.recents.model.Task: void setStackId(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumSymbols(android.content.ComponentName,int)>
<com.android.server.wallpaper.WallpaperManagerService: int getWidthHint()>
<com.android.systemui.recents.views.DebugOverlayView: void onStopTrackingTouch(android.widget.SeekBar)>
<com.android.server.pm.Installer: boolean restoreconData(java.lang.String,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glCurrentPaletteMatrixOES(int)>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: void <init>(com.android.systemui.recents.RecentsConfiguration)>
<com.android.systemui.qs.QSDetailItems: com.android.systemui.qs.QSDetailItems convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getCacheDir()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeListValue(int,java.lang.String[],int)>
<com.android.printspooler.ui.PrintActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>
<com.android.documentsui.DirectoryLoader: java.lang.String getQuerySortOrder(int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getPackageCodePath()>
<com.android.server.connectivity.Vpn: void setEnableTeardown(boolean)>
<com.android.documentsui.SectionedListAdapter: int getViewTypeCount()>
<com.android.photos.views.TiledImageRenderer: void <init>(android.view.View)>
<com.android.server.media.MediaSessionRecord: int getMaxVolume()>
<com.android.server.AssetAtlasService: void systemRunning()>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl: void setNetworkController(com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<android.view.IWindowManagerImpl: int getInitialDisplayDensity(int)>
<com.android.systemui.volume.VolumeDialog: void <init>(android.content.Context,int,com.android.systemui.volume.VolumeDialogController,com.android.systemui.statusbar.policy.ZenModeController,com.android.systemui.volume.VolumeDialog.Callback)>
<com.android.server.pm.UserManagerService: boolean isRestricted()>
<com.android.server.am.ActivityManagerService: void keyguardGoingAway(boolean,boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.wallpapercropper.CropView: void onSizeChanged(int,int,int,int)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isAutoConnectable()>
<com.android.server.notification.ZenModeHelper: int getZenMode()>
<com.android.server.InputMethodManagerService: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.BarTransitions getBarTransitions()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>
<com.android.server.policy.PhoneWindowManager: void notifyActivityDrawnForKeyguardLw()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.volume.VolumeUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.wm.WindowManagerService: void onDisplayAdded(int)>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,int[],int)>
<com.android.gallery3d.exif.ExifTag: boolean equals(java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glColorMask(boolean,boolean,boolean,boolean)>
<com.android.systemui.statusbar.policy.BluetoothController.Callback: void onBluetoothStateChange(boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOnHeightChangedListener(com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isRecentsTopMost(android.app.ActivityManager.RunningTaskInfo,android.util.MutableBoolean)>
<com.android.server.accounts.AccountManagerService: void <init>(android.content.Context,android.content.pm.PackageManager,com.android.server.accounts.IAccountAuthenticatorCache)>
<com.android.server.usb.UsbService: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>
<com.android.keyguard.KeyguardPatternView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.systemui.usb.UsbPermissionActivity: void onCreate(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.voiceinteraction.DatabaseHelper: void <init>(android.content.Context)>
<com.android.proxyhandler.ProxyServer: void stopServer()>
<com.android.server.audio.MediaFocusControl: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
<com.android.systemui.tuner.StatusBarSwitch: boolean persistBoolean(boolean)>
<com.android.server.AttributeCache.Package: void <init>(android.content.Context)>
<com.android.commands.hid.Event: java.lang.String getCommand()>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isInteractive()>
<com.android.systemui.statusbar.KeyguardIndicationController: void hideTransientIndicationDelayed(long)>
<com.android.systemui.statusbar.NotificationContentView: android.view.View getContractedChild()>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackAllTasksRemoved(com.android.systemui.recents.model.TaskStack,java.util.ArrayList)>
<android.view.IWindowManagerImpl: boolean startViewServer(int)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<com.android.server.content.SyncQueue: void <init>(android.content.pm.PackageManager,com.android.server.content.SyncStorageEngine,android.content.SyncAdaptersCache)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational[] getTagRationalValues(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>
<com.android.systemui.statusbar.CommandQueue: void animateExpandSettingsPanel()>
<com.android.documentsui.DocumentsActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void increment()>
<com.android.gallery3d.glrenderer.GLCanvas: void save(int)>
<com.android.systemui.statusbar.policy.KeyButtonView: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<com.android.systemui.recents.model.FilteredTaskList: boolean setFilter(com.android.systemui.recents.model.TaskFilter)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onManualRuleChanged(android.service.notification.ZenModeConfig.ZenRule)>
<com.android.server.display.AutomaticBrightnessController.Callbacks: void updateBrightness()>
<com.android.server.notification.ConditionProviders: void ensureRecordExists(android.content.ComponentName,android.net.Uri,android.service.notification.IConditionProvider)>
<javax.microedition.khronos.opengles.GL10: void glTranslatex(int,int,int)>
<com.android.server.job.JobServiceContext: void onServiceDisconnected(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapseQuickSettings()>
<javax.obex.ClientOperation: boolean continueOperation(boolean,boolean)>
<com.android.systemui.settings.ToggleSeekBar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.views.TaskView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean shouldGestureIgnoreXTouchSlop(float,float)>
<com.android.server.notification.RankingReconsideration: void <init>(java.lang.String,long)>
<com.android.systemui.doze.DozeLog: void tracePulseFinish()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.server.am.CompatModeDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.ApplicationInfo)>
<com.android.server.am.BatteryStatsService: byte[] getStatistics()>
<com.android.server.connectivity.Vpn: void startLegacyVpn(com.android.internal.net.VpnProfile,android.security.KeyStore,android.net.LinkProperties)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void removeNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isHeadsUp()>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.systemui.statusbar.stack.ViewState: void copyFrom(com.android.systemui.statusbar.stack.ViewState)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>
<com.android.commands.hid.Event.Reader: com.android.commands.hid.Event getNextEvent()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void powerHint(int,int)>
<com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>
<javax.obex.HeaderSet: int[] getHeaderList()>
<com.android.server.notification.SystemConditionProviderService: android.content.ComponentName getComponent()>
<com.android.server.notification.NotificationManagerService: void <init>(android.content.Context)>
<com.android.server.wm.WindowManagerService: void setOnHardKeyboardStatusChangeListener(com.android.server.wm.WindowManagerService.OnHardKeyboardStatusChangeListener)>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionAspectScaledThumb(android.graphics.Bitmap,int,int,int,int,android.os.IRemoteCallback,boolean)>
<com.android.printspooler.widget.PrintContentView: void onLayout(boolean,int,int,int,int)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setLayoutTransitionsEnabled(boolean)>
<com.android.server.am.ActivityManagerService: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOnEmptySpaceClickListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnEmptySpaceClickListener)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean startActivityFromRecents(android.content.Context,int,java.lang.String,android.app.ActivityOptions)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isDeviceIdleMode()>
<com.android.server.NetworkManagementService: com.android.server.NetworkManagementService create(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue: void buzzBeepBlinked()>
<com.android.server.SystemServiceManager: void setSafeMode(boolean)>
<com.android.systemui.qs.SignalTileView: void handleStateChanged(com.android.systemui.qs.QSTile.State)>
<com.android.systemui.recents.views.TaskViewTransform: void applyToTaskView(android.view.View,int,android.view.animation.Interpolator,boolean,boolean,android.animation.ValueAnimator.AnimatorUpdateListener)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback: void onDeviceAttributesChanged()>
<com.android.documentsui.RootsCache: java.util.Collection getMatchingRootsBlocking(com.android.documentsui.BaseActivity.State)>
<com.android.server.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setPhonebookPermissionChoice(int)>
<android.view.BridgeInflater: void postInflateProcess(android.view.View)>
<com.android.server.NetworkScoreService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: short readShort()>
<com.android.server.am.ActivityManagerService: void setPackageScreenCompatMode(java.lang.String,int)>
<com.android.documentsui.RootCursorWrapper: boolean isNull(int)>
<com.android.server.accessibility.ScreenMagnifier: void onDestroy()>
<com.android.server.DiskStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.commands.svc.WifiCommand: java.lang.String shortHelp()>
<javax.obex.Operation: java.lang.String getType()>
<android.content.res.BridgeResources: java.io.InputStream openRawResource(int,android.util.TypedValue)>
<com.android.server.job.controllers.JobStatus: void <init>(com.android.server.job.controllers.JobStatus)>
<com.android.server.IoThread: android.os.Handler getHandler()>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setIcon(java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void prepareViewToEnterPool(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.volume.VolumeComponent: com.android.systemui.statusbar.policy.ZenModeController getZenController()>
<android.view.IWindowManagerImpl: void setScreenCaptureDisabled(int,boolean)>
<com.android.commands.pm.Pm: int runListUsers()>
<com.android.server.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>
<com.android.server.NetworkScoreService: void registerNetworkScoreCache(int,android.net.INetworkScoreCache)>
<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService peekInstance()>
<com.android.server.content.ContentService: boolean isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.documentsui.model.RootInfo: boolean isRecents()>
<com.android.systemui.qs.QSTile.Callback: void onToggleStateChanged(boolean)>
<com.android.printspooler.widget.EmbeddedContentContainer: void onSizeChanged(int,int,int,int)>
<com.android.systemui.statusbar.NotificationBackgroundView: void drawableStateChanged()>
<com.android.server.firewall.IntentFirewall: boolean checkIntent(com.android.server.firewall.IntentFirewall.FirewallIntentResolver,android.content.ComponentName,int,android.content.Intent,int,int,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
<javax.microedition.khronos.opengles.GL10: void glDepthFunc(int)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.NetworkController getNetworkController()>
<com.android.server.TextServicesManagerService: void systemRunning()>
<com.android.uiautomator.core.UiDevice: void dumpWindowHierarchy(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean fullyExpandedClearAllVisible()>
<com.android.systemui.doze.DozeService: void dumpOnHandler(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap.Config getConfig()>
<com.android.proxyhandler.ProxyServer: void startServer()>
<com.android.systemui.usb.UsbPermissionActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<com.android.systemui.statusbar.policy.BluetoothController: java.lang.String getLastDeviceName()>
<com.android.systemui.statusbar.phone.PanelView: void cancelPeek()>
<com.android.settingslib.bluetooth.HeadsetProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.server.display.DisplayAdapter.Listener: void onDisplayDeviceEvent(com.android.server.display.DisplayDevice,int)>
<com.android.photos.views.TiledImageRenderer: void setModel(com.android.photos.views.TiledImageRenderer.TileSource,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setAnimationsEnabled(boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void addEmergencyListener(com.android.systemui.statusbar.policy.NetworkControllerImpl.EmergencyListener)>
<com.android.systemui.statusbar.ActivatableNotificationView: void performRemoveAnimation(long,float,java.lang.Runnable)>
<android.hardware.fingerprint.IFingerprintServiceLockoutResetCallback: void onLockoutReset(long)>
<com.android.server.pm.InstructionSets: java.lang.String[] getAppDexInstructionSets(android.content.pm.ApplicationInfo)>
<com.android.systemui.recents.RecentsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getChildLocation(android.view.View)>
<com.android.systemui.statusbar.NotificationBackgroundView: void drawableHotspotChanged(float,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: android.animation.ObjectAnimator animateTransitionTo(android.view.View,float)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.Result renderDrawable(com.android.ide.common.rendering.api.DrawableParams)>
<com.android.server.am.ActivityManagerService: void killUid(int,int,java.lang.String)>
<com.android.systemui.volume.VolumeDialogController.State: com.android.systemui.volume.VolumeDialogController.State copy()>
<com.android.systemui.statusbar.tv.TvStatusBar: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.LockSettingsService: com.android.internal.widget.VerifyCredentialResponse verifyPassword(java.lang.String,long,int)>
<com.android.systemui.statusbar.BaseStatusBar: void clearNotificationEffects()>
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<com.android.systemui.statusbar.NotificationBackgroundView: void setCustomBackground(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.server.ConnectivityService: com.android.internal.net.VpnInfo[] getAllVpnInfo()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void removeObsoletePrintJobs()>
<com.android.documentsui.ColumnAdapter: void prepare(android.widget.ListView)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isInHomeStack(int)>
<com.android.server.DeviceIdleController: int[] getAppIdTempWhitelistInternal()>
<com.android.server.notification.SystemConditionProviderService: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.policy.WifiSignalController: void <init>(android.content.Context,boolean,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivities(android.content.Intent[])>
<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.Class)>
<com.android.statementservice.retriever.AndroidPackageInfoFetcher: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: boolean isUpgrade()>
<com.android.layoutlib.bridge.BridgeRenderSession: java.awt.image.BufferedImage getImage()>
<com.android.printspooler.renderer.IPdfRenderer: int openDocument(android.os.ParcelFileDescriptor)>
<com.android.wallpapercropper.CropView: boolean onScale(android.view.ScaleGestureDetector)>
<com.android.server.media.MediaSessionService: void onSessionPlaystateChange(com.android.server.media.MediaSessionRecord,int,int)>
<com.android.server.search.SearchManagerService: void launchAssist(android.os.Bundle)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter.MethodReplacer: void replace(com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter.MethodInformation)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void onDraw(android.graphics.Canvas)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>
<com.google.android.maps.MapView: void setSatellite(boolean)>
<com.android.server.wm.WindowManagerService: void finishDrawingWindow(com.android.server.wm.Session,android.view.IWindow)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.SecurityController getSecurityController()>
<com.android.server.notification.NotificationUsageStats.Aggregate: java.lang.String toString()>
<com.android.statementservice.retriever.WebContent: java.lang.Long getExpireTimeMillis()>
<com.android.systemui.statusbar.phone.PanelView: boolean isFullyExpanded()>
<android.view.ShadowPainter: java.awt.image.BufferedImage createDropShadow(java.awt.image.BufferedImage,int,float,int)>
<com.android.gallery3d.glrenderer.UploadedTexture: void setThrottled(boolean)>
<com.android.systemui.power.PowerNotificationWarnings: void dump(java.io.PrintWriter)>
<com.android.server.policy.PolicyControl: boolean disableImmersiveConfirmation(java.lang.String)>
<com.android.systemui.statusbar.StatusBarIconView: boolean equalIcons(android.graphics.drawable.Icon,android.graphics.drawable.Icon)>
<android.view.BridgeInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceUpdated(java.lang.String,android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.layoutlib.bridge.Bridge: com.android.ninepatch.NinePatchChunk getCached9Patch(java.lang.String,java.lang.Object)>
<com.android.systemui.statusbar.ExpandableView: void setDark(boolean,boolean,long)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>
<com.android.server.DisplayThread: android.os.Handler getHandler()>
<com.android.server.job.controllers.JobStatus: int getUserId()>
<com.android.server.pm.PermissionsState: boolean hasRuntimePermission(java.lang.String,int)>
<com.android.server.job.controllers.AppIdleController: com.android.server.job.controllers.AppIdleController get(com.android.server.job.JobSchedulerService)>
<com.android.systemui.recents.views.TaskStackView: void onStackFiltered(com.android.systemui.recents.model.TaskStack,java.util.ArrayList,com.android.systemui.recents.model.Task)>
<com.android.vpndialogs.ManageDialog: void onPause()>
<com.android.gallery3d.exif.ExifInterface: void clearExif()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void cancelPreloadRecentApps()>
<com.android.uiautomator.core.UiScrollable: void <init>(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.qs.QSTile.State: java.lang.StringBuilder toStringBuilder()>
<android.animation.FakeAnimator: android.animation.Animator setDuration(long)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildUninitializedTag(int)>
<com.android.printspooler.model.RemotePrintDocument: void kill(java.lang.String)>
<com.android.uiautomator.core.UiObject: java.lang.String getPackageName()>
<com.android.server.connectivity.KeepaliveTracker: void handleStopAllKeepalives(com.android.server.connectivity.NetworkAgentInfo,int)>
<com.android.systemui.recents.views.RecentsView: void onMeasure(int,int)>
<com.android.server.NativeDaemonConnectorException: int getCode()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context getApplicationContext()>
<com.android.gallery3d.glrenderer.GLCanvas: void clearBuffer(float[])>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void setEmptyDragAmount(float)>
<com.android.systemui.recents.model.FilteredTaskList: boolean hasFilter()>
<com.android.gallery3d.glrenderer.BasicTexture: int getTextureWidth()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.HeadsetProfile getHeadsetProfile()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOn()>
<com.android.server.content.SyncOperation: boolean isNotAllowedOnMetered()>
<com.android.photos.views.BlockingGLTextureView: void finalize()>
<android.view.accessibility.IAccessibilityInteractionCallback: void setPerformAccessibilityActionResult(boolean,int)>
<com.android.systemui.statusbar.CommandQueue: void notificationLightOff()>
<com.android.commands.uiautomator.EventsCommand: java.lang.String detailedOptions()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,int[],int)>
<com.android.settingslib.bluetooth.PanProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.statusbar.phone.PanelView: float getExpandedHeight()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onOverScrolled(int,int,boolean,boolean)>
<android.content.res.BridgeResources: android.content.res.XmlResourceParser getXml(int)>
<com.android.tools.layoutlib.create.MethodListener: float onInvokeF(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.statusbar.phone.PanelView: void onAttachedToWindow()>
<com.android.server.pm.Installer: int linkNativeLibraryDirectory(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void abortCurrentGesture()>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList getAllApps()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.lang.String getName()>
<android.media.filterfw.samples.CameraEffectsRecordingSample: void onPause()>
<com.android.gallery3d.glrenderer.GLCanvas: void recoverFromLightCycle()>
<com.android.systemui.statusbar.policy.CastController: void startCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<android.net.dhcp.DhcpClient: boolean isValidPacket(android.net.dhcp.DhcpPacket)>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyPostedLocked(android.service.notification.StatusBarNotification,android.service.notification.StatusBarNotification)>
<com.android.server.am.ActivityManagerService: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>
<com.android.printspooler.widget.PrintContentView: void computeScroll()>
<com.android.layoutlib.bridge.android.BridgeContext: void <init>(java.lang.Object,android.util.DisplayMetrics,com.android.ide.common.rendering.api.RenderResources,com.android.ide.common.rendering.api.AssetRepository,com.android.ide.common.rendering.api.LayoutlibCallback,android.content.res.Configuration,int,boolean)>
<com.android.server.policy.PhoneWindowManager: boolean canBeForceHidden(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<android.view.IWindowManagerImpl: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.content.Context getContext()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setIcon(java.lang.String)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getChildTypeCount()>
<com.android.server.ConnectivityService: void reportNetworkConnectivity(android.net.Network,boolean)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeListValue(int,java.lang.String[],int)>
<com.android.server.usb.UsbService.Lifecycle: void onStart()>
<com.android.keyguard.KeyguardSecurityViewFlipper: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.documentsui.UriDerivativeLoader: void onReset()>
<com.android.tools.layoutlib.java.UnsafeByteSequence: java.lang.String toString(java.nio.charset.Charset)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void addPanel(com.android.systemui.statusbar.phone.PanelView)>
<com.android.server.job.controllers.ConnectivityController: void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void loadDimens()>
<com.android.systemui.recents.model.TaskStack: int getTaskCount()>
<com.android.systemui.statusbar.NotificationData.Entry: boolean hasJustLaunchedFullScreenIntent()>
<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onEmergencyCallAction()>
<com.android.server.wm.WindowManagerService: boolean updateRotationUncheckedLocked(boolean)>
<android.view.BridgeInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<com.android.systemui.Prefs: void unregisterListener(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void updatePreviews()>
<com.android.systemui.DessertCaseView: void start()>
<android.content.res.BridgeResources: void disposeSystem()>
<com.android.server.pm.Installer: int idmap(java.lang.String,java.lang.String,int)>
<com.android.gallery3d.exif.ExifInterface: byte[] getThumbnail()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.systemui.statusbar.phone.PanelHolder: void setSelectedPanel(com.android.systemui.statusbar.phone.PanelView)>
<com.android.systemui.statusbar.NotificationData.Entry: boolean hasInterrupted()>
<android.content.res.BridgeTypedArray: boolean getValue(int,android.util.TypedValue)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeName(int)>
<com.android.settingslib.applications.ApplicationsState: boolean haveDisabledApps()>
<javax.microedition.khronos.opengles.GL10: void glEnable(int)>
<com.android.systemui.tuner.QsTuner: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.server.notification.ConditionProviders.Callback: void onServiceAdded(android.content.ComponentName)>
<android.view.BridgeInflater: void setIsInMerge(boolean)>
<com.android.server.input.InputManagerService: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: boolean isPanelFullyCollapsed()>
<com.android.commands.hid.Event: int getId()>
<com.android.documentsui.DirectoryFragment: void showSearch(android.app.FragmentManager,com.android.documentsui.model.RootInfo,java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLetters(android.content.ComponentName,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<javax.obex.ServerRequestHandler: boolean isSrmSupported()>
<com.android.systemui.recents.views.AnimateableViewBounds: int getClipBottom()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()>
<com.android.mediadrm.signer.MediaDrmSigner.Certificate: byte[] getWrappedPrivateKey()>
<com.android.systemui.recents.RecentsAppWidgetHost.RecentsAppWidgetHostCallbacks: void refreshSearchWidgetView()>
<com.android.server.content.SyncOperation: boolean isInitialization()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitSource(java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.TaskStackViewLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(float,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform)>
<android.view.RectShadowPainter: void paintShadow(android.graphics.Outline,float,android.graphics.Canvas)>
<com.android.settingslib.applications.ApplicationsState: void invalidatePackage(java.lang.String,int)>
<com.android.server.audio.AudioService: boolean shouldVibrate(int)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onClick()>
<com.android.server.appwidget.AppWidgetService: void onBootPhase(int)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void <init>(int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor.DisplayClientState getCachedDisplayClientState()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setSystemChildExpanded(boolean)>
<com.android.systemui.recents.model.TaskStack: void <init>(int)>
<com.android.server.audio.MediaFocusControl: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>
<com.android.statementservice.retriever.AbstractAsset: com.android.statementservice.retriever.AbstractAsset create(java.lang.String)>
<com.android.settingslib.TetherUtil: boolean isProvisioningNeeded(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest: java.lang.String getDefaultUrl()>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void run(java.util.List,android.os.Bundle,boolean,boolean)>
<com.android.server.firewall.IntentFirewall: boolean checkBroadcast(android.content.Intent,int,int,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<com.android.keyguard.KeyguardStatusView: java.lang.String formatNextAlarm(android.content.Context,android.app.AlarmManager.AlarmClockInfo)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(android.graphics.Bitmap,java.io.OutputStream)>
<com.android.server.NetworkManagementService: void startInterfaceForwarding(java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardPINView: void resetState()>
<com.android.server.wallpaper.WallpaperManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(int[],int)>
<com.android.systemui.Prefs: void putLong(android.content.Context,java.lang.String,long)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getConfigName()>
<com.android.server.usage.UnixCalendar: void addYears(int)>
<com.android.systemui.statusbar.phone.PanelView: void onTrackingStarted()>
<javax.obex.HeaderSet: int getResponseCode()>
<com.android.keyguard.KeyguardPasswordView: void startAppearAnimation()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.server.NetworkManagementService: boolean isFirewallEnabled()>
<com.android.server.policy.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy.WindowManagerFuncs)>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.qs.QSTile.SignalState newTileState()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean updateSwipeProgress(android.view.View,boolean,float)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<com.android.server.usage.AppIdleHistory: void dump(com.android.internal.util.IndentingPrintWriter,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<com.android.gallery3d.exif.Rational: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glFrontFace(int)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageSizeChanged(java.lang.String)>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor querySearchDocuments(java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.qs.tiles.LocationTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.wallpaper.WallpaperManagerService: int getHeightHint()>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedHeight(float)>
<javax.microedition.khronos.opengles.GL11Ext: void glEnableClientState(int)>
<com.android.settingslib.bluetooth.MapProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawLine(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.server.audio.MediaFocusControl: void unregisterAudioFocusClient(java.lang.String)>
<com.android.server.content.ContentService: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>
<com.android.server.am.BatteryStatsService: void notePhoneDataConnectionState(int,boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isPowerSaveMode()>
<com.android.systemui.settings.ToggleSlider: void setOnChangedListener(com.android.systemui.settings.ToggleSlider.Listener)>
<com.android.server.NetworkManagementService: void setFirewallUidRule(int,int,int)>
<com.android.server.am.ActivityManagerService.Lifecycle: void onStart()>
<com.android.server.accounts.AccountManagerService: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>
<android.graphics.Matrix_Delegate: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>
<com.android.server.connectivity.KeepaliveTracker: void handleStartKeepalive(android.os.Message)>
<com.android.systemui.qs.QSTile.Callback: void onAnnouncementRequested(java.lang.CharSequence)>
<com.android.server.NativeDaemonConnectorException: java.lang.IllegalArgumentException rethrowAsParcelableException()>
<android.view.IWindowManagerImpl: void clearForcedDisplaySize(int)>
<com.android.server.notification.NotificationManagerService.DumpFilter: java.lang.String toString()>
<com.android.uiautomator.core.ShellUiAutomatorBridge: boolean isScreenOn()>
<com.android.server.audio.AudioService: void disableSafeMediaVolume(java.lang.String)>
<com.android.uiautomator.core.UiDevice: boolean swipe(int,int,int,int,int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void pokeDrawLock(android.os.IBinder)>
<com.android.documentsui.UriDerivativeLoader: void deliverResult(java.lang.Object)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.FileInputStream openFileInput(java.lang.String)>
<com.android.server.pm.UserManagerService: void makeInitialized(int)>
<com.android.server.notification.CountdownConditionProvider: android.content.ComponentName getComponent()>
<com.android.keyguard.KeyguardSecurityCallback: void reset()>
<com.android.systemui.recents.views.TaskView: boolean onLongClick(android.view.View)>
<com.android.systemui.recents.views.TaskView: void onTaskDataLoaded()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<com.android.printspooler.model.MutexFileProvider: java.io.File acquireFile(com.android.printspooler.model.MutexFileProvider.OnReleaseRequestCallback)>
<com.android.keyguard.PasswordTextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isSignedByExactly(java.lang.String,android.content.pm.KeySet)>
<javax.microedition.khronos.opengles.GL10: void glClearColor(float,float,float,float)>
<com.android.server.connectivity.KeepalivePacketData.InvalidPacketException: void <init>(int)>
<com.android.documentsui.UriDerivativeLoader: void onStartLoading()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>
<javax.obex.HeaderSet: boolean getEmptyNameHeader()>
<com.android.server.job.JobServiceContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>
<com.android.documentsui.model.RootInfo: void read(java.io.DataInputStream)>
<com.android.server.statusbar.StatusBarManagerService: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: boolean canConfigWifi()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int add(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>
<com.android.systemui.statusbar.ExpandableView: void getBoundsOnScreen(android.graphics.Rect,boolean)>
<com.android.server.pm.PackageManagerService: boolean isOnlyCoreApps()>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchStartedWakingUp()>
<com.android.server.content.ContentService: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<com.android.documentsui.RootsLoader: void onReset()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void updateEntry()>
<com.android.shell.BugreportPrefs: int getWarningState(android.content.Context,int)>
<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>
<com.android.server.display.WifiDisplayController.Listener: void onFeatureStateChanged(int)>
<com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(float[],int)>
<com.android.server.policy.WakeGestureListener: void requestWakeUpTrigger()>
<com.android.tools.layoutlib.create.Log: void setVerbose(boolean)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void addCallback(android.os.Handler.Callback)>
<com.android.uiautomator.core.UiObject: void <init>(com.android.uiautomator.core.UiSelector)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isSecure()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: void addListener(com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedInputMethodsForCurrentUser()>
<com.android.systemui.statusbar.BaseStatusBar: void userSwitched(int)>
<com.android.systemui.statusbar.BaseStatusBar: void showPreviousAffiliatedTask()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getExpandedContentView()>
<com.android.keyguard.KeyguardPatternView: void onPause()>
<com.example.android.networkusage.NetworkActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.android.server.InputMethodManagerService: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<com.android.server.statusbar.StatusBarManagerService: void topAppWindowChanged(boolean)>
<com.android.systemui.recents.model.Task: void copyFrom(com.android.systemui.recents.model.Task)>
<com.android.server.usb.UsbDeviceManager: void setCurrentFunctions(java.lang.String)>
<com.android.keyguard.KeyguardSecurityView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void instantExpand()>
<com.android.settingslib.wifi.WifiTracker: boolean isWifiEnabled()>
<com.android.server.am.ActivityManagerService: void batterySendBroadcast(android.content.Intent)>
<com.android.server.NetworkManagementService: void disableIpv6(java.lang.String)>
<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistExceptIdleAppInternal(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void animateHideLeftRightIcon()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: void addServiceListener(com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: void <init>(com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.stack.NotificationStackScrollLayout,com.android.systemui.statusbar.phone.NotificationPanelView)>
<android.content.res.BridgeTypedArray: boolean getBoolean(int,boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.ide.common.rendering.api.ResourceReference resolveId(int)>
<javax.microedition.khronos.opengles.GL10: void glDrawElements(int,int,int,java.nio.Buffer)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void clearBuffer(float[])>
<android.content.res.BridgeResources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)>
<com.android.server.location.GpsLocationProvider: int getStatus(android.os.Bundle)>
<com.android.server.notification.ZenModeFiltering: boolean isCall(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.phone.PanelBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.BatteryStatsService: long computeChargeTimeRemaining()>
<com.android.server.pm.PackageManagerService: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.view.IWindowManagerImpl: boolean hasNavigationBar()>
<com.android.server.pm.LauncherAppsService: void onStart()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setMatchParent(android.view.View)>
<com.android.systemui.statusbar.policy.NetworkController.IconState: void <init>(boolean,int,java.lang.String)>
<com.android.server.input.InputManagerService: void <init>(android.content.Context)>
<com.android.tools.layoutlib.create.AsmGenerator: void generate()>
<com.android.server.accounts.AccountManagerService: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getDefaultBrowserPackageName(int)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationExpansionChanged(java.lang.String,boolean,boolean)>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context)>
<com.android.uiautomator.core.Configurator: long getWaitForIdleTimeout()>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.CastController getCastController()>
<com.android.server.usb.UsbDeviceManager: boolean isFunctionEnabled(java.lang.String)>
<com.android.server.audio.AudioService: void systemReady()>
<com.android.server.firewall.IntentFirewall.AMSInterface: java.lang.Object getAMSLock()>
<com.android.server.usb.UsbPortManager: void systemReady()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>
<com.android.gallery3d.glrenderer.GLCanvas: boolean unloadTexture(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<com.android.systemui.assist.AssistManager: void launchVoiceAssistFromKeyguard()>
<com.android.settingslib.bluetooth.HidProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.assist.AssistOrbView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.PanelView: void onLayout(boolean,int,int,int,int)>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable loadMimeIcon(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.documentsui.DocumentsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.documentsui.FilteringCursorWrapper: short getShort(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchBootCompleted()>
<com.android.tools.layoutlib.java.LinkedHashMap_Delegate: java.util.Map.Entry eldest(java.util.LinkedHashMap)>
<javax.obex.ServerSession: void run()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.systemui.statusbar.stack.StackStateAnimator: int getFinalActualHeight(com.android.systemui.statusbar.ExpandableView)>
<com.android.server.audio.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.stack.StackIndentationFunctor: void setDistanceToPeekStart(int)>
<com.android.statementservice.retriever.AbstractStatementRetriever.Result: long getExpireMillis()>
<com.android.server.statusbar.StatusBarManagerService: void disable(int,android.os.IBinder,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean,android.graphics.drawable.Drawable.Callback)>
<com.android.server.policy.PolicyControl: int getSystemUiVisibility(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String[] databaseList()>
<com.android.documentsui.model.RootInfo: int hashCode()>
<com.android.documentsui.model.Durable: void reset()>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getCenterIcon()>
<com.android.server.wm.DimLayer: void printTo(java.lang.String,java.io.PrintWriter)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void notifyPendingSystemUpdate(long)>
<com.android.documentsui.RootsCache: com.android.documentsui.model.RootInfo getRootOneshot(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean canChildBeDismissed(android.view.View)>
<com.android.server.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)>
<com.android.settingslib.wifi.AccessPoint: android.net.NetworkInfo getNetworkInfo()>
<com.android.statementservice.retriever.AbstractStatementRetriever: com.android.statementservice.retriever.AbstractStatementRetriever createDirectRetriever(android.content.Context)>
<com.android.server.media.MediaSessionRecord: void <init>(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String,com.android.server.media.MediaSessionService,android.os.Handler)>
<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>
<com.android.systemui.recents.model.TaskGrouping: void <init>(int)>
<com.android.server.am.BatteryStatsService: void noteWifiOn()>
<com.android.server.Watchdog.HandlerChecker: void run()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result inflate()>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionScaleUp(int,int,int,int)>
<com.android.server.pm.PermissionsState: int getPermissionFlags(java.lang.String,int)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isUploading()>
<com.android.server.audio.AudioService: void setMasterMute(boolean,int,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,int,int,int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupExpansionChanged(com.android.systemui.statusbar.ExpandableNotificationRow,boolean)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void removeStateChangedCallback(android.os.Handler.Callback)>
<com.android.layoutlib.bridge.Bridge: void clearCaches(java.lang.Object)>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.util.SparseArray getAllStackInfos()>
<com.android.systemui.qs.QSTile.Callback: void onScanStateChanged(boolean)>
<com.android.server.pm.PackageManagerService: void resetRuntimePermissions()>
<com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback: void onRotationLockStateChanged(boolean,boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,int,int,int,int)>
<com.android.uiautomator.core.UiDevice: boolean openNotification()>
<com.android.server.InputMethodManagerService: void removeClient(com.android.internal.view.IInputMethodClient)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToBeginning(int,int)>
<com.android.systemui.qs.tiles.HotspotTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.recents.model.Task: void setGroup(com.android.systemui.recents.model.TaskGrouping)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitchComplete(int)>
<com.android.keyguard.CarrierText: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: void addPackageToPreferred(java.lang.String)>
<com.google.android.maps.MapView: boolean canCoverCenter()>
<com.android.server.am.ActivityManagerService: void installSystemProviders()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateResources()>
<com.android.server.input.InputApplicationHandle: void finalize()>
<com.android.server.accounts.AccountManagerService: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>
<com.android.server.telecom.TelecomLoaderService: void onStart()>
<com.android.server.NativeDaemonEvent: com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String)>
<com.android.keyguard.KeyguardHostView: void startAppearAnimation()>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.connectivity.KeepaliveTracker: void startNattKeepalive(com.android.server.connectivity.NetworkAgentInfo,int,android.os.Messenger,android.os.IBinder,java.lang.String,int,java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void applyTint(android.view.View,int)>
<com.android.systemui.volume.MediaSessions: void onActiveSessionsUpdatedH(java.util.List)>
<com.android.server.AppOpsService.Callback: void <init>(com.android.internal.app.IAppOpsCallback)>
<com.android.ims.ImsSuppServiceNotification: java.lang.String toString()>
<com.android.server.wm.WindowManagerService: void stopAppFreezingScreen(android.os.IBinder,boolean)>
<android.content.res.BridgeTypedArray: boolean hasValueOrEmpty(int)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterf(int,float)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,android.os.UserHandle)>
<android.view.AttachInfo_Accessor: void dispatchOnPreDraw(android.view.View)>
<com.android.layoutlib.bridge.android.BridgeContext: void addCookie(java.lang.Object,java.lang.Object)>
<com.android.systemui.statusbar.phone.PanelBar: void panelScrimMinFractionChanged(float)>
<com.android.gallery3d.exif.ExifInterface: boolean setCompressedThumbnail(android.graphics.Bitmap)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: int size()>
<com.android.systemui.volume.VolumeDialogController: void vibrate()>
<com.android.systemui.assist.AssistDisclosure: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.recents.misc.NamedCounter: void <init>(java.lang.String,java.lang.String)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void addDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setChronometerRunning(boolean)>
<com.android.systemui.statusbar.NotificationContentView: void setHeadsUp(boolean)>
<com.android.systemui.statusbar.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.server.pm.UserManagerService: int getCredentialOwnerProfile(int)>
<com.android.server.am.BatteryStatsService: void notePackageUninstalled(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setNavigationIconHints(int,boolean)>
<com.android.photos.SimpleBitmapRegionDecoder: int getHeight()>
<com.android.systemui.recents.misc.DozeTrigger: void poke()>
<com.android.systemui.statusbar.phone.StatusBarHeaderView: void setExpanded(boolean)>
<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int interceptMotionBeforeQueueingNonInteractive(long,int)>
<com.android.systemui.recents.Recents: void cancelPreloadingRecents()>
<com.android.printspooler.ui.PageAdapter: void onPreviewAreaSizeChanged()>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: long getLong(java.lang.String,long)>
<com.android.server.policy.BarController: int updateVisibilityLw(boolean,int,int)>
<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>
<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>
<com.android.server.job.controllers.JobStatus: boolean isReady()>
<com.android.systemui.statusbar.NotificationGuts: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onScreenTurnedOn()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onFinishInflate()>
<com.android.wallpapercropper.CropView.TouchCallback: void onTap()>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>
<com.android.location.provider.FusedLocationHardware: void requestBatchOfLocations(int)>
<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo[] getDevices()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setDark(boolean,boolean,long)>
<com.android.systemui.statusbar.BaseStatusBar: void logNotificationExpansion(java.lang.String,boolean,boolean)>
<com.android.gallery3d.exif.ExifInterface: void readExif(byte[])>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: boolean hasPreferredData(java.lang.Object,java.lang.Object)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedWakingUp()>
<com.android.server.policy.PhoneWindowManager: void removeStartingWindow(android.os.IBinder,android.view.View)>
<com.android.systemui.statusbar.NotificationGuts: void setClipTopAmount(int)>
<com.android.systemui.qs.QSPanel: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchGetNewSurface()>
<com.android.server.job.JobStore: com.android.server.job.controllers.JobStatus getJobByUidAndJobId(int,int)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void removeSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySetExactly(java.lang.String,android.content.pm.KeySet)>
<com.android.keyguard.KeyguardHostView: void reset()>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result render(long,boolean)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getEventType()>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateDimmed()>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableBluetoothRegexs()>
<com.android.systemui.qs.tiles.DndTile: void setCombinedIcon(android.content.Context,boolean)>
<com.android.server.am.BatteryStatsService: void noteConnectivityChanged(int,java.lang.String)>
<com.android.systemui.statusbar.phone.BarTransitions: void <init>(android.view.View,int)>
<com.android.server.IntentResolver: java.util.Iterator filterIterator()>
<javax.obex.ClientSession: javax.obex.Operation put(javax.obex.HeaderSet)>
<com.android.server.TextServicesManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.documentsui.DocumentsActivity: void setRootsDrawerOpen(boolean)>
<com.android.server.accounts.AccountManagerService: boolean removeSharedAccountAsUser(android.accounts.Account,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateStackScrollerState(boolean)>
<com.android.server.pm.PackageManagerService: void shutdown()>
<com.android.systemui.recents.views.SwipeHelper.Callback: void onDragCancelled(android.view.View)>
<com.android.server.am.BatteryStatsService: void shutdown()>
<com.android.systemui.statusbar.NotificationContentView: boolean hasOverlappingRendering()>
<com.android.systemui.volume.MediaSessions.Callbacks: void onRemoteVolumeChanged(android.media.session.MediaSession.Token,int)>
<com.android.server.hdmi.HdmiCecMessageValidator.ParameterValidator: int isValid(byte[])>
<com.android.server.wallpaper.WallpaperManagerService: java.lang.String getName()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceOwnerName()>
<com.android.printspooler.ui.PrintErrorFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showRecents(boolean)>
<com.android.server.policy.WindowOrientationListener: void onProposedRotationChanged(int)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void startStackAnimations(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.StackViewState,com.android.systemui.statusbar.stack.StackScrollState,int,long)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.FlashlightController getFlashlightController()>
<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean fitSystemWindows(android.graphics.Rect)>
<com.android.systemui.qs.QSTile: boolean supportsDualTargets()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.server.AppOpsService: void setAudioRestriction(int,int,int,int,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContext: java.util.Map getDefaultPropMap(java.lang.Object)>
<com.android.server.VibratorService: void cancelVibrate(android.os.IBinder)>
<com.android.server.notification.ZenModeHelper: android.app.NotificationManager.Policy getNotificationPolicy()>
<com.android.server.am.ActivityManagerService: void showSafeModeOverlay()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onShowingStateChanged(boolean)>
<javax.microedition.khronos.opengles.GL11: void glBufferData(int,int,java.nio.Buffer,int)>
<com.android.server.DeviceIdleController: boolean addPowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: boolean onDraggedDown(android.view.View,int)>
<com.android.systemui.statusbar.stack.AmbientState: void setMaxHeadsUpTranslation(float)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setLongPressListener(com.android.systemui.SwipeHelper.LongPressListener)>
<com.android.documentsui.DocumentsActivity: void onDocumentsPicked(java.util.List)>
<com.android.server.AnyMotionDetector.DeviceIdleCallback: void onAnyMotionResult(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.OnHeadsUpChangedListener: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.volume.VolumeDialogController: void userActivity()>
<com.android.server.notification.NotificationRecord: int getPackagePriority()>
<com.android.server.statusbar.StatusBarManagerInternal: void buzzBeepBlinked()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getMessagePermissionChoice()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.server.notification.ScheduleConditionProvider: void onDestroy()>
<com.android.server.wallpaper.WallpaperManagerService: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String)>
<com.android.systemui.statusbar.policy.DeadZone: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.volume.VolumeComponent: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>
<com.android.location.fused.FusionEngine: void init(com.android.location.fused.FusionEngine.Callback)>
<com.android.server.connectivity.Vpn: int getNetId()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.documentsui.RootsFragment: void onCurrentRootChanged()>
<com.android.server.tv.TvInputHal.Callback: void onFirstFrameCaptured(int,int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isKeyguardSecure()>
<com.android.systemui.doze.DozeHost.Callback: void onNewNotifications()>
<com.android.systemui.qs.QSPanel: void <init>(android.content.Context)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setScrollAcknowledgmentTimeout(long)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void save(int)>
<com.android.keyguard.KeyguardHostView: void userActivity()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<com.android.server.audio.AudioService: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
<com.android.systemui.statusbar.policy.MobileDataControllerImpl.Callback: void onMobileDataEnabled(boolean)>
<com.android.keyguard.KeyguardSecurityContainer: void startAppearAnimation()>
<com.android.documentsui.model.DocumentStack: void updateDocuments(android.content.ContentResolver)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void goToFullShade(long)>
<com.android.server.connectivity.NetworkDiagnostics: void waitForMeasurements()>
<com.android.server.NetworkManagementService: void removeInterfaceAlert(java.lang.String)>
<com.android.server.notification.ZenModeHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean)>
<com.android.server.am.ActivityManagerService: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<com.android.documentsui.DirectoryFragment: com.android.documentsui.DirectoryFragment get(android.app.FragmentManager)>
<com.android.server.notification.CalendarTracker: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.trust.TrustAgentWrapper: void onDeviceLocked()>
<com.android.server.media.RemoteDisplayProviderWatcher.Callback: void removeProvider(com.android.server.media.RemoteDisplayProviderProxy)>
<com.android.server.policy.EnableAccessibilityController: void <init>(android.content.Context,java.lang.Runnable)>
<com.android.server.notification.NotificationUsageStats: void <init>(android.content.Context)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter: void <init>(org.objectweb.asm.ClassVisitor,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean packageHasActiveAdmins(java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
<com.android.server.pm.UserManagerService: long getUserCreationTime(int)>
<com.android.uiautomator.core.UiDevice: boolean pressSearch()>
<com.android.media.remotedisplay.RemoteDisplay: int getVolume()>
<com.android.systemui.volume.SafetyWarningDialog: void onStart()>
<com.android.gallery3d.glrenderer.BitmapTexture: void onFreeBitmap(android.graphics.Bitmap)>
<com.android.keyguard.KeyguardPasswordView: void afterTextChanged(android.text.Editable)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardVisibilityChangedRaw(boolean)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean hasGroupChildren(android.service.notification.StatusBarNotification)>
<javax.obex.ObexTransport: java.io.DataInputStream openDataInputStream()>
<com.android.layoutlib.bridge.bars.StatusBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.LocationManagerService: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void animateOverScrollToAmount(float,boolean,boolean)>
<android.media.filterfw.samples.CameraEffectsRecordingSample: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.volume.Events.Callback: void writeState(long,com.android.systemui.volume.VolumeDialogController.State)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>
<com.android.uiautomator.core.UiObject: boolean swipeLeft(int)>
<com.android.gallery3d.exif.ExifInterface: boolean isTagCountDefined(int)>
<com.android.uiautomator.core.UiDevice: boolean takeScreenshot(java.io.File,float,int)>
<com.android.providers.settings.SettingsProvider: java.lang.String getType(android.net.Uri)>
<com.android.server.LocationManagerService: void removeGpsStatusListener(android.location.IGpsStatusListener)>
<com.android.uiautomator.core.UiDevice: void waitForIdle()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map)>
<com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener: void onReset(com.android.systemui.statusbar.ExpandableView)>
<com.android.gallery3d.exif.ExifTag: java.lang.String getValueAsString()>
<android.graphics.PathDashPathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.ExpandHelper.Callback: com.android.systemui.statusbar.ExpandableView getChildAtPosition(float,float)>
<com.android.server.location.LocationBasedCountryDetector: long getQueryLocationTimeout()>
<com.android.documentsui.CopyService: void start(android.content.Context,java.util.List,com.android.documentsui.model.DocumentStack)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onSwipingStarted(boolean)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onLoadEntriesCompleted()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onBootCompleted()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void handleVisibleToUserChanged(boolean)>
<com.android.server.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<com.android.documentsui.UriDerivativeLoader: void <init>(android.content.Context,java.lang.Object)>
<com.android.documentsui.RecentsProvider: boolean onCreate()>
<com.android.documentsui.model.DocumentInfo: com.android.documentsui.model.DocumentInfo fromUri(android.content.ContentResolver,android.net.Uri)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFrameWidth(float)>
<com.android.server.policy.PhoneWindowManager: boolean inKeyguardRestrictedKeyInputMode()>
<com.android.printspooler.model.PageContentRepository: void startPreload(int,int)>
<com.android.server.content.SyncManager: int getIsSyncable(android.accounts.Account,int,java.lang.String)>
<com.android.server.location.LocationProviderProxy: int getStatus(android.os.Bundle)>
<android.view.IWindowManagerImpl: void getInitialDisplaySize(int,android.graphics.Point)>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.documentsui.RootCursorWrapper: int getInt(int)>
<com.android.server.notification.SystemConditionProviderService: java.lang.String formatDuration(long)>
<com.android.server.job.controllers.BatteryController.ChargingTracker: void onReceiveInternal(android.content.Intent)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitLdcInsn(java.lang.Object)>
<com.android.photos.views.TiledImageView: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void unregisterCallback(com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback)>
<com.android.server.wm.WindowManagerService: void startFreezingScreen(int,int)>
<com.android.server.midi.MidiService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.SwipeHelper.Callback: boolean canChildBeDismissed(android.view.View)>
<com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],android.print.PageRange[],int)>
<javax.microedition.khronos.egl.EGL10: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.os.ParcelUuid[] getUuids()>
<com.android.systemui.statusbar.phone.UserAvatarView: void configureBounds()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void onOverScrolled(int,int,boolean,boolean)>
<com.android.systemui.statusbar.SpeedBumpView: void onLayout(boolean,int,int,int,int)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: com.android.server.notification.ManagedServices.Config getConfig()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void removePermission(java.lang.String)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<com.android.server.audio.AudioService: java.lang.String makeAlsaAddressString(int,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dismissWithAction(com.android.keyguard.KeyguardHostView.OnDismissAction,java.lang.Runnable,boolean)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getProfileOwnerName()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: int getBottomStackSlowDownLength()>
<com.android.server.connectivity.PermissionMonitor: void <init>(android.content.Context,android.os.INetworkManagementService)>
<com.android.systemui.statusbar.BackDropView: boolean hasOverlappingRendering()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurnedOff()>
<com.android.server.media.projection.MediaProjectionManagerService: void onStart()>
<com.android.systemui.statusbar.ExpandableView: int getClipTopOptimization()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onTrackingStopped(boolean)>
<com.android.systemui.statusbar.NotificationData: boolean showNotificationEvenIfUnprovisioned(android.service.notification.StatusBarNotification)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>
<javax.obex.ClientOperation: void close()>
<javax.obex.ObexHelper: byte[] getTagValue(byte,byte[])>
<com.android.gallery3d.glrenderer.GLCanvas: float getAlpha()>
<com.android.systemui.statusbar.policy.SignalController: void saveLastState()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isShowing()>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.LocalBluetoothProfile getProfileByName(java.lang.String)>
<com.android.location.provider.LocationProviderBase: void onEnable()>
<com.android.gallery3d.util.IntArray: int[] getInternalArray()>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.service.notification.StatusBarNotification getStatusBarNotification()>
<android.graphics.Paint_Delegate: float getJavaStrokeMiter()>
<com.android.systemui.egg.MLand: void onSizeChanged(int,int,int,int)>
<com.android.server.wallpaper.WallpaperManagerService: void systemRunning()>
<com.android.systemui.recents.misc.SystemServicesProxy: android.appwidget.AppWidgetProviderInfo getOrBindSearchAppWidget(android.content.Context,android.appwidget.AppWidgetHost)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void updateResources()>
<com.android.server.content.SyncStorageEngine: void removeStatusChangeListener(android.content.ISyncStatusObserver)>
<com.android.location.provider.ActivityRecognitionEvent: long getTimestampNs()>
<android.content.res.BridgeResources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
<com.android.systemui.statusbar.tv.TvStatusBar: boolean shouldDisableNavbarGestures()>
<com.android.server.midi.MidiService: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>
<com.android.systemui.statusbar.NotificationContentView: void setClipTopAmount(int)>
<com.android.server.ConnectivityService: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>
<com.android.systemui.recents.Recents: void showPrevAffiliatedTask()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitInnerClassType(java.lang.String)>
<com.android.server.am.ActivityManagerService: void startLockTaskMode(android.os.IBinder)>
<javax.obex.ServerRequestHandler: long getConnectionId()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByInstance(com.android.uiautomator.core.UiSelector,int)>
<com.android.keyguard.ViewMediatorCallback: void playTrustedSound()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int)>
<com.android.systemui.doze.DozeLog: void traceScreenOff(int)>
<com.android.server.ConnectivityService: com.android.internal.net.VpnConfig getVpnConfig(int)>
<com.android.server.AppOpsService: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focused(boolean)>
<com.android.systemui.doze.DozeLog: void dump(java.io.PrintWriter)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean resolveThemeAttribute(int,android.util.TypedValue,boolean)>
<com.android.systemui.recents.model.TaskGrouping: com.android.systemui.recents.model.Task.TaskKey getPrevTaskInGroup(com.android.systemui.recents.model.Task)>
<com.android.location.provider.FusedLocationHardwareSink: void onDiagnosticDataAvailable(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: java.util.List getTagsForTagId(short)>
<com.android.systemui.statusbar.NotificationOverflowContainer: com.android.systemui.statusbar.NotificationOverflowIconsView getIconsView()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadLeft()>
<com.android.gallery3d.glrenderer.GLCanvas: void dumpStatisticsAndClear()>
<com.android.server.content.SyncOperation: java.lang.String toKey(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle)>
<android.graphics.BlendComposite: android.graphics.BlendComposite getInstance(android.graphics.BlendComposite.BlendingMode)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getPackageResourcePath()>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.systemui.statusbar.SignalClusterView: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.systemui.recents.views.SwipeHelper.Callback: void onChildDismissed(android.view.View)>
<com.android.server.pm.PackageKeySetData: void removeAllUpgradeKeySets()>
<com.android.providers.settings.SettingsBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.server.am.LockTaskNotify: void show(boolean)>
<com.android.server.pm.PermissionsState: java.util.List getRuntimePermissionStates(int)>
<com.android.printspooler.ui.FusedPrintersProvider: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void onTransition(int,int,boolean)>
<com.android.server.pm.SELinuxMMAC: boolean readInstallPolicy()>
<com.android.uiautomator.testrunner.UiAutomatorInstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()>
<com.android.settingslib.wifi.AccessPoint: int compareTo(com.android.settingslib.wifi.AccessPoint)>
<com.android.uiautomator.core.UiScrollable: boolean scrollBackward(int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<com.android.server.pm.UserManagerService: android.os.ParcelFileDescriptor getUserIcon(int)>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelPeeked()>
<android.view.Display.ColorTransform: int getId()>
<com.android.server.notification.ConditionProviders: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.usb.UsbHostManager: void setCurrentSettings(com.android.server.usb.UsbSettingsManager)>
<com.android.server.policy.BarController: boolean wasRecentlyTranslucent()>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: int getWidth()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserCanSkipBouncer(int)>
<com.android.tools.layoutlib.create.DependencyFinder: void printAllDeps(java.util.List)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(byte[],java.lang.String)>
<com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener: void onPrintersChanged(java.util.List)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getProfileVpnName()>
<com.android.server.pm.IntentFilterVerificationState: boolean setVerifierResponse(int,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setQsExpanded(boolean)>
<com.android.uiautomator.core.UiDevice: android.graphics.Point getDisplaySizeDp()>
<com.android.systemui.statusbar.stack.AmbientState: boolean isHideSensitive()>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.graphics.drawable.Drawable getDrawable(com.android.ide.common.rendering.api.ResourceValue,com.android.layoutlib.bridge.android.BridgeContext)>
<javax.microedition.khronos.opengles.GL10: void glLightx(int,int,int)>
<com.android.server.pm.KeySetManagerService: void assertScannedPackageValid(android.content.pm.PackageParser.Package)>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<com.android.systemui.recents.views.RecentsView: com.android.systemui.recents.model.Task getNextTaskOrTopTask(com.android.systemui.recents.model.Task)>
<com.android.server.BatteryService: void onBootPhase(int)>
<com.android.systemui.ExpandHelper.Callback: com.android.systemui.statusbar.ExpandableView getChildAtRawPosition(float,float)>
<com.android.server.hdmi.HdmiCecMessage: void <init>(int,int,int,byte[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingTopOverscroll(float,boolean)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getName()>
<com.android.keyguard.KeyguardPatternView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.server.policy.PolicyControl: int getWindowFlags(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<com.android.server.policy.PhoneWindowManager: void finishedWakingUp()>
<com.android.server.pm.PackageManagerService: boolean hasSystemUidErrors()>
<com.android.systemui.statusbar.policy.UserInfoController: void <init>(android.content.Context)>
<com.android.systemui.volume.SegmentedButtons: void setCallback(com.android.systemui.volume.SegmentedButtons.Callback)>
<com.android.systemui.volume.MediaSessions: void dump(java.io.PrintWriter)>
<com.android.server.am.ActivityManagerService: void getProcessStatesForPIDs(int[],int[])>
<com.android.systemui.qs.tiles.FlashlightTile: void setListening(boolean)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary(android.content.Context,android.net.NetworkInfo.DetailedState,boolean,java.lang.String)>
<com.android.settingslib.wifi.AccessPoint: java.lang.CharSequence getSsid()>
<com.android.uiautomator.testrunner.IAutomationSupport: void sendStatus(int,android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.Resources getResources()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils,com.android.systemui.statusbar.phone.StatusBarWindowManager,android.view.ViewGroup)>
<com.android.server.input.InputManagerService: void updatePointerSpeedFromSettings()>
<com.android.documentsui.PickFragment: void setPickTarget(int,com.android.documentsui.model.DocumentInfo)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setContentRoot(android.widget.FrameLayout)>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,java.nio.IntBuffer)>
<com.android.systemui.qs.QSTile.H: void handleMessage(android.os.Message)>
<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes getAudioAttributes()>
<com.android.server.fingerprint.FingerprintService: void handleAcquired(long,int)>
<com.android.server.LockSettingsService: boolean havePattern(int)>
<com.android.server.notification.ScheduleConditionProvider: android.service.notification.IConditionProvider asInterface()>
<javax.obex.ObexHelper: int findTag(byte,byte[])>
<com.android.systemui.recents.model.TaskStack: void unfilterTasks()>
<com.android.systemui.recents.views.ViewAnimation.TaskViewEnterContext: void <init>(com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.view.Display.ColorTransform: boolean equals(java.lang.Object)>
<com.android.server.accessibility.AccessibilityManagerService: void removeAccessibilityInteractionConnection(android.view.IWindow)>
<com.android.systemui.recents.views.FixedSizeImageView: void requestLayout()>
<com.android.server.pm.PackageInstallerSession: boolean isPrepared()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setActivatedChild(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.server.connectivity.Nat464Xlat: boolean requiresClat(com.android.server.connectivity.NetworkAgentInfo)>
<com.android.server.fingerprint.FingerprintService: long startPreEnroll(android.os.IBinder)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,int[],int)>
<com.android.systemui.egg.MLandActivity: void playerMinus(android.view.View)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setKeyguardDisabledFeatures(android.content.ComponentName,int)>
<com.android.server.pm.PackageManagerService: void installPackage(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String)>
<com.android.systemui.egg.MLand: void startPlaying()>
<android.text.OptimizingLineBreaker: void computeBreaks(android.text.StaticLayout.LineBreaks)>
<com.android.systemui.recents.model.RecentsPackageMonitor: boolean onPackageChanged(java.lang.String,int,java.lang.String[])>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onDreamingStarted()>
<com.android.server.notification.EventConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: int getIcon(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.audio.AudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean)>
<com.android.documentsui.FilteringCursorWrapper: boolean onMove(int,int)>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.Point getDefaultWallpaperSize(android.content.res.Resources,android.view.WindowManager)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>
<com.android.photos.views.TiledImageRenderer: void notifyModelInvalidated()>
<javax.obex.PasswordAuthentication: void <init>(byte[],byte[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAnimationToSideEnded()>
<com.android.systemui.statusbar.tv.TvStatusBar: void notificationLightPulse(int,int,int)>
<android.util.BridgeXmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser,com.android.layoutlib.bridge.android.BridgeContext,boolean)>
<com.android.settingslib.bluetooth.BluetoothDeviceFilter: com.android.settingslib.bluetooth.BluetoothDeviceFilter.Filter getFilter(int)>
<com.android.nfc_extras.EeListenModeException: void <init>(java.lang.String)>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>
<com.android.settingslib.applications.InterestingConfigChanges: boolean applyNewConfig(android.content.res.Resources)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: com.android.location.provider.ActivityRecognitionProviderWatcher getInstance()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.documentsui.SaveFragment: void setReplaceTarget(com.android.documentsui.model.DocumentInfo)>
<com.android.keyguard.KeyguardPatternView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.location.provider.GmsFusedBatchOptions: float getSmallestDisplacementMeters()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.systemui.statusbar.DismissView: void setOnButtonClickListener(android.view.View.OnClickListener)>
<com.android.printspooler.model.PrintSpoolerProvider: void destroy()>
<com.android.server.ConnectivityService: boolean isTetheringSupported()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintAuthenticated(int)>
<com.android.systemui.statusbar.policy.SignalController: void notifyListenersIfNecessary()>
<com.android.uiautomator.core.UiScrollable: boolean ensureFullyVisible(com.android.uiautomator.core.UiObject)>
<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.keyguard.PasswordTextView: void deleteLastChar()>
<javax.obex.ServerOperation: void ensureNotDone()>
<com.android.settingslib.TetherUtil: boolean setWifiTethering(boolean,android.content.Context)>
<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobTag(android.print.PrintJobId,java.lang.String)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void onGroupExpanded(int)>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcAdapterExtras get(android.nfc.NfcAdapter)>
<com.android.commands.svc.DataCommand: java.lang.String shortHelp()>
<com.android.keyguard.KeyguardSecurityView: void startAppearAnimation()>
<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>
<android.graphics.ComposePathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.server.notification.ZenLog: void traceDisableEffects(com.android.server.notification.NotificationRecord,java.lang.String)>
<com.android.systemui.usb.UsbResolverActivity: boolean onTargetSelected(com.android.internal.app.ResolverActivity.TargetInfo,boolean)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<com.android.server.LocationManagerService: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>
<com.android.server.voiceinteraction.SoundTriggerHelper: void onRecognition(android.hardware.soundtrigger.SoundTrigger.RecognitionEvent)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setHeadsUpShowing(boolean)>
<com.android.systemui.qs.tiles.IntentTile: com.android.systemui.qs.QSTile create(com.android.systemui.qs.QSTile.Host,java.lang.String)>
<com.android.documentsui.RootCursorWrapper: int getType(int)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.KeyguardPINView: void showUsabilityHint()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingPermission(java.lang.String)>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSaveExceptIdle()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.KeyguardMonitor,android.os.Handler)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackage(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getInstalledPackages(int,int)>
<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityEvent executeCommandAndWaitForAccessibilityEvent(java.lang.Runnable,android.app.UiAutomation.AccessibilityEventFilter,long)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setIsExpanded(boolean)>
<com.android.server.am.BatteryStatsService: void noteFlashlightOff(int)>
<com.android.server.content.SyncStorageEngine.EndPoint: void <init>(android.content.ComponentName,int)>
<com.android.commands.hid.Event: int getProductId()>
<com.android.systemui.qs.QSTile: void handleUpdateState(com.android.systemui.qs.QSTile.State,java.lang.Object)>
<com.android.backupconfirm.BackupRestoreConfirmation: java.lang.Object onRetainNonConfigurationInstance()>
<com.android.server.location.LocationBasedCountryDetector: void unregisterListener(android.location.LocationListener)>
<com.android.documentsui.DocumentsApplication: android.content.ContentProviderClient acquireUnstableProviderOrThrow(android.content.ContentResolver,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Long getTagLongValue(int)>
<com.android.systemui.qs.QSPanel: void onMeasure(int,int)>
<com.android.server.am.DumpHeapProvider: boolean onCreate()>
<com.android.systemui.statusbar.CommandQueue: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<com.android.server.location.GeofenceState: int processLocation(android.location.Location)>
<com.android.keyguard.KeyguardPatternView: void reset()>
<com.android.systemui.statusbar.policy.PreviewInflater: android.view.View inflatePreviewFromService(android.content.ComponentName)>
<android.view.WindowCallback: void onDetachedFromWindow()>
<com.android.server.MasterClearReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.uiautomator.core.UiDevice: boolean pressMenu()>
<com.android.systemui.statusbar.stack.AmbientState: com.android.systemui.statusbar.ExpandableNotificationRow getTopHeadsUpEntry()>
<javax.obex.ClientOperation: javax.obex.HeaderSet getReceivedHeader()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: int getConnectedWifiLevel()>
<com.android.nfc_extras.NfcExecutionEnvironment: void open()>
<com.android.server.ServiceWatcher: void switchUser()>
<com.android.systemui.statusbar.phone.QSTileHost: java.util.List loadTileSpecs(java.lang.String)>
<com.android.documentsui.MimePredicate: boolean apply(com.android.documentsui.model.DocumentInfo)>
<com.android.systemui.recents.Recents: void setCallback(com.android.systemui.RecentsComponent.Callbacks)>
<android.net.util.IpUtils: short udpChecksum(java.nio.ByteBuffer,int,int)>
